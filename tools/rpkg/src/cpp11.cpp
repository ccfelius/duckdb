// Generated by cpp11: do not edit by hand
// clang-format off

#include "duckdb_types.hpp"
#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// connection.cpp
duckdb::conn_eptr_t rapi_connect(duckdb::db_eptr_t db);
extern "C" SEXP _duckdb_rapi_connect(SEXP db) {
  BEGIN_CPP11
    return cpp11::as_sexp(rapi_connect(cpp11::as_cpp<cpp11::decay_t<duckdb::db_eptr_t>>(db)));
  END_CPP11
}
// connection.cpp
void rapi_disconnect(duckdb::conn_eptr_t conn);
extern "C" SEXP _duckdb_rapi_disconnect(SEXP conn) {
  BEGIN_CPP11
    rapi_disconnect(cpp11::as_cpp<cpp11::decay_t<duckdb::conn_eptr_t>>(conn));
    return R_NilValue;
  END_CPP11
}
// database.cpp
duckdb::db_eptr_t rapi_startup(std::string dbdir, bool readonly, cpp11::list configsexp);
extern "C" SEXP _duckdb_rapi_startup(SEXP dbdir, SEXP readonly, SEXP configsexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(rapi_startup(cpp11::as_cpp<cpp11::decay_t<std::string>>(dbdir), cpp11::as_cpp<cpp11::decay_t<bool>>(readonly), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(configsexp)));
  END_CPP11
}
// database.cpp
void rapi_shutdown(duckdb::db_eptr_t dbsexp);
extern "C" SEXP _duckdb_rapi_shutdown(SEXP dbsexp) {
  BEGIN_CPP11
    rapi_shutdown(cpp11::as_cpp<cpp11::decay_t<duckdb::db_eptr_t>>(dbsexp));
    return R_NilValue;
  END_CPP11
}
// rapi.cpp
cpp11::list bind_R(cpp11::external_pointer<duckdb::RStatement> stmtsexp, cpp11::list paramsexp, cpp11::logicals arrowsexp);
extern "C" SEXP _duckdb_bind_R(SEXP stmtsexp, SEXP paramsexp, SEXP arrowsexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(bind_R(cpp11::as_cpp<cpp11::decay_t<cpp11::external_pointer<duckdb::RStatement>>>(stmtsexp), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(paramsexp), cpp11::as_cpp<cpp11::decay_t<cpp11::logicals>>(arrowsexp)));
  END_CPP11
}
// rapi.cpp
SEXP execute_R(cpp11::external_pointer<duckdb::RStatement> stmtsexp, cpp11::logicals arrowsexp);
extern "C" SEXP _duckdb_execute_R(SEXP stmtsexp, SEXP arrowsexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(execute_R(cpp11::as_cpp<cpp11::decay_t<cpp11::external_pointer<duckdb::RStatement>>>(stmtsexp), cpp11::as_cpp<cpp11::decay_t<cpp11::logicals>>(arrowsexp)));
  END_CPP11
}
// rapi.cpp
SEXP fetch_arrow_R(SEXP query_resultsexp, cpp11::logicals streamsexp, cpp11::doubles vector_per_chunksexp, cpp11::logicals return_tablesexp);
extern "C" SEXP _duckdb_fetch_arrow_R(SEXP query_resultsexp, SEXP streamsexp, SEXP vector_per_chunksexp, SEXP return_tablesexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(fetch_arrow_R(cpp11::as_cpp<cpp11::decay_t<SEXP>>(query_resultsexp), cpp11::as_cpp<cpp11::decay_t<cpp11::logicals>>(streamsexp), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(vector_per_chunksexp), cpp11::as_cpp<cpp11::decay_t<cpp11::logicals>>(return_tablesexp)));
  END_CPP11
}
// rapi.cpp
SEXP fetch_record_batch_R(SEXP query_resultsexp, cpp11::doubles approx_batch_sizeexp);
extern "C" SEXP _duckdb_fetch_record_batch_R(SEXP query_resultsexp, SEXP approx_batch_sizeexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(fetch_record_batch_R(cpp11::as_cpp<cpp11::decay_t<SEXP>>(query_resultsexp), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(approx_batch_sizeexp)));
  END_CPP11
}
// rapi.cpp
void register_arrow_R(duckdb::conn_eptr_t connsexp, cpp11::strings namesexp, cpp11::list export_funsexp, SEXP valuesexp);
extern "C" SEXP _duckdb_register_arrow_R(SEXP connsexp, SEXP namesexp, SEXP export_funsexp, SEXP valuesexp) {
  BEGIN_CPP11
    register_arrow_R(cpp11::as_cpp<cpp11::decay_t<duckdb::conn_eptr_t>>(connsexp), cpp11::as_cpp<cpp11::decay_t<cpp11::strings>>(namesexp), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(export_funsexp), cpp11::as_cpp<cpp11::decay_t<SEXP>>(valuesexp));
    return R_NilValue;
  END_CPP11
}
// rapi.cpp
void unregister_arrow_R(duckdb::conn_eptr_t connsexp, cpp11::strings namesexp);
extern "C" SEXP _duckdb_unregister_arrow_R(SEXP connsexp, SEXP namesexp) {
  BEGIN_CPP11
    unregister_arrow_R(cpp11::as_cpp<cpp11::decay_t<duckdb::conn_eptr_t>>(connsexp), cpp11::as_cpp<cpp11::decay_t<cpp11::strings>>(namesexp));
    return R_NilValue;
  END_CPP11
}
// rapi.cpp
cpp11::strings ptr_to_str(SEXP extptr);
extern "C" SEXP _duckdb_ptr_to_str(SEXP extptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(ptr_to_str(cpp11::as_cpp<cpp11::decay_t<SEXP>>(extptr)));
  END_CPP11
}
// register.cpp
void rapi_register_df(duckdb::conn_eptr_t conn, std::string name, cpp11::data_frame value);
extern "C" SEXP _duckdb_rapi_register_df(SEXP conn, SEXP name, SEXP value) {
  BEGIN_CPP11
    rapi_register_df(cpp11::as_cpp<cpp11::decay_t<duckdb::conn_eptr_t>>(conn), cpp11::as_cpp<cpp11::decay_t<std::string>>(name), cpp11::as_cpp<cpp11::decay_t<cpp11::data_frame>>(value));
    return R_NilValue;
  END_CPP11
}
// register.cpp
void rapi_unregister_df(duckdb::conn_eptr_t conn, std::string name);
extern "C" SEXP _duckdb_rapi_unregister_df(SEXP conn, SEXP name) {
  BEGIN_CPP11
    rapi_unregister_df(cpp11::as_cpp<cpp11::decay_t<duckdb::conn_eptr_t>>(conn), cpp11::as_cpp<cpp11::decay_t<std::string>>(name));
    return R_NilValue;
  END_CPP11
}
// statement.cpp
void rapi_release(duckdb::stmt_eptr_t stmt);
extern "C" SEXP _duckdb_rapi_release(SEXP stmt) {
  BEGIN_CPP11
    rapi_release(cpp11::as_cpp<cpp11::decay_t<duckdb::stmt_eptr_t>>(stmt));
    return R_NilValue;
  END_CPP11
}
// statement.cpp
cpp11::list rapi_prepare(duckdb::conn_eptr_t conn, std::string query);
extern "C" SEXP _duckdb_rapi_prepare(SEXP conn, SEXP query) {
  BEGIN_CPP11
    return cpp11::as_sexp(rapi_prepare(cpp11::as_cpp<cpp11::decay_t<duckdb::conn_eptr_t>>(conn), cpp11::as_cpp<cpp11::decay_t<std::string>>(query)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_duckdb_bind_R",               (DL_FUNC) &_duckdb_bind_R,               3},
    {"_duckdb_execute_R",            (DL_FUNC) &_duckdb_execute_R,            2},
    {"_duckdb_fetch_arrow_R",        (DL_FUNC) &_duckdb_fetch_arrow_R,        4},
    {"_duckdb_fetch_record_batch_R", (DL_FUNC) &_duckdb_fetch_record_batch_R, 2},
    {"_duckdb_ptr_to_str",           (DL_FUNC) &_duckdb_ptr_to_str,           1},
    {"_duckdb_rapi_connect",         (DL_FUNC) &_duckdb_rapi_connect,         1},
    {"_duckdb_rapi_disconnect",      (DL_FUNC) &_duckdb_rapi_disconnect,      1},
    {"_duckdb_rapi_prepare",         (DL_FUNC) &_duckdb_rapi_prepare,         2},
    {"_duckdb_rapi_register_df",     (DL_FUNC) &_duckdb_rapi_register_df,     3},
    {"_duckdb_rapi_release",         (DL_FUNC) &_duckdb_rapi_release,         1},
    {"_duckdb_rapi_shutdown",        (DL_FUNC) &_duckdb_rapi_shutdown,        1},
    {"_duckdb_rapi_startup",         (DL_FUNC) &_duckdb_rapi_startup,         3},
    {"_duckdb_rapi_unregister_df",   (DL_FUNC) &_duckdb_rapi_unregister_df,   2},
    {"_duckdb_register_arrow_R",     (DL_FUNC) &_duckdb_register_arrow_R,     4},
    {"_duckdb_unregister_arrow_R",   (DL_FUNC) &_duckdb_unregister_arrow_R,   2},
    {NULL, NULL, 0}
};
}

void AltrepString_Initialize(DllInfo* dll);

extern "C" attribute_visible void R_init_duckdb(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  AltrepString_Initialize(dll);
  R_forceSymbols(dll, TRUE);
}
