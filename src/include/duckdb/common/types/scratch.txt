
When a semi or anti join has a complicated condition, then a NLblockjoin is used.

A hash join won't work because the hash depends on values from the left and right input sources.

The problem with our NLblock join fix is that the selection is applied on the cross product.
If a tuple from the left-hand side satisfies the condition with *n>1* tuples on the right-hand side, then *n>1* tuples are returned.
Which duplicated tuples from the left-hand side.

This is bad.

Our solution is to create a true NLBlock join.
Basically create an intermediate datachunk where the first n columns are constant vectors that are copies
of row i from the left hand side. Then we reference the vectors from the right hand side. Then we apply the selection.
If we have more than one match row i from the left hand side can be returned.

We continue with row i + 1.