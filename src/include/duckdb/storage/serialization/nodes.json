[
  {
    "class": "LogicalType",
    "includes": [
      "duckdb/common/types.hpp"
    ],
    "members": [
      {
        "name": "id",
        "type": "LogicalTypeId",
        "property": "id_"
      },
      {
        "name": "type_info",
        "type": "shared_ptr<ExtraTypeInfo>",
        "property": "type_info_",
        "optional": true
      }
    ],
    "pointer_type": "none",
    "constructor": ["id", "type_info"]
  },
  {
    "class": "CommonTableExpressionInfo",
    "includes": [
      "duckdb/parser/common_table_expression_info.hpp"
    ],
    "members": [
      {
        "name": "aliases",
        "type": "vector<string>"
      },
      {
        "name": "query",
        "type": "SelectStatement*"
      },
      {
        "name": "materialized",
        "type": "CTEMaterialize"
      }
    ]
  },
  {
    "class": "CommonTableExpressionMap",
    "includes": [
      "duckdb/parser/query_node.hpp"
    ],
    "members": [
      {
        "name": "map",
        "type": "unordered_map<string, CommonTableExpressionInfo*>"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "OrderByNode",
    "includes": [
      "duckdb/parser/result_modifier.hpp"
    ],
    "members": [
      {
        "name": "type",
        "type": "OrderType"
      },
      {
        "name": "null_order",
        "type": "OrderByNullType"
      },
      {
        "name": "expression",
        "type": "ParsedExpression*"
      }
    ],
    "pointer_type": "none",
    "constructor": ["type", "null_order", "expression"]
  },
  {
    "class": "CaseCheck",
    "includes": [
      "duckdb/parser/expression/case_expression.hpp"
    ],
    "members": [
      {
        "name": "when_expr",
        "type": "ParsedExpression*"
      },
      {
        "name": "then_expr",
        "type": "ParsedExpression*"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "SampleOptions",
    "includes": [
      "duckdb/parser/parsed_data/sample_options.hpp"
    ],
    "members": [
      {
        "name": "sample_size",
        "type": "Value"
      },
      {
        "name": "is_percentage",
        "type": "bool"
      },
      {
        "name": "method",
        "type": "SampleMethod"
      },
      {
        "name": "seed",
        "type": "int64_t"
      }
    ]
  },
  {
    "class": "PivotColumn",
    "includes": [
      "duckdb/parser/tableref/pivotref.hpp"
    ],
    "members": [
      {
        "name": "pivot_expressions",
        "type": "vector<ParsedExpression*>"
      },
      {
        "name": "unpivot_names",
        "type": "vector<string>"
      },
      {
        "name": "entries",
        "type": "vector<PivotColumnEntry>"
      },
      {
        "name": "pivot_enum",
        "type": "string"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "ColumnDefinition",
    "includes": [
      "duckdb/parser/column_definition.hpp"
    ],
    "members": [
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "type",
        "type": "LogicalType"
      },
      {
        "name": "expression",
        "type": "ParsedExpression*",
        "optional": true
      },
      {
        "name": "category",
        "type": "TableColumnType"
      },
      {
        "name": "compression_type",
        "type": "CompressionType"
      }
    ],
    "constructor": ["name", "type", "expression", "category"],
    "pointer_type": "none"
  },
  {
    "class": "ColumnList",
    "includes": [
      "duckdb/parser/column_list.hpp"
    ],
    "members": [
      {
        "name": "columns",
        "type": "vector<ColumnDefinition>"
      }
    ],
    "constructor": ["columns"],
    "pointer_type": "none"
  }
]
