[
  {
    "class": "LogicalOperator",
    "class_type": "type",
    "set_parameters": [
      "type"
    ],
    "includes": [
      "duckdb/planner/operator/list.hpp"
    ],
    "members": [
      {
        "name": "type",
        "type": "LogicalOperatorType"
      },
      {
        "name": "children",
        "type": "vector<LogicalOperator*>"
      }
    ]
  },
  {
    "class": "LogicalProjection",
    "base": "LogicalOperator",
    "enum": "LOGICAL_PROJECTION",
    "members": [
      {
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "name": "expressions",
        "type": "vector<Expression*>"
      }
    ],
    "constructor": ["table_index", "expressions"]
  },
  {
    "class": "LogicalFilter",
    "base": "LogicalOperator",
    "enum": "LOGICAL_FILTER",
    "members": [
      {
        "name": "expressions",
        "type": "vector<Expression*>"
      },
      {
        "name": "projection_map",
        "type": "vector<idx_t>"
      }
    ]
  },
  {
    "class": "LogicalAggregate",
    "base": "LogicalOperator",
    "enum": "LOGICAL_AGGREGATE_AND_GROUP_BY",
    "members": [
      {
        "name": "expressions",
        "type": "vector<Expression*>"
      },
      {
        "name": "group_index",
        "type": "idx_t"
      },
      {
        "name": "aggregate_index",
        "type": "idx_t"
      },
      {
        "name": "groupings_index",
        "type": "idx_t"
      },
      {
        "name": "groups",
        "type": "vector<Expression*>"
      },
      {
        "name": "grouping_sets",
        "type": "vector<GroupingSet>"
      },
      {
        "name": "grouping_functions",
        "type": "vector<vector<idx_t>>"
      }
    ],
    "constructor": ["group_index", "aggregate_index", "expressions"]
  },
  {
    "class": "LogicalWindow",
    "base": "LogicalOperator",
    "enum": "LOGICAL_WINDOW",
    "members": [
      {
        "name": "window_index",
        "type": "idx_t"
      },
      {
        "name": "expressions",
        "type": "vector<Expression*>"
      }
    ],
    "constructor": ["window_index"]
  },
  {
    "class": "LogicalUnnest",
    "base": "LogicalOperator",
    "enum": "LOGICAL_UNNEST",
    "members": [
      {
        "name": "unnest_index",
        "type": "idx_t"
      },
      {
        "name": "expressions",
        "type": "vector<Expression*>"
      }
    ],
    "constructor": ["unnest_index"]
  },
  {
    "class": "LogicalLimit",
    "base": "LogicalOperator",
    "enum": "LOGICAL_LIMIT",
    "members": [
      {
        "name": "limit_val",
        "type": "int64_t"
      },
      {
        "name": "offset_val",
        "type": "int64_t"
      },
      {
        "name": "limit",
        "type": "Expression*",
        "optional": true
      },
      {
        "name": "offset",
        "type": "Expression*",
        "optional": true
      }
    ],
    "constructor": ["limit_val", "offset_val", "limit", "offset"]
  },
  {
    "class": "LogicalOrder",
    "base": "LogicalOperator",
    "enum": "LOGICAL_ORDER_BY",
    "members": [
      {
        "name": "orders",
        "type": "vector<BoundOrderByNode>"
      },
      {
        "name": "projections",
        "type": "vector<idx_t>"
      }
    ],
    "constructor": ["orders"]
  },
  {
    "class": "LogicalTopN",
    "base": "LogicalOperator",
    "enum": "LOGICAL_TOP_N",
    "members": [
      {
        "name": "orders",
        "type": "vector<BoundOrderByNode>"
      },
      {
        "name": "limit",
        "type": "idx_t"
      },
      {
        "name": "offset",
        "type": "idx_t"
      }
    ],
    "constructor": ["orders", "limit", "offset"]
  },
  {
    "class": "LogicalDistinct",
    "base": "LogicalOperator",
    "enum": "LOGICAL_DISTINCT",
    "members": [
      {
        "name": "distinct_type",
        "type": "DistinctType"
      },
      {
        "name": "distinct_targets",
        "type": "vector<Expression*>"
      },
      {
        "name": "order_by",
        "type": "BoundOrderModifier*",
        "optional": true
      }
    ],
    "constructor": ["distinct_targets", "distinct_type"]
  },
  {
    "class": "LogicalSample",
    "base": "LogicalOperator",
    "enum": "LOGICAL_SAMPLE",
    "members": [
      {
        "name": "sample_options",
        "type": "SampleOptions"
      }
    ]
  },
  {
    "class": "LogicalLimitPercent",
    "base": "LogicalOperator",
    "enum": "LOGICAL_LIMIT_PERCENT",
    "members": [
      {
        "name": "limit_percent",
        "type": "double"
      },
      {
        "name": "offset_val",
        "type": "int64_t"
      },
      {
        "name": "limit",
        "type": "Expression*",
        "optional": true
      },
      {
        "name": "offset",
        "type": "Expression*",
        "optional": true
      }
    ],
    "constructor": ["limit_percent", "offset_val", "limit", "offset"]
  },
  {
    "class": "LogicalColumnDataGet",
    "base": "LogicalOperator",
    "enum": "LOGICAL_CHUNK_GET",
    "members": [
      {
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "name": "chunk_types",
        "type": "vector<LogicalType>"
      },
      {
        "name": "collection",
        "type": "ColumnDataCollection*"
      }
    ],
    "constructor": ["table_index", "chunk_types", "collection"]
  },
  {
    "class": "LogicalDelimGet",
    "base": "LogicalOperator",
    "enum": "LOGICAL_DELIM_GET",
    "members": [
      {
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "name": "chunk_types",
        "type": "vector<LogicalType>"
      }
    ],
    "constructor": ["table_index", "chunk_types"]
  },
  {
    "class": "LogicalExpressionGet",
    "base": "LogicalOperator",
    "enum": "LOGICAL_EXPRESSION_GET",
    "members": [
      {
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "name": "expr_types",
        "type": "vector<LogicalType>"
      },
      {
        "name": "expressions",
        "type": "vector<vector<Expression*>>"
      }
    ],
    "constructor": ["table_index", "expr_types", "expressions"]
  },
  {
    "class": "LogicalDummyScan",
    "base": "LogicalOperator",
    "enum": "LOGICAL_DUMMY_SCAN",
    "members": [
      {
        "name": "table_index",
        "type": "idx_t"
      }
    ],
    "constructor": ["table_index"]
  },
  {
    "class": "LogicalEmptyResult",
    "base": "LogicalOperator",
    "enum": "LOGICAL_EMPTY_RESULT",
    "members": [
      {
        "name": "return_types",
        "type": "vector<LogicalType>"
      },
      {
        "name": "bindings",
        "type": "vector<ColumnBinding>"
      }
    ]
  },
  {
    "class": "LogicalCTERef",
    "base": "LogicalOperator",
    "enum": "LOGICAL_CTE_REF",
    "members": [
      {
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "name": "cte_index",
        "type": "idx_t"
      },
      {
        "name": "chunk_types",
        "type": "vector<LogicalType>"
      },
      {
        "name": "bound_columns",
        "type": "vector<string>"
      },
      {
        "name": "materialized_cte",
        "type": "CTEMaterialize"
      }
    ],
    "constructor": ["table_index", "cte_index", "chunk_types", "bound_columns", "materialized_cte"]
  },
  {
    "class": "LogicalComparisonJoin",
    "base": "LogicalOperator",
    "enum": "LOGICAL_COMPARISON_JOIN",
    "members": [
      {
        "name": "join_type",
        "type": "JoinType"
      },
      {
        "name": "mark_index",
        "type": "idx_t"
      },
      {
        "name": "left_projection_map",
        "type": "vector<idx_t>"
      },
      {
        "name": "right_projection_map",
        "type": "vector<idx_t>"
      },
      {
        "name": "conditions",
        "type": "vector<JoinCondition>"
      }
    ],
    "constructor": ["join_type", "type"]
  }
]
