//===----------------------------------------------------------------------===//
// This file is automatically generated by scripts/generate_serialization.py
// Do not edit this file manually, your changes will be overwritten
//===----------------------------------------------------------------------===//

#include "duckdb/common/serializer/format_serializer.hpp"
#include "duckdb/common/serializer/format_deserializer.hpp"
#include "duckdb/catalog/catalog_entry/index_catalog_entry.hpp"
#include "duckdb/storage/index.hpp"

namespace duckdb {

void IndexCatalogEntry::FormatSerialize(FormatSerializer &serializer) const {
	serializer.WriteProperty("schema", GetSchemaName());
	serializer.WriteProperty("table", GetTableName());
	serializer.WriteProperty("name", name);
	serializer.WriteProperty("sql", sql);
	serializer.WriteProperty("index_type", index->type);
	serializer.WriteProperty("constraint_type", index->constraint_type);
	serializer.WriteProperty("expressions", expressions);
	serializer.WriteProperty("parsed_expressions", parsed_expressions);
	serializer.WriteProperty("column_ids", index->column_ids);
}

unique_ptr<CreateIndexInfo> IndexCatalogEntry::FormatDeserialize(FormatDeserializer &deserializer) {
	auto result = duckdb::unique_ptr<CreateIndexInfo>(new CreateIndexInfo());
	deserializer.ReadProperty("schema", result->schema);
	deserializer.ReadProperty("table", result->table);
	deserializer.ReadProperty("name", result->index_name);
	deserializer.ReadProperty("sql", result->sql);
	deserializer.ReadProperty("index_type", result->index_type);
	deserializer.ReadProperty("constraint_type", result->constraint_type);
	deserializer.ReadProperty("expressions", result->expressions);
	deserializer.ReadProperty("parsed_expressions", result->parsed_expressions);
	deserializer.ReadProperty("column_ids", result->column_ids);
	return result;
}

} // namespace duckdb
