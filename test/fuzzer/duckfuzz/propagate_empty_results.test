# name: test/fuzzer/duckfuzz/propagate_empty_results.test
# description: Properly propogate empty results.
# group: [duckfuzz]

statement ok
pragma enable_verification

statement ok
create table all_types as select * exclude(small_enum, medium_enum, large_enum) from test_all_types() limit 0;

statement ok
SELECT count_star() 
OVER (PARTITION BY ref_1.hugeint, ref_1."timestamp" ORDER BY subq_0.c0) AS c0 
FROM 
(SELECT 
ref_0."int" AS c0, 
ref_0.timestamp_s AS c1 
FROM main.all_types AS ref_0 
WHERE 
ref_0."varchar") AS subq_0 
INNER JOIN
main.all_types AS ref_1 
ON 
((subq_0.c1 = ref_1.timestamp_s))
WHERE (ref_1."time" IS NOT NULL);


statement ok
insert into all_types select * exclude(small_enum, medium_enum, large_enum) from test_all_types();

# check again with data
statement error
SELECT count_star() 
OVER (PARTITION BY ref_1.hugeint, ref_1."timestamp" ORDER BY subq_0.c0) AS c0 
FROM 
(SELECT 
ref_0."int" AS c0, 
ref_0.timestamp_s AS c1 
FROM main.all_types AS ref_0 
WHERE 
ref_0."varchar") AS subq_0 
INNER JOIN
main.all_types AS ref_1 
ON 
((subq_0.c1 = ref_1.timestamp_s))
WHERE (ref_1."time" IS NOT NULL);
----
Conversion Error

# check again with data remove error
statement ok
SELECT count_star() 
OVER (PARTITION BY ref_1.hugeint, ref_1."timestamp" ORDER BY subq_0.c0) AS c0 
FROM 
(SELECT 
ref_0."int" AS c0, 
ref_0.timestamp_s AS c1 
FROM main.all_types AS ref_0 ) AS subq_0 
INNER JOIN
main.all_types AS ref_1 
ON 
((subq_0.c1 = ref_1.timestamp_s))
WHERE (ref_1."time" IS NOT NULL);
