# name: test/sql/storage/compression/string/large_dict_fsst.test_slow
# description: Test large storage with string compression (many row groups)
# group: [string]

# load the DB from disk
load __TEST_DIR__/test_dictionary.db readwrite v1.3.0

statement ok
PRAGMA enable_verification

foreach enable_fsst_vector true false

statement ok
SET enable_fsst_vectors='${enable_fsst_vector}'

statement ok
PRAGMA force_compression='dict_fsst'

# simple dictionary compressed column with few values
statement ok
CREATE TABLE test (a VARCHAR);

statement ok
set variable batch_size=1_000_000

statement ok
INSERT INTO test SELECT (i::VARCHAR) FROM range(0, getvariable('batch_size')) tbl(i);
INSERT INTO test SELECT NULL FROM range(0, getvariable('batch_size')) tbl(i);
INSERT INTO test SELECT (i::VARCHAR) FROM range(0, getvariable('batch_size')) tbl(i);
INSERT INTO test SELECT ''::VARCHAR FROM range(0, getvariable('batch_size')) tbl(i);
INSERT INTO test SELECT (i::VARCHAR) FROM range(0, getvariable('batch_size')) tbl(i);

statement ok
checkpoint

# Before restart
query IIII
SELECT
	SUM(a::INT),
	MIN(a::INT),
	MAX(a::INT),
	COUNT(*)
FROM test where a NOT NULL and a != ''
----
1499998500000	0	999999	3000000

restart

# After restart
query IIII
SELECT
	SUM(a::INT),
	MIN(a::INT),
	MAX(a::INT),
	COUNT(*)
FROM test where a NOT NULL and a != ''
----
1499998500000	0	999999	3000000

query I
SELECT DISTINCT compression FROM pragma_storage_info('test') WHERE segment_type ILIKE 'VARCHAR'
----
DICT_FSST

statement ok
DROP TABLE test;

endloop
