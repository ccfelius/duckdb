# name: test/sql/storage/compression/string/index_fetch.test
# description: Fetch from compressed string column with index
# group: [string]

# load the DB from disk
load __TEST_DIR__/test_string_compression.db readwrite v1.0.0

statement ok
pragma verify_fetch_row

statement ok
create type test_result as UNION(
    ok BOOL,
    err STRUCT(
        expected VARCHAR,
        actual VARCHAR
    )
);

foreach compression fsst dictionary

foreach enable_fsst_vector true false

statement ok
SET enable_fsst_vectors='${enable_fsst_vector}'

statement ok
PRAGMA force_compression='${compression}'

statement ok
CREATE TABLE test(id INTEGER PRIMARY KEY, col VARCHAR)

statement ok
INSERT INTO test SELECT i id, i::VARCHAR b FROM range(10000) tbl(i)

statement ok
CHECKPOINT

query IIIIII
SELECT MIN(id), MAX(id), SUM(col::INT), MIN(col::INT), MAX(col::INT), COUNT(*) FROM test WHERE id=5000
----
5000	5000	5000	5000	5000	1

query I
SELECT
	CASE WHEN lower(compression)='${compression}'
		THEN true::test_result
	ELSE {
		'expected': '${compression}',
		'actual': lower(compression)
	}::test_result
	END
FROM pragma_storage_info('test') WHERE segment_type ILIKE 'VARCHAR' LIMIT 1
----
true

statement ok
DROP TABLE test;

endloop

endloop
