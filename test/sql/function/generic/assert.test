# name: test/sql/function/generic/assert.test
# description: Assert test
# group: [generic]

statement ok
PRAGMA enable_verification

query T
SELECT assert(1, true)
----
1

statement error
SELECT assert(1, false)
----
Invalid Input Error: Assertion failed for assert(1, false)

# Expression that returns true.
query T
SELECT assert('test', 1 = 1)
----
test

# Expression that returns false.
statement error
SELECT assert(1, 1 = 2)

# No input argument.
statement error
SELECT assert(1)

# NULL returns NULL.
query T
SELECT assert(NULL, true)
----
NULL

# Common use case when denominator has a zero value.
statement error
SELECT 42 / denom
FROM (
  SELECT assert(denom, denom != 0)
  FROM (
    SELECT 1 AS denom
    UNION ALL
    SELECT 0 AS denom
  )
)
---
Invalid Error: Assertion failed

# Common use case when denominator has no 0 value.
query I
SELECT 42 / denom
FROM (
  SELECT assert(denom, denom != 0) as denom
  FROM (
    SELECT 1 AS denom
    UNION ALL
    SELECT 2 AS denom
  )
)
----
42
21

# List
query I
SELECT assert([1, 2, 3], true);
----
[1, 2, 3]

# Map
query I
SELECT assert({'a': 1}, true);
----
{'a': 1}

# Alias
query I
SELECT invariant({'a': 1}, true);
----
{'a': 1}

# NULL assertion, returns the same.
query I
SELECT invariant({'a': 1}, NULL);
----
{'a': 1}

# Only one input has a 0 value.
statement error
SELECT 42 / denom
FROM (
  SELECT assert(denom, denom != 0) as denom
  FROM (
    SELECT 1 AS denom
    UNION ALL
    SELECT 2 AS denom
    UNION ALL
    SELECT 3 AS denom
    UNION ALL
    SELECT 4 AS denom
    UNION ALL
    SELECT 5 AS denom
    UNION ALL
    SELECT 0 AS denom
  )
)
----
Invalid Input Error: Assertion failed for assert(denom, (denom != 0))

# New dot syntax.
query I
SELECT 42 / denom
FROM (
  SELECT denom.assert(denom != 0) as denom
  FROM (
    SELECT 1 AS denom
  )
)
----
42