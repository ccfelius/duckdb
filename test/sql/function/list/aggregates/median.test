# name: test/sql/function/list/aggregates/median.test
# description: Test the list_median aggregate function
# group: [aggregates]

# types

foreach type integer float double smallint bigint hugeint decimal(10,2)

statement ok
CREATE TABLE quantile AS SELECT LIST(r::${type}) AS r FROM range(10000) t1(r);

query I
SELECT list_median(r) FROM quantile
----
4999.5

statement ok
DROP TABLE quantile

endloop

statement ok
CREATE TABLE quantile AS SELECT LIST(r::tinyint) AS r FROM range(100) t1(r);

query I
SELECT list_median(r) FROM quantile
----
49.500000

# scalar quantiles

statement ok
CREATE TABLE range AS SELECT LIST(1) AS i FROM range(2000) t1(i)

statement ok
INSERT INTO range VALUES (NULL), ([]), ([NULL]);

query I
SELECT list_median(i) FROM range
----
1
NULL
NULL
NULL

#
# Validate even number of values for all types.
#

# Interpolated
foreach type <integral> DECIMAL(4,1) DECIMAL(9,1) DECIMAL(18,1) DECIMAL(38,1) float double

query I
SELECT MEDIAN(range::${type}) 
FROM range(0,10);
----
4.5

endloop

foreach type date timestamp timestamp_s timestamp_ms timestamp_ns

query I
SELECT MEDIAN(range::${type}) 
FROM range('2024-01-01'::date, '2024-01-11'::date, INTERVAL 1 DAY);
----
2024-01-05 12:00:00

endloop

foreach type timestamptz

query I
SELECT MEDIAN(range::${type}) 
FROM range('2024-01-01'::date, '2024-01-11'::date, INTERVAL 1 DAY);
----
2024-01-05 12:00:00+00

endloop

# Floored
foreach type varchar

query I
SELECT MEDIAN(range::${type}) FROM range(0,10);
----
4

endloop
