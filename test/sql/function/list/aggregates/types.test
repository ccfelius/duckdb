# name: test/sql/function/list/aggregates/const.test
# description: Test the list_aggr function for constant values
# group: [list]

# This file specifically tests the functionality for each type, 
# it does not necessarily test the correctness (statement ok suffices for some tests)

# BOOLEAN

# result False
foreach func_name 

query I
SELECT list_aggr([False], '${func_name}')
----
0

endloop

# any other result
foreach func_name approx_count_distinct

statement ok
SELECT list_aggr([False], '${func_name}')

endloop

# statement error for BOOLEAN
foreach func_name 

statement error
SELECT list_aggr([False], '${func_name}')

endloop

# VARCHAR

# result hello
foreach func_name 

query I
SELECT list_aggr(['hello'], '${func_name}')
----
hello

endloop

# any other result
foreach func_name approx_count_distinct

statement ok
SELECT list_aggr(['hello'], '${func_name}')

endloop

# statement error for VARCHAR
foreach func_name 

statement error
SELECT list_aggr(['hello'], '${func_name}')

endloop

# NUMERIC types

foreach func_name approx_count_distinct
foreach type tinyint smallint integer bigint hugeint utinyint usmallint uinteger ubigint float double decimal(4,1) decimal(9,4) decimal(18,6) decimal(38,10)

query I
SELECT list_aggr([1::${type}], '${func_name}')
----
1

endloop
endloop

# statement error for NUMERIC types
foreach func_name
foreach type tinyint smallint integer bigint hugeint utinyint usmallint uinteger ubigint float double decimal(4,1) decimal(9,4) decimal(18,6) decimal(38,10)

statement error
SELECT list_aggr([1::${type}], '${func_name}')

endloop
endloop

# TEMPORAL types

# specific result
foreach func_name

# date
query I
SELECT list_aggr(['2021-08-20'::DATE], '${func_name}')
----
2021-08-20

# time
query I
SELECT list_aggr(['14:59:37'::TIME], '${func_name}')
----
14:59:37

# timestamp
query I
SELECT list_aggr(['2021-08-20'::TIMESTAMP], '${func_name}')
----
2021-08-20 00:00:00

# timestamp s
query I
SELECT list_aggr(['2021-08-20'::TIMESTAMP_S], '${func_name}')
----
2021-08-20 00:00:00

# timestamp ms
query I
SELECT list_aggr(['2021-08-20 00:00:00.123'::TIMESTAMP_MS], '${func_name}')
----
2021-08-20 00:00:00.123

# timestamp ns
query I
SELECT list_aggr(['2021-08-20 00:00:00.123456'::TIMESTAMP_NS], '${func_name}')
----
2021-08-20 00:00:00.123456

# time with time zone
query I
SELECT list_aggr(['14:59:37'::TIMETZ], '${func_name}')
----
14:59:37+00

# timestamp with time zone
query I
SELECT list_aggr(['2021-08-20'::TIMESTAMPTZ], '${func_name}')
----
2021-08-20 00:00:00+00

# interval
query I
SELECT list_aggr([INTERVAL 1 YEAR], '${func_name}')
----
1 year

endloop

# any other result
foreach func_name approx_count_distinct
foreach type date time timestamp timestamp_s timestamp_ms timestamp_ns timetz timestamptz

statement ok
SELECT list_aggr(['2021-08-20'::${type}], '${func_name}')

endloop

statement ok
SELECT list_aggr([INTERVAL 1 YEAR], '${func_name}')

endloop

# statement error for TEMPORAL types
foreach func_name 
foreach type date time timestamp timestamp_s timestamp_ms timestamp_ns timetz timestamptz

statement error
SELECT list_aggr(['2021-08-20'::${type}], '${func_name}')

endloop

statement error
SELECT list_aggr([INTERVAL 1 YEAR], '${func_name}')
----
1 year

endloop

# JSON, BLOB

# result {a: 1}
foreach func_name 
foreach type json blob

query I
SELECT list_aggr(['{a: 1}'::${type}], '${func_name}')
----
{a: 1}

endloop
endloop

# any other result
foreach func_name approx_count_distinct
foreach type json blob

statement ok
SELECT list_aggr(['{a: 1}'::${type}], '${func_name}')

endloop
endloop

# statement error for JSON, BLOB
foreach func_name 
foreach type json blob

statement error
SELECT list_aggr(['{a: 1}'::${type}], '${func_name}')

endloop
endloop

# ENUMS

statement ok
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy')

statement ok
CREATE TABLE enums (e mood[])

statement ok
INSERT INTO enums VALUES (['happy'])

# result happy
foreach func_name

query I
SELECT list_aggr(e, '${func_name}') FROM enums
----
happy

endloop

# any other result
foreach func_name approx_count_distinct

statement error
SELECT list_aggr(e, '${func_name}') FROM enums

endloop

# statement error for ENUMS

foreach func_name

statement error
SELECT list_aggr(e, '${func_name}') FROM enums

endloop

# NESTED types

# list, struct, result is [1] or {'a': 1}
foreach func_name 

query I
SELECT list_aggr([[1]], '${func_name}')
----
[1]

query I
SELECT list_aggr([{'a': 1}], '${func_name}')
----
{'a': 1}

endloop

# list, struct, any other result
foreach func_name approx_count_distinct

statement ok
SELECT list_aggr([[1]], '${func_name}')

statement ok
SELECT list_aggr([{'a': 1}], '${func_name}')

endloop

# statement error for NESTED types

# list, struct
foreach func_name 

statement error
SELECT list_aggr([[1]], '${func_name}')

statement error
SELECT list_aggr([{'a': 1}], '${func_name}')

endloop