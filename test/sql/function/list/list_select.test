# name: test/sql/function/list/list_select.test
# description: Test list_select function
# group: [list]

statement ok
CREATE TABLE integers (i int[])

statement ok
INSERT INTO integers VALUES  ([1,2,3]), ([4,5,6])

statement ok
CREATE TABLE selections (j int[])

statement ok
INSERT INTO selections VALUES  ([2,1]), ([2,0,2])

# standard test

query I
SELECT list_select([], [])
----
[]

query I
SELECT list_select(NULL, [])
----
NULL

query I
SELECT list_select([], NULL)
----
NULL

query I
SELECT list_select([1,2,3], [0,1,2])
----
[1, 2, 3]

query I
SELECT list_select([1,2,3], [2,1,2,2])
----
[3, 2, 3, 3]

query I
SELECT list_select([1,2,3], [0,1])
----
[1, 2]

# selections out of bounds

query I
SELECT list_select([1,2,3], [2,1,2,3])
----
[3, 2, 3, NULL]

statement error
SELECT list_select([1,2,3], [2,1,2,-1])

# queries with multiple rows

query I
SELECT list_select(i, [0,1]) FROM integers
----
[1, 2]
[4, 5]

query I
SELECT list_select(i, j) FROM integers, selections
----
[3, 2]
[6, 5]
[3, 1, 3]
[6, 4, 6]

query I
SELECT list_select(i, [1,2,3]) FROM integers
----
[2, 3, NULL]
[5, 6, NULL]


# test all types

# BOOLEAN
query I
SELECT list_select([True, False, NULL, True, True, NULL], [1,3,2])
----
[false, true, NULL]

query I
SELECT list_select([NULL::BOOLEAN], [0])
----
[NULL]

# VARCHAR
query I
SELECT list_select(['aa', 'a', 'cd', NULL, '42'], [3,4,1,0,2])
----
[NULL, 42, a, aa, cd]

query I
SELECT list_select([NULL::VARCHAR], [0])
----
[NULL]

# INTEGER types
foreach type tinyint smallint integer bigint hugeint utinyint usmallint uinteger ubigint

query I
SELECT list_select([1::${type}, NULL, 2::${type}], [1,0,2])
----
[NULL, 1, 2]

query I
SELECT list_select([NULL::${type}], [0])
----
[NULL]

endloop

# FLOAT, DOUBLE and DECIMAL types

foreach type float double decimal(4,1) decimal(9,4) decimal(18,6) decimal(38,10)

statement ok
SELECT list_select([1::${type}], [1,0])

query I
SELECT list_select([NULL::${type}], [0])
----
[NULL]

endloop

# TEMPORAL types

# date
query I
SELECT list_select(['2021-08-20'::DATE], [0])
----
[2021-08-20]

# time
query I
SELECT list_select(['14:59:37'::TIME], [0])
----
[14:59:37]

# timestamp
query I
SELECT list_select(['2021-08-20'::TIMESTAMP], [0])
----
[2021-08-20 00:00:00]

# timestamp s
query I
SELECT list_select(['2021-08-20'::TIMESTAMP_S], [0])
----
[2021-08-20 00:00:00]

# timestamp ms
query I
SELECT list_select(['2021-08-20 00:00:00.123'::TIMESTAMP_MS], [0])
----
[2021-08-20 00:00:00.123]

# timestamp ns
query I
SELECT list_select(['2021-08-20 00:00:00.123456'::TIMESTAMP_NS], [0])
----
[2021-08-20 00:00:00.123456]

# time with time zone
query I
SELECT list_select(['14:59:37'::TIMETZ], [0])
----
[14:59:37+00]

# timestamp with time zone
query I
SELECT list_select(['2021-08-20'::TIMESTAMPTZ], [0])
----
[2021-08-20 00:00:00+00]

# interval
query I
SELECT list_select([INTERVAL 1 YEAR], [0])
----
[1 year]

foreach type date time timestamp timestamp_s timestamp_ms timestamp_ns timetz timestamptz interval

query I
SELECT list_select([NULL::${type}], [0])
----
[NULL]

endloop

# BLOB

query I
SELECT list_select(['{a: 1}'::BLOB, '{a: 3}'::BLOB], [0,1])
----
[{a: 1}, {a: 3}]

query I
SELECT list_select([NULL::BLOB], [0])
----
[NULL]

# ENUMS

statement ok
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy')

statement ok
CREATE TABLE enums (e mood[])

statement ok
INSERT INTO enums VALUES (['happy', 'sad'])

query I
SELECT list_select(e, [1,0]) FROM enums
----
[sad, happy]

# NESTED types

query I
SELECT list_select([[1], [1, 2], NULL, [NULL], [], [1, 2, 3]], [2,4,0,1,5,3])
----
[NULL, [], [1], [1, 2], [1, 2, 3], [NULL]]

query I
SELECT list_select([{'a': 1}, {'a': 5}, {'a': 3}], [0,2,1])
----
[{'a': 1}, {'a': 3}, {'a': 5}]

# very large lists

statement ok
CREATE TABLE lists AS SELECT range % 4 g, list(range) l FROM range(10000) GROUP BY range % 4;

query T
with cte0 as (
  select g, list_select(l, range(5)) l from lists
), cte1 as (
  select g, unnest(l) i from cte0
)
select count(*)
from cte1
----
20