# name: test/sql/catalog/comment_on_extended.test
# description: Test COMMENT ON to add comment on database
# group: [catalog]

### Create some test data
statement ok
ATTACH '__TEST_DIR__/comment_on_extended_1.db' AS db1

statement ok
ATTACH '__TEST_DIR__/comment_on_extended_2.db' AS db2

statement ok
CREATE SCHEMA db1.s1;

statement ok
CREATE SCHEMA db2.s2;

statement ok
CREATE TABLE db1.s1.t1 AS SELECT 1 as c1

statement ok
CREATE TABLE db2.s2.t2 AS SELECT 2 as c2

statement ok
CREATE TABLE db1.s1.t3 AS SELECT 3 as c3

statement ok
CREATE TABLE db2.s2.t4 AS SELECT 4 as c4

statement ok
CREATE INDEX test_index ON db1.s1.t3 using art(c3)

statement ok
CREATE INDEX test_index ON db2.s2.t4 using art(c4)

### Confirm we have no comments yet
query I
SELECT count(*) from duckdb_tables() where comment IS NOT NULL;
----
0

query I
SELECT count(*) from duckdb_columns() where comment IS NOT NULL;
----
0

### Tables with fully qualified names
statement ok
COMMENT ON TABLE db1.s1.t1 IS 'very gezellige table 1'

statement ok
COMMENT ON TABLE db2.s2.t2 IS 'very gezellige table 2'

query I
select comment from duckdb_tables() where table_name='t1';
----
very gezellige table 1

query I
select comment from duckdb_tables() where table_name='t2';
----
very gezellige table 2

### Index with fully qualified name
statement error
COMMENT ON INDEX test_index IS 'very gezellige index'
----
Catalog Error: Index with name test_index does not exist!

statement ok
COMMENT ON INDEX db1.s1.test_index IS 'very gezellige index 1'

statement ok
COMMENT ON INDEX db2.s2.test_index IS 'very gezellige index 2'

query III
select database_name, schema_name, comment from duckdb_indexes() where index_name='test_index' order by comment;
----
db1	s1	very gezellige index 1
db2	s2	very gezellige index 2

### Fully qualified column

statement error
COMMENT ON COLUMN col1 IS 'no bueno'
----
Parser Error: Specifying a table is required. eg. COMMENT ON COLUMN table1.col1 IS 'comment value'

statement error
COMMENT ON COLUMN table_blablabla.col1 IS 'bla'
----
Catalog Error: Table with name table_blablabla does not exist!

statement ok
COMMENT ON COLUMN db1.s1.t1.c1 IS 'very gezellige column 1'

query IIII
select database_name, schema_name, table_name, comment from duckdb_columns() where column_name='c1' order by comment;
----
db1	s1	t1	very gezellige column 1