# name: test/sql/logging/filehandle_logging.test
# group: [logging]

require parquet

require json

statement ok
set enable_logging = true;

statement ok
set logging_level='trace';

statement ok
COPY (SELECT 1 as a) TO '__TEST_DIR__/test.csv'

statement ok
FROM '__TEST_DIR__/test.csv'

# Note: regex for test stability
query IIII
SELECT scope, type, log_level, regexp_replace(message, '\"path\":.*test.csv"', '"test.csv"')
FROM duckdb_logs
WHERE type = 'duckdb.FileHandle'
ORDER BY timestamp
----
CONNECTION	duckdb.FileHandle	TRACE	{"fs":"LocalFileSystem","test.csv","op":"OPEN"}
CONNECTION	duckdb.FileHandle	TRACE	{"fs":"LocalFileSystem","test.csv","op":"WRITE","bytes":"2","pos":"0"}
CONNECTION	duckdb.FileHandle	TRACE	{"fs":"LocalFileSystem","test.csv","op":"WRITE","bytes":"1","pos":"2"}
CONNECTION	duckdb.FileHandle	TRACE	{"fs":"LocalFileSystem","test.csv","op":"WRITE","bytes":"1","pos":"3"}
CONNECTION	duckdb.FileHandle	TRACE	{"fs":"LocalFileSystem","test.csv","op":"CLOSE"}
CONNECTION	duckdb.FileHandle	TRACE	{"fs":"LocalFileSystem","test.csv","op":"OPEN"}
CONNECTION	duckdb.FileHandle	TRACE	{"fs":"LocalFileSystem","test.csv","op":"READ","bytes":"4","pos":"0"}
CONNECTION	duckdb.FileHandle	TRACE	{"fs":"LocalFileSystem","test.csv","op":"READ","bytes":"0","pos":"4"}
CONNECTION	duckdb.FileHandle	TRACE	{"fs":"LocalFileSystem","test.csv","op":"CLOSE"}