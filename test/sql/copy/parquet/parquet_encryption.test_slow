# name: test/sql/copy/parquet/parquet_encryption.test_slow
# description: Test Parquet encryption
# group: [parquet]

require parquet

statement ok
PRAGMA enable_verification

# AES key must have one of the three specified lengths
statement error
PRAGMA parquet_key('42')
----
Invalid Input Error: Invalid AES key. Must have a length of 128, 192, or 256 bits (16, 24, or 32 bytes)

# test all valid AES key lengths
foreach parquet_key '0123456789112345' '012345678911234501234567' '01234567891123450123456789112345'

statement ok
PRAGMA parquet_key(${parquet_key})

statement ok
COPY (SELECT 42 i) to '__TEST_DIR__/encrypted.parquet' (ENCRYPTION)

query I
SELECT * FROM read_parquet('__TEST_DIR__/encrypted.parquet', encryption=true)
----
42

statement ok
COPY (SELECT 42 i) to '__TEST_DIR__/encrypted.parquet' (ENCRYPTION TRUE)

query I
SELECT * FROM read_parquet('__TEST_DIR__/encrypted.parquet', encryption=true)
----
42

statement ok
CREATE OR REPLACE TABLE test (i INTEGER)

statement ok
COPY test FROM '__TEST_DIR__/encrypted.parquet' (ENCRYPTION)

query I
SELECT * FROM test
----
42

statement ok
CREATE OR REPLACE TABLE test (i INTEGER)

statement ok
COPY test FROM '__TEST_DIR__/encrypted.parquet' (ENCRYPTION TRUE)

query I
SELECT * FROM test
----
42

endloop

# validate parameter parsing
statement error
COPY (SELECT 42 i) to '__TEST_DIR__/encrypted.parquet' (ENCRYPTION 'yes')
----
Invalid Input Error

statement error
COPY test FROM '__TEST_DIR__/encrypted.parquet' (ENCRYPTION 'yes')
----
Invalid Input Error

# what happens if we don't try to decrypt even if the file is encrypted?
statement error
SELECT * FROM read_parquet('__TEST_DIR__/encrypted.parquet', encryption=false)
----
Invalid Input Error

# what if we try to decrypt with the wrong key?
statement ok
PRAGMA parquet_key('4242424242424242')

statement error
SELECT * FROM read_parquet('__TEST_DIR__/encrypted.parquet', encryption=true)
----
Invalid

# what if we don't encrypt, but try to decrypt?
statement ok
COPY (SELECT 42 i) to '__TEST_DIR__/encrypted.parquet'

statement error
SELECT * FROM read_parquet('__TEST_DIR__/encrypted.parquet', encryption=true)
----
Invalid Input Error

# roundtrip all of TPCH
statement ok
PRAGMA disable_verification

require tpch

statement ok
CALL dbgen(sf=1)

# set the 128-bit key
statement ok
PRAGMA parquet_key('0123456789112345')

statement ok
EXPORT DATABASE '__TEST_DIR__/tpch_encrypted' (FORMAT 'parquet', ENCRYPTION)

load :memory:

# re-set key upon loading the DB again
statement ok
PRAGMA parquet_key('0123456789112345')

statement ok
IMPORT DATABASE '__TEST_DIR__/tpch_encrypted'

loop i 1 9

query I
PRAGMA tpch(${i})
----
<FILE>:extension/tpch/dbgen/answers/sf1/q0${i}.csv

endloop

loop i 10 23

query I
PRAGMA tpch(${i})
----
<FILE>:extension/tpch/dbgen/answers/sf1/q${i}.csv

endloop

# now again without importing the DB, just with views, so we can test projection/filter pushdown
load :memory:

# re-set key upon loading the DB again
statement ok
PRAGMA parquet_key('0123456789112345')

statement ok
CREATE VIEW lineitem AS SELECT * FROM read_parquet('__TEST_DIR__/tpch_encrypted/lineitem.parquet', encryption=true);

statement ok
CREATE VIEW orders AS SELECT * FROM read_parquet('__TEST_DIR__/tpch_encrypted/orders.parquet', encryption=true);

statement ok
CREATE VIEW partsupp AS SELECT * FROM read_parquet('__TEST_DIR__/tpch_encrypted/partsupp.parquet', encryption=true);

statement ok
CREATE VIEW part AS SELECT * FROM read_parquet('__TEST_DIR__/tpch_encrypted/part.parquet', encryption=true);

statement ok
CREATE VIEW customer AS SELECT * FROM read_parquet('__TEST_DIR__/tpch_encrypted/customer.parquet', encryption=true);

statement ok
CREATE VIEW supplier AS SELECT * FROM read_parquet('__TEST_DIR__/tpch_encrypted/supplier.parquet', encryption=true);

statement ok
CREATE VIEW nation AS SELECT * FROM read_parquet('__TEST_DIR__/tpch_encrypted/nation.parquet', encryption=true);

statement ok
CREATE VIEW region AS SELECT * FROM read_parquet('__TEST_DIR__/tpch_encrypted/region.parquet', encryption=true);

loop i 1 9

query I
PRAGMA tpch(${i})
----
<FILE>:extension/tpch/dbgen/answers/sf1/q0${i}.csv

endloop

loop i 10 23

query I
PRAGMA tpch(${i})
----
<FILE>:extension/tpch/dbgen/answers/sf1/q${i}.csv

endloop
