# name: test/sql/copy/s3/set_s3_credentials.test
# description: tests the set_s3_credentials function
# group: [s3]

require httpfs

require parquet

### Setup credentials

# Set some credentials for global usage
statement ok
set s3_endpoint='glob.reg.cred.use.this.domain.com'

statement ok
call set_s3_credentials()

# Set credentials for a specific bucket
statement ok
set s3_endpoint='bucket1.endpoint.bogusdomain.com'

statement ok
call set_s3_credentials(scope=['s3://bucket1'])

# Set credentials for other bucket
statement ok
set s3_endpoint='bucket2.endpoint.bogusdomain.com'

statement ok
call set_s3_credentials(scope=['s3://bucket2'])

# Set credentials for some specific file in bucket2
statement ok
set s3_endpoint='bucket2.endpoint.for.path.bogusdomain.com'

statement ok
call set_s3_credentials(scope=['s3://bucket2/this/path/takes/other/creds/'])

# Finally, set the global credentials to something else: these should not be used as long as our urls match
statement ok
set s3_endpoint='duckdb.settings.endpoint.bogusdomain.com'

### Testing credentials match correctly

statement error
from "s3://bucket1/test.parquet"
----
bucket1.endpoint.bogusdomain.com

statement error
from "s3://bucket2/test.parquet"
----
bucket2.endpoint.bogusdomain.com

statement error
from "s3://bucket2/this/path/takes/other/creds/test.parquet"
----
bucket2.endpoint.for.path.bogusdomain.com

statement error
from "s3://bucket3/test.parquet"
----
glob.reg.cred.use.this.domain.com

query III
select id, file_system, scope from duckdb_credentials() order by id;
----
1		HTTPFileSystem	[s3://]
2		HTTPFileSystem	[s3://bucket1]
3		HTTPFileSystem	[s3://bucket2]
4		HTTPFileSystem	[s3://bucket2/this/path/takes/other/creds/]

query I
select
    list_filter(split(credential_string,';'), x -> starts_with(x, 'endpoint'))[1]
from duckdb_credentials();
----
endpoint=glob.reg.cred.use.this.domain.com
endpoint=bucket1.endpoint.bogusdomain.com
endpoint=bucket2.endpoint.bogusdomain.com
endpoint=bucket2.endpoint.for.path.bogusdomain.com