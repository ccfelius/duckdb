# name: test/sql/copy/csv/test_comment_option.test
# description: Test that the comment option of csv reading works properly
# group: [csv]

statement ok
PRAGMA enable_verification

query II
FROM 'data/csv/comments/simple.csv';
----
1	3
6	7

# Lets try over a vector size
query II
FROM 'data/csv/comments/big.csv' limit 5;
----
1	3
6	7
1	3
6	7
1	3

# Check commented data-points are not in the data
query II
FROM 'data/csv/comments/big.csv' where  a = 20
----

query I
SELECT count(*) FROM 'data/csv/comments/big.csv'
----
1448

# Test empty spaces
query II
FROM read_csv('data/csv/comments/empty_space.csv');
----
1	3
1	3
1	#3
1	 #3


# Lets try with a buffer limit

loop buffer_size 30 35

query II
FROM read_csv('data/csv/comments/simple.csv', buffer_size = ${buffer_size}) limit 5;
----
1	3
6	7

endloop

# Test that fully commented lines are ignored by the parameter header but not by skiprows.
query II
FROM read_csv('data/csv/comments/simple.csv', skip = 2);
----
1	3
6	7

# Test we can detect comments and skip rows at the same time
query II
FROM 'data/csv/comments/invalid_rows.csv';
----
1	3
6	7

query II
select SkipRows, Comment FROM sniff_csv('data/csv/comments/invalid_rows.csv');
----
5	#

# Test ignore errors
statement error
select count(*) FROM 'data/csv/comments/error.csv';
----
CSV options could not be auto-detected.

query I
select count(*) FROM read_csv('data/csv/comments/error.csv', ignore_errors = true);
----
2726

query I
select count(*) FROM read_csv('data/csv/comments/error.csv', ignore_errors = true, comment = '#');
----
2726

query II
select comment, columns from sniff_csv('data/csv/comments/error.csv', ignore_errors = true);
----
\0	[{'name': a, 'type': BIGINT}, {'name': b, 'type': BIGINT}]

query II
select comment, columns from sniff_csv('data/csv/comments/error.csv', ignore_errors = true, comment = '#');
----
#	[{'name': a, 'type': BIGINT}, {'name': b, 'type': BIGINT}]

#query I
#FROM
# Test set skip row
