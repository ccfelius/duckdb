# name: test/sql/copy/csv/test_mismatch_schemas.test
# description: Test scan over multiple files with mismatching schemas
# group: [csv]

statement ok
PRAGMA enable_verification

# We will use the header from the first file (the one identified in the binder) as our schema. If other files have extra columns, these columns will be ignored
#query III
#SELECT * FROM read_csv(['data/csv/multiple_files/more_columns/file_1.csv','data/csv/multiple_files/more_columns/file_2.csv',
#'data/csv/multiple_files/more_columns/file_3.csv','data/csv/multiple_files/more_columns/file_4.csv'])
#ORDER BY ALL;
#----
#1	2	3
#1	2	3
#1	2	3
#1	2	3
#1	2	3
#1	2	3
#1	2	3
#1	2	3
#
## If there is a mismatch, all files must have a header, or error.
#statement error
#SELECT * FROM read_csv(['data/csv/multiple_files/more_columns/file_1.csv','data/csv/multiple_files/more_columns/file_2.csv',
#'data/csv/multiple_files/more_columns/file_3.csv','data/csv/multiple_files/more_columns/file_no_header.csv'])
#ORDER BY ALL;
#----
#bla

# What if we add file 5, has 3 columns but with a name mismatch
#statement error
#SELECT * FROM read_csv(['data/csv/multiple_files/more_columns/file_1.csv','data/csv/multiple_files/more_columns/file_2.csv',
#'data/csv/multiple_files/more_columns/file_3.csv','data/csv/multiple_files/more_columns/file_5.csv'])
#ORDER BY ALL;
#----
#1	2	3
#1	2	3
#1	2	3
#1	2	3
#1	2	3
#1	2	3
#1	2	3
#1	2	3


query III
SELECT * FROM read_csv(['data/csv/multiple_files/more_columns/file_2.csv','data/csv/multiple_files/more_columns/file_1.csv',
'data/csv/multiple_files/more_columns/file_3.csv','data/csv/multiple_files/more_columns/file_4.csv'])
ORDER BY ALL;
----
1	2	3
1	2	3
1	2	3
1	2	3
1	2	3
1	2	3
1	2	3
1	2	3