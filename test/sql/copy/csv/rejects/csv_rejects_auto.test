# name: test/sql/copy/csv/rejects/csv_rejects_auto.test
# group: [rejects]

require skip_reload

# FIXME: https://github.com/duckdb/duckdb/issues/7755
require vector_size 2048

# Ensure that we can get the schema if we reduce the sample size and ignore errors
query IIIII
SELECT typeof(first(column0)), typeof(first(column1)), COUNT(*), SUM(column0), MAX(len(column1)) FROM read_csv_auto(
    'test/sql/copy/csv/data/error/mismatch/big_bad*.csv',
    sample_size=1,
    rejects_table='csv_rejects_table',
    ignore_errors=true);
----
BIGINT	VARCHAR	11044	11044	2

query IIIIIII rowsort
SELECT regexp_replace(file, '\\', '/', 'g'), line, column_idx, column_name, error_type, csv_line, byte_position
FROM csv_rejects_table;
----
test/sql/copy/csv/data/error/mismatch/big_bad.csv	2176	0	"column0"	CAST	B, A	10875
test/sql/copy/csv/data/error/mismatch/big_bad.csv	4176	0	"column0"	CAST	C, A	20875
test/sql/copy/csv/data/error/mismatch/big_bad2.csv	3680	0	"column0"	CAST	B, A	18395
test/sql/copy/csv/data/error/mismatch/big_bad2.csv	5680	0	"column0"	CAST	C, A	28395

query I
SELECT error_message
FROM csv_rejects_table where line=2176 and column_idx=0;
----
<REGEX>:.*Could not convert string "B" to 'BIGINT'.*

query I
SELECT error_message
FROM csv_rejects_table where line=4176 and column_idx=0;
----
<REGEX>:.*Could not convert string "C" to 'BIGINT'.*

query I
SELECT error_message
FROM csv_rejects_table where line=3680 and column_idx=0;
----
<REGEX>:.*Could not convert string "B" to 'BIGINT'.*

query I
SELECT error_message
FROM csv_rejects_table where line=5680 and column_idx=0;
----
<REGEX>:.*Could not convert string "C" to 'BIGINT'.*

statement ok
DROP TABLE csv_rejects_table;

# Test with lots of errors 
query I
SELECT SUM(num) FROM read_csv_auto(
	'test/sql/copy/csv/data/error/mismatch/half1.csv',
	header=true,
	ignore_errors=true,
	sample_size=1,
	rejects_table='csv_rejects_table')
----
2464

query I
SELECT COUNT(*) FROM csv_rejects_table;
----
1024

statement ok
DROP TABLE csv_rejects_table;

# Test same with COPY
statement ok
CREATE TABLE tbl1 (col1 BIGINT, col2 VARCHAR);

statement ok
COPY tbl1 FROM 'test/sql/copy/csv/data/error/mismatch/half1.csv'
WITH (HEADER, IGNORE_ERRORS TRUE, SAMPLE_SIZE 1000, REJECTS_TABLE 'csv_rejects_table');

query I
SELECT SUM(col1) FROM tbl1;
----
2464

query I
SELECT COUNT(*) FROM csv_rejects_table;
----
1024

statement ok
DROP TABLE csv_rejects_table;

statement ok
DROP TABLE tbl1;

# Test with more errors than STANDARD_VECTOR_SIZE
query I
SELECT SUM(num) FROM read_csv_auto(
	'test/sql/copy/csv/data/error/mismatch/half2.csv',
	header=true,
	ignore_errors=true,
	sample_size=1,
	rejects_table='csv_rejects_table');
----
2542

query I
SELECT COUNT(*) FROM csv_rejects_table;
----
3072

statement ok
DROP TABLE csv_rejects_table;

statement ok
CREATE TABLE tbl1 (col1 BIGINT, col2 VARCHAR);

statement ok
COPY tbl1 FROM 'test/sql/copy/csv/data/error/mismatch/half2.csv'
WITH (HEADER, IGNORE_ERRORS TRUE,  SAMPLE_SIZE 1000, REJECTS_TABLE 'csv_rejects_table');

query I
SELECT SUM(col1) FROM tbl1;
----
2542

query I
SELECT COUNT(*) FROM csv_rejects_table;
----
3072

statement ok
DROP TABLE csv_rejects_table;

statement ok
DROP TABLE tbl1;

# Test with more errors than STANDARD_VECTOR_SIZE and limit
statement ok
CREATE TABLE tbl1 (col1 BIGINT, col2 VARCHAR);

statement ok
COPY tbl1 FROM 'test/sql/copy/csv/data/error/mismatch/half2.csv'
WITH (HEADER, IGNORE_ERRORS TRUE, SAMPLE_SIZE 1000, REJECTS_TABLE 'csv_rejects_table', REJECTS_LIMIT 1337);

query I
SELECT SUM(col1) FROM tbl1;
----
2542

query I
SELECT COUNT(*) FROM csv_rejects_table;
----
1337

statement ok
DROP TABLE csv_rejects_table;

statement ok
DROP TABLE tbl1;

