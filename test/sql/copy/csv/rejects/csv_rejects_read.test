# name: test/sql/copy/csv/rejects/csv_rejects_read.test
# group: [rejects]

require skip_reload

# FIXME: https://github.com/duckdb/duckdb/issues/7755
require vector_size 2048


query III rowsort
SELECT * FROM read_csv(
    'test/sql/copy/csv/data/error/mismatch/bad.csv',
    columns = {'col0': 'INTEGER', 'col1': 'INTEGER', 'col2': 'VARCHAR'},
    rejects_table='csv_rejects_table',
    ignore_errors=true, auto_detect=false);
----
1	2	AAA
6	7	CCC

query IIIIIII rowsort
SELECT regexp_replace(file, '\\', '/', 'g'), line, column_idx, column_name, error_type, csv_line, byte_position
FROM csv_rejects_table;
----
test/sql/copy/csv/data/error/mismatch/bad.csv	2	1	"col1"	CAST	4,BBB,9,	9

query I
SELECT error_message
FROM csv_rejects_table;
----
<REGEX>:.*Could not convert string "BBB" to 'INTEGER'.*

statement ok
DROP TABLE csv_rejects_table;

# Test with multiple columns on the same row
query III rowsort
SELECT * FROM read_csv(
    'test/sql/copy/csv/data/error/mismatch/bad2.csv',
    columns = {'col0': 'INTEGER', 'col1': 'INTEGER', 'col2': 'INTEGER'},
    rejects_table='csv_rejects_table',
    ignore_errors=true, auto_detect=false);
----
4	5	9

query IIIIIII rowsort
SELECT regexp_replace(file, '\\', '/', 'g'), line, column_idx, column_name, error_type, csv_line, byte_position
FROM csv_rejects_table;
----
test/sql/copy/csv/data/error/mismatch/bad2.csv	1	2	"col2"	CAST	,2,DDD,	1
test/sql/copy/csv/data/error/mismatch/bad2.csv	3	0	"col0"	CAST	EEE,7,FFF,	16
test/sql/copy/csv/data/error/mismatch/bad2.csv	3	2	"col2"	CAST	EEE,7,FFF,	16

query I
SELECT error_message
FROM csv_rejects_table where line=1 and column_idx=2;
----
<REGEX>:.*Could not convert string "DDD" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table where line=3 and column_idx=0;
----
<REGEX>:.*Could not convert string "EEE" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table where line=3 and column_idx=2;
----
<REGEX>:.*Could not convert string "FFF" to 'INTEGER'.*

statement ok
DROP TABLE csv_rejects_table;

# Test with multiple files
query III rowsort
SELECT * FROM read_csv(
    'test/sql/copy/csv/data/error/mismatch/bad*.csv',
    columns = {'col0': 'INTEGER', 'col1': 'INTEGER', 'col2': 'VARCHAR'},
    rejects_table='csv_rejects_table',
    ignore_errors=true, auto_detect=false);
----
1	2	AAA
1	2	DDD
4	5	9
6	7	CCC


query IIIIIII rowsort
SELECT regexp_replace(file, '\\', '/', 'g'), line, column_idx, column_name, error_type, csv_line, byte_position
FROM csv_rejects_table;
----
test/sql/copy/csv/data/error/mismatch/bad.csv	2	1	"col1"	CAST	4,BBB,9,	9
test/sql/copy/csv/data/error/mismatch/bad2.csv	3	0	"col0"	CAST	EEE,7,FFF,	16

query I
SELECT error_message
FROM csv_rejects_table where line=2 and column_idx=1;
----
<REGEX>:.*Could not convert string "BBB" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table where line=3 and column_idx=0;
----
<REGEX>:.*Could not convert string "EEE" to 'INTEGER'.*

statement ok
DROP TABLE csv_rejects_table;

# Set limit

query III rowsort
SELECT * FROM read_csv(
    'test/sql/copy/csv/data/error/mismatch/bad*.csv',
    columns = {'col0': 'INTEGER', 'col1': 'INTEGER', 'col2': 'VARCHAR'},
    rejects_table='csv_rejects_table',
    rejects_limit=2,
    ignore_errors=true, auto_detect=false);
----
1	2	AAA
1	2	DDD
4	5	9
6	7	CCC

# We should now only have two errors logged
query I
SELECT COUNT(*) FROM csv_rejects_table
----
2

statement ok
DROP TABLE csv_rejects_table;

# Try with bigger files
query I
SELECT SUM(num) FROM read_csv(
    'test/sql/copy/csv/data/error/mismatch/big_bad.csv',
    columns = {'num': 'INTEGER', 'str': 'VARCHAR'},
    rejects_table='csv_rejects_table',
    ignore_errors=true, auto_detect=false);
----
4270

query  IIIIIII rowsort
SELECT regexp_replace(file, '\\', '/', 'g'), line, column_idx, column_name, error_type, csv_line, byte_position
FROM csv_rejects_table;
----
test/sql/copy/csv/data/error/mismatch/big_bad.csv	2176	0	"num"	CAST	B, A	10875
test/sql/copy/csv/data/error/mismatch/big_bad.csv	4176	0	"num"	CAST	C, A	20875

query I
SELECT error_message
FROM csv_rejects_table where line=2176 and column_idx=0;
----
<REGEX>:.*Could not convert string "B" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table where line=4176 and column_idx=0;
----
<REGEX>:.*Could not convert string "C" to 'INTEGER'.*

statement ok
DROP TABLE csv_rejects_table;

query I
SELECT SUM(num) FROM read_csv(
    'test/sql/copy/csv/data/error/mismatch/big_bad2.csv',
    columns = {'num': 'INTEGER', 'str': 'VARCHAR'},
    rejects_table='csv_rejects_table',
    ignore_errors=true,  auto_detect=false)
----
6774

query  IIIIIII rowsort
SELECT regexp_replace(file, '\\', '/', 'g'), line, column_idx, column_name, error_type, csv_line, byte_position
FROM csv_rejects_table;
----
test/sql/copy/csv/data/error/mismatch/big_bad2.csv	3680	0	"num"	CAST	B, A	18395
test/sql/copy/csv/data/error/mismatch/big_bad2.csv	5680	0	"num"	CAST	C, A	28395

query I
SELECT error_message
FROM csv_rejects_table where line=3680 and column_idx=0;
----
<REGEX>:.*Could not convert string "B" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table where line=5680 and column_idx=0;
----
<REGEX>:.*Could not convert string "C" to 'INTEGER'.*

statement ok
DROP TABLE csv_rejects_table;

# Test with multiple big files
query I
SELECT SUM(num) FROM read_csv(
    'test/sql/copy/csv/data/error/mismatch/big_*.csv',
    columns = {'num': 'INTEGER', 'str': 'VARCHAR'},
    rejects_table='csv_rejects_table',
    ignore_errors=true, auto_detect=false);
----
11044

query  IIIIIII rowsort
SELECT regexp_replace(file, '\\', '/', 'g'), line, column_idx, column_name, error_type, csv_line, byte_position
FROM csv_rejects_table;
----
test/sql/copy/csv/data/error/mismatch/big_bad.csv	2176	0	"num"	CAST	B, A	10875
test/sql/copy/csv/data/error/mismatch/big_bad.csv	4176	0	"num"	CAST	C, A	20875
test/sql/copy/csv/data/error/mismatch/big_bad2.csv	3680	0	"num"	CAST	B, A	18395
test/sql/copy/csv/data/error/mismatch/big_bad2.csv	5680	0	"num"	CAST	C, A	28395

query I
SELECT error_message
FROM csv_rejects_table where line=3680 and column_idx=0;
----
<REGEX>:.*Could not convert string "B" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table where line=5680 and column_idx=0;
----
<REGEX>:.*Could not convert string "C" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table where line=2176 and column_idx=0;
----
<REGEX>:.*Could not convert string "B" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table where line=4176 and column_idx=0;
----
<REGEX>:.*Could not convert string "C" to 'INTEGER'.*

statement ok
DROP TABLE csv_rejects_table;

# Test with multiple rejects table in the same query
query IIII rowsort
SELECT *
FROM read_csv(
    'test/sql/copy/csv/data/error/mismatch/small1.csv',
    columns = {'num': 'INTEGER', 'str': 'VARCHAR'},
    rejects_table='csv_rejects_table_left',
    ignore_errors=true) as L
JOIN read_csv(
    'test/sql/copy/csv/data/error/mismatch/small2.csv',
    columns = {'num': 'INTEGER', 'str': 'VARCHAR'},
    rejects_table='csv_rejects_table_right',
    ignore_errors=true) as R
ON L.num = R.num;
----
1	A	1	A
3	C	3	C

query IIIIIII rowsort
SELECT regexp_replace(file, '\\', '/', 'g'), line, column_idx, column_name, error_type, csv_line, byte_position
FROM csv_rejects_table_left;
----
test/sql/copy/csv/data/error/mismatch/small1.csv	3	0	"num"	CAST	X,Y	14
test/sql/copy/csv/data/error/mismatch/small1.csv	6	0	"num"	CAST	X,Y	26

query IIIIIII rowsort
SELECT regexp_replace(file, '\\', '/', 'g'), line, column_idx, column_name, error_type, csv_line, byte_position
FROM csv_rejects_table_right;
----
test/sql/copy/csv/data/error/mismatch/small2.csv	3	0	"num"	CAST	X,Y	14
test/sql/copy/csv/data/error/mismatch/small2.csv	5	0	"num"	CAST	X,Y	22

query I
SELECT error_message
FROM csv_rejects_table_left where line=3 and column_idx=0;
----
<REGEX>:.*Could not convert string "X" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table_left where line=6 and column_idx=0;
----
<REGEX>:.*Could not convert string "X" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table_right where line=3 and column_idx=0;
----
<REGEX>:.*Could not convert string "X" to 'INTEGER'.*

query I
SELECT error_message
FROM csv_rejects_table_right where line=5 and column_idx=0;
----
<REGEX>:.*Could not convert string "X" to 'INTEGER'.*

statement ok
DROP TABLE csv_rejects_table_left;

statement ok
DROP TABLE csv_rejects_table_right;

# Test with multiple rejects table in the same query, with different limits
# (only one reject should be logged in right table)
query IIII rowsort
SELECT *
FROM read_csv(
    'test/sql/copy/csv/data/error/mismatch/small1.csv',
    columns = {'num': 'INTEGER', 'str': 'VARCHAR'},
    rejects_table='csv_rejects_table_left',
    ignore_errors=true) as L
JOIN read_csv(
    'test/sql/copy/csv/data/error/mismatch/small2.csv',
    columns = {'num': 'INTEGER', 'str': 'VARCHAR'},
    rejects_table='csv_rejects_table_right',
	rejects_limit=1,
    ignore_errors=true) as R
ON L.num = R.num;
----
1	A	1	A
3	C	3	C


query IIIIIII rowsort
SELECT regexp_replace(file, '\\', '/', 'g'), line, column_idx, column_name, error_type, csv_line, byte_position
FROM csv_rejects_table_left;
----
test/sql/copy/csv/data/error/mismatch/small1.csv	3	0	"num"	CAST	X,Y	14
test/sql/copy/csv/data/error/mismatch/small1.csv	6	0	"num"	CAST	X,Y	26

query I
SELECT COUNT(*)
FROM csv_rejects_table_right;
----
1

statement ok
DROP TABLE csv_rejects_table_left;

statement ok
DROP TABLE csv_rejects_table_right;

