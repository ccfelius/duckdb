# name: test/sql/returning/returning_insert.test
# description: Test returning with top level INSERT statement
# group: [returning]

statement ok
CREATE TABLE table1 (a INTEGER DEFAULT -1, b INTEGER DEFAULT -2, c INTEGER DEFAULT -3);

# standard insert still works
query I
INSERT INTO table1 VALUES (1, 2, 3);
----
1

# returning 1 named column
query I
INSERT INTO table1 VALUES (1, 2, 3) RETURNING a;
----
1

# returning all columns with *
query III
INSERT INTO table1 VALUES (1, 2, 3) RETURNING *;
----
1	2	3

# returning * expression with more named columns
query IIIIII
INSERT INTO table1 VALUES (10, 20, 30), (40, 50, 60), (70, 80, 90) RETURNING *, c, b, a;
----
10	20	30	30	20	10
40	50	60	60	50	40
70	80	90	90	80	70

# returning column names out of order
query III
INSERT INTO table1 VALUES (1, 2, 3) RETURNING c, a, b;
----
3	1	2

# inserting column names out of order, then returning them in order
query III
INSERT INTO table1 (c, b, a) VALUES (3, 2, 1) RETURNING a, b, c;
----
1	2	3

# returning using a column alias
query II
INSERT INTO table1 VALUES (1, 2, 3) RETURNING a AS alias1, b AS alias2;
----
1	2

# returning expression with aggregation function is not allowed
statement error
INSERT INTO table1 VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3) RETURNING SUM(a);

# returning * while inserting only a subset of columns
query III
INSERT INTO table1(a) VALUES (10) RETURNING *;
----
10	-2	-3

# returning while insert uses a subquery
query III
INSERT INTO table1 (a, b, c) SELECT * from table1 WHERE a = 10 and b=-2 and c=-3 RETURNING *;
----
10	-2	-3

# returning with bound subquery
query I
INSERT INTO table1(a, b, c) SELECT * FROM table1 WHERE a = 10 and b=-2 and c=-3 LIMIT 1 RETURNING a IN (SELECT a FROM table1);
----
1

# inserting empty subquery returns nothing
query III
INSERT INTO table1 (a, b, c) SELECT * from table1 WHERE a = 100000 and b = 10000 and c=100000 RETURNING a, b, c;
----

# returning subquery should still query table1, not just returning rows.
query I
INSERT INTO table1 (a, b, c) VALUES (10, 1000, 1000) RETURNING a IN (SELECT a from table1 where b = -2);
----
1

# using case statement
query I
INSERT INTO table1 VALUES (1, 2, 3) RETURNING CASE WHEN b=2 THEN a ELSE b END;
----
1

# using case statement
query I
INSERT INTO table1 VALUES (1, 2, 3) RETURNING CASE WHEN b=3 THEN a ELSE b END;
----
2

statement ok
----
DELETE FROM table1;

statement ok
insert into table1(a) select * from range (0, 4000, 1) t1(a);

query I
SELECT count(*) FROM table1;
----
4000

mode output_hash

# the following two tests test that all inserts get streamed back to the returning statement
query I
INSERT INTO table1(a, b, c) SELECT a, b, c FROM table1  RETURNING a;
----
4000 values hashing to b28a0440a7c3898c88617db0673db740