# name: test/sql/window/test_fill_orderby.test
# description: Test Fill function with secondary orderings
# group: [window]

#
# Error checks
#

# Only one ordering allowed
statement error
select fill(i order by 10-i, i * i) over (order by i) from range(3) tbl(i);
----
FILL functions must have only one ORDER BY expression

# Ordering must be numeric
statement error
select fill(i order by i::VARCHAR) over (order by i) from range(3) tbl(i);
----
FILL orderings must support subtraction

#
# Simple interpolation coverage tests
#

loop nulled 0 5

query III
with source as (
	select 
		i, 
		i * 3 % 5 as permuted,
		if(permuted = ${nulled}, NULL, permuted) as missing
	from range(5) tbl(i)
)
select
	i,
	permuted,
	fill(missing order by permuted) over (order by i) as filled
from source
qualify filled <> permuted
----

endloop

# Single values
query III
with source as (
	select 
		i, 
		i * 3 % 5 as permuted,
		if(permuted > 0, NULL, permuted) as missing
	from range(5) tbl(i)
)
select
	i,
	permuted,
	fill(missing order by permuted) over (order by i) as filled
from source
qualify filled <> permuted
----
1	3	0
2	1	0
3	4	0
4	2	0

# No values in partition
query III
with source as (
	select 
		i, 
		i * 5 % 11 as permuted,
		if(permuted < 6, NULL, permuted) as missing
	from range(11) tbl(i)
)
select
	i,
	permuted,
	fill(missing order by permuted) over (partition by permuted // 5 order by i) as filled
from source
qualify filled is distinct from permuted
order by i
----
0	0	NULL
3	4	NULL
5	3	NULL
7	2	NULL
9	1	NULL

# Outside valid sort values
query III
with source as (
	select 
		i, 
		i * 5 % 11 as permuted,
		if(permuted = 2, NULL, permuted) as missing,
		if(permuted < 4, NULL, permuted) as unsorted,
	from range(11) tbl(i)
)
select
	i,
	permuted,
	fill(missing order by unsorted) over (order by i) as filled
from source
qualify filled is distinct from permuted
order by i
----
7	2	NULL
