# name: test/sql/aggregate/aggregates/test_avg.test
# description: Test AVG operator
# group: [aggregates]

require skip_reload

# scalar average
query RR
SELECT AVG(3), AVG(NULL)
----
3
NULL

query RR
SELECT AVG(3::SMALLINT), AVG(NULL::SMALLINT)
----
3
NULL

query RR
SELECT AVG(3::DOUBLE), AVG(NULL::DOUBLE)
----
3
NULL

# test average on sequence
statement ok
CREATE SEQUENCE seq;

query R
SELECT AVG(nextval('seq'))
----
1

query R
SELECT AVG(nextval('seq'))
----
2

statement ok
CREATE TABLE integers(i INTEGER);

statement ok
INSERT INTO integers VALUES (1), (2), (3)

query RRRR
SELECT AVG(i), AVG(1), AVG(DISTINCT i), AVG(NULL) FROM integers
----
2
1
2
NULL

query R
SELECT AVG(i) FROM integers WHERE i > 100
----
NULL

# invalid use of average
statement error
SELECT AVG()
----

statement error
SELECT AVG(1, 2, 3)
----

statement error
SELECT AVG(AVG(1))
----

# empty average
statement ok
CREATE TABLE vals(i INTEGER, j DOUBLE, k HUGEINT);

statement ok
INSERT INTO vals VALUES (NULL, NULL, NULL)

query III
SELECT AVG(i), AVG(j), AVG(k) FROM vals;
----
NULL	NULL	NULL

# Temporal values
statement ok
CREATE OR REPLACE TABLE timestamps AS 
	SELECT range AS ts
	FROM range('2024-11-01'::DATE, '2024-12-01'::DATE, INTERVAL 1 DAY)

query I
SELECT AVG(ts::DATE) 
FROM timestamps
----
2024-11-15 12:00:00

query I
SELECT AVG(ts) 
FROM timestamps
----
2024-11-15 12:00:00

query I
SELECT AVG(ts::TIMESTAMPTZ) 
FROM timestamps
----
2024-11-15 12:00:00+00

statement ok
CREATE OR REPLACE TABLE times AS 
	SELECT range AS ts
	FROM range('2024-11-01'::DATE, '2024-11-02'::DATE, INTERVAL 7 MINUTES)

query I
SELECT AVG(ts::TIME) 
FROM times
----
11:57:30
