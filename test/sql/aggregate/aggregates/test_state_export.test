# name: test/sql/aggregate/aggregates/test_state_export.test
# description: Test the state export functionality
# group: [aggregates]

statement ok
PRAGMA enable_verification

# TODO make this work with ze optimizer
statement ok
PRAGMA disable_optimizer

statement ok
create table dummy as select range % 10 g, range d from range(100);

# ungrouped aggr

query IIIIII nosort res0
SELECT count(*), count(d), sum(d), avg(d)::integer, min(d), max(d) FROM dummy;
----
100	100	4950	49	0	99

query IIIIII nosort res0
SELECT finalize(count(*) EXPORT STATE), finalize(count(d) EXPORT STATE), finalize(sum(d) EXPORT STATE), finalize(avg(d) EXPORT STATE)::integer, finalize(min(d) EXPORT STATE), finalize(max(d) EXPORT STATE)  FROM dummy;
----

# grouped aggr
query IIIIIII nosort res1
SELECT g, count(*), count(d), sum(d), avg(d)::integer, min(d), max(d) FROM dummy GROUP BY g ORDER BY g;
----
0	10	10	450	45	0	90
1	10	10	460	46	1	91
2	10	10	470	47	2	92
3	10	10	480	48	3	93
4	10	10	490	49	4	94
5	10	10	500	50	5	95
6	10	10	510	51	6	96
7	10	10	520	52	7	97
8	10	10	530	53	8	98
9	10	10	540	54	9	99

query IIIIIII nosort res1
SELECT g, finalize(count(*) EXPORT STATE), finalize(count(d) EXPORT STATE), finalize(sum(d) EXPORT STATE), finalize(avg(d) EXPORT STATE)::integer, finalize(min(d) EXPORT STATE), finalize(max(d) EXPORT STATE)  FROM dummy GROUP BY g ORDER BY g;
----

# we can persist this
statement ok
CREATE TABLE state AS SELECT g, count(*) EXPORT STATE count_star_state, count(d) EXPORT STATE count_state, sum(d) EXPORT STATE sum_state, avg(d) EXPORT STATE avg_state, min(d) EXPORT STATE min_state, max(d) EXPORT STATE max_state FROM dummy GROUP BY g ORDER BY g;

query IIIIIII nosort res1
SELECT g, finalize(count_star_state),finalize(count_state), finalize(sum_state), finalize(avg_state)::integer, finalize(min_state), finalize(max_state) FROM state ORDER BY g;
----

query II nosort res2
SELECT sum(d)*2 FROM dummy;
----
9900

query II nosort res2
SELECT FINALIZE(COMBINE(SUM(d) EXPORT STATE, SUM(d) EXPORT STATE)) FROM dummy;
----


query II nosort res3
SELECT g, sum(d)*2 combined_sum FROM dummy GROUP BY g ORDER BY g;
----
0	900
1	920
2	940
3	960
4	980
5	1000
6	1020
7	1040
8	1060
9	1080

query II nosort res3
select g, finalize(combine(sum(d) export STATE, sum_state)) combined_sum from dummy join state using (g) group by g, sum_state ORDER BY g;
----

# combine aggregate state in UNION
statement ok
CREATE TABLE state2 AS SELECT g, sum(d) EXPORT STATE sum_state FROM dummy WHERE g < 5 GROUP BY g ORDER BY g;

query II nosort res3
select g, finalize(sum_state) * 2 combined_sum from (select g, sum(d) export STATE sum_state from dummy where g >= 5 GROUP BY g union all SELECT * FROM state2) ORDER BY g;
----

# combine aggregate states in JOINs with NULLs
query II nosort res3
with groups as (select distinct g from dummy)
select g, FINALIZE(COMBINE(sum_state, sum_state2)) * 2 from groups left join state2 using(g) left join (select g, sum(d) export STATE sum_state2 from dummy where g >= 5 GROUP BY g) using (g)
----

query IIII
with groups as (select distinct g from dummy)
select g, FINALIZE(sum_state), FINALIZE(sum_state2), FINALIZE(COMBINE(sum_state, sum_state2))  from groups left join state2 using(g) left join (select g, sum(d) export STATE sum_state2 from dummy where g >= 3 GROUP BY g) using (g) order by g
----
0	450	NULL	450
1	460	NULL	460
2	470	NULL	470
3	480	480	960
4	490	490	980
5	NULL	500	500
6	NULL	510	510
7	NULL	520	520
8	NULL	530	530
9	NULL	540	540


# you're holding it wrong:

statement error
SELECT FINALIZE(COMBINE(SUM(d) EXPORT STATE, AVG(d) EXPORT STATE)) FROM dummy;

statement error
SELECT combine(NULL, NULL);

statement error
SELECT combine(42, 42);

statement error
SELECT finalize(NULL);

statement error
SELECT finalize(42);

statement error
SELECT finalize(sum(d)) from dummy;

statement error
SELECT finalize(sum(d)) from dummy group by g;

# can't finalize twice
statement error
SELECT finalize(finalize(sum(d) EXPORT STATE)) from dummy;

statement error
select sum(42) export state over ();

