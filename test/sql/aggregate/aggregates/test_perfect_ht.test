# name: test/sql/aggregate/aggregates/test_perfect_ht.test
# description: Test aggregates that can trigger a perfect HT
# group: [aggregates]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE timeseries(year INTEGER, val INTEGER);

statement ok
INSERT INTO timeseries VALUES (1996, 10), (1997, 12), (1996, 20), (2001, 30), (NULL, 1), (1996, NULL);

query IIII
SELECT year, SUM(val), COUNT(val), COUNT(*) FROM timeseries GROUP BY year ORDER BY year;
----
NULL	1	1	1
1996	30	2	3
1997	12	1	1
2001	30	1	1

# test edge cases: multiple tinyints without statistics
# create a table of tinyints [-127, 128] stored as varchar
# by forcing a varchar to tinyint cast we lose statistics
statement ok
CREATE TABLE tinyints AS SELECT i::TINYINT::VARCHAR AS t FROM range(-127, 128) tbl(i);

query IIII
SELECT COUNT(DISTINCT i), MIN(i), MAX(i), SUM(i) / COUNT(i) FROM (SELECT t::TINYINT t1, t::TINYINT t2 FROM tinyints GROUP BY t1, t2) tbl(i)
----
255	-127	127	0

# now do the same with a single smallint column
statement ok
CREATE TABLE smallints AS SELECT i::SMALLINT::VARCHAR AS t FROM range(-32767, 32768) tbl(i);

query IIII
SELECT COUNT(DISTINCT i), MIN(i), MAX(i), SUM(i) / COUNT(i) FROM (SELECT t::SMALLINT t1 FROM smallints GROUP BY t1) tbl(i)
----
65535	-32767	32767	0
