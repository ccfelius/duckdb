# name: test/sql/aggregate/aggregates/histogram_tpch.test_slow
# description: Test histogram operator on TPC-H
# group: [aggregates]

require tpch

statement ok
CALL dbgen(sf=1);

query I
SELECT histogram(l_orderkey, range(0, 7000000, 1000000))
FROM lineitem
----
{0=0, 1000000=1000049, 2000000=1000448, 3000000=999174, 4000000=1000987, 5000000=1000496, 6000000=1000061}

query I
SELECT histogram(l_orderkey // 1000000)
FROM lineitem
----
{0=1000048, 1=1000447, 2=999171, 3=1000989, 4=1000498, 5=1000060, 6=2}

query I
SELECT histogram(l_shipdate, list_append(range((SELECT MIN(l_shipdate) FROM lineitem), (SELECT MAX(l_shipdate) FROM lineitem), interval '1' year), 'infinity'::timestamp))
FROM lineitem
----
{1992-01-02=17, 1993-01-02=761193, 1994-01-02=908785, 1995-01-02=909464, 1996-01-02=914963, 1997-01-02=913658, 1998-01-02=911349, infinity=681786}

# grouped histogram
query II nosort grouped_map
SELECT l_returnflag, histogram(l_orderkey, range(0, 7000000, 1000000))
FROM lineitem
GROUP BY l_returnflag
ORDER BY l_returnflag
----

# compute using filtered aggregates - this should produce the same result
query II nosort grouped_map
SELECT l_returnflag,
	map {
	'0': case when sum(1) filter(l_orderkey <= 0) is null then 0 end,
	'1000000': sum(1) filter(l_orderkey > 0 and l_orderkey <= 1000000),
	'2000000': sum(1) filter(l_orderkey > 1000000 and l_orderkey <= 2000000),
	'3000000': sum(1) filter(l_orderkey > 2000000 and l_orderkey <= 3000000),
	'4000000': sum(1) filter(l_orderkey > 3000000 and l_orderkey <= 4000000),
	'5000000': sum(1) filter(l_orderkey > 4000000 and l_orderkey <= 5000000),
	'6000000': sum(1) filter(l_orderkey > 5000000 and l_orderkey <= 6000000)
	}
FROM lineitem
GROUP BY l_returnflag
ORDER BY l_returnflag
----
