# name: test/sql/alter/not_null/test_not_null_in_tran.test
# description: Test Set/Drop NOT NULL in transaction
# group: [alter_col]

statement ok
PRAGMA enable_verification

# Scenario #1, alter with uncommitted data
# Prepare persistent data
statement ok
CREATE TABLE t(i INTEGER, j INTEGER)

statement ok
INSERT INTO t SELECT i, i FROM RANGE(2048) tbl(i);

# Insert uncommitted null 
statement ok 
BEGIN TRANSACTION

statement ok 
INSERT INTO t VALUES(9999, NULL);

statement error
ALTER TABLE t ALTER COLUMN j SET NOT NULL

statement ok
COMMIT

# Has null, cannot alter after tran
statement error 
ALTER TABLE t ALTER COLUMN j SET NOT NULL

# No new data was added
query I
SELECT i FROM t WHERE j IS NULL
----
9999

# Prepare persistent data
statement ok
DROP TABLE IF EXISTS t

statement ok
CREATE TABLE t(i INTEGER, j INTEGER)

statement ok
INSERT INTO t SELECT i, i FROM RANGE(2048) tbl(i);

# Insert uncommitted data 
statement ok 
BEGIN TRANSACTION

statement ok 
INSERT INTO t values(8888, 8888)

statement ok 
ALTER TABLE t ALTER COLUMN j SET NOT NULL

statement error 
INSERT INTO t VALUES(9999 , NULL)

statement ok
COMMIT

# Cannot insert after tran
statement error 
INSERT INTO t VALUES(9999, NULL)

# No null data
query I
SELECT COUNT(*) FROM t WHERE j IS NULL
----
0

# Scenario #2, add/drop in the same tran
statement ok
DROP TABLE IF EXISTS t

statement ok
CREATE TABLE t(i int, j int)

statement ok
INSERT INTO T SELECT 1,1 FROM RANGE(2048)

statement ok
BEGIN TRANSACTION

statement ok
ALTER TABLE t ALTER COLUMN j SET NOT NULL

statement ok
INSERT INTO t VALUES(2, 2)

statement ok
ALTER TABLE t ALTER COLUMN j DROP NOT NULL 

statement ok
INSERT INTO t values(2, NULL)

statement ok
COMMIT

# Insert null after tran
statement ok
INSERT INTO t VALUES(3, NULL)

query II
SELECT * FROM t WHERE j IS NULL
----
2	NULL
3	NULL

# Scenario #3, rollback alter 
statement ok
DROP TABLE IF EXISTS t

statement ok
CREATE TABLE t(i int, j int)

statement ok
INSERT INTO T SELECT 1,1 FROM RANGE(2048)

statement ok
BEGIN TRANSACTION

# Set&Rollback
statement ok
ALTER TABLE t ALTER COLUMN j SET NOT NULL

statement ok
INSERT INTO T VALUES(8888, 9999)

statement ok
ROLLBACK

# CAN insert null after rollback 
statement ok 
INSERT INTO t VALUES(8888, NULL)

query I
SELECT i FROM t WHERE j IS NULL
----
8888

# Prepare data with NOT NULL constraint
statement ok
DROP TABLE IF EXISTS t

statement ok
CREATE TABLE t(i int, j int)

statement ok
ALTER TABLE t ALTER COLUMN j SET NOT NULL

statement ok
INSERT INTO T SELECT 1,1 FROM RANGE(2048)

statement ok
BEGIN TRANSACTION

# Drop&Rollback
statement ok
ALTER TABLE t ALTER COLUMN j DROP NOT NULL

statement ok 
INSERT INTO T VALUES(7777, NULL)

statement ok
ROLLBACK

# CANNOT insert null after rollback 
statement error 
INSERT INTO t VALUES(8888, NULL)

# NO null values
query I
SELECT COUNT(*) FROM t WHERE j IS NULL
----
0

