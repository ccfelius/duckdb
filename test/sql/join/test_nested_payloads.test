# name: test/sql/join/test_nested_payloads.test
# description: Test join with nested types in the payload
# group: [join]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE integers(fk INTEGER)

statement ok
INSERT INTO integers VALUES (1), (2), (3), (5), (NULL)

# Payload is LIST<INTEGER>
statement ok
CREATE VIEW intlists AS SELECT * FROM (VALUES
	(1, [1]),
	(2, [NULL]),
	(3, []),
	(4, [2, 3]),
	(5, [9,10,11]),
	(NULL::INTEGER, [13])
	) lv(pk, p);

query II
SELECT pk, p FROM intlists ORDER BY pk;
----
NULL	[13]
1	[1]
2	[NULL]
3	[]
4	[2, 3]
5	[9, 10, 11]

query III
SELECT fk, pk, p FROM integers, intlists WHERE fk = pk ORDER BY fk, pk
----
1	1	[1]
2	2	[NULL]
3	3	[]
5	5	[9, 10, 11]

query III
SELECT fk, pk, p FROM integers LEFT OUTER JOIN intlists ON integers.fk=intlists.pk ORDER BY fk, pk
----
NULL	NULL	NULL
1	1	[1]
2	2	[NULL]
3	3	[]
5	5	[9, 10, 11]

query III
SELECT fk, pk, p FROM intlists RIGHT OUTER JOIN integers ON integers.fk=intlists.pk ORDER BY fk, pk
----
NULL	NULL	NULL
1	1	[1]
2	2	[NULL]
3	3	[]
5	5	[9, 10, 11]

query III
SELECT fk, pk, p FROM integers FULL OUTER JOIN intlists ON integers.fk=intlists.pk ORDER BY fk, pk
----
NULL	NULL	NULL
NULL	NULL	[13]
NULL	4	[2, 3]
1	1	[1]
2	2	[NULL]
3	3	[]
5	5	[9, 10, 11]

# Payload is LIST<VARCHAR>
statement ok
CREATE VIEW strlists AS SELECT * FROM (VALUES
	(1, ['a']),
	(2, [NULL]),
	(3, []),
	(4, ['b', 'c']),
	(5, ['i','j','k']),
	(NULL::INTEGER, ['m'])
	) lv(pk, p);

query III
SELECT fk, pk, p FROM integers, strlists WHERE fk = pk ORDER BY fk
----
1	1	[a]
2	2	[NULL]
3	3	[]
5	5	[i, j, k]

query III
SELECT fk, pk, p FROM integers LEFT OUTER JOIN strlists ON integers.fk=strlists.pk ORDER BY fk
----
NULL	NULL	NULL
1	1	[a]
2	2	[NULL]
3	3	[]
5	5	[i, j, k]

query III
SELECT fk, pk, p FROM strlists RIGHT OUTER JOIN integers ON integers.fk=strlists.pk ORDER BY fk
----
NULL	NULL	NULL
1	1	[a]
2	2	[NULL]
3	3	[]
5	5	[i, j, k]

query III
SELECT fk, pk, p FROM integers FULL OUTER JOIN strlists ON integers.fk=strlists.pk ORDER BY fk, pk
----
NULL	NULL	NULL
NULL	NULL	[m]
NULL	4	[b, c]
1	1	[a]
2	2	[NULL]
3	3	[]
5	5	[i, j, k]

# Payload is STRUCT<a: INTEGER, b: VARCHAR>
statement ok
CREATE VIEW structs AS SELECT * FROM (VALUES
	(1, {'a': 1, 'b': 'a'}),
	(2, {'a': NULL, 'b': NULL}),
	(3, {'a': 0, 'b': ''}),
	(4, {'a': 2, 'b': 'c'}),
	(5, {'a': 9, 'b': 'i'}),
	(NULL::INTEGER, {'a': 13, 'b': 'm'})
	) sv(pk, p);

query II
SELECT pk, p FROM structs ORDER BY pk;
----
NULL	{'a': 13, 'b': m}
1	{'a': 1, 'b': a}
2	{'a': NULL, 'b': NULL}
3	{'a': 0, 'b': }
4	{'a': 2, 'b': c}
5	{'a': 9, 'b': i}

query III
SELECT fk, pk, p FROM integers, structs WHERE fk = pk ORDER BY fk, pk
----
1	1	{'a': 1, 'b': a}
2	2	{'a': NULL, 'b': NULL}
3	3	{'a': 0, 'b': }
5	5	{'a': 9, 'b': i}

query III
SELECT fk, pk, p FROM integers LEFT OUTER JOIN structs ON integers.fk=structs.pk ORDER BY fk, pk
----
NULL	NULL	NULL
1	1	{'a': 1, 'b': a}
2	2	{'a': NULL, 'b': NULL}
3	3	{'a': 0, 'b': }
5	5	{'a': 9, 'b': i}

query III
SELECT fk, pk, p FROM structs RIGHT OUTER JOIN integers ON integers.fk=structs.pk ORDER BY fk, pk
----
NULL	NULL	NULL
1	1	{'a': 1, 'b': a}
2	2	{'a': NULL, 'b': NULL}
3	3	{'a': 0, 'b': }
5	5	{'a': 9, 'b': i}


query III
SELECT fk, pk, p FROM integers FULL OUTER JOIN structs ON integers.fk=structs.pk ORDER BY fk, pk
----
NULL	NULL	NULL
NULL	NULL	{'a': 13, 'b': m}
NULL	4	{'a': 2, 'b': c}
1	1	{'a': 1, 'b': a}
2	2	{'a': NULL, 'b': NULL}
3	3	{'a': 0, 'b': }
5	5	{'a': 9, 'b': i}

# Payload is STRUCT<a: LIST<INTEGER>, b: LIST<VARCHAR> >
statement ok
CREATE VIEW struct_lint_lstr AS SELECT * FROM (VALUES
	(1, {'x': [1], 'y': ['a']}),
	(2, {'x': [NULL], 'y': [NULL]}),
	(3, {'x': [], 'y': []}),
	(4, {'x': [2, 3], 'y': ['b', 'c']}),
	(5, {'x': [9,10,11], 'y': ['i','j','k']}),
	(NULL::INTEGER, {'x': [13], 'y': ['m']})
	) lv(pk, p);

query III
SELECT fk, pk, p FROM integers, struct_lint_lstr WHERE fk = pk ORDER BY fk, pk
----
1	1	{'x': [1], 'y': [a]}
2	2	{'x': [NULL], 'y': [NULL]}
3	3	{'x': [], 'y': []}
5	5	{'x': [9, 10, 11], 'y': [i, j, k]}

query III
SELECT fk, pk, p
FROM integers LEFT OUTER JOIN struct_lint_lstr ON integers.fk=struct_lint_lstr.pk
ORDER BY fk, pk
----
NULL	NULL	NULL
1	1	{'x': [1], 'y': [a]}
2	2	{'x': [NULL], 'y': [NULL]}
3	3	{'x': [], 'y': []}
5	5	{'x': [9, 10, 11], 'y': [i, j, k]}

query III
SELECT fk, pk, p
FROM struct_lint_lstr RIGHT OUTER JOIN integers ON integers.fk=struct_lint_lstr.pk
ORDER BY fk, pk
----
NULL	NULL	NULL
1	1	{'x': [1], 'y': [a]}
2	2	{'x': [NULL], 'y': [NULL]}
3	3	{'x': [], 'y': []}
5	5	{'x': [9, 10, 11], 'y': [i, j, k]}

query III
SELECT fk, pk, p
FROM integers FULL OUTER JOIN struct_lint_lstr ON integers.fk=struct_lint_lstr.pk
ORDER BY fk, pk
----
NULL	NULL	NULL
NULL	NULL	{'x': [13], 'y': [m]}
NULL	4	{'x': [2, 3], 'y': [b, c]}
1	1	{'x': [1], 'y': [a]}
2	2	{'x': [NULL], 'y': [NULL]}
3	3	{'x': [], 'y': []}
5	5	{'x': [9, 10, 11], 'y': [i, j, k]}

# Payload is STRUCT<x: LIST<STRUCT<l4: LIST<INT>, i4 INT> >, y: LIST<VARCHAR> >.
statement ok
CREATE VIEW r2l3r4l5i4i2l3v AS SELECT * FROM (VALUES
	(1, {'x': [{'l4': [51], 'i4': 41}], 'y': ['a']}),
	(2, {'x': [NULL], 'y': [NULL]}),
	(3, {'x': [], 'y': []}),
	(4, {'x': [{'l4': [52, 53], 'i4': 42}, {'l4': [54, 55], 'i4': 43}], 'y': ['b', 'c']}),
	(5, {'x': [{'l4': [56], 'i4': 44}, {'l4': [57, 58], 'i4': 45}, {'l4': [59, 60, 61], 'i4': 46}], 'y': ['i','j','k']}),
	(NULL::INTEGER, {'x': [{'l4': [62], 'i4': 47}], 'y': ['m']})
	) lv(pk, p);

query III
SELECT fk, pk, p FROM integers, r2l3r4l5i4i2l3v WHERE fk = pk ORDER BY fk, pk
----
1	1	{'x': [{'l4': [51], 'i4': 41}], 'y': [a]}
2	2	{'x': [NULL], 'y': [NULL]}
3	3	{'x': [], 'y': []}
5	5	{'x': [{'l4': [56], 'i4': 44}, {'l4': [57, 58], 'i4': 45}, {'l4': [59, 60, 61], 'i4': 46}], 'y': [i, j, k]}

query III
SELECT fk, pk, p
FROM integers LEFT OUTER JOIN r2l3r4l5i4i2l3v ON integers.fk=r2l3r4l5i4i2l3v.pk
ORDER BY fk, pk
----
NULL	NULL	NULL
1	1	{'x': [{'l4': [51], 'i4': 41}], 'y': [a]}
2	2	{'x': [NULL], 'y': [NULL]}
3	3	{'x': [], 'y': []}
5	5	{'x': [{'l4': [56], 'i4': 44}, {'l4': [57, 58], 'i4': 45}, {'l4': [59, 60, 61], 'i4': 46}], 'y': [i, j, k]}

query III
SELECT fk, pk, p
FROM r2l3r4l5i4i2l3v RIGHT OUTER JOIN integers ON integers.fk=r2l3r4l5i4i2l3v.pk
ORDER BY fk, pk
----
NULL	NULL	NULL
1	1	{'x': [{'l4': [51], 'i4': 41}], 'y': [a]}
2	2	{'x': [NULL], 'y': [NULL]}
3	3	{'x': [], 'y': []}
5	5	{'x': [{'l4': [56], 'i4': 44}, {'l4': [57, 58], 'i4': 45}, {'l4': [59, 60, 61], 'i4': 46}], 'y': [i, j, k]}

query III
SELECT fk, pk, p
FROM integers FULL OUTER JOIN r2l3r4l5i4i2l3v ON integers.fk=r2l3r4l5i4i2l3v.pk
ORDER BY fk, pk
----
NULL	NULL	NULL
NULL	NULL	{'x': [{'l4': [62], 'i4': 47}], 'y': [m]}
NULL	4	{'x': [{'l4': [52, 53], 'i4': 42}, {'l4': [54, 55], 'i4': 43}], 'y': [b, c]}
1	1	{'x': [{'l4': [51], 'i4': 41}], 'y': [a]}
2	2	{'x': [NULL], 'y': [NULL]}
3	3	{'x': [], 'y': []}
5	5	{'x': [{'l4': [56], 'i4': 44}, {'l4': [57, 58], 'i4': 45}, {'l4': [59, 60, 61], 'i4': 46}], 'y': [i, j, k]}
