# name: test/sql/join/test_complex_join_expr.test
# description: Test joins with comparisons involving both sides of the join
# group: [join]

require icu

statement ok
set default_collation=c;

statement ok
CREATE TABLE sales (
   product_id INT,
   region VARCHAR(50),
   year INT,
   amount_sold DECIMAL(10,2)
);

statement ok
INSERT INTO sales VALUES
  (1, 'North', 2020, 1000.00),
  (1, 'North', 2021, 1500.00),
  (1, 'South', 2020, 800.00),
  (1, 'South', 2021, 700.00),
  (2, 'North', 2020, 500.00),
  (2, 'North', 2021, 600.00),
  (2, 'South', 2020, 400.00),
  (2, 'South', 2021, 550.00);


statement ok
set default_collation=c;

statement ok
create table t1 as SELECT product_id, region, SUM(amount_sold) AS total_amount
FROM sales
GROUP BY GROUPING SETS ((product_id), (region), ())
ORDER BY product_id, region, total_amount;


statement ok
set default_collation=en_us;

statement ok
create table t2 as SELECT product_id, region, SUM(amount_sold) AS total_amount
FROM sales
GROUP BY GROUPING SETS ((product_id), (region), ())
ORDER BY product_id, region, total_amount;

query I
select count(*) from (select * from t1 INTERSECT select * From t2);
----
5

mode skip

statement ok
SET default_null_order='nulls_first';

statement ok
PRAGMA enable_verification

# create tables
statement ok
CREATE TABLE test (a INTEGER, b INTEGER);

statement ok
INSERT INTO test VALUES (4, 1), (2, 2)

statement ok
CREATE TABLE test2 (b INTEGER, c INTEGER);

statement ok
INSERT INTO test2 VALUES (1, 2), (3, 0)

query IIII
SELECT * FROM test JOIN test2 ON test.a+test2.c=test.b+test2.b
----
4	1	3	0

query IIII
SELECT * FROM test LEFT JOIN test2 ON test.a+test2.c=test.b+test2.b ORDER BY 1
----
2	2	NULL	NULL
4	1	3	0

query IIII
SELECT * FROM test RIGHT JOIN test2 ON test.a+test2.c=test.b+test2.b ORDER BY 1
----
NULL	NULL	1	2
4	1	3	0

query IIII
SELECT * FROM test FULL OUTER JOIN test2 ON test.a+test2.c=test.b+test2.b ORDER BY 1
----
NULL	NULL	1	2
2	2	NULL	NULL
4	1	3	0
