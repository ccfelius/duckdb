# name: test/sql/index/art/constraints/test_art_concurrent_upserts.test
# description: Test UPSERT in the main connection with concurrent upserts in other connections.
# group: [constraints]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE tbl (id INT PRIMARY KEY, payload VARCHAR);

statement ok
INSERT INTO tbl VALUES (1, 'first payload');

# con1 open.

statement ok con1
BEGIN TRANSACTION;

statement ok con1
INSERT OR REPLACE INTO tbl VALUES (1, 'con1 payload');

statement ok con1
INSERT OR REPLACE INTO tbl VALUES (1, 'other payload');

statement ok
BEGIN TRANSACTION

statement error
INSERT OR REPLACE INTO tbl VALUES (1, 'second payload');
----
<REGEX>:TransactionContext Error.*Conflict on update.*

statement ok
COMMIT;

# con1 and con2 open.

statement ok con2
BEGIN TRANSACTION;

statement error con2
INSERT OR REPLACE INTO tbl VALUES (1, 'con2 payload');
----
<REGEX>:TransactionContext Error.*Conflict on update.*

statement ok
BEGIN TRANSACTION;

statement error
INSERT OR REPLACE INTO tbl VALUES (1, 'third payload');
----
<REGEX>:TransactionContext Error.*Conflict on update.*

statement ok
COMMIT;

statement ok con1
COMMIT;

statement ok con2
COMMIT

query III
SELECT id, payload, rowid FROM tbl ORDER BY ALL;
----
1	other payload	0

# Now with a LIST column.

statement ok
CREATE TABLE tbl_list (id INT PRIMARY KEY, payload VARCHAR[]);

statement ok
INSERT INTO tbl_list VALUES (1, ['first payload']);

statement ok con1
BEGIN TRANSACTION;

statement ok con1
INSERT OR REPLACE INTO tbl_list VALUES (1, ['con1 payload']);

statement ok
BEGIN TRANSACTION

statement error
INSERT OR REPLACE INTO tbl_list VALUES (1, ['second payload']);
----
<REGEX>:TransactionContext Error.*Conflict on tuple deletion.*

statement ok
COMMIT;

statement ok con1
COMMIT;

query III
SELECT id, payload, rowid FROM tbl_list ORDER BY ALL;
----
1	[con1 payload]	1

# ROLLBACK due to a constraint violation during the transaction.

statement ok
CREATE TABLE tbl_rollback (id INT PRIMARY KEY, payload VARCHAR);

statement ok
INSERT INTO tbl_rollback VALUES (1, 'first payload');

statement ok con1
BEGIN TRANSACTION;

statement ok con1
INSERT OR REPLACE INTO tbl_rollback VALUES (1, 'con1 payload');

statement ok con1
INSERT INTO tbl_rollback VALUES (2, 'second payload');

statement error con1
INSERT INTO tbl_rollback VALUES (2, 'second payload');
----
<REGEX>:Constraint Error.*PRIMARY KEY or UNIQUE constraint violation.*

statement error con1
BEGIN TRANSACTION;
----
<REGEX>:TransactionContext Error.*Current transaction is aborted.*

statement ok con1
ROLLBACK;

query III
SELECT id, payload, rowid FROM tbl_rollback ORDER BY ALL;
----
1	first payload	0

# Transaction-local in-place UPSERT.

statement ok
CREATE TABLE tbl_local_in_place (id INT PRIMARY KEY, payload VARCHAR);

statement ok
INSERT INTO tbl_local_in_place VALUES (1, 'first payload');

statement ok con1
BEGIN TRANSACTION;

statement ok con1
INSERT OR REPLACE INTO tbl_local_in_place VALUES (1, 'con1 payload');

statement ok con1
INSERT OR REPLACE INTO tbl_local_in_place VALUES (1, 'local payload');

statement ok con1
COMMIT;

query III
SELECT id, payload, rowid FROM tbl_local_in_place ORDER BY ALL;
----
1	local payload	0

# UPSERT on the same key within a transaction.

statement ok
CREATE TABLE tbl_tx_same_key (id INT PRIMARY KEY, payload VARCHAR[]);

statement ok
INSERT INTO tbl_tx_same_key VALUES (1, ['first payload']);

statement ok con1
BEGIN TRANSACTION;

statement ok con1
INSERT OR REPLACE INTO tbl_tx_same_key VALUES (1, ['con1 payload']), (1, ['local payload']);

statement ok con1
COMMIT;

query III
SELECT id, payload, rowid FROM tbl_tx_same_key ORDER BY ALL;
----
1	[local payload]	1

# UPSERT on the same key in two statements within a transaction.

statement ok
CREATE TABLE tbl_local (id INT PRIMARY KEY, payload VARCHAR[]);

statement ok con1
BEGIN TRANSACTION;

statement ok con1
INSERT OR REPLACE INTO tbl_local VALUES (1, ['con1 payload']);

statement ok con1
INSERT OR REPLACE INTO tbl_local VALUES (1, ['local payload']);

statement ok con1
COMMIT;

query III
SELECT id, payload, rowid FROM tbl_local ORDER BY ALL;
----
1	[local payload]	0
