# name: test/optimizer/pushdown/table_or_pushdown.test
# description: Test Table OR Filter Push Down
# group: [pushdown]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE integers AS SELECT a as A, a as B FROM generate_series(1, 5, 1) tbl(a)

#### test OR filters with multiple columns in the root OR, e.g., a=1 OR b=2
query II
EXPLAIN SELECT * FROM integers WHERE a=1 OR b=2 AND (a>3 OR b<5)
----
physical_plan	<!REGEX>:.*SEQ_SCAN.*Filters:.*

query II
SELECT * FROM integers WHERE a=1 OR b=2 AND (a>3 OR b<5)
----
1	1
2	2


#### test OR filters with AND that triggers a stop early condition
query II
EXPLAIN SELECT * FROM integers WHERE a=1 OR a=2 AND (a>3 OR b<5)
----
physical_plan	<REGEX>:.*SEQ_SCAN.*Filters: a=1 OR a=2[ ]*|.*

query II
SELECT * FROM integers WHERE a=1 OR a=2 AND (a>3 OR b<5)
----
1	1
2	2


#### test OR filters with AND in the same column
query II
EXPLAIN SELECT * FROM integers WHERE a=1 OR (a>3 AND a<5)
----
physical_plan	<REGEX>:.*SEQ_SCAN.*Filters: a=1 OR a>3 AND a<5|.*

query II
SELECT * FROM integers WHERE a=1 OR (a>3 AND a<5)
----
1	1
4	4

#### test only OR filters
query II
EXPLAIN SELECT * FROM integers WHERE a=1 OR a>3 OR a<5
----
physical_plan	<REGEX>:.*SEQ_SCAN.*Filters: a=1 OR a>3 OR a<5|.*

query II
SELECT * FROM integers WHERE a=1 OR a>3 OR a<5 ORDER by a
----
1	1
2	2
3	3
4	4
5	5


#### Testing not equal
query II
EXPLAIN SELECT * FROM integers WHERE a!=1 OR a>3 OR a<2 ORDER by a
----
physical_plan	<REGEX>:.*SEQ_SCAN.*Filters: a!=1 OR a>3 OR a<2.*

query II
SELECT * FROM integers WHERE a!=1 OR a>3 OR a<2 ORDER by a
----
1	1
2	2
3	3
4	4
5	5


######### Testing String ######################################################

statement ok
CREATE TABLE strings(s VARCHAR)

statement ok
INSERT INTO strings VALUES ('AAAAAAAAAAAAAAA11111'), ('AAAAAAAAAAAAAAA99999')

query II
EXPLAIN SELECT * FROM strings WHERE s>'AAAAAAAAAAAAAAA1'
----
physical_plan	<REGEX>:.*SEQ_SCAN.*Filters: s>AAAAAAAAAAAAAAA1.*

query I
SELECT * FROM strings WHERE s>'AAAAAAAAAAAAAAA1'
----
AAAAAAAAAAAAAAA11111
AAAAAAAAAAAAAAA99999


#### test only OR filters
query II
EXPLAIN SELECT * FROM strings WHERE s>'AAAAAAAAAAAAAAA' OR s<'AAAAAAAAAAAAAAA99999A'
----
physical_plan	<REGEX>:.*SEQ_SCAN.*Filters: s>AAAAAAAAAAAAAAA|.*OR s<AAAAAAAAAAAAAAA99999A.*


query I
SELECT * FROM strings WHERE s>'AAAAAAAAAAAAAAA' OR s<'AAAAAAAAAAAAAAA99999A'
----
AAAAAAAAAAAAAAA11111
AAAAAAAAAAAAAAA99999


statement ok
INSERT INTO strings VALUES ('BBBB'), ('CCCC')

#### Testing not equal
query II
EXPLAIN SELECT * FROM strings WHERE s!='BBBB' or s>'BBBB'
----
physical_plan	<REGEX>:.*SEQ_SCAN.*Filters: s!=BBBB OR s>BBBB.*


query I
SELECT * FROM strings WHERE s!='BBBB' or s>'BBBB'
----
AAAAAAAAAAAAAAA11111
AAAAAAAAAAAAAAA99999
CCCC


######### Complex filters #####################################################

#### multiple OR filters connected with ANDs
query II
EXPLAIN SELECT * FROM integers WHERE (a<2 OR a>3) AND (a=1 OR a=4)
----
physical_plan	<REGEX>:.*SEQ_SCAN.*Filters: a<2 OR a>3 AND a=1.*OR.*a=4.*

query II
SELECT * FROM integers WHERE (a<2 OR a>3) AND (a=1 OR a=4)
----
1	1
4	4

query II
EXPLAIN SELECT * FROM integers WHERE (a<2 OR a>3) AND (a=1 OR a=4) AND (b=1 OR b<5)
----
physical_plan	<REGEX>:.*SEQ_SCAN.*Filters: a<2 OR a>3 AND a=1.*OR.*a=4.*b=1 OR b<5.*

query II
SELECT * FROM integers WHERE (a<2 OR a>3) AND (a=1 OR a=4) AND (b=1 OR b<5)
----
1	1
4	4

#### OR filters with functions: concat(...)
query II
EXPLAIN SELECT * FROM integers WHERE concat(a=1, b=1)='truetrue' OR a=2 ORDER by a
----
physical_plan	<!REGEX>:.*SEQ_SCAN.*Filters:.*

query II
SELECT * FROM integers WHERE concat(a=1, b=1)='truetrue' OR a=2 ORDER by a
----
1	1
2	2

#### LIKE operator
query II
EXPLAIN SELECT * FROM strings WHERE s>'BBBB' OR s LIKE '%AAAAAAAAAAAAAAA%'
----
physical_plan	<!REGEX>:.*SEQ_SCAN.*Filters:.*

query I
SELECT * FROM strings WHERE s>'BBBB' OR s LIKE '%AAAAAAAAAAAAAAA%'
----
CCCC
AAAAAAAAAAAAAAA11111
AAAAAAAAAAAAAAA99999


#### OR filters with CASE statement
query II
EXPLAIN SELECT * FROM integers WHERE a=1 OR (CASE WHEN a%2=0 THEN true ELSE false END)
----
physical_plan	<!REGEX>:.*SEQ_SCAN.*Filters:.*

query II
SELECT * FROM integers WHERE a=1 OR (CASE WHEN a%2=0 THEN true ELSE false END)
----
1	1
2	2
4	4


#### multiple complex OR filters connected with ANDs
query II
EXPLAIN SELECT * FROM integers WHERE (a=1 OR a=4) AND (a=1 OR (CASE WHEN a%2=0 THEN true ELSE false END)) AND (concat(a=1, b=1)='truetrue' OR a=2) AND (a::CHAR LIKE '1' OR a=5)
----
physical_plan	<REGEX>:.*SEQ_SCAN.*Filters: a=1 OR a=4.*|$

query II
SELECT * FROM integers WHERE (a=1 OR a=4) AND (a=1 OR (CASE WHEN a%2=0 THEN true ELSE false END)) AND (concat(a=1, b=1)='truetrue' OR a=2) AND (a::CHAR LIKE '1' OR a=5)
----
1	1


#### OR filters with NULL
statement ok
INSERT INTO integers VALUES (NULL, NULL)

query II
EXPLAIN SELECT * FROM integers WHERE a=1 OR a is null ORDER BY a
----
physical_plan	<!REGEX>:.*SEQ_SCAN.*Filters:.*

query II
SELECT * FROM integers WHERE a=1 OR a is null ORDER BY a
----
NULL	NULL	
1	1	

query II
EXPLAIN SELECT * FROM integers WHERE a=1 OR a is not null
----
physical_plan	<!REGEX>:.*SEQ_SCAN.*Filters:.*

query II
SELECT * FROM integers WHERE a=1 OR a is not null
----
1	1
2	2
3	3
4	4
5	5








