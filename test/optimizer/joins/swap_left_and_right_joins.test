# name: test/optimizer/joins/swap_left_and_right_joins.test
# description: In the join order optimizer queries need to have the correct bindings
# group: [joins]

statement ok
create table lhs as select * from range(10000) lhs(id);

statement ok
alter table lhs add column enroll_date date;

statement ok
update lhs set enroll_date = date '2000-01-01' + cast(round(random()*3000) as integer);

statement ok
create table rhs as select * from range(100000) rhs(id);

statement ok
update rhs set id = random() * 1000000;

statement ok
alter table rhs add column claim_date date;

statement ok
update rhs set claim_date = date '2000-01-01' + cast(random()*3000 as integer);

statement ok
alter table rhs add column claim_cost double;

statement ok
update rhs set claim_cost = random() * 10000;

statement ok
pragma enable_profiling='json';

statement ok
pragma profiling_output='blockwise-nl-join-switch.json';


statement ok
select lhs.id, sum(coalesce(claim_cost, 0))
from rhs right join lhs on lhs.id = rhs.id
and datediff('month',enroll_date,claim_date) between 1 and 12
group by lhs.id;


mode skip

statement ok
select lhs.id, sum(coalesce(claim_cost,0))
from lhs left join rhs on lhs.id = rhs.id
and datediff('month',enroll_date,claim_date) between 1 and 12
group by lhs.id;

statement ok
with rhs_subset as
(select rhs.id, claim_cost from lhs join rhs on lhs.id = rhs.id
and datediff('month',enroll_date,claim_date) between 1 and 12)
select lhs.id, sum(coalesce(claim_cost,0))
from lhs left join rhs_subset on lhs.id = rhs_subset.id
group by lhs.id;
