diff --git a/src/include/storage/sqlite_schema_entry.hpp b/src/include/storage/sqlite_schema_entry.hpp
index 2052584..5bd82b3 100644
--- a/src/include/storage/sqlite_schema_entry.hpp
+++ b/src/include/storage/sqlite_schema_entry.hpp
@@ -15,7 +15,7 @@ class SQLiteTransaction;
 
 class SQLiteSchemaEntry : public SchemaCatalogEntry {
 public:
-	SQLiteSchemaEntry(Catalog &catalog);
+	SQLiteSchemaEntry(Catalog &catalog, CreateSchemaInfo &info);
 
 public:
 	optional_ptr<CatalogEntry> CreateTable(CatalogTransaction transaction, BoundCreateTableInfo &info) override;
diff --git a/src/storage/sqlite_catalog.cpp b/src/storage/sqlite_catalog.cpp
index fad530c..188f0e1 100644
--- a/src/storage/sqlite_catalog.cpp
+++ b/src/storage/sqlite_catalog.cpp
@@ -1,8 +1,9 @@
 #include "storage/sqlite_catalog.hpp"
+#include "duckdb/parser/parsed_data/create_schema_info.hpp"
+#include "duckdb/storage/database_size.hpp"
+#include "sqlite_db.hpp"
 #include "storage/sqlite_schema_entry.hpp"
 #include "storage/sqlite_transaction.hpp"
-#include "sqlite_db.hpp"
-#include "duckdb/storage/database_size.hpp"
 
 namespace duckdb {
 
@@ -17,7 +18,8 @@ SQLiteCatalog::~SQLiteCatalog() {
 }
 
 void SQLiteCatalog::Initialize(bool load_builtin) {
-	main_schema = make_uniq<SQLiteSchemaEntry>(*this);
+        CreateSchemaInfo info;
+	main_schema = make_uniq<SQLiteSchemaEntry>(*this, info);
 }
 
 optional_ptr<CatalogEntry> SQLiteCatalog::CreateSchema(CatalogTransaction transaction, CreateSchemaInfo &info) {
diff --git a/src/storage/sqlite_schema_entry.cpp b/src/storage/sqlite_schema_entry.cpp
index 7c4059e..21f38cf 100644
--- a/src/storage/sqlite_schema_entry.cpp
+++ b/src/storage/sqlite_schema_entry.cpp
@@ -15,7 +15,7 @@
 
 namespace duckdb {
 
-SQLiteSchemaEntry::SQLiteSchemaEntry(Catalog &catalog) : SchemaCatalogEntry(catalog, DEFAULT_SCHEMA, true) {
+SQLiteSchemaEntry::SQLiteSchemaEntry(Catalog &catalog, CreateSchemaInfo &info) : SchemaCatalogEntry(catalog, info) {
 }
 
 SQLiteTransaction &GetSQLiteTransaction(CatalogTransaction transaction) {
