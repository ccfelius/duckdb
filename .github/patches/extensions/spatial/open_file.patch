diff --git a/spatial/src/spatial/gdal/file_handler.cpp b/spatial/src/spatial/gdal/file_handler.cpp
index db449df..4985c9f 100644
--- a/spatial/src/spatial/gdal/file_handler.cpp
+++ b/spatial/src/spatial/gdal/file_handler.cpp
@@ -122,7 +122,7 @@ public:
 		auto &fs = FileSystem::GetFileSystem(context);
 
 		// TODO: Double check that this is correct
-		uint8_t flags;
+		FileOpenFlags flags;
 		auto len = strlen(access);
 		if (access[0] == 'r') {
 			flags = FileFlags::FILE_FLAGS_READ;
@@ -167,7 +167,7 @@ public:
 				return new DuckDBFileHandle(std::move(file));
 			}
 #endif
-			auto file = fs.OpenFile(file_name, flags, FileSystem::DEFAULT_LOCK, FileCompressionType::AUTO_DETECT);
+			auto file = fs.OpenFile(file_name, flags | FileCompressionType::AUTO_DETECT);
 			return new DuckDBFileHandle(std::move(file));
 		} catch (std::exception &ex) {
 			// Failed to open file via DuckDB File System. If this doesnt have a VSI prefix we can return an error here.
@@ -209,8 +209,7 @@ public:
 
 		unique_ptr<FileHandle> file;
 		try {
-			file = fs.OpenFile(file_name, FileFlags::FILE_FLAGS_READ, FileSystem::DEFAULT_LOCK,
-			                   FileCompressionType::AUTO_DETECT);
+			file = fs.OpenFile(file_name, FileFlags::FILE_FLAGS_READ | FileCompressionType::AUTO_DETECT);
 		} catch (std::exception &ex) {
 			return -1;
 		}
