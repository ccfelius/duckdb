diff --git a/duckdb b/duckdb
index 811683f..02412e1 160000
--- a/duckdb
+++ b/duckdb
@@ -1 +1 @@
-Subproject commit 811683f695f8db22948950e25018d62ff3357237
+Subproject commit 02412e10151c893be139082cf3f1362f455308b0
diff --git a/src/substrait_extension.cpp b/src/substrait_extension.cpp
index 06fd2b2..b4faf3e 100644
--- a/src/substrait_extension.cpp
+++ b/src/substrait_extension.cpp
@@ -74,7 +74,16 @@ static void VerifySubstraitRoundtrip(unique_ptr<LogicalOperator> &query_plan, Co
 	auto sub_relation = SubstraitPlanToDuckDBRel(con, serialized, json);
 	auto substrait_result = sub_relation->Execute();
 	substrait_result->names = actual_result->names;
-	if (!actual_result->Equals(*substrait_result)) {
+	unique_ptr<QueryResult> substrait_materialized;
+
+	if (substrait_result->type == QueryResultType::STREAM_RESULT) {
+		auto &stream_query = substrait_result->Cast<duckdb::StreamQueryResult>();
+		substrait_materialized = stream_query.Materialize();
+	} else {
+		substrait_materialized = std::move(substrait_result);
+	}
+
+	if (!actual_result->Equals(*substrait_materialized)) {
 		query_plan->Print();
 		sub_relation->Print();
 		throw InternalException("The query result of DuckDB's query plan does not match Substrait");
diff --git a/test/sql/test_substrait_parquet.test b/test/sql/test_substrait_parquet.test
index ff662a8..9a2c710 100644
--- a/test/sql/test_substrait_parquet.test
+++ b/test/sql/test_substrait_parquet.test
@@ -34,9 +34,6 @@ CALL from_substrait('\x12\x09\x1A\x07\x10\x01\x1A\x03sum\x12\x07\x1A\x05\x10\x02
 ----
 19107076.83379995
 
-# TODO FIXME
-mode skip
-
 # Test Globbing
 statement ok
 CALL get_substrait('select * from parquet_scan(''data/parquet-testing/glob*/t?.parquet'') order by i')
