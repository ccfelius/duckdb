name: LinuxRelease
on: [push, pull_request]

defaults:
  run:
    shell: bash

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
  AWS_ACCESS_KEY_ID: AKIAVBLKPL2ZW2T7TYFQ
  AWS_SECRET_ACCESS_KEY: ${{ secrets.NODE_PRE_GYP_SECRETACCESSKEY }}
  NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

jobs:
 linux-extensions-64:
    name: Linux Extensions (64 Bit)
    runs-on: ubuntu-latest
    container: ubuntu:16.04
    env:
      GEN: ninja
      BUILD_VISUALIZER: 1
      BUILD_ICU: 1
      BUILD_TPCH: 1
      BUILD_TPCDS: 1
      BUILD_FTS: 1
      TREAT_WARNINGS_AS_ERRORS: 1
      FORCE_WARN_UNUSED: 1
      AWS_ACCESS_KEY_ID: ${{secrets.S3_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.S3_KEY}}
      AWS_DEFAULT_REGION: us-east-1

    steps:
    - name: Install
      run: |
        apt-get update -y -qq
        apt-get install -y -qq software-properties-common
        add-apt-repository ppa:deadsnakes/ppa
        add-apt-repository ppa:git-core/ppa
        apt-get update -y -qq
        apt-get install -y -qq git ninja-build make gcc-multilib g++-multilib libssl-dev wget openjdk-8-jdk python3.7 zip python3-pip maven
        python3.7 -m pip install pip
        python3.7 -m pip install requests awscli

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Version Check
      run: |
        ldd --version ldd
        python3.7 --version
        git --version

    - name: Install CMake
      run: |
        wget https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-linux-x86_64.sh
        chmod +x cmake-3.21.3-linux-x86_64.sh
        ./cmake-3.21.3-linux-x86_64.sh --skip-license --prefix=/usr/local

    - name: Build
      run: make

    - name: Deploy
      run: |
        if [[ "$GITHUB_REF" =~ ^(refs/heads/master|refs/tags/v.+)$ && "$GITHUB_REPOSITORY" = "duckdb/duckdb" ]] ; then
          ./scripts/extension-upload.sh linux_amd64
        fi

    - name: Build Test Extension
      run: |
        echo "Hello World"
        FILES="build/release/extension/*/*.duckdb_extension"
        EXTENSION_LIST=""
        for f in $FILES
        do
          ext=`basename $f .duckdb_extension`
          echo $ext
          EXTENSION_LIST="${EXTENSION_LIST}-$ext"
        done
        export FILES
        export EXTENSION_LIST
        echo ${EXTENSION_LIST}

    - name: Build Test Extension 2
      run: |
        mkdir -p testext
        cd testext
        cmake -DCMAKE_BUILD_TYPE=Release -DTEST_REMOTE_INSTALL="${EXTENSION_LIST}" ..
        cmake --build . --config Release
        cd ..

    # - name: Run Install Commands
    #   run: |
    #     FILES="build/release/extension/*/*.duckdb_extension"
    #     EXTENSION_LIST=""
    #     for f in $FILES
    #     do
    #       ext=`basename $f .duckdb_extension`
    #       EXTENSION_LIST="${EXTENSION_LIST}-$ext"
    #     done
    #     for f in $FILES
    #     do
    #       ext=`basename $f .duckdb_extension`
    #       install_path=${ext}
    #       if [ "$1" = "local" ]
    #       then
    #         install_path=${f}
    #       fi
    #       echo ${install_path}
    #       testext/duckdb -c "INSTALL '${install_path}'"
    #       testext/duckdb -c "LOAD '${ext}'"
    #     done

    # - name: Run Tests
    #   run: |
    #    testext/test/unittest

