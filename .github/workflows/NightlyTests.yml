name: NightlyTests
on:
  workflow_dispatch:
  repository_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/master' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
 release-assert:
    name: Release Assertions
    runs-on: ubuntu-20.04
    env:
      CC: gcc-10
      CXX: g++-10
      GEN: ninja
      BUILD_ICU: 1
      BUILD_INET: 1
      BUILD_TPCH: 1
      BUILD_TPCDS: 1
      BUILD_FTS: 1
      BUILD_EXCEL: 1
      BUILD_VISUALIZER: 1
      BUILD_JSON: 1
      BUILD_JEMALLOC: 1
      DISABLE_SANITIZER: 1
      CRASH_ON_ASSERT: 1

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install
      shell: bash
      run: sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.job }}
        save: ${{ github.ref == 'refs/heads/master' || github.repository != 'duckdb/duckdb' }}

    - name: Build
      shell: bash
      run: make relassert

    - name: Test
      shell: bash
      run: |
          python3 scripts/run_tests_one_by_one.py build/relassert/test/unittest "*"


 linux-clang:
    name: Clang 14
    runs-on: ubuntu-20.04
    env:
      CC: /home/runner/work/llvm/bin/clang
      CPP: /home/runner/work/llvm/bin/clang-cpp
      CXX: /home/runner/work/llvm/bin/clang++
      LD: /home/runner/work/llvm/bin/ld.lld
      EXTENSION_STATIC_BUILD: 1
      BUILD_JSON: 1
      TREAT_WARNINGS_AS_ERRORS: 1

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "14.0"
        directory: '/home/runner/work/llvm'

    - uses: actions/setup-python@v4
      with:
        python-version: '3.7'

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.job }}
        save: ${{ github.ref == 'refs/heads/master' || github.repository != 'duckdb/duckdb' }}

    - name: Build
      shell: bash
      run: make release

    - name: Test
      shell: bash
      run: make allunit

 old-gcc:
    name: GCC 4.8
    runs-on: ubuntu-20.04
    container: ubuntu:16.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: ./.github/actions/ubuntu_16_setup

    - uses: actions/setup-python@v4
      with:
        python-version: '3.7'

    - name: Install
      shell: bash
      run: apt-get update -y -qq && apt-get install -y -qq g++-4.8 binutils

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.job }}
        save: ${{ github.ref == 'refs/heads/master' || github.repository != 'duckdb/duckdb' }}

    - name: Test
      shell: bash
      run: make unit
      env:
        CC: gcc-4.8
        CXX: g++-4.8
