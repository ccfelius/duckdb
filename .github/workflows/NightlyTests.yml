name: NightlyTests
on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches:
      - '**'
      - '!main'
      - '!feature'
    paths-ignore:
      - '**'
      - '!.github/workflows/NightlyTests.yml'
      - '!.github/patches/duckdb-wasm/**'
  pull_request:
    types: [opened, reopened, ready_for_review]
    paths-ignore:
      - '**'
      - '!.github/workflows/NightlyTests.yml'
      - '!.github/patches/duckdb-wasm/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  DUCKDB_WASM_VERSION: "cf2048bd6d669ffa05c56d7d453e09e99de8b87e"
  CCACHE_SAVE: ${{ github.repository != 'duckdb/duckdb' }}
  BASE_BRANCH: ${{ github.base_ref || (endsWith(github.ref, '_feature') && 'feature' || 'main') }}

jobs:
  release-assert:
    name: Test Serialization Backwards Compatibility
    runs-on: ubuntu-20.04
    env:
      CC: gcc-10
      CXX: g++-10
      GEN: ninja
      BUILD_TPCH: 1
      BUILD_TPCDS: 1
      BUILD_FTS: 1
      BUILD_JSON: 1
      BWC_SERIALIZATION_VERSION: v1.0.0

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install
        shell: bash
        run: |
            sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build
            pip install duckdb

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ github.job }}
          save: ${{ env.CCACHE_SAVE }}

      - name: Build Older Version
        shell: bash
        run: |
          git clone --branch $BWC_SERIALIZATION_VERSION https://github.com/duckdb/duckdb.git --depth=1 duckdb-old
          cd duckdb-old
          make debug
          cd ..

      - name: Build New Version
        shell: bash
        run: make debug

      - name: Test
        shell: bash
        run: |
          python3 scripts/test_serialization_bwc.py --old-source duckdb-old --all-tests --no-exit

      - name: Print Broken Test List
        if: always()
        shell: bash
        run: |
          echo 'Printing broken tests.'
          echo 'If any tests are broken, either try fixing them or add them to test/api/serialized_plans/excluded_tests.list'
          touch broken_tests.list
          cat broken_tests.list


  
