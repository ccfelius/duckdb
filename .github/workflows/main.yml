on: [push, pull_request]

defaults:
  run:
    shell: bash

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
  AWS_ACCESS_KEY_ID: AKIAVBLKPL2ZW2T7TYFQ
  AWS_SECRET_ACCESS_KEY: ${{ secrets.NODE_PRE_GYP_SECRETACCESSKEY }}
  NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

jobs:
 linux-release-64:
    name: Linux (64 Bit)
    runs-on: ubuntu-latest
    container: ubuntu:16.04

    env:
      GEN: ninja
      BUILD_VISUALIZER: 1
      BUILD_BENCHMARK: 1
      BUILD_ICU: 1
      BUILD_TPCH: 1
      BUILD_TPCDS: 1
      BUILD_FTS: 1
      BUILD_REST: 1
      BUILD_JDBC: 1
      BUILD_HTTPFS: 1
      TREAT_WARNINGS_AS_ERRORS: 1
      FORCE_WARN_UNUSED: 1

    steps:
    - name: Install
      run: |
        apt-get update -y -qq
        apt-get install -y -qq software-properties-common
        add-apt-repository ppa:deadsnakes/ppa
        add-apt-repository ppa:git-core/ppa
        apt-get update -y -qq
        apt-get install -y -qq git ninja-build make gcc-multilib g++-multilib libssl-dev wget openjdk-8-jdk python3.7 zip python3-pip
        python3.7 -m pip install pip
        python3.7 -m pip install requests

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Version Check
      run: |
        ldd --version ldd
        python3.7 --version
        git --version

    - name: Install CMake
      run: |
        wget https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-linux-x86_64.sh
        chmod +x cmake-3.21.3-linux-x86_64.sh
        ./cmake-3.21.3-linux-x86_64.sh --skip-license --prefix=/usr/local

    - name: Build
      run: STATIC_LIBCPP=1 make

    - name: Test
      run: make allunit

    - name: Symbol Leakage Test
      run: python3.7 scripts/exported_symbols_check.py build/release/src/libduckdb*.so

    - name: Tools Tests
      run: |
        python3.7 tools/shell/shell-test.py build/release/duckdb
        python3.7 tools/rest/test_the_rest.py build/release/tools/rest
        java -cp build/release/tools/jdbc/duckdb_jdbc.jar org.duckdb.test.TestDuckDBJDBC

    - name: Examples
      run: |
        (cd examples/embedded-c; make)
        (cd examples/embedded-c++; make)
        (cd examples/jdbc; make; make maven)
        build/release/benchmark/benchmark_runner benchmark/tpch/sf1/q01.benchmark

    - name: Deploy
      run: |
        python3.7 scripts/amalgamation.py
        zip -j duckdb_cli-linux-amd64.zip build/release/duckdb
        zip -j libduckdb-linux-amd64.zip build/release/src/libduckdb*.so src/amalgamation/duckdb.hpp src/include/duckdb.h
        zip -j libduckdb-src.zip src/amalgamation/duckdb.hpp src/amalgamation/duckdb.cpp src/include/duckdb.h
        zip -j duckdb_rest-linux-amd64.zip build/release/tools/rest/duckdb_rest_server
        python3.7 scripts/asset-upload-gha.py libduckdb-src.zip libduckdb-linux-amd64.zip duckdb_cli-linux-amd64.zip duckdb_rest-linux-amd64.zip duckdb_jdbc-linux-amd64.jar=build/release/tools/jdbc/duckdb_jdbc.jar

    - uses: actions/upload-artifact@v2
      with:
        name: duckdb-binaries-linux
        path: |
          libduckdb-linux-amd64.zip
          duckdb_cli-linux-amd64.zip
          build/release/tools/jdbc/duckdb_jdbc.jar

 linux-release-32:
    name: Linux (32 Bit)
    runs-on: ubuntu-latest
    container: ubuntu:16.04

    env:
      GEN: ninja

    steps:
    - name: Install
      run: |
        apt-get update -y -qq
        apt-get install -y -qq software-properties-common
        add-apt-repository ppa:deadsnakes/ppa
        add-apt-repository ppa:git-core/ppa
        apt-get update -y -qq
        apt-get install -y -qq git make ninja-build libc6-dev-i386 gcc-multilib g++-multilib lib32readline6-dev libssl-dev wget openjdk-8-jdk python3.7 zip

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Version Check
      run: |
        ldd --version ldd
        python3.7 --version
        git --version

    - name: Install CMake
      run: |
        wget https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-linux-x86_64.sh
        chmod +x cmake-3.21.3-linux-x86_64.sh
        ./cmake-3.21.3-linux-x86_64.sh --skip-license --prefix=/usr/local

    - name: Build
      run: |
        mkdir -p build/release
        (cd build/release && cmake -DSTATIC_LIBCPP=1 -DJDBC_DRIVER=1 -DBUILD_ICU_EXTENSION=1 -DBUILD_PARQUET_EXTENSION=1 -DBUILD_FTS_EXTENSION=1 -DFORCE_32_BIT=1 -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)

    - name: Test
      run: build/release/test/unittest "*"

    - name: Deploy
      run: |
        python3.7 scripts/amalgamation.py
        zip -j duckdb_cli-linux-i386.zip build/release/duckdb
        zip -j libduckdb-linux-i386.zip build/release/src/libduckdb*.so src/amalgamation/duckdb.hpp src/include/duckdb.h
        python3.7 scripts/asset-upload-gha.py libduckdb-linux-i386.zip duckdb_cli-linux-i386.zip duckdb_jdbc-linux-i386.jar=build/release/tools/jdbc/duckdb_jdbc.jar

    - uses: actions/upload-artifact@v2
      with:
        name: duckdb-binaries-linux
        path: |
          libduckdb-linux-i386.zip
          duckdb_cli-linux-i386.zip
          build/release/tools/jdbc/duckdb_jdbc.jar