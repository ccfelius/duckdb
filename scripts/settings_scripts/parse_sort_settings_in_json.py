import json
from .config import Setting, SettingsList, JSON_PATH


# sort settings in json by name
def sort_and_read_json_data(path):
    with open(path, 'r') as file:
        data = json.load(file)
    sorted_data = sorted(data, key=lambda x: x['name'])
    with open(path, 'w') as file:
        json.dump(sorted_data, file, indent=4)
    return sorted_data


# parse json data and stores each entry as a settings object in the global list SettingsList
def add_all_settings_to_global_list():
    reset_global_settings_list()
    json_data = sort_and_read_json_data(JSON_PATH)
    for entry in json_data:
        setting = Setting(
            name=entry['name'],
            description=entry['description'],
            input_type=entry['input_type'],
            scope=entry['scope'],
            aliases=entry.get('aliases', []),
            verification=entry.get('verification', False),
            auto_generate=entry.get('use_autogenerated_functions', True),
        )
        SettingsList.append(setting)
    print(f"- Parsing and sorting the settings data in {JSON_PATH}")


def reset_global_settings_list():
    SettingsList.clear()
