/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     CONCURRENTLY = 336,
     CONFIGURATION = 337,
     CONFLICT = 338,
     CONNECTION = 339,
     CONSTRAINT = 340,
     CONSTRAINTS = 341,
     CONTENT_P = 342,
     CONTINUE_P = 343,
     CONVERSION_P = 344,
     COPY = 345,
     COST = 346,
     CREATE_P = 347,
     CROSS = 348,
     CSV = 349,
     CUBE = 350,
     CURRENT_P = 351,
     CURRENT_CATALOG = 352,
     CURRENT_DATE = 353,
     CURRENT_ROLE = 354,
     CURRENT_SCHEMA = 355,
     CURRENT_TIME = 356,
     CURRENT_TIMESTAMP = 357,
     CURRENT_USER = 358,
     CURSOR = 359,
     CYCLE = 360,
     DATA_P = 361,
     DATABASE = 362,
     DAY_P = 363,
     DAYS_P = 364,
     DEALLOCATE = 365,
     DEC = 366,
     DECIMAL_P = 367,
     DECLARE = 368,
     DEFAULT = 369,
     DEFAULTS = 370,
     DEFERRABLE = 371,
     DEFERRED = 372,
     DEFINER = 373,
     DELETE_P = 374,
     DELIMITER = 375,
     DELIMITERS = 376,
     DEPENDS = 377,
     DESC_P = 378,
     DESCRIBE = 379,
     DETACH = 380,
     DICTIONARY = 381,
     DISABLE_P = 382,
     DISCARD = 383,
     DISTINCT = 384,
     DO = 385,
     DOCUMENT_P = 386,
     DOMAIN_P = 387,
     DOUBLE_P = 388,
     DROP = 389,
     EACH = 390,
     ELSE = 391,
     ENABLE_P = 392,
     ENCODING = 393,
     ENCRYPTED = 394,
     END_P = 395,
     ENUM_P = 396,
     ESCAPE = 397,
     EVENT = 398,
     EXCEPT = 399,
     EXCLUDE = 400,
     EXCLUDING = 401,
     EXCLUSIVE = 402,
     EXECUTE = 403,
     EXISTS = 404,
     EXPLAIN = 405,
     EXPORT_P = 406,
     EXTENSION = 407,
     EXTERNAL = 408,
     EXTRACT = 409,
     FALSE_P = 410,
     FAMILY = 411,
     FETCH = 412,
     FILTER = 413,
     FIRST_P = 414,
     FLOAT_P = 415,
     FOLLOWING = 416,
     FOR = 417,
     FORCE = 418,
     FOREIGN = 419,
     FORWARD = 420,
     FREEZE = 421,
     FROM = 422,
     FULL = 423,
     FUNCTION = 424,
     FUNCTIONS = 425,
     GENERATED = 426,
     GLOB = 427,
     GLOBAL = 428,
     GRANT = 429,
     GRANTED = 430,
     GROUP_P = 431,
     GROUPING = 432,
     HANDLER = 433,
     HAVING = 434,
     HEADER_P = 435,
     HOLD = 436,
     HOUR_P = 437,
     HOURS_P = 438,
     IDENTITY_P = 439,
     IF_P = 440,
     ILIKE = 441,
     IMMEDIATE = 442,
     IMMUTABLE = 443,
     IMPLICIT_P = 444,
     IMPORT_P = 445,
     IN_P = 446,
     INCLUDING = 447,
     INCREMENT = 448,
     INDEX = 449,
     INDEXES = 450,
     INHERIT = 451,
     INHERITS = 452,
     INITIALLY = 453,
     INLINE_P = 454,
     INNER_P = 455,
     INOUT = 456,
     INPUT_P = 457,
     INSENSITIVE = 458,
     INSERT = 459,
     INSTEAD = 460,
     INT_P = 461,
     INTEGER = 462,
     INTERSECT = 463,
     INTERVAL = 464,
     INTO = 465,
     INVOKER = 466,
     IS = 467,
     ISNULL = 468,
     ISOLATION = 469,
     JOIN = 470,
     KEY = 471,
     LABEL = 472,
     LANGUAGE = 473,
     LARGE_P = 474,
     LAST_P = 475,
     LATERAL_P = 476,
     LEADING = 477,
     LEAKPROOF = 478,
     LEFT = 479,
     LEVEL = 480,
     LIKE = 481,
     LIMIT = 482,
     LISTEN = 483,
     LOAD = 484,
     LOCAL = 485,
     LOCALTIME = 486,
     LOCALTIMESTAMP = 487,
     LOCATION = 488,
     LOCK_P = 489,
     LOCKED = 490,
     LOGGED = 491,
     MACRO = 492,
     MAP = 493,
     MAPPING = 494,
     MATCH = 495,
     MATERIALIZED = 496,
     MAXVALUE = 497,
     METHOD = 498,
     MICROSECOND_P = 499,
     MICROSECONDS_P = 500,
     MILLISECOND_P = 501,
     MILLISECONDS_P = 502,
     MINUTE_P = 503,
     MINUTES_P = 504,
     MINVALUE = 505,
     MODE = 506,
     MONTH_P = 507,
     MONTHS_P = 508,
     MOVE = 509,
     NAME_P = 510,
     NAMES = 511,
     NATIONAL = 512,
     NATURAL = 513,
     NCHAR = 514,
     NEW = 515,
     NEXT = 516,
     NO = 517,
     NONE = 518,
     NOT = 519,
     NOTHING = 520,
     NOTIFY = 521,
     NOTNULL = 522,
     NOWAIT = 523,
     NULL_P = 524,
     NULLIF = 525,
     NULLS_P = 526,
     NUMERIC = 527,
     OBJECT_P = 528,
     OF = 529,
     OFF = 530,
     OFFSET = 531,
     OIDS = 532,
     OLD = 533,
     ON = 534,
     ONLY = 535,
     OPERATOR = 536,
     OPTION = 537,
     OPTIONS = 538,
     OR = 539,
     ORDER = 540,
     ORDINALITY = 541,
     OUT_P = 542,
     OUTER_P = 543,
     OVER = 544,
     OVERLAPS = 545,
     OVERLAY = 546,
     OVERRIDING = 547,
     OWNED = 548,
     OWNER = 549,
     PARALLEL = 550,
     PARSER = 551,
     PARTIAL = 552,
     PARTITION = 553,
     PASSING = 554,
     PASSWORD = 555,
     PERCENT = 556,
     PLACING = 557,
     PLANS = 558,
     POLICY = 559,
     POSITION = 560,
     PRAGMA_P = 561,
     PRECEDING = 562,
     PRECISION = 563,
     PREPARE = 564,
     PREPARED = 565,
     PRESERVE = 566,
     PRIMARY = 567,
     PRIOR = 568,
     PRIVILEGES = 569,
     PROCEDURAL = 570,
     PROCEDURE = 571,
     PROGRAM = 572,
     PUBLICATION = 573,
     QUOTE = 574,
     RANGE = 575,
     READ_P = 576,
     REAL = 577,
     REASSIGN = 578,
     RECHECK = 579,
     RECURSIVE = 580,
     REF = 581,
     REFERENCES = 582,
     REFERENCING = 583,
     REFRESH = 584,
     REINDEX = 585,
     RELATIVE_P = 586,
     RELEASE = 587,
     RENAME = 588,
     REPEATABLE = 589,
     REPLACE = 590,
     REPLICA = 591,
     RESET = 592,
     RESTART = 593,
     RESTRICT = 594,
     RETURNING = 595,
     RETURNS = 596,
     REVOKE = 597,
     RIGHT = 598,
     ROLE = 599,
     ROLLBACK = 600,
     ROLLUP = 601,
     ROW = 602,
     ROWS = 603,
     RULE = 604,
     SAMPLE = 605,
     SAVEPOINT = 606,
     SCHEMA = 607,
     SCHEMAS = 608,
     SCROLL = 609,
     SEARCH = 610,
     SECOND_P = 611,
     SECONDS_P = 612,
     SECURITY = 613,
     SELECT = 614,
     SEQUENCE = 615,
     SEQUENCES = 616,
     SERIALIZABLE = 617,
     SERVER = 618,
     SESSION = 619,
     SESSION_USER = 620,
     SET = 621,
     SETOF = 622,
     SETS = 623,
     SHARE = 624,
     SHOW = 625,
     SIMILAR = 626,
     SIMPLE = 627,
     SKIP = 628,
     SMALLINT = 629,
     SNAPSHOT = 630,
     SOME = 631,
     SQL_P = 632,
     STABLE = 633,
     STANDALONE_P = 634,
     START = 635,
     STATEMENT = 636,
     STATISTICS = 637,
     STDIN = 638,
     STDOUT = 639,
     STORAGE = 640,
     STRICT_P = 641,
     STRIP_P = 642,
     STRUCT = 643,
     SUBSCRIPTION = 644,
     SUBSTRING = 645,
     SYMMETRIC = 646,
     SYSID = 647,
     SYSTEM_P = 648,
     TABLE = 649,
     TABLES = 650,
     TABLESAMPLE = 651,
     TABLESPACE = 652,
     TEMP = 653,
     TEMPLATE = 654,
     TEMPORARY = 655,
     TEXT_P = 656,
     THEN = 657,
     TIME = 658,
     TIMESTAMP = 659,
     TO = 660,
     TRAILING = 661,
     TRANSACTION = 662,
     TRANSFORM = 663,
     TREAT = 664,
     TRIGGER = 665,
     TRIM = 666,
     TRUE_P = 667,
     TRUNCATE = 668,
     TRUSTED = 669,
     TRY_CAST = 670,
     TYPE_P = 671,
     TYPES_P = 672,
     UNBOUNDED = 673,
     UNCOMMITTED = 674,
     UNENCRYPTED = 675,
     UNION = 676,
     UNIQUE = 677,
     UNKNOWN = 678,
     UNLISTEN = 679,
     UNLOGGED = 680,
     UNTIL = 681,
     UPDATE = 682,
     USER = 683,
     USING = 684,
     VACUUM = 685,
     VALID = 686,
     VALIDATE = 687,
     VALIDATOR = 688,
     VALUE_P = 689,
     VALUES = 690,
     VARCHAR = 691,
     VARIADIC = 692,
     VARYING = 693,
     VERBOSE = 694,
     VERSION_P = 695,
     VIEW = 696,
     VIEWS = 697,
     VOLATILE = 698,
     WHEN = 699,
     WHERE = 700,
     WHITESPACE_P = 701,
     WINDOW = 702,
     WITH = 703,
     WITHIN = 704,
     WITHOUT = 705,
     WORK = 706,
     WRAPPER = 707,
     WRITE_P = 708,
     XML_P = 709,
     XMLATTRIBUTES = 710,
     XMLCONCAT = 711,
     XMLELEMENT = 712,
     XMLEXISTS = 713,
     XMLFOREST = 714,
     XMLNAMESPACES = 715,
     XMLPARSE = 716,
     XMLPI = 717,
     XMLROOT = 718,
     XMLSERIALIZE = 719,
     XMLTABLE = 720,
     YEAR_P = 721,
     YEARS_P = 722,
     YES_P = 723,
     ZONE = 724,
     NOT_LA = 725,
     NULLS_LA = 726,
     WITH_LA = 727,
     POSTFIXOP = 728,
     UMINUS = 729
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define CONCURRENTLY 336
#define CONFIGURATION 337
#define CONFLICT 338
#define CONNECTION 339
#define CONSTRAINT 340
#define CONSTRAINTS 341
#define CONTENT_P 342
#define CONTINUE_P 343
#define CONVERSION_P 344
#define COPY 345
#define COST 346
#define CREATE_P 347
#define CROSS 348
#define CSV 349
#define CUBE 350
#define CURRENT_P 351
#define CURRENT_CATALOG 352
#define CURRENT_DATE 353
#define CURRENT_ROLE 354
#define CURRENT_SCHEMA 355
#define CURRENT_TIME 356
#define CURRENT_TIMESTAMP 357
#define CURRENT_USER 358
#define CURSOR 359
#define CYCLE 360
#define DATA_P 361
#define DATABASE 362
#define DAY_P 363
#define DAYS_P 364
#define DEALLOCATE 365
#define DEC 366
#define DECIMAL_P 367
#define DECLARE 368
#define DEFAULT 369
#define DEFAULTS 370
#define DEFERRABLE 371
#define DEFERRED 372
#define DEFINER 373
#define DELETE_P 374
#define DELIMITER 375
#define DELIMITERS 376
#define DEPENDS 377
#define DESC_P 378
#define DESCRIBE 379
#define DETACH 380
#define DICTIONARY 381
#define DISABLE_P 382
#define DISCARD 383
#define DISTINCT 384
#define DO 385
#define DOCUMENT_P 386
#define DOMAIN_P 387
#define DOUBLE_P 388
#define DROP 389
#define EACH 390
#define ELSE 391
#define ENABLE_P 392
#define ENCODING 393
#define ENCRYPTED 394
#define END_P 395
#define ENUM_P 396
#define ESCAPE 397
#define EVENT 398
#define EXCEPT 399
#define EXCLUDE 400
#define EXCLUDING 401
#define EXCLUSIVE 402
#define EXECUTE 403
#define EXISTS 404
#define EXPLAIN 405
#define EXPORT_P 406
#define EXTENSION 407
#define EXTERNAL 408
#define EXTRACT 409
#define FALSE_P 410
#define FAMILY 411
#define FETCH 412
#define FILTER 413
#define FIRST_P 414
#define FLOAT_P 415
#define FOLLOWING 416
#define FOR 417
#define FORCE 418
#define FOREIGN 419
#define FORWARD 420
#define FREEZE 421
#define FROM 422
#define FULL 423
#define FUNCTION 424
#define FUNCTIONS 425
#define GENERATED 426
#define GLOB 427
#define GLOBAL 428
#define GRANT 429
#define GRANTED 430
#define GROUP_P 431
#define GROUPING 432
#define HANDLER 433
#define HAVING 434
#define HEADER_P 435
#define HOLD 436
#define HOUR_P 437
#define HOURS_P 438
#define IDENTITY_P 439
#define IF_P 440
#define ILIKE 441
#define IMMEDIATE 442
#define IMMUTABLE 443
#define IMPLICIT_P 444
#define IMPORT_P 445
#define IN_P 446
#define INCLUDING 447
#define INCREMENT 448
#define INDEX 449
#define INDEXES 450
#define INHERIT 451
#define INHERITS 452
#define INITIALLY 453
#define INLINE_P 454
#define INNER_P 455
#define INOUT 456
#define INPUT_P 457
#define INSENSITIVE 458
#define INSERT 459
#define INSTEAD 460
#define INT_P 461
#define INTEGER 462
#define INTERSECT 463
#define INTERVAL 464
#define INTO 465
#define INVOKER 466
#define IS 467
#define ISNULL 468
#define ISOLATION 469
#define JOIN 470
#define KEY 471
#define LABEL 472
#define LANGUAGE 473
#define LARGE_P 474
#define LAST_P 475
#define LATERAL_P 476
#define LEADING 477
#define LEAKPROOF 478
#define LEFT 479
#define LEVEL 480
#define LIKE 481
#define LIMIT 482
#define LISTEN 483
#define LOAD 484
#define LOCAL 485
#define LOCALTIME 486
#define LOCALTIMESTAMP 487
#define LOCATION 488
#define LOCK_P 489
#define LOCKED 490
#define LOGGED 491
#define MACRO 492
#define MAP 493
#define MAPPING 494
#define MATCH 495
#define MATERIALIZED 496
#define MAXVALUE 497
#define METHOD 498
#define MICROSECOND_P 499
#define MICROSECONDS_P 500
#define MILLISECOND_P 501
#define MILLISECONDS_P 502
#define MINUTE_P 503
#define MINUTES_P 504
#define MINVALUE 505
#define MODE 506
#define MONTH_P 507
#define MONTHS_P 508
#define MOVE 509
#define NAME_P 510
#define NAMES 511
#define NATIONAL 512
#define NATURAL 513
#define NCHAR 514
#define NEW 515
#define NEXT 516
#define NO 517
#define NONE 518
#define NOT 519
#define NOTHING 520
#define NOTIFY 521
#define NOTNULL 522
#define NOWAIT 523
#define NULL_P 524
#define NULLIF 525
#define NULLS_P 526
#define NUMERIC 527
#define OBJECT_P 528
#define OF 529
#define OFF 530
#define OFFSET 531
#define OIDS 532
#define OLD 533
#define ON 534
#define ONLY 535
#define OPERATOR 536
#define OPTION 537
#define OPTIONS 538
#define OR 539
#define ORDER 540
#define ORDINALITY 541
#define OUT_P 542
#define OUTER_P 543
#define OVER 544
#define OVERLAPS 545
#define OVERLAY 546
#define OVERRIDING 547
#define OWNED 548
#define OWNER 549
#define PARALLEL 550
#define PARSER 551
#define PARTIAL 552
#define PARTITION 553
#define PASSING 554
#define PASSWORD 555
#define PERCENT 556
#define PLACING 557
#define PLANS 558
#define POLICY 559
#define POSITION 560
#define PRAGMA_P 561
#define PRECEDING 562
#define PRECISION 563
#define PREPARE 564
#define PREPARED 565
#define PRESERVE 566
#define PRIMARY 567
#define PRIOR 568
#define PRIVILEGES 569
#define PROCEDURAL 570
#define PROCEDURE 571
#define PROGRAM 572
#define PUBLICATION 573
#define QUOTE 574
#define RANGE 575
#define READ_P 576
#define REAL 577
#define REASSIGN 578
#define RECHECK 579
#define RECURSIVE 580
#define REF 581
#define REFERENCES 582
#define REFERENCING 583
#define REFRESH 584
#define REINDEX 585
#define RELATIVE_P 586
#define RELEASE 587
#define RENAME 588
#define REPEATABLE 589
#define REPLACE 590
#define REPLICA 591
#define RESET 592
#define RESTART 593
#define RESTRICT 594
#define RETURNING 595
#define RETURNS 596
#define REVOKE 597
#define RIGHT 598
#define ROLE 599
#define ROLLBACK 600
#define ROLLUP 601
#define ROW 602
#define ROWS 603
#define RULE 604
#define SAMPLE 605
#define SAVEPOINT 606
#define SCHEMA 607
#define SCHEMAS 608
#define SCROLL 609
#define SEARCH 610
#define SECOND_P 611
#define SECONDS_P 612
#define SECURITY 613
#define SELECT 614
#define SEQUENCE 615
#define SEQUENCES 616
#define SERIALIZABLE 617
#define SERVER 618
#define SESSION 619
#define SESSION_USER 620
#define SET 621
#define SETOF 622
#define SETS 623
#define SHARE 624
#define SHOW 625
#define SIMILAR 626
#define SIMPLE 627
#define SKIP 628
#define SMALLINT 629
#define SNAPSHOT 630
#define SOME 631
#define SQL_P 632
#define STABLE 633
#define STANDALONE_P 634
#define START 635
#define STATEMENT 636
#define STATISTICS 637
#define STDIN 638
#define STDOUT 639
#define STORAGE 640
#define STRICT_P 641
#define STRIP_P 642
#define STRUCT 643
#define SUBSCRIPTION 644
#define SUBSTRING 645
#define SYMMETRIC 646
#define SYSID 647
#define SYSTEM_P 648
#define TABLE 649
#define TABLES 650
#define TABLESAMPLE 651
#define TABLESPACE 652
#define TEMP 653
#define TEMPLATE 654
#define TEMPORARY 655
#define TEXT_P 656
#define THEN 657
#define TIME 658
#define TIMESTAMP 659
#define TO 660
#define TRAILING 661
#define TRANSACTION 662
#define TRANSFORM 663
#define TREAT 664
#define TRIGGER 665
#define TRIM 666
#define TRUE_P 667
#define TRUNCATE 668
#define TRUSTED 669
#define TRY_CAST 670
#define TYPE_P 671
#define TYPES_P 672
#define UNBOUNDED 673
#define UNCOMMITTED 674
#define UNENCRYPTED 675
#define UNION 676
#define UNIQUE 677
#define UNKNOWN 678
#define UNLISTEN 679
#define UNLOGGED 680
#define UNTIL 681
#define UPDATE 682
#define USER 683
#define USING 684
#define VACUUM 685
#define VALID 686
#define VALIDATE 687
#define VALIDATOR 688
#define VALUE_P 689
#define VALUES 690
#define VARCHAR 691
#define VARIADIC 692
#define VARYING 693
#define VERBOSE 694
#define VERSION_P 695
#define VIEW 696
#define VIEWS 697
#define VOLATILE 698
#define WHEN 699
#define WHERE 700
#define WHITESPACE_P 701
#define WINDOW 702
#define WITH 703
#define WITHIN 704
#define WITHOUT 705
#define WORK 706
#define WRAPPER 707
#define WRITE_P 708
#define XML_P 709
#define XMLATTRIBUTES 710
#define XMLCONCAT 711
#define XMLELEMENT 712
#define XMLEXISTS 713
#define XMLFOREST 714
#define XMLNAMESPACES 715
#define XMLPARSE 716
#define XMLPI 717
#define XMLROOT 718
#define XMLSERIALIZE 719
#define XMLTABLE 720
#define YEAR_P 721
#define YEARS_P 722
#define YES_P 723
#define ZONE 724
#define NOT_LA 725
#define NULLS_LA 726
#define WITH_LA 727
#define POSTFIXOP 728
#define UMINUS 729




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1261 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1286 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  581
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   49687

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  496
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  373
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1760
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2890

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   729

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   493,     2,   481,     2,     2,
     486,   487,   479,   477,   490,   478,   488,   480,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   495,   489,
     473,   475,   474,   494,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   484,     2,   485,   482,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   491,     2,   492,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   476,   483
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   347,   350,
     354,   357,   361,   370,   372,   373,   375,   379,   386,   393,
     402,   409,   418,   425,   434,   441,   450,   459,   470,   479,
     490,   492,   493,   501,   503,   508,   513,   521,   524,   526,
     530,   535,   539,   540,   542,   543,   546,   550,   556,   565,
     571,   572,   578,   584,   592,   595,   596,   598,   600,   602,
     606,   609,   610,   612,   613,   615,   619,   621,   625,   627,
     631,   634,   637,   642,   648,   654,   663,   665,   666,   670,
     680,   693,   697,   698,   703,   710,   712,   715,   717,   719,
     720,   722,   725,   728,   730,   733,   736,   738,   741,   745,
     748,   751,   754,   757,   761,   765,   769,   771,   775,   777,
     778,   780,   783,   786,   789,   792,   795,   798,   801,   804,
     806,   808,   809,   819,   832,   833,   836,   838,   840,   842,
     844,   846,   848,   852,   853,   855,   858,   860,   862,   865,
     868,   872,   874,   876,   879,   882,   884,   887,   891,   897,
     900,   906,   912,   915,   919,   921,   923,   926,   929,   930,
     935,   936,   940,   945,   950,   951,   955,   958,   959,   963,
     965,   967,   969,   971,   973,   975,   977,   979,   981,   983,
     987,   991,   993,   996,   999,  1002,  1005,  1008,  1011,  1012,
    1016,  1020,  1024,  1025,  1027,  1030,  1032,  1035,  1038,  1041,
    1044,  1049,  1051,  1055,  1057,  1061,  1063,  1065,  1067,  1069,
    1073,  1075,  1078,  1079,  1081,  1082,  1084,  1088,  1089,  1092,
    1093,  1097,  1101,  1103,  1109,  1113,  1115,  1119,  1121,  1126,
    1132,  1138,  1145,  1149,  1157,  1162,  1174,  1176,  1180,  1183,
    1186,  1189,  1190,  1194,  1196,  1198,  1201,  1204,  1207,  1210,
    1212,  1213,  1215,  1218,  1225,  1230,  1237,  1242,  1249,  1258,
    1263,  1270,  1272,  1274,  1276,  1278,  1280,  1283,  1285,  1288,
    1290,  1292,  1294,  1298,  1302,  1306,  1310,  1313,  1316,  1318,
    1322,  1324,  1326,  1328,  1330,  1334,  1336,  1338,  1339,  1341,
    1343,  1345,  1347,  1351,  1358,  1360,  1362,  1365,  1369,  1378,
    1390,  1400,  1402,  1404,  1408,  1409,  1411,  1415,  1417,  1418,
    1420,  1421,  1423,  1424,  1426,  1430,  1432,  1434,  1436,  1440,
    1441,  1444,  1447,  1448,  1451,  1452,  1454,  1455,  1457,  1459,
    1461,  1465,  1469,  1471,  1473,  1477,  1481,  1485,  1489,  1494,
    1498,  1501,  1503,  1505,  1507,  1509,  1511,  1515,  1517,  1519,
    1523,  1527,  1529,  1532,  1537,  1542,  1545,  1549,  1555,  1561,
    1563,  1565,  1576,  1587,  1589,  1592,  1597,  1602,  1607,  1610,
    1613,  1617,  1619,  1623,  1630,  1633,  1634,  1638,  1642,  1647,
    1652,  1657,  1662,  1666,  1669,  1671,  1673,  1674,  1676,  1678,
    1679,  1681,  1687,  1689,  1690,  1692,  1693,  1697,  1699,  1703,
    1708,  1712,  1714,  1716,  1717,  1720,  1723,  1724,  1727,  1730,
    1732,  1734,  1736,  1737,  1740,  1745,  1751,  1756,  1759,  1763,
    1766,  1769,  1772,  1775,  1777,  1780,  1784,  1785,  1787,  1788,
    1794,  1796,  1801,  1808,  1811,  1813,  1814,  1819,  1820,  1822,
    1824,  1826,  1828,  1831,  1834,  1836,  1838,  1840,  1842,  1844,
    1846,  1850,  1851,  1853,  1857,  1859,  1861,  1864,  1867,  1868,
    1870,  1874,  1876,  1877,  1879,  1882,  1886,  1889,  1894,  1897,
    1901,  1904,  1905,  1907,  1910,  1911,  1916,  1922,  1925,  1926,
    1928,  1932,  1936,  1940,  1944,  1948,  1952,  1954,  1959,  1963,
    1968,  1974,  1979,  1985,  1990,  1996,  1999,  2004,  2006,  2008,
    2009,  2011,  2016,  2022,  2027,  2028,  2031,  2034,  2037,  2039,
    2041,  2042,  2047,  2050,  2052,  2055,  2058,  2063,  2066,  2073,
    2076,  2078,  2082,  2087,  2088,  2091,  2092,  2095,  2096,  2098,
    2102,  2106,  2109,  2110,  2113,  2118,  2120,  2122,  2125,  2129,
    2135,  2142,  2145,  2149,  2155,  2161,  2165,  2170,  2171,  2173,
    2175,  2177,  2179,  2181,  2184,  2189,  2191,  2193,  2195,  2197,
    2200,  2204,  2205,  2207,  2209,  2211,  2213,  2215,  2218,  2221,
    2224,  2227,  2230,  2232,  2236,  2237,  2239,  2241,  2243,  2245,
    2251,  2254,  2256,  2258,  2260,  2262,  2267,  2269,  2272,  2275,
    2277,  2281,  2285,  2288,  2290,  2291,  2297,  2300,  2306,  2309,
    2311,  2315,  2319,  2320,  2322,  2324,  2326,  2328,  2330,  2332,
    2334,  2336,  2338,  2340,  2342,  2344,  2346,  2348,  2350,  2352,
    2354,  2356,  2358,  2360,  2362,  2364,  2366,  2368,  2372,  2376,
    2380,  2384,  2388,  2392,  2396,  2397,  2399,  2403,  2407,  2413,
    2416,  2419,  2423,  2427,  2431,  2435,  2439,  2443,  2447,  2451,
    2455,  2459,  2463,  2467,  2471,  2474,  2477,  2481,  2485,  2488,
    2491,  2495,  2499,  2505,  2510,  2517,  2521,  2527,  2532,  2539,
    2544,  2551,  2557,  2565,  2569,  2572,  2577,  2581,  2584,  2586,
    2590,  2594,  2598,  2602,  2606,  2610,  2615,  2619,  2624,  2628,
    2633,  2639,  2646,  2653,  2661,  2668,  2676,  2683,  2691,  2695,
    2700,  2705,  2712,  2714,  2719,  2721,  2725,  2728,  2731,  2735,
    2739,  2743,  2747,  2751,  2755,  2759,  2763,  2767,  2771,  2775,
    2779,  2783,  2786,  2789,  2795,  2802,  2809,  2817,  2819,  2821,
    2824,  2827,  2830,  2835,  2837,  2840,  2842,  2845,  2848,  2852,
    2858,  2865,  2874,  2881,  2888,  2893,  2898,  2900,  2902,  2904,
    2910,  2912,  2914,  2919,  2921,  2926,  2928,  2933,  2935,  2940,
    2942,  2944,  2946,  2948,  2950,  2952,  2959,  2966,  2971,  2976,
    2981,  2986,  2993,  2999,  3005,  3011,  3016,  3023,  3028,  3034,
    3035,  3041,  3042,  3045,  3046,  3048,  3052,  3056,  3059,  3062,
    3063,  3070,  3072,  3073,  3077,  3078,  3081,  3084,  3085,  3087,
    3092,  3095,  3098,  3101,  3104,  3107,  3112,  3116,  3118,  3124,
    3128,  3130,  3134,  3136,  3138,  3140,  3142,  3144,  3146,  3148,
    3150,  3152,  3154,  3156,  3158,  3160,  3162,  3164,  3166,  3168,
    3170,  3175,  3177,  3182,  3184,  3189,  3191,  3194,  3196,  3199,
    3201,  3204,  3206,  3210,  3212,  3216,  3218,  3219,  3221,  3225,
    3227,  3231,  3235,  3237,  3241,  3245,  3246,  3248,  3250,  3252,
    3254,  3256,  3258,  3260,  3262,  3264,  3266,  3271,  3275,  3278,
    3282,  3283,  3287,  3291,  3294,  3297,  3299,  3300,  3303,  3306,
    3310,  3313,  3315,  3317,  3321,  3327,  3329,  3332,  3337,  3340,
    3341,  3343,  3344,  3346,  3349,  3352,  3355,  3359,  3365,  3367,
    3368,  3370,  3373,  3374,  3377,  3379,  3380,  3382,  3383,  3385,
    3389,  3393,  3396,  3398,  3400,  3402,  3406,  3408,  3411,  3413,
    3417,  3419,  3421,  3423,  3426,  3428,  3430,  3433,  3435,  3437,
    3440,  3447,  3450,  3456,  3460,  3464,  3466,  3468,  3470,  3472,
    3474,  3476,  3478,  3480,  3482,  3484,  3486,  3488,  3490,  3492,
    3494,  3496,  3498,  3500,  3502,  3504,  3507,  3510,  3514,  3518,
    3519,  3521,  3523,  3525,  3527,  3529,  3531,  3533,  3539,  3543,
    3544,  3546,  3548,  3550,  3552,  3557,  3565,  3568,  3569,  3571,
    3573,  3575,  3577,  3591,  3608,  3610,  3613,  3614,  3616,  3617,
    3619,  3620,  3623,  3624,  3626,  3627,  3634,  3643,  3650,  3659,
    3666,  3675,  3678,  3680,  3685,  3689,  3692,  3697,  3701,  3707,
    3709,  3710,  3712,  3714,  3715,  3717,  3719,  3721,  3723,  3725,
    3727,  3729,  3731,  3733,  3735,  3737,  3741,  3743,  3745,  3747,
    3749,  3751,  3753,  3756,  3758,  3760,  3763,  3767,  3771,  3773,
    3777,  3781,  3784,  3788,  3792,  3796,  3800,  3802,  3804,  3806,
    3808,  3812,  3818,  3820,  3822,  3824,  3826,  3830,  3833,  3835,
    3840,  3846,  3852,  3857,  3864,  3866,  3868,  3870,  3872,  3874,
    3876,  3877,  3879,  3883,  3885,  3886,  3894,  3896,  3899,  3903,
    3906,  3907,  3910,  3911,  3914,  3919,  3922,  3924,  3926,  3928,
    3931,  3935,  3938,  3941,  3945,  3950,  3953,  3955,  3957,  3959,
    3963,  3966,  3976,  3988,  4001,  4016,  4020,  4025,  4030,  4031,
    4039,  4050,  4053,  4057,  4058,  4063,  4065,  4067,  4069,  4071,
    4073,  4075,  4077,  4079,  4081,  4083,  4085,  4087,  4089,  4091,
    4093,  4095,  4097,  4099,  4101,  4103,  4105,  4107,  4109,  4111,
    4113,  4115,  4117,  4119,  4121,  4123,  4125,  4127,  4129,  4131,
    4133,  4135,  4137,  4139,  4141,  4143,  4145,  4147,  4149,  4151,
    4153,  4155,  4157,  4159,  4161,  4163,  4165,  4167,  4169,  4171,
    4173,  4175,  4177,  4179,  4181,  4183,  4185,  4187,  4189,  4191,
    4193,  4195,  4197,  4199,  4201,  4203,  4205,  4207,  4209,  4211,
    4213,  4215,  4217,  4219,  4221,  4223,  4225,  4227,  4229,  4231,
    4233,  4235,  4237,  4239,  4241,  4243,  4245,  4247,  4249,  4251,
    4253,  4255,  4257,  4259,  4261,  4263,  4265,  4267,  4269,  4271,
    4273,  4275,  4277,  4279,  4281,  4283,  4285,  4287,  4289,  4291,
    4293,  4295,  4297,  4299,  4301,  4303,  4305,  4307,  4309,  4311,
    4313,  4315,  4317,  4319,  4321,  4323,  4325,  4327,  4329,  4331,
    4333,  4335,  4337,  4339,  4341,  4343,  4345,  4347,  4349,  4351,
    4353,  4355,  4357,  4359,  4361,  4363,  4365,  4367,  4369,  4371,
    4373,  4375,  4377,  4379,  4381,  4383,  4385,  4387,  4389,  4391,
    4393,  4395,  4397,  4399,  4401,  4403,  4405,  4407,  4409,  4411,
    4413,  4415,  4417,  4419,  4421,  4423,  4425,  4427,  4429,  4431,
    4433,  4435,  4437,  4439,  4441,  4443,  4445,  4447,  4449,  4451,
    4453,  4455,  4457,  4459,  4461,  4463,  4465,  4467,  4469,  4471,
    4473,  4475,  4477,  4479,  4481,  4483,  4485,  4487,  4489,  4491,
    4493,  4495,  4497,  4499,  4501,  4503,  4505,  4507,  4509,  4511,
    4513,  4515,  4517,  4519,  4521,  4523,  4525,  4527,  4529,  4531,
    4533,  4535,  4537,  4539,  4541,  4543,  4545,  4547,  4549,  4551,
    4553,  4555,  4557,  4559,  4561,  4563,  4565,  4567,  4569,  4571,
    4573,  4575,  4577,  4579,  4581,  4583,  4585,  4587,  4589,  4591,
    4593,  4595,  4597,  4599,  4601,  4603,  4605,  4607,  4609,  4611,
    4613,  4615,  4617,  4619,  4621,  4623,  4625,  4627,  4629,  4631,
    4633,  4635,  4637,  4639,  4641,  4643,  4645,  4647,  4649,  4651,
    4653,  4655,  4657,  4659,  4661,  4663,  4665,  4667,  4669,  4671,
    4673,  4675,  4677,  4679,  4681,  4683,  4685,  4687,  4689,  4691,
    4693,  4695,  4697,  4699,  4701,  4703,  4705,  4707,  4709,  4711,
    4713,  4715,  4717,  4719,  4721,  4723,  4725,  4727,  4729,  4731,
    4733,  4735,  4737,  4739,  4741,  4743,  4745,  4747,  4749,  4751,
    4753,  4755,  4757,  4759,  4761,  4763,  4765,  4767,  4769,  4771,
    4773,  4775,  4777,  4779,  4781,  4783,  4785,  4787,  4789,  4791,
    4793,  4795,  4797,  4799,  4801,  4803,  4805,  4807,  4809,  4811,
    4813,  4815,  4817,  4819,  4821,  4823,  4825,  4827,  4829,  4831,
    4833,  4835,  4837,  4839,  4841,  4843,  4845,  4847,  4849,  4851,
    4853,  4855,  4857,  4859,  4861,  4863,  4865,  4867,  4869,  4871,
    4873,  4875,  4877,  4879,  4881,  4883,  4885,  4887,  4889,  4891,
    4893,  4895,  4897,  4899,  4901,  4903,  4905,  4907,  4909,  4911,
    4913,  4915,  4917,  4919,  4921,  4923,  4925,  4927,  4929,  4931,
    4933,  4935,  4937,  4939,  4941,  4943,  4945,  4947,  4949,  4951,
    4953,  4955,  4957,  4959,  4961,  4963,  4965,  4967,  4969,  4971,
    4973,  4975,  4977,  4979,  4981,  4983,  4985,  4987,  4989,  4991,
    4993,  4995,  4997,  4999,  5001,  5003,  5005,  5007,  5009,  5011,
    5013,  5015,  5017,  5019,  5021,  5023,  5025,  5027,  5029,  5031,
    5033,  5035,  5037,  5039,  5041,  5043,  5045,  5047,  5049,  5051,
    5053,  5055,  5057,  5059,  5061,  5063,  5065,  5067,  5069,  5071,
    5073,  5075,  5077,  5079,  5081,  5083,  5085,  5087,  5089,  5091,
    5093,  5095,  5097,  5099,  5101,  5103,  5105,  5107,  5109,  5111,
    5113,  5115,  5117,  5119,  5121,  5123,  5125,  5127,  5129,  5131,
    5133,  5135,  5137,  5139,  5141,  5143,  5145,  5147,  5149,  5151,
    5153,  5155,  5157,  5159,  5161,  5163,  5165,  5167,  5169,  5171,
    5173
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     497,     0,    -1,   498,    -1,   498,   489,   499,    -1,   499,
      -1,   817,    -1,   540,    -1,   500,    -1,   849,    -1,   856,
      -1,   818,    -1,   606,    -1,   859,    -1,   512,    -1,   602,
      -1,   807,    -1,   536,    -1,   549,    -1,   511,    -1,   845,
      -1,   595,    -1,   538,    -1,   821,    -1,   819,    -1,   820,
      -1,   810,    -1,   517,    -1,   838,    -1,   535,    -1,   804,
      -1,   515,    -1,   623,    -1,   547,    -1,   605,    -1,   840,
      -1,   850,    -1,   832,    -1,   853,    -1,   857,    -1,    -1,
      29,   394,   683,   508,    -1,    29,   394,   185,   149,   683,
     508,    -1,    29,   194,   785,   508,    -1,    29,   194,   185,
     149,   785,   508,    -1,    29,   360,   785,   508,    -1,    29,
     360,   185,   149,   785,   508,    -1,    29,   441,   785,   508,
      -1,    29,   441,   185,   149,   785,   508,    -1,   503,    -1,
     501,   503,    -1,   366,   114,   725,    -1,   134,   114,    -1,
     338,    -1,   338,   542,   543,    -1,   366,   544,    -1,   366,
     171,   594,    -1,   507,    -1,   504,   490,   507,    -1,    23,
     574,    -1,    23,   185,   264,   149,   574,    -1,    23,    75,
     574,    -1,    23,    75,   185,   264,   149,   574,    -1,    29,
     516,   793,   502,    -1,    29,   516,   793,   134,   264,   269,
      -1,    29,   516,   793,   366,   264,   269,    -1,    29,   516,
     793,   366,   382,   546,    -1,    29,   516,   793,   366,   562,
      -1,    29,   516,   793,   337,   562,    -1,    29,   516,   793,
     366,   385,   793,    -1,    29,   516,   793,    23,   171,   594,
      36,   184,   552,    -1,    29,   516,   793,   501,    -1,    29,
     516,   793,   134,   184,    -1,    29,   516,   793,   134,   184,
     185,   149,    -1,   134,   516,   185,   149,   793,   599,    -1,
     134,   516,   793,   599,    -1,    29,   516,   793,   510,   416,
     695,   692,   506,    -1,    29,   516,   793,   509,    -1,    23,
     564,    -1,    29,    85,   787,   550,    -1,   432,    85,   787,
      -1,   134,    85,   185,   149,   787,   599,    -1,   134,    85,
     787,   599,    -1,   366,   236,    -1,   366,   425,    -1,   366,
     562,    -1,   337,   562,    -1,   509,    -1,   429,   725,    -1,
      -1,   557,    -1,   366,   557,    -1,    23,   557,    -1,   134,
     572,    -1,   505,    -1,   508,   490,   505,    -1,   283,   486,
     504,   487,    -1,   366,   106,    -1,    -1,   110,   787,    -1,
     110,   309,   787,    -1,   110,    27,    -1,   110,   309,    27,
      -1,    92,   416,   798,    36,   141,   486,   513,   487,    -1,
     514,    -1,    -1,   792,    -1,   514,   490,   792,    -1,    29,
     352,   787,   333,   405,   787,    -1,    29,   394,   683,   333,
     405,   787,    -1,    29,   394,   185,   149,   683,   333,   405,
     787,    -1,    29,   360,   785,   333,   405,   787,    -1,    29,
     360,   185,   149,   785,   333,   405,   787,    -1,    29,   441,
     785,   333,   405,   787,    -1,    29,   441,   185,   149,   785,
     333,   405,   787,    -1,    29,   194,   785,   333,   405,   787,
      -1,    29,   194,   185,   149,   785,   333,   405,   787,    -1,
      29,   394,   683,   333,   516,   787,   405,   787,    -1,    29,
     394,   185,   149,   683,   333,   516,   787,   405,   787,    -1,
      29,   394,   683,   333,    85,   787,   405,   787,    -1,    29,
     394,   185,   149,   683,   333,    85,   787,   405,   787,    -1,
      75,    -1,    -1,   521,   204,   210,   519,   518,   524,   526,
      -1,   623,    -1,   292,   527,   434,   623,    -1,   486,   531,
     487,   623,    -1,   486,   531,   487,   292,   527,   434,   623,
      -1,   114,   435,    -1,   785,    -1,   785,    36,   793,    -1,
     486,   533,   487,   689,    -1,   279,    85,   787,    -1,    -1,
     628,    -1,    -1,   793,   779,    -1,   534,   475,   725,    -1,
     486,   528,   487,   475,   725,    -1,   279,    83,   520,   130,
     427,   366,   532,   689,    -1,   279,    83,   520,   130,   265,
      -1,    -1,   793,   529,   530,   641,   642,    -1,   730,   529,
     530,   641,   642,    -1,   486,   725,   487,   529,   530,   641,
     642,    -1,   340,   782,    -1,    -1,   428,    -1,   393,    -1,
     534,    -1,   528,   490,   534,    -1,    73,   798,    -1,    -1,
     798,    -1,    -1,   522,    -1,   531,   490,   522,    -1,   523,
      -1,   532,   490,   523,    -1,   525,    -1,   533,   490,   525,
      -1,   793,   779,    -1,   306,   793,    -1,   306,   793,   475,
     837,    -1,   306,   793,   486,   757,   487,    -1,    92,   593,
     360,   785,   537,    -1,    92,   593,   360,   185,   264,   149,
     785,   537,    -1,   541,    -1,    -1,   148,   787,   539,    -1,
      92,   593,   394,   861,    36,   148,   787,   539,   860,    -1,
      92,   593,   394,   185,   264,   149,   861,    36,   148,   787,
     539,   860,    -1,   486,   755,   487,    -1,    -1,    29,   360,
     785,   541,    -1,    29,   360,   185,   149,   785,   541,    -1,
     544,    -1,   541,   544,    -1,   448,    -1,   472,    -1,    -1,
       4,    -1,   477,     4,    -1,   478,     4,    -1,   546,    -1,
      36,   697,    -1,    55,   543,    -1,   105,    -1,   262,   105,
      -1,   193,   545,   543,    -1,   242,   543,    -1,   250,   543,
      -1,   262,   242,    -1,   262,   250,    -1,   293,    54,   798,
      -1,   360,   255,   798,    -1,   380,   542,   543,    -1,   338,
      -1,   338,   542,   543,    -1,    54,    -1,    -1,   791,    -1,
     477,   791,    -1,   478,   791,    -1,    19,   548,    -1,    47,
     548,    -1,   380,   548,    -1,    79,   548,    -1,   140,   548,
      -1,   345,   548,    -1,   451,    -1,   407,    -1,    -1,    92,
     593,   394,   785,   486,   581,   487,   569,   561,    -1,    92,
     593,   394,   185,   264,   149,   785,   486,   581,   487,   569,
     561,    -1,    -1,   550,   573,    -1,   588,    -1,   868,    -1,
     752,    -1,   543,    -1,   792,    -1,   263,    -1,   486,   541,
     487,    -1,    -1,   792,    -1,   262,    22,    -1,   339,    -1,
      58,    -1,   366,   269,    -1,   366,   114,    -1,    85,   787,
     556,    -1,   556,    -1,   568,    -1,    73,   798,    -1,   264,
     269,    -1,   269,    -1,   422,   580,    -1,   312,   216,   580,
      -1,    67,   486,   725,   487,   563,    -1,   114,   726,    -1,
     171,   594,    36,   184,   552,    -1,   327,   785,   583,   591,
     559,    -1,   572,   553,    -1,   279,   427,   554,    -1,   558,
      -1,   585,    -1,   558,   585,    -1,   585,   558,    -1,    -1,
     283,   486,   575,   487,    -1,    -1,   279,    79,   134,    -1,
     279,    79,   119,   348,    -1,   279,    79,   311,   348,    -1,
      -1,   486,   566,   487,    -1,   262,   196,    -1,    -1,    85,
     787,   589,    -1,   589,    -1,    78,    -1,    86,    -1,   115,
      -1,   184,    -1,   195,    -1,   382,    -1,   385,    -1,    27,
      -1,   586,    -1,   566,   490,   586,    -1,   429,   194,   577,
      -1,   116,    -1,   264,   116,    -1,   198,   117,    -1,   198,
     187,    -1,   448,   562,    -1,   448,   277,    -1,   450,   277,
      -1,    -1,   486,   576,   487,    -1,   571,   192,   565,    -1,
     571,   146,   565,    -1,    -1,   802,    -1,   264,   116,    -1,
     116,    -1,   198,   187,    -1,   198,   117,    -1,   264,   431,
      -1,   262,   196,    -1,   793,   695,   560,   584,    -1,   557,
      -1,   575,   490,   557,    -1,   579,    -1,   576,   490,   579,
      -1,   793,    -1,   574,    -1,   592,    -1,   564,    -1,   802,
     475,   551,    -1,   802,    -1,   448,   570,    -1,    -1,   590,
      -1,    -1,   793,    -1,   486,   587,   487,    -1,    -1,   584,
     555,    -1,    -1,   279,   119,   554,    -1,   802,   475,   551,
      -1,   802,    -1,   802,   488,   802,   475,   551,    -1,   802,
     488,   802,    -1,   582,    -1,   587,   490,   582,    -1,   695,
      -1,   795,   799,   481,   416,    -1,   367,   795,   799,   481,
     416,    -1,    67,   486,   725,   487,   550,    -1,   422,   486,
     587,   487,   580,   550,    -1,   422,   567,   550,    -1,   312,
     216,   486,   587,   487,   580,   550,    -1,   312,   216,   567,
     550,    -1,   164,   216,   486,   587,   487,   327,   785,   583,
     591,   559,   550,    -1,   578,    -1,   590,   490,   578,    -1,
     240,   168,    -1,   240,   297,    -1,   240,   372,    -1,    -1,
     226,   785,   571,    -1,   400,    -1,   398,    -1,   230,   400,
      -1,   230,   398,    -1,   173,   400,    -1,   173,   398,    -1,
     425,    -1,    -1,    30,    -1,    54,   114,    -1,   134,   596,
     185,   149,   598,   599,    -1,   134,   596,   598,   599,    -1,
     134,   597,   185,   149,   786,   599,    -1,   134,   597,   786,
     599,    -1,   134,   600,   787,   279,   798,   599,    -1,   134,
     600,   185,   149,   787,   279,   798,   599,    -1,   134,   416,
     601,   599,    -1,   134,   416,   185,   149,   601,   599,    -1,
     394,    -1,   360,    -1,   169,    -1,   237,    -1,   441,    -1,
     241,   441,    -1,   194,    -1,   164,   394,    -1,    74,    -1,
      89,    -1,   382,    -1,   401,   355,   296,    -1,   401,   355,
     126,    -1,   401,   355,   399,    -1,   401,   355,    82,    -1,
      21,   243,    -1,   143,   410,    -1,   152,    -1,   164,   106,
     452,    -1,   318,    -1,   352,    -1,   363,    -1,   798,    -1,
     598,   490,   798,    -1,    58,    -1,   339,    -1,    -1,   304,
      -1,   349,    -1,   410,    -1,   695,    -1,   601,   490,   695,
      -1,    92,   603,   785,   604,    36,   725,    -1,   169,    -1,
     237,    -1,   486,   487,    -1,   486,   757,   487,    -1,   521,
     427,   846,   366,   532,   673,   847,   526,    -1,    90,   618,
     785,   583,   616,   607,   612,   621,   608,   542,   613,    -1,
      90,   486,   806,   487,   405,   612,   621,   542,   613,    -1,
     167,    -1,   405,    -1,   610,   121,   792,    -1,    -1,   620,
      -1,   609,   490,   620,    -1,   429,    -1,    -1,    36,    -1,
      -1,   317,    -1,    -1,   617,    -1,   486,   622,   487,    -1,
     829,    -1,   543,    -1,   479,    -1,   486,   609,   487,    -1,
      -1,   802,   614,    -1,   448,   277,    -1,    -1,   617,   619,
      -1,    -1,    50,    -1,    -1,    50,    -1,   277,    -1,   166,
      -1,   120,   611,   792,    -1,   269,   611,   792,    -1,    94,
      -1,   180,    -1,   319,   611,   792,    -1,   142,   611,   792,
      -1,   163,   319,   587,    -1,   163,   319,   479,    -1,   163,
     264,   269,   587,    -1,   163,   269,   587,    -1,   138,   792,
      -1,   829,    -1,   792,    -1,   383,    -1,   384,    -1,   615,
      -1,   622,   490,   615,    -1,   625,    -1,   624,    -1,   486,
     625,   487,    -1,   486,   624,   487,    -1,   627,    -1,   626,
     638,    -1,   626,   637,   665,   644,    -1,   626,   637,   643,
     666,    -1,   628,   626,    -1,   628,   626,   638,    -1,   628,
     626,   637,   665,   644,    -1,   628,   626,   637,   643,   666,
      -1,   627,    -1,   624,    -1,   359,   636,   781,   631,   673,
     689,   660,   664,   734,   648,    -1,   359,   635,   782,   631,
     673,   689,   660,   664,   734,   648,    -1,   672,    -1,   394,
     683,    -1,   626,   421,   634,   626,    -1,   626,   208,   634,
     626,    -1,   626,   144,   634,   626,    -1,   448,   629,    -1,
     472,   629,    -1,   448,   325,   629,    -1,   630,    -1,   629,
     490,   630,    -1,   787,   800,    36,   486,   806,   487,    -1,
     210,   632,    -1,    -1,   400,   633,   785,    -1,   398,   633,
     785,    -1,   230,   400,   633,   785,    -1,   230,   398,   633,
     785,    -1,   173,   400,   633,   785,    -1,   173,   398,   633,
     785,    -1,   425,   633,   785,    -1,   394,   785,    -1,   785,
      -1,   394,    -1,    -1,    27,    -1,   129,    -1,    -1,   129,
      -1,   129,   279,   486,   755,   487,    -1,    27,    -1,    -1,
     638,    -1,    -1,   285,    54,   639,    -1,   640,    -1,   639,
     490,   640,    -1,   725,   429,   752,   642,    -1,   725,   641,
     642,    -1,    37,    -1,   123,    -1,    -1,   471,   159,    -1,
     471,   220,    -1,    -1,   645,   646,    -1,   646,   645,    -1,
     645,    -1,   646,    -1,   643,    -1,    -1,   227,   654,    -1,
     227,   654,   490,   655,    -1,   157,   659,   656,   658,   280,
      -1,   157,   659,   658,   280,    -1,   276,   655,    -1,   276,
     656,   658,    -1,     4,   481,    -1,     9,   481,    -1,     4,
     301,    -1,     9,   301,    -1,     9,    -1,     9,   348,    -1,
     429,   350,   650,    -1,    -1,   793,    -1,    -1,   649,   486,
     647,   487,   653,    -1,   647,    -1,   647,   486,   793,   487,
      -1,   647,   486,   793,   490,     9,   487,    -1,   396,   650,
      -1,   651,    -1,    -1,   334,   486,     9,   487,    -1,    -1,
     725,    -1,    27,    -1,   725,    -1,   727,    -1,   477,   657,
      -1,   478,   657,    -1,   791,    -1,     4,    -1,   347,    -1,
     348,    -1,   159,    -1,   261,    -1,   176,    54,   661,    -1,
      -1,   662,    -1,   661,   490,   662,    -1,   725,    -1,   663,
      -1,   486,   487,    -1,   179,   725,    -1,    -1,   667,    -1,
     162,   321,   280,    -1,   665,    -1,    -1,   668,    -1,   667,
     668,    -1,   669,   670,   671,    -1,   162,   427,    -1,   162,
     262,   216,   427,    -1,   162,   369,    -1,   162,   216,   369,
      -1,   274,   784,    -1,    -1,   268,    -1,   373,   235,    -1,
      -1,   435,   486,   755,   487,    -1,   672,   490,   486,   755,
     487,    -1,   167,   674,    -1,    -1,   675,    -1,   674,   490,
     675,    -1,   683,   678,   652,    -1,   684,   679,   652,    -1,
     221,   684,   679,    -1,   624,   678,   652,    -1,   221,   624,
     678,    -1,   676,    -1,   486,   676,   487,   677,    -1,   486,
     676,   487,    -1,   675,    93,   215,   675,    -1,   675,   680,
     215,   675,   682,    -1,   675,   215,   675,   682,    -1,   675,
     258,   680,   215,   675,    -1,   675,   258,   215,   675,    -1,
      36,   793,   486,   786,   487,    -1,    36,   794,    -1,   793,
     486,   786,   487,    -1,   793,    -1,   677,    -1,    -1,   677,
      -1,    36,   486,   690,   487,    -1,    36,   793,   486,   690,
     487,    -1,   793,   486,   690,   487,    -1,    -1,   168,   681,
      -1,   224,   681,    -1,   343,   681,    -1,   200,    -1,   288,
      -1,    -1,   429,   486,   786,   487,    -1,   279,   725,    -1,
     785,    -1,   785,   479,    -1,   280,   785,    -1,   280,   486,
     785,   487,    -1,   730,   688,    -1,   348,   167,   486,   686,
     487,   688,    -1,   730,   687,    -1,   685,    -1,   686,   490,
     685,    -1,    36,   486,   690,   487,    -1,    -1,   472,   286,
      -1,    -1,   445,   725,    -1,    -1,   691,    -1,   690,   490,
     691,    -1,   793,   695,   692,    -1,    73,   798,    -1,    -1,
     793,   695,    -1,   693,   490,   793,   695,    -1,   347,    -1,
     388,    -1,   697,   696,    -1,   367,   697,   696,    -1,   697,
      35,   484,   791,   485,    -1,   367,   697,    35,   484,   791,
     485,    -1,   697,    35,    -1,   367,   697,    35,    -1,   694,
     486,   693,   487,   696,    -1,   238,   486,   759,   487,   696,
      -1,   696,   484,   485,    -1,   696,   484,   791,   485,    -1,
      -1,   699,    -1,   701,    -1,   703,    -1,   707,    -1,   713,
      -1,   714,   724,    -1,   714,   486,   791,   487,    -1,   701,
      -1,   704,    -1,   708,    -1,   713,    -1,   797,   700,    -1,
     486,   755,   487,    -1,    -1,   206,    -1,   207,    -1,   374,
      -1,    49,    -1,   322,    -1,   160,   702,    -1,   133,   308,
      -1,   112,   700,    -1,   111,   700,    -1,   272,   700,    -1,
      52,    -1,   486,   791,   487,    -1,    -1,   705,    -1,   706,
      -1,   705,    -1,   706,    -1,    51,   712,   486,   755,   487,
      -1,    51,   712,    -1,   709,    -1,   710,    -1,   709,    -1,
     710,    -1,   711,   486,   791,   487,    -1,   711,    -1,    65,
     712,    -1,    64,   712,    -1,   436,    -1,   257,    65,   712,
      -1,   257,    64,   712,    -1,   259,   712,    -1,   438,    -1,
      -1,   404,   486,   791,   487,   715,    -1,   404,   715,    -1,
     403,   486,   791,   487,   715,    -1,   403,   715,    -1,   209,
      -1,   472,   403,   469,    -1,   450,   403,   469,    -1,    -1,
     466,    -1,   467,    -1,   252,    -1,   253,    -1,   108,    -1,
     109,    -1,   182,    -1,   183,    -1,   248,    -1,   249,    -1,
     356,    -1,   357,    -1,   246,    -1,   247,    -1,   244,    -1,
     245,    -1,   716,    -1,   717,    -1,   718,    -1,   719,    -1,
     720,    -1,   721,    -1,   722,    -1,   723,    -1,   716,   405,
     717,    -1,   718,   405,   719,    -1,   718,   405,   720,    -1,
     718,   405,   721,    -1,   719,   405,   720,    -1,   719,   405,
     721,    -1,   720,   405,   721,    -1,    -1,   727,    -1,   725,
      11,   695,    -1,   725,    73,   798,    -1,   725,    41,   403,
     469,   725,    -1,   477,   725,    -1,   478,   725,    -1,   725,
     477,   725,    -1,   725,   478,   725,    -1,   725,   479,   725,
      -1,   725,   480,   725,    -1,   725,   481,   725,    -1,   725,
     482,   725,    -1,   725,   473,   725,    -1,   725,   474,   725,
      -1,   725,   475,   725,    -1,   725,    16,   725,    -1,   725,
      17,   725,    -1,   725,    18,   725,    -1,   725,   751,   725,
      -1,   751,   725,    -1,   725,   751,    -1,   725,    33,   725,
      -1,   725,   284,   725,    -1,   264,   725,    -1,   470,   725,
      -1,   725,   172,   725,    -1,   725,   226,   725,    -1,   725,
     226,   725,   142,   725,    -1,   725,   470,   226,   725,    -1,
     725,   470,   226,   725,   142,   725,    -1,   725,   186,   725,
      -1,   725,   186,   725,   142,   725,    -1,   725,   470,   186,
     725,    -1,   725,   470,   186,   725,   142,   725,    -1,   725,
     371,   405,   725,    -1,   725,   371,   405,   725,   142,   725,
      -1,   725,   470,   371,   405,   725,    -1,   725,   470,   371,
     405,   725,   142,   725,    -1,   725,   212,   269,    -1,   725,
     213,    -1,   725,   212,   264,   269,    -1,   725,   264,   269,
      -1,   725,   267,    -1,   745,    -1,   491,   747,   492,    -1,
     484,   756,   485,    -1,   745,    15,   725,    -1,   775,    15,
     725,    -1,   745,   290,   745,    -1,   725,   212,   412,    -1,
     725,   212,   264,   412,    -1,   725,   212,   155,    -1,   725,
     212,   264,   155,    -1,   725,   212,   423,    -1,   725,   212,
     264,   423,    -1,   725,   212,   129,   167,   725,    -1,   725,
     212,   264,   129,   167,   725,    -1,   725,   212,   274,   486,
     759,   487,    -1,   725,   212,   264,   274,   486,   759,   487,
      -1,   725,    48,   780,   726,    33,   725,    -1,   725,   470,
      48,   780,   726,    33,   725,    -1,   725,    48,   391,   726,
      33,   725,    -1,   725,   470,    48,   391,   726,    33,   725,
      -1,   725,   191,   769,    -1,   725,   470,   191,   769,    -1,
     725,   753,   748,   624,    -1,   725,   753,   748,   486,   725,
     487,    -1,   114,    -1,    35,   484,   756,   485,    -1,   727,
      -1,   726,    11,   695,    -1,   477,   726,    -1,   478,   726,
      -1,   726,   477,   726,    -1,   726,   478,   726,    -1,   726,
     479,   726,    -1,   726,   480,   726,    -1,   726,   481,   726,
      -1,   726,   482,   726,    -1,   726,   473,   726,    -1,   726,
     474,   726,    -1,   726,   475,   726,    -1,   726,    16,   726,
      -1,   726,    17,   726,    -1,   726,    18,   726,    -1,   726,
     751,   726,    -1,   751,   726,    -1,   726,   751,    -1,   726,
     212,   129,   167,   726,    -1,   726,   212,   264,   129,   167,
     726,    -1,   726,   212,   274,   486,   759,   487,    -1,   726,
     212,   264,   274,   486,   759,   487,    -1,   775,    -1,   790,
      -1,   493,     9,    -1,   494,   779,    -1,    10,   779,    -1,
     486,   725,   487,   779,    -1,   770,    -1,   729,   779,    -1,
     624,    -1,   624,   778,    -1,   149,   624,    -1,   789,   486,
     487,    -1,   789,   486,   757,   637,   487,    -1,   789,   486,
     437,   758,   637,   487,    -1,   789,   486,   757,   490,   437,
     758,   637,   487,    -1,   789,   486,    27,   757,   637,   487,
      -1,   789,   486,   129,   757,   637,   487,    -1,   789,   486,
     479,   487,    -1,   728,   732,   733,   737,    -1,   731,    -1,
     728,    -1,   731,    -1,    74,   162,   486,   725,   487,    -1,
      98,    -1,   101,    -1,   101,   486,   791,   487,    -1,   102,
      -1,   102,   486,   791,   487,    -1,   231,    -1,   231,   486,
     791,   487,    -1,   232,    -1,   232,   486,   791,   487,    -1,
      99,    -1,   103,    -1,   365,    -1,   428,    -1,    97,    -1,
     100,    -1,    61,   486,   725,    36,   695,   487,    -1,   415,
     486,   725,    36,   695,   487,    -1,   154,   486,   760,   487,
      -1,   291,   486,   762,   487,    -1,   305,   486,   764,   487,
      -1,   390,   486,   765,   487,    -1,   409,   486,   725,    36,
     695,   487,    -1,   411,   486,    53,   768,   487,    -1,   411,
     486,   222,   768,   487,    -1,   411,   486,   406,   768,   487,
      -1,   411,   486,   768,   487,    -1,   270,   486,   725,   490,
     725,   487,    -1,    72,   486,   755,   487,    -1,   449,   176,
     486,   638,   487,    -1,    -1,   158,   486,   445,   725,   487,
      -1,    -1,   447,   735,    -1,    -1,   736,    -1,   735,   490,
     736,    -1,   793,    36,   738,    -1,   289,   738,    -1,   289,
     793,    -1,    -1,   486,   739,   740,   637,   741,   487,    -1,
     793,    -1,    -1,   298,    54,   755,    -1,    -1,   320,   742,
      -1,   348,   742,    -1,    -1,   743,    -1,    48,   743,    33,
     743,    -1,   418,   307,    -1,   418,   161,    -1,    96,   347,
      -1,   725,   307,    -1,   725,   161,    -1,   347,   486,   755,
     487,    -1,   347,   486,   487,    -1,   744,    -1,   486,   755,
     490,   725,   487,    -1,   794,   495,   725,    -1,   746,    -1,
     747,   490,   746,    -1,    34,    -1,   376,    -1,    27,    -1,
       8,    -1,   750,    -1,   477,    -1,   478,    -1,   479,    -1,
     480,    -1,   481,    -1,   482,    -1,   473,    -1,   474,    -1,
     475,    -1,    16,    -1,    17,    -1,    18,    -1,     8,    -1,
     281,   486,   754,   487,    -1,   749,    -1,   281,   486,   754,
     487,    -1,   749,    -1,   281,   486,   754,   487,    -1,   226,
      -1,   470,   226,    -1,   172,    -1,   470,   172,    -1,   186,
      -1,   470,   186,    -1,   749,    -1,   793,   488,   754,    -1,
     725,    -1,   755,   490,   725,    -1,   755,    -1,    -1,   758,
      -1,   757,   490,   758,    -1,   725,    -1,   801,    13,   725,
      -1,   801,    14,   725,    -1,   695,    -1,   759,   490,   695,
      -1,   761,   167,   725,    -1,    -1,     3,    -1,   716,    -1,
     717,    -1,   718,    -1,   719,    -1,   720,    -1,   721,    -1,
     722,    -1,   723,    -1,   792,    -1,   725,   763,   766,   767,
      -1,   725,   763,   766,    -1,   302,   725,    -1,   726,   191,
     726,    -1,    -1,   725,   766,   767,    -1,   725,   767,   766,
      -1,   725,   766,    -1,   725,   767,    -1,   755,    -1,    -1,
     167,   725,    -1,   162,   725,    -1,   725,   167,   755,    -1,
     167,   755,    -1,   755,    -1,   624,    -1,   486,   755,   487,
      -1,    60,   774,   771,   773,   140,    -1,   772,    -1,   771,
     772,    -1,   444,   725,   402,   725,    -1,   136,   725,    -1,
      -1,   725,    -1,    -1,   793,    -1,   793,   778,    -1,   488,
     788,    -1,   488,   479,    -1,   484,   725,   485,    -1,   484,
     777,   495,   777,   485,    -1,   725,    -1,    -1,   776,    -1,
     778,   776,    -1,    -1,   779,   776,    -1,    40,    -1,    -1,
     782,    -1,    -1,   783,    -1,   782,   490,   783,    -1,   725,
      36,   803,    -1,   725,     3,    -1,   725,    -1,   479,    -1,
     785,    -1,   784,   490,   785,    -1,   794,    -1,   793,   778,
      -1,   787,    -1,   786,   490,   787,    -1,   793,    -1,   802,
      -1,   796,    -1,   793,   778,    -1,   791,    -1,     4,    -1,
     792,   779,    -1,     6,    -1,     7,    -1,   789,   792,    -1,
     789,   486,   757,   637,   487,   792,    -1,   698,   792,    -1,
     714,   486,   725,   487,   724,    -1,   714,   791,   724,    -1,
     714,   792,   724,    -1,   412,    -1,   155,    -1,   269,    -1,
       9,    -1,     5,    -1,     3,    -1,   862,    -1,   863,    -1,
     793,    -1,     5,    -1,     3,    -1,   862,    -1,   867,    -1,
       3,    -1,   862,    -1,   864,    -1,     3,    -1,   862,    -1,
     865,    -1,   793,    -1,   793,   799,    -1,   488,   788,    -1,
     799,   488,   788,    -1,   486,   786,   487,    -1,    -1,   795,
      -1,     3,    -1,   866,    -1,   862,    -1,   868,    -1,   802,
      -1,     5,    -1,   309,   787,   805,    36,   806,    -1,   486,
     759,   487,    -1,    -1,   623,    -1,   517,    -1,   605,    -1,
     845,    -1,    92,   352,   793,   808,    -1,    92,   352,   185,
     264,   149,   793,   808,    -1,   808,   809,    -1,    -1,   549,
      -1,   810,    -1,   536,    -1,   857,    -1,    92,   816,   194,
     813,   814,   279,   785,   812,   486,   533,   487,   815,   689,
      -1,    92,   816,   194,   813,   185,   264,   149,   577,   279,
     785,   812,   486,   533,   487,   815,   689,    -1,   793,    -1,
     429,   811,    -1,    -1,    81,    -1,    -1,   577,    -1,    -1,
     448,   562,    -1,    -1,   422,    -1,    -1,    29,   394,   683,
     366,   352,   787,    -1,    29,   394,   185,   149,   683,   366,
     352,   787,    -1,    29,   360,   785,   366,   352,   787,    -1,
      29,   360,   185,   149,   785,   366,   352,   787,    -1,    29,
     441,   785,   366,   352,   787,    -1,    29,   441,   185,   149,
     785,   366,   352,   787,    -1,   163,    68,    -1,    68,    -1,
     151,   107,   792,   613,    -1,   190,   107,   792,    -1,   150,
     824,    -1,   150,   828,   822,   824,    -1,   150,   439,   824,
      -1,   150,   486,   827,   487,   824,    -1,   439,    -1,    -1,
     829,    -1,   543,    -1,    -1,   623,    -1,   517,    -1,   605,
      -1,   845,    -1,   859,    -1,     3,    -1,   862,    -1,   866,
      -1,   825,    -1,   792,    -1,   830,    -1,   827,   490,   830,
      -1,    32,    -1,    31,    -1,   412,    -1,   155,    -1,   279,
      -1,   826,    -1,   831,   823,    -1,   825,    -1,   828,    -1,
     366,   833,    -1,   366,   230,   833,    -1,   366,   364,   833,
      -1,   834,    -1,   855,   167,    96,    -1,   403,   469,   836,
      -1,   352,   792,    -1,   855,   405,   837,    -1,   855,   475,
     837,    -1,   855,   405,   114,    -1,   855,   475,   114,    -1,
     829,    -1,   543,    -1,   792,    -1,     3,    -1,   714,   792,
     724,    -1,   714,   486,   791,   487,   792,    -1,   543,    -1,
     114,    -1,   230,    -1,   835,    -1,   837,   490,   835,    -1,
     229,   839,    -1,   792,    -1,   430,   842,   844,   822,    -1,
     430,   842,   844,   822,   785,    -1,   430,   842,   844,   822,
     849,    -1,   430,   486,   843,   487,    -1,   430,   486,   843,
     487,   785,   800,    -1,   828,    -1,   439,    -1,   166,    -1,
     168,    -1,     3,    -1,   168,    -1,    -1,   841,    -1,   843,
     490,   841,    -1,   166,    -1,    -1,   521,   119,   167,   846,
     848,   847,   526,    -1,   683,    -1,   683,   793,    -1,   683,
      36,   793,    -1,   445,   725,    -1,    -1,   429,   674,    -1,
      -1,   828,   822,    -1,   828,   822,   785,   800,    -1,   337,
     852,    -1,   855,    -1,    27,    -1,   851,    -1,   403,   469,
      -1,   407,   214,   225,    -1,   854,   623,    -1,   854,   855,
      -1,   854,   403,   469,    -1,   854,   407,   214,   225,    -1,
     854,    27,    -1,   370,    -1,   124,    -1,   793,    -1,   855,
     488,   793,    -1,    56,   728,    -1,    92,   593,   441,   785,
     583,   815,    36,   623,   858,    -1,    92,   284,   335,   593,
     441,   785,   583,   815,    36,   623,   858,    -1,    92,   593,
     325,   441,   785,   486,   587,   487,   815,    36,   623,   858,
      -1,    92,   284,   335,   593,   325,   441,   785,   486,   587,
     487,   815,    36,   623,   858,    -1,   448,    67,   282,    -1,
     448,    59,    67,   282,    -1,   448,   230,    67,   282,    -1,
      -1,    92,   593,   394,   861,    36,   623,   860,    -1,    92,
     593,   394,   185,   264,   149,   861,    36,   623,   860,    -1,
     448,   106,    -1,   448,   262,   106,    -1,    -1,   785,   583,
     569,   561,    -1,    19,    -1,    20,    -1,    21,    -1,    22,
      -1,    23,    -1,    24,    -1,    25,    -1,    26,    -1,    28,
      -1,    29,    -1,    30,    -1,    38,    -1,    39,    -1,    41,
      -1,    42,    -1,    43,    -1,    45,    -1,    46,    -1,    47,
      -1,    54,    -1,    55,    -1,    56,    -1,    57,    -1,    58,
      -1,    59,    -1,    62,    -1,    63,    -1,    66,    -1,    68,
      -1,    69,    -1,    70,    -1,    71,    -1,    76,    -1,    77,
      -1,    78,    -1,    79,    -1,    80,    -1,    82,    -1,    83,
      -1,    84,    -1,    86,    -1,    87,    -1,    88,    -1,    89,
      -1,    90,    -1,    91,    -1,    94,    -1,    95,    -1,    96,
      -1,   104,    -1,   105,    -1,   106,    -1,   107,    -1,   108,
      -1,   109,    -1,   110,    -1,   113,    -1,   115,    -1,   117,
      -1,   118,    -1,   119,    -1,   120,    -1,   121,    -1,   122,
      -1,   124,    -1,   125,    -1,   126,    -1,   127,    -1,   128,
      -1,   131,    -1,   132,    -1,   133,    -1,   134,    -1,   135,
      -1,   137,    -1,   138,    -1,   139,    -1,   141,    -1,   142,
      -1,   143,    -1,   145,    -1,   146,    -1,   147,    -1,   148,
      -1,   150,    -1,   151,    -1,   152,    -1,   153,    -1,   156,
      -1,   158,    -1,   159,    -1,   161,    -1,   163,    -1,   165,
      -1,   169,    -1,   170,    -1,   171,    -1,   173,    -1,   175,
      -1,   178,    -1,   180,    -1,   181,    -1,   182,    -1,   183,
      -1,   184,    -1,   185,    -1,   187,    -1,   188,    -1,   189,
      -1,   190,    -1,   192,    -1,   193,    -1,   194,    -1,   195,
      -1,   196,    -1,   197,    -1,   199,    -1,   202,    -1,   203,
      -1,   204,    -1,   205,    -1,   211,    -1,   214,    -1,   216,
      -1,   217,    -1,   218,    -1,   219,    -1,   220,    -1,   223,
      -1,   225,    -1,   228,    -1,   229,    -1,   230,    -1,   233,
      -1,   234,    -1,   235,    -1,   236,    -1,   237,    -1,   239,
      -1,   240,    -1,   241,    -1,   242,    -1,   243,    -1,   244,
      -1,   245,    -1,   246,    -1,   247,    -1,   248,    -1,   249,
      -1,   250,    -1,   251,    -1,   252,    -1,   253,    -1,   254,
      -1,   255,    -1,   256,    -1,   260,    -1,   261,    -1,   262,
      -1,   265,    -1,   266,    -1,   268,    -1,   271,    -1,   273,
      -1,   274,    -1,   275,    -1,   277,    -1,   278,    -1,   281,
      -1,   282,    -1,   283,    -1,   286,    -1,   289,    -1,   292,
      -1,   293,    -1,   294,    -1,   295,    -1,   296,    -1,   297,
      -1,   298,    -1,   299,    -1,   300,    -1,   301,    -1,   303,
      -1,   304,    -1,   306,    -1,   307,    -1,   309,    -1,   310,
      -1,   311,    -1,   313,    -1,   314,    -1,   315,    -1,   316,
      -1,   317,    -1,   318,    -1,   319,    -1,   320,    -1,   321,
      -1,   323,    -1,   324,    -1,   325,    -1,   326,    -1,   328,
      -1,   329,    -1,   330,    -1,   331,    -1,   332,    -1,   333,
      -1,   334,    -1,   335,    -1,   336,    -1,   337,    -1,   338,
      -1,   339,    -1,   341,    -1,   342,    -1,   344,    -1,   345,
      -1,   346,    -1,   348,    -1,   349,    -1,   350,    -1,   351,
      -1,   352,    -1,   353,    -1,   354,    -1,   355,    -1,   356,
      -1,   357,    -1,   358,    -1,   360,    -1,   361,    -1,   362,
      -1,   363,    -1,   364,    -1,   366,    -1,   368,    -1,   369,
      -1,   370,    -1,   372,    -1,   373,    -1,   375,    -1,   377,
      -1,   378,    -1,   379,    -1,   380,    -1,   381,    -1,   382,
      -1,   383,    -1,   384,    -1,   385,    -1,   386,    -1,   387,
      -1,   389,    -1,   392,    -1,   393,    -1,   395,    -1,   397,
      -1,   398,    -1,   399,    -1,   400,    -1,   401,    -1,   407,
      -1,   408,    -1,   410,    -1,   413,    -1,   414,    -1,   416,
      -1,   417,    -1,   418,    -1,   419,    -1,   420,    -1,   423,
      -1,   424,    -1,   425,    -1,   426,    -1,   427,    -1,   430,
      -1,   431,    -1,   432,    -1,   433,    -1,   434,    -1,   438,
      -1,   440,    -1,   441,    -1,   442,    -1,   443,    -1,   446,
      -1,   449,    -1,   450,    -1,   451,    -1,   452,    -1,   453,
      -1,   454,    -1,   466,    -1,   467,    -1,   468,    -1,   469,
      -1,    48,    -1,    49,    -1,    51,    -1,    52,    -1,    64,
      -1,    65,    -1,    72,    -1,   111,    -1,   112,    -1,   149,
      -1,   154,    -1,   160,    -1,   177,    -1,   201,    -1,   206,
      -1,   207,    -1,   209,    -1,   238,    -1,   257,    -1,   259,
      -1,   263,    -1,   270,    -1,   272,    -1,   287,    -1,   291,
      -1,   305,    -1,   308,    -1,   322,    -1,   347,    -1,   367,
      -1,   374,    -1,   388,    -1,   390,    -1,   403,    -1,   404,
      -1,   409,    -1,   411,    -1,   415,    -1,   435,    -1,   436,
      -1,   455,    -1,   456,    -1,   457,    -1,   458,    -1,   459,
      -1,   460,    -1,   461,    -1,   462,    -1,   463,    -1,   464,
      -1,   465,    -1,    44,    -1,    50,    -1,    74,    -1,    81,
      -1,    93,    -1,   100,    -1,   166,    -1,   168,    -1,   172,
      -1,   186,    -1,   200,    -1,   212,    -1,   213,    -1,   215,
      -1,   224,    -1,   226,    -1,   238,    -1,   258,    -1,   267,
      -1,   288,    -1,   290,    -1,   343,    -1,   371,    -1,   388,
      -1,   396,    -1,   439,    -1,    44,    -1,    50,    -1,    74,
      -1,    81,    -1,    93,    -1,   100,    -1,   166,    -1,   168,
      -1,   172,    -1,   186,    -1,   200,    -1,   212,    -1,   213,
      -1,   215,    -1,   224,    -1,   226,    -1,   258,    -1,   267,
      -1,   288,    -1,   290,    -1,   343,    -1,   371,    -1,   396,
      -1,   415,    -1,   439,    -1,    48,    -1,    49,    -1,    51,
      -1,    52,    -1,    65,    -1,    64,    -1,    72,    -1,   111,
      -1,   112,    -1,   149,    -1,   154,    -1,   160,    -1,   177,
      -1,   201,    -1,   207,    -1,   209,    -1,   206,    -1,   238,
      -1,   257,    -1,   259,    -1,   263,    -1,   270,    -1,   272,
      -1,   287,    -1,   291,    -1,   305,    -1,   308,    -1,   322,
      -1,   347,    -1,   367,    -1,   374,    -1,   388,    -1,   390,
      -1,   403,    -1,   404,    -1,   409,    -1,   411,    -1,   415,
      -1,   435,    -1,   436,    -1,   455,    -1,   456,    -1,   457,
      -1,   458,    -1,   459,    -1,   460,    -1,   461,    -1,   462,
      -1,   463,    -1,   464,    -1,   465,    -1,    44,    -1,    50,
      -1,    74,    -1,    81,    -1,    93,    -1,   100,    -1,   166,
      -1,   168,    -1,   172,    -1,   186,    -1,   200,    -1,   212,
      -1,   213,    -1,   215,    -1,   224,    -1,   226,    -1,   238,
      -1,   258,    -1,   267,    -1,   288,    -1,   290,    -1,   343,
      -1,   371,    -1,   388,    -1,   396,    -1,   415,    -1,   439,
      -1,    27,    -1,    31,    -1,    32,    -1,    33,    -1,    34,
      -1,    35,    -1,    36,    -1,    37,    -1,    40,    -1,    53,
      -1,    60,    -1,    61,    -1,    67,    -1,    73,    -1,    75,
      -1,    85,    -1,    92,    -1,    97,    -1,    98,    -1,    99,
      -1,   101,    -1,   102,    -1,   103,    -1,   114,    -1,   116,
      -1,   123,    -1,   129,    -1,   130,    -1,   136,    -1,   140,
      -1,   144,    -1,   155,    -1,   157,    -1,   162,    -1,   164,
      -1,   167,    -1,   174,    -1,   176,    -1,   179,    -1,   191,
      -1,   198,    -1,   208,    -1,   210,    -1,   221,    -1,   222,
      -1,   227,    -1,   231,    -1,   232,    -1,   264,    -1,   269,
      -1,   276,    -1,   279,    -1,   280,    -1,   284,    -1,   285,
      -1,   302,    -1,   312,    -1,   327,    -1,   340,    -1,   359,
      -1,   365,    -1,   376,    -1,   391,    -1,   394,    -1,   402,
      -1,   405,    -1,   406,    -1,   412,    -1,   421,    -1,   422,
      -1,   428,    -1,   429,    -1,   437,    -1,   444,    -1,   445,
      -1,   447,    -1,   448,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   462,   462,   478,   490,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   534,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,     7,    13,
      19,    25,     7,    17,    18,    21,    23,     6,    15,    25,
      35,    45,    55,    65,    75,    85,    95,   106,   117,   127,
     140,   141,     8,    21,    27,    34,    40,    47,    57,    61,
      70,    79,    88,    95,    96,   101,   113,   118,   143,   153,
     163,   169,   180,   191,   206,   207,   213,   214,   219,   220,
     226,   227,   231,   232,   237,   239,   245,   246,   250,   251,
     256,     7,    14,    22,     9,    19,    32,    33,     7,    14,
      31,    51,    52,     9,    17,    29,    30,    34,    35,    36,
      41,    42,    43,    48,    52,    56,    60,    64,    68,    72,
      76,    80,    84,    88,    92,    97,   101,   105,   112,   113,
     117,   118,   119,     2,     9,    15,    21,    28,    35,    45,
      46,    47,     7,    21,    41,    42,    69,    70,    71,    72,
      73,    74,    78,    79,    84,    89,    90,    91,    92,    93,
      98,   105,   106,   107,   124,   131,   138,   148,   158,   170,
     179,   188,   207,   214,   219,   221,   223,   225,   228,   233,
     234,   238,   239,   240,   241,   246,   250,   251,   256,   263,
     268,   269,   270,   271,   272,   273,   274,   275,   281,   282,
     286,   291,   298,   305,   312,   324,   325,   326,   327,   331,
     336,   337,   338,   343,   348,   349,   350,   351,   352,   353,
     358,   381,   385,   392,   393,   397,   401,   402,   403,   407,
     411,   419,   420,   425,   426,   430,   438,   439,   444,   445,
     449,   454,   458,   462,   467,   475,   476,   480,   481,   487,
     498,   511,   525,   539,   553,   567,   590,   594,   601,   605,
     613,   618,   625,   635,   636,   637,   638,   639,   646,   653,
     654,   659,   660,     9,    19,    29,    39,    49,    59,    69,
      79,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   112,   113,   114,   115,
     116,   117,   118,   123,   124,   129,   130,   131,   136,   137,
     138,   141,   142,     7,    18,    19,    23,    27,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   170,   186,   187,   206,   210,   214,   231,   238,
     245,   255,   256,   259,   271,   282,   290,   295,   300,   305,
     310,   318,   326,   331,   336,   343,   344,   348,   349,   350,
     357,   358,   362,   363,   367,   368,   372,   376,   377,   380,
     389,   400,   401,   402,   405,   406,   407,   411,   412,   413,
     414,   418,   419,   423,   425,   441,   443,   448,   451,   459,
     463,   467,   471,   475,   479,   486,   491,   498,   499,   503,
     507,   511,   515,   522,   529,   530,   535,   536,   540,   541,
     549,   569,   570,   572,   577,   578,   582,   583,   586,   587,
     612,   613,   617,   618,   622,   623,   627,   640,   641,   645,
     646,   650,   651,   655,   656,   660,   671,   672,   673,   674,
     678,   679,   684,   685,   686,   695,   701,   719,   720,   724,
     725,   731,   737,   745,   753,   789,   815,   819,   845,   849,
     862,   876,   891,   903,   919,   925,   930,   936,   943,   944,
     952,   956,   960,   966,   973,   978,   979,   980,   981,   985,
     986,   998,   999,  1004,  1011,  1018,  1025,  1057,  1068,  1081,
    1086,  1087,  1090,  1091,  1094,  1095,  1100,  1101,  1106,  1110,
    1116,  1137,  1145,  1158,  1161,  1165,  1165,  1167,  1172,  1179,
    1184,  1190,  1195,  1201,  1207,  1216,  1218,  1221,  1225,  1226,
    1227,  1228,  1229,  1230,  1235,  1255,  1256,  1257,  1258,  1269,
    1283,  1284,  1290,  1295,  1300,  1305,  1310,  1315,  1320,  1325,
    1331,  1337,  1343,  1350,  1372,  1381,  1385,  1393,  1397,  1405,
    1417,  1438,  1442,  1448,  1452,  1465,  1473,  1483,  1485,  1487,
    1489,  1491,  1493,  1498,  1499,  1506,  1515,  1523,  1532,  1543,
    1551,  1552,  1553,  1557,  1557,  1560,  1560,  1563,  1563,  1566,
    1566,  1569,  1569,  1572,  1572,  1575,  1575,  1578,  1578,  1581,
    1583,  1585,  1587,  1589,  1591,  1593,  1595,  1597,  1602,  1607,
    1613,  1620,  1625,  1631,  1637,  1668,  1670,  1672,  1680,  1695,
    1697,  1699,  1701,  1703,  1705,  1707,  1709,  1711,  1713,  1715,
    1717,  1719,  1721,  1724,  1726,  1728,  1731,  1733,  1735,  1737,
    1740,  1745,  1750,  1757,  1762,  1769,  1774,  1782,  1787,  1796,
    1804,  1812,  1820,  1838,  1846,  1854,  1862,  1870,  1878,  1882,
    1886,  1890,  1898,  1906,  1922,  1930,  1938,  1946,  1954,  1962,
    1970,  1974,  1978,  1982,  1986,  1994,  2002,  2010,  2018,  2038,
    2060,  2071,  2078,  2092,  2108,  2110,  2112,  2114,  2116,  2118,
    2120,  2122,  2124,  2126,  2128,  2130,  2132,  2134,  2136,  2138,
    2140,  2142,  2144,  2146,  2150,  2154,  2158,  2172,  2173,  2174,
    2181,  2193,  2208,  2220,  2222,  2234,  2245,  2269,  2282,  2286,
    2292,  2299,  2306,  2316,  2323,  2351,  2386,  2397,  2398,  2405,
    2411,  2415,  2419,  2423,  2427,  2431,  2435,  2439,  2443,  2447,
    2451,  2455,  2459,  2463,  2467,  2471,  2473,  2475,  2479,  2488,
    2493,  2500,  2515,  2522,  2526,  2530,  2534,  2538,  2552,  2553,
    2557,  2558,  2566,  2567,  2571,  2572,  2577,  2585,  2587,  2601,
    2604,  2631,  2632,  2635,  2636,  2647,  2665,  2672,  2681,  2698,
    2743,  2751,  2759,  2767,  2775,  2796,  2797,  2800,  2801,  2805,
    2815,  2816,  2818,  2819,  2820,  2823,  2824,  2827,  2828,  2829,
    2830,  2831,  2832,  2833,  2834,  2835,  2836,  2837,  2838,  2841,
    2843,  2848,  2850,  2855,  2857,  2859,  2861,  2863,  2865,  2867,
    2869,  2883,  2885,  2889,  2893,  2900,  2905,  2912,  2916,  2922,
    2926,  2935,  2946,  2947,  2951,  2955,  2962,  2963,  2964,  2965,
    2966,  2967,  2968,  2969,  2970,  2971,  2981,  2985,  2992,  2999,
    3000,  3016,  3020,  3025,  3029,  3044,  3049,  3053,  3056,  3059,
    3060,  3061,  3064,  3071,  3081,  3095,  3096,  3100,  3111,  3112,
    3115,  3116,  3119,  3123,  3130,  3134,  3138,  3146,  3157,  3158,
    3162,  3163,  3167,  3168,  3171,  3172,  3182,  3183,  3187,  3188,
    3191,  3207,  3215,  3223,  3245,  3246,  3257,  3261,  3288,  3290,
    3295,  3297,  3307,  3310,  3321,  3325,  3329,  3341,  3345,  3354,
    3361,  3393,  3397,  3401,  3405,  3409,  3413,  3417,  3423,  3424,
    3440,  3441,  3442,  3445,  3446,  3452,  3453,  3454,  3457,  3458,
    3459,  3462,  3463,  3464,  3467,  3468,  3471,  3473,  3478,  3479,
    3482,  3490,  3491,  3492,  3493,  3496,  3497,     7,    18,    19,
      23,    24,    25,    26,     7,    16,    34,    41,    46,    47,
      48,    49,     8,    33,    62,    66,    67,    72,    73,    78,
      79,    83,    84,    89,    90,     7,    16,    25,    34,    43,
      52,     5,    11,     7,    20,     9,    16,    26,    33,    44,
      45,    50,    51,    52,    57,    58,    59,    60,    61,    65,
      66,    67,    72,    73,    78,    82,    90,    91,    96,    97,
      98,   104,   109,   117,   118,    10,    16,    22,    32,    33,
      41,    52,    64,    72,    80,    87,    97,    99,   105,   109,
     113,   128,   135,   136,   137,   141,   142,     7,    16,     8,
      22,    36,    48,    56,    70,    71,    72,    73,    74,    87,
      88,    93,    94,    98,    99,     7,    21,    25,    32,    43,
      44,    50,    51,     9,    19,     2,     7,    14,    24,    25,
      32,     3,    10,    16,    22,    28,    37,    37,    39,    40,
       6,     8,    21,    34,    52,    74,    75,    76,    77,    11,
      24,    41,    42,    43,    48,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION",
  "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P",
  "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV",
  "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING",
  "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P",
  "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P",
  "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P",
  "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE",
  "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF",
  "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD",
  "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER",
  "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P",
  "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES",
  "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME",
  "REPEATABLE", "REPLACE", "REPLICA", "RESET", "RESTART", "RESTRICT",
  "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP",
  "ROW", "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS",
  "SCROLL", "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TRY_CAST", "TYPE_P",
  "TYPES_P", "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE",
  "UNKNOWN", "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING",
  "VACUUM", "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES",
  "VARCHAR", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
  "VIEWS", "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH",
  "WITHIN", "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P",
  "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST",
  "XMLNAMESPACES", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P", "ZONE", "NOT_LA", "NULLS_LA",
  "WITH_LA", "'<'", "'>'", "'='", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'",
  "'%'", "'^'", "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','",
  "'{'", "'}'", "'#'", "'?'", "':'", "$accept", "stmtblock", "stmtmulti",
  "stmt", "AlterTableStmt", "alter_identity_column_option_list",
  "alter_column_default", "alter_identity_column_option",
  "alter_generic_option_list", "alter_table_cmd", "alter_using",
  "alter_generic_option_elem", "alter_table_cmds", "alter_generic_options",
  "opt_set_data", "DeallocateStmt", "CreateEnumStmt", "opt_enum_val_list",
  "enum_val_list", "RenameStmt", "opt_column", "InsertStmt", "insert_rest",
  "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "type_name_list", "CreateFunctionStmt", "macro_alias", "param_list",
  "UpdateStmt", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "sub_type", "all_Op", "MathOp", "qual_Op", "qual_all_Op", "subquery_Op",
  "any_operator", "expr_list", "opt_expr_list", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list", "target_list",
  "target_el", "qualified_name_list", "qualified_name", "name_list",
  "name", "attr_name", "func_name", "AexprConst", "Iconst", "Sconst",
  "ColId", "ColIdOrString", "type_function_name", "function_name_token",
  "type_name_token", "any_name", "attrs", "opt_name_list", "param_name",
  "ColLabel", "ColLabelOrString", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt",
  "IndexStmt", "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,    60,    62,    61,   728,    43,    45,    42,
      47,    37,    94,   729,    91,    93,    40,    41,    46,    59,
      44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   496,   497,   498,   498,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     500,   500,   500,   500,   500,   500,   500,   500,   501,   501,
     502,   502,   503,   503,   503,   503,   504,   504,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   506,   506,   507,
     507,   507,   507,   508,   508,   509,   510,   510,   511,   511,
     511,   511,   512,   513,   513,   514,   514,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     516,   516,   517,   518,   518,   518,   518,   518,   519,   519,
     520,   520,   520,   521,   521,   522,   523,   523,   524,   524,
     524,   525,   525,   525,   526,   526,   527,   527,   528,   528,
     529,   529,   530,   530,   531,   531,   532,   532,   533,   533,
     534,   535,   535,   535,   536,   536,   537,   537,   538,   538,
     538,   539,   539,   540,   540,   541,   541,   542,   542,   542,
     543,   543,   543,   543,   544,   544,   544,   544,   544,   544,
     544,   544,   544,   544,   544,   544,   544,   544,   545,   545,
     546,   546,   546,   547,   547,   547,   547,   547,   547,   548,
     548,   548,   549,   549,   550,   550,   551,   551,   551,   551,
     551,   551,   552,   552,   553,   554,   554,   554,   554,   554,
     555,   555,   555,   555,   556,   556,   556,   556,   556,   556,
     556,   556,   557,   558,   559,   559,   559,   559,   559,   560,
     560,   561,   561,   561,   561,   562,   563,   563,   564,   564,
     565,   565,   565,   565,   565,   565,   565,   565,   566,   566,
     567,   568,   568,   568,   568,   569,   569,   569,   569,   570,
     571,   571,   571,   572,   573,   573,   573,   573,   573,   573,
     574,   575,   575,   576,   576,   577,   578,   578,   578,   579,
     579,   580,   580,   581,   581,   582,   583,   583,   584,   584,
     585,   586,   586,   586,   586,   587,   587,   588,   588,   588,
     589,   589,   589,   589,   589,   589,   590,   590,   591,   591,
     591,   591,   592,   593,   593,   593,   593,   593,   593,   593,
     593,   594,   594,   595,   595,   595,   595,   595,   595,   595,
     595,   596,   596,   596,   596,   596,   596,   596,   596,   596,
     596,   596,   596,   596,   596,   596,   597,   597,   597,   597,
     597,   597,   597,   598,   598,   599,   599,   599,   600,   600,
     600,   601,   601,   602,   603,   603,   604,   604,   605,   606,
     606,   607,   607,   608,   608,   609,   609,   610,   610,   611,
     611,   612,   612,   613,   613,   614,   614,   614,   614,   614,
     615,   616,   616,   617,   617,   618,   618,   619,   619,   619,
     619,   619,   619,   619,   619,   619,   619,   619,   619,   619,
     619,   620,   621,   621,   621,   622,   622,   623,   623,   624,
     624,   625,   625,   625,   625,   625,   625,   625,   625,   626,
     626,   627,   627,   627,   627,   627,   627,   627,   628,   628,
     628,   629,   629,   630,   631,   631,   632,   632,   632,   632,
     632,   632,   632,   632,   632,   633,   633,   634,   634,   634,
     635,   635,   636,   636,   637,   637,   638,   639,   639,   640,
     640,   641,   641,   641,   642,   642,   642,   643,   643,   643,
     643,   644,   644,   645,   645,   645,   645,   646,   646,   647,
     647,   647,   647,   647,   647,   648,   648,   649,   649,   650,
     650,   650,   650,   651,   652,   652,   653,   653,   654,   654,
     655,   656,   656,   656,   657,   657,   658,   658,   659,   659,
     660,   660,   661,   661,   662,   662,   663,   664,   664,   665,
     665,   666,   666,   667,   667,   668,   669,   669,   669,   669,
     670,   670,   671,   671,   671,   672,   672,   673,   673,   674,
     674,   675,   675,   675,   675,   675,   675,   675,   676,   676,
     676,   676,   676,   676,   677,   677,   677,   677,   678,   678,
     679,   679,   679,   679,   679,   680,   680,   680,   680,   681,
     681,   682,   682,   683,   683,   683,   683,   684,   684,   685,
     686,   686,   687,   687,   688,   688,   689,   689,   690,   690,
     691,   692,   692,   693,   693,   694,   694,   695,   695,   695,
     695,   695,   695,   695,   695,   696,   696,   696,   697,   697,
     697,   697,   697,   697,   697,   698,   698,   698,   698,   699,
     700,   700,   701,   701,   701,   701,   701,   701,   701,   701,
     701,   701,   701,   702,   702,   703,   703,   704,   704,   705,
     706,   707,   707,   708,   708,   709,   710,   711,   711,   711,
     711,   711,   711,   712,   712,   713,   713,   713,   713,   714,
     715,   715,   715,   716,   716,   717,   717,   718,   718,   719,
     719,   720,   720,   721,   721,   722,   722,   723,   723,   724,
     724,   724,   724,   724,   724,   724,   724,   724,   724,   724,
     724,   724,   724,   724,   724,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,   726,   726,   726,   727,   727,   727,
     727,   727,   727,   727,   727,   727,   727,   727,   728,   728,
     728,   728,   728,   728,   728,   729,   729,   730,   730,   731,
     731,   731,   731,   731,   731,   731,   731,   731,   731,   731,
     731,   731,   731,   731,   731,   731,   731,   731,   731,   731,
     731,   731,   731,   731,   731,   731,   731,   731,   732,   732,
     733,   733,   734,   734,   735,   735,   736,   737,   737,   737,
     738,   739,   739,   740,   740,   741,   741,   741,   742,   742,
     743,   743,   743,   743,   743,   744,   744,   745,   745,   746,
     747,   747,   748,   748,   748,   749,   749,   750,   750,   750,
     750,   750,   750,   750,   750,   750,   750,   750,   750,   751,
     751,   752,   752,   753,   753,   753,   753,   753,   753,   753,
     753,   754,   754,   755,   755,   756,   756,   757,   757,   758,
     758,   758,   759,   759,   760,   760,   761,   761,   761,   761,
     761,   761,   761,   761,   761,   761,   762,   762,   763,   764,
     764,   765,   765,   765,   765,   765,   765,   766,   767,   768,
     768,   768,   769,   769,   770,   771,   771,   772,   773,   773,
     774,   774,   775,   775,   776,   776,   776,   776,   777,   777,
     778,   778,   779,   779,   780,   780,   781,   781,   782,   782,
     783,   783,   783,   783,   784,   784,   785,   785,   786,   786,
     787,   788,   789,   789,   790,   790,   790,   790,   790,   790,
     790,   790,   790,   790,   790,   790,   790,   790,   791,   792,
     793,   793,   793,   794,   794,   795,   795,   795,   796,   796,
     796,   797,   797,   797,   798,   798,   799,   799,   800,   800,
     801,   802,   802,   802,   802,   803,   803,   804,   805,   805,
     806,   806,   806,   806,   807,   807,   808,   808,   809,   809,
     809,   809,   810,   810,   811,   812,   812,   813,   813,   814,
     814,   815,   815,   816,   816,   817,   817,   817,   817,   817,
     817,   818,   818,   819,   820,   821,   821,   821,   821,   822,
     822,   823,   823,   823,   824,   824,   824,   824,   824,   825,
     825,   825,   826,   826,   827,   827,   828,   828,   829,   829,
     829,   829,   830,   831,   831,   832,   832,   832,   833,   833,
     833,   833,   834,   834,   834,   834,   835,   835,   836,   836,
     836,   836,   836,   836,   836,   837,   837,   838,   839,   840,
     840,   840,   840,   840,   841,   841,   841,   841,   841,   842,
     842,   843,   843,   844,   844,   845,   846,   846,   846,   847,
     847,   848,   848,   849,   849,   850,   851,   851,   852,   852,
     852,   853,   853,   853,   853,   853,   854,   854,   855,   855,
     856,   857,   857,   857,   857,   858,   858,   858,   858,   859,
     859,   860,   860,   860,   861,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   863,   863,   863,   863,   863,   863,
     863,   863,   863,   863,   863,   863,   863,   863,   863,   863,
     863,   863,   863,   863,   863,   863,   863,   863,   863,   863,
     863,   863,   863,   863,   863,   863,   863,   863,   863,   863,
     863,   863,   863,   863,   863,   863,   863,   863,   863,   863,
     863,   863,   863,   863,   863,   864,   864,   864,   864,   864,
     864,   864,   864,   864,   864,   864,   864,   864,   864,   864,
     864,   864,   864,   864,   864,   864,   864,   864,   864,   864,
     864,   865,   865,   865,   865,   865,   865,   865,   865,   865,
     865,   865,   865,   865,   865,   865,   865,   865,   865,   865,
     865,   865,   865,   865,   865,   865,   866,   866,   866,   866,
     866,   866,   866,   866,   866,   866,   866,   866,   866,   866,
     866,   866,   866,   866,   866,   866,   866,   866,   866,   866,
     866,   866,   866,   866,   866,   866,   866,   866,   866,   866,
     866,   866,   866,   866,   866,   866,   866,   866,   866,   866,
     866,   866,   866,   866,   866,   866,   866,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   867,   867,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     0,     2,     3,
       2,     3,     8,     1,     0,     1,     3,     6,     6,     8,
       6,     8,     6,     8,     6,     8,     8,    10,     8,    10,
       1,     0,     7,     1,     4,     4,     7,     2,     1,     3,
       4,     3,     0,     1,     0,     2,     3,     5,     8,     5,
       0,     5,     5,     7,     2,     0,     1,     1,     1,     3,
       2,     0,     1,     0,     1,     3,     1,     3,     1,     3,
       2,     2,     4,     5,     5,     8,     1,     0,     3,     9,
      12,     3,     0,     4,     6,     1,     2,     1,     1,     0,
       1,     2,     2,     1,     2,     2,     1,     2,     3,     2,
       2,     2,     2,     3,     3,     3,     1,     3,     1,     0,
       1,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     0,     9,    12,     0,     2,     1,     1,     1,     1,
       1,     1,     3,     0,     1,     2,     1,     1,     2,     2,
       3,     1,     1,     2,     2,     1,     2,     3,     5,     2,
       5,     5,     2,     3,     1,     1,     2,     2,     0,     4,
       0,     3,     4,     4,     0,     3,     2,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     1,     2,     2,     2,     2,     2,     2,     0,     3,
       3,     3,     0,     1,     2,     1,     2,     2,     2,     2,
       4,     1,     3,     1,     3,     1,     1,     1,     1,     3,
       1,     2,     0,     1,     0,     1,     3,     0,     2,     0,
       3,     3,     1,     5,     3,     1,     3,     1,     4,     5,
       5,     6,     3,     7,     4,    11,     1,     3,     2,     2,
       2,     0,     3,     1,     1,     2,     2,     2,     2,     1,
       0,     1,     2,     6,     4,     6,     4,     6,     8,     4,
       6,     1,     1,     1,     1,     1,     2,     1,     2,     1,
       1,     1,     3,     3,     3,     3,     2,     2,     1,     3,
       1,     1,     1,     1,     3,     1,     1,     0,     1,     1,
       1,     1,     3,     6,     1,     1,     2,     3,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,    10,    10,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     2,
       2,     2,     2,     1,     2,     3,     0,     1,     0,     5,
       1,     4,     6,     2,     1,     0,     4,     0,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     4,     1,     1,     2,     3,     5,
       6,     2,     3,     5,     5,     3,     4,     0,     1,     1,
       1,     1,     1,     2,     4,     1,     1,     1,     1,     2,
       3,     0,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     2,     1,     3,     0,     1,     1,     1,     1,     5,
       2,     1,     1,     1,     1,     4,     1,     2,     2,     1,
       3,     3,     2,     1,     0,     5,     2,     5,     2,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     3,     3,     3,     0,     1,     3,     3,     5,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     2,     3,     3,     2,     2,
       3,     3,     5,     4,     6,     3,     5,     4,     6,     4,
       6,     5,     7,     3,     2,     4,     3,     2,     1,     3,
       3,     3,     3,     3,     3,     4,     3,     4,     3,     4,
       5,     6,     6,     7,     6,     7,     6,     7,     3,     4,
       4,     6,     1,     4,     1,     3,     2,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     2,     2,     5,     6,     6,     7,     1,     1,     2,
       2,     2,     4,     1,     2,     1,     2,     2,     3,     5,
       6,     8,     6,     6,     4,     4,     1,     1,     1,     5,
       1,     1,     4,     1,     4,     1,     4,     1,     4,     1,
       1,     1,     1,     1,     1,     6,     6,     4,     4,     4,
       4,     6,     5,     5,     5,     4,     6,     4,     5,     0,
       5,     0,     2,     0,     1,     3,     3,     2,     2,     0,
       6,     1,     0,     3,     0,     2,     2,     0,     1,     4,
       2,     2,     2,     2,     2,     4,     3,     1,     5,     3,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       4,     1,     4,     1,     4,     1,     2,     1,     2,     1,
       2,     1,     3,     1,     3,     1,     0,     1,     3,     1,
       3,     3,     1,     3,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     4,     3,     2,     3,
       0,     3,     3,     2,     2,     1,     0,     2,     2,     3,
       2,     1,     1,     3,     5,     1,     2,     4,     2,     0,
       1,     0,     1,     2,     2,     2,     3,     5,     1,     0,
       1,     2,     0,     2,     1,     0,     1,     0,     1,     3,
       3,     2,     1,     1,     1,     3,     1,     2,     1,     3,
       1,     1,     1,     2,     1,     1,     2,     1,     1,     2,
       6,     2,     5,     3,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     3,     3,     0,
       1,     1,     1,     1,     1,     1,     1,     5,     3,     0,
       1,     1,     1,     1,     4,     7,     2,     0,     1,     1,
       1,     1,    13,    16,     1,     2,     0,     1,     0,     1,
       0,     2,     0,     1,     0,     6,     8,     6,     8,     6,
       8,     2,     1,     4,     3,     2,     4,     3,     5,     1,
       0,     1,     1,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     2,     3,     3,     1,     3,
       3,     2,     3,     3,     3,     3,     1,     1,     1,     1,
       3,     5,     1,     1,     1,     1,     3,     2,     1,     4,
       5,     5,     4,     6,     1,     1,     1,     1,     1,     1,
       0,     1,     3,     1,     0,     7,     1,     2,     3,     2,
       0,     2,     0,     2,     4,     2,     1,     1,     1,     2,
       3,     2,     2,     3,     4,     2,     1,     1,     1,     3,
       2,     9,    11,    12,    14,     3,     4,     4,     0,     7,
      10,     2,     3,     0,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     134,   211,     0,  1117,  1116,   211,     0,  1092,   211,   416,
     340,     0,  1187,     0,   211,     0,   134,     0,     0,     0,
       0,     0,     0,     0,   211,   483,     0,  1186,   211,     0,
    1160,     0,     0,     0,     0,     0,     2,     4,     7,    18,
      13,    30,    26,     0,    28,    16,    21,     6,    32,    17,
      20,    14,    33,    11,    31,   450,   437,   485,   449,   133,
     453,    29,    15,    25,     5,    10,    23,    24,    22,  1100,
      36,    27,    34,    19,     8,    35,    37,     0,     9,    38,
      12,   210,   209,   203,     0,     0,     0,     0,     0,   204,
    1030,  1205,  1206,  1207,  1208,  1209,  1210,  1211,  1212,  1213,
    1214,  1215,  1216,  1217,  1218,  1219,  1220,  1555,  1221,  1222,
    1223,  1504,  1505,  1556,  1506,  1507,  1224,  1225,  1226,  1227,
    1228,  1229,  1230,  1231,  1508,  1509,  1232,  1233,  1234,  1235,
    1236,  1510,  1557,  1237,  1238,  1239,  1240,  1241,  1558,  1242,
    1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1559,  1251,
    1252,  1253,  1560,  1254,  1255,  1256,  1257,  1258,  1259,  1260,
    1511,  1512,  1261,  1262,  1263,  1264,  1265,  1266,  1267,  1268,
    1269,  1270,  1271,  1272,  1273,  1274,  1275,  1276,  1277,  1278,
    1279,  1280,  1281,  1282,  1283,  1284,  1285,  1286,  1287,  1288,
    1513,  1289,  1290,  1291,  1292,  1514,  1293,  1294,  1295,  1515,
    1296,  1297,  1298,  1561,  1562,  1299,  1300,  1301,  1563,  1302,
    1303,  1516,  1304,  1305,  1306,  1307,  1308,  1309,  1310,  1564,
    1311,  1312,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  1320,
    1321,  1565,  1517,  1322,  1323,  1324,  1325,  1518,  1519,  1520,
    1326,  1566,  1567,  1327,  1568,  1328,  1329,  1330,  1331,  1332,
    1333,  1569,  1334,  1570,  1335,  1336,  1337,  1338,  1339,  1340,
    1341,  1342,  1521,  1343,  1344,  1345,  1346,  1347,  1348,  1349,
    1350,  1351,  1352,  1353,  1354,  1355,  1356,  1357,  1358,  1359,
    1360,  1522,  1572,  1523,  1361,  1362,  1363,  1524,  1364,  1365,
    1573,  1366,  1525,  1367,  1526,  1368,  1369,  1370,  1371,  1372,
    1373,  1374,  1375,  1376,  1527,  1574,  1377,  1575,  1528,  1378,
    1379,  1380,  1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,
    1389,  1529,  1390,  1391,  1530,  1392,  1393,  1394,  1395,  1396,
    1397,  1398,  1399,  1400,  1401,  1402,  1403,  1531,  1404,  1405,
    1406,  1407,  1408,  1409,  1410,  1411,  1412,  1413,  1414,  1415,
    1416,  1417,  1418,  1419,  1420,  1421,  1576,  1422,  1423,  1424,
    1532,  1425,  1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,
    1434,  1435,  1436,  1437,  1438,  1439,  1440,  1441,  1533,  1442,
    1443,  1444,  1577,  1445,  1446,  1534,  1447,  1448,  1449,  1450,
    1451,  1452,  1453,  1454,  1455,  1456,  1457,  1458,  1535,  1459,
    1536,  1460,  1461,  1462,  1579,  1463,  1464,  1465,  1466,  1467,
    1537,  1538,  1468,  1469,  1539,  1470,  1540,  1471,  1472,  1541,
    1473,  1474,  1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,
    1483,  1484,  1485,  1486,  1487,  1542,  1543,  1488,  1580,  1489,
    1490,  1491,  1492,  1493,  1494,  1495,  1496,  1497,  1498,  1499,
    1544,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,
    1554,  1500,  1501,  1502,  1503,  1190,     0,     0,  1012,  1031,
    1032,  1040,   206,   415,   134,     0,   384,     0,     0,   385,
       0,     0,   334,   333,     0,  1083,   339,     0,     0,     0,
    1030,   100,  1521,  1392,  1535,    98,  1010,  1031,     0,   359,
     360,     0,   368,     0,   353,   357,   354,     0,   378,   370,
     379,   371,   352,   372,   361,   351,     0,   380,     0,   355,
       0,     0,     0,   207,   172,   340,   134,     0,  1105,  1106,
    1104,  1095,  1100,  1107,  1108,     0,  1091,     0,  1029,  1148,
    1147,   161,  1059,  1177,  1537,  1468,  1188,  1178,  1175,  1176,
     208,   482,   480,     0,   997,  1337,  1429,  1440,  1537,  1125,
    1128,     0,   205,  1034,     0,   454,   603,  1033,  1006,  1159,
       0,  1164,     0,  1406,   458,   461,  1049,   459,   450,     0,
       0,     1,   134,     0,     0,     0,   479,   479,     0,   479,
       0,   442,   450,   445,   449,     0,  1099,  1173,  1185,  1537,
    1468,  1542,  1181,  1182,  1310,     0,     0,  1310,     0,  1310,
       0,  1310,     0,     0,   989,     0,   990,  1013,  1061,  1062,
    1060,     0,  1063,   307,   338,   337,   336,   335,   340,  1310,
    1067,  1044,     0,     0,     0,     0,     0,     0,  1078,   101,
      99,   366,   367,     0,   358,   356,     0,  1041,  1581,   655,
    1582,   684,   662,   684,   684,  1583,  1584,  1585,  1586,   651,
     651,  1276,   664,  1587,  1588,  1589,  1310,  1590,  1591,   652,
     653,   689,  1592,  1593,  1594,  1595,  1596,     0,     0,  1597,
     684,  1598,   651,  1599,  1600,   656,  1601,   625,     0,  1602,
     654,   626,  1603,   692,   692,  1604,   679,  1605,   377,     0,
     381,   637,   638,   639,   640,   665,   666,   641,   671,   672,
     676,   642,   724,   651,  1042,  1043,  1310,   377,   373,  1310,
     377,  1008,  1310,     0,     0,   168,     0,  1097,  1109,  1606,
    1607,  1608,  1609,  1611,  1610,  1612,  1613,  1614,  1615,  1616,
    1617,  1618,  1619,  1622,  1620,  1621,  1623,  1624,  1625,  1626,
    1627,  1628,  1629,  1630,  1631,  1632,  1633,  1634,  1635,  1636,
    1637,  1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,
    1647,  1648,  1649,  1650,  1651,  1652,  1653,  1654,  1655,  1656,
    1123,     0,  1124,  1114,  1103,  1110,  1111,   134,   414,  1094,
       0,     0,     0,     0,  1179,     0,     0,     0,  1015,  1017,
    1018,   919,  1028,   992,     0,  1505,  1506,  1507,   981,     0,
    1508,  1509,  1510,  1557,   853,   840,   849,   854,   841,   843,
     850,  1511,  1512,   792,  1513,  1514,  1026,  1515,  1518,  1519,
    1520,   845,   847,  1522,  1523,     0,  1027,  1525,  1526,  1373,
    1528,  1529,  1531,  1532,   851,  1534,  1536,  1537,  1538,  1539,
    1540,  1025,  1541,   852,  1543,     0,     0,     0,  1003,   936,
       0,     0,     0,   992,   825,     0,   645,   646,   667,   668,
     647,   673,   674,   648,     0,  1002,   725,   869,   992,   836,
     897,   768,     0,   823,   817,   465,   998,     0,   818,  1014,
     992,   982,   465,   996,  1126,  1131,  1127,     0,     0,     0,
       0,     0,   605,   604,  1007,  1158,  1156,  1157,  1155,  1154,
    1161,     0,  1163,  1100,   933,     0,   460,     0,     0,     0,
     440,   439,     3,     0,     0,  1166,     0,   477,   478,     0,
       0,     0,     0,     0,     0,     0,     0,   552,   499,   500,
     502,   549,   553,   561,     0,   446,     0,  1049,  1183,     0,
       0,     0,   121,   121,     0,     0,     0,     0,     0,    93,
      42,    86,     0,     0,     0,     0,   186,   199,     0,     0,
       0,     0,     0,   196,     0,     0,   179,    44,   173,   175,
       0,   121,     0,    40,     0,     0,     0,    46,  1030,     0,
    1555,  1556,  1557,  1558,  1559,   854,     0,  1561,  1562,  1563,
    1564,  1565,  1566,  1567,  1568,  1569,  1570,  1521,  1572,  1573,
    1574,  1575,  1576,  1577,  1535,  1579,  1541,     0,  1580,     0,
     828,   939,   485,   937,  1050,     0,  1031,  1037,   988,     0,
    1051,  1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,
    1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,
    1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,
    1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,
    1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,
    1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,  1741,  1742,
    1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,  1752,
    1753,  1754,  1755,  1644,  1756,  1757,  1758,  1759,  1760,   985,
     984,  1011,  1053,  1052,  1054,   991,     0,     0,   412,     0,
       0,  1064,     0,  1045,     0,     0,  1310,   167,  1310,   307,
       0,   307,     0,     0,  1077,  1080,   369,   365,   363,   362,
     364,   683,   670,   678,   677,     0,   660,   659,   658,     0,
     657,     0,     0,   684,   684,   682,   661,   637,     0,     0,
       0,   688,     0,   686,   375,   376,     0,   349,     0,   631,
     627,     0,   697,   698,   699,   700,   707,   708,   705,   706,
     701,   702,   695,   696,   703,   704,   693,   694,     0,   709,
     710,   711,   712,   713,   714,   715,   716,   643,   649,     0,
       0,   344,     0,     0,   346,     0,     0,     0,     0,   134,
       0,   180,  1119,  1120,  1118,     0,     0,  1102,   183,   200,
    1113,  1122,  1112,  1121,  1101,  1096,     0,  1093,   403,  1137,
    1136,  1145,   162,     0,   942,     0,   134,  1180,  1189,     0,
     821,   936,   980,     0,     0,     0,     0,     0,     0,   827,
     945,     0,     0,   748,     0,     0,     0,   960,     0,   966,
       0,     0,     0,   749,   729,   730,   935,     0,   825,   933,
       0,   900,     0,  1033,     0,   819,   820,   826,  1021,     0,
     724,   724,  1001,   919,     0,   916,   917,   918,     0,     0,
       0,   995,     0,   927,   929,     0,     0,   764,   925,     0,
     767,     0,     0,     0,     0,   913,   914,   915,   907,   908,
     909,   910,   911,   912,   923,   906,   745,     0,     0,   871,
     824,     0,     0,   744,     0,     0,     0,   568,     0,  1019,
    1016,   983,   568,  1139,  1143,  1144,  1142,     0,  1138,  1130,
    1129,  1134,  1132,  1135,  1133,     0,  1152,     0,  1149,   565,
       0,   462,     0,     0,  1172,     0,   128,     0,  1167,     0,
     457,   456,   486,   487,   493,   455,   538,   539,     0,     0,
       0,     0,   558,   556,   529,   503,   528,     0,     0,   507,
       0,   530,   725,   551,   444,   497,   498,   501,   443,     0,
     554,     0,   564,   552,   502,     0,  1174,  1184,     0,     0,
       0,     0,     0,  1310,     0,     0,    77,    58,   259,     0,
     120,     0,     0,     0,     0,     0,     0,     0,    85,    82,
      83,    84,     0,     0,     0,     0,   184,   185,   198,     0,
     189,   190,   187,   191,   192,     0,     0,   177,   178,     0,
       0,     0,     0,   176,     0,     0,     0,     0,     0,     0,
       0,     0,   485,   485,   485,   834,     0,     0,   484,     0,
       0,   986,   989,   402,   315,     0,   305,     0,     0,     0,
       0,     0,   340,  1070,  1068,  1066,  1069,  1071,  1046,     0,
       0,     0,     0,   164,   166,     0,   304,   278,     0,  1082,
     386,     0,     0,  1310,  1079,   295,     0,     0,     0,     0,
     377,     0,   681,   680,   632,   628,     0,     0,     0,     0,
     382,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   377,   374,   377,  1009,     0,   377,   171,  1310,   307,
       0,  1098,  1115,   181,   201,   182,   202,   435,     0,   409,
     417,   422,   400,     0,   400,     0,   419,   423,   400,   418,
     400,   413,     0,   163,     0,  1058,     0,  1057,     0,   993,
       0,     0,   979,   975,     0,     0,     0,     0,     0,   946,
     947,   948,   949,   950,   951,   952,   953,   954,     0,     0,
     955,     0,     0,     0,   905,   916,   917,   918,   913,   914,
     915,   907,   908,   909,   910,   911,   912,   931,     0,     0,
       0,     0,     0,     0,     0,     0,   794,     0,     0,   817,
     896,     0,   933,   965,     0,     0,     0,     0,     0,     0,
     933,   971,     0,     0,   770,   992,     0,     0,   769,     0,
       0,  1023,  1024,   726,   740,   741,   742,   746,  1056,  1055,
    1000,     0,   994,     0,     0,   727,   750,   755,     0,   972,
     788,     0,   776,     0,   763,     0,   774,   778,   751,   766,
       0,   747,     0,   995,   928,   930,     0,   926,     0,   737,
     738,   739,   731,   732,   733,   734,   735,   736,   743,   904,
     902,   903,     0,     0,     0,   879,   771,     0,     0,   773,
     772,  1302,  1337,     0,   476,   476,   476,   464,   474,   999,
       0,   617,   485,   617,     0,   724,   606,  1049,  1162,  1150,
    1151,   934,  1048,   134,     0,  1170,     0,     0,     0,   140,
     123,     0,  1168,     0,   156,   568,     0,   992,     0,   491,
     492,     0,   496,  1532,  1425,     0,     0,     0,     0,   531,
     559,     0,   550,     0,  1015,   532,  1014,   533,   536,   537,
     508,   560,  1004,   562,     0,   555,   448,   447,   566,     0,
      43,     0,  1310,    60,     0,     0,     0,     0,     0,     0,
     214,   250,   214,    97,  1310,   377,  1310,   377,  1209,  1277,
    1441,     0,    56,    89,     0,   283,   114,     0,   268,   312,
      79,    94,   107,     0,     0,    45,   174,   188,   193,   110,
     197,   194,  1087,   195,   121,     0,    41,     0,   108,     0,
    1085,     0,     0,    47,   112,  1089,     0,     0,     0,     0,
     938,   829,   940,   941,   988,     0,   401,     0,   306,     0,
     411,   391,   392,   402,     0,   307,  1067,     0,  1047,   104,
       0,     0,     0,     0,   298,   296,   326,     0,   303,   297,
     305,     0,     0,   254,     0,  1203,     0,     0,   387,   383,
       0,     0,     0,   650,   663,   350,   637,     0,   691,   690,
     692,   692,   637,     0,   623,     0,   635,     0,   675,   644,
     717,   718,   719,   720,   721,   722,   723,   343,   345,     0,
     347,     0,     0,   404,     0,   407,     0,   406,   410,   405,
     399,     0,   430,     0,     0,     0,     0,     0,     0,  1146,
     943,   481,   793,     0,     0,   976,     0,     0,   867,     0,
     842,   844,   857,     0,   846,   848,     0,   920,     0,     0,
       0,   858,   796,   797,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   812,   811,   859,   895,     0,     0,   963,   964,   860,
       0,     0,   970,     0,     0,     0,   865,     0,   822,   934,
     901,   899,   724,     0,     0,     0,     0,     0,     0,     0,
     777,   765,     0,   775,   779,     0,     0,     0,   759,     0,
       0,   757,   789,   753,     0,     0,   790,     0,     0,     0,
     835,   476,   476,   476,   476,   473,   475,     0,     0,     0,
       0,  1425,     0,   589,   567,   569,   576,   589,   594,   837,
     615,   838,  1033,     0,   541,     0,   541,     0,  1140,  1153,
       0,  1171,     0,   145,   127,   147,   146,     0,   154,     0,
     992,     0,   145,   129,     0,   148,     0,  1170,     0,   160,
     488,     0,   921,   496,     0,   490,   535,   534,     0,   506,
     557,   504,     0,   563,     0,     0,     0,   258,     0,     0,
       0,   214,     0,     0,   322,     0,   309,    78,     0,     0,
       0,    52,     0,    70,    62,    48,    76,     0,     0,    81,
       0,    74,    91,    92,    90,    95,     0,   242,   224,   255,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   832,   833,   830,   485,   987,   433,   434,
     179,   432,   316,     0,     0,  1082,  1065,     0,     0,   103,
     105,     0,   167,   307,     0,   282,   278,     0,   276,   275,
     277,     0,  1204,   172,     0,  1199,  1081,     0,     0,  1076,
     669,   634,     0,   687,   685,   633,     0,   629,   636,   377,
       0,   436,     0,   395,   431,   420,   425,     0,   429,   427,
     426,   421,   424,     0,   978,   974,     0,   839,   944,     0,
     932,   958,   957,   795,   807,   808,   809,   959,     0,     0,
       0,   804,   805,   806,   798,   799,   800,   801,   802,   803,
     810,   968,   967,   961,   962,     0,   862,   863,   864,   969,
       0,   898,  1022,   728,     0,     0,   756,   973,   780,     0,
       0,     0,   752,   920,     0,     0,     0,     0,     0,   761,
       0,     0,     0,   882,   877,   878,     0,     0,     0,     0,
     467,   466,   472,   589,   594,     0,   450,     0,   576,     0,
     588,   525,   587,     0,     0,   600,   598,     0,   600,     0,
     600,     0,   525,     0,   590,   525,   587,     0,   607,  1007,
     616,     0,   548,   829,   548,     0,   463,  1169,     0,  1165,
       0,     0,     0,   135,   132,   122,     0,     0,   157,   145,
     136,     0,   489,   494,   495,   505,  1005,   115,   214,     0,
       0,    59,     0,   324,   270,   302,   285,     0,     0,     0,
     215,     0,   290,     0,    51,    71,     0,    67,     0,    96,
       0,     0,     0,     0,     0,    54,    66,     0,    49,     0,
     377,   377,    57,   269,  1041,  1581,  1582,  1583,  1584,  1585,
    1586,  1587,  1588,  1589,  1590,  1591,  1592,  1593,  1594,  1595,
    1596,  1673,  1597,   221,  1598,  1373,  1599,  1600,  1601,     0,
    1602,   626,  1603,  1604,  1605,   907,   908,   219,   311,   216,
     317,   218,   220,     0,  1042,   217,   314,   111,  1088,     0,
     109,     0,  1086,   118,   116,   113,  1090,     0,   414,   394,
       0,     0,  1310,     0,   102,     0,  1082,   165,   304,     0,
     332,   254,   327,     0,  1203,  1201,     0,  1198,     0,     0,
       0,   630,   624,   348,     0,   408,     0,   428,   977,   855,
     866,   956,     0,     0,     0,     0,   861,   856,   786,   784,
     781,     0,   782,   760,     0,     0,   758,   754,     0,   791,
     868,     0,   884,   881,   471,   470,   469,   468,   575,   573,
       0,   578,  1033,   585,   518,   524,   574,     0,   570,     0,
     599,   595,     0,   596,     0,     0,   597,     0,   571,     0,
    1033,   572,     0,   614,     0,     0,   873,  1020,   873,  1141,
     144,   124,     0,   125,   155,     0,     0,     0,     0,   149,
     388,     0,   320,    61,     0,   302,     0,   214,   287,   286,
     289,   284,   288,   291,     0,     0,     0,     0,     0,   271,
       0,     0,     0,   235,     0,     0,   302,   308,   231,   232,
     341,     0,     0,     0,    63,    53,    50,    55,    64,     0,
       0,    65,    68,   622,    80,    73,  1673,  1680,     0,     0,
       0,     0,     0,   831,   390,   397,   179,     0,     0,     0,
       0,   304,   106,     0,     0,     0,  1203,     0,     0,   212,
       0,   251,     0,   169,  1202,     0,  1191,     0,  1074,  1075,
       0,     0,   396,   813,     0,     0,     0,   783,   787,   785,
     762,   870,     0,   485,   610,     0,   613,   577,     0,     0,
     513,   520,     0,   523,   517,     0,   579,     0,     0,   581,
     583,     0,     0,     0,   618,     0,     0,     0,  1010,     0,
     540,   542,   545,   544,   547,     0,   516,   516,     0,     0,
       0,   158,     0,   151,   151,     0,   137,   922,     0,   214,
       0,   301,   321,   249,     0,     0,   233,     0,   239,     0,
     273,   274,   272,   234,   302,   307,   236,   342,     0,    72,
       0,    88,     0,     0,   313,   119,   117,   414,     0,  1082,
    1198,     0,     0,   278,   172,  1200,   267,   260,   261,   262,
     263,   264,   265,   266,   281,   280,   252,   253,     0,     0,
       0,  1076,     0,   814,     0,   815,     0,   887,   615,     0,
       0,   609,     0,   511,   509,   512,   514,   510,     0,     0,
     586,   602,     0,   582,   580,   591,     0,   622,     0,   593,
     546,     0,   872,   874,     0,     0,   452,   451,     0,   131,
       0,   617,     0,     0,   153,   153,   139,     0,   307,   323,
       0,   293,   300,   292,     0,     0,   230,     0,   237,   331,
     223,   621,     0,    75,     0,   318,   389,   393,     0,  1192,
       0,  1198,   254,  1203,     0,  1195,     0,     0,  1082,   816,
     883,     0,     0,     0,   608,   611,     0,   584,     0,     0,
       0,   619,   620,   592,   543,     0,     0,   518,   126,   151,
     130,   159,   150,   493,   152,   493,     0,   331,   279,     0,
       0,   257,   223,     0,   248,     0,    69,    87,   319,     0,
     304,  1193,   213,   170,  1196,  1197,     0,   617,  1504,  1253,
    1475,     0,   885,   888,   886,   880,     0,   521,     0,   527,
     601,   875,   876,   515,   153,   496,   496,   617,   248,   294,
     299,     0,   238,   240,   328,   329,   330,     0,   244,   241,
     245,     0,  1198,     0,  1072,     0,   892,   891,   890,   894,
     893,   612,     0,     0,   519,   493,   142,   141,   138,   214,
     256,     0,     0,     0,   246,     0,   247,   222,  1194,  1082,
       0,   522,     0,   496,   325,   227,     0,   226,     0,   310,
     243,   617,   889,     0,   143,   225,   229,   228,  1073,   526
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    35,    36,    37,    38,  2083,  2084,  2085,  1781,   959,
    2743,  1782,   960,   961,  2087,    39,    40,  2128,  2129,    41,
    1412,   528,  1719,  1355,  2487,    43,  2038,  1724,  2042,  2621,
    2279,  2037,  2044,  2724,  2783,  2039,  1725,  2622,  1726,    44,
      45,  1483,    46,   725,    47,  1484,  1439,  1229,   979,  1429,
    1218,    48,    83,    49,  2074,  2368,  2796,  2097,  2879,  2517,
    2518,  1783,  2838,  2839,  2076,  2142,  1421,  2832,  1844,  2674,
    1787,  1770,  2519,  1853,  2631,  2400,  1784,  2310,  1845,  2504,
    2730,  1494,  1846,  2731,  2497,  1847,  1464,  1487,  2312,  2840,
    1788,  1465,  2369,  1408,  1848,  2794,  1849,   487,  2522,    50,
     520,   521,   717,  1167,   522,   698,    51,   488,  1133,   529,
      53,  1833,  2546,  2162,  2547,  1901,  1827,  1227,  1898,  1537,
    1468,  1228,   475,  1551,  2163,  2120,  1538,   530,   864,    56,
      57,    58,   580,   574,   575,  1327,  1697,  2007,   929,   553,
     554,   590,  1458,  1362,  1363,  1732,  2055,  1387,  1388,   938,
     939,  2591,  2716,  2592,  2593,  2455,  2456,  2854,  1375,  1379,
    1380,  1745,  1738,  1368,  2272,  2610,  2611,  2612,  2476,  1383,
    1384,   941,   942,   943,  1392,  1755,    60,  1701,  2014,  2015,
    2016,  2250,  2251,  2265,  2261,  2461,  2599,  2017,  2018,  2584,
    2585,  2691,  2268,  2024,  2603,  2604,  2651,  1511,   699,  1234,
    1170,   701,   865,   702,  1146,   866,  1150,   704,   867,   868,
     869,   707,   870,   871,   872,   710,  1142,   873,   874,  1161,
    1189,  1190,  1191,  1192,  1193,  1194,  1195,  1196,  1197,   914,
    1605,   876,   877,   878,  2020,   879,  1319,  1685,  2616,  2712,
    2713,  2000,  2234,  2442,  2583,  2763,  2812,  2813,   880,   881,
    1271,  1272,  1682,  1314,  1315,   882,  2371,  1317,  1598,  1621,
    1267,  1022,  1023,  1235,  1578,  1579,  1601,  1930,  1608,  1614,
    1957,  1958,  1622,  1650,   883,  1562,  1563,  1916,  1243,   884,
     616,  1029,   617,  1240,  1644,   892,   885,   886,  1751,   566,
    2595,   721,  1110,   887,   888,   889,   890,   891,   568,  1024,
     468,   713,  2784,  1123,   919,  1025,  1785,  1640,    61,   793,
     621,    62,  1121,  1475,    63,  2569,  2410,  1135,  1496,  1857,
     489,    64,    65,    66,    67,    68,   597,  1221,   531,  1222,
    1223,   781,    69,  1230,   783,   784,    70,   559,   560,  1231,
    1339,  1232,    71,   540,    72,   910,   571,   911,   913,   533,
     926,  2033,  1715,    74,    75,   547,   548,    76,    77,   561,
      78,    79,  2566,   534,  2145,  1130,   497,   470,   471,   715,
    1113,  1027,  1114
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2484
static const int yypact[] =
{
    2869,  -125,   914, -2484, -2484,  -125, 30583, -2484,  -125,    42,
    2278, 35253, -2484,  3922,  -125, 41324,  1080,   159,   340,   423,
     442, 41324, 41324, 35720,  -125,   229, 41791, -2484,  -125, 32918,
     -10,   187, 42258, 41324,  1198,   534,    61, -2484, -2484, -2484,
   -2484, -2484, -2484,    59, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484,    84, -2484,    29,    87,   655,
     195, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,   284,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, 20336, -2484, -2484,
   -2484, -2484, -2484, -2484, 36187, 41324, 36654, 33385, 37121, -2484,
      95, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484,    99, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,   129, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484,   272,  -106, -2484,   130,
   -2484, -2484, -2484, -2484,  1198, 37588, -2484,   345,   555, -2484,
     448, 42725, -2484, -2484, 41324, -2484, -2484,   708, 37588,   611,
   -2484, -2484, -2484, 38055, -2484, -2484, -2484, -2484,   588, -2484,
   -2484,   430, -2484,    69, -2484, -2484, -2484,   403, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484,   493, -2484, 47395, -2484,
   43192, 43659, 44126, -2484,   370,   602,   410, 19868, -2484, -2484,
   -2484, -2484,   284, -2484, -2484,   442, -2484,   442, -2484, -2484,
   -2484,   215,   375, -2484,   414,   700, -2484, -2484, -2484,   456,
   -2484, -2484,   682,  8233,  8233, 44593,   442, 44593,   519, -2484,
   -2484,    64, -2484, -2484, 21272, -2484,   475,  -106, -2484, -2484,
     226,   827, 11185, 41324,   523, -2484,   545,   523,   522,   549,
     655, -2484,  2869,   876,   841, 32918,   233,   233,  1013,   233,
     960,  1103, -2484,   985, -2484,   608, -2484, 37588, -2484,   650,
     910,   187, -2484,   456,   995,   366,   821,  1007,  5372,  1017,
     737,  1022,   976,  6265, 11185, 25135, -2484,  -106, -2484, -2484,
   -2484,   692, -2484,   676, -2484, -2484, -2484, -2484,   602,   939,
   -2484,   722,  1189,   852, 38522, 38989, 37588,   754,  1150, -2484,
   -2484, -2484, -2484,   793, -2484, -2484,   222, -2484, -2484, -2484,
   -2484,   811, -2484,   811,   811, -2484, -2484, -2484, -2484,   782,
     782,   967,   825, -2484, -2484, -2484,  1140, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484,   831,   712, -2484,
     811, -2484,   782, -2484, -2484, -2484, -2484, -2484, 49218, -2484,
   -2484, -2484, -2484,   267,   387, -2484, -2484, -2484,    36,   833,
   -2484,  1288, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
     839, -2484,  4399,   782, -2484, -2484,  1190,    93, -2484,  1192,
     144, -2484,  1203,  1079, 11185, -2484,   970, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484,   187, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484,   163, -2484, -2484, 27003, -2484, -2484,   410,   895, -2484,
   27003, 11677, 47847,  1358, -2484,  1171, 41324,   927, -2484, -2484,
   -2484, -2484, -2484, -2484,   947,  1437,    91,  1462, 11185,  1015,
      91,    91,  1036,  1326, -2484, -2484, -2484,   131,  1038,  1049,
   -2484,   133,   133, -2484,  1053,  1061, -2484,   139,  1488,  1494,
      92,  1065,  1070,   712,    91, 11185, -2484,  1077,   133,  1088,
    1090,  1096,  1498,  1105, -2484,  1562,  1114,    77,    81,  1121,
    1131, -2484,  1133, -2484,   141, 11185, 11185, 11185, -2484, 11185,
    7249, 37588,  1617, -2484,  -106,   442, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484,    94,  4524, -2484,  1175, -2484, -2484,
   -2484,   154, 11185, -2484,  1616,   -30, -2484,   143, -2484, -2484,
   -2484,  -106,  1426,  1157, -2484, -2484, -2484,   158,  1553, 26069,
   26536, 37588, -2484, -2484,  -106, -2484, -2484, -2484, -2484, -2484,
   -2484,   390, -2484,   284, 28154,   402,   523, 41324, 41324,  1618,
   -2484, -2484, -2484, 32918, 37588, 45060,  1292, -2484, -2484,   655,
     655, 11185,   655,   108,   837,  8725, 12169,  1507,  1384,   104,
      83,  1519, -2484,  1409,   960,  1103, 11185,   545, -2484,  1460,
   37588, 31050,   666,   745,  1201,  1290,  1206,   -41,  1622, -2484,
    1220, -2484,  1308, 37588, 49218,   155, -2484,  1664,   155,   155,
     637,  1671,  1331,   209,  1483,   510,  -143,  1220,  2162, -2484,
   32918,   137,   518,  1220, 37588,  1334,   532,  1220,   105, 11677,
     453,  1048,   330,  1320,  1355,   109, 11677,  1363,  1373,  1388,
    1404,  1412,  1435,  1458,  1556,  1581,  1589,   116,  1602,  1608,
    1615,  1621,  1626,  1631,   126,  1653,   113, 11677,  1665,  1264,
   -2484, 28154,   -65, -2484, -2484,  1677,   128, -2484, 24667,  1257,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484,  1349, 41324,  1313,   -84,
    1627,  1685, 29182,  1291,  1637, 37588,  1517,  2162,  1518,  1297,
    1748,   676,  9217,  1749, -2484, 45527, -2484, -2484, -2484, -2484,
   -2484, -2484,  1300, -2484, -2484, 11185, -2484, -2484, -2484,  1778,
   -2484, 47847, 47847,   811,   811, -2484, -2484,  1756,  1389,  1390,
    1778, -2484,  1778, -2484, -2484, -2484, 47847, -2484, 41324,  1310,
    1319,  1778, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,  1778,  1399,
   -2484,  1400,  1401,  1403, -2484, -2484, -2484, -2484, -2484, 41324,
   41324, -2484, 41324, 41324, -2484, 41324, 41324,   441, 39456,   410,
   33852, -2484, -2484, -2484, -2484,   351,   455, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, 29182, -2484,  1374, -2484,
   -2484, -2484,  1321,   472, -2484,   485,  1198, -2484, -2484, 11185,
    -106, 11185, 28154,  1368, 11185, 11185,  1329,  1778,  1778, -2484,
    5047,  1778,  1778,  5478, 11185, 23615, 11185, 15121,  9709, 11185,
   11185,  7741, 11185,  5478,  1805,  1805,  1327,  1333,  1670,  4907,
    1330, -2484,   527, -2484,  1324, -2484,  -106,  -106, -2484, 11185,
    3013,  3013, -2484,   157, 47847, 11185, 11185, 11185, 11185, 28715,
    1418,   125, 41324, 11185, 11185,  1336,   790, -2484, 11185,  1554,
   -2484,  1338, 11185,  1420,   101, 11185, 11185, 11185, 11185, 11185,
   11185, 11185, 11185, 11185, -2484, -2484, 16583,   291,  1650,  1672,
    -106, 11185,   -95,   160, 11185, 34319,  8233,  1661,  6265, -2484,
    -106,    74,  1661, -2484, -2484, -2484, -2484,   145, -2484, -2484,
   -2484, -2484,  1321, -2484,  1321,  1342, 37588,   226, 32451, -2484,
   11185, -2484,   499,  1345,  1405,   529,  1799, 41324, -2484, 22208,
    1628, -2484,  1348, -2484, 27466,  1628, -2484, -2484, 15599,  1470,
    1624,  1561, -2484, -2484, -2484,  1359, 28154, 12661, 12661, -2484,
     626, 28154,  1351, -2484, -2484, -2484, -2484, -2484, -2484,   497,
   -2484, 37588,   -24,  1507,    83,   548, -2484, -2484,  1193,  1361,
   45994, 41324,  1632,  1587,  1636,  -153, -2484, -2484, -2484, 47847,
   -2484, 41324, 41324, 46461, 46928, 29649, 41324, 29182, -2484, -2484,
   -2484, -2484, 41324,   220, 41324,  5731, -2484, -2484, -2484,   155,
   -2484, -2484, -2484, -2484, -2484, 41324, 41324, -2484, -2484,   155,
   41324, 41324,   155, -2484,  1240, 41324, 41324, 41324, 41324,  1248,
   41324, 41324,   -61,   -61,  1568, -2484, 10201,  1370, -2484, 11185,
   11185, -2484, 11185,  1547, -2484,   573, -2484,  1590,    38,  1425,
   37588, 41324,  1607, -2484, -2484, -2484, -2484, -2484, -2484, 29182,
    1385,  1386,  1721, -2484,  2162,  1725, 31517,   657,   562,  1427,
   -2484,   589, 11185,  1613, -2484, -2484,  1601, 11185,   593,  1397,
      36,   599, -2484, -2484,  1402,  1319,  1416,  1423,  1406,  1408,
   -2484,   619, 47847,  1778,    97,  1414,  1415,   803,  1360,   431,
    1346,    93, -2484,   144, -2484,  1610,   110, -2484,  1623,   676,
    1868, -2484, -2484, -2484, -2484, -2484, -2484, -2484,   665, 19400,
   -2484, -2484,  1869,   442,  1869,   617, -2484, -2484,  1869, -2484,
    1869, -2484, 27003, -2484, 11677, -2484, 47847, -2484,   683, -2484,
    1421, 11185,    46, -2484, 27530,   699, 11185,  1422,  1428, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,  1429,  1743,
   -2484,  1431,  1432,  4302, -2484, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,  1434,  1424,
   27566,  1438, 15121, 15121,  7249,   181, -2484, 15121,  1440, -2484,
   -2484,   724, 27484,  1327,  1447, 27650, 10693, 11185, 10693, 10693,
   27882,  1327,  1448, 28017, -2484, -2484, 11185, 37588, -2484, 11185,
    5206, -2484, -2484, -2484,  2354,  2354,  2354,  5478, -2484, -2484,
   -2484,  1444, -2484, 15121, 15121, -2484,  3353,   329,  7249, -2484,
   -2484,  1747, -2484,   998, -2484,  1436, -2484, -2484,  1318, -2484,
   23615, 28193, 11185,   134, -2484, 11185,  1336, 11185,  1543,  2354,
    2354,  2354,   166,   166,    79,    79,    79,   240,   160, -2484,
   -2484, -2484,  1465,  1466,  1467,  1635, 28154,  1105, 11185, -2484,
   28154,   687,   734, 37588,  2957,  3111,  3337, -2484, -2484, -2484,
   17996,  1511,   -65,  1511,  1778,  3013, -2484,   545, -2484, -2484,
   -2484, 28154, -2484,  1198, 17996,  1512,  1523,  -119, 20804,  1683,
   -2484, 41324, -2484, 41324, -2484,   -22,  1489, -2484, 11185, -2484,
   -2484,  1268,  1492,  1686,  1688,   787,   787,   626,  1689, -2484,
   -2484,  1544, -2484, 11185,  1357, -2484,  1364, -2484, -2484, -2484,
   -2484,  1485, -2484, -2484,  1738, -2484, -2484, -2484, -2484,  1571,
    1220, 11185,  1714, -2484,    86,  1495,  1833,  -130,  1792, 41324,
   -2484,  1704, -2484,   799,  1841,   110,  1843,   110, 29182, 29182,
   29182,   736, -2484, -2484,   442, -2484, -2484,   747, -2484,   -23,
   -2484, -2484, -2484,  1592,   732,  1220,  2162, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484,   151,   743,  1220,  1593, -2484,  1596,
   -2484,  1597,   776,  1220, -2484, -2484,  1508,  1516,  1521, 11677,
   -2484, -2484, 28154, 28154, 28154,  1524, -2484,   161, -2484, 41324,
   -2484, -2484, -2484,  1547, 37588,   676, -2484,   849, -2484,   442,
   41324, 37588, 37588, 37588, -2484, -2484, -2484,  1526,  1525, -2484,
   47847,   -87,  1737,  1740, 41324,  1572,  1206,  1985, -2484, 28154,
    1873, 37588,   804, -2484, -2484, -2484, -2484,  1778, -2484, -2484,
    -172,  -172, -2484, 41324, -2484,  1539, -2484,  1545, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484, 41324,
   -2484,  1874,  1198, -2484, 29182, -2484, 31984, -2484, -2484, -2484,
   -2484,   442, -2484,   442,  1762, 41324, 25602,   442,   442, -2484,
   -2484, -2484, -2484, 28063, 11185, -2484,  1893, 47847, -2484,  5434,
   -2484, -2484, -2484, 11185, -2484, -2484, 11185, -2484, 23615, 11185,
    1867, -2484,  2024,  2024,  4907, 47847, 15121, 15121, 15121, 15121,
     491,  1088, 15121, 15121, 15121, 15121, 15121, 15121, 15121, 15121,
   15121, 16091,   335, -2484, -2484, 11185, 11185,  1879,  1867, -2484,
   47847,  1558,  1327,  1560,  1563, 11185, -2484, 47847,  -106, 24090,
   -2484, 28154,  3013, 11185,  1381,  2674, 11185,   808, 11185,  1882,
   -2484, -2484,  1565, -2484, -2484, 47847, 11185,  1567,  3336, 15121,
   15121,  4121, -2484,  4835, 11185,  7249, -2484,  1568,  1614, 22676,
   -2484,  1658,  1658,  1658,  1658, -2484, -2484, 37588, 37588, 37588,
   18464,  1888, 17528, 39923,  1570,  1287, -2484, 39923, 40390, -2484,
    1586, -2484,  -106, 11185,  1886,  1576,  1886,  1577, -2484, -2484,
    1578,  1570, 11185,  1726, -2484, -2484, -2484,  1633, -2484,   848,
   -2484,  1988,  1726, -2484,   853, -2484, 22208,  1512, 11185,  -106,
   -2484,  1582, -2484,  1492,   507, -2484, -2484, -2484,  1793, -2484,
   -2484, -2484, 37588, -2484, 41324, 24108,  1923, -2484, 41324, 41324,
   41324, -2484, 41324,   858,   744,  1588, -2484,   744,  1904,   184,
    1206,   209,  3745,   -70, -2484, -2484, -2484,  1660, 41324, -2484,
   41324, -2484, -2484, -2484, -2484, -2484, 29649, -2484, -2484, -2484,
   29182, 23147, 29182, 41324, 41324, 41324, 41324, 41324, 41324, 41324,
   41324, 41324, 41324, -2484, -2484, -2484,  1568, -2484, -2484, -2484,
    -143, -2484, -2484,   161,  1595,  1427,  1685, 40857,  1591,  1594,
   -2484,   859,  2162,  1600,  2043, -2484,   657, 31517, -2484, -2484,
   -2484,  2003, -2484,   370,   121, -2484, -2484,  1198, 41324,  1654,
   -2484,  1319,  1604, -2484, -2484,  1319, 47847, -2484, -2484,   110,
   37588, -2484,   866, -2484, -2484, -2484, -2484, 41324,  1603, -2484,
    1603, -2484, -2484, 11185, 28154, -2484,  1605, -2484, 28154, 24126,
   -2484, 28154,  1879, -2484,   717,   717,   717,   703,  1931,   106,
    1619,   717,   717,   717,   300,   300,   114,   114,   114,  2024,
     335, 28154, 28154, -2484, -2484,  1612, -2484, -2484, -2484,  1327,
    1620, -2484, -2484,   301, 11185, 11185,  3353, -2484, 28251, 11185,
   47847,   867,  3353,   294, 11185,  3194,  3365, 11185, 11185,  4891,
   24154,  1634, 11185, 48299, -2484, -2484, 37588, 37588, 37588, 37588,
   -2484, -2484, -2484, 39923, 40390,  1625, 17059,  1287,  1641, 37588,
   -2484,  1710,  1638, 17996,  1885,  1825, -2484, 17996,  1825,   857,
    1825,  1899,  1710, 21740, -2484,  1710,  1643,  1832, -2484,   494,
   28154,  2065,  1952,   442,  1952,   442, -2484, 28154,  8233, -2484,
    1198,  1086, 41324,  -106,   -63, -2484,  1645, 41324, -2484,  1726,
   28154, 23615, -2484, -2484, -2484, -2484, -2484, -2484, -2484, 41324,
     898, -2484,   917,   744, -2484,  1684, -2484,   174,  1937,    56,
   -2484, 29182,  1971,   696, -2484,  1951,  1870, -2484,   155, -2484,
   11185,   696,  1872,   146, 41324, -2484, -2484,  1941, -2484, 47847,
     110,   110, -2484, -2484,  1649,  1655,  1656,  1659,  1663,  1668,
    1673,  1678,  1680,  1687,  1690,  1691,  1692,  1694,  1697,  1698,
    1699,   831,  1701, -2484,  1702,  1582,  1705,  1707,  1708, 48766,
    1712,  1713,  1716,  1717,  1722,   351,   455, -2484, -2484, -2484,
   -2484, -2484, -2484,   722,  1728, -2484,  1674, -2484, -2484,  1733,
   -2484,  1754, -2484, -2484, -2484, -2484, -2484,  1666,   895,    62,
   41324,  2124,  1901,  1734, -2484,   442,  1427, -2484, 31517,  1011,
     142,  1740, -2484,   119,  1572, -2484,  2066,  1723,  1894, 41324,
    1739, -2484, -2484, -2484,  2138, -2484, 31984,  1603, 28154, -2484,
   -2484, -2484, 15121,  2035,  1742, 47847, -2484, -2484,  3353,  3353,
   28251,   925, -2484,  3353, 11185, 11185,  3353,  3353, 11185, -2484,
   -2484, 24172,  1921, -2484, -2484, -2484, -2484, -2484, -2484, -2484,
   30116, 39923,  1744, -2484, 34786, -2484, -2484, 41324,  1287, 17996,
   -2484, -2484,   792, -2484, 17996,  2009, -2484, 17996, -2484, 41324,
    1745, -2484, 41324, -2484, 13153, 11185,  1782, -2484,  1782, -2484,
    1157, -2484,  -119, -2484, -2484,  2148, 18932,  2106, 11185, -2484,
   -2484,  1751,   744, -2484,  1914,  1684,  1757, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484,   946,  1763, 41324, 41324, 15121, -2484,
     696,   178,   132, -2484,  2034, 37588,  1684, -2484, -2484, -2484,
   -2484,  2141,  2216,  2107, -2484, -2484, 28154, -2484, -2484,  1778,
    1778, -2484, -2484,  2185, -2484, -2484, -2484, -2484,   722,  -173,
   23147, 41324, 41324, -2484, -2484, -2484,  -143,  2139,   948,  1198,
    2115, 31517, -2484,  2229,  1779, 41324,  1572,   169,   169, -2484,
    1920, -2484,  1922, -2484, -2484,   216, -2484, 37588, -2484, -2484,
   18932,  1198, -2484,  1865, 15121, 47847,   950, -2484,  3353,  3353,
    3353, -2484,  2219,  1568, -2484,   954,  2239, -2484, 41324,   -42,
     -78,  1794,  1795, -2484, -2484,   971, -2484, 11185,  1796, -2484,
   -2484, 17996,   792,   975, -2484, 47847, 41324,   979, 47847,  6757,
    1801, -2484, -2484, 28154, 28154, 41324,  1855,  1855,  1852, 41324,
   11185, -2484,   992,  2220,    35,   -31, 28154, -2484, 37588, -2484,
   29182, -2484,   744, -2484, 29182, 11185, -2484,  1538,   703,  2258,
   -2484, -2484, -2484, -2484,  1684,   676, -2484, -2484,  2111, -2484,
   41324,  1871,   241,  1881, -2484, -2484, -2484,   895,   442,  1427,
    1723, 37588,  1198,   657,   370, -2484, -2484, -2484, -2484, -2484,
   -2484, -2484, -2484, -2484, -2484, -2484, -2484, -2484,  2232,  2021,
    2237,  1654,  1002,  1865,  1008, -2484, 11185,     4,  1586, 30116,
    1820, -2484,  1023, -2484, -2484, -2484, -2484, -2484, 41324,   834,
   -2484, 28154, 41324, -2484, -2484, -2484, 41324,  2185,  1027, -2484,
   -2484, 13153,  1818, -2484,  2273,  1960, -2484, -2484,  1198, -2484,
   24190,  1511, 18932, 41324, 41324, 41324, -2484,  1945,   676,   744,
    1042, -2484,  1837, -2484, 24501,  2044, -2484,  2131, -2484,  2076,
    1831, -2484, 11185, -2484,  1902, -2484, -2484, -2484,  2283, -2484,
    1834,  1723,  1740,  1572,  2040, -2484,  2047,  1839,  1427, -2484,
    1327, 13645, 13645,  1844, -2484, -2484, 41324, -2484,  1075,  1845,
    1081, -2484, -2484, -2484, -2484, 41324,  1840, 34786, -2484,  2220,
   -2484, -2484, -2484,   227, -2484,   227, 22208,  2076, -2484, 29182,
   23147,  2071,  1831,   544,  2055,  2162, -2484, 28154, -2484,  1198,
   31517, -2484, -2484, -2484, -2484, -2484, 18932,  1511, 14629,  1989,
     124, 27502, -2484, -2484, -2484, -2484,  1097, -2484,  2328,  2007,
   -2484, -2484, -2484, -2484, 41324,  1492,  1492,  -148,  2055, -2484,
   -2484,  2152, -2484, -2484, -2484, -2484, -2484,    67,  2072, -2484,
    2073,  2156,  1723,  1099, -2484,  2317, -2484, -2484, -2484, -2484,
   -2484, -2484,  1876,  1875, -2484,   227, -2484, -2484, -2484, -2484,
   -2484,    89,    89,  2235, -2484,  1929, -2484, -2484, -2484,  1427,
   14137, -2484,  2348,  1492,   744, -2484,  2336, -2484,   140, -2484,
   -2484,  1511, -2484,  1877, -2484, -2484, -2484, -2484, -2484, -2484
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2484, -2484, -2484,  1777, -2484, -2484, -2484,   283, -2484,   937,
   -2484,   271,  -503,   595, -2484, -2484, -2484, -2484, -2484, -2484,
    -913,    11, -2484, -2484, -2484, -2484,    98,   323, -2484,  -349,
   -1848,  -108, -2484, -2394, -2483, -2484,  -410, -2364, -1659, -2484,
   -1089,   245, -2484, -2067, -2484,  -607,  -956,  -765,  -962, -2484,
      58, -2484,  1323, -1085, -1726, -2352,  -413, -2484,  -480, -2484,
    -254, -1700,  -456,  -443, -2484, -2245,  -919, -2484,  1439,  -171,
   -2484,   621, -2484, -2062, -2484, -2484,   607, -2484,  -926, -2484,
   -2484, -1810,   252,  -398, -2193, -2307,   563,  -618, -2484,  -442,
     297, -1697, -2484,   635, -2484,  -387, -2484,  -491, -2089, -2484,
   -2484, -2484,  1202,  -654, -2484,  1252, -2484, -2484, -2484,    21,
   -2484, -2484, -2484, -2484, -2484,  -581,   575, -2201, -2484,   515,
   -2484, -2484, -2484, -2484,    -5,   290, -2484,     8,  1316,   -21,
     -12,    18,    10,    40,  1500,  1528, -2484,  -980,   551, -2484,
   -2484,  -589,   -50, -2484,   693, -2013, -1999,  -433,  1021,  1484,
    1487,  -277,  -191, -2484,  -347, -2484,  -941, -2484, -2484,   688,
    1066, -1261, -1264, -2484,   411, -2484,  -275, -2484,   167,  -420,
    1046, -2484,  1499, -2484, -2484, -2484, -2484, -1237,   728, -1950,
     433, -1905, -1803,   199,   189, -1110,  -150,    15,   444,  -232,
   -2484, -2484,  -228, -1676, -2312,  -244,  -241, -2484, -2484,  -483,
   -1105,  -671, -2484, -2484,   165,    76, -2484, -2484, -2484,   277,
    1482, -2484, -2484,  1535,  1583, -2484,  -565,  2064,  -460,  -663,
    1213, -1039,  1221, -1057,  -814,  -824,  1225,  1227, -1225,  3128,
   -1532,  -180,     0, -2484, -2269, -1631, -2484, -2484,     1, -2484,
    -297, -2484,  -295, -2484, -2484, -2484,  -278, -2311, -2484,  1163,
     860, -2484, -2484, -1226, -2484,  3598,   757, -2484, -1593,  -570,
    1249,  -710,  -967, -1128, -2484, -2484, -2484, -2484, -2484, -2484,
   -1420, -1747,  -826,   823, -2484, -2484,   929, -2484, -2484, -1038,
    -568,  1034,  -544,  -825,   842, -2484,  -545,  1181, -2484,   944,
    -518,  1082,  -998,     6, -2484,  3390,   201,  1642,  -833, -2042,
   -2484, -2484,  -469, -2148,  -904, -2484,  -582, -2484, -2484, -2484,
   -1143, -2484,   673, -2484, -1082, -2484,  -170, -2484, -2484, -2080,
   -2484, -2484, -2484, -2484, -2484, -2484,  -434, -2484,  -465,  -470,
   -2484, -2484,    14,  -766,  1302, -2484, -2484,   675, -2484,   958,
   -2484,   832, -2484, -2484, -2484,  1166, -2484, -2484, -2484,    22,
    1598,   467, -2484,  1169, -2484, -2484, -2484, -2484, -2484,   242,
   -2484, -1080, -2445,    48, -2276, -1166,    -6, -2484, -2484, -2484,
    -513, -2484, -2041
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1684
static const yytype_int16 yytable[] =
{
     469,   978,   915,   720,   944,  1118,   465,   591,    54,   893,
      59,    42,   466,   579,   786,   632,  1443,  1157,  1224,  1217,
    1442,    52,    73,   904,  1501,  1407,    59,  2026,  1274,  1597,
     532,  1163,  1473,  1111,   726,   700,  1474,  1418,  1276,  1476,
    1414,  1477,  1530,  1396,   565,  2391,  2077,   593,    80,  1115,
    1454,   718,  1505,  1320,  2292,  1631,  1632,   780,   712,  2373,
    2375,   727,  2247,  1201,  2045,  1330,  1204,  1987,  1447,  2021,
    1932,  1933,  2073,   577,  2401,  1952,  2404,   594,  2092, -1013,
    2094,  1233,  -692,  2021,  -438,   602,  -692,  -441,  1143,  1144,
    1284,  2554,   473,  1557,  1164,  1703,  -684,  -689,   787,   538,
   -1038,  -689,   610,   802, -1571,   977,   802,   983,  2723,   987,
   -1038,  1974,  1975,  2264, -1560,  1155,  1750,  1747, -1035, -1035,
    1290, -1571, -1662, -1662,  1478,  1935, -1682, -1682,  2563, -1673,
   -1673, -1578,  1336, -1039, -1578, -1039, -1560,  1119,  -651, -1680,
   -1680, -1036, -1036,  2131,  -664,  1700,  -679,  2875,   538,  1663,
     538,  1164,  1292,  1399,  1207,   802,  2559,   937,   569,  1211,
    2607,  1333,  1211,   538,   802,  1642,   538,   802,  1164,  1321,
     940,  1284,  2501,   586,  1642,   643,  -438,  1284,   583,  -441,
    1325,  2586,  1914,  -398,  -905,  1163,  2861,  2544,  2654,   801,
    2138,  -905,  1935,  1573,  2285,  1419,  2666,  1936,  1937,  1938,
    1427,  1290,  1164,  1430,  1431,  1831,  2682,  1290,  2168,  2170,
    2203,  1571,  1410,  -179,  2262,  2749,  2485,  2623,  -179,  1609,
     588,   539,  1445,  2695,   588,  2539,  1410,  2405,   712,   905,
    2725,   898,  2527,  1292,  2726,  2423,  2105,   587,  2560,  1292,
     933,  1469,  2785,   951,  1753,  1143,  1144,  2667,  2642,   952,
    1402,  1284,  1687,  2561,  2886,  2668,   551,     3,     4,  2693,
     927,   933,  2304,   584,  1729,   549,   535,  1366,  2081,  1155,
    2696,   786,  1334,  1664,  2035,  2678,  1768,   786,  1158,  1452,
    2665,  1290,    81,  2679,  2669,  2847,  1453,  1665,  2557,  1266,
    1270,  2498,  1666,  1426,  2708,  2640,  2327,  2023,  2314,  1768,
    1159,  2623,  2629,  2458,  1137,  1437,  2801,  2462,  2653,  2036,
     935,  1935,  1284,  1292,   588,  1479,  2553,  2538,  1679,   603,
    1277,  -924,  1225,  2646,  2761,  1680,    82,  1667,  -924,  1438,
    1609,   935,   712,  1769,  2558,  2180,  1115,  1283,  2408,  2264,
    1284,  2855,  2046, -1659, -1659,  2303,  1935,  1331,  1138,  1754,
    1730,  2876,  2762,  2670,   953,  1533,  2070,  1470,   552,   936,
     802,  2499,   928,  -438,  2671,  2641,  -441,   671,  2315,  1367,
    1290,  2300,  1939,  2302,  1292,  1165,  1395, -1684,   614,  2021,
    2424,  2021,   615,  2406,  1420,  2824,   786,   786,  1335,   951,
    2652,  1688,   906,  1940,   907,   952,  2727,  2868,  1404,  1417,
    1352,  2643,  1292,  2697,  2184,  2185,  2186,  2187,   536,  2887,
    2191,  2192,  2193,  2194,  2195,  2196,  2197,  2198,  2199,  2200,
    2586,  2639,  1491,  2486,  -438,  1456,  1575,  -441,  2877,  1554,
    2562,  2848,  1165,  1457,  1597,  2421,  1574,  1337,  2830,  2694,
    2448,  2490,  2843,  1832,  1322,  1417,  2680,   538,  2316,  1165,
     589,  2738,  2101,  2623,  2816,  2878,  2746,  2225,  2226,  1535,
    1326,  1881,  1941,   644,   802,  2102, -1657, -1657,  2046,   899,
    2417,  1976,  1668,  2058,  1763,  1747,   570,  2803,  1880,  1348,
    2028,  1838,   620,  1165,    59,   618,   585,  2502,  2047,  1820,
    1561,  2545,  1246,  2554,  2862,   619,   622,  2845,  2373,  2375,
     953, -1684,   525,   954,   712,  2052,   579,  2802,  1405,  2596,
    2182,  1393,   714,  1489,  2600, -1684,  1643,  2602,  1139,   614,
   -1684,   785,  1443,   615,  1394,  1989,  1166,  1158,   474,  1141,
     537,  1158,  -438,  -905,   581,  -441,    59,  2623,  2204,   900,
    1111,   782,  1446,   945,  2118,  2119,  2587,   469,   469,  1159,
     582,  2672,   796,  1159,  2673, -1684,  2106,   956,   614,  2882,
   -1013,  1313,   615,  1160,  1609,  1609,   469,  1162,   593,  1609,
    2030,  -438,  2492,  -438,  -441,  1498,  -441,  -684,  -689,  2748,
    1279, -1038,  1876,  1200,   909, -1571,   957,  1820,  1502,  1503,
      54, -1038,    59,    42,   703, -1560,  1950,  2753,   594,  1262,
     925,  2752, -1571,    52,    73,  1609,  1609,  1026,   469,  1112,
    1301,  2503, -1578,   916, -1039, -1578, -1039, -1560,  1702,  1145,
    2188,  1140,  2021,  2529,  2530,  1149,  2021,  -679,  2489,  1328,
      80,  1704,  1215,  1216,  1203,  1215,  1216,  1308,  1309,  1310,
    1311,  1312,  1313,  1716,  1539,  1310,  1311,  1312,  1313,   954,
    1209,  2703,   958,  1210,  1942,  1943,  1944,  1437,  1945,  1946,
    1947,  1948,  1949,  1950,  1797,   908,  2293,  1681,   700,  1558,
    -924,  1266,  1559,   572,  1800,  1565,  2134,  1803,  2807,  1180,
    1181,  1438,   714,  1510,  1523,   595,  -179,  -179,  1611,  1613,
     790,   712,   712,  2548,  1883,  1885,  1886,   786,  2491,   955,
   -1684,   791,  1597,   956,  1882,  1884,   712,  1639,  1559,  1115,
    1854,   801,  2834,  1369,  1935,  2008,  2009,  1158,   469,  1936,
    1937,  1938,  2744,   596,  1277,   801,  2520,  2294,  1935,  1479,
     718,  1522,   957, -1684, -1684, -1684,   788,  1526,   789,  1159,
     780,  1410,  1432,   624,  1531,   625,  1419,  2212,  2373,  2375,
    2521,  1411,  1559,  1160,  1419,  2189,  1382,   895,   613,  1370,
     951,  2151,  1559,  1115,   703,  2190,   952,  2155,  1419,    25,
    2825,  2632,  2826,  1899,  1897,   477,  1153,  1154,   785,  1947,
    1948,  1949,  1950,   628,   785,  1026,   714,  1184,  1185,  2881,
    1961,  2056,  1963,  1964,  1274,   705,   802,    59,   958, -1684,
    1968,  1633,   469,  2029,    29,   638,  1308,  1309,  1310,  1311,
    1312,  1313,  1945,  1946,  1947,  1948,  1949,  1950,  1796,  2021,
    1410,  1717,  2078,  1645,   712,  1147,  2856,  2857,  2021,   469,
    1413,   641,   478,  2021,  1443,  1789,  2021,  1158,  2589,   579,
     642,  2835,  2873,  2590,   645,    31,  1865,  1156,   646,   469,
     469,   469,  2116,   469,   469,  2021,   724,  2221,    32,  1159,
    2306,   792,  1441,  1816,  1817,  1818,  1372,  1887,   703,  1888,
    1448,   953,  1890,  1162,  2884,  2052,   469,  1346,  1198,  1433,
    1347,  1904,    33,   794,  1451,  2254,  1905,  1434,    25,  1349,
    2573,  2107,  1350,   785,   785,  1760,    34,  1111,  1609,  1609,
    1609,  1609,  2049,  2729,  1609,  1609,  1609,  1609,  1609,  1609,
    1609,  1609,  1609,  1609,   795,  1940,  2836,  1360,  1361,  1651,
    1365,    25,  1795,    29,  1373,   469,  1771,  1862,  1527,   469,
     469,  1350,  2139,  2079,  2733,  1420,  1906,  2146,   925,  2021,
     469,  1806,  2307,  1420,   796,  1652,  1813,   594,   594,   712,
     594,  1609,  1609,   626,   903,   627,    29,  1420,   714,  1553,
    2255,   797,  1554,  1903,    31,   705,  1798,  1907,  1419,  1908,
    2021,  1801,  1555,  1748,  1749,  1556,  2638,    32,   614,  1419,
   -1013,  1837,   615,  1026,  1941,  1220,  1712,  1147,   897,  1203,
    1026,  1220,  2256,   912,  2414,  1444,  1417,    31,  1941,   951,
     482,    33,   483,  1156,  1417,   952,  2308,  2257,  2309,   920,
      32,  1026,  1419,   917,    25,  1718,  2258,  1627,  1417,  1628,
     954,  2236,  2237,  2238,  2239,  2255,   786,   486,   605,  1874,
     608,   918,   612,   633,    33,  1758,   921,  1473,  1350,   786,
     703,  1474,  2683,   923,  1476,  2780,  1477,  1962,    34,    29,
    2259,   924,   712,  1369,  1653,  1182,  1183,  2256,  2021,  1654,
    1828, -1658, -1658,  1829,  1655,  1597,  1278,   931,   634,   705,
     981,  2597,  2464,  1910,   956,  1281,  1858,  1606,  1977,  1554,
    1863,  2258,   954,  1350,  2104,  2001,  1866,  2002,  1329,  1556,
      31,  2021,  2431,   495,   946,  2108,   712,   524,  1338,  1370,
    1220,  1220,   635,   982,   542,  1851,  1872,  1852,    84,  1873,
     953,     3,     4,  2025,   576,   576,  1112,   933,  1270,   948,
    2325,  2089,   934,  2091,   949,  2318,  1026,  1979,  2112,   586,
    2164,  2844,  2003,  2874,  2004,  2260,  2080,  2081,   930,   469,
     932,    34,  -485,  2301,   950,   714,   714,  -485,  2463,   636,
    2466,  2858,  1893,  1980,   962,  1894,   963,  1420,  1371,  2555,
     714,  2317,  1117,  2326,  2388,  2082,   980,   606,  1420,   958,
    1911,   984,   525,  1350,   633,  2021,  1942,  1943,  1944,  1116,
    1945,  1946,  1947,  1948,  1949,  1950,  1918,   935,  1739,  1350,
   -1684, -1684, -1684,   587,  1945,  1946,  1947,  1948,  1949,  1950,
    2260,  1420,  1656,  1120,   785,  2888,  1372,  2153,  2154,   634,
    1122,  1954,  -485,  1657,  1350,  2283,   951,  2125,  1417,    59,
    1112,  2598,   952,  2095,   782,  1124,  2096,   703,   703,  1417,
     894,  1134,   896,   469,  2099,   469,   936,  2100,   469,   469,
    1132,   705,   703,  2127,   620,  1136,    59,   618,   469,  1141,
     469,   469,   469,   469,   469,   469,   469,   619,   622,   954,
    -484,  -485,  1417,   951,  1373,  -484,    85,  1981,  1145,   952,
     588,   951,  1982,   469,    86,  1148,  1584,   952,   714,   469,
     469,   469,   469,  1112,  1585,  1586,  1587,   469,   469,  1151,
     636,  2150,   469,  1125,  1350,  2217,   469,  2576,  1350,   469,
     469,   469,   469,   469,   469,   469,   469,   469,    87,   985,
     469,  1149,  1539,   956,  2052,   469,    55,  1152,   469,  1168,
     469,  2468,  1026,  1169,  2471,  1171,  1283,   953,    89,  1284,
    -484,   472,    55, -1660, -1660,  2281,  2367,   523,  2282,  1199,
    2286,  1202,   986,  2287,   469,  2305,  2396,   550,  1829,  1829,
     578,   562,  1205,  2415,  2432,    88,  2416,  1556,  1206,  1290,
     703,   909,   469,  1720,  1208,  2325, -1684,  1771, -1661, -1661,
      25,   469,   469,  2493,   953,   592, -1663, -1663,  2482,  -484,
    2254,  1226,   953,   786,  1609,  2494, -1664, -1664,  1829,   801,
     712,  1292,  1935,    55,  1236,  2209,  1237,  1936,  1937,  1938,
    1559, -1665, -1665,   714,  2495,    29,   589,  1829,   958,  1112,
    1983,  1112,  2577,  1239,  2214,  1556,  2453, -1666, -1666,   623,
    2159,  1984,  1606,  1606,  1540, -1667, -1667,  1606,   705,   705,
    2453,  1241,   637,  2633,  2176,  2659,  2634,  2685,  1829,    25,
    1556,  2688,  -655,   705,  2689,    25,    31,  2684, -1668, -1668,
    1026,  1580,  2183,   469,   469,  2255,   469,   712,  2700,    32,
    1986,  1203,  2705,  1606,  1606,  2706,  2709,  -662,  1541,  2706,
    1609, -1669, -1669,  1112,    29,   712,   954,  2205,  2269,  2721,
      29,  1559,  2722,    33,  2210,   703,   469,  2256,  1246,  2758,
   -1684,   469,  2722,  -652,  1542,  2759,  1855,    34,  1556,  -653,
     712,  1244,  2257,  -656, -1684,  2413,   714,   712,   902, -1684,
    2767,  2258,  1543,  1203,  2773,    31,  1544,  2706,  1789,   526,
    2376,    31,  1245,   954,  1247,   712,  1759,  2387,    32,  2788,
     956,   954,  2789,   785,    32,  1248,  1609,  1545,  1705,    34,
    1546,   947,  1174,  1175, -1684,  2259,   785,  1250,  1026,  2051,
     714,  1251,    33,  2525,  1547,   469,  1252,    25,    33,   957,
     469,   705,  2817,  1254,  2052,  2818,   527,  -654,  2820, -1670,
   -1670,  1203,    34,  1804,  1255,   640,  1256,   956,  1127,  1129,
    1131,  1811,  1257,   579,  2851,   956,  2869,  2706,   703,  2722,
    2657,  1258,    29,  1940, -1671, -1671,   469,   469,   469,  1301,
    1259,   469, -1672, -1672,   723,  2505,  1805,  1260,  1180,  1181,
     469,   469,   469,   469,  1812, -1674, -1674,  1261,  2370,  1262,
     469, -1675, -1675,   469,  1318,   958,  1275,   579, -1676, -1676,
    2260,  1324,   703,    31, -1677, -1677,  1325,   469,   469, -1678,
   -1678,   712,   469,  1548, -1679, -1679,    32,  1326,   467,  1340,
    2164,  1549,  2508,   496,  1353,   576,   469,   496,  1359,   469,
     936,   469,  1941,   541,   496,   546, -1681, -1681,   546,   934,
      33,   567,   958,  2412,   496,   496,  2534,  2535, -1683, -1683,
     958,  1389,   469,  1391,    34,  1397,   705,  1415,  1157, -1684,
    1459,  1460,  1417,  1550,   469,  1416,   712,   579,  -531,  -531,
    2019,  1115,  1184,  1185,  -535,  -535,   466,  1422,   469,  2510,
    1423,  -534,  -534,  1424,  2019,  1559,  1184,  1185,  1428,   546,
     466,   620,   469,    59,   618,  1435,   567,   496,   567,   567,
     567,  1342,  1344,  2480,   619,   622,  1436,   469,  1440,  1450,
    1220,  1588,  1589,  1590,  1902,  1591,  1592,  1593,  1594,  1595,
    1596,  1455,  1462,  1220,  1463,   469,  1606,  1606,  1606,  1606,
     712,  1467,  1606,  1606,  1606,  1606,  1606,  1606,  1606,  1606,
    1606,  1606,  1112,  1112,  1112,  2367,  1471,  1472,  1480,  1479,
     477,  1482,  1485,  1486,  1488,  1492,  1497,   802, -1684,   705,
      55,  1504,  1506,  1507,  1513,  1308,  1309,  1310,  1311,  1312,
    1313, -1084,  2735,  1514,  1517,  1518,  1519,  2513,  1520,  1606,
    1606,  1552,  1561,  1026,  -450,  1566,  1284,  1350,  1624,  1629,
    1626,  1641,  1648,  1659,  1660,  1662,  1683,  -450,  1700,  1706,
    1684,  1713,  -450,   705,  1714,  1721,   587,   478,  1728,  1740,
    1741,  1742,    55,   578,   714,  1345,  2533,  1761,  1765,  1743,
    2514,  1766,  1767,   588,  1942,  1943,  1944,  1821,  1945,  1946,
    1947,  1948,  1949,  1950,  1826,  2515,  1834,  1830,  1356,   712,
    1841,  1839,  1840,   801,  1842,  1856,  1935,  1860,  -450,  1443,
    1861,  1936,  1937,  1938,  1864,  1868,  1867,  1891,  1112,  1889,
     785,   480,  1869,  1870,  1398,  1871,   592,  -450,    55,   712,
    1855,  1878,  1879,   786,  1892,  1900,  1912,  1425,   469,  1920,
    1923,   714,  1928,  1973,  1978,  1921,  1922,   469,  1924,  1925,
     469,  1927,  1985,   469,  1999,  1931,   703,  1953,  1449,   714,
     469,   469,   469,   469,  1959,  1966,   469,   469,   469,   469,
     469,   469,   469,   469,   469,   469,  -450,  2231,  1994,   469,
     469,  1995,  1997,  1998,   714,  -450,  2023,  2032,  2034,   469,
    2516,   714,  2041,  2054,  2048,   712,  -536,   469,  -537,  2059,
     469,  2060,   469,  2063,   579,  2062,  2064,   964,  2066,   714,
     469,  2068,  2069,   469,   469,  2098,  2072,  2075,   469,   469,
    2088,   579,  2090,   703,  2687,  2113,   965,  2103,  2109,   576,
     706,  2110,  2111,  2114,   469,   482,   469,   483,  2115,  2117,
    2019,   703,  2019,  2136,  2140,  2137,   466,   469,   466,  2141,
    2144,  2147,  2148,  2160,  2157,  2367,   469,  2739,  2121,   485,
    2158,  2167,   486,  2175,  1956,  1935,   703,  2636,  2505,  1270,
    2130,  1955,   469,   703,  2506,  2206,   966,  2207,  2732,  2219,
    2208,  2220,  2006,   708,  2223,  2245,  2507,  2370,  2267,  2232,
    2253,   703,  2271,  2273,  2275,  2276,  2278,  2280,  2291,  1481,
    2692,  2284,  2299,  2295,  2311,  2313,  2329, -1684,  2394,  2399,
     712,  2390,  2403,  2409,  2395,  2508,  2398,  2509,  2692,  2411,
    1112,  -450,  2419,  1829,  1112,  2374,  1112,  1220,  2422,  2426,
    2459,   709,  2165,    55,  2166,  2425,  2454,  2427,  2171,  2172,
    2787,  2450,  2321,  2460,  2467,   712,  2760,   567,  2473,  2474,
    2488,  2440,  2707,   630,  2457,  2707,   631,   705,  2451,  2472,
     567,  2475,  2496,  2500,   967,   496,  2523, -1035,  2541,  2524,
    1249,  2528,  2510, -1657, -1658,   712,  1941, -1659,   712,  2540,
     714, -1660,  1529,  2543,   614,  2407, -1661,   920,   615,  2542,
    2549, -1662,   631,   496,   496,  2550, -1663,   469, -1664,  2511,
     706,  2565,  2564,  2567,  2571, -1665,  1268,   703, -1666, -1667,
   -1668,  2741, -1669,   968,  2770, -1670, -1671, -1672,  2841, -1674,
   -1675,   969,   964, -1676,   705, -1677, -1678,   546,   964,   546,
   -1679, -1680,  2574,   970, -1681, -1682,   567,  2732,   469,   469,
   -1683,   965,   705,   469,   714,   496, -1036,   965,   469,  2582,
    2551,   469,   469,   708,  2601,  2570,   469,   567,  2575,  2615,
    2588,  2606,   703,  2619,   971,  2512,  2625,   705,  2627,   567,
    2513,  2628,  1606,  2630,   705,   592,   592,   469,   592,  2635,
    2644,   469,  2648,  2019,  2782,  2647,  2649,  2019,  2650,   466,
    2658,   966,   705,   466,  2661,  2662,  2663,   966,  2676,  1698,
    2677,   709,   469,  2686,   706,  2690,   567,   567,   567,   973,
    2698,  2699,  2702,  2514,  2715,  1524,  2718,  1525,  2481,  2483,
    1707,  2711,  1709,  2723,  2737,  2740,   703,  2745,  2515,  2754,
    2742,   974,  2372,  2755,  2756,  1112,  2766,  2370,  2775,  2776,
    2777,  2786,  2790,  2643,   469,  2792,  2793,  2795,  2798,  2799,
    2800,   976,  2804,   714,  2121,  2806,  2233,   708,  1606,  2805,
     712,  2815,  2819,  2831,  2837,  1752,  2846,  2852,  1942,  1943,
    1944,  2853,  1945,  1946,  1947,  1948,  1949,  1950,  2860,   967,
    2870,  2863,  2865,  2374,  2861,   967,  2862,  2883,  2885,   922,
    1791,  2872,  1283,  2871,  2889,  1284,  2328,  2332,  2086,  2288,
   -1684, -1684, -1684,  2781,  2618,   709,  2827,  2397,   705,  2833,
    2484,  2531,  2880,  2736,  2866,  2859,  2093,  2675,  2071,  2402,
    1406,  2829,  2122,  2516,  1606,  1290,  2864,  2333,   968,  2067,
    2828,  1521,  1291,  1500,   968,   703,   969,  2556,  2123,  2161,
     785,  2572,   969,  2389,  1835,  1757,   469,  1351,   970,   714,
    1332,  2050,  2769,  1386,   970,  1385,  2717,  1292,   469,   469,
    2823,  2061,   469,   705,  1737,   703,  2774,  2274,  1238,  1756,
    1390,  2478,  2031,  2449,   469,  2248,   706,   476,  2465,   971,
    2019,   477,  2704,   469,  2244,   971,   466,  2765,   469,  2019,
    2764,   469,  2771,  1570,  2019,   466,  2772,  2019,   469,   469,
     466,  1572, -1084,   466,  2477,  1576,  2479,  1577,  2821,  2617,
     469,  2822,   469,  1764,  2814,  1689,  2019,  1970,  2053,  1992,
    1560,  1915,   466,  1772,   973,  1775,  1825,   705,  1786,   708,
     973,   703,   469,  1273,  1790,  1990,  1792,  1699,   478,  2126,
    1909,  2757,  1532,  1708,  2289,   479,   974,  1710,  1799,     0,
       0,  1354,   974,  1802,     0,    55,  1293,  1807,  1808,  1809,
    1810,     0,  1814,  1815,  2374,     0,   976,     0,     0,     0,
    1294,     0,   976,   567,     0,  1295,     0,   709,     0,     0,
       0,     0,    55,     0,     0,     0,     0,  2660,     0,   496,
     496,     0,   480,     0,   469,   567,   567,  1358,   469,   714,
    2019,     0,     0,     0,     0,     0,   466,     0,     0,  2556,
    1298,     0,   711,     0,     0,     0,     0,     0,   579,     0,
       0,   469,   567,  1409,     0,   469,  2552,     0,     0,   714,
       0,  2019,   714,   469,     0,   567,   705,   466,     0,     0,
       0,  1649,     0,     0,   469,     0,   703,  1220,     0,     0,
       0,     0,   567,     0,  1112,     0,   567,     0,  1112,   469,
     481,     0,     0,   706,   706,  1301,   705,  2005,     0,     0,
       0,     0,     0,  2867,     0,     0,     0,     0,   706,     0,
       0,   703,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2751,    55,     0,     0,     0,     0,   482,     0,   483,     0,
     469,   703,   801,   469,   703,  1935,   708,   708,     0,  2019,
    1936,  1937,  1938,     0,   484,   466,     0,     0,     0,     0,
     485,   708,   705,   486,     0,   469,     0,  2215,     0,     0,
       0,     0,     0,     0,     0,     0,   469,     0,     0,     0,
       0,     0,  2019,     0,     0,  1303,  2778,     0,   466,     0,
       0,     0,     0,     0,   709,   709,   469,     0,     0,     0,
       0,  2372,     0,     0,     0,     0,     0,     0,     0,   709,
       0,     0,   711,     0,     0,   469,   469,     0,     0,  1466,
       0,     0,     0,     0,     0,     0,   706,   567,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1495,  2124,     0,
       0,     0,     0,  1112,  2374,  2132,  2133,  2135,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     469,     0,   469,     0,    55,  2149,  2019,  2842,     0,     0,
    1512,     0,   466,     0,     0,     0,     0,   705,     0,   708,
       0,     0,     0,     0,  1304,     0,     0, -1684, -1684, -1684,
       0,  1308,  1309,  1310,  1311,  1312,  1313,     0,     0,     0,
       0,   631,   631,     0,   496,   496,     0,   496,   631,     0,
     567,     0,   705,     0,     0,     0,   711,     0,     0,  2747,
       0,     0,     0,     0,   469,     0,   703,   709,     0,   -39,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   705,     0,     0,   705,  1940,     0,     1,     0,
       0,   706,     0,     0,     0,     0,     0,  1599,     2,     0,
       3,     4,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     5,     0,     0,     0,
    1268,     0,     0,     0,     0,     6,     0,     0,     0,     0,
       0,     0,     0,     0,   631,     0,  2143,     7,     0,     0,
       0,     0,     0,     0,   708,     0,     0,     0,     8,     0,
       0,  2240,  2241,  2242,     0,  1941,     0, -1464,     0,     9,
       0,    10,     0,     0,  1268,     0,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    11,
       0,     0,  1649,     0,     0,     0,     0,     0,   567,     0,
     567,  2372,   709,    12,   706,     0,     0,     0,  1996,  1722,
       0,  1727,     0,    13,     0,     0,  2296,     0,     0,    14,
       0,     0,     0,     0,     0,     0,  2013,    15,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,   711,    55,
    2013,     0,    18,   567,   578,     0,     0,     0,   706,     0,
       0,     0,  1409,   496,     0,     0,     0,   708,     0, -1464,
       0,     0,     0,   496,  1773,   496,  1777,     0,   496,    19,
       0,     0,     0,     0,   496,     0,   496,   705,     0,     0,
       0,  2393,     0,     0,     0,     0,     0,   631,   496,     0,
       0,     0,   631,   496,     0,     0,     0,   496,   496,   496,
     496,   708,   496,   496,     0,   709,     0,     0,    20,     0,
       0, -1464,     0,     0,  1529,     0,     0,     0,     0,     0,
       0, -1466,   567,  1836, -1464,     0,     0,     0,     0, -1464,
       0,  1172,  1173,     0, -1464,     0,     0,     0,  1850,     0,
       0,     0,     0, -1464,     0,     0, -1464,     0,     0,   709,
       0,     0,     0,     0,     0,     0,  2297,  1942,  1943,  1944,
       0,  1945,  1946,  1947,  1948,  1949,  1950,     0,     0,     0,
       0,     0,     0,     0,     0, -1464,     0,     0,     0,     0,
    2330,     0,     0,     0,     0,    21,     0,     0,    22,     0,
    2444,  2445,  2446,  2447, -1464,  2377,  2378,  2379,  2380,  2381,
    2382,  2383,  2384,  2385,  2386,  1174,  1175,     0,     0,     0,
       0,     0,   801, -1466,     0,  1935,    23,     0,    55,     0,
    1936,  1937,  1938,     0,    24,   711,   711,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2434,    25,     0,
     711,     0,     0, -1464,     0,    26, -1464,     0,     0,    27,
       0,     0, -1464,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0, -1466,     0,  1176,  1177,  1178,
    1179,  1180,  1181,    29,     0,  1182,  1183,     0, -1466,  1273,
       0,     0,     0, -1466,     0,     0,     0,     0, -1466,     0,
       0,     0,     0,     0,     0,     0,     0, -1466,     0,     0,
   -1466,     0,     0,     0,     0,     0,     0, -1464,     0,    30,
       0,     0,  1599,     0,    31,     0,     0,     0,     0,     0,
       0,  1268,     0,     0,     0,     0,     0,    32,     0, -1466,
       0,     0,     0,     0,     0,     0,  2243,     0,  2246,     0,
       0,     0,   706,     0,     0,   567,     0, -1480, -1466,     0,
       0,    33,  2022,     0,  1283,     0,     0,  1284,   711,     0,
       0,  2006,     0,     0,     0,    34,  2022,     0,   -39,     0,
    2040,  1283,     0,  2043,  1284,  1727,     0,     0,     0,  1184,
    1185,     0,     0,   801,     0,     0,  1935,  1290, -1464,     0,
       0,  1936,  1937,  1938, -1684,   708, -1464, -1466,     0,     0,
   -1466,     0,     0,     0,  1290,     0, -1466,     0,  2435,   706,
       0, -1684, -1464,     0, -1464, -1464,  1940,     0,     0,  1292,
       0,  1466,     0,     0,     0,     0,     0,   706,     0,     0,
       0,     0,     0,     0,     0,     0,  1292,     0,     0, -1480,
       0,     0,     0,   709,     0,     0,     0,     0,     0,     0,
       0, -1464,   706,     0, -1464, -1464, -1464,     0,     0,   706,
       0, -1466,   708,     0,     0,     0,     0,     0,     0,  2645,
       0,     0,     0,    55,     0,     0,     0,   706,     0,     0,
     708,  1466,     0,   711,     0,  1941,   567,     0,  2224,  1186,
    1187, -1480,  1466,   567,   567,   567,     0,     0,     0,     0,
       0,     0,     0,     0, -1480,   708,   496,     0,     0, -1480,
     709,     0,   708,   567, -1480,  2006,     0,     0, -1684,     0,
       0,  2681,     0, -1480,     0,  2156, -1480,     0,   709,     0,
     708,     0, -1684,     0,     0, -1684,     0, -1684,     0,     0,
       0,   631, -1466,     0,     0,     0,     0,     0,     0, -1684,
   -1466,     0,     0,   709, -1684, -1480,     0,  1466,  1466,     0,
     709,     0,     0,     0,     0,     0, -1466,     0, -1466, -1466,
       0,     0, -1684,     0, -1480,     0,     0,     0,   709,  2013,
    1599,     0,  2728,  2013,     0,     0,   711,  1940,     0, -1684,
       0,     0,     0,   706,     0,     0,     0,     0,     0,  2637,
       0,     0,     0,     0,     0, -1466,    55,    55, -1466, -1466,
   -1466,     0,     0,     0,     0,  2750,     0,     0,     0,     0,
       0,     0,     0, -1480,     0,     0, -1480,  1301,     0,     0,
     711,     0, -1480,  2655,  2656,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1301,     0,   708,  2664,   706,     0,
       0,  2235,     0,     0,     0,     0,  1941,     0,     0,   567,
     567,   567,   467,     0,  2022,  2252,     0,     0,     0,  2252,
    2266,     0,     0,     0,     0,     0,     0,  1942,  1943,  1944,
       0,  1945,  1946,  1947,  1948,  1949,  1950, -1480,     0,     0,
       0,   875,   875,     0,   709,     0,     0,     0,  1727,     0,
       0,   708,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2719,   706,     0,   567,     0,   496, -1684,     0,     0,
    1466,  1409,  1466,     0,  1495,    55,     0,     0,     0,     0,
       0,     0,     0,     0, -1684,     0,     0,     0,     0,     0,
     496,  2006,  2331,     0,     0,     0,     0,     0,     0,   709,
       0,  1021,  1028,     0,     0,   496,   496,   496,   496,   496,
     496,   496,   496,   496,   496,   708,     0,     0, -1480,     0,
       0,     0,     0,     0,     0,     0, -1480,     0,     0,   567,
       0,     0,     0,     0,     0,  2013,     0,     0,     0,  1409,
    2013,   964, -1480,  2013, -1480, -1480,     0,     0,     0,     0,
    1495,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     965,     0,   567,   709,     0,     0, -1684,     0,     0,  1466,
       0,   706,     0,  1308,  1309,  1310,  1311,  1312,  1313,     0,
       0, -1480,     0, -1684, -1480, -1480, -1480,     0,     0,     0,
    1308,  1309,  1310,  1311,  1312,  1313,     0,     0,  1942,  1943,
    1944,   706,  1945,  1946,  1947,  1948,  1949,  1950,     0,     0,
     966,  2319,     0,     0,     0,     0,     0,     0,     0,  2320,
       0,     0,     0,     0,   708,    55,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2443,     0,     0,   567,   567,
     567,   567,     0,     0,     0,  2252,  2266,    55,  2252,     0,
       0,  2452,     0,     0,   708,  2022,     0,     0,     0,  2022,
       0,     0,     0,     0,     0,  2470,     0,   706,     0,     0,
       0,     0,   709,     0,   711,     0,  2321,  2013,     0,  1021,
       0,     0,     0,     0,  2040,  1268,     0,     0,     0,  1727,
       0,     0,     0,  1599,     0,     0,  1242,     0,   967,     0,
       0,  1409,   709,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     708,     0,     0,  1253,     0,     0,  2532,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    55,     0,
       0,   711,     0,  1263,  1264,  1265,     0,   968,  1269,     0,
       0,     0,     0,     0,     0,   969,   499,     0,     0,   711,
       0,     0,     0,     0,     0,     0,     0,   970,   709,  2322,
    1323,   500,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   706,     0,   711,     0,     0,     0,     0,     0,
       0,   711,  1466,     0,    55,     0,     0,     0,   971,     0,
    1850,     0,     0,     0,     0,     0,     0,     0,     0,   711,
       0,  2568,     0,     0,     0,     0,     0,   706,     0,  1364,
       0,     0,     0,  1376,  1381,   501,     0,     0,     0,     0,
       0,     0,     0,     0,   502,   708,     0,     0,     0,     0,
       0,     0,     0,   973,     0,     0,   503,   706,     0,     0,
     706,   504,   467,  2252,     0,     0,  2594,     0,     0,   496,
       0,  2022,     0,     0,     0,   974,  2022,     0,     0,  2022,
     708,  2605,     0,     0,  2608,    55,   505,  1021,     0,     0,
       0,     0,     0,   709,  1021,   976,     0,  2323,  2624,  1283,
    2324,     0,  1284,     0,     0,     0,     0,     0,     0,     0,
     708,     0,     0,   708,     0,  1021,     0,     0,   631,   496,
       0,     0,     0,     0,     0,     0,     0,   567,   709,   506,
       0,     0,  1290,   507,     0,   711,     0,     0,     0, -1684,
       0,     0,     0,     0,  1219,     0,     0,     0,     0,     0,
    1219,     0,     0,   496,   496,     0,     0,     0,   709,     0,
       0,   709,     0,  1409,  1292,     0,     0,   496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   567,
       0,     0,  2624,     0,     0,     0,     0,     0,     0,     0,
     711,     0,     0,     0,     0,     0,   508,     0,     0,     0,
     496,  1417,     0,     0,     0,     0,     0,     0,     0,     0,
     509,     0,     0,  2022,     0,     0,     0,     0,  2608,     0,
       0,     0,     0,     0,     0,     0,     0,  2714,     0,     0,
    1021,   496,     0,  2227,  1280,     0,     0,     0,     0,     0,
     567,   510,   706,     0,   511,     0,     0,     0,     0,     0,
       0,     0,   512,     0,   711,   513,     0,  1219,     0,  1219,
    1219,     0,   631, -1684,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   567,   514,     0,     0, -1684,     0,     0,
    1283,     0, -1684,  1284,     0,     0,   515,     0,  1285,  1286,
    1287,     0,     0,   516,     0,   708,     0,     0,     0,     0,
       0,   467,   517,     0,     0,  1288,     0,     0,   518,     0,
    2768,     0,     0,  1290,   496,     0,     0, -1684,  2605,     0,
    1291,     0,     0,     0,     0,  1219,     0,     0,  1219,  1219,
       0,     0,     0,   519,  2624,   631,   631,   631,     0,     0,
       0,     0,  1564,   709,     0,  1292,     0,     0,     0,     0,
       0,     0,  1583,     0,  1600,     0,     0,  1612,  1615,  1620,
    1623,     0,     0,   711,     0,     0,     0,     0,     0,     0,
       0,     0,  1301,     0,     0,     0,     0,  1630,  2605,     0,
       0,     0,     0,  1634,  1635,  1636,  1637,  2714,     0,  2594,
       0,  1646,  1647,   711,     0,     0,  1658,     0,  1727,     0,
    1661,     0,     0,  1669,  1670,  1671,  1672,  1673,  1674,  1675,
    1676,  1677,  1409,     0,  1678,     0,     0,     0,  2624,  1686,
       0,     0,  1690,     0,   875,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   631,     0,     0,     0,
       0,     0,     0,  1316,  1293,     0,     0,     0,  1711,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1294,   711,
       0,     0, -1684,  1295,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1264,  1265,  1172,  1173,     0,
       0,     0,  1316,     0,  1296,  1297,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1282,  1298,     0,
       0,     0,  1283,     0,     0,  1284,     0,     0,     0,  1499,
    1285,  1286,  1287,     0,     0,     0,     0,     0,     0,     0,
    1508,     0,  1509,     0,     0,     0,     0,  1288,     0,     0,
    1289,  1515,     0,     0,     0,  1290,  1299,     0,     0,  1300,
       0,     0,  1291,     0,     0,     0,     0,     0,  1516,     0,
       0,  1174,  1175,  1301,  1021,     0,  1302,  1822,  1823,     0,
    1824, -1684,     0,     0,     0,     0,     0,  1292,  1308,  1309,
    1310,  1311,  1312,  1313,   711,  1534,  1536,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1316,
    1859,     0,     0,     0,     0,     0,  1316,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1567,  1568,   711,
       0,  1581,  1582,  1176,  1177,  1178,  1179,  1180,  1181,     0,
       0,  1182,  1183,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   711,
       0,     0,   711,  1303,     0,     0,     0,     0,     0,     0,
       0,     0,  1021,     0,     0,     0,     0,     0,     0,  1913,
       0,     0,     0,     0,  1919,     0,  1293,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1294,     0,     0,     0,     0,  1295,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1934,     0,     0,     0,  1296,  1297,     0,     0,
       0,     0,     0,     0,  1620,     0,  1620,  1620,     0,     0,
    1298,     0,     0,     0,  1969,  1184,  1185,  1971,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1746,  1746,     0,
       0,     0,  1304,     0,     0,  1305,  1306,  1307,     0,  1308,
    1309,  1310,  1311,  1312,  1313,     0,     0,     0,  1299,     0,
    1988,  1300,  1926,  1991,     0,  1993,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1301,     0,     0,  1302,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1219,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1219,
       0,     0,  1219,     0,     0,     0,     0,     0,     0,     0,
    1316,     0,     0,  1283,     0,     0,  1284,     0,     0,     0,
       0,  1316,     0,     0,   711,  1607,  1364,     0,     0,     0,
       0,  1316,  1316,  1316,     0,  1186,  1187,  1316,     0,     0,
       0,  1381,     0,     0,     0,     0,  1290,     0,     0,     0,
       0,     0,     0, -1684,     0,  1188,     0,     0,     0,  2065,
       0,     0,     0,     0,     0,  1303,     0,     0,     0,  1283,
       0,     0,  1284,  1875,  1877,     0,     0,     0,  1292,     0,
       0,     0,     0,     0,     0,  1283,     0,     0,  1284,     0,
       0,  1316,     0,  1285,  1286,  1287,     0,     0,     0,  1219,
       0,     0,  1290,     0,     0,     0,     0,     0,     0, -1684,
    1288,     0,  1219,     0,     0,     0,     0,  1021,  1290,     0,
       0,     0,     0,     0,     0,  1291,     0,     0,     0,     0,
       0,     0,  1316,     0,  1292,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1316,     0,     0,  2228,     0,  1316,
    1292,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1304,     0,     0,  1305,  1306,  1307,
       0,  1308,  1309,  1310,  1311,  1312,  1313, -1684,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1684,     0,     0,     0,     0, -1684,     0,     0,     0,
       0,     0,     0,  2438,     0,     0,     0,     0,     0,     0,
       0,     0,  2174,     0,     0,     0,     0,     0,     0,     0,
    1569,  2178,   538,     0,  2179,     0,     0,  2181,     0,     0,
       0, -1684,     0, -1684,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1684,     0,  1293,
       0,     0, -1684,  2201,  2202,     0,     0,     0,     0,     0,
       0,     0,     0,  1294,  2027,     0,     0,     0,  1295,     0,
       0,  2213,     0,     0,  2216,     0,  2218,     0,     0,     0,
       0,     0,     0,     0,  2222,     0,  1301, -1684,     0,  1296,
    1297,     0,  2229,  2230,     0,  2057,  2057,     0,     0,     0,
       0,     0,     0,  1298,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2270,     0,     0,     0,  1172,  1173,     0,     0,     0,
    2277,     0,  1316,     0,     0,     0,     0,     0,     0,     0,
       0,  1299,  1301,     0,  1300,     0,  2290,     0,     0,     0,
       0,  1316,     0,     0,     0,     0,     0,     0,  1301,     0,
       0,  1302,     0,     0,     0,     0,     0,     0,  1316,     0,
    1607,  1607,     0,  1951,     0,  1607, -1684,     0,     0,     0,
    1316,     0,     0,  1316,  1283,     0,     0,  1284,  1316,     0,
       0,  1316,  1285,  1286,  1287,     0,     0,     0,  1316,  1174,
    1175,     0,  1316,  1316,  1316,  1316,     0,     0,     0,  1288,
       0,  1607,  1607,     0,  1316,  1316,     0,  1290,     0,     0,
       0,     0,     0,     0,  1291,     0,  1316,  2152,     0,  1316,
       0,     0, -1684,     0,     0,     0,     0,  1316,  1316,  1316,
    1316,  1316,  1316,  1316,  1316,  1316,  1316,     0,  1303,  1292,
       0,     0,     0,     0,  1316,     0,     0,     0,  1316,     0,
       0,  1176,  1177,  1178,  1179,  1180,  1181,     0,     0,  1182,
    1183,  2418,     0,     0,     0, -1684,     0,     0,     0,  1316,
       0,     0,  1308,  1309,  1310,  1311,  1312,  1313,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2428,  2429,     0,     0,     0,  2430,     0,     0,
       0,     0,  2433,     0,     0,  2436,  2437,     0,     0,     0,
    2441, -1684,     0,     0,     0,     0,     0,     0,  1308,  1309,
    1310,  1311,  1312,  1313,     0,     0,     0,  1304,  1293,     0,
    1305,  1306,  1307,     0,  1308,  1309,  1310,  1311,  1312,  1313,
       0,     0,  1294,     0,  1625,   951,     0,  1295,     0,     0,
       0,   952,     0,  1184,  1185,     0,   875,     0,   964,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1296,  1297,
    1316,  1316,  1316,     0,     0,     0,     0,   965,     0,     0,
       0,     0,  1298,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1283,     0,     0,  1284,     0,     0,  2526,     0,
    1285,  1286,  1287,     0,     0,     0,     0,  1316,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1288,     0,     0,
    1299,     0,     0,  1300,     0,  1290,     0,   966,     0,     0,
       0,     0,  1291,     0,     0,     0,  1283,  1301,     0,  1284,
    1302,  1219,     0,     0,  1285,  1286,  1287,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   953,  1292,     0,     0,
       0,  1316,     0,  1186,  1187,     0,     0,  1316,     0,  1290,
       0,     0,     0,     0,     0,     0,  1291,     0,     0,     0,
    1951,  1951,  1316,     0,  1607,  1607,  1607,  1607,     0,     0,
    1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,
    1951,  1292,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2578,  2579,     0,   967,  2580,  1316,     0,  1316,
       0,     0,  1951,  1951,     0,     0,     0,  1303,     0,     0,
       0,     0,     0,     0,     0,     0,  1316,  1607,  1607,  1316,
       0,  1316,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2613,  2614,     0,     0,  1293,     0,     0,     0,
       0,     0,     0,     0,   968,     0,  2626,     0,     0,     0,
    1294,     0,   969,     0,     0,  1295,     0,     0,     0,     0,
       0,     0,     0,     0,   970,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1296,  1297,     0,     0,
    1293,     0,     0,     0,     0,   954,     0,     0,     0,     0,
    1298,     0,     0,  1316,  1294,   971,     0,     0,     0,  1295,
       0,     0,     0,     0,     0,     0,  1304,     0,     0,  1305,
    1306,  1307,     0,  1308,  1309,  1310,  1311,  1312,  1313,     0,
    1296,  1297,     0,  1972,     0,     0,     0,     0,  1299,     0,
       0,  1300,     0,     0,  1298,   972,     0,     0,  1219,   956,
     973,     0,     0,  1219,     0,  1301,     0,     0,  1302,     0,
       0,     0,     0,     0,     0,  2701,     0,     0,     0,     0,
       0,     0,   974,     0,     0,     0,     0,  1269,   975,     0,
       0,     0,  1299,     0,     0,  1300,     0,     0,  2720,     0,
       0,     0,   976,     0,   951,  1534,  1536,     0,     0,  1301,
     952,     0,     0,  2734,     0,     0,     0,   964,     0,     0,
       0,     0,  1316,     0,     0,     0,  1316,  1316,     0,  1316,
       0,     0,  1951,  1951,  1951,  1951,   965,     0,     0,  1951,
    1951,  1951,  1951,  1951,  1951,  1951,  1951,  1951,  1951,  1316,
    1316,     0,     0,     0,   958,  1303,     0,     0,     0,     0,
       0,  1316,     0,     0,  1316,     0,  1316,     0,     0,     0,
    1316,     0,     0,  1951,  1951,     0,     0,  1316,  1316,     0,
       0,     0,     0,     0,     0,     0,   966,     0,     0,  2613,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1303,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   953,     0,     0,  1316,     0,
    2797,     0,     0,     0,     0,  1316,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1316,  2811,
    2811,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1304,     0,     0,  1305,  1306,  1307,
       0,  1308,  1309,  1310,  1311,  1312,  1313,     0,     0,  1534,
    1536,  2177,     0,     0,   967,     0,     0,     0,     0,     0,
    1219,     0,     0,     0,     0,     0,  2811,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1304,     0,
       0,  1305,  1306,  1307,     0,  1308,  1309,  1310,  1311,  1312,
    1313,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   968,     0,     0,     0,     0,     0,     0,
       0,   969,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   970,     0,     0,     0,     0,  2811,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   954,     0,  1316,     0,     0,     0,
    1607,     0,     0,     0,   971,     0,  1316,  1316,  1316,     0,
       0,  1316,     0,     0,  1316,  1316,     0,     0,     0,  1316,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1793,     0,     0,     0,   956,   973,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   974,     0,     0,     0,     0,     0,  1794,     0,     0,
       0,     0,     0,     0,     0,     0,  1607,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1316,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   958,     0,     0,     0,     0,     0,     0,
       0,  1951,  1607,     0,     0,     0,  1316,  1316,  1316,     0,
    1219,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1316,  1316,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1316,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1951,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   988,   798,
     538,   799,   800,   801,   802,   803,     0,     0,     0,     0,
       0,  1951,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,   989,    99,   100,   101,     0,     0,     0,  1316,
     804,     0,     0,   102,   103,     0,   104,   105,   106,   990,
     108,   109,   110,   111,   805,   991,   806,   807,  1316,   116,
     117,   118,   119,   120,   121,   808,   809,   122,   123,   810,
     811,   126,  1316,   127,   128,   129,   130,   812,     0,   992,
       0,   133,   134,   135,   136,   137,   993,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,   994,   149,
     150,   151,   814,   815,   816,   995,   818,   819,   820,   153,
     154,   155,   156,   157,   158,   159,   821,   822,   162,   823,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,   996,  1316,   175,   176,   661,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,  1316,
     186,   187,   188,   189,   824,   191,   192,   193,   194,   825,
     826,   196,     0,   197,   198,   827,   200,     0,   201,     0,
     202,   997,     0,   998,   205,   206,   207,   999,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     218,  1000,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,  1001,   232,   233,   234,   235,
     236,   828,   829,     0,   830,     0,   240,  1002,  1003,   243,
    1004,   245,   246,   247,   248,   249,     0,     0,   250,  1005,
     252,  1006,     0,   254,   255,   256,   831,   832,   257,   258,
     259,   260,   261,  1007,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   833,  1008,   834,   284,   285,   286,   287,   835,
     288,   289,  1009,   291,   836,   837,   293,   838,   295,   296,
     297,     0,   298,   299,     0,     0,   839,   301,   302,     0,
       0,   303,   304,  1010,   306,  1011,   840,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     841,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   842,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,  1012,   357,
     358,   359,   843,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     844,   377,   378,   379,   380,   381,  1013,   383,   384,   845,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,  1014,   399,   846,     0,   401,   402,     0,
     403,  1015,   405,   406,   407,   408,   409,     0,   847,   848,
       0,     0,   412,   413,   849,   415,   850,   851,   417,   418,
    1016,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   853,     0,   430,   431,   432,   433,   434,
     435,   854,  1017,   437,  1018,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   855,     0,     0,     0,     0,
       0,     0,   856,   857,  1019,     0,     0,     0,     0,   859,
       0,   860,  1020,     0,     0,     0,   861,     0,   862,   863,
      90,   798,   538,   799,   800,   801,   802,   803,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,   804,     0,     0,   102,   103,     0,   104,   105,
     106,   107,   108,   109,   110,   111,   805,   113,   806,   807,
       0,   116,   117,   118,   119,   120,   121,   808,   809,   122,
     123,   810,   811,   126,     0,   127,   128,   129,   130,   812,
       0,   813,     0,   133,   134,   135,   136,   137,   138,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
     148,   149,   150,   151,   814,   815,   816,   817,   818,   819,
     820,   153,   154,   155,   156,   157,   158,   159,   821,   822,
     162,   823,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     661,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   824,   191,   192,   193,
     194,   825,   826,   196,     0,   197,   198,   827,   200,     0,
     201,     0,   202,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,   236,   828,   829,     0,   830,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,     0,
     250,   251,   252,   253,     0,   254,   255,   256,   831,   832,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   833,   282,   834,   284,   285,   286,
     287,   835,   288,   289,   290,   291,   836,   837,   293,   838,
     295,   296,   297,     0,   298,   299,     0,     0,   839,   301,
     302,     0,     0,   303,   304,   305,   306,   307,   840,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   841,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   842,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
     356,   357,   358,   359,   843,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,    25,   372,   373,   374,
     375,   376,   844,   377,   378,   379,   380,   381,   382,   383,
     384,   845,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   846,     0,   401,
     402,    29,   403,   404,   405,   406,   407,   408,   409,     0,
     847,   848,     0,     0,   412,   413,   849,   415,   850,   851,
     417,   418,   852,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   853,     0,   430,   431,   432,
     433,   434,   601,   854,     0,   437,   438,   439,   440,   441,
     442,     0,     0,   443,     0,    32,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   855,     0,    33,
       0,     0,     0,     0,   856,   857,     0,     0,     0,     0,
       0,   859,     0,   860,  2710,     0,     0,     0,   861,     0,
     862,   863,    90,   798,   538,   799,   800,   801,   802,   803,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,   804,     0,     0,   102,   103,     0,
     104,   105,   106,   107,   108,   109,   110,   111,   805,   113,
     806,   807,     0,   116,   117,   118,   119,   120,   121,   808,
     809,   122,   123,   810,   811,   126,     0,   127,   128,   129,
     130,   812,     0,   813,     0,   133,   134,   135,   136,   137,
     138,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,   148,   149,   150,   151,   814,   815,   816,   817,
     818,   819,   820,   153,   154,   155,   156,   157,   158,   159,
     821,   822,   162,   823,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   661,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   824,   191,
     192,   193,   194,   825,   826,   196,     0,   197,   198,   827,
     200,     0,   201,     0,   202,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,   236,   828,   829,     0,   830,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,     0,   250,   251,   252,   253,     0,   254,   255,   256,
     831,   832,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   833,   282,   834,   284,
     285,   286,   287,   835,   288,   289,   290,   291,   836,   837,
     293,   838,   295,   296,   297,     0,   298,   299,     0,     0,
     839,   301,   302,     0,     0,   303,   304,   305,   306,   307,
     840,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   841,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   842,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,   356,   357,   358,   359,   843,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,    25,   372,
     373,   374,   375,   376,   844,   377,   378,   379,   380,   381,
     382,   383,   384,   845,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   846,
       0,   401,   402,    29,   403,   404,   405,   406,   407,   408,
     409,     0,   847,   848,     0,     0,   412,   413,   849,   415,
     850,   851,   417,   418,   852,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   853,     0,   430,
     431,   432,   433,   434,   601,   854,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,     0,    32,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   855,
       0,    33,     0,     0,     0,     0,   856,   857,     0,     0,
       0,     0,     0,   859,     0,   860,     0,     0,     0,     0,
     861,     0,   862,   863,    90,   798,   538,   799,   800,   801,
     802,   803,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,   804,     0,     0,   102,
     103,     0,   104,   105,   106,   107,   108,   109,   110,   111,
     805,   113,   806,   807,  1616,   116,   117,   118,   119,   120,
     121,   808,   809,   122,   123,   810,   811,   126,     0,   127,
     128,   129,   130,   812,     0,   813,     0,   133,   134,   135,
     136,   137,   138,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,   148,   149,   150,   151,   814,   815,
     816,   817,   818,   819,   820,   153,   154,   155,   156,   157,
     158,   159,   821,   822,   162,   823,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   661,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     824,   191,   192,   193,   194,   825,   826,   196,     0,   197,
     198,   827,   200,     0,   201,     0,   202,   203,  1617,   204,
     205,   206,   207,   208,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,   236,   828,   829,     0,
     830,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,  1618,   250,   251,   252,   253,     0,   254,
     255,   256,   831,   832,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   833,   282,
     834,   284,   285,   286,   287,   835,   288,   289,   290,   291,
     836,   837,   293,   838,   295,   296,   297,     0,   298,   299,
       0,     0,   839,   301,   302,     0,     0,   303,   304,   305,
     306,   307,   840,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   841,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   842,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,   356,   357,   358,   359,   843,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   844,   377,   378,   379,
     380,   381,   382,   383,   384,   845,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   846,     0,   401,   402,     0,   403,   404,   405,   406,
     407,   408,   409,     0,   847,   848,     0,  1619,   412,   413,
     849,   415,   850,   851,   417,   418,   852,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   853,
       0,   430,   431,   432,   433,   434,   435,   854,     0,   437,
     438,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   855,     0,     0,     0,     0,     0,     0,   856,   857,
       0,     0,     0,     0,     0,   859,     0,   860,     0,     0,
       0,     0,   861,     0,   862,   863,    90,   798,   538,   799,
     800,   801,   802,   803,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,   804,     0,
       0,   102,   103,     0,   104,   105,   106,   107,   108,   109,
     110,   111,   805,   113,   806,   807,     0,   116,   117,   118,
     119,   120,   121,   808,   809,   122,   123,   810,   811,   126,
       0,   127,   128,   129,   130,   812,     0,   813,     0,   133,
     134,   135,   136,   137,   138,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,   148,   149,   150,   151,
     814,   815,   816,   817,   818,   819,   820,   153,   154,   155,
     156,   157,   158,   159,   821,   822,   162,   823,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   661,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   824,   191,   192,   193,   194,   825,   826,   196,
       0,   197,   198,   827,   200,     0,   201,     0,   202,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,   236,   828,
     829,     0,   830,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,     0,   250,   251,   252,   253,
       0,   254,   255,   256,   831,   832,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     833,   282,   834,   284,   285,   286,   287,   835,   288,   289,
     290,   291,   836,   837,   293,   838,   295,   296,   297,     0,
     298,   299,     0,     0,   839,   301,   302,     0,     0,   303,
     304,   305,   306,   307,   840,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   841,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   842,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,   356,   357,   358,   359,
     843,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   844,   377,
     378,   379,   380,   381,   382,   383,   384,   845,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   846,     0,   401,   402,     0,   403,   404,
     405,   406,   407,   408,   409,     0,   847,   848,     0,     0,
     412,   413,   849,   415,   850,   851,   417,   418,   852,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   853,     0,   430,   431,   432,   433,   434,   435,   854,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   855,     0,     0,     0,     0,     0,     0,
     856,   857,   858,     0,     0,     0,     0,   859,     0,   860,
       0,     0,     0,     0,   861,     0,   862,   863,    90,   798,
     538,   799,   800,   801,   802,   803,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,  1374,    99,   100,   101,     0,     0,     0,     0,
     804,     0,     0,   102,   103,     0,   104,   105,   106,   107,
     108,   109,   110,   111,   805,   113,   806,   807,     0,   116,
     117,   118,   119,   120,   121,   808,   809,   122,   123,   810,
     811,   126,     0,   127,   128,   129,   130,   812,     0,   813,
       0,   133,   134,   135,   136,   137,   138,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,   148,   149,
     150,   151,   814,   815,   816,   817,   818,   819,   820,   153,
     154,   155,   156,   157,   158,   159,   821,   822,   162,   823,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   661,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   824,   191,   192,   193,   194,   825,
     826,   196,     0,   197,   198,   827,   200,     0,   201,     0,
     202,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
     236,   828,   829,     0,   830,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,     0,   250,   251,
     252,   253,     0,   254,   255,   256,   831,   832,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   833,   282,   834,   284,   285,   286,   287,   835,
     288,   289,   290,   291,   836,   837,   293,   838,   295,   296,
     297,     0,   298,   299,     0,     0,   839,   301,   302,     0,
       0,   303,   304,   305,   306,   307,   840,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     841,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   842,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,   356,   357,
     358,   359,   843,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     844,   377,   378,   379,   380,   381,   382,   383,   384,   845,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   846,     0,   401,   402,     0,
     403,   404,   405,   406,   407,   408,   409,     0,   847,   848,
       0,     0,   412,   413,   849,   415,   850,   851,   417,   418,
     852,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   853,     0,   430,   431,   432,   433,   434,
     435,   854,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   855,     0,     0,     0,     0,
       0,     0,   856,   857,     0,     0,     0,     0,     0,   859,
       0,   860,     0,     0,     0,     0,   861,     0,   862,   863,
     988,   798,   538,   799,   800,   801,   802,   803,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,   804,     0,     0,   102,   103,     0,   104,   105,
     106,   990,   108,   109,   110,   111,   805,   991,   806,   807,
       0,   116,   117,   118,   119,   120,   121,   808,   809,   122,
     123,   810,   811,   126,     0,   127,   128,   129,   130,   812,
       0,   992,     0,   133,   134,   135,   136,   137,   993,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
     994,   149,   150,   151,   814,   815,   816,   995,   818,   819,
     820,   153,   154,   155,   156,   157,   158,   159,   821,   822,
     162,   823,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     661,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   824,   191,   192,   193,
     194,   825,   826,   196,     0,   197,   198,   827,   200,     0,
     201,     0,   202,   997,     0,   998,   205,   206,   207,   999,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   218,  1000,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,  1001,   232,   233,
     234,   235,   236,   828,   829,     0,   830,     0,   240,  1002,
    1003,   243,  1004,   245,   246,   247,   248,   249,     0,     0,
     250,  1005,   252,  1006,     0,   254,   255,   256,   831,   832,
     257,   258,   259,   260,   261,  1007,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   833,  1008,   834,   284,   285,   286,
     287,   835,   288,   289,  1009,   291,   836,   837,   293,   838,
     295,   296,   297,     0,   298,   299,     0,     0,   839,   301,
     302,     0,     0,   303,   304,  1010,   306,  1011,   840,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   841,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   842,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
    1012,   357,   358,   359,   843,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   844,   377,   378,   379,   380,   381,  1013,   383,
     384,   845,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,  1014,   399,   846,     0,   401,
     402,     0,   403,  1015,   405,   406,   407,   408,   409,     0,
     847,   848,     0,     0,   412,   413,   849,   415,   850,   851,
     417,   418,  1016,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   853,     0,   430,   431,   432,
     433,   434,   435,   854,     0,   437,  1018,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   855,     0,     0,
       0,     0,     0,     0,   856,   857,     0,     0,     0,     0,
       0,   859,     0,   860,  1490,     0,     0,     0,   861,     0,
     862,   863,    90,   798,   538,   799,   800,   801,   802,   803,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,   804,     0,     0,   102,   103,     0,
     104,   105,   106,   107,   108,   109,   110,   111,   805,   113,
     806,   807,     0,   116,   117,   118,   119,   120,   121,   808,
     809,   122,   123,   810,   811,   126,     0,   127,   128,   129,
     130,   812,     0,   813,     0,   133,   134,   135,   136,   137,
     138,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,   148,   149,   150,   151,   814,   815,   816,   817,
     818,   819,   820,   153,   154,   155,   156,   157,   158,   159,
     821,   822,   162,   823,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   661,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   824,   191,
     192,   193,   194,   825,   826,   196,     0,   197,   198,   827,
     200,     0,   201,     0,   202,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,   236,   828,   829,     0,   830,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,     0,   250,   251,   252,   253,     0,   254,   255,   256,
     831,   832,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   833,   282,   834,   284,
     285,   286,   287,   835,   288,   289,   290,   291,   836,   837,
     293,   838,   295,   296,   297,     0,   298,   299,     0,     0,
     839,   301,   302,     0,     0,   303,   304,   305,   306,   307,
     840,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   841,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   842,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,   356,   357,   358,   359,   843,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   844,   377,   378,   379,   380,   381,
     382,   383,   384,   845,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   846,
       0,   401,   402,     0,   403,   404,   405,   406,   407,   408,
     409,     0,   847,   848,     0,     0,   412,   413,   849,   415,
     850,   851,   417,   418,   852,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   853,     0,   430,
     431,   432,   433,   434,   435,   854,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   855,
       0,     0,     0,     0,     0,     0,   856,   857,     0,     0,
       0,     0,     0,   859,     0,   860,  1610,     0,     0,     0,
     861,     0,   862,   863,   988,   798,   538,   799,   800,   801,
     802,   803,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,   804,     0,     0,   102,
     103,     0,   104,   105,   106,   990,   108,   109,   110,   111,
     805,   991,   806,   807,     0,   116,   117,   118,   119,   120,
     121,   808,   809,   122,   123,   810,   811,   126,     0,   127,
     128,   129,   130,   812,     0,   992,     0,   133,   134,   135,
     136,   137,   993,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,   994,   149,   150,   151,   814,   815,
     816,   995,   818,   819,   820,   153,   154,   155,   156,   157,
     158,   159,   821,   822,   162,   823,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   661,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     824,   191,   192,   193,   194,   825,   826,   196,     0,   197,
     198,   827,   200,     0,   201,     0,   202,   997,     0,   998,
     205,   206,   207,   999,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,  1000,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,  1001,   232,   233,   234,   235,   236,   828,   829,     0,
     830,     0,   240,  1002,  1003,   243,  1004,   245,   246,   247,
     248,   249,     0,     0,   250,  1005,   252,  1006,     0,   254,
     255,   256,   831,   832,   257,   258,   259,   260,   261,  1007,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   833,  1008,
     834,   284,   285,   286,   287,   835,   288,   289,  1009,   291,
     836,   837,   293,   838,   295,   296,   297,     0,   298,   299,
       0,     0,   839,   301,   302,     0,     0,   303,   304,  1010,
     306,  1011,   840,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   841,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   842,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,  1012,   357,   358,   359,   843,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   844,   377,   378,   379,
     380,   381,  1013,   383,   384,   845,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,  1014,
     399,   846,     0,   401,   402,     0,   403,  1015,   405,   406,
     407,   408,   409,     0,   847,   848,     0,     0,   412,   413,
     849,   415,   850,   851,   417,   418,  1016,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   853,
       0,   430,   431,   432,   433,   434,   435,   854,  1819,   437,
    1018,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   855,     0,     0,     0,     0,     0,     0,   856,   857,
       0,     0,     0,     0,     0,   859,     0,   860,     0,     0,
       0,     0,   861,     0,   862,   863,    90,   798,   538,   799,
     800,   801,   802,   803,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,   804,     0,
       0,   102,   103,     0,   104,   105,   106,   107,   108,   109,
     110,   111,   805,   113,   806,   807,     0,   116,   117,   118,
     119,   120,   121,   808,   809,   122,   123,   810,   811,   126,
       0,   127,   128,   129,   130,   812,     0,   813,     0,   133,
     134,   135,   136,   137,   138,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,   148,   149,   150,   151,
     814,   815,   816,   817,   818,   819,   820,   153,   154,   155,
     156,   157,   158,   159,   821,   822,   162,   823,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   661,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   824,   191,   192,   193,   194,   825,   826,   196,
       0,   197,   198,   827,   200,     0,   201,     0,   202,   203,
    1617,   204,   205,   206,   207,   208,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,   236,   828,
     829,     0,   830,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,     0,   250,   251,   252,   253,
       0,   254,   255,   256,   831,   832,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     833,   282,   834,   284,   285,   286,   287,   835,   288,   289,
     290,   291,   836,   837,   293,   838,   295,   296,   297,     0,
     298,   299,     0,     0,   839,   301,   302,     0,     0,   303,
     304,   305,   306,   307,   840,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   841,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   842,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,   356,   357,   358,   359,
     843,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   844,   377,
     378,   379,   380,   381,   382,   383,   384,   845,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   846,     0,   401,   402,     0,   403,   404,
     405,   406,   407,   408,   409,     0,   847,   848,     0,     0,
     412,   413,   849,   415,   850,   851,   417,   418,   852,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   853,     0,   430,   431,   432,   433,   434,   435,   854,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   855,     0,     0,     0,     0,     0,     0,
     856,   857,     0,     0,     0,     0,     0,   859,     0,   860,
       0,     0,     0,     0,   861,     0,   862,   863,    90,   798,
     538,   799,   800,   801,   802,   803,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
     804,     0,     0,   102,   103,     0,   104,   105,   106,   107,
     108,   109,   110,   111,   805,   113,   806,   807,     0,   116,
     117,   118,   119,   120,   121,   808,   809,   122,   123,   810,
     811,   126,     0,   127,   128,   129,   130,   812,     0,   813,
       0,   133,   134,   135,   136,   137,   138,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,   148,   149,
     150,   151,   814,   815,   816,   817,   818,   819,   820,   153,
     154,   155,   156,   157,   158,   159,   821,   822,   162,   823,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   661,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   824,   191,   192,   193,   194,   825,
     826,   196,     0,   197,   198,   827,   200,     0,   201,     0,
     202,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
     236,   828,   829,     0,   830,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,     0,   250,   251,
     252,   253,     0,   254,   255,   256,   831,   832,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   833,   282,   834,   284,   285,   286,   287,   835,
     288,   289,   290,   291,   836,   837,   293,   838,   295,   296,
     297,     0,   298,   299,     0,     0,   839,   301,   302,     0,
       0,   303,   304,   305,   306,   307,   840,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     841,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   842,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,   356,   357,
     358,   359,   843,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     844,   377,   378,   379,   380,   381,   382,   383,   384,   845,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   846,     0,   401,   402,     0,
     403,   404,   405,   406,   407,   408,   409,     0,   847,   848,
       0,     0,   412,   413,   849,   415,   850,   851,   417,   418,
     852,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   853,     0,   430,   431,   432,   433,   434,
     435,   854,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   855,     0,     0,     0,     0,
       0,     0,   856,   857,     0,     0,     0,     0,     0,   859,
       0,   860,     0,     0,     0,     0,   861,     0,   862,   863,
     988,   798,   538,   799,   800,   801,   802,   803,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,   804,     0,     0,   102,   103,     0,   104,   105,
     106,   990,   108,   109,   110,   111,   805,   991,   806,   807,
       0,   116,   117,   118,   119,   120,   121,   808,   809,   122,
     123,   810,   811,   126,     0,   127,   128,   129,   130,   812,
       0,   992,     0,   133,   134,   135,   136,   137,   993,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
     994,   149,   150,   151,   814,   815,   816,   995,   818,   819,
     820,   153,   154,   155,   156,   157,   158,   159,   821,   822,
     162,   823,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     661,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   824,   191,   192,   193,
     194,   825,   826,   196,     0,   197,   198,   827,   200,     0,
     201,     0,   202,   997,     0,   998,   205,   206,   207,   999,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   218,  1000,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,  1001,   232,   233,
     234,   235,   236,   828,   829,     0,   830,     0,   240,  1002,
    1003,   243,  1004,   245,   246,   247,   248,   249,     0,     0,
     250,  1005,   252,  1006,     0,   254,   255,   256,   831,   832,
     257,   258,   259,   260,   261,  1007,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   833,  1008,   834,   284,   285,   286,
     287,   835,   288,   289,  1009,   291,   836,   837,   293,   838,
     295,   296,   297,     0,   298,   299,     0,     0,   839,   301,
     302,     0,     0,   303,   304,  1010,   306,  1011,   840,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   841,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   842,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
    1012,   357,   358,   359,   843,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   844,   377,   378,   379,   380,   381,  1013,   383,
     384,   845,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,  1014,   399,   846,     0,   401,
     402,     0,   403,  1015,   405,   406,   407,   408,   409,     0,
     847,   848,     0,     0,   412,   413,   849,   415,   850,   851,
     417,   418,  1016,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   853,     0,   430,   431,   432,
     433,   434,   435,   854,     0,   437,  1018,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   855,     0,     0,
       0,     0,     0,     0,   856,   857,     0,     0,     0,     0,
       0,   859,     0,   860,     0,     0,     0,     0,   861,     0,
     862,   863,    90,   798,   538,   799,   800,   801,   802,   803,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,   804,     0,     0,   102,   103,     0,
     104,   105,   106,   107,   108,   109,   110,   111,   805,   113,
     806,   807,     0,   116,   117,   118,   119,   120,   121,   808,
     809,   122,   123,   810,   811,   126,     0,   127,   128,   129,
     130,   812,     0,   813,     0,   133,   134,   135,   136,   137,
     138,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,   148,   149,   150,   151,   814,   815,   816,   817,
     818,   819,   820,   153,   154,   155,   156,   157,   158,   159,
     821,   822,   162,   823,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   661,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   824,   191,
     192,   193,   194,   825,   826,   196,     0,   197,   198,   827,
     200,     0,   201,     0,   202,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,   236,   828,   829,     0,   830,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,     0,   250,   251,   252,   253,     0,   254,   255,   256,
     831,   832,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   833,   282,   834,   284,
     285,   286,   287,   835,   288,   289,   290,   291,   836,   837,
     293,   838,   295,   296,   297,     0,   298,   299,     0,     0,
     839,   301,   302,     0,     0,   303,   304,   305,   306,   307,
     840,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   841,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   842,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,   356,   357,   358,   359,   843,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   844,   377,   378,   379,   380,   381,
     382,   383,   384,   845,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   846,
       0,   401,   402,     0,   403,   404,   405,   406,   407,   408,
     409,     0,   847,   848,     0,     0,   412,   413,   849,   415,
     850,   851,   417,   418,   852,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   853,     0,   430,
     431,   432,   433,   434,   435,   854,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   855,
       0,     0,     0,     0,     0,     0,  1377,  1378,     0,     0,
       0,     0,     0,   859,     0,   860,     0,     0,     0,     0,
     861,     0,   862,   863,    90,  1744,   538,   799,   800,   801,
     802,   803,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,   804,     0,     0,   102,
     103,     0,   104,   105,   106,   107,   108,   109,   110,   111,
     805,   113,   806,   807,     0,   116,   117,   118,   119,   120,
     121,   808,   809,   122,   123,   810,   811,   126,     0,   127,
     128,   129,   130,   812,     0,   813,     0,   133,   134,   135,
     136,   137,   138,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,   148,   149,   150,   151,   814,   815,
     816,   817,   818,   819,   820,   153,   154,   155,   156,   157,
     158,   159,   821,   822,   162,   823,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   661,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     824,   191,   192,   193,   194,   825,   826,   196,     0,   197,
     198,   827,   200,     0,   201,     0,   202,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,   236,   828,   829,     0,
     830,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,     0,   250,   251,   252,   253,     0,   254,
     255,   256,   831,   832,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   833,   282,
     834,   284,   285,   286,   287,   835,   288,   289,   290,   291,
     836,   837,   293,   838,   295,   296,   297,     0,   298,   299,
       0,     0,   839,   301,   302,     0,     0,   303,   304,   305,
     306,   307,   840,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   841,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   842,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,   356,   357,   358,   359,   843,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   844,   377,   378,   379,
     380,   381,   382,   383,   384,   845,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   846,     0,   401,   402,     0,   403,   404,   405,   406,
     407,   408,   409,     0,   847,   848,     0,     0,   412,   413,
     849,   415,   850,   851,   417,   418,   852,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   853,
       0,   430,   431,   432,   433,   434,   435,   854,     0,   437,
     438,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   855,     0,     0,     0,     0,     0,     0,   856,   857,
       0,     0,     0,     0,     0,   859,     0,   860,     0,     0,
       0,     0,   861,     0,   862,   863,    90,   798,   538,   799,
     800,   801,   802,   803,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,   804,     0,
       0,   102,   103,     0,   104,   105,   106,   107,   108,   109,
     110,   111,   805,   113,   806,   807,     0,   116,   117,   118,
     119,   120,   121,   808,   809,   122,   123,   810,   811,   126,
       0,   127,   128,   129,   130,   812,     0,   813,     0,   133,
     134,   135,   136,   137,   138,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,   148,   149,   150,   151,
     814,   815,   816,   817,   818,   819,   820,   153,   154,   155,
     156,   157,   158,   159,   821,   822,   162,   823,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   661,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   824,   191,   192,   193,   194,   825,   826,   196,
       0,   197,   198,   827,   200,     0,   201,     0,   202,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,   236,   828,
     829,     0,   830,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,     0,   250,   251,   252,   253,
       0,   254,   255,   256,   831,   832,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     833,   282,   834,   284,   285,   286,   287,   835,   288,   289,
     290,   291,   836,   837,   293,   838,   295,   296,   297,     0,
     298,   299,     0,     0,   839,   301,   302,     0,     0,   303,
     304,   305,   306,   307,   840,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   841,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   842,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,   356,   357,   358,   359,
     843,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   844,   377,
     378,   379,   380,   381,   382,   383,   384,   845,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   846,     0,   401,   402,     0,   403,   404,
     405,   406,   407,   408,   409,     0,   847,   848,     0,     0,
     412,   413,   849,   415,   850,   851,   417,   418,   852,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   853,     0,   430,   431,   432,   433,   434,   435,   854,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   855,     0,     0,     0,     0,     0,     0,
     856,   857,     0,     0,     0,     0,     0,   859,     0,  2609,
       0,     0,     0,     0,   861,     0,   862,   863,    90,   798,
     538,   799,   800,   801,   802,   803,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
     804,     0,     0,   102,   103,     0,   104,   105,   106,   107,
     108,   109,   110,  2808,   805,   113,   806,   807,     0,   116,
     117,   118,   119,   120,   121,   808,   809,   122,   123,   810,
     811,   126,     0,   127,   128,   129,   130,   812,     0,   813,
       0,   133,   134,   135,   136,   137,   138,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,   148,   149,
     150,  2809,   814,   815,   816,   817,   818,   819,   820,   153,
     154,   155,   156,   157,   158,   159,   821,   822,   162,   823,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   661,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   824,   191,   192,   193,   194,   825,
     826,   196,     0,   197,   198,   827,   200,     0,   201,     0,
     202,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
     236,   828,   829,     0,   830,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,     0,   250,   251,
     252,   253,     0,   254,   255,   256,   831,   832,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   833,   282,   834,   284,   285,   286,   287,   835,
     288,   289,   290,   291,   836,   837,   293,   838,   295,   296,
     297,     0,   298,   299,     0,     0,   839,   301,   302,     0,
       0,   303,   304,   305,   306,   307,   840,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     841,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   842,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,   356,   357,
     358,   359,   843,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     844,   377,   378,   379,   380,   381,   382,   383,   384,   845,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   846,     0,   401,   402,     0,
     403,   404,   405,   406,   407,   408,   409,     0,   847,   848,
       0,     0,   412,   413,   849,   415,   850,   851,   417,   418,
     852,   420,   421,  2810,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   853,     0,   430,   431,   432,   433,   434,
     435,   854,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   855,     0,     0,     0,     0,
       0,     0,   856,   857,     0,     0,     0,     0,     0,   859,
       0,   860,     0,     0,     0,     0,   861,     0,   862,   863,
      90,   798,   538,   799,   800,   801,   802,   803,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,   804,     0,     0,   102,   103,     0,   104,   105,
     106,   107,   108,   109,   110,   111,   805,   113,   806,   807,
       0,   116,   117,   118,   119,   120,   121,   808,   809,   122,
     123,   810,   811,   126,     0,   127,   128,   129,   130,   812,
       0,   813,     0,   133,   134,   135,   136,   137,   138,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
     148,   149,   150,  2809,   814,   815,   816,   817,   818,   819,
     820,   153,   154,   155,   156,   157,   158,   159,   821,   822,
     162,   823,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     661,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   824,   191,   192,   193,
     194,   825,   826,   196,     0,   197,   198,   827,   200,     0,
     201,     0,   202,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,   236,   828,   829,     0,   830,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,     0,
     250,   251,   252,   253,     0,   254,   255,   256,   831,   832,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   833,   282,   834,   284,   285,   286,
     287,   835,   288,   289,   290,   291,   836,   837,   293,   838,
     295,   296,   297,     0,   298,   299,     0,     0,   839,   301,
     302,     0,     0,   303,   304,   305,   306,   307,   840,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   841,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   842,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
     356,   357,   358,   359,   843,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   844,   377,   378,   379,   380,   381,   382,   383,
     384,   845,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   846,     0,   401,
     402,     0,   403,   404,   405,   406,   407,   408,   409,     0,
     847,   848,     0,     0,   412,   413,   849,   415,   850,   851,
     417,   418,   852,   420,   421,  2810,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   853,     0,   430,   431,   432,
     433,   434,   435,   854,     0,   437,   438,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   855,     0,     0,
       0,     0,     0,     0,   856,   857,     0,     0,     0,     0,
       0,   859,     0,   860,     0,     0,     0,     0,   861,     0,
     862,   863,    90,   798,   538,   799,   800,   801,   802,   803,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,   804,     0,     0,   102,   103,     0,
     104,   105,   106,   107,   108,   109,   110, -1684,   805,   113,
     806,   807,     0,   116,   117,   118,   119,   120,   121,   808,
     809,   122,   123,   810,   811,   126,     0,   127,   128,   129,
     130,   812,     0,   813,     0,   133,   134,   135,   136,   137,
     138,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,   148,   149,   150,  2809,   814,   815,   816,   817,
     818,   819,   820,   153,   154,   155,   156,   157,   158,   159,
     821,   822,   162,   823,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   661,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   824,   191,
     192,   193,   194,   825,   826,   196,     0,   197,   198,   827,
     200,     0,   201,     0,   202,   203,     0,   204,   205,   206,
     207, -1684,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218, -1684,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,   236,   828,   829,     0,   830,     0,
     240,     0,     0,   243,   244,   245,   246,   247,   248,   249,
       0,     0,   250,   251,   252, -1684,     0,   254,   255,   256,
     831,   832,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   833,   282,   834,   284,
     285,   286,   287,     0,   288,   289,     0,   291,   836,   837,
     293,   838,   295,   296,   297,     0,   298,   299,     0,     0,
     839,   301,   302,     0,     0,   303,   304,   305,   306,   307,
     840,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   841,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   842,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,   356,   357,   358,   359,   843,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   844,   377,   378,   379,   380,   381,
   -1684,   383,   384,   845,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   846,
       0,   401,   402,     0,   403,   404,   405,   406,   407,   408,
     409,     0,   847,   848,     0,     0,   412,   413,   849,   415,
     850,   851,   417,   418,   852,   420,   421,  2810,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   853,     0,   430,
     431,   432,   433,   434,   435,   854,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464, -1684,
       0,     0,     0,     0,     0,     0,   856,   857,     0,     0,
       0,     0,     0,   859,     0,   860,     0,     0,     0,     0,
     861,     0,   862,   863,    90,   798,   538,   799,   800,   801,
     802,   803,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,   107,   108,   109,   110,   111,
     805,   113,   806,   807,     0,   116,   117,   118,   119,   120,
     121,   808,   809,   122,   123,   810,   811,   126,     0,   127,
     128,   129,   130,   812,     0,   813,     0,   133,   134,   135,
     136,   137,   138,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,   148,   149,   150,   151,   814,   815,
     816,   817,   818,   819,   820,   153,   154,   155,   156,   157,
     158,   159,   821,   822,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   661,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     824,   191,   192,   193,   194,   825,   826,   196,     0,   197,
     198,   827,   200,     0,   201,     0,   202,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,   236,   828,   829,     0,
     830,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,     0,   250,   251,   252,   253,     0,   254,
     255,   256,   831,   832,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   833,   282,
     834,   284,   285,   286,   287,     0,   288,   289,   290,   291,
     836,   837,   293,   838,   295,   296,   297,     0,   298,   299,
       0,     0,   839,   301,   302,     0,     0,   303,   304,   305,
     306,   307,   840,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   841,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   842,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   844,   377,   378,   379,
     380,   381,   382,   383,   384,   845,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   846,     0,   401,   402,     0,   403,   404,   405,   406,
     407,   408,   409,     0,   847,   848,     0,     0,   412,   413,
     849,   415,   850,   851,   417,   418,   852,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   853,
       0,   430,   431,   432,   433,   434,   435,   854,     0,   437,
     438,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,     0,     0,     0,     0,     0,     0,     0,  1602,  1603,
       0,     0,    90,   798,   538,   799,   800,  1604,   802,   803,
       0,     0,     0,     0,   862,   863,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,   107,   108,   109,   110,   111,   805,   113,
     806,   807,     0,   116,   117,   118,   119,   120,   121,   808,
     809,   122,   123,   810,   811,   126,     0,   127,   128,   129,
     130,   812,     0,   813,     0,   133,   134,   135,   136,   137,
     138,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,   148,   149,   150,   151,   814,   815,   816,   817,
     818,   819,   820,   153,   154,   155,   156,   157,   158,   159,
     821,   822,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   661,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   824,   191,
     192,   193,   194,   825,   826,   196,     0,   197,   198,   827,
     200,     0,   201,     0,   202,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,   236,   828,   829,     0,   830,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,     0,   250,   251,   252,   253,     0,   254,   255,   256,
     831,   832,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   833,   282,   834,   284,
     285,   286,   287,     0,   288,   289,   290,   291,   836,   837,
     293,   838,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,   305,   306,   307,
     840,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   841,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   842,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,   356,   357,   358,   359,  1733,  1734,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   844,   377,   378,   379,   380,   381,
     382,   383,   384,   845,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   846,
       0,   401,   402,     0,   403,   404,   405,   406,   407,   408,
     409,     0,   847,   848,     0,     0,   412,   413,   849,   415,
     850,   851,   417,   418,   852,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   853,     0,   430,
     431,   432,   433,   434,   435,   854,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,     0,
       0,     0,     0,     0,     0,     0,  1735,  1736,     0,     0,
       0,     0,     0,     0,     0,  1604,     0,     0,     0,     0,
       0,     0,   862,   863,    90,   798,   538,   799,   800,   801,
     802,   803,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,   107,   108,   109,   110,   111,
     805,   113,   806,   807,     0,   116,   117,   118,   119,   120,
     121,   808,   809,   122,   123,   810,   811,   126,     0,   127,
     128,   129,   130,   812,     0,   813,     0,   133,   134,   135,
     136,   137,   138,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,   148,   149,   150,   151,   814,   815,
     816,   817,   818,   819,   820,   153,   154,   155,   156,   157,
     158,   159,   821,   822,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   661,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     824,   191,   192,   193,   194,   825,   826,   196,     0,   197,
     198,   827,   200,     0,   201,     0,   202,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,   236,   828,   829,     0,
     830,     0,   240,     0,   242,   243,   244,   245,   246,   247,
     248,   249,     0,     0,   250,   251,   252,   253,     0,   254,
     255,   256,   831,   832,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   833,   282,
     834,   284,   285,   286,   287,     0,   288,   289,   290,   291,
     836,   837,   293,   838,   295,   296,   297,     0,   298,   299,
       0,     0,   839,   301,   302,     0,     0,   303,   304,   305,
     306,   307,   840,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   841,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   842,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   844,   377,   378,   379,
     380,   381,   382,   383,   384,   845,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   846,     0,   401,   402,     0,   403,   404,   405,   406,
     407,   408,   409,     0,   847,   848,     0,     0,   412,   413,
     849,   415,   850,   851,   417,   418,   852,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   853,
       0,   430,   431,   432,   433,   434,   435,   854,     0,   437,
     438,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,     0,     0,     0,     0,     0,     0,     0,  1602,  1603,
       0,     0,     0,     0,     0,     0,     0,  1604,     0,     0,
       0,     0,     0,     0,   862,   863,    90,   798,   538,   799,
     800,   801,   802,   803,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,   804,     0,
       0,   102,   103,     0,   104,   105,   106,   107,   108,   109,
     110,     0,   805,   113,   806,   807,     0,   116,   117,   118,
     119,   120,   121,   808,   809,   122,   123,   810,   811,   126,
       0,   127,   128,   129,   130,   812,     0,   813,     0,   133,
     134,   135,   136,   137,   138,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,   148,   149,   150,   151,
     814,   815,   816,   817,   818,   819,   820,   153,   154,   155,
     156,   157,   158,   159,   821,   822,   162,   823,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   661,   178,   179,     0,
     180,   181,   182,     0,   183,     0,   185,     0,   186,   187,
     188,   189,   824,   191,   192,   193,   194,   825,   826,   196,
       0,   197,   198,   827,   200,     0,   201,     0,   202,   203,
       0,   204,   205,   206,   207,     0,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,   236,   828,
     829,     0,   830,     0,   240,     0,     0,   243,   244,   245,
     246,   247,   248,   249,     0,     0,   250,   251,   252,     0,
       0,   254,   255,   256,   831,   832,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     833,   282,   834,   284,   285,   286,   287,     0,   288,   289,
       0,   291,   836,   837,   293,   838,   295,   296,   297,     0,
     298,   299,     0,     0,   839,   301,   302,     0,     0,   303,
     304,   305,   306,   307,   840,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   841,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   842,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,   356,   357,   358,   359,
     843,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   844,   377,
     378,   379,   380,   381,     0,   383,   384,   845,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   846,     0,   401,   402,     0,   403,   404,
     405,   406,   407,   408,   409,     0,   847,   848,     0,     0,
     412,   413,   849,   415,   850,   851,   417,   418,   852,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   853,     0,   430,   431,   432,   433,   434,   435,   854,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,     0,     0,     0,     0,     0,     0,     0,
     856,   857,   490,     0,     0,     0,     0,   859,     0,   860,
       0,     0,     0,     0,   861,     0,   862,   863,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,  2249,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   111,   112,     0,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   131,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,  -589,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,     0,     0,  -589,   205,   206,
     207,     0,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,  -589,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,     0,     0,   243,  -589,   245,   246,   247,   248,   249,
       0,     0,   250,  -589,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   492,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,  -589,   283,   284,
     285,   286,   287,     0,   288,   289,     0,   291,     0,   292,
     293,   294,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,  -589,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   494,   399,   400,
       0,   401,   402,     0,   403,  -589,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,   412,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,   435,   436,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,     0,
       0,    90,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   920,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,   809,
     122,   123,   124,   125,   126,     0,   127,   128,   129,   130,
     812,     0,   813,     0,   133,   134,   135,   136,   137,   138,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,   148,   149,   150,   151,   814,   815,   816,   817,   818,
     819,   820,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   825,     0,   196,     0,   197,   198,   199,   200,
       0,   201,     0,   202,   203,     0,   204,   205,   206,   207,
     208,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,  2010,
       0,   250,   251,   252,   253,     0,   254,   255,   256,   831,
     832,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,     0,   288,   289,   290,   291,     0,   837,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   564,   300,
     301,   302,     0,     0,   303,   304,   305,   306,   307,   840,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   841,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,   356,   357,   358,   359,   360,  2011,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,    25,   372,   373,
     374,   375,   376,   844,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   846,     0,
     401,   402,    29,   403,   404,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   849,   415,   850,
       0,   417,   418,   852,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   853,     0,   430,   431,
     432,   433,   434,   601,   436,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,     0,    32,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,     0,    90,
      33,   563,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2012,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,     0,
     116,   117,   118,   119,   120,   121,     0,   809,   122,   123,
     124,   125,   126,     0,   127,   128,   129,   130,   812,     0,
     813,     0,   133,   134,   135,   136,   137,   138,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,   148,
     149,   150,   151,   814,   815,   816,   817,   818,   819,   820,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     825,     0,   196,     0,   197,   198,   199,   200,     0,   201,
       0,   202,   203,     0,   204,   205,   206,   207,   208,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,   236,   237,   238,     0,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,  2010,     0,   250,
     251,   252,   253,     0,   254,   255,   256,   831,   832,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
       0,   288,   289,   290,   291,     0,   837,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   564,   300,   301,   302,
       0,     0,   303,   304,   305,   306,   307,   840,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   841,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,   356,
     357,   358,   359,   360,  2011,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   844,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   846,     0,   401,   402,
       0,   403,   404,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,   412,   413,   849,   415,   850,     0,   417,
     418,   852,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   853,     0,   430,   431,   432,   433,
     434,   435,   436,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,     0,    90,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2012,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
       0,     0,   102,   103,     0,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,     0,   116,   117,
     118,   119,   120,   121,     0,   809,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   812,     0,   813,     0,
     133,   134,   135,   136,   137,   138,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,   148,   149,   150,
     151,   814,   815,   816,   817,   818,   819,   820,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   825,     0,
     196,     0,   197,   198,   199,   200,     0,   201,     0,   202,
     203,     0,   204,   205,   206,   207,   208,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,   236,
     237,   238,     0,   239,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,     0,   250,   251,   252,
     253,     0,   254,   255,   256,   831,   832,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,     0,   288,
     289,   290,   291,     0,   837,   293,   294,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,   305,   306,   307,   840,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   841,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,   356,   357,   358,
     359,   360,  2011,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   844,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   846,     0,   401,   402,     0,   403,
     404,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,   412,   413,   849,   415,   850,     0,   417,   418,   852,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   853,     0,   430,   431,   432,   433,   434,   435,
     436,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,     0,    90,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,     0,   116,   117,   118,   119,
     120,   121,     0,   809,   122,   123,   124,   125,   126,     0,
     127,   128,   129,   130,   812,     0,   813,     0,   133,   134,
     135,   136,   137,   138,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,   148,   149,   150,   151,   814,
     815,   816,   817,   818,   819,   820,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   825,     0,   196,     0,
     197,   198,   199,   200,     0,   201,     0,   202,   203,     0,
     204,   205,   206,   207,   208,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,   236,   237,   238,
       0,   239,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,     0,   250,   251,   252,   253,     0,
     254,   255,   256,   831,   832,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,     0,   288,   289,   290,
     291,     0,   837,   293,   294,   295,   296,   297,     0,   298,
     299,     0,     0,   300,   301,   302,     0,     0,   303,   304,
     305,   306,   307,   840,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   841,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   844,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   846,     0,   401,   402,     0,   403,   404,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,   412,
     413,   849,   415,   850,     0,   417,   418,   852,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
     853,     0,   430,   431,   432,   433,   434,   435,   436,     0,
     437,   438,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,     0,   728,  1211,   538,     0,     0,     0,   802,
       0,     0,     0,     0,     0,     0,     0,     0,  2620,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,     0,     0,     0,   102,   103,
       0,   104,   105,   106,     0,   108,   109,   110,   729,   730,
       0,   731,   732,     0,   116,   117,   118,   119,   120,   121,
       0,     0,   122,   123,   733,   734,   126,     0,   127,   128,
     129,   130,   735,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   736,   737,   162,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   177,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   738,
     191,   192,   193,   194,   739,  1212,   196,     0,   197,   198,
     740,   200,     0,   201,     0,   202,     0,     0,     0,   205,
     206,   207,     0,   209,     0,   210,     0,   741,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   742,   233,   234,   235,   236,   743,   744,     0,   745,
       0,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,   252,     0,     0,   254,   255,
     256,     0,     0,   257,   258,   259,   260,   261,   746,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   747,     0,   748,
     284,   285,   286,   749,     0,   288,   289,     0,   291,     0,
     750,   293,   751,   295,   296,   297,     0,   298,   299,  1213,
       0,   300,   301,   302,     0,     0,   303,   752,     0,   306,
       0,   753,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   754,   322,   323,   755,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   756,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,     0,   357,   358,   359,   757,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   758,   379,   380,
     381,     0,   383,   384,   759,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   760,   399,
     761,     0,   401,   402,     0,   403,     0,   405,   406,   407,
     408,   409,     0,   762,   763,     0,     0,   412,   413,   764,
     415,   765,  1214,   417,   418,   766,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,     0,     0,
     430,   431,   432,   433,   434,  1103,   768,     0,   437,     0,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   461,   462,   463,   464,
       0,   728,     0,     0,     0,     0,     0,  1215,  1216,  1895,
       0,     0,     0,     0,     0,     0,  1896,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     3,
       4,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   729,   730,     0,   731,
     732,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   733,   734,   126,     0,   127,   128,   129,   130,
     735,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   736,
     737,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   738,   191,   192,
     193,   194,   739,     0,   196,     0,   197,   198,   740,   200,
       0,   201,     0,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   741,   212,     0,   213,   214,
     215,   216,   217,   218,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   742,
     233,   234,   235,   236,   743,   744,     0,   745,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,     0,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   746,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   747,     0,   748,   284,   285,
     286,   749,     0,   288,   289,     0,   291,     0,   750,   293,
     751,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,   752,     0,   306,     0,   753,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   754,   322,   323,   755,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     756,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   757,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,    25,   372,   373,
     374,   375,   376,     0,   377,   758,   379,   380,   381,     0,
     383,   384,   759,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   760,   399,   761,     0,
     401,   402,    29,   403,     0,   405,   406,   407,   408,   409,
       0,   762,   763,     0,     0,   412,   413,   764,   415,   765,
       0,   417,   418,   766,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   767,   768,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,    32,   444,   445,   446,
     447,   448,   449,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   461,   462,   463,   464,     0,   490,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,    91,    92,    93,    94,    95,
      96,    97,    98,   598,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
       0,   108,   109,   110,   111,   112,     0,   114,   115,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     124,   125,   126,     0,   127,   128,   129,   130,   131,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,     0,   196,     0,   197,   198,   199,   200,     0,   201,
       0,   202,     0,     0,     0,   205,   206,   207,     0,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,     0,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   232,   233,   234,
     235,   236,   237,   238,     0,   239,     0,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,   252,     0,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,   492,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,     0,   283,   284,   285,   286,   287,
       0,   288,   289,     0,   291,     0,   292,   293,   294,   295,
     296,   297,     0,   298,   299,     0,     0,   300,   301,   302,
       0,     0,   303,   304,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,     0,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,    25,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   494,   399,   400,     0,   401,   402,
      29,   403,     0,   405,   406,   407,   408,   409,     0,   599,
     411,     0,     0,   600,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,   601,   436,     0,   437,     0,   439,   440,   441,   442,
       0,     0,   443,     0,    32,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   490,    33,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
       0,     0,   102,   103,     0,   104,   105,   106,     0,   108,
     109,   110,   111,   112,     0,   114,   115,     0,   116,   117,
     118,   119,   120,   121,     0,     0,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   131,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,     0,
     196,     0,   197,   198,   199,   200,     0,   201,     0,   202,
       0,     0,     0,   205,   206,   207,     0,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
       0,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   232,   233,   234,   235,   236,
     237,   238,     0,   239,     0,   240,     0,     0,   243,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,   252,
       0,     0,   254,   255,   256,     0,     0,   257,   258,   259,
     260,   261,   492,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,     0,   283,   284,   285,   286,   287,     0,   288,
     289,     0,   291,     0,   292,   293,   294,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,     0,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,    25,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   494,   399,   400,     0,   401,   402,    29,   403,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,   412,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,     0,   430,   431,   432,   433,   434,   601,
     436,     0,   437,     0,   439,   440,   441,   442,     0,     0,
     443,     0,    32,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,     0,   490,    33,   563,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,     0,   108,   109,   110,
     111,   112,     0,   114,   115,     0,   116,   117,   118,   119,
     120,   121,     0,     0,   122,   123,   124,   125,   126,     0,
     127,   128,   129,   130,   131,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,     0,   196,     0,
     197,   198,   199,   200,     0,   201,     0,   202,     0,     0,
       0,   205,   206,   207,     0,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   232,   233,   234,   235,   236,   237,   238,
       0,   239,     0,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,   252,     0,     0,
     254,   255,   256,     0,     0,   257,   258,   259,   260,   261,
     492,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
       0,   283,   284,   285,   286,   287,     0,   288,   289,     0,
     291,     0,   292,   293,   294,   295,   296,   297,     0,   298,
     299,     0,     0,   300,   301,   302,     0,     0,   303,   304,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,     0,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     494,   399,   400,     0,   401,   402,     0,   403,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,   412,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,     0,
     437,     0,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,     0,   490,     0,   563,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   901,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,     0,     0,     0,   102,   103,
       0,   104,   105,   106,     0,   108,   109,   110,   111,   112,
       0,   114,   115,     0,   116,   117,   118,   119,   120,   121,
       0,     0,   122,   123,   124,   125,   126,     0,   127,   128,
     129,   130,   131,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   177,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,     0,   196,     0,   197,   198,
     199,   200,     0,   201,     0,   202,     0,     0,     0,   205,
     206,   207,     0,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   232,   233,   234,   235,   236,   237,   238,     0,   239,
       0,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,   252,     0,     0,   254,   255,
     256,     0,     0,   257,   258,   259,   260,   261,   492,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,     0,   283,
     284,   285,   286,   287,     0,   288,   289,     0,   291,     0,
     292,   293,   294,   295,   296,   297,     0,   298,   299,     0,
       0,   300,   301,   302,     0,     0,   303,   304,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,     0,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   494,   399,
     400,     0,   401,   402,     0,   403,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,   412,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,     0,   437,     0,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
       0,   490,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2469,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   111,   112,     0,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   124,   125,   126,     0,   127,   128,   129,   130,
     131,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,     0,   197,   198,   199,   200,
       0,   201,     0,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,     0,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   492,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,     0,   283,   284,   285,
     286,   287,     0,   288,   289,     0,   291,     0,   292,   293,
     294,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,   304,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   494,   399,   400,     0,
     401,   402,     0,   403,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,     0,   490,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1723,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
       0,   108,   109,   110,   111,   112,     0,   114,   115,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     124,   125,   126,     0,   127,   128,   129,   130,   131,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,     0,   196,     0,   197,   198,   199,   200,     0,   201,
       0,   202,     0,     0,     0,   205,   206,   207,     0,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,     0,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   232,   233,   234,
     235,   236,   237,   238,     0,   239,     0,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,   252,     0,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,   492,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,     0,   283,   284,   285,   286,   287,
       0,   288,   289,     0,   291,     0,   292,   293,   294,   295,
     296,   297,     0,   298,   299,     0,     0,   300,   301,   302,
       0,     0,   303,   304,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,     0,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   494,   399,   400,     0,   401,   402,
       0,   403,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,   412,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,     0,   437,     0,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,     0,     0,     0,     0,
    2334,  1211,   538,     0,     0,  1584,   802,     0,     0,     0,
       0,     0,  2233,  1585,  1586,  1587,    91,    92,    93,    94,
      95,    96,    97,    98,  1031,    99,   100,   101,  1032,  1033,
    1034,  1035,  1036,  1037,  1038,   102,   103,  1039,   104,   105,
     106,  2335,   108,   109,   110,     0,   649,  2336,   651,   652,
    1040,   116,   117,   118,   119,   120,   121,  1041,  1042,   122,
     123,   653,   654,   126,  1043,   127,   128,   129,   130,     0,
    1044,  2337,  1045,   133,   134,   135,   136,   137,  2338,   139,
     140,   141,  1046,   142,   143,   144,   145,   146,   147,  1047,
    2339,   149,   150,   151,  1048,  1049,  1050,  2340,  1051,  1052,
    1053,   153,   154,   155,   156,   157,   158,   159,   659,   660,
     162,  1054,   163,  1055,   164,   165,   166,   167,   168,   169,
    1056,   170,   171,   172,   173,   174,  1057,  1058,   175,   176,
     661,   178,   179,  1059,   180,   181,   182,  1060,   183,   184,
     185,  1061,   186,   187,   188,   189,     0,   191,   192,   193,
     194,     0,  1062,   196,  1063,   197,   198,   662,   200,  1064,
     201,  1065,   202,  2341,  1066,  2342,   205,   206,   207,  2343,
     209,  1067,   210,  1068,     0,   212,  1069,   213,   214,   215,
     216,   217,   218,  2344,   220,   221,   222,   223,  1070,   224,
     225,   226,   227,   228,   229,  1071,   230,  2345,     0,   233,
     234,   235,   236,   669,   670,  1072,   671,  1073,   240,  2346,
    2347,   243,  2348,   245,   246,   247,   248,   249,  1074,  1075,
     250,  2349,   252,  2350,  1076,   254,   255,   256,  1077,  1078,
     257,   258,   259,   260,   261,  2351,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   678,  2352,   680,   284,   285,   286,
    2353,  1079,   288,   289,  2354,   291,  1080,     0,   293,   682,
     295,   296,   297,  1081,   298,   299,  1082,  1083,  2355,   301,
     302,  1084,  1085,   303,     0,  2356,   306,  2357,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,  1086,
     319,   320,     0,   322,   323,     0,   325,   326,   327,  1087,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   685,
     338,   339,   340,   341,  1088,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,  1089,   354,   355,
    2358,   357,   358,   359,   687,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,  1090,   372,   373,   374,
     375,   376,  1091,   377,  2359,   379,   380,   381,  2360,   383,
     384,   690,   386,  1092,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,  2361,   399,     0,  1093,   401,
     402,  1094,   403,  2362,   405,   406,   407,   408,   409,  1095,
     693,   694,  1096,  1097,   412,   413,     0,   415,     0,  1098,
     417,   418,  2363,   420,   421,   422,   423,   424,  1099,  1100,
     425,   426,   427,   428,   429,  1101,  1102,   430,   431,   432,
     433,   434,     0,   696,  1104,   437,  2364,   439,   440,   441,
     442,  1105,  1106,   443,  1107,  1108,   444,   445,   446,   447,
     448,   449,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   461,   462,   463,   464,     0,   490,     0,
    1588,  1589,  1590,  1584,  2365,  2366,  1593,  1594,  1595,  1596,
       0,  1585,  1586,  1587,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   111,   112,     0,   114,   115,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
       0,   196,     0,   197,   198,   199,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   232,   233,   234,   235,
     236,   237,   238,     0,   239,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   492,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,     0,   283,   284,   285,   286,   287,     0,
     288,   289,     0,   291,     0,   292,   293,   294,   295,   296,
     297,     0,   298,   299,     0,     0,   300,   301,   302,     0,
       0,   303,   304,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   494,   399,   400,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,   412,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,     0,     0,     0,  1588,  1589,
    1590,     0,  1591,  1592,  1593,  1594,  1595,  1596,  1283,     0,
       0,  1284,     0,     0,     0,     0,  1285,  1286,  1287,     0,
       0,     0,     0,     0,     0,     0,  1283,     0,     0,  1284,
       0,     0,     0,  1288,  1285,  1286,  1287,     0,     0,     0,
       0,  1290,     0,     0,  1283,     0,     0,  1284,  1291,     0,
       0,  1288,  1285,  1286,  1287,     0,     0,     0,     0,  1290,
       0,     0,     0,     0,     0,     0,  1291,     0,     0,  1288,
       0,     0,  1283,  1292,     0,  1284,     0,  1290,     0,     0,
    1285,  1286,  1287,     0,  1291,     0,     0,     0,     0,     0,
    1283,  1292,     0,  1284,     0,     0,     0,  1288,  1285,  1286,
    1287,     0,     0,     0,     0,  1290,     0,     0,  1283,  1292,
       0,  1284,  1291,     0,     0,  1288,  1285,  1286,  1287,     0,
       0,     0,     0,  1290,     0,     0,     0,     0,     0,     0,
    1291,     0,     0,  1288,     0,     0,     0,  1292,     0,     0,
       0,  1290,     0,     0,     0,     0,     0,     0,  1291,     0,
       0,     0,     0,     0,     0,  1292,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1293,  1292,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1294,     0,     0,     0,
    1293,  1295,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1294,     0,     0,     0,  1293,  1295,
       0,     0,  1296,  1297,     0,     0,     0,     0,     0,     0,
       0,     0,  1294,     0,     0,     0,  1298,  1295,     0,     0,
    1296,  1297,     0,     0,     0,     0,  1293,     0,     0,     0,
       0,     0,     0,     0,  1298,     0,     0,     0,  1296,  1297,
    1294,     0,     0,     0,  1293,  1295,     0,     0,     0,     0,
       0,     0,  1298,     0,  1299,     0,     0,  1300,  1294,     0,
       0,     0,  1293,  1295,     0,     0,  1296,  1297,     0,     0,
       0,  1301,  1299,     0,  1302,  1300,  1294,     0,     0,     0,
    1298,  1295,     0,     0,  1296,  1297,     0,     0,     0,  1301,
    1299,     0,  1302,  1300,     0,     0,     0,     0,  1298,     0,
       0,     0,  1296,  1297,     0,     0,     0,  1301,     0,     0,
    1302,     0,     0,     0,     0,     0,  1298,     0,  1299,     0,
       0,  1300,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1301,  1299,     0,  1302,  1300,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1301,  1299,     0,  1302,  1300,     0,     0,
       0,  1303,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1301,     0,     0,  1302,     0,     0,     0,     0,  1303,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1303,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1283,
       0,     0,  1284,     0,     0,     0,     0,  1285,  1286,  1287,
       0,     0,     0,     0,     0,  1303,     0,     0,     0,     0,
       0,     0,     0,     0,  1288,     0,     0,     0,     0,     0,
       0,     0,  1290,  1303,     0,     0,     0,     0,     0,  1291,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1304,  1303,     0,  1305,  1306,  1307,     0,  1308,  1309,  1310,
    1311,  1312,  1313,     0,  1292,     0,     0,  2211,  1304,     0,
       0,  1305,  1306,  1307,     0,  1308,  1309,  1310,  1311,  1312,
    1313,     0,     0,     0,     0,  2298,  1304,     0,     0,  1305,
    1306,  1307,     0,  1308,  1309,  1310,  1311,  1312,  1313,     0,
       0,     0,     0,  2420,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1304,     0,     0,  1305,  1306,  1307,
       0,  1308,  1309,  1310,  1311,  1312,  1313,     0,     0,     0,
       0,  2439,  1304,     0,     0,  1305,  1306,  1307,     0,  1308,
    1309,  1310,  1311,  1312,  1313,     0,     0,     0,     0,  2581,
    1304,     0,     0,  1305,  1306,  1307,     0,  1308,  1309,  1310,
    1311,  1312,  1313,  1293,     0,  1283,     0,  2779,  1284,     0,
       0,     0,     0,  1285,  1286,  1287,     0,  1294,     0,     0,
       0,     0,  1295,     0,     0,     0,     0,     0,     0,     0,
    1288,     0,     0,     0,     0,     0,     0,     0,  1290,     0,
       0,     0,     0,  1296,  1297,  1291,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1298,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1292,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1299,     0,     0,  1300,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1301,     0,     0,  1302,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1293,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1294,     0,     0,     0,     0,  1295,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1303,     0,     0,     0,     0,     0,     0,  1296,
    1297,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1298,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1299,     0,     0,  1300,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1301,     0,
       0,  1302,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1304,     0,     0,  1305,  1306,  1307,     0,  1308,  1309,
    1310,  1311,  1312,  1313,     0,     0,     0,     0,  2791,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1303,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1304,  1030,     0,
    1305,  1306,  1307,     0,  1308,  1309,  1310,  1311,  1312,  1313,
       0,     0,  1461,     0,    91,    92,    93,    94,    95,    96,
      97,    98,  1031,    99,   100,   101,  1032,  1033,  1034,  1035,
    1036,  1037,  1038,   102,   103,  1039,   104,   105,   106,     0,
     108,   109,   110,   729,   730,     0,   731,   732,  1040,   116,
     117,   118,   119,   120,   121,  1041,  1042,   122,   123,   733,
     734,   126,  1043,   127,   128,   129,   130,   735,  1044,     0,
    1045,   133,   134,   135,   136,   137,     0,   139,   140,   141,
    1046,   142,   143,   144,   145,   146,   147,  1047,     0,   149,
     150,   151,  1048,  1049,  1050,     0,  1051,  1052,  1053,   153,
     154,   155,   156,   157,   158,   159,   736,   737,   162,  1054,
     163,  1055,   164,   165,   166,   167,   168,   169,  1056,   170,
     171,   172,   173,   174,  1057,  1058,   175,   176,   177,   178,
     179,  1059,   180,   181,   182,  1060,   183,   184,   185,  1061,
     186,   187,   188,   189,   738,   191,   192,   193,   194,   739,
    1062,   196,  1063,   197,   198,   740,   200,  1064,   201,  1065,
     202,     0,  1066,     0,   205,   206,   207,     0,   209,  1067,
     210,  1068,   741,   212,  1069,   213,   214,   215,   216,   217,
     218,     0,   220,   221,   222,   223,  1070,   224,   225,   226,
     227,   228,   229,  1071,   230,     0,   742,   233,   234,   235,
     236,   743,   744,  1072,   745,  1073,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,  1074,  1075,   250,     0,
     252,     0,  1076,   254,   255,   256,  1077,  1078,   257,   258,
     259,   260,   261,   746,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   747,     0,   748,   284,   285,   286,   749,  1079,
     288,   289,     0,   291,  1080,   750,   293,   751,   295,   296,
     297,  1081,   298,   299,  1082,  1083,   300,   301,   302,  1084,
    1085,   303,   752,     0,   306,     0,   753,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,  1086,   319,   320,
     754,   322,   323,   755,   325,   326,   327,  1087,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   756,   338,   339,
     340,   341,  1088,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,  1089,   354,   355,     0,   357,
     358,   359,   757,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,  1090,   372,   373,   374,   375,   376,
    1091,   377,   758,   379,   380,   381,     0,   383,   384,   759,
     386,  1092,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   760,   399,   761,  1093,   401,   402,  1094,
     403,     0,   405,   406,   407,   408,   409,  1095,   762,   763,
    1096,  1097,   412,   413,   764,   415,   765,  1098,   417,   418,
     766,   420,   421,   422,   423,   424,  1099,  1100,   425,   426,
     427,   428,   429,  1101,  1102,   430,   431,   432,   433,   434,
    1103,   768,  1104,   437,     0,   439,   440,   441,   442,  1105,
    1106,   443,  1107,  1108,   444,   445,   446,   447,   448,   449,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   461,   462,   463,   464,   490,     0,     0,     0,     0,
       0,     0,     0,     0,  1109,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,     0,   108,   109,   110,
     111,   112,     0,   114,   115,     0,   116,   117,   118,   119,
     120,   121,     0,     0,   122,   123,   124,   125,   126,     0,
     127,   128,   129,   130,   131,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,     0,   196,     0,
     197,   198,   199,   200,     0,   201,     0,   202,     0,     0,
       0,   205,   206,   207,     0,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   232,   233,   234,   235,   236,   237,   238,
       0,   239,     0,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,   252,     0,     0,
     254,   255,   256,     0,     0,   257,   258,   259,   260,   261,
     492,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
       0,   283,   284,   285,   286,   287,     0,   288,   289,     0,
     291,     0,   292,   293,   294,   295,   296,   297,     0,   298,
     299,     0,     0,   300,   301,   302,     0,     0,   303,   304,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,     0,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     494,   399,   400,     0,   401,   402,     0,   403,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,   412,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,     0,
     437,     0,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   728,  1211,   538,     0,     0,     0,   802,     0,
       0,  2169,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   729,   730,     0,
     731,   732,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   733,   734,   126,     0,   127,   128,   129,
     130,   735,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     736,   737,   162,  1341,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   738,   191,
     192,   193,   194,   739,  1212,   196,     0,   197,   198,   740,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,   209,     0,   210,     0,   741,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     742,   233,   234,   235,   236,   743,   744,     0,   745,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   746,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   747,     0,   748,   284,
     285,   286,   749,     0,   288,   289,     0,   291,     0,   750,
     293,   751,   295,   296,   297,     0,   298,   299,  1213,     0,
     300,   301,   302,     0,     0,   303,   752,     0,   306,     0,
     753,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   754,   322,   323,   755,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   756,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   757,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   758,   379,   380,   381,
       0,   383,   384,   759,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   760,   399,   761,
       0,   401,   402,     0,   403,     0,   405,   406,   407,   408,
     409,     0,   762,   763,     0,     0,   412,   413,   764,   415,
     765,  1214,   417,   418,   766,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,  1103,   768,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   461,   462,   463,   464,   728,
    1211,   538,     0,     0,     0,   802,  1215,  1216,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
       0,   108,   109,   110,   729,   730,     0,   731,   732,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     733,   734,   126,     0,   127,   128,   129,   130,   735,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   736,   737,   162,
    1343,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   738,   191,   192,   193,   194,
     739,  1212,   196,     0,   197,   198,   740,   200,     0,   201,
       0,   202,     0,     0,     0,   205,   206,   207,     0,   209,
       0,   210,     0,   741,   212,     0,   213,   214,   215,   216,
     217,   218,     0,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   742,   233,   234,
     235,   236,   743,   744,     0,   745,     0,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,   252,     0,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,   746,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   747,     0,   748,   284,   285,   286,   749,
       0,   288,   289,     0,   291,     0,   750,   293,   751,   295,
     296,   297,     0,   298,   299,  1213,     0,   300,   301,   302,
       0,     0,   303,   752,     0,   306,     0,   753,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   754,   322,   323,   755,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   756,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,     0,
     357,   358,   359,   757,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   758,   379,   380,   381,     0,   383,   384,
     759,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   760,   399,   761,     0,   401,   402,
       0,   403,     0,   405,   406,   407,   408,   409,     0,   762,
     763,     0,     0,   412,   413,   764,   415,   765,  1214,   417,
     418,   766,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,  1103,   768,     0,   437,     0,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   461,   462,   463,   464,   728,  1211,   538,     0,
       0,     0,   802,  1215,  1216,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,     0,     0,
       0,   102,   103,     0,   104,   105,   106,     0,   108,   109,
     110,   729,   730,     0,   731,   732,     0,   116,   117,   118,
     119,   120,   121,     0,     0,   122,   123,   733,   734,   126,
       0,   127,   128,   129,   130,   735,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   736,   737,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   738,   191,   192,   193,   194,   739,  1212,   196,
       0,   197,   198,   740,   200,     0,   201,     0,   202,     0,
       0,     0,   205,   206,   207,     0,   209,     0,   210,     0,
     741,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   742,   233,   234,   235,   236,   743,
     744,     0,   745,     0,   240,     0,     0,   243,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,   252,     0,
       0,   254,   255,   256,     0,     0,   257,   258,   259,   260,
     261,   746,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     747,     0,   748,   284,   285,   286,   749,     0,   288,   289,
       0,   291,     0,   750,   293,   751,   295,   296,   297,     0,
     298,   299,  1213,     0,   300,   301,   302,     0,     0,   303,
     752,     0,   306,     0,   753,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   754,   322,
     323,   755,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   756,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,     0,   357,   358,   359,
     757,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     758,   379,   380,   381,     0,   383,   384,   759,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   760,   399,   761,     0,   401,   402,     0,   403,     0,
     405,   406,   407,   408,   409,     0,   762,   763,     0,     0,
     412,   413,   764,   415,   765,  1214,   417,   418,   766,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,     0,     0,   430,   431,   432,   433,   434,  1103,   768,
       0,   437,     0,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   461,
     462,   463,   464,     0,  1283,     0,     0,  1284,     0,     0,
    1215,  1216,  1285,  1286,  1287,     0,     0,     0,     0,     0,
       0,     0,  1283,     0,     0,  1284,     0,     0,     0,  1288,
    1285,  1286,  1287,  1729,     0,     0,     0,  1290,     0,     0,
    1283,     0,     0,  1284,  1291,     0,     0,  1288,  1285,  1286,
    1287,     0,     0,     0,     0,  1290,     0,     0,     0,     0,
       0,     0,  1291,     0,     0,  1288,     0,     0,  1283,  1292,
       0,  1284,     0,  1290,     0,     0,  1285,  1286,  1287,     0,
    1291,     0,     0,     0,     0,     0,     0,  1292,     0,     0,
       0,     0,     0,  1288,     0,     0,  1917,     0,     0,     0,
       0,  1290,     0,     0,  1283,  1292,     0,  1284,  1291,     0,
       0,     0,  1285,  1286,  1287,     0,     0,     0,     0,  1730,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1288,
       0,     0,     0,  1292,     0,     0,     0,  1290,     0,     0,
       0,     0,     0,     0,  1291,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1293,  1292,
       0,     0,     0,     0,     0,     0,  1955,     0,     0,     0,
       0,  1956,  1294,     0,     0,     0,  1293,  1295,  1283,     0,
       0,  1284,     0,  2849,     0,     0,  1285,  1286,  1287,     0,
    1294,     0,     0,     0,  1293,  1295,     0,     0,  1296,  1297,
       0,     0,     0,  1288,     0,     0,  1960,     0,  1294,     0,
       0,  1290,  1298,  1295,     0,     0,  1296,  1297,  1291,     0,
       0,     0,  1293,     0,     0,     0,     0,     0,     0,     0,
    1298,     0,     0,     0,  1296,  1297,  1294,     0,     0,     0,
       0,  1295,     0,  1292,     0,     0,     0,     0,  1298,     0,
    1299,     0,     0,  1300,     0,     0,     0,     0,  1293,     0,
       0,     0,  1296,  1297,     0,     0,     0,  1301,  1299,     0,
    1302,  1300,  1294,     0,     0,     0,  1298,  1295,     0,     0,
       0,     0,     0,     0,     0,  1301,  1299,     0,  1302,  1300,
       0,     0,     0,     0,     0,     0,     0,     0,  1296,  1297,
       0,     0,     0,  1301,     0,     0,  1302,     0,     0,     0,
       0,     0,  1298,     0,  1299,     0,     0,  1300,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2850,
       0,  1301,     0,     0,  1302,     0,     0,     0,     0,     0,
       0,     0,  1293,     0,     0,     0,     0,     0,     0,     0,
    1299,     0,     0,  1300,     0,     0,  1294,  1303,     0,     0,
       0,  1295,     0,     0,     0,     0,     0,  1301,     0,     0,
    1302,     0,     0,     0,     0,  1303,     0,     0,     0,     0,
       0,     0,  1296,  1297,     0,     0,     0,     0,  1929,     0,
       0,     0,     0,  1303,     0,     0,  1298,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1283,     0,     0,  1284,     0,  1731,     0,     0,  1285,  1286,
    1287,  1303,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1299,  1288,     0,  1300,     0,     0,
       0,     0,     0,  1290,     0,     0,     0,     0,     0,     0,
    1291,  1301,     0,     0,  1302,     0,  1304,  1303,     0,  1305,
    1306,  1307,     0,  1308,  1309,  1310,  1311,  1312,  1313,     0,
       0,     0,     0,     0,  1304,  1292,     0,  1305,  1306,  1307,
       0,  1308,  1309,  1310,  1311,  1312,  1313,     0,     0,     0,
       0,     0,  1304,     0,     0,  1305,  1306,  1307,     0,  1308,
    1309,  1310,  1311,  1312,  1313,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1304,     0,     0,  1305,  1306,  1307,     0,  1308,  1309,  1310,
    1311,  1312,  1313,     0,     0,     0,     0,     0,     0,     0,
       0,  1303,     0,     0,     0,  1283,     0,     0,  1284,     0,
       0,     0,     0,  1285,  1286,  1287,  1304,     0,     0,  1305,
    1306,  1307,     0,  1308,  1309,  1310,  1311,  1312,  1313,  1965,
    1288,     0,     0,  1967,  1293,     0,     0,     0,  1290,     0,
       0,     0,     0,     0,     0,  1291,     0,     0,  1294,     0,
       0,  1283,     0,  1295,  1284,     0,     0,     0,     0,  1285,
    1286,  1287,     0,     0,     0,     0,     0,     0,     0,     0,
    1292,     0,     0,     0,  1296,  1297,  1288,     0,     0,     0,
       0,     0,     0,     0,  1290,     0,     0,     0,  1298,     0,
       0,  1291,     0,     0,     0,     0,     0,     0,     0,     0,
    1304,     0,     0,  1305,  1306,  1307,     0,  1308,  1309,  1310,
    1311,  1312,  1313,     0,     0,     0,  1292,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1299,     0,     0,  1300,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1283,  1301,     0,  1284,  1302,     0,     0,     0,
    1285,  1286,  1287,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1288,     0,  1293,
       0,     0,     0,     0,     0,  1290,     0,     0,     0,     0,
       0,  1283,  1291,  1294,  1284,     0,     0,     0,  1295,  1285,
    1286,  1287,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1288,  1292,     0,  1296,
    1297,     0,     0,     0,  1290,  1293,     0,     0,     0,     0,
       0,  1291,     0,  1298,     0,     0,     0,     0,     0,  1294,
       0,     0,     0,  1303,  1295,     0,     0,     0,     0,  1283,
       0,     0,  1284,     0,     0,     0,  1292,  1285,  1286,  1287,
       0,     0,     0,     0,     0,  1296,  1297,     0,     0,     0,
       0,  1299,     0,     0,  1300,     0,     0,     0,     0,  1298,
       0,     0,  1290,     0,     0,     0,     0,     0,  1301,  1291,
       0,  1302,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1292,     0,  1293,  1299,     0,     0,
    1300,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1294,     0,     0,     0,  1301,  1295,     0,  1302,     0,     0,
       0,     0,  1304,     0,     0,  1305,  1306,  1307,     0,  1308,
    1309,  1310,  1311,  1312,  1313,  1293,  1296,  1297,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1294,
    1298,     0,     0,     0,  1295,     0,     0,     0,  1303,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1296,  1297,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1299,  1298,
       0,  1300,     0,  1293,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1303,  1301,     0,  1294,  1302,     0,
       0,     0,  1295,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1299,     0,     0,
    1300,     0,     0, -1684, -1684,  2173,     0,     0,     0,     0,
       0,     0,     0,     0,  1301,     0,     0,  1298,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1304,     0,     0,
    1305,  1306,  1307,     0,  1308,  1309,  1310,  1311,  1312,  1313,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1684,     0,
       0,     0,     0,     0,     0,  1303,     0,     0,     0,     0,
       0,     0,  1301,  1304,     0,     0,  1305,  1306,  1307,     0,
    1308,  1309,  1310,  1311,  1312,  1313,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1303,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1303,     0,  1304,     0,     0,  1305,  1306,  1307,
       0,  1308,  1309,  1310,  1311,  1312,  1313,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1304,     0,     0,  1305,  1306,  1307,     0,
    1308,  1309,  1310,  1311,  1312,  1313,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1030,     0,
    1638,  1304,     0,     0,  1305,  1306,  1307,     0,  1308,  1309,
    1310,  1311,  1312,  1313,    91,    92,    93,    94,    95,    96,
      97,    98,  1031,    99,   100,   101,  1032,  1033,  1034,  1035,
    1036,  1037,  1038,   102,   103,  1039,   104,   105,   106,     0,
     108,   109,   110,   729,   730,     0,   731,   732,  1040,   116,
     117,   118,   119,   120,   121,  1041,  1042,   122,   123,   733,
     734,   126,  1043,   127,   128,   129,   130,   735,  1044,     0,
    1045,   133,   134,   135,   136,   137,     0,   139,   140,   141,
    1046,   142,   143,   144,   145,   146,   147,  1047,     0,   149,
     150,   151,  1048,  1049,  1050,     0,  1051,  1052,  1053,   153,
     154,   155,   156,   157,   158,   159,   736,   737,   162,  1054,
     163,  1055,   164,   165,   166,   167,   168,   169,  1056,   170,
     171,   172,   173,   174,  1057,  1058,   175,   176,   177,   178,
     179,  1059,   180,   181,   182,  1060,   183,   184,   185,  1061,
     186,   187,   188,   189,   738,   191,   192,   193,   194,   739,
    1062,   196,  1063,   197,   198,   740,   200,  1064,   201,  1065,
     202,     0,  1066,     0,   205,   206,   207,     0,   209,  1067,
     210,  1068,   741,   212,  1069,   213,   214,   215,   216,   217,
     218,     0,   220,   221,   222,   223,  1070,   224,   225,   226,
     227,   228,   229,  1071,   230,     0,   742,   233,   234,   235,
     236,   743,   744,  1072,   745,  1073,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,  1074,  1075,   250,     0,
     252,     0,  1076,   254,   255,   256,  1077,  1078,   257,   258,
     259,   260,   261,   746,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   747,     0,   748,   284,   285,   286,   749,  1079,
     288,   289,     0,   291,  1080,   750,   293,   751,   295,   296,
     297,  1081,   298,   299,  1082,  1083,   300,   301,   302,  1084,
    1085,   303,   752,     0,   306,     0,   753,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,  1086,   319,   320,
     754,   322,   323,   755,   325,   326,   327,  1087,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   756,   338,   339,
     340,   341,  1088,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,  1089,   354,   355,     0,   357,
     358,   359,   757,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,  1090,   372,   373,   374,   375,   376,
    1091,   377,   758,   379,   380,   381,     0,   383,   384,   759,
     386,  1092,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   760,   399,   761,  1093,   401,   402,  1094,
     403,     0,   405,   406,   407,   408,   409,  1095,   762,   763,
    1096,  1097,   412,   413,   764,   415,   765,  1098,   417,   418,
     766,   420,   421,   422,   423,   424,  1099,  1100,   425,   426,
     427,   428,   429,  1101,  1102,   430,   431,   432,   433,   434,
    1103,   768,  1104,   437,     0,   439,   440,   441,   442,  1105,
    1106,   443,  1107,  1108,   444,   445,   446,   447,   448,   449,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   461,   462,   463,   464,  1030,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,  1031,
      99,   100,   101,  1032,  1033,  1034,  1035,  1036,  1037,  1038,
     102,   103,  1039,   104,   105,   106,     0,   108,   109,   110,
     729,   730,     0,   731,   732,  1040,   116,   117,   118,   119,
     120,   121,  1041,  1042,   122,   123,   733,   734,   126,  1043,
     127,   128,   129,   130,   735,  1044,     0,  1045,   133,   134,
     135,   136,   137,     0,   139,   140,   141,  1046,   142,   143,
     144,   145,   146,   147,  1047,     0,   149,   150,   151,  1048,
    1049,  1050,     0,  1051,  1052,  1053,   153,   154,   155,   156,
     157,   158,   159,   736,   737,   162,  1054,   163,  1055,   164,
     165,   166,   167,   168,   169,  1056,   170,   171,   172,   173,
     174,  1057,  1058,   175,   176,   177,   178,   179,  1059,   180,
     181,   182,  1060,   183,   184,   185,  1061,   186,   187,   188,
     189,   738,   191,   192,   193,   194,   739,  1062,   196,  1063,
     197,   198,   740,   200,  1064,   201,  1065,   202,     0,  1066,
       0,   205,   206,   207,     0,   209,  1067,   210,  1068,   741,
     212,  1069,   213,   214,   215,   216,   217,   218,     0,   220,
     221,   222,   223,  1070,   224,   225,   226,   227,   228,   229,
    1071,   230,     0,   742,   233,   234,   235,   236,   743,   744,
    1072,   745,  1073,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,  1074,  1075,   250,     0,   252,     0,  1076,
     254,   255,   256,  1077,  1078,   257,   258,   259,   260,   261,
     746,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   747,
       0,   748,   284,   285,   286,   749,  1079,   288,   289,     0,
     291,  1080,   750,   293,   751,   295,   296,   297,  1081,   298,
     299,  1082,  1083,   300,   301,   302,  1084,  1085,   303,   752,
       0,   306,     0,   753,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,  1086,   319,   320,   754,   322,   323,
     755,   325,   326,   327,  1087,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   756,   338,   339,   340,   341,  1088,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,  1089,   354,   355,     0,   357,   358,   359,   757,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,  1090,   372,   373,   374,   375,   376,  1091,   377,   758,
     379,   380,   381,     0,   383,   384,   759,   386,  1092,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     760,   399,   761,  1093,   401,   402,  1094,   403,     0,   405,
     406,   407,   408,   409,  1095,   762,   763,  1096,  1097,   412,
     413,   764,   415,   765,  1098,   417,   418,   766,   420,   421,
     422,   423,   424,  1099,  1100,   425,   426,   427,   428,   429,
    1101,  1102,   430,   431,   432,   433,   434,  1103,   768,  1104,
     437,     0,   439,   440,   441,   442,  1105,  1106,   443,  1107,
    1108,   444,   445,   446,   447,   448,   449,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   461,   462,
     463,   464,  1030,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,  1778,    96,    97,    98,  1031,    99,   100,   101,
    1032,  1033,  1034,  1035,  1036,  1037,  1038,   102,   103,  1039,
     104,   105,   106,     0,   108,   109,   110,   729,   730,     0,
     731,   732,  1040,   116,   117,   118,   119,   120,   121,  1041,
    1042,   122,   123,   733,   734,   126,  1043,   127,   128,   129,
     130,   735,  1044,     0,  1045,   133,   134,   135,   136,   137,
       0,   139,   140,   141,  1046,   142,   143,   144,   145,   146,
     147,  1047,     0,   149,   150,   151,  1048,  1049,  1050,     0,
    1051,  1052,  1053,   153,   154,   155,   156,   157,   158,   159,
     736,   737,   162,  1054,   163,  1055,   164,   165,   166,   167,
     168,   169,  1056,   170,   171,   172,   173,   174,  1057,  1058,
     175,   176,   177,  1779,   179,  1059,   180,   181,   182,  1060,
     183,   184,   185,  1061,   186,   187,   188,   189,   738,   191,
     192,   193,   194,   739,  1062,   196,  1063,   197,   198,   740,
     200,  1064,   201,  1065,   202,     0,  1066,     0,   205,   206,
     207,     0,   209,  1067,   210,  1068,   741,   212,  1069,   213,
     214,   215,   216,   217,   218,     0,   220,   221,   222,   223,
    1070,   224,   225,   226,   227,   228,   229,  1071,   230,     0,
     742,   233,   234,   235,   236,   743,   744,  1072,   745,  1073,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
    1074,  1075,   250,     0,   252,     0,  1076,   254,   255,   256,
    1077,  1078,   257,   258,   259,   260,   261,   746,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   747,     0,   748,   284,
     285,   286,   749,  1079,   288,   289,     0,   291,  1080,   750,
     293,   751,   295,   296,   297,  1081,   298,   299,  1082,  1083,
     300,   301,   302,  1084,  1085,   303,   752,     0,   306,     0,
     753,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,  1086,   319,   320,   754,   322,   323,   755,   325,   326,
     327,  1087,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   756,   338,   339,   340,   341,  1088,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,  1089,
     354,   355,     0,   357,   358,   359,   757,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,  1090,   372,
     373,   374,   375,   376,  1091,  1780,   758,   379,   380,   381,
       0,   383,   384,   759,   386,  1092,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   760,   399,   761,
    1093,   401,   402,  1094,   403,     0,   405,   406,   407,   408,
     409,  1095,   762,   763,  1096,  1097,   412,   413,   764,   415,
     765,  1098,   417,   418,   766,   420,   421,   422,   423,   424,
    1099,  1100,   425,   426,   427,   428,   429,  1101,  1102,   430,
     431,   432,   433,   434,  1103,   768,  1104,   437,     0,   439,
     440,   441,   442,  1105,  1106,   443,  1107,  1108,   444,   445,
     446,   447,   448,   449,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   461,   462,   463,   464,    90,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,     0,
     116,   117,   118,   119,   120,   121,     0,   809,   122,   123,
     124,   125,   126,     0,   127,   128,   129,   130,   812,     0,
     813,     0,   133,   134,   135,   136,   137,   138,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,   148,
     149,   150,   151,   814,   815,   816,   817,   818,   819,   820,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     825,     0,   196,     0,   197,   198,   199,   200,     0,   201,
       0,   202,   203,     0,   204,   205,   206,   207,   208,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,   236,   237,   238,     0,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,     0,   250,
     251,   252,   253,     0,   254,   255,   256,   831,   832,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
       0,   288,   289,   290,   291,     0,   837,   293,   294,   295,
     296,   297,     0,   298,   299,     0,     0,   300,   301,   302,
       0,     0,   303,   304,   305,   306,   307,   840,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   841,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   844,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   846,     0,   401,   402,
       0,   403,   404,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,   412,   413,   849,   415,   850,     0,   417,
     418,   852,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   853,     0,   430,   431,   432,   433,
     434,   435,   436,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    90,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,     0,     0,
       0,   102,   103,     0,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,     0,   116,   117,   118,
     119,   120,   121,     0,     0,   122,   123,   124,   125,   126,
       0,   127,   128,   129,   130,   131,     0,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,   148,   149,   150,   151,
       0,     0,     0,   152,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,     0,   196,
       0,   197,   198,   199,   200,     0,   201,     0,   202,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,   239,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,     0,   250,   251,   252,   253,
       0,   254,   255,   256,     0,     0,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,     0,   288,   289,
     290,   291,     0,   292,   293,   294,   295,   296,   297,     0,
     298,   299,     0,     0,   300,   301,   302,     0,     0,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,     0,   403,   404,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
     412,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   490,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,     0,     0,     0,   102,   103,
       0,   104,   105,   106,     0,   108,   109,   110,   111,   112,
       0,   114,   115,     0,   116,   117,   118,   119,   120,   121,
       0,     0,   122,   123,   124,   125,   126,  1399,   127,   128,
     129,   130,   131,     0,     0,  1400,   133,   134,   135,   136,
     137,     0,   139,   140,   141,  1401,   142,   143,   144,   145,
     146,   147,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   177,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,     0,   196,     0,   197,   198,
     199,   200,     0,   201,  1402,   202,     0,     0,     0,   205,
     206,   207,     0,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,  1403,     0,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   232,   233,   234,   235,   236,   237,   238,     0,   239,
       0,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,   252,     0,     0,   254,   255,
     256,     0,     0,   257,   258,   259,   260,   261,   492,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,     0,   283,
     284,   285,   286,   287,     0,   288,   289,     0,   291,     0,
     292,   293,   294,   295,   296,   297,     0,   298,   299,     0,
       0,   300,   301,   302,     0,     0,   303,   304,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,   322,   323,   324,   325,
     326,   327,  1404,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,     0,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   494,   399,
     400,     0,   401,   402,     0,   403,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,   412,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,     0,  1405,   425,   426,   427,   428,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,     0,   437,     0,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     490,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,     0,   108,   109,   110,   111,   112,     0,   114,   115,
       0,   116,   117,   118,   119,   120,   121,     0,     0,   122,
     123,   124,   125,   126,  1399,   127,   128,   129,   130,   131,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   139,
     140,   141,  1401,   142,   143,   144,   145,   146,   147,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     177,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,     0,   196,     0,   197,   198,   199,   200,     0,
     201,  1402,   202,     0,     0,     0,   205,   206,   207,     0,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   232,   233,
     234,   235,   236,   237,   238,     0,   239,     0,   240,     0,
       0,   243,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,   252,  1843,     0,   254,   255,   256,     0,     0,
     257,   258,   259,   260,   261,   492,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,     0,   283,   284,   285,   286,
     287,     0,   288,   289,     0,   291,     0,   292,   293,   294,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,   304,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   322,   323,   324,   325,   326,   327,  1404,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
       0,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   494,   399,   400,     0,   401,
     402,     0,   403,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,   412,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,     0,  1405,
     425,   426,   427,   428,   429,     0,     0,   430,   431,   432,
     433,   434,   435,   436,     0,   437,     0,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   728,     0,   538,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
       0,     0,   102,   103,     0,   104,   105,   106,     0,   108,
     109,   110,   729,   730,     0,   731,   732,     0,   116,   117,
     118,   119,   120,   121,     0,     0,   122,   123,   733,   734,
     126,     0,   127,   128,   129,   130,   735,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   153,   154,
     155,   156,   157,   158,   159,   736,   737,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   738,   191,   192,   193,   194,   739,  1212,
     196,     0,   197,   198,   740,   200,     0,   201,     0,   202,
       0,     0,     0,   205,   206,   207,     0,   209,     0,   210,
       0,   741,   212,     0,   213,   214,   215,   216,   217,   218,
       0,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   742,   233,   234,   235,   236,
     743,   744,     0,   745,     0,   240,     0,     0,   243,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,   252,
       0,     0,   254,   255,   256,     0,     0,   257,   258,   259,
     260,   261,   746,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   747,     0,   748,   284,   285,   286,   749,     0,   288,
     289,     0,   291,     0,   750,   293,   751,   295,   296,   297,
       0,   298,   299,  1213,     0,   300,   301,   302,     0,     0,
     303,   752,     0,   306,     0,   753,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   754,
     322,   323,   755,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   756,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,     0,   357,   358,
     359,   757,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   758,   379,   380,   381,     0,   383,   384,   759,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   760,   399,   761,     0,   401,   402,     0,   403,
       0,   405,   406,   407,   408,   409,     0,   762,   763,     0,
       0,   412,   413,   764,   415,   765,  1214,   417,   418,   766,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,     0,   430,   431,   432,   433,   434,  1103,
     768,     0,   437,     0,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     461,   462,   463,   464,   490,     0,   563,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     3,     4,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,     0,   108,   109,   110,   111,
     112,     0,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,     0,   122,   123,   124,   125,   126,     0,   127,
     128,   129,   130,   131,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,     0,   196,     0,   197,
     198,   199,   200,     0,   201,     0,   202,     0,     0,     0,
     205,   206,   207,     0,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,     0,     0,   243,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,   252,     0,     0,   254,
     255,   256,     0,     0,   257,   258,   259,   260,   261,   492,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,     0,
     283,   284,   285,   286,   287,     0,   288,   289,     0,   291,
       0,   292,   293,   294,   295,   296,   297,     0,   298,   299,
       0,     0,   300,   301,   302,     0,     0,   303,   304,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   494,
     399,   400,     0,   401,   402,     0,   403,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,   412,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,     0,
       0,   430,   431,   432,   433,   434,   435,   436,     0,   437,
       0,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   490,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   111,   112,     0,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   124,   125,   126,     0,   127,   128,   129,   130,
     131,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,     0,   197,   198,   199,   200,
       0,   201,     0,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,     0,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   492,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,     0,   283,   284,   285,
     286,   287,     0,   288,   289,     0,   291,     0,   292,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   564,   300,
     301,   302,     0,     0,   303,   304,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   494,   399,   400,     0,
     401,   402,     0,   403,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   490,     0,
     563,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   111,   112,     0,   114,   115,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
       0,   196,     0,   197,   198,   199,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     609,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   232,   233,   234,   235,
     236,   237,   238,     0,   239,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   492,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,     0,   283,   284,   285,   286,   287,     0,
     288,   289,     0,   291,     0,   292,   293,   294,   295,   296,
     297,     0,   298,   299,     0,   564,   300,   301,   302,     0,
       0,   303,   304,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   494,   399,   400,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,   412,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   728,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     3,     4,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,     0,   108,   109,   110,
     729,   730,     0,   731,   732,     0,   116,   117,   118,   119,
     120,   121,     0,     0,   122,   123,   733,   734,   126,     0,
     127,   128,   129,   130,   735,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   736,   737,   162,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   738,   191,   192,   193,   194,   739,     0,   196,     0,
     197,   198,   740,   200,     0,   201,     0,   202,     0,     0,
       0,   205,   206,   207,     0,   209,     0,   210,     0,   741,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   742,   233,   234,   235,   236,   743,   744,
       0,   745,     0,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,   252,     0,     0,
     254,   255,   256,     0,     0,   257,   258,   259,   260,   261,
     746,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   747,
       0,   748,   284,   285,   286,   749,     0,   288,   289,     0,
     291,     0,   750,   293,   751,   295,   296,   297,     0,   298,
     299,     0,     0,   300,   301,   302,     0,     0,   303,   752,
       0,   306,     0,   753,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   754,   322,   323,
     755,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   756,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,     0,   357,   358,   359,   757,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   758,
     379,   380,   381,     0,   383,   384,   759,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     760,   399,   761,     0,   401,   402,     0,   403,     0,   405,
     406,   407,   408,   409,     0,   762,   763,     0,     0,   412,
     413,   764,   415,   765,     0,   417,   418,   766,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
       0,     0,   430,   431,   432,   433,   434,  1103,   768,     0,
     437,     0,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   461,   462,
     463,   464,   490,     0,   563,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   111,   112,     0,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   131,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,  1691,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,  1692,
       0,     0,   257,   258,   259,   260,   261,   492,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,     0,   283,   284,
     285,   286,   287,     0,   288,   289,     0,   291,     0,   292,
     293,   294,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   494,   399,   400,
       0,   401,   402,  1693,   403,     0,   405,  1694,   407,  1695,
     409,     0,   410,   411,     0,     0,   412,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   425,   426,  1696,   428,   429,     0,     0,   430,
     431,   432,   433,   434,   435,   436,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   490,
    2589,     0,     0,     0,     0,  2590,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
       0,   108,   109,   110,   111,   112,     0,   114,   115,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     124,   125,   126,     0,   127,   128,   129,   130,   131,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,     0,   196,     0,   197,   198,   199,   200,     0,   201,
       0,   202,     0,     0,     0,   205,   206,   207,     0,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,     0,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   232,   233,   234,
     235,   236,   237,   238,     0,   239,     0,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,   252,     0,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,   492,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,     0,   283,   284,   285,   286,   287,
       0,   288,   289,     0,   291,     0,   292,   293,   294,   295,
     296,   297,     0,   298,   299,     0,     0,   300,   301,   302,
       0,     0,   303,   304,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,     0,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   494,   399,   400,     0,   401,   402,
       0,   403,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,   412,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,     0,   437,     0,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   490,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
     491,    99,   100,   101,     0,     0,     0,     0,     0,     0,
       0,   102,   103,     0,   104,   105,   106,     0,   108,   109,
     110,   111,   112,     0,   114,   115,     0,   116,   117,   118,
     119,   120,   121,     0,     0,   122,   123,   124,   125,   126,
       0,   127,   128,   129,   130,   131,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,     0,   196,
       0,   197,   198,   199,   200,     0,   201,     0,   202,     0,
       0,     0,   205,   206,   207,     0,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   232,   233,   234,   235,   236,   237,
     238,     0,   239,     0,   240,     0,     0,   243,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,   252,     0,
       0,   254,   255,   256,     0,     0,   257,   258,   259,   260,
     261,   492,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,     0,   283,   284,   285,   286,   287,     0,   288,   289,
       0,   291,     0,   292,   293,   294,   295,   296,   297,     0,
     298,   299,     0,     0,   300,   301,   302,     0,     0,   303,
     304,     0,   306,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   322,
     323,   324,   493,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,     0,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   494,   399,   400,     0,   401,   402,     0,   403,     0,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
     412,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
       0,   437,     0,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   490,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,   543,    99,   100,
     101,     0,     0,     0,     0,     0,     0,     0,   102,   103,
       0,   104,   105,   106,     0,   108,   109,   110,   111,   112,
       0,   114,   115,     0,   116,   117,   118,   119,   120,   121,
       0,     0,   122,   123,   124,   125,   126,     0,   127,   128,
     129,   130,   131,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   177,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,     0,   196,     0,   197,   198,
     199,   200,     0,   201,     0,   202,     0,     0,     0,   205,
     206,   207,     0,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   232,   233,   234,   235,   236,   237,   238,     0,   239,
       0,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,   252,     0,     0,   254,   255,
     256,     0,     0,   257,   258,   259,   260,   261,   492,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,     0,   283,
     284,   285,   286,   287,     0,   288,   289,     0,   291,     0,
     292,   293,   294,   295,   296,   297,     0,   298,   299,     0,
       0,   300,   301,   302,     0,     0,   303,   304,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,     0,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   494,   399,
     400,     0,   401,   402,     0,   403,     0,   405,   406,   407,
     408,   409,     0,   544,   411,     0,     0,   545,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,     0,   437,     0,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     490,     0,   563,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,     0,   108,   109,   110,   111,   112,     0,   114,   115,
       0,   116,   117,   118,   119,   120,   121,     0,     0,   122,
     123,   124,   125,   126,     0,   127,   128,   129,   130,   131,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     177,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,     0,   196,     0,   197,   198,   199,   200,     0,
     201,     0,   202,     0,     0,     0,   205,   206,   207,     0,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   604,     0,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   232,   233,
     234,   235,   236,   237,   238,     0,   239,     0,   240,     0,
       0,   243,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,   252,     0,     0,   254,   255,   256,     0,     0,
     257,   258,   259,   260,   261,   492,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,     0,   283,   284,   285,   286,
     287,     0,   288,   289,     0,   291,     0,   292,   293,   294,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,   304,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
       0,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   494,   399,   400,     0,   401,
     402,     0,   403,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,   412,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,     0,     0,   430,   431,   432,
     433,   434,   435,   436,     0,   437,     0,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   490,     0,   563,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
       0,     0,   102,   103,     0,   104,   105,   106,     0,   108,
     109,   110,   111,   112,     0,   114,   115,     0,   116,   117,
     118,   119,   120,   121,     0,     0,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   131,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,     0,
     196,     0,   197,   198,   199,   200,     0,   201,     0,   202,
       0,     0,     0,   205,   206,   207,     0,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   607,
       0,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   232,   233,   234,   235,   236,
     237,   238,     0,   239,     0,   240,     0,     0,   243,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,   252,
       0,     0,   254,   255,   256,     0,     0,   257,   258,   259,
     260,   261,   492,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,     0,   283,   284,   285,   286,   287,     0,   288,
     289,     0,   291,     0,   292,   293,   294,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,     0,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   494,   399,   400,     0,   401,   402,     0,   403,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,   412,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,     0,   437,     0,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   490,     0,   563,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,     0,   108,   109,   110,   111,
     112,     0,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,     0,   122,   123,   124,   125,   126,     0,   127,
     128,   129,   130,   131,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,     0,   196,     0,   197,
     198,   199,   200,     0,   201,     0,   202,     0,     0,     0,
     205,   206,   207,     0,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   611,     0,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,     0,     0,   243,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,   252,     0,     0,   254,
     255,   256,     0,     0,   257,   258,   259,   260,   261,   492,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,     0,
     283,   284,   285,   286,   287,     0,   288,   289,     0,   291,
       0,   292,   293,   294,   295,   296,   297,     0,   298,   299,
       0,     0,   300,   301,   302,     0,     0,   303,   304,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   494,
     399,   400,     0,   401,   402,     0,   403,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,   412,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,     0,
       0,   430,   431,   432,   433,   434,   435,   436,     0,   437,
       0,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   490,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   111,   112,     0,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   124,   125,   126,     0,   127,   128,   129,   130,
     131,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,     0,   197,   198,   199,   200,
       0,   201,     0,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,     0,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   492,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,     0,   283,   284,   285,
     286,   287,     0,   288,   289,     0,   291,     0,   292,   293,
     294,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,   304,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   494,   399,   400,     0,
     401,   402,     0,   403,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   490,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,   639,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   111,   112,     0,   114,   115,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
       0,   196,     0,   197,   198,   199,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   232,   233,   234,   235,
     236,   237,   238,     0,   239,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   492,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,     0,   283,   284,   285,   286,   287,     0,
     288,   289,     0,   291,     0,   292,   293,   294,   295,   296,
     297,     0,   298,   299,     0,     0,   300,   301,   302,     0,
       0,   303,   304,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   494,   399,   400,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,   412,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   490,     0,   563,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,     0,   108,   109,   110,
     111,   112,     0,   114,   115,     0,   116,   117,   118,   119,
     120,   121,     0,     0,   122,   123,   124,   125,   126,     0,
     127,   128,   129,   130,   131,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,     0,   196,     0,
     197,   198,   199,   200,     0,   201,     0,   202,     0,     0,
       0,   205,   206,   207,     0,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,  1126,     0,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   232,   233,   234,   235,   236,   237,   238,
       0,   239,     0,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,   252,     0,     0,
     254,   255,   256,     0,     0,   257,   258,   259,   260,   261,
     492,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
       0,   283,   284,   285,   286,   287,     0,   288,   289,     0,
     291,     0,   292,   293,   294,   295,   296,   297,     0,   298,
     299,     0,     0,   300,   301,   302,     0,     0,   303,   304,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,     0,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     494,   399,   400,     0,   401,   402,     0,   403,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,   412,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,     0,
     437,     0,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   490,     0,   563,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   111,   112,     0,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   131,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,  1128,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   492,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,     0,   283,   284,
     285,   286,   287,     0,   288,   289,     0,   291,     0,   292,
     293,   294,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   494,   399,   400,
       0,   401,   402,     0,   403,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,   412,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,   435,   436,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   490,
       0,   563,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
       0,   108,   109,   110,   111,   112,     0,   114,   115,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     124,   125,   126,     0,   127,   128,   129,   130,   131,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,     0,   196,     0,   197,   198,   199,   200,     0,   201,
       0,   202,     0,     0,     0,   205,   206,   207,     0,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,  1528,     0,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   232,   233,   234,
     235,   236,   237,   238,     0,   239,     0,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,   252,     0,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,   492,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,     0,   283,   284,   285,   286,   287,
       0,   288,   289,     0,   291,     0,   292,   293,   294,   295,
     296,   297,     0,   298,   299,     0,     0,   300,   301,   302,
       0,     0,   303,   304,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,     0,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   494,   399,   400,     0,   401,   402,
       0,   403,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,   412,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,     0,   437,     0,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   490,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,     0,  2249,
       0,   102,   103,     0,   104,   105,   106,     0,   108,   109,
     110,   111,   112,     0,   114,   115,     0,   116,   117,   118,
     119,   120,   121,     0,     0,   122,   123,   124,   125,   126,
       0,   127,   128,   129,   130,   131,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,     0,   196,
       0,   197,   198,   199,   200,     0,   201,     0,   202,     0,
       0,     0,   205,   206,   207,     0,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   232,   233,   234,   235,   236,   237,
     238,     0,   239,     0,   240,     0,     0,   243,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,   252,     0,
       0,   254,   255,   256,     0,     0,   257,   258,   259,   260,
     261,   492,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,     0,   283,   284,   285,   286,   287,     0,   288,   289,
       0,   291,     0,   292,   293,   294,   295,   296,   297,     0,
     298,   299,     0,     0,   300,   301,   302,     0,     0,   303,
     304,     0,   306,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,     0,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   494,   399,   400,     0,   401,   402,     0,   403,     0,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
     412,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
       0,   437,     0,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   490,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,     0,  2263,     0,   102,   103,
       0,   104,   105,   106,     0,   108,   109,   110,   111,   112,
       0,   114,   115,     0,   116,   117,   118,   119,   120,   121,
       0,     0,   122,   123,   124,   125,   126,     0,   127,   128,
     129,   130,   131,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   177,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,     0,   196,     0,   197,   198,
     199,   200,     0,   201,     0,   202,     0,     0,     0,   205,
     206,   207,     0,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   232,   233,   234,   235,   236,   237,   238,     0,   239,
       0,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,   252,     0,     0,   254,   255,
     256,     0,     0,   257,   258,   259,   260,   261,   492,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,     0,   283,
     284,   285,   286,   287,     0,   288,   289,     0,   291,     0,
     292,   293,   294,   295,   296,   297,     0,   298,   299,     0,
       0,   300,   301,   302,     0,     0,   303,   304,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,     0,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   494,   399,
     400,     0,   401,   402,     0,   403,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,   412,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,     0,   437,     0,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     490,     0,   563,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,     0,   108,   109,   110,   111,   112,     0,   114,   115,
       0,   116,   117,   118,   119,   120,   121,     0,     0,   122,
     123,   124,   125,   126,     0,   127,   128,   129,   130,   131,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     177,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,     0,   196,     0,   197,   198,   199,   200,     0,
     201,     0,   202,     0,     0,     0,   205,   206,   207,     0,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,  2392,     0,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   232,   233,
     234,   235,   236,   237,   238,     0,   239,     0,   240,     0,
       0,   243,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,   252,     0,     0,   254,   255,   256,     0,     0,
     257,   258,   259,   260,   261,   492,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,     0,   283,   284,   285,   286,
     287,     0,   288,   289,     0,   291,     0,   292,   293,   294,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,   304,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
       0,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   494,   399,   400,     0,   401,
     402,     0,   403,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,   412,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,     0,     0,   430,   431,   432,
     433,   434,   435,   436,     0,   437,     0,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   490,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
       0,     0,   102,   103,     0,   104,   105,   106,     0,   108,
     109,   110,   111,   112,     0,   114,   115,     0,   116,   117,
     118,   119,   120,   121,     0,     0,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   131,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,     0,
     196,     0,   197,   198,   199,   200,     0,   201,     0,   202,
       0,     0,     0,   205,   206,   207,     0,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
       0,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   232,   233,   234,   235,   236,
     237,   238,     0,   239,     0,   240,     0,     0,   243,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,   252,
       0,     0,   254,   255,   256,     0,     0,   257,   258,   259,
     260,   261,   492,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,     0,   283,   284,   285,   286,   287,     0,   288,
     289,     0,   291,     0,   292,   293,   294,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,     0,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   494,   399,   400,     0,   401,   402,     0,   403,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,   412,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,     0,   437,     0,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   490,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,     0,   108,   109,   110,   111,
     112,     0,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,     0,   122,   123,   124,   125,   126,     0,   127,
     128,   129,   130,   131,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,     0,   196,     0,   197,
     198,   199,   200,     0,   201,     0,   202,     0,     0,     0,
     205,   206,   207,     0,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,     0,     0,   243,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,   252,     0,     0,   254,
     255,   555,     0,     0,   257,   258,   259,   260,   261,   492,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,     0,
     283,   284,   285,   286,   287,     0,   288,   289,     0,   291,
       0,   292,   293,   294,   295,   296,   297,     0,   298,   299,
       0,     0,   300,   301,   302,     0,     0,   303,   304,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   556,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   557,     0,   377,   378,   379,
     380,   381,     0,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   494,
     399,   400,     0,   401,   402,     0,   403,     0,   405,   406,
     407,   408,   409,     0,   558,   411,     0,     0,   412,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,     0,
       0,   430,   431,   432,   433,   434,   435,   436,     0,   437,
       0,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   490,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   111,   112,     0,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   124,   125,   126,     0,   127,   128,   129,   130,
     131,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,     0,   197,   198,   199,   200,
       0,   201,     0,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,     0,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   492,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,     0,   283,   284,   285,
     286,   287,     0,   288,   289,     0,   291,     0,   292,   293,
     294,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,   304,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   573,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   494,   399,   400,     0,
     401,   402,     0,   403,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   490,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   111,   112,     0,   114,   115,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
       0,   196,     0,   197,   198,   199,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     629,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   232,   233,   234,   235,
     236,   237,   238,     0,   239,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   492,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,     0,   283,   284,   285,   286,   287,     0,
     288,   289,     0,   291,     0,   292,   293,   294,   295,   296,
     297,     0,   298,   299,     0,     0,   300,   301,   302,     0,
       0,   303,   304,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   494,   399,   400,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,   412,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   490,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,     0,   108,   109,   110,
     111,   112,     0,   114,   115,     0,   116,   117,   118,   119,
     120,   121,     0,     0,   122,   123,   124,   125,   126,     0,
     127,   128,   129,   130,   131,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,     0,   196,     0,
     197,   198,   199,   200,     0,   201,     0,   202,     0,     0,
       0,   205,   206,   207,     0,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   716,     0,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   232,   233,   234,   235,   236,   237,   238,
       0,   239,     0,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,   252,     0,     0,
     254,   255,   256,     0,     0,   257,   258,   259,   260,   261,
     492,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
       0,   283,   284,   285,   286,   287,     0,   288,   289,     0,
     291,     0,   292,   293,   294,   295,   296,   297,     0,   298,
     299,     0,     0,   300,   301,   302,     0,     0,   303,   304,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,     0,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     494,   399,   400,     0,   401,   402,     0,   403,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,   412,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,     0,
     437,     0,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   490,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   111,   112,     0,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   131,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   719,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   492,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,     0,   283,   284,
     285,   286,   287,     0,   288,   289,     0,   291,     0,   292,
     293,   294,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   494,   399,   400,
       0,   401,   402,     0,   403,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,   412,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,   435,   436,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   490,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
       0,   108,   109,   110,   111,   112,     0,   114,   115,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     124,   125,   126,     0,   127,   128,   129,   130,   131,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,     0,   196,     0,   197,   198,   199,   200,     0,   201,
       0,   202,     0,     0,     0,   205,   206,   207,     0,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   722,     0,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   232,   233,   234,
     235,   236,   237,   238,     0,   239,     0,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,   252,     0,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,   492,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,     0,   283,   284,   285,   286,   287,
       0,   288,   289,     0,   291,     0,   292,   293,   294,   295,
     296,   297,     0,   298,   299,     0,     0,   300,   301,   302,
       0,     0,   303,   304,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,     0,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   494,   399,   400,     0,   401,   402,
       0,   403,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,   412,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,     0,   437,     0,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   490,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,     0,     0,
       0,   102,   103,     0,   104,   105,   106,     0,   108,   109,
     110,   111,   112,     0,   114,   115,     0,   116,   117,   118,
     119,   120,   121,     0,     0,   122,   123,   124,   125,   126,
       0,   127,   128,   129,   130,   131,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,     0,   196,
       0,   197,   198,   199,   200,     0,   201,     0,   202,     0,
       0,     0,   205,   206,   207,     0,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   232,   233,   234,   235,   236,   237,
     238,     0,   239,     0,   240,     0,     0,   243,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,   252,     0,
       0,   254,   255,   256,     0,     0,   257,   258,   259,   260,
     261,   492,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,     0,   283,   284,   285,   286,   287,     0,   288,   289,
       0,   291,     0,   292,   293,   294,   295,   296,   297,     0,
     298,   299,     0,     0,   300,   301,   302,     0,     0,   303,
     304,     0,   306,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,     0,   357,   358,   359,
     360,   361,   362,   363,   364,   556,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   494,   399,   400,     0,   401,   402,     0,   403,     0,
     405,   406,   407,   408,   409,     0,   558,   411,     0,     0,
     412,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
       0,   437,     0,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   490,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,     0,  1357,     0,   102,   103,
       0,   104,   105,   106,     0,   108,   109,   110,   111,   112,
       0,   114,   115,     0,   116,   117,   118,   119,   120,   121,
       0,     0,   122,   123,   124,   125,   126,     0,   127,   128,
     129,   130,   131,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   177,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,     0,   196,     0,   197,   198,
     199,   200,     0,   201,     0,   202,     0,     0,     0,   205,
     206,   207,     0,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   232,   233,   234,   235,   236,   237,   238,     0,   239,
       0,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,   252,     0,     0,   254,   255,
     256,     0,     0,   257,   258,   259,   260,   261,   492,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,     0,   283,
     284,   285,   286,   287,     0,   288,   289,     0,   291,     0,
     292,   293,   294,   295,   296,   297,     0,   298,   299,     0,
       0,   300,   301,   302,     0,     0,   303,   304,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,     0,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,     0,     0,   378,   379,   380,
     381,     0,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   494,   399,
     400,     0,   401,   402,     0,   403,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,   412,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,     0,   437,     0,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     490,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,     0,   108,   109,   110,   111,   112,     0,   114,   115,
       0,   116,   117,   118,   119,   120,   121,     0,     0,   122,
     123,   124,   125,   126,     0,   127,   128,   129,   130,   131,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     177,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,     0,   196,     0,   197,   198,   199,   200,     0,
     201,     0,   202,     0,     0,     0,   205,   206,   207,     0,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,  1493,     0,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   232,   233,
     234,   235,   236,   237,   238,     0,   239,     0,   240,     0,
       0,   243,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,   252,     0,     0,   254,   255,   256,     0,     0,
     257,   258,   259,   260,   261,   492,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,     0,   283,   284,   285,   286,
     287,     0,   288,   289,     0,   291,     0,   292,   293,   294,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,   304,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
       0,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   494,   399,   400,     0,   401,
     402,     0,   403,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,   412,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,     0,     0,   430,   431,   432,
     433,   434,   435,   436,     0,   437,     0,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   490,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
       0,     0,   102,   103,     0,   104,   105,   106,     0,   108,
     109,   110,   111,   112,     0,   114,   115,     0,   116,   117,
     118,   119,   120,   121,     0,     0,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   131,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,     0,
     196,     0,   197,   198,   199,   200,     0,   201,     0,   202,
       0,     0,     0,   205,   206,   207,     0,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,  1762,
       0,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   232,   233,   234,   235,   236,
     237,   238,     0,   239,     0,   240,     0,     0,   243,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,   252,
       0,     0,   254,   255,   256,     0,     0,   257,   258,   259,
     260,   261,   492,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,     0,   283,   284,   285,   286,   287,     0,   288,
     289,     0,   291,     0,   292,   293,   294,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,     0,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   494,   399,   400,     0,   401,   402,     0,   403,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,   412,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,     0,   437,     0,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   490,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,     0,   108,   109,   110,   111,
     112,     0,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,     0,   122,   123,   124,   125,   126,     0,   127,
     128,   129,   130,   131,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,     0,   196,     0,   197,
     198,   199,   200,     0,   201,     0,   202,     0,     0,     0,
     205,   206,   207,     0,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,  1774,     0,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,     0,     0,   243,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,   252,     0,     0,   254,
     255,   256,     0,     0,   257,   258,   259,   260,   261,   492,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,     0,
     283,   284,   285,   286,   287,     0,   288,   289,     0,   291,
       0,   292,   293,   294,   295,   296,   297,     0,   298,   299,
       0,     0,   300,   301,   302,     0,     0,   303,   304,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   494,
     399,   400,     0,   401,   402,     0,   403,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,   412,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,     0,
       0,   430,   431,   432,   433,   434,   435,   436,     0,   437,
       0,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   490,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   111,   112,     0,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   124,   125,   126,     0,   127,   128,   129,   130,
     131,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,     0,   197,   198,   199,   200,
       0,   201,     0,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,  1776,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,     0,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   492,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,     0,   283,   284,   285,
     286,   287,     0,   288,   289,     0,   291,     0,   292,   293,
     294,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,   304,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   494,   399,   400,     0,
     401,   402,     0,   403,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   647,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,   648,
     108,   109,   110,     0,   649,   650,   651,   652,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   653,
     654,   126,     0,   127,   128,   129,   130,     0,     0,   655,
       0,   133,   134,   135,   136,   137,   656,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,   657,   149,
     150,   151,     0,     0,     0,   658,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   659,   660,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   661,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,     0,   191,   192,   193,   194,     0,
       0,   196,     0,   197,   198,   662,   200,     0,   201,     0,
     202,   663,     0,   664,   205,   206,   207,   665,   209,     0,
     210,     0,     0,   212,     0,   213,   214,   215,   216,   217,
     666,   667,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,   668,     0,   233,   234,   235,
     236,   669,   670,     0,   671,     0,   240,   672,   673,   243,
     674,   245,   246,   247,   248,   249,     0,     0,   250,   675,
     252,   676,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   677,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   678,   679,   680,   284,   285,   286,     0,     0,
     288,   289,   681,   291,     0,     0,   293,   682,   295,   296,
     297,     0,   298,   299,     0,     0,   300,   301,   302,     0,
       0,   303,     0,   683,   306,   684,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
       0,   322,   323,     0,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   685,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,   686,   357,
     358,   359,   687,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   688,   379,   380,   381,   689,   383,   384,   690,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   691,   399,     0,     0,   401,   402,     0,
     403,   692,   405,   406,   407,   408,   409,     0,   693,   694,
       0,     0,   412,   413,     0,   415,     0,     0,   417,   418,
     695,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
       0,   696,     0,   437,   697,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     647,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   461,   462,   463,   464,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,   648,   108,   109,   110,     0,   649,   650,   651,   652,
       0,   116,   117,   118,   119,   120,   121,     0,     0,   122,
     123,   653,   654,   126,     0,   127,   128,   129,   130,     0,
       0,   655,     0,   133,   134,   135,   136,   137,   656,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
     657,   149,   150,   151,     0,     0,     0,   658,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   659,   660,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     661,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,     0,   191,   192,   193,
     194,     0,     0,   196,     0,   197,   198,   662,   200,     0,
     201,     0,   202,   663,     0,   664,   205,   206,   207,   665,
     209,     0,   210,     0,     0,   212,     0,   213,   214,   215,
     216,   217,   218,   667,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,   668,     0,   233,
     234,   235,   236,   669,   670,     0,   671,     0,   240,   672,
     673,   243,   674,   245,   246,   247,   248,   249,     0,     0,
     250,   675,   252,   676,     0,   254,   255,   256,     0,     0,
     257,   258,   259,   260,   261,   677,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   678,   679,   680,   284,   285,   286,
       0,     0,   288,   289,   681,   291,     0,     0,   293,   682,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,     0,   683,   306,   684,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,     0,   322,   323,     0,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   685,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
     686,   357,   358,   359,   687,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   688,   379,   380,   381,   689,   383,
     384,   690,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   691,   399,     0,     0,   401,
     402,     0,   403,   692,   405,   406,   407,   408,   409,     0,
     693,   694,     0,     0,   412,   413,     0,   415,     0,     0,
     417,   418,   695,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,     0,     0,   430,   431,   432,
     433,   434,     0,   696,     0,   437,   697,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   490,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   461,   462,   463,   464,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   111,   112,     0,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   131,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   492,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,     0,   283,   284,
     285,   286,   287,     0,   288,   289,     0,   291,     0,   292,
     293,   294,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,     0,   316,   317,
     318,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   494,   399,   400,
       0,   401,   402,     0,   403,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,   412,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,   435,   436,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  2334,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
    2335,   108,   109,   110,     0,   649,  2336,   651,   652,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     653,   654,   126,     0,   127,   128,   129,   130,     0,     0,
    2337,     0,   133,   134,   135,   136,   137,  2338,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,  2339,
     149,   150,   151,     0,     0,     0,  2340,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   659,   660,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   661,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,     0,   191,   192,   193,   194,
       0,     0,   196,     0,   197,   198,   662,   200,     0,   201,
       0,   202,  2341,     0,  2342,   205,   206,   207,  2343,   209,
       0,   210,     0,     0,   212,     0,   213,   214,   215,   216,
     217,   218,  2344,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,  2345,     0,   233,   234,
     235,   236,   669,   670,     0,   671,     0,   240,  2346,  2347,
     243,  2348,   245,   246,   247,   248,   249,     0,     0,   250,
    2349,   252,  2350,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,  2536,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   678,  2352,   680,   284,   285,   286,     0,
       0,   288,   289,  2354,   291,     0,     0,   293,   682,   295,
     296,   297,     0,   298,   299,     0,     0,   300,   301,   302,
       0,     0,   303,     0,  2356,   306,  2357,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,     0,   322,   323,     0,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   685,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,  2358,
     357,   358,   359,     0,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,     0,   379,   380,   381,  2360,   383,   384,
     690,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,  2537,   399,     0,     0,   401,   402,
       0,   403,  2362,   405,   406,   407,   408,   409,     0,   693,
     694,     0,     0,   412,   413,     0,   415,     0,     0,   417,
     418,  2363,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,     0,   696,     0,   437,  2364,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   647,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   461,   462,   463,   464,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,   648,   108,   109,   110,     0,   649,   650,   651,
     652,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   653,   654,   126,     0,   127,   128,   129,   130,
       0,     0,   655,     0,   133,   134,   135,   136,   137,   656,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,   657,   149,   150,   151,     0,     0,     0,   658,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   659,
     660,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   661,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,     0,   191,   192,
     193,   194,     0,     0,   196,     0,   197,   198,   662,   200,
       0,   201,     0,   202,   663,     0,   664,   205,   206,   207,
     665,   209,     0,   210,     0,     0,   212,     0,   213,   214,
     215,   216,   217,   218,   667,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,   668,     0,
     233,   234,   235,   236,   669,   670,     0,   671,     0,   240,
     672,   673,   243,   674,   245,   246,   247,   248,   249,     0,
       0,   250,   675,   252,   676,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,     0,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   678,   679,   680,   284,   285,
     286,     0,     0,   288,   289,   681,   291,     0,     0,   293,
     682,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,     0,   683,   306,   684,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,     0,   322,   323,     0,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     685,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,   686,   357,   358,   359,     0,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,     0,   379,   380,   381,   689,
     383,   384,   690,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   399,     0,     0,
     401,   402,     0,   403,   692,   405,   406,   407,   408,   409,
       0,   693,   694,     0,     0,   412,   413,     0,   415,     0,
       0,   417,   418,   695,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,     0,   696,     0,   437,   697,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   461,   462,   463,   464
};

static const yytype_int16 yycheck[] =
{
       6,   608,   572,   521,   593,   623,     6,    57,     0,   554,
       0,     0,     6,    34,   527,   484,   978,   688,   784,   784,
     976,     0,     0,   567,  1152,   951,    16,  1703,   861,  1255,
      16,   694,  1121,   615,   525,   518,  1121,   956,   863,  1121,
     953,  1121,  1208,   947,    29,  2125,  1772,    59,     0,   617,
    1017,   520,  1157,   878,  2053,  1280,  1281,   527,   518,  2101,
    2101,   526,  2012,   717,  1723,   890,   720,  1660,   981,  1700,
    1602,  1603,  1769,    33,  2136,  1607,  2143,    59,  1778,     5,
    1780,   791,     5,  1714,     0,    77,     5,     0,   653,   654,
      11,  2398,    50,  1236,    58,  1332,     5,     5,   532,     5,
       5,     9,    87,     9,     5,   608,     9,   610,    73,   612,
       5,  1643,  1644,  2018,     5,   680,  1380,  1378,    13,    14,
      41,     5,    13,    14,  1122,    11,    13,    14,  2404,    13,
      14,     5,   897,     5,     5,     5,     5,   628,     5,    13,
      14,    13,    14,  1840,     5,   167,     5,    58,     5,    48,
       5,    58,    73,    67,   724,     9,  2401,   590,   168,     4,
    2472,     3,     4,     5,     9,    40,     5,     9,    58,    15,
     590,    11,   116,   144,    40,   106,    92,    11,   119,    92,
     210,  2450,   136,   121,    27,   848,   119,  2388,  2540,     8,
     277,    34,    11,  1250,  2042,   236,    27,    16,    17,    18,
     965,    41,    58,   968,   969,   167,  2570,    41,  1905,  1906,
    1957,  1250,    75,     4,  2017,  2660,   279,  2486,     9,  1257,
     285,    20,    85,   301,   285,  2373,    75,   106,   688,     3,
    2624,   167,  2321,    73,   265,   129,    85,   208,   119,    73,
     157,   325,  2725,    23,   268,   810,   811,    78,   116,    29,
     164,    11,   347,   134,   114,    86,    27,    31,    32,   301,
      27,   157,  2072,   204,    37,    23,   107,   159,   338,   834,
     348,   784,   114,   172,   393,    59,   429,   790,   450,   989,
    2556,    41,   407,    67,   115,   161,   996,   186,   146,   859,
     860,   117,   191,   964,  2606,   117,   366,   445,   114,   429,
     472,  2570,  2495,  2253,    82,   448,  2751,  2257,   481,   428,
     227,    11,    11,    73,   285,   488,  2396,  2359,    27,    77,
     864,    27,   787,  2516,   320,    34,   451,   226,    34,   472,
    1368,   227,   792,   486,   192,  1928,   904,     8,  2148,  2244,
      11,  2824,   490,    13,    14,  2071,    11,   891,   126,   373,
     123,   262,   348,   184,   134,     4,   486,   441,   129,   276,
       9,   187,   129,   279,   195,   187,   279,   209,   184,   261,
      41,  2068,   191,  2070,    73,   339,   946,    48,   484,  2010,
     274,  2012,   488,   262,   425,  2779,   899,   900,   230,    23,
    2538,   486,   166,   212,   168,    29,   427,  2842,   312,   486,
     918,   269,    73,   481,  1936,  1937,  1938,  1939,    68,   269,
    1942,  1943,  1944,  1945,  1946,  1947,  1948,  1949,  1950,  1951,
    2689,  2510,  1132,   486,   340,   490,  1250,   340,   339,   490,
     311,   307,   339,  1022,  1660,  2182,  1250,   897,  2790,   481,
    2243,  2289,  2806,   405,   290,   486,   230,     5,   264,   339,
     421,  2644,   475,  2722,  2766,   366,  2657,  1989,  1990,     4,
     490,  1518,   281,   394,     9,   488,    13,    14,   490,   405,
    2167,   142,   371,  1737,  1400,  1736,   486,  2753,  1517,   913,
    1705,  1479,   474,   339,   474,   474,   427,   431,  1725,  1456,
     444,   429,   162,  2800,   427,   474,   474,  2808,  2540,  2540,
     134,   172,    92,   283,   964,  1731,   527,  2752,   422,  2459,
    1930,   944,   518,  1131,  2464,   186,   391,  2467,   296,   484,
     191,   527,  1484,   488,   944,   391,   490,   450,   486,   438,
     107,   450,   448,   376,     0,   448,   526,  2806,  1958,   475,
    1122,   527,   405,   593,   383,   384,  2451,   553,   554,   472,
     489,   382,   488,   472,   385,   226,   405,   337,   484,  2870,
     486,   482,   488,   486,  1602,  1603,   572,   486,   580,  1607,
    1713,   487,  2298,   489,   487,  1145,   489,   486,   486,  2659,
     486,   486,   485,   490,   570,   486,   366,  1554,  1153,  1154,
     582,   486,   582,   582,   518,   486,   482,  2664,   580,   486,
     585,  2663,   486,   582,   582,  1643,  1644,   613,   614,   615,
     281,  2311,   486,   573,   486,   486,   486,   486,  1328,   486,
     129,   399,  2253,   477,   478,   486,  2257,   486,  2287,   486,
     582,   486,   477,   478,   490,   477,   478,   477,   478,   479,
     480,   481,   482,   114,  1226,   479,   480,   481,   482,   283,
     487,  2601,   432,   490,   473,   474,   475,   448,   477,   478,
     479,   480,   481,   482,  1429,   439,   159,   376,  1151,  1239,
     376,  1241,  1240,   486,  1439,  1245,  1842,  1442,  2758,   248,
     249,   472,   688,  1166,  1202,   490,   477,   478,  1258,  1259,
     475,  1151,  1152,  2390,  1518,  1519,  1520,  1210,  2291,   333,
     371,   486,  1928,   337,  1518,  1519,  1166,  1289,  1276,  1277,
     148,     8,   168,   216,    11,  1695,  1696,   450,   724,    16,
      17,    18,   481,   439,  1268,     8,    30,   220,    11,   488,
    1199,  1200,   366,    16,    17,    18,   535,  1206,   537,   472,
    1210,    75,   105,   398,  1209,   400,   236,  1972,  2790,  2790,
      54,    85,  1320,   486,   236,   264,   936,   556,   486,   262,
      23,  1866,  1330,  1331,   688,   274,    29,  1872,   236,   359,
    2783,  2497,  2785,  1539,  1539,   173,    64,    65,   784,   479,
     480,   481,   482,   335,   790,   791,   792,   356,   357,  2869,
    1616,     4,  1618,  1619,  1627,   518,     9,   787,   432,   470,
    1625,  1284,   808,  1707,   394,   194,   477,   478,   479,   480,
     481,   482,   477,   478,   479,   480,   481,   482,  1425,  2450,
      75,   292,    23,  1292,  1284,   660,  2825,  2826,  2459,   835,
      85,   243,   230,  2464,  1796,  1417,  2467,   450,     4,   860,
     410,   297,  2855,     9,   441,   435,  1500,   682,   355,   855,
     856,   857,  1819,   859,   860,  2486,   486,  1985,   448,   472,
     116,   486,   352,  1452,  1453,  1454,   369,  1521,   792,  1523,
     352,   134,  1526,   486,  2873,  2101,   882,   487,   713,   242,
     490,   264,   472,   469,   352,    93,   269,   250,   359,   487,
    2422,  1804,   490,   899,   900,  1398,   486,  1479,  1936,  1937,
    1938,  1939,  1727,  2629,  1942,  1943,  1944,  1945,  1946,  1947,
    1948,  1949,  1950,  1951,   214,   212,   372,   929,   930,   129,
     932,   359,  1425,   394,   427,   931,  1409,  1497,   487,   935,
     936,   490,  1851,   134,  2634,   425,   319,  1856,   923,  2570,
     946,  1444,   198,   425,   488,   155,  1449,   929,   930,  1409,
     932,  1989,  1990,   398,   479,   400,   394,   425,   964,   487,
     168,   279,   490,  1544,   435,   688,  1435,  1548,   236,  1550,
    2601,  1440,   487,   347,   348,   490,  2508,   448,   484,   236,
     486,  1472,   488,   989,   281,   784,   487,   822,   469,   490,
     996,   790,   200,   166,  2160,   980,   486,   435,   281,    23,
     398,   472,   400,   838,   486,    29,   262,   215,   264,   487,
     448,  1017,   236,   490,   359,   486,   224,   490,   486,   492,
     283,  2001,  2002,  2003,  2004,   168,  1539,   425,    84,  1512,
      86,   486,    88,   325,   472,   487,   487,  2126,   490,  1552,
     964,  2126,  2574,   167,  2126,  2721,  2126,  1617,   486,   394,
     258,   210,  1512,   216,   264,   252,   253,   200,  2689,   269,
     487,    13,    14,   490,   274,  2291,   865,    54,   360,   792,
     333,   279,   215,  1556,   337,   874,   487,  1257,  1648,   490,
     487,   224,   283,   490,   352,   398,   487,   400,   887,   490,
     435,  2722,  2220,    11,   486,   352,  1556,    15,   897,   262,
     899,   900,   394,   366,    22,   448,   487,   450,   194,   490,
     134,    31,    32,  1702,    32,    33,  1122,   157,  1688,   469,
    2082,  1775,   162,  1777,   214,  2081,  1132,   129,   352,   144,
    1896,  2807,   398,  2859,   400,   343,   337,   338,   587,  1145,
     589,   486,   157,  2069,   149,  1151,  1152,   162,  2258,   441,
    2260,  2827,   487,   155,   333,   490,   149,   425,   321,   148,
    1166,  2080,   486,  2082,  2120,   366,   149,    85,   425,   432,
     487,   149,    92,   490,   325,  2806,   473,   474,   475,   487,
     477,   478,   479,   480,   481,   482,   487,   227,  1368,   490,
     473,   474,   475,   208,   477,   478,   479,   480,   481,   482,
     343,   425,   412,   264,  1210,  2881,   369,  1870,  1871,   360,
     488,   487,   227,   423,   490,  2040,    23,  1835,   486,  1209,
    1226,   429,    29,   487,  1210,    36,   490,  1151,  1152,   486,
     555,    81,   557,  1239,   487,  1241,   276,   490,  1244,  1245,
     486,   964,  1166,   394,  1236,   452,  1236,  1236,  1254,   438,
    1256,  1257,  1258,  1259,  1260,  1261,  1262,  1236,  1236,   283,
     157,   276,   486,    23,   427,   162,   352,   269,   486,    29,
     285,    23,   274,  1279,   360,   308,     8,    29,  1284,  1285,
    1286,  1287,  1288,  1289,    16,    17,    18,  1293,  1294,   149,
     441,   487,  1298,   441,   490,   487,  1302,  2425,   490,  1305,
    1306,  1307,  1308,  1309,  1310,  1311,  1312,  1313,   394,   333,
    1316,   486,  1894,   337,  2540,  1321,     0,   486,  1324,   486,
    1326,  2262,  1328,    35,  2265,   486,     8,   134,     5,    11,
     227,     8,    16,    13,    14,   487,  2101,    14,   490,   149,
     487,   149,   366,   490,  1350,   487,   487,    24,   490,   490,
      34,    28,   149,   487,   487,   441,   490,   490,   279,    41,
    1284,  1347,  1368,  1355,   394,  2327,    48,  1850,    13,    14,
     359,  1377,  1378,  2299,   134,    59,    13,    14,   292,   276,
      93,   486,   134,  1896,  2422,   487,    13,    14,   490,     8,
    1850,    73,    11,    77,    36,  1965,   225,    16,    17,    18,
    1968,    13,    14,  1409,   487,   394,   421,   490,   432,  1415,
     412,  1417,   487,   486,    33,   490,  2249,    13,    14,   475,
    1889,   423,  1602,  1603,    50,    13,    14,  1607,  1151,  1152,
    2263,   484,   488,   487,  1917,   487,   490,   487,   490,   359,
     490,   487,     5,  1166,   490,   359,   435,  2575,    13,    14,
    1456,  1250,  1935,  1459,  1460,   168,  1462,  1917,   487,   448,
     142,   490,   487,  1643,  1644,   490,   487,     5,    94,   490,
    2508,    13,    14,  1479,   394,  1935,   283,  1960,  2022,   487,
     394,  2049,   490,   472,  1967,  1409,  1492,   200,   162,   487,
     172,  1497,   490,     5,   120,   487,  1488,   486,   490,     5,
    1960,   486,   215,     5,   186,  2159,  1512,  1967,   564,   191,
     487,   224,   138,   490,   487,   435,   142,   490,  2100,   439,
    2102,   435,   486,   283,   486,  1985,   333,  2116,   448,   487,
     337,   283,   490,  1539,   448,   486,  2574,   163,  1337,   486,
     166,   597,   182,   183,   226,   258,  1552,   486,  1554,   281,
    1556,   486,   472,  2318,   180,  1561,   486,   359,   472,   366,
    1566,  1284,   487,   486,  2790,   490,   486,     5,   487,    13,
      14,   490,   486,   333,   486,   493,   486,   337,   634,   635,
     636,   333,   486,  1604,   487,   337,   487,   490,  1512,   490,
    2546,   486,   394,   212,    13,    14,  1602,  1603,  1604,   281,
     486,  1607,    13,    14,   522,    67,   366,   486,   248,   249,
    1616,  1617,  1618,  1619,   366,    13,    14,   486,  2101,   486,
    1626,    13,    14,  1629,   449,   432,     9,  1648,    13,    14,
     343,    15,  1556,   435,    13,    14,   210,  1643,  1644,    13,
      14,  2101,  1648,   269,    13,    14,   448,   490,     6,    96,
    2416,   277,   114,    11,    36,   573,  1662,    15,   366,  1665,
     276,  1667,   281,    21,    22,    23,    13,    14,    26,   162,
     472,    29,   432,  2156,    32,    33,  2330,  2331,    13,    14,
     432,   162,  1688,   274,   486,   225,  1409,   486,  2359,   371,
      13,    14,   486,   319,  1700,   405,  2156,  1718,   347,   348,
    1700,  2269,   356,   357,   347,   348,  1700,    85,  1714,   171,
     490,   347,   348,   405,  1714,  2283,   356,   357,    54,    77,
    1714,  1713,  1728,  1713,  1713,    54,    84,    85,    86,    87,
      88,   899,   900,  2278,  1713,  1713,   405,  1743,   255,   405,
    1539,   473,   474,   475,  1543,   477,   478,   479,   480,   481,
     482,   487,   495,  1552,   405,  1761,  1936,  1937,  1938,  1939,
    2220,   448,  1942,  1943,  1944,  1945,  1946,  1947,  1948,  1949,
    1950,  1951,  1778,  1779,  1780,  2540,   149,    92,   141,   488,
     173,   264,   264,   486,    36,    36,   486,     9,   470,  1512,
     474,    35,   403,   403,   484,   477,   478,   479,   480,   481,
     482,   194,   264,   484,   405,   405,   405,   269,   405,  1989,
    1990,   490,   444,  1819,   144,   486,    11,   490,   485,   495,
     490,   403,   486,   269,   486,   405,   176,   157,   167,   487,
     158,   486,   162,  1556,   429,    36,   208,   230,   490,   369,
     216,   280,   526,   527,  1850,   901,  2329,   486,   216,   490,
     312,   264,   216,   285,   473,   474,   475,   487,   477,   478,
     479,   480,   481,   482,   317,   327,   441,   277,   924,  2329,
     149,   486,   486,     8,   149,   448,    11,   264,   208,  2841,
     279,    16,    17,    18,   487,   469,   484,   264,  1894,   279,
    1896,   284,   469,   487,   950,   487,   580,   227,   582,  2359,
    1892,   487,   487,  2416,    36,    36,   485,   963,  1914,   487,
     167,  1917,   488,   469,   167,   487,   487,  1923,   487,   487,
    1926,   487,   486,  1929,   289,   487,  1850,   487,   984,  1935,
    1936,  1937,  1938,  1939,   487,   487,  1942,  1943,  1944,  1945,
    1946,  1947,  1948,  1949,  1950,  1951,   276,  1997,   405,  1955,
    1956,   486,   486,   486,  1960,   285,   445,   445,   435,  1965,
     422,  1967,   279,   471,   475,  2425,   280,  1973,   280,   280,
    1976,   427,  1978,   235,  1995,   490,   405,    36,   264,  1985,
    1986,   486,   149,  1989,  1990,  1784,   194,   283,  1994,  1995,
     149,  2012,   149,  1917,  2583,   487,    55,   405,   405,   917,
     518,   405,   405,   487,  2010,   398,  2012,   400,   487,   485,
    2010,  1935,  2012,   487,   277,   490,  2010,  2023,  2012,   279,
     448,    36,   149,   149,   485,  2790,  2032,  2645,  1827,   422,
     485,   269,   425,   140,   167,    11,  1960,  2506,    67,  2609,
    1839,   162,  2048,  1967,    73,   487,   105,   487,  2630,   167,
     487,   486,   394,   518,   487,   167,    85,  2540,   472,   445,
     490,  1985,   176,   487,   487,   487,   340,   434,   486,  1125,
    2588,    83,   149,   280,   486,   171,   416,   212,   487,    36,
    2540,   486,    79,   429,   490,   114,   486,   116,  2606,   485,
    2096,   421,   487,   490,  2100,  2101,  2102,  1896,   167,   487,
     215,   518,  1901,   787,  1903,   486,   396,   487,  1907,  1908,
    2728,   486,   171,   288,   215,  2575,  2686,   475,   286,    54,
     475,   487,  2605,   481,   486,  2608,   484,  1850,   487,   486,
     488,   179,   448,   196,   193,   493,   185,   488,   405,   269,
     824,   269,   171,   488,   488,  2605,   281,   488,  2608,   475,
    2156,   488,  1208,   487,   484,  2147,   488,   487,   488,   405,
      36,   488,   520,   521,   522,   264,   488,  2173,   488,   198,
     688,   448,   106,   279,    36,   488,   860,  2101,   488,   488,
     488,  2650,   488,   242,  2702,   488,   488,   488,  2795,   488,
     488,   250,    36,   488,  1917,   488,   488,   555,    36,   557,
     488,   488,   167,   262,   488,   488,   564,  2789,  2214,  2215,
     488,    55,  1935,  2219,  2220,   573,   488,    55,  2224,   298,
     486,  2227,  2228,   688,   215,   486,  2232,   585,   486,   447,
     486,   486,  2156,    85,   293,   264,   130,  1960,   487,   597,
     269,   327,  2422,   486,  1967,   929,   930,  2253,   932,   486,
     216,  2257,    36,  2253,  2723,   114,   149,  2257,    73,  2253,
     121,   105,  1985,  2257,   149,    36,   487,   105,   348,  1325,
     348,   688,  2278,    54,   792,    36,   634,   635,   636,   338,
     486,   486,   486,   312,   429,  1203,   434,  1205,  2280,  2281,
    1346,   490,  1348,    73,    36,   184,  2220,   416,   327,    67,
     429,   360,  2101,   282,    67,  2311,   486,  2790,   490,    36,
     350,   366,   475,   269,  2320,   184,   240,   486,   416,    36,
     486,   380,   282,  2329,  2123,   486,   486,   792,  2508,   282,
    2790,   487,   487,   262,   279,  1391,   347,     9,   473,   474,
     475,   334,   477,   478,   479,   480,   481,   482,   196,   193,
      33,   279,   279,  2359,   119,   193,   427,     9,    22,   582,
    1423,   486,     8,   487,   487,    11,  2083,  2096,  1773,  2046,
      16,    17,    18,  2722,  2482,   792,  2786,  2132,  2101,  2792,
    2282,  2323,  2862,  2637,  2840,  2828,  1779,  2558,  1767,  2137,
     951,  2789,  1829,   422,  2574,    41,  2838,  2100,   242,  1764,
    2787,  1199,    48,  1151,   242,  2329,   250,  2399,  1833,  1894,
    2416,  2416,   250,  2123,  1470,  1394,  2422,   917,   262,  2425,
     892,  1728,  2699,   939,   262,   938,  2617,    73,  2434,  2435,
    2777,  1743,  2438,  2156,  1368,  2359,  2711,  2026,   796,  1393,
     941,  2274,  1714,  2244,  2450,  2012,   964,   169,  2259,   293,
    2450,   173,  2602,  2459,  2010,   293,  2450,  2689,  2464,  2459,
    2688,  2467,  2706,  1250,  2464,  2459,  2707,  2467,  2474,  2475,
    2464,  1250,   194,  2467,  2273,  1250,  2275,  1250,  2775,  2478,
    2486,  2776,  2488,  1401,  2762,  1322,  2486,  1627,  1731,  1666,
    1241,  1562,  2486,  1411,   338,  1413,  1462,  2220,  1416,   964,
     338,  2425,  2508,   861,  1422,  1663,  1424,  1326,   230,  1836,
    1552,  2681,  1210,  1347,  2047,   237,   360,  1348,  1436,    -1,
      -1,   923,   360,  1441,    -1,  1209,   172,  1445,  1446,  1447,
    1448,    -1,  1450,  1451,  2540,    -1,   380,    -1,    -1,    -1,
     186,    -1,   380,   901,    -1,   191,    -1,   964,    -1,    -1,
      -1,    -1,  1236,    -1,    -1,    -1,    -1,  2549,    -1,   917,
     918,    -1,   284,    -1,  2570,   923,   924,   925,  2574,  2575,
    2570,    -1,    -1,    -1,    -1,    -1,  2570,    -1,    -1,  2571,
     226,    -1,   518,    -1,    -1,    -1,    -1,    -1,  2609,    -1,
      -1,  2597,   950,   951,    -1,  2601,  2395,    -1,    -1,  2605,
      -1,  2601,  2608,  2609,    -1,   963,  2329,  2601,    -1,    -1,
      -1,  1295,    -1,    -1,  2620,    -1,  2540,  2416,    -1,    -1,
      -1,    -1,   980,    -1,  2630,    -1,   984,    -1,  2634,  2635,
     352,    -1,    -1,  1151,  1152,   281,  2359,  1693,    -1,    -1,
      -1,    -1,    -1,   487,    -1,    -1,    -1,    -1,  1166,    -1,
      -1,  2575,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2662,  1355,    -1,    -1,    -1,    -1,   398,    -1,   400,    -1,
    2686,  2605,     8,  2689,  2608,    11,  1151,  1152,    -1,  2689,
      16,    17,    18,    -1,   416,  2689,    -1,    -1,    -1,    -1,
     422,  1166,  2425,   425,    -1,  2711,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2722,    -1,    -1,    -1,
      -1,    -1,  2722,    -1,    -1,   371,  2718,    -1,  2722,    -1,
      -1,    -1,    -1,    -1,  1151,  1152,  2742,    -1,    -1,    -1,
      -1,  2540,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1166,
      -1,    -1,   688,    -1,    -1,  2761,  2762,    -1,    -1,  1117,
      -1,    -1,    -1,    -1,    -1,    -1,  1284,  1125,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1135,  1834,    -1,
      -1,    -1,    -1,  2789,  2790,  1841,  1842,  1843,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2806,    -1,  2808,    -1,  1488,  1861,  2806,  2799,    -1,    -1,
    1168,    -1,  2806,    -1,    -1,    -1,    -1,  2540,    -1,  1284,
      -1,    -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,    -1,    -1,    -1,
      -1,  1199,  1200,    -1,  1202,  1203,    -1,  1205,  1206,    -1,
    1208,    -1,  2575,    -1,    -1,    -1,   792,    -1,    -1,  2658,
      -1,    -1,    -1,    -1,  2870,    -1,  2790,  1284,    -1,     0,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2605,    -1,    -1,  2608,   212,    -1,    19,    -1,
      -1,  1409,    -1,    -1,    -1,    -1,    -1,  1255,    29,    -1,
      31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,
    1604,    -1,    -1,    -1,    -1,    56,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1292,    -1,  1854,    68,    -1,    -1,
      -1,    -1,    -1,    -1,  1409,    -1,    -1,    -1,    79,    -1,
      -1,  2007,  2008,  2009,    -1,   281,    -1,     0,    -1,    90,
      -1,    92,    -1,    -1,  1648,    -1,    -1,  1325,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
      -1,    -1,  1666,    -1,    -1,    -1,    -1,    -1,  1346,    -1,
    1348,  2790,  1409,   124,  1512,    -1,    -1,    -1,  1682,  1357,
      -1,  1359,    -1,   134,    -1,    -1,  2062,    -1,    -1,   140,
      -1,    -1,    -1,    -1,    -1,    -1,  1700,   148,    -1,   150,
     151,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   964,  1713,
    1714,    -1,   163,  1391,  1718,    -1,    -1,    -1,  1556,    -1,
      -1,    -1,  1400,  1401,    -1,    -1,    -1,  1512,    -1,    92,
      -1,    -1,    -1,  1411,  1412,  1413,  1414,    -1,  1416,   190,
      -1,    -1,    -1,    -1,  1422,    -1,  1424,  2790,    -1,    -1,
      -1,  2127,    -1,    -1,    -1,    -1,    -1,  1435,  1436,    -1,
      -1,    -1,  1440,  1441,    -1,    -1,    -1,  1445,  1446,  1447,
    1448,  1556,  1450,  1451,    -1,  1512,    -1,    -1,   229,    -1,
      -1,   144,    -1,    -1,  2160,    -1,    -1,    -1,    -1,    -1,
      -1,     0,  1470,  1471,   157,    -1,    -1,    -1,    -1,   162,
      -1,   108,   109,    -1,   167,    -1,    -1,    -1,  1486,    -1,
      -1,    -1,    -1,   176,    -1,    -1,   179,    -1,    -1,  1556,
      -1,    -1,    -1,    -1,    -1,    -1,  2064,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
    2088,    -1,    -1,    -1,    -1,   306,    -1,    -1,   309,    -1,
    2236,  2237,  2238,  2239,   227,  2103,  2104,  2105,  2106,  2107,
    2108,  2109,  2110,  2111,  2112,   182,   183,    -1,    -1,    -1,
      -1,    -1,     8,    92,    -1,    11,   337,    -1,  1892,    -1,
      16,    17,    18,    -1,   345,  1151,  1152,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,   359,    -1,
    1166,    -1,    -1,   276,    -1,   366,   279,    -1,    -1,   370,
      -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,   380,
      -1,    -1,    -1,    -1,    -1,   144,    -1,   244,   245,   246,
     247,   248,   249,   394,    -1,   252,   253,    -1,   157,  1627,
      -1,    -1,    -1,   162,    -1,    -1,    -1,    -1,   167,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,
     179,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,   430,
      -1,    -1,  1660,    -1,   435,    -1,    -1,    -1,    -1,    -1,
      -1,  1995,    -1,    -1,    -1,    -1,    -1,   448,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,  2010,    -1,  2012,    -1,
      -1,    -1,  1850,    -1,    -1,  1693,    -1,     0,   227,    -1,
      -1,   472,  1700,    -1,     8,    -1,    -1,    11,  1284,    -1,
      -1,   394,    -1,    -1,    -1,   486,  1714,    -1,   489,    -1,
    1718,     8,    -1,  1721,    11,  1723,    -1,    -1,    -1,   356,
     357,    -1,    -1,     8,    -1,    -1,    11,    41,   421,    -1,
      -1,    16,    17,    18,    48,  1850,   429,   276,    -1,    -1,
     279,    -1,    -1,    -1,    41,    -1,   285,    -1,    33,  1917,
      -1,    48,   445,    -1,   447,   448,   212,    -1,    -1,    73,
      -1,  1769,    -1,    -1,    -1,    -1,    -1,  1935,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    92,
      -1,    -1,    -1,  1850,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   484,  1960,    -1,   487,   488,   489,    -1,    -1,  1967,
      -1,   340,  1917,    -1,    -1,    -1,    -1,    -1,    -1,  2515,
      -1,    -1,    -1,  2147,    -1,    -1,    -1,  1985,    -1,    -1,
    1935,  1829,    -1,  1409,    -1,   281,  1834,    -1,   142,   466,
     467,   144,  1840,  1841,  1842,  1843,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   157,  1960,  1854,    -1,    -1,   162,
    1917,    -1,  1967,  1861,   167,   394,    -1,    -1,   172,    -1,
      -1,  2567,    -1,   176,    -1,  1873,   179,    -1,  1935,    -1,
    1985,    -1,   186,    -1,    -1,   172,    -1,   191,    -1,    -1,
      -1,  1889,   421,    -1,    -1,    -1,    -1,    -1,    -1,   186,
     429,    -1,    -1,  1960,   191,   208,    -1,  1905,  1906,    -1,
    1967,    -1,    -1,    -1,    -1,    -1,   445,    -1,   447,   448,
      -1,    -1,   226,    -1,   227,    -1,    -1,    -1,  1985,  2253,
    1928,    -1,  2628,  2257,    -1,    -1,  1512,   212,    -1,   226,
      -1,    -1,    -1,  2101,    -1,    -1,    -1,    -1,    -1,  2507,
      -1,    -1,    -1,    -1,    -1,   484,  2280,  2281,   487,   488,
     489,    -1,    -1,    -1,    -1,  2661,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   276,    -1,    -1,   279,   281,    -1,    -1,
    1556,    -1,   285,  2541,  2542,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   281,    -1,  2101,  2555,  2156,    -1,
      -1,  1999,    -1,    -1,    -1,    -1,   281,    -1,    -1,  2007,
    2008,  2009,  2010,    -1,  2012,  2013,    -1,    -1,    -1,  2017,
    2018,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,   340,    -1,    -1,
      -1,   553,   554,    -1,  2101,    -1,    -1,    -1,  2046,    -1,
      -1,  2156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2619,  2220,    -1,  2062,    -1,  2064,   371,    -1,    -1,
    2068,  2069,  2070,    -1,  2072,  2399,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,
    2088,   394,  2090,    -1,    -1,    -1,    -1,    -1,    -1,  2156,
      -1,   613,   614,    -1,    -1,  2103,  2104,  2105,  2106,  2107,
    2108,  2109,  2110,  2111,  2112,  2220,    -1,    -1,   421,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   429,    -1,    -1,  2127,
      -1,    -1,    -1,    -1,    -1,  2459,    -1,    -1,    -1,  2137,
    2464,    36,   445,  2467,   447,   448,    -1,    -1,    -1,    -1,
    2148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      55,    -1,  2160,  2220,    -1,    -1,   470,    -1,    -1,  2167,
      -1,  2329,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,   484,    -1,   470,   487,   488,   489,    -1,    -1,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,   473,   474,
     475,  2359,   477,   478,   479,   480,   481,   482,    -1,    -1,
     105,   106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   114,
      -1,    -1,    -1,    -1,  2329,  2549,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2233,    -1,    -1,  2236,  2237,
    2238,  2239,    -1,    -1,    -1,  2243,  2244,  2571,  2246,    -1,
      -1,  2249,    -1,    -1,  2359,  2253,    -1,    -1,    -1,  2257,
      -1,    -1,    -1,    -1,    -1,  2263,    -1,  2425,    -1,    -1,
      -1,    -1,  2329,    -1,  1850,    -1,   171,  2601,    -1,   791,
      -1,    -1,    -1,    -1,  2282,  2609,    -1,    -1,    -1,  2287,
      -1,    -1,    -1,  2291,    -1,    -1,   808,    -1,   193,    -1,
      -1,  2299,  2359,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2425,    -1,    -1,   835,    -1,    -1,  2324,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2662,    -1,
      -1,  1917,    -1,   855,   856,   857,    -1,   242,   860,    -1,
      -1,    -1,    -1,    -1,    -1,   250,    74,    -1,    -1,  1935,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,  2425,   264,
     882,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2540,    -1,  1960,    -1,    -1,    -1,    -1,    -1,
      -1,  1967,  2390,    -1,  2718,    -1,    -1,    -1,   293,    -1,
    2398,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1985,
      -1,  2409,    -1,    -1,    -1,    -1,    -1,  2575,    -1,   931,
      -1,    -1,    -1,   935,   936,   143,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   152,  2540,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   338,    -1,    -1,   164,  2605,    -1,    -1,
    2608,   169,  2450,  2451,    -1,    -1,  2454,    -1,    -1,  2457,
      -1,  2459,    -1,    -1,    -1,   360,  2464,    -1,    -1,  2467,
    2575,  2469,    -1,    -1,  2472,  2799,   194,   989,    -1,    -1,
      -1,    -1,    -1,  2540,   996,   380,    -1,   382,  2486,     8,
     385,    -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2605,    -1,    -1,  2608,    -1,  1017,    -1,    -1,  2506,  2507,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2515,  2575,   237,
      -1,    -1,    41,   241,    -1,  2101,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,   784,    -1,    -1,    -1,    -1,    -1,
     790,    -1,    -1,  2541,  2542,    -1,    -1,    -1,  2605,    -1,
      -1,  2608,    -1,  2551,    73,    -1,    -1,  2555,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2567,
      -1,    -1,  2570,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2156,    -1,    -1,    -1,    -1,    -1,   304,    -1,    -1,    -1,
    2588,   486,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,    -1,    -1,  2601,    -1,    -1,    -1,    -1,  2606,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2615,    -1,    -1,
    1132,  2619,    -1,   142,   874,    -1,    -1,    -1,    -1,    -1,
    2628,   349,  2790,    -1,   352,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   360,    -1,  2220,   363,    -1,   897,    -1,   899,
     900,    -1,  2650,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2661,   382,    -1,    -1,   186,    -1,    -1,
       8,    -1,   191,    11,    -1,    -1,   394,    -1,    16,    17,
      18,    -1,    -1,   401,    -1,  2790,    -1,    -1,    -1,    -1,
      -1,  2689,   410,    -1,    -1,    33,    -1,    -1,   416,    -1,
    2698,    -1,    -1,    41,  2702,    -1,    -1,   226,  2706,    -1,
      48,    -1,    -1,    -1,    -1,   965,    -1,    -1,   968,   969,
      -1,    -1,    -1,   441,  2722,  2723,  2724,  2725,    -1,    -1,
      -1,    -1,  1244,  2790,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,  1254,    -1,  1256,    -1,    -1,  1259,  1260,  1261,
    1262,    -1,    -1,  2329,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   281,    -1,    -1,    -1,    -1,  1279,  2766,    -1,
      -1,    -1,    -1,  1285,  1286,  1287,  1288,  2775,    -1,  2777,
      -1,  1293,  1294,  2359,    -1,    -1,  1298,    -1,  2786,    -1,
    1302,    -1,    -1,  1305,  1306,  1307,  1308,  1309,  1310,  1311,
    1312,  1313,  2800,    -1,  1316,    -1,    -1,    -1,  2806,  1321,
      -1,    -1,  1324,    -1,  1326,    -1,  1328,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2824,    -1,    -1,    -1,
      -1,    -1,    -1,   875,   172,    -1,    -1,    -1,  1350,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,  2425,
      -1,    -1,   371,   191,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1377,  1378,   108,   109,    -1,
      -1,    -1,   914,    -1,   212,   213,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,   226,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,  1149,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1160,    -1,  1162,    -1,    -1,    -1,    -1,    33,    -1,    -1,
      36,  1171,    -1,    -1,    -1,    41,   264,    -1,    -1,   267,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,  1188,    -1,
      -1,   182,   183,   281,  1456,    -1,   284,  1459,  1460,    -1,
    1462,   470,    -1,    -1,    -1,    -1,    -1,    73,   477,   478,
     479,   480,   481,   482,  2540,  1215,  1216,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1021,
    1492,    -1,    -1,    -1,    -1,    -1,  1028,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1247,  1248,  2575,
      -1,  1251,  1252,   244,   245,   246,   247,   248,   249,    -1,
      -1,   252,   253,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2605,
      -1,    -1,  2608,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1554,    -1,    -1,    -1,    -1,    -1,    -1,  1561,
      -1,    -1,    -1,    -1,  1566,    -1,   172,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     186,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1604,    -1,    -1,    -1,   212,   213,    -1,    -1,
      -1,    -1,    -1,    -1,  1616,    -1,  1618,  1619,    -1,    -1,
     226,    -1,    -1,    -1,  1626,   356,   357,  1629,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1377,  1378,    -1,
      -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,   264,    -1,
    1662,   267,   490,  1665,    -1,  1667,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1429,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1439,
      -1,    -1,  1442,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1242,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,  1253,    -1,    -1,  2790,  1257,  1728,    -1,    -1,    -1,
      -1,  1263,  1264,  1265,    -1,   466,   467,  1269,    -1,    -1,
      -1,  1743,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,   486,    -1,    -1,    -1,  1761,
      -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,     8,
      -1,    -1,    11,  1513,  1514,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,  1323,    -1,    16,    17,    18,    -1,    -1,    -1,  1539,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      33,    -1,  1552,    -1,    -1,    -1,    -1,  1819,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,  1364,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1376,    -1,    -1,   142,    -1,  1381,
      73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,   172,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   186,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
      -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1914,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,  1923,     5,    -1,  1926,    -1,    -1,  1929,    -1,    -1,
      -1,   226,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,   172,
      -1,    -1,   191,  1955,  1956,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,  1704,    -1,    -1,    -1,   191,    -1,
      -1,  1973,    -1,    -1,  1976,    -1,  1978,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1986,    -1,   281,   226,    -1,   212,
     213,    -1,  1994,  1995,    -1,  1735,  1736,    -1,    -1,    -1,
      -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2023,    -1,    -1,    -1,   108,   109,    -1,    -1,    -1,
    2032,    -1,  1564,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   264,   281,    -1,   267,    -1,  2048,    -1,    -1,    -1,
      -1,  1583,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,  1600,    -1,
    1602,  1603,    -1,  1605,    -1,  1607,   371,    -1,    -1,    -1,
    1612,    -1,    -1,  1615,     8,    -1,    -1,    11,  1620,    -1,
      -1,  1623,    16,    17,    18,    -1,    -1,    -1,  1630,   182,
     183,    -1,  1634,  1635,  1636,  1637,    -1,    -1,    -1,    33,
      -1,  1643,  1644,    -1,  1646,  1647,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,  1658,  1867,    -1,  1661,
      -1,    -1,   371,    -1,    -1,    -1,    -1,  1669,  1670,  1671,
    1672,  1673,  1674,  1675,  1676,  1677,  1678,    -1,   371,    73,
      -1,    -1,    -1,    -1,  1686,    -1,    -1,    -1,  1690,    -1,
      -1,   244,   245,   246,   247,   248,   249,    -1,    -1,   252,
     253,  2173,    -1,    -1,    -1,   470,    -1,    -1,    -1,  1711,
      -1,    -1,   477,   478,   479,   480,   481,   482,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2214,  2215,    -1,    -1,    -1,  2219,    -1,    -1,
      -1,    -1,  2224,    -1,    -1,  2227,  2228,    -1,    -1,    -1,
    2232,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,   470,   172,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,   186,    -1,   487,    23,    -1,   191,    -1,    -1,
      -1,    29,    -1,   356,   357,    -1,  2278,    -1,    36,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,   213,
    1822,  1823,  1824,    -1,    -1,    -1,    -1,    55,    -1,    -1,
      -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,  2320,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,  1859,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,
     264,    -1,    -1,   267,    -1,    41,    -1,   105,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,     8,   281,    -1,    11,
     284,  2101,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    73,    -1,    -1,
      -1,  1913,    -1,   466,   467,    -1,    -1,  1919,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
    1932,  1933,  1934,    -1,  1936,  1937,  1938,  1939,    -1,    -1,
    1942,  1943,  1944,  1945,  1946,  1947,  1948,  1949,  1950,  1951,
    1952,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2434,  2435,    -1,   193,  2438,  1969,    -1,  1971,
      -1,    -1,  1974,  1975,    -1,    -1,    -1,   371,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1988,  1989,  1990,  1991,
      -1,  1993,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2474,  2475,    -1,    -1,   172,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   242,    -1,  2488,    -1,    -1,    -1,
     186,    -1,   250,    -1,    -1,   191,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   212,   213,    -1,    -1,
     172,    -1,    -1,    -1,    -1,   283,    -1,    -1,    -1,    -1,
     226,    -1,    -1,  2065,   186,   293,    -1,    -1,    -1,   191,
      -1,    -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
     212,   213,    -1,   487,    -1,    -1,    -1,    -1,   264,    -1,
      -1,   267,    -1,    -1,   226,   333,    -1,    -1,  2318,   337,
     338,    -1,    -1,  2323,    -1,   281,    -1,    -1,   284,    -1,
      -1,    -1,    -1,    -1,    -1,  2597,    -1,    -1,    -1,    -1,
      -1,    -1,   360,    -1,    -1,    -1,    -1,  2609,   366,    -1,
      -1,    -1,   264,    -1,    -1,   267,    -1,    -1,  2620,    -1,
      -1,    -1,   380,    -1,    23,  2365,  2366,    -1,    -1,   281,
      29,    -1,    -1,  2635,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    -1,  2174,    -1,    -1,    -1,  2178,  2179,    -1,  2181,
      -1,    -1,  2184,  2185,  2186,  2187,    55,    -1,    -1,  2191,
    2192,  2193,  2194,  2195,  2196,  2197,  2198,  2199,  2200,  2201,
    2202,    -1,    -1,    -1,   432,   371,    -1,    -1,    -1,    -1,
      -1,  2213,    -1,    -1,  2216,    -1,  2218,    -1,    -1,    -1,
    2222,    -1,    -1,  2225,  2226,    -1,    -1,  2229,  2230,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,    -1,    -1,  2711,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,  2270,    -1,
    2742,    -1,    -1,    -1,    -1,  2277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2290,  2761,
    2762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,    -1,    -1,  2529,
    2530,   487,    -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,
    2540,    -1,    -1,    -1,    -1,    -1,  2808,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,    -1,
      -1,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,  2870,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   283,    -1,  2418,    -1,    -1,    -1,
    2422,    -1,    -1,    -1,   293,    -1,  2428,  2429,  2430,    -1,
      -1,  2433,    -1,    -1,  2436,  2437,    -1,    -1,    -1,  2441,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   333,    -1,    -1,    -1,   337,   338,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   360,    -1,    -1,    -1,    -1,    -1,   366,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2508,    -1,    -1,    -1,
      -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2526,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   432,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2573,  2574,    -1,    -1,    -1,  2578,  2579,  2580,    -1,
    2790,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2613,  2614,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2626,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2638,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,  2683,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,  2701,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,  2720,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,  2734,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,   129,  2797,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,  2811,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,
      -1,    -1,   477,   478,   479,    -1,    -1,    -1,    -1,   484,
      -1,   486,   487,    -1,    -1,    -1,   491,    -1,   493,   494,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,   472,
      -1,    -1,    -1,    -1,   477,   478,    -1,    -1,    -1,    -1,
      -1,   484,    -1,   486,   487,    -1,    -1,    -1,   491,    -1,
     493,   494,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,   439,   440,
     441,   442,   443,    -1,    -1,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,   472,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,
      -1,    -1,    -1,   484,    -1,   486,    -1,    -1,    -1,    -1,
     491,    -1,   493,   494,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,   222,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
     439,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
      -1,    -1,    -1,    -1,    -1,   484,    -1,   486,    -1,    -1,
      -1,    -1,   491,    -1,   493,   494,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,
     477,   478,   479,    -1,    -1,    -1,    -1,   484,    -1,   486,
      -1,    -1,    -1,    -1,   491,    -1,   493,   494,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,
      -1,    -1,   477,   478,    -1,    -1,    -1,    -1,    -1,   484,
      -1,   486,    -1,    -1,    -1,    -1,   491,    -1,   493,   494,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,    -1,
      -1,    -1,    -1,    -1,   477,   478,    -1,    -1,    -1,    -1,
      -1,   484,    -1,   486,   487,    -1,    -1,    -1,   491,    -1,
     493,   494,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,   439,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,    -1,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,
      -1,    -1,    -1,   484,    -1,   486,   487,    -1,    -1,    -1,
     491,    -1,   493,   494,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
      -1,    -1,    -1,    -1,    -1,   484,    -1,   486,    -1,    -1,
      -1,    -1,   491,    -1,   493,   494,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,
     477,   478,    -1,    -1,    -1,    -1,    -1,   484,    -1,   486,
      -1,    -1,    -1,    -1,   491,    -1,   493,   494,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,
      -1,    -1,   477,   478,    -1,    -1,    -1,    -1,    -1,   484,
      -1,   486,    -1,    -1,    -1,    -1,   491,    -1,   493,   494,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,    -1,
      -1,    -1,    -1,    -1,   477,   478,    -1,    -1,    -1,    -1,
      -1,   484,    -1,   486,    -1,    -1,    -1,    -1,   491,    -1,
     493,   494,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,   439,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,    -1,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,
      -1,    -1,    -1,   484,    -1,   486,    -1,    -1,    -1,    -1,
     491,    -1,   493,   494,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
     439,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
      -1,    -1,    -1,    -1,    -1,   484,    -1,   486,    -1,    -1,
      -1,    -1,   491,    -1,   493,   494,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,
     477,   478,    -1,    -1,    -1,    -1,    -1,   484,    -1,   486,
      -1,    -1,    -1,    -1,   491,    -1,   493,   494,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,
      -1,    -1,   477,   478,    -1,    -1,    -1,    -1,    -1,   484,
      -1,   486,    -1,    -1,    -1,    -1,   491,    -1,   493,   494,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,    -1,
      -1,    -1,    -1,    -1,   477,   478,    -1,    -1,    -1,    -1,
      -1,   484,    -1,   486,    -1,    -1,    -1,    -1,   491,    -1,
     493,   494,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,   439,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,    -1,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,
      -1,    -1,    -1,   484,    -1,   486,    -1,    -1,    -1,    -1,
     491,    -1,   493,   494,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
     439,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
      -1,    -1,     3,     4,     5,     6,     7,   486,     9,    10,
      -1,    -1,    -1,    -1,   493,   494,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,   439,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,
      -1,    -1,   493,   494,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
     439,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,    -1,
      -1,    -1,    -1,    -1,   493,   494,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,    -1,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     477,   478,     3,    -1,    -1,    -1,    -1,   484,    -1,   486,
      -1,    -1,    -1,    -1,   491,    -1,   493,   494,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,   168,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,    -1,
      -1,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   487,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,   280,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,     3,
     472,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   486,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,   280,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   486,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,     3,     4,     5,    -1,    -1,    -1,     9,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,   279,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,     3,    -1,    -1,    -1,    -1,    -1,   477,   478,   479,
      -1,    -1,    -1,    -1,    -1,    -1,   486,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,     3,
     472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   486,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
     394,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,     3,   472,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   486,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,     3,   472,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   486,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   486,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,
       3,     4,     5,    -1,    -1,     8,     9,    -1,    -1,    -1,
      -1,    -1,   486,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    -1,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    -1,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,    -1,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,    -1,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,    -1,   288,   289,   290,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,    -1,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,   467,   468,   469,    -1,     3,    -1,
     473,   474,   475,     8,   477,   478,   479,   480,   481,   482,
      -1,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,    -1,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,
      -1,    41,    -1,    -1,     8,    -1,    -1,    11,    48,    -1,
      -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,
      -1,    -1,     8,    73,    -1,    11,    -1,    41,    -1,    -1,
      16,    17,    18,    -1,    48,    -1,    -1,    -1,    -1,    -1,
       8,    73,    -1,    11,    -1,    -1,    -1,    33,    16,    17,
      18,    -1,    -1,    -1,    -1,    41,    -1,    -1,     8,    73,
      -1,    11,    48,    -1,    -1,    33,    16,    17,    18,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,    33,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   172,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,
     172,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,   172,   191,
      -1,    -1,   212,   213,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   186,    -1,    -1,    -1,   226,   191,    -1,    -1,
     212,   213,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,   212,   213,
     186,    -1,    -1,    -1,   172,   191,    -1,    -1,    -1,    -1,
      -1,    -1,   226,    -1,   264,    -1,    -1,   267,   186,    -1,
      -1,    -1,   172,   191,    -1,    -1,   212,   213,    -1,    -1,
      -1,   281,   264,    -1,   284,   267,   186,    -1,    -1,    -1,
     226,   191,    -1,    -1,   212,   213,    -1,    -1,    -1,   281,
     264,    -1,   284,   267,    -1,    -1,    -1,    -1,   226,    -1,
      -1,    -1,   212,   213,    -1,    -1,    -1,   281,    -1,    -1,
     284,    -1,    -1,    -1,    -1,    -1,   226,    -1,   264,    -1,
      -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   281,   264,    -1,   284,   267,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   281,   264,    -1,   284,   267,    -1,    -1,
      -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,   371,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,   371,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     470,   371,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,    -1,    73,    -1,    -1,   487,   470,    -1,
      -1,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,    -1,    -1,    -1,    -1,   487,   470,    -1,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,    -1,    -1,   487,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,    -1,    -1,    -1,
      -1,   487,   470,    -1,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,   487,
     470,    -1,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   172,    -1,     8,    -1,   487,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    -1,   186,    -1,    -1,
      -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,   212,   213,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,   267,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,   212,
     213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,   487,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,     3,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,    -1,   167,    -1,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,   264,
     265,   266,    -1,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,    -1,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   479,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
      -1,   479,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,   279,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
       4,     5,    -1,    -1,    -1,     9,   477,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,     4,     5,    -1,
      -1,    -1,     9,   477,   478,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,    -1,     8,    -1,    -1,    11,    -1,    -1,
     477,   478,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    33,
      16,    17,    18,    37,    -1,    -1,    -1,    41,    -1,    -1,
       8,    -1,    -1,    11,    48,    -1,    -1,    33,    16,    17,
      18,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    33,    -1,    -1,     8,    73,
      -1,    11,    -1,    41,    -1,    -1,    16,    17,    18,    -1,
      48,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    41,    -1,    -1,     8,    73,    -1,    11,    48,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    73,
      -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,    -1,    -1,
      -1,   167,   186,    -1,    -1,    -1,   172,   191,     8,    -1,
      -1,    11,    -1,   161,    -1,    -1,    16,    17,    18,    -1,
     186,    -1,    -1,    -1,   172,   191,    -1,    -1,   212,   213,
      -1,    -1,    -1,    33,    -1,    -1,    36,    -1,   186,    -1,
      -1,    41,   226,   191,    -1,    -1,   212,   213,    48,    -1,
      -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     226,    -1,    -1,    -1,   212,   213,   186,    -1,    -1,    -1,
      -1,   191,    -1,    73,    -1,    -1,    -1,    -1,   226,    -1,
     264,    -1,    -1,   267,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,   212,   213,    -1,    -1,    -1,   281,   264,    -1,
     284,   267,   186,    -1,    -1,    -1,   226,   191,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   281,   264,    -1,   284,   267,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,   213,
      -1,    -1,    -1,   281,    -1,    -1,   284,    -1,    -1,    -1,
      -1,    -1,   226,    -1,   264,    -1,    -1,   267,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   307,
      -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     264,    -1,    -1,   267,    -1,    -1,   186,   371,    -1,    -1,
      -1,   191,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,
     284,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
      -1,    -1,   212,   213,    -1,    -1,    -1,    -1,   302,    -1,
      -1,    -1,    -1,   371,    -1,    -1,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,   429,    -1,    -1,    16,    17,
      18,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   264,    33,    -1,   267,    -1,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,   281,    -1,    -1,   284,    -1,   470,   371,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,    -1,    -1,    -1,   470,    73,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,    -1,    -1,    -1,
      -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     470,    -1,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   371,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,   470,    -1,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,   167,
      33,    -1,    -1,    36,   172,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,   186,    -1,
      -1,     8,    -1,   191,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    -1,    -1,   212,   213,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,   226,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     470,    -1,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,   267,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,   281,    -1,    11,   284,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,   172,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,     8,    48,   186,    11,    -1,    -1,    -1,   191,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    73,    -1,   212,
     213,    -1,    -1,    -1,    41,   172,    -1,    -1,    -1,    -1,
      -1,    48,    -1,   226,    -1,    -1,    -1,    -1,    -1,   186,
      -1,    -1,    -1,   371,   191,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    73,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,   212,   213,    -1,    -1,    -1,
      -1,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,   226,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,   281,    48,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,   172,   264,    -1,    -1,
     267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     186,    -1,    -1,    -1,   281,   191,    -1,   284,    -1,    -1,
      -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   172,   212,   213,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
     226,    -1,    -1,    -1,   191,    -1,    -1,    -1,   371,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   212,   213,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,   226,
      -1,   267,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   371,   281,    -1,   186,   284,    -1,
      -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,
     267,    -1,    -1,   212,   213,   402,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   281,    -1,    -1,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,
      -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
      -1,    -1,   281,   470,    -1,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   371,    -1,   470,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,
       5,   470,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,    -1,   167,    -1,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,   264,
     265,   266,    -1,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,    -1,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,   225,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,   264,   265,   266,    -1,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,    -1,   167,    -1,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,   264,   265,   266,    -1,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,    -1,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    -1,    -1,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,   164,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,   164,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,   226,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,   279,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,   280,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,   280,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,   394,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
       4,    -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,    -1,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,    -1,   150,   151,   152,   153,    -1,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,    -1,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,    -1,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,    -1,
     265,   266,   267,   268,    -1,    -1,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,    -1,   288,   289,   290,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
      -1,   306,   307,    -1,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,    -1,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
      -1,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   466,   467,   468,   469,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    -1,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,    -1,   150,   151,   152,
     153,    -1,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,    -1,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,    -1,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,    -1,   265,   266,   267,   268,    -1,    -1,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,    -1,   288,   289,   290,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,    -1,   306,   307,    -1,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,    -1,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,   467,   468,   469,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    -1,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,    -1,   150,   151,   152,   153,
      -1,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,    -1,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
      -1,   265,   266,   267,   268,    -1,    -1,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,    -1,   288,   289,   290,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,    -1,   306,   307,    -1,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,    -1,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,    -1,   436,    -1,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,   467,   468,   469,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    -1,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    -1,    -1,    -1,   100,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,    -1,   150,   151,
     152,   153,    -1,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,    -1,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,    -1,    -1,   265,   266,   267,   268,    -1,    -1,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,    -1,   288,   289,   290,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,    -1,   306,   307,    -1,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,    -1,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,    -1,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,    -1,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,   467,   468,   469
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    90,
      92,   110,   124,   134,   140,   148,   150,   151,   163,   190,
     229,   306,   309,   337,   345,   359,   366,   370,   380,   394,
     430,   435,   448,   472,   486,   497,   498,   499,   500,   511,
     512,   515,   517,   521,   535,   536,   538,   540,   547,   549,
     595,   602,   605,   606,   623,   624,   625,   626,   627,   628,
     672,   804,   807,   810,   817,   818,   819,   820,   821,   828,
     832,   838,   840,   845,   849,   850,   853,   854,   856,   857,
     859,   407,   451,   548,   194,   352,   360,   394,   441,   548,
       3,    19,    20,    21,    22,    23,    24,    25,    26,    28,
      29,    30,    38,    39,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    54,    55,    56,    57,
      58,    59,    62,    63,    64,    65,    66,    68,    69,    70,
      71,    72,    74,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    86,    87,    88,    89,    90,    91,    93,    94,
      95,    96,   100,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   115,   117,   118,   119,   120,   121,   122,
     124,   125,   126,   127,   128,   131,   132,   133,   134,   135,
     137,   138,   139,   141,   142,   143,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   156,   158,   159,   160,
     161,   163,   165,   166,   168,   169,   170,   171,   172,   173,
     175,   177,   178,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   192,   193,   194,   195,   196,   197,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   209,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     223,   224,   225,   226,   228,   229,   230,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   265,   266,
     267,   268,   270,   271,   272,   273,   274,   275,   277,   278,
     281,   282,   283,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   360,   361,   362,   363,   364,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   392,   393,   395,   396,   397,   398,   399,   400,   401,
     403,   404,   407,   408,   409,   410,   411,   413,   414,   415,
     416,   417,   418,   419,   420,   423,   424,   425,   426,   427,
     430,   431,   432,   433,   434,   435,   436,   438,   439,   440,
     441,   442,   443,   446,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   728,   789,   793,   796,   862,
     863,   864,   548,    50,   486,   618,   169,   173,   230,   237,
     284,   352,   398,   400,   416,   422,   425,   593,   603,   816,
       3,    27,   238,   309,   388,   787,   793,   862,    21,    74,
      89,   143,   152,   164,   169,   194,   237,   241,   304,   318,
     349,   352,   360,   363,   382,   394,   401,   410,   416,   441,
     596,   597,   600,   548,   787,    92,   439,   486,   517,   605,
     623,   824,   828,   845,   859,   107,    68,   107,     5,   792,
     839,   793,   787,    27,   403,   407,   793,   851,   852,   855,
     548,    27,   129,   635,   636,   230,   352,   364,   403,   833,
     834,   855,   548,     5,   280,   683,   785,   793,   794,   168,
     486,   842,   486,   325,   629,   630,   787,   629,   624,   625,
     628,     0,   489,   119,   204,   427,   144,   208,   285,   421,
     637,   638,   624,   626,   627,   490,   439,   822,    27,   403,
     407,   435,   623,   855,   185,   785,   787,   185,   785,   185,
     683,   185,   785,   486,   484,   488,   776,   778,   517,   605,
     623,   806,   845,   785,   398,   400,   398,   400,   335,   185,
     793,   793,   798,   325,   360,   394,   441,   785,   194,    27,
     787,   243,   410,   106,   394,   441,   355,     3,    44,    49,
      50,    51,    52,    64,    65,    74,    81,    93,   100,   111,
     112,   133,   160,   166,   168,   172,   185,   186,   200,   206,
     207,   209,   212,   213,   215,   224,   226,   238,   257,   258,
     259,   267,   272,   288,   290,   322,   343,   347,   367,   371,
     374,   388,   396,   403,   404,   415,   436,   439,   601,   694,
     695,   697,   699,   701,   703,   705,   706,   707,   709,   710,
     711,   713,   714,   797,   862,   865,   185,   598,   798,   185,
     786,   787,   185,   787,   486,   539,   593,   824,     3,    48,
      49,    51,    52,    64,    65,    72,   111,   112,   149,   154,
     160,   177,   201,   206,   207,   209,   238,   257,   259,   263,
     270,   272,   287,   291,   305,   308,   322,   347,   367,   374,
     388,   390,   403,   404,   409,   411,   415,   435,   436,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     825,   827,   828,   830,   831,   862,   866,   822,   792,   792,
     475,   486,   486,   805,   469,   214,   488,   279,     4,     6,
       7,     8,     9,    10,    35,    49,    51,    52,    60,    61,
      64,    65,    72,    74,    97,    98,    99,   100,   101,   102,
     103,   111,   112,   114,   149,   154,   155,   160,   206,   207,
     209,   231,   232,   257,   259,   264,   269,   270,   272,   281,
     291,   305,   322,   347,   365,   374,   390,   403,   404,   409,
     411,   412,   415,   428,   436,   470,   477,   478,   479,   484,
     486,   491,   493,   494,   624,   698,   701,   704,   705,   706,
     708,   709,   710,   713,   714,   725,   727,   728,   729,   731,
     744,   745,   751,   770,   775,   782,   783,   789,   790,   791,
     792,   793,   781,   782,   833,   792,   833,   469,   167,   405,
     475,   486,   785,   479,   778,     3,   166,   168,   439,   828,
     841,   843,   166,   844,   725,   755,   629,   490,   486,   800,
     487,   487,   499,   167,   210,   683,   846,    27,   129,   634,
     634,    54,   634,   157,   162,   227,   276,   643,   645,   646,
     665,   667,   668,   669,   637,   638,   486,   785,   469,   214,
     149,    23,    29,   134,   283,   333,   337,   366,   432,   505,
     508,   509,   333,   149,    36,    55,   105,   193,   242,   250,
     262,   293,   333,   338,   360,   366,   380,   508,   541,   544,
     149,   333,   366,   508,   149,   333,   366,   508,     3,    27,
      44,    50,    74,    81,    93,   100,   129,   166,   168,   172,
     186,   200,   212,   213,   215,   224,   226,   238,   258,   267,
     288,   290,   343,   371,   388,   396,   415,   437,   439,   479,
     487,   725,   757,   758,   795,   801,   862,   867,   725,   777,
       3,    27,    31,    32,    33,    34,    35,    36,    37,    40,
      53,    60,    61,    67,    73,    75,    85,    92,    97,    98,
      99,   101,   102,   103,   114,   116,   123,   129,   130,   136,
     140,   144,   155,   157,   162,   164,   167,   174,   176,   179,
     191,   198,   208,   210,   221,   222,   227,   231,   232,   264,
     269,   276,   279,   280,   284,   285,   302,   312,   327,   340,
     359,   365,   376,   391,   394,   402,   405,   406,   412,   421,
     422,   428,   429,   435,   437,   444,   445,   447,   448,   479,
     788,   802,   862,   866,   868,   776,   487,   486,   583,   593,
     264,   808,   488,   799,    36,   441,   185,   785,   185,   785,
     861,   785,   486,   604,    81,   813,   452,    82,   126,   296,
     399,   438,   712,   712,   712,   486,   700,   700,   308,   486,
     702,   149,   486,    64,    65,   712,   700,   697,   450,   472,
     486,   715,   486,   715,    58,   339,   490,   599,   486,    35,
     696,   486,   108,   109,   182,   183,   244,   245,   246,   247,
     248,   249,   252,   253,   356,   357,   466,   467,   486,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   700,   149,
     490,   599,   149,   490,   599,   149,   279,   755,   394,   487,
     490,     4,   155,   279,   412,   477,   478,   543,   546,   791,
     792,   823,   825,   826,   829,   824,   486,   613,   617,   543,
     829,   835,   837,   757,   695,   759,    36,   225,   793,   486,
     779,   484,   725,   774,   486,   486,   162,   486,   486,   624,
     486,   486,   486,   725,   486,   486,   486,   486,   486,   486,
     486,   486,   486,   725,   725,   725,   755,   756,   624,   725,
     755,   746,   747,   793,   794,     9,   779,   778,   792,   486,
     791,   792,     3,     8,    11,    16,    17,    18,    33,    36,
      41,    48,    73,   172,   186,   191,   212,   213,   226,   264,
     267,   281,   284,   371,   470,   473,   474,   475,   477,   478,
     479,   480,   481,   482,   749,   750,   751,   753,   449,   732,
     779,    15,   290,   725,    15,   210,   490,   631,   486,   792,
     779,   778,   631,     3,   114,   230,   543,   714,   792,   836,
      96,   114,   837,   114,   837,   785,   487,   490,   822,   487,
     490,   630,   786,    36,   846,   519,   785,    36,   793,   366,
     626,   626,   639,   640,   725,   626,   159,   261,   659,   216,
     262,   321,   369,   427,    27,   654,   725,   477,   478,   655,
     656,   725,   727,   665,   666,   646,   645,   643,   644,   162,
     668,   274,   670,   643,   665,   755,   800,   225,   785,    67,
      75,    85,   164,   185,   312,   422,   564,   574,   589,   793,
      75,    85,   516,    85,   516,   486,   405,   486,   562,   236,
     425,   562,    85,   490,   405,   785,   697,   543,    54,   545,
     543,   543,   105,   242,   250,    54,   405,   448,   472,   542,
     255,   352,   542,   544,   683,    85,   405,   516,   352,   785,
     405,   352,   757,   757,   758,   487,   490,   637,   638,    13,
      14,   485,   495,   405,   582,   587,   793,   448,   616,   325,
     441,   149,    92,   536,   549,   809,   810,   857,   788,   488,
     141,   785,   264,   537,   541,   264,   486,   583,    36,   583,
     487,   757,    36,   185,   577,   793,   814,   486,   755,   791,
     601,   759,   712,   712,    35,   696,   403,   403,   791,   791,
     695,   693,   793,   484,   484,   791,   791,   405,   405,   405,
     405,   598,   798,   786,   787,   787,   798,   487,   185,   785,
     861,   824,   830,     4,   791,     4,   791,   615,   622,   802,
      50,    94,   120,   138,   142,   163,   166,   180,   269,   277,
     319,   619,   490,   487,   490,   487,   490,   806,   755,   776,
     756,   444,   771,   772,   725,   755,   486,   791,   791,     3,
     716,   717,   718,   719,   720,   721,   722,   723,   760,   761,
     792,   791,   791,   725,     8,    16,    17,    18,   473,   474,
     475,   477,   478,   479,   480,   481,   482,   749,   754,   793,
     725,   762,   477,   478,   486,   726,   727,   751,   764,   775,
     487,   755,   725,   755,   765,   725,    53,   167,   222,   406,
     725,   755,   768,   725,   485,   487,   490,   490,   492,   495,
     725,   724,   724,   695,   725,   725,   725,   725,     5,   802,
     803,   403,    40,   391,   780,   798,   725,   725,   486,   624,
     769,   129,   155,   264,   269,   274,   412,   423,   725,   269,
     486,   725,   405,    48,   172,   186,   191,   226,   371,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,    27,
      34,   376,   748,   176,   158,   733,   725,   347,   486,   745,
     725,   173,   230,   394,   398,   400,   425,   632,   785,   783,
     167,   673,   757,   673,   486,   792,   487,   785,   841,   785,
     849,   725,   487,   486,   429,   848,   114,   292,   486,   518,
     623,    36,   793,   486,   523,   532,   534,   793,   490,    37,
     123,   429,   641,   347,   348,   477,   478,   656,   658,   727,
     369,   216,   280,   490,     4,   657,   791,   657,   347,   348,
     658,   784,   785,   268,   373,   671,   666,   644,   487,   333,
     508,   486,   185,   574,   787,   216,   264,   216,   429,   486,
     567,   695,   787,   793,   185,   787,   185,   793,    23,   134,
     366,   504,   507,   557,   572,   802,   787,   566,   586,   802,
     787,   505,   787,   333,   366,   508,   541,   543,   798,   787,
     543,   798,   787,   543,   333,   366,   508,   787,   787,   787,
     787,   333,   366,   508,   787,   787,   637,   637,   637,   437,
     758,   487,   725,   725,   725,   777,   317,   612,   487,   490,
     277,   167,   405,   607,   441,   785,   793,   593,   788,   486,
     486,   149,   149,   226,   564,   574,   578,   581,   590,   592,
     793,   448,   450,   569,   148,   623,   448,   815,   487,   725,
     264,   279,   755,   487,   487,   599,   487,   484,   469,   469,
     487,   487,   487,   490,   695,   791,   485,   791,   487,   487,
     717,   719,   720,   721,   720,   721,   721,   599,   599,   279,
     599,   264,    36,   487,   490,   479,   486,   543,   614,   829,
      36,   611,   792,   611,   264,   269,   319,   611,   611,   835,
     695,   487,   485,   725,   136,   772,   773,    36,   487,   725,
     487,   487,   487,   167,   487,   487,   490,   487,   488,   302,
     763,   487,   726,   726,   725,    11,    16,    17,    18,   191,
     212,   281,   473,   474,   475,   477,   478,   479,   480,   481,
     482,   751,   726,   487,   487,   162,   167,   766,   767,   487,
      36,   768,   755,   768,   768,   167,   487,    36,   779,   725,
     746,   725,   487,   469,   726,   726,   142,   755,   167,   129,
     155,   269,   274,   412,   423,   486,   142,   754,   725,   391,
     780,   725,   769,   725,   405,   486,   624,   486,   486,   289,
     737,   398,   400,   398,   400,   785,   394,   633,   633,   633,
     221,   348,   486,   624,   674,   675,   676,   683,   684,   728,
     730,   731,   793,   445,   689,   637,   689,   791,   724,   800,
     806,   674,   445,   847,   435,   393,   428,   527,   522,   531,
     793,   279,   524,   793,   528,   534,   490,   673,   475,   779,
     640,   281,   749,   752,   471,   642,     4,   791,   658,   280,
     427,   655,   490,   235,   405,   725,   264,   589,   486,   149,
     486,   567,   194,   587,   550,   283,   560,   550,    23,   134,
     337,   338,   366,   501,   502,   503,   509,   510,   149,   599,
     149,   599,   557,   572,   557,   487,   490,   553,   792,   487,
     490,   475,   488,   405,   352,    85,   405,   516,   352,   405,
     405,   405,   352,   487,   487,   487,   758,   485,   383,   384,
     621,   792,   582,   612,   785,   583,   808,   394,   513,   514,
     792,   587,   785,   785,   861,   785,   487,   490,   277,   562,
     277,   279,   561,   787,   448,   860,   562,    36,   149,   785,
     487,   696,   791,   715,   715,   696,   793,   485,   485,   798,
     149,   615,   609,   620,   829,   792,   792,   269,   587,   479,
     587,   792,   792,   402,   725,   140,   695,   487,   725,   725,
     754,   725,   766,   695,   726,   726,   726,   726,   129,   264,
     274,   726,   726,   726,   726,   726,   726,   726,   726,   726,
     726,   725,   725,   767,   766,   695,   487,   487,   487,   755,
     695,   487,   724,   725,    33,    33,   725,   487,   725,   167,
     486,   759,   725,   487,   142,   726,   726,   142,   142,   725,
     725,   638,   445,   486,   738,   793,   633,   633,   633,   633,
     785,   785,   785,   624,   684,   167,   624,   675,   676,    36,
     677,   678,   793,   490,    93,   168,   200,   215,   224,   258,
     343,   680,   678,    36,   677,   679,   793,   472,   688,   778,
     725,   176,   660,   487,   660,   487,   487,   725,   340,   526,
     434,   487,   490,   779,    83,   526,   487,   490,   523,   847,
     725,   486,   642,   159,   220,   280,   785,   787,   487,   149,
     587,   574,   587,   550,   577,   487,   116,   198,   262,   264,
     573,   486,   584,   171,   114,   184,   264,   562,   542,   106,
     114,   171,   264,   382,   385,   544,   562,   366,   503,   416,
     787,   793,   507,   586,     3,    44,    50,    74,    81,    93,
     100,   166,   168,   172,   186,   200,   212,   213,   215,   224,
     226,   238,   258,   263,   267,   281,   288,   290,   343,   367,
     371,   388,   396,   415,   439,   477,   478,   543,   551,   588,
     695,   752,   792,   795,   862,   868,   802,   787,   787,   787,
     787,   787,   787,   787,   787,   787,   787,   637,   542,   621,
     486,   815,   185,   785,   487,   490,   487,   537,   486,    36,
     571,   569,   578,    79,   539,   106,   262,   623,   577,   429,
     812,   485,   695,   599,   861,   487,   490,   587,   725,   487,
     487,   767,   167,   129,   274,   486,   487,   487,   725,   725,
     725,   759,   487,   725,    33,    33,   725,   725,   142,   487,
     487,   725,   739,   793,   785,   785,   785,   785,   678,   679,
     486,   487,   793,   794,   396,   651,   652,   486,   675,   215,
     288,   681,   675,   681,   215,   680,   681,   215,   652,   486,
     793,   652,   486,   286,    54,   179,   664,   792,   664,   792,
     782,   623,   292,   623,   522,   279,   486,   520,   475,   534,
     526,   754,   550,   574,   487,   487,   448,   580,   117,   187,
     196,   116,   431,   557,   575,    67,    73,    85,   114,   116,
     171,   198,   264,   269,   312,   327,   422,   555,   556,   568,
      30,    54,   594,   185,   269,   543,   725,   594,   269,   477,
     478,   546,   793,   695,   599,   599,   238,   388,   795,   799,
     475,   405,   405,   487,   613,   429,   608,   610,   587,    36,
     264,   486,   792,   815,   581,   148,   623,   146,   192,   561,
     119,   134,   311,   860,   106,   448,   858,   279,   793,   811,
     486,    36,   620,   726,   167,   486,   759,   487,   725,   725,
     725,   487,   298,   740,   685,   686,   730,   677,   486,     4,
       9,   647,   649,   650,   793,   786,   675,   279,   429,   682,
     675,   215,   675,   690,   691,   793,   486,   690,   793,   486,
     661,   662,   663,   725,   725,   447,   734,   734,   527,    85,
     486,   525,   533,   730,   793,   130,   725,   487,   327,   580,
     486,   570,   550,   487,   490,   486,   798,   787,   726,   594,
     117,   187,   116,   269,   216,   785,   580,   114,    36,   149,
      73,   692,   799,   481,   551,   787,   787,   542,   121,   487,
     623,   149,    36,   487,   787,   860,    27,    78,    86,   115,
     184,   195,   382,   385,   565,   565,   348,   348,    59,    67,
     230,   785,   533,   726,   759,   487,    54,   637,   487,   490,
      36,   687,   786,   301,   481,   301,   348,   481,   486,   486,
     487,   725,   486,   675,   682,   487,   490,   695,   690,   487,
     487,   490,   735,   736,   793,   429,   648,   648,   434,   787,
     725,   487,   490,    73,   529,   529,   265,   427,   785,   550,
     576,   579,   802,   557,   725,   264,   556,    36,   580,   583,
     184,   798,   429,   506,   481,   416,   613,   792,   815,   858,
     785,   623,   569,   539,    67,   282,    67,   812,   487,   487,
     755,   320,   348,   741,   688,   685,   486,   487,   793,   647,
     786,   691,   692,   487,   662,   490,    36,   350,   623,   487,
     689,   525,   798,   530,   798,   530,   366,   583,   487,   490,
     475,   487,   184,   240,   591,   486,   552,   725,   416,    36,
     486,   858,   561,   860,   282,   282,   486,   815,    48,    96,
     418,   725,   742,   743,   742,   487,   690,   487,   490,   487,
     487,   736,   738,   650,   529,   641,   641,   532,   591,   579,
     551,   262,   563,   552,   168,   297,   372,   279,   558,   559,
     585,   541,   623,   533,   689,   743,   347,   161,   307,   161,
     307,   487,     9,   334,   653,   530,   642,   642,   689,   559,
     196,   119,   427,   279,   585,   279,   558,   487,   858,   487,
      33,   487,   486,   641,   550,    58,   262,   339,   366,   554,
     554,   815,   743,     9,   642,    22,   114,   269,   689,   487
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 463 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 479 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 491 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 534 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 104:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 105:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 106:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 107:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 117:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 118:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 119:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 120:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 121:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 122:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 123:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 124:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 125:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 126:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 127:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 128:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 129:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 130:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 131:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 132:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 133:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 134:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 135:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 136:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 137:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 138:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 139:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 140:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 141:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 142:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 143:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 144:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 147:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 148:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 151:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 152:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 153:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 154:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 155:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 156:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 157:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 158:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 159:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 160:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 161:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 162:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 163:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 164:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 167:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 168:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 169:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 170:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 171:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 172:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 173:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 174:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 175:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 176:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 177:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 178:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 179:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 180:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 181:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 182:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 183:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 184:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 187:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 188:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 190:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 191:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 193:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 194:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 195:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 196:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 197:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 198:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 199:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 200:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 201:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 202:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 203:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 204:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 205:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 206:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 210:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 211:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 212:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 213:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 214:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 215:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 216:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 217:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 218:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 219:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 220:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 221:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 222:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 223:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 224:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 225:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 226:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 227:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 228:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 229:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 230:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 231:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 232:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 233:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 234:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 237:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 238:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 239:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 243:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 244:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 245:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 246:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 247:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 248:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 249:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 250:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 251:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 252:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 253:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 254:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 255:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 256:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 257:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 258:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 259:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 260:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 261:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 262:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 263:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 264:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 265:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 266:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 267:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 268:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 269:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 270:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 271:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 272:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 273:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 274:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 275:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 276:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 277:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 278:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 279:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 280:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 281:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 282:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 283:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 284:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 285:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 286:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 287:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 288:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 289:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 290:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 291:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 292:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 293:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 294:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 295:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 296:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 297:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 298:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 299:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 300:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 301:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 302:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 303:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 304:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 305:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 306:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 307:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 308:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 309:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 310:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 311:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 312:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 313:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 314:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 315:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 316:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 317:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 318:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 319:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 320:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 321:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 322:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 323:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 324:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 325:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 326:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 327:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 328:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 329:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 330:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 331:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 332:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 333:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 334:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 335:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 336:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 337:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 338:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 339:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 340:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 341:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 342:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 343:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 344:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 345:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 346:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 347:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 348:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 349:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 350:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 351:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 352:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 353:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 354:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 355:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 356:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 357:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 358:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 359:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 360:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 361:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 362:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 363:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 364:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 365:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 366:
#line 112 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 367:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 368:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 369:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 370:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 371:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 372:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 373:
#line 123 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 374:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 375:
#line 129 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 376:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 377:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 378:
#line 136 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 379:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 380:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 381:
#line 141 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 382:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 383:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 386:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 387:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 388:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 389:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 390:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 391:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 392:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 393:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 394:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 395:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 396:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 397:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 398:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 399:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 400:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 401:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 402:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 403:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 404:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 405:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 406:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 407:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 408:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 409:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 410:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 411:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 412:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 413:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 414:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 415:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 416:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 417:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 418:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 419:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 420:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 421:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 422:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 423:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 424:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 425:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 426:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 427:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 428:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 429:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 430:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 431:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 432:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 433:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 434:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 435:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 436:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 439:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 440:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 441:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 442:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 443:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 444:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 445:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 446:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 447:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 448:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 449:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 450:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 451:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 452:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 453:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 454:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 455:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 456:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 457:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 458:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 459:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 460:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 461:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 462:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 463:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 464:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 465:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 466:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 467:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 468:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 469:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 470:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 471:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 472:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 473:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 474:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 475:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 476:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 477:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 478:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 479:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 480:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 481:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 482:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 483:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 484:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 485:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 486:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 487:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 488:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 489:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 490:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 491:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 492:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 493:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 494:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 495:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 496:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 497:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 498:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 499:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 500:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 501:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 502:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 503:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 504:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 505:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 506:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 507:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 508:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 509:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 510:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 511:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 512:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 513:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 514:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 515:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 516:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 517:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 518:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 519:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 520:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 521:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 522:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 523:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 524:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 525:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 526:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 527:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 528:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 529:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 530:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 531:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 532:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 533:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 534:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 535:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 536:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 537:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 538:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 539:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 540:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 541:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 542:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 543:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 544:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 545:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 546:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 547:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 548:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 549:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 550:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 551:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 552:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 553:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 554:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 555:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 556:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 557:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 558:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 559:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 560:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 561:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 562:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 563:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 564:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 565:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 566:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 567:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 568:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 569:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 570:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 571:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 572:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 573:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 574:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 575:
#line 790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 576:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 577:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 578:
#line 846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 579:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 580:
#line 863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 581:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 582:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 583:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 584:
#line 920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 585:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 586:
#line 931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 587:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 588:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 589:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 590:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 591:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 592:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 593:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 594:
#line 973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 595:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 596:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 597:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 598:
#line 981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 599:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 600:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 601:
#line 998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 602:
#line 999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 603:
#line 1005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 604:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 605:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 606:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 607:
#line 1058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 608:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 609:
#line 1082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 610:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 611:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 612:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 613:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 614:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 615:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 616:
#line 1100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 617:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 618:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 619:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 620:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 621:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 622:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 623:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 624:
#line 1161 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 627:
#line 1168 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 628:
#line 1173 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 629:
#line 1180 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 630:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 631:
#line 1191 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 632:
#line 1196 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 633:
#line 1201 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 634:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 635:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 636:
#line 1219 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 637:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 638:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 639:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 640:
#line 1227 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 641:
#line 1228 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 642:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 643:
#line 1231 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 644:
#line 1236 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 645:
#line 1255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 646:
#line 1256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 647:
#line 1257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 648:
#line 1258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 649:
#line 1270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 650:
#line 1283 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 651:
#line 1284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 652:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 653:
#line 1296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 654:
#line 1301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 655:
#line 1306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 656:
#line 1311 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 657:
#line 1316 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 658:
#line 1321 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 659:
#line 1326 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 660:
#line 1332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 661:
#line 1338 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 662:
#line 1344 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 663:
#line 1351 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 664:
#line 1372 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 665:
#line 1382 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 666:
#line 1386 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 667:
#line 1394 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 668:
#line 1398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 669:
#line 1406 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 670:
#line 1418 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 671:
#line 1439 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 672:
#line 1443 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 673:
#line 1449 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 674:
#line 1453 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 675:
#line 1466 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 676:
#line 1474 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 677:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 678:
#line 1486 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 679:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 680:
#line 1490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 681:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 682:
#line 1494 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 683:
#line 1498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 684:
#line 1499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 685:
#line 1507 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 686:
#line 1516 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 687:
#line 1524 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 688:
#line 1533 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 689:
#line 1544 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 690:
#line 1551 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 691:
#line 1552 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 692:
#line 1553 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 709:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 710:
#line 1584 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 711:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 712:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 713:
#line 1590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 714:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 715:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 716:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 717:
#line 1598 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 718:
#line 1603 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 719:
#line 1608 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 720:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 721:
#line 1621 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 722:
#line 1626 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 723:
#line 1632 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 724:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 725:
#line 1668 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 726:
#line 1671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 727:
#line 1673 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 728:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 729:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 730:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 731:
#line 1700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 735:
#line 1708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 736:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 1716 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 1718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 742:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1727 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 745:
#line 1729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 746:
#line 1732 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 1734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 748:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 749:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 750:
#line 1741 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 751:
#line 1746 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 752:
#line 1751 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 753:
#line 1758 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 754:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 755:
#line 1770 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 756:
#line 1775 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 757:
#line 1783 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 758:
#line 1788 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 759:
#line 1797 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 760:
#line 1805 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 761:
#line 1813 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 762:
#line 1821 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 763:
#line 1839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 764:
#line 1847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 765:
#line 1855 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 766:
#line 1863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 767:
#line 1871 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 768:
#line 1878 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 769:
#line 1882 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 770:
#line 1886 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 771:
#line 1891 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 772:
#line 1899 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 773:
#line 1907 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 774:
#line 1923 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 775:
#line 1931 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 776:
#line 1939 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 777:
#line 1947 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 778:
#line 1955 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 779:
#line 1963 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 780:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 781:
#line 1975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 782:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 783:
#line 1983 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 784:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 785:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 786:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 787:
#line 2011 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 788:
#line 2019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 789:
#line 2039 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 790:
#line 2061 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 791:
#line 2072 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 792:
#line 2079 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 793:
#line 2092 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 794:
#line 2109 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 795:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 796:
#line 2113 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 797:
#line 2115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 798:
#line 2117 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 799:
#line 2119 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 800:
#line 2121 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 801:
#line 2123 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 802:
#line 2125 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 803:
#line 2127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 804:
#line 2129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 805:
#line 2131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 806:
#line 2133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 807:
#line 2135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 808:
#line 2137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 809:
#line 2139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 810:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 811:
#line 2143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 812:
#line 2145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 813:
#line 2147 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 814:
#line 2151 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 815:
#line 2155 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 816:
#line 2159 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 817:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 818:
#line 2173 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 819:
#line 2175 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 820:
#line 2182 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 821:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 822:
#line 2209 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 823:
#line 2221 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 824:
#line 2223 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 825:
#line 2235 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 826:
#line 2246 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 827:
#line 2270 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 828:
#line 2283 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 829:
#line 2287 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 830:
#line 2293 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 831:
#line 2300 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 832:
#line 2307 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 833:
#line 2317 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 834:
#line 2324 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 835:
#line 2352 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 836:
#line 2387 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 837:
#line 2397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 838:
#line 2398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 839:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 840:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 841:
#line 2416 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 842:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 843:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 844:
#line 2428 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 845:
#line 2432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 846:
#line 2436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 847:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 848:
#line 2444 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 849:
#line 2448 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 850:
#line 2452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 851:
#line 2456 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 852:
#line 2460 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 853:
#line 2464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 854:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 855:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 856:
#line 2474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 857:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 858:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 859:
#line 2489 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 860:
#line 2494 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 861:
#line 2501 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 862:
#line 2516 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 863:
#line 2523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 864:
#line 2527 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 865:
#line 2531 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 866:
#line 2535 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 867:
#line 2539 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 868:
#line 2552 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 869:
#line 2553 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 870:
#line 2557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 871:
#line 2558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 872:
#line 2566 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 873:
#line 2567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 874:
#line 2571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 875:
#line 2573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 876:
#line 2578 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 877:
#line 2586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 878:
#line 2588 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 879:
#line 2601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 880:
#line 2606 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 881:
#line 2631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 882:
#line 2632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 883:
#line 2635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 884:
#line 2636 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 885:
#line 2648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 886:
#line 2666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 887:
#line 2672 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 888:
#line 2682 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 889:
#line 2699 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 890:
#line 2744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 891:
#line 2752 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 892:
#line 2760 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 893:
#line 2768 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 894:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 895:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 896:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 897:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 898:
#line 2801 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 899:
#line 2805 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 900:
#line 2815 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 901:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 902:
#line 2818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 903:
#line 2819 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 904:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 905:
#line 2823 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 906:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 907:
#line 2827 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 908:
#line 2828 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 909:
#line 2829 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 910:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 911:
#line 2831 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 912:
#line 2832 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 913:
#line 2833 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 914:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 915:
#line 2835 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 916:
#line 2836 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 917:
#line 2837 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 918:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 919:
#line 2842 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 920:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 921:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 922:
#line 2851 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 923:
#line 2856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 924:
#line 2858 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 925:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 926:
#line 2862 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 927:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 928:
#line 2866 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 929:
#line 2868 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 930:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 931:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 932:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 933:
#line 2890 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 934:
#line 2894 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 935:
#line 2901 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 936:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 937:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 938:
#line 2917 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 939:
#line 2923 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 940:
#line 2927 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 941:
#line 2936 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 942:
#line 2946 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 943:
#line 2947 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 944:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 945:
#line 2955 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 946:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 947:
#line 2963 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 948:
#line 2964 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 949:
#line 2965 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 950:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 951:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 952:
#line 2968 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 953:
#line 2969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 954:
#line 2970 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 955:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 956:
#line 2982 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 957:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 958:
#line 2993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 959:
#line 2999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 960:
#line 3000 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 961:
#line 3017 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 962:
#line 3021 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 963:
#line 3026 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 964:
#line 3030 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 965:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 966:
#line 3049 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 967:
#line 3053 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 968:
#line 3056 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 969:
#line 3059 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 970:
#line 3060 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 971:
#line 3061 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 972:
#line 3065 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 973:
#line 3071 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 974:
#line 3082 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 975:
#line 3095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 976:
#line 3096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 977:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 978:
#line 3111 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 979:
#line 3112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 980:
#line 3115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 981:
#line 3116 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 982:
#line 3120 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 983:
#line 3124 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 984:
#line 3131 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 985:
#line 3135 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 986:
#line 3139 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 987:
#line 3147 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 988:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 989:
#line 3158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 990:
#line 3162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 991:
#line 3163 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 992:
#line 3167 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 993:
#line 3168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 996:
#line 3182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 997:
#line 3183 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 998:
#line 3187 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 999:
#line 3188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1000:
#line 3192 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1001:
#line 3208 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1002:
#line 3216 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1003:
#line 3224 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1004:
#line 3245 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1005:
#line 3246 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1006:
#line 3258 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1007:
#line 3262 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1008:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1009:
#line 3291 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1010:
#line 3295 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1011:
#line 3297 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1012:
#line 3308 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1013:
#line 3311 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1014:
#line 3322 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1015:
#line 3326 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1016:
#line 3330 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1017:
#line 3342 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1018:
#line 3346 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1019:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1020:
#line 3362 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 1021:
#line 3394 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1022:
#line 3398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1023:
#line 3402 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1024:
#line 3406 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1025:
#line 3410 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1026:
#line 3414 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1027:
#line 3418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1028:
#line 3423 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1029:
#line 3424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1030:
#line 3440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1031:
#line 3441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1032:
#line 3442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1033:
#line 3445 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1034:
#line 3446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1035:
#line 3452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1036:
#line 3453 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1037:
#line 3454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1038:
#line 3457 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1039:
#line 3458 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1040:
#line 3459 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1041:
#line 3462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1042:
#line 3463 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1043:
#line 3464 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1044:
#line 3467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1045:
#line 3468 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1046:
#line 3472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1047:
#line 3474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1048:
#line 3478 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1049:
#line 3479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1051:
#line 3490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1052:
#line 3491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1053:
#line 3492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1054:
#line 3493 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1055:
#line 3496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1056:
#line 3497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1057:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1058:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1059:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1064:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1065:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1066:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1067:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1072:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1073:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1074:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1075:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1076:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1077:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1078:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1079:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1080:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1081:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1082:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1083:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1084:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1085:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1086:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1087:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1088:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1089:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1090:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1091:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1092:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1093:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1094:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1095:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1096:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1097:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1098:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1099:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1100:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1101:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1102:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1103:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1109:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1110:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1111:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1112:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1113:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1114:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1115:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1116:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1117:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1118:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1119:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1120:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1121:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1122:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1123:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1124:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1125:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1126:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1127:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1128:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1129:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1130:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1131:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1132:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1133:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1134:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1135:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1136:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1137:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1138:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1139:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1140:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1141:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1142:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1143:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1144:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1145:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1146:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1147:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1148:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1149:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1150:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1151:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1152:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1153:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1154:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1155:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1156:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1157:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1158:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1159:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1160:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1161:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1162:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1163:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1164:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1165:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1166:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1167:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1168:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1169:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1170:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1171:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1172:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1173:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1174:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1175:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1176:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1177:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1178:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1179:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1180:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1181:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1182:
#line 11 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1183:
#line 17 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1184:
#line 23 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1185:
#line 29 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1188:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1189:
#line 41 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1190:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1191:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1192:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1193:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1194:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1195:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1196:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1197:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1198:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1199:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1200:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1201:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1202:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1203:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1204:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 23654 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 70 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, 0, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
