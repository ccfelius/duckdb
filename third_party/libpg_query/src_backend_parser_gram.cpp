/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     POWER_OF = 271,
     LESS_EQUALS = 272,
     GREATER_EQUALS = 273,
     NOT_EQUALS = 274,
     ABORT_P = 275,
     ABSOLUTE_P = 276,
     ACCESS = 277,
     ACTION = 278,
     ADD_P = 279,
     ADMIN = 280,
     AFTER = 281,
     AGGREGATE = 282,
     ALL = 283,
     ALSO = 284,
     ALTER = 285,
     ALWAYS = 286,
     ANALYSE = 287,
     ANALYZE = 288,
     AND = 289,
     ANY = 290,
     ARRAY = 291,
     AS = 292,
     ASC_P = 293,
     ASSERTION = 294,
     ASSIGNMENT = 295,
     ASYMMETRIC = 296,
     AT = 297,
     ATTACH = 298,
     ATTRIBUTE = 299,
     AUTHORIZATION = 300,
     BACKWARD = 301,
     BEFORE = 302,
     BEGIN_P = 303,
     BETWEEN = 304,
     BIGINT = 305,
     BINARY = 306,
     BIT = 307,
     BOOLEAN_P = 308,
     BOTH = 309,
     BY = 310,
     CACHE = 311,
     CALL_P = 312,
     CALLED = 313,
     CASCADE = 314,
     CASCADED = 315,
     CASE = 316,
     CAST = 317,
     CATALOG_P = 318,
     CHAIN = 319,
     CHAR_P = 320,
     CHARACTER = 321,
     CHARACTERISTICS = 322,
     CHECK_P = 323,
     CHECKPOINT = 324,
     CLASS = 325,
     CLOSE = 326,
     CLUSTER = 327,
     COALESCE = 328,
     COLLATE = 329,
     COLLATION = 330,
     COLUMN = 331,
     COLUMNS = 332,
     COMMENT = 333,
     COMMENTS = 334,
     COMMIT = 335,
     COMMITTED = 336,
     COMPRESSION = 337,
     CONCURRENTLY = 338,
     CONFIGURATION = 339,
     CONFLICT = 340,
     CONNECTION = 341,
     CONSTRAINT = 342,
     CONSTRAINTS = 343,
     CONTENT_P = 344,
     CONTINUE_P = 345,
     CONVERSION_P = 346,
     COPY = 347,
     COST = 348,
     CREATE_P = 349,
     CROSS = 350,
     CSV = 351,
     CUBE = 352,
     CURRENT_P = 353,
     CURRENT_CATALOG = 354,
     CURRENT_DATE = 355,
     CURRENT_ROLE = 356,
     CURRENT_SCHEMA = 357,
     CURRENT_TIME = 358,
     CURRENT_TIMESTAMP = 359,
     CURRENT_USER = 360,
     CURSOR = 361,
     CYCLE = 362,
     DATA_P = 363,
     DATABASE = 364,
     DAY_P = 365,
     DAYS_P = 366,
     DEALLOCATE = 367,
     DEC = 368,
     DECIMAL_P = 369,
     DECLARE = 370,
     DEFAULT = 371,
     DEFAULTS = 372,
     DEFERRABLE = 373,
     DEFERRED = 374,
     DEFINER = 375,
     DELETE_P = 376,
     DELIMITER = 377,
     DELIMITERS = 378,
     DEPENDS = 379,
     DESC_P = 380,
     DESCRIBE = 381,
     DETACH = 382,
     DICTIONARY = 383,
     DISABLE_P = 384,
     DISCARD = 385,
     DISTINCT = 386,
     DO = 387,
     DOCUMENT_P = 388,
     DOMAIN_P = 389,
     DOUBLE_P = 390,
     DROP = 391,
     EACH = 392,
     ELSE = 393,
     ENABLE_P = 394,
     ENCODING = 395,
     ENCRYPTED = 396,
     END_P = 397,
     ENUM_P = 398,
     ESCAPE = 399,
     EVENT = 400,
     EXCEPT = 401,
     EXCLUDE = 402,
     EXCLUDING = 403,
     EXCLUSIVE = 404,
     EXECUTE = 405,
     EXISTS = 406,
     EXPLAIN = 407,
     EXPORT_P = 408,
     EXPORT_STATE = 409,
     EXTENSION = 410,
     EXTERNAL = 411,
     EXTRACT = 412,
     FALSE_P = 413,
     FAMILY = 414,
     FETCH = 415,
     FILTER = 416,
     FIRST_P = 417,
     FLOAT_P = 418,
     FOLLOWING = 419,
     FOR = 420,
     FORCE = 421,
     FOREIGN = 422,
     FORWARD = 423,
     FREEZE = 424,
     FROM = 425,
     FULL = 426,
     FUNCTION = 427,
     FUNCTIONS = 428,
     GENERATED = 429,
     GLOB = 430,
     GLOBAL = 431,
     GRANT = 432,
     GRANTED = 433,
     GROUP_P = 434,
     GROUPING = 435,
     GROUPING_ID = 436,
     HANDLER = 437,
     HAVING = 438,
     HEADER_P = 439,
     HOLD = 440,
     HOUR_P = 441,
     HOURS_P = 442,
     IDENTITY_P = 443,
     IF_P = 444,
     IGNORE_P = 445,
     ILIKE = 446,
     IMMEDIATE = 447,
     IMMUTABLE = 448,
     IMPLICIT_P = 449,
     IMPORT_P = 450,
     IN_P = 451,
     INCLUDING = 452,
     INCREMENT = 453,
     INDEX = 454,
     INDEXES = 455,
     INHERIT = 456,
     INHERITS = 457,
     INITIALLY = 458,
     INLINE_P = 459,
     INNER_P = 460,
     INOUT = 461,
     INPUT_P = 462,
     INSENSITIVE = 463,
     INSERT = 464,
     INSTALL = 465,
     INSTEAD = 466,
     INT_P = 467,
     INTEGER = 468,
     INTERSECT = 469,
     INTERVAL = 470,
     INTO = 471,
     INVOKER = 472,
     IS = 473,
     ISNULL = 474,
     ISOLATION = 475,
     JOIN = 476,
     JSON = 477,
     KEY = 478,
     LABEL = 479,
     LANGUAGE = 480,
     LARGE_P = 481,
     LAST_P = 482,
     LATERAL_P = 483,
     LEADING = 484,
     LEAKPROOF = 485,
     LEFT = 486,
     LEVEL = 487,
     LIKE = 488,
     LIMIT = 489,
     LISTEN = 490,
     LOAD = 491,
     LOCAL = 492,
     LOCALTIME = 493,
     LOCALTIMESTAMP = 494,
     LOCATION = 495,
     LOCK_P = 496,
     LOCKED = 497,
     LOGGED = 498,
     MACRO = 499,
     MAP = 500,
     MAPPING = 501,
     MATCH = 502,
     MATERIALIZED = 503,
     MAXVALUE = 504,
     METHOD = 505,
     MICROSECOND_P = 506,
     MICROSECONDS_P = 507,
     MILLISECOND_P = 508,
     MILLISECONDS_P = 509,
     MINUTE_P = 510,
     MINUTES_P = 511,
     MINVALUE = 512,
     MODE = 513,
     MONTH_P = 514,
     MONTHS_P = 515,
     MOVE = 516,
     NAME_P = 517,
     NAMES = 518,
     NATIONAL = 519,
     NATURAL = 520,
     NCHAR = 521,
     NEW = 522,
     NEXT = 523,
     NO = 524,
     NONE = 525,
     NOT = 526,
     NOTHING = 527,
     NOTIFY = 528,
     NOTNULL = 529,
     NOWAIT = 530,
     NULL_P = 531,
     NULLIF = 532,
     NULLS_P = 533,
     NUMERIC = 534,
     OBJECT_P = 535,
     OF = 536,
     OFF = 537,
     OFFSET = 538,
     OIDS = 539,
     OLD = 540,
     ON = 541,
     ONLY = 542,
     OPERATOR = 543,
     OPTION = 544,
     OPTIONS = 545,
     OR = 546,
     ORDER = 547,
     ORDINALITY = 548,
     OUT_P = 549,
     OUTER_P = 550,
     OVER = 551,
     OVERLAPS = 552,
     OVERLAY = 553,
     OVERRIDING = 554,
     OWNED = 555,
     OWNER = 556,
     PARALLEL = 557,
     PARSER = 558,
     PARTIAL = 559,
     PARTITION = 560,
     PASSING = 561,
     PASSWORD = 562,
     PERCENT = 563,
     PLACING = 564,
     PLANS = 565,
     POLICY = 566,
     POSITION = 567,
     PRAGMA_P = 568,
     PRECEDING = 569,
     PRECISION = 570,
     PREPARE = 571,
     PREPARED = 572,
     PRESERVE = 573,
     PRIMARY = 574,
     PRIOR = 575,
     PRIVILEGES = 576,
     PROCEDURAL = 577,
     PROCEDURE = 578,
     PROGRAM = 579,
     PUBLICATION = 580,
     QUALIFY = 581,
     QUOTE = 582,
     RANGE = 583,
     READ_P = 584,
     REAL = 585,
     REASSIGN = 586,
     RECHECK = 587,
     RECURSIVE = 588,
     REF = 589,
     REFERENCES = 590,
     REFERENCING = 591,
     REFRESH = 592,
     REINDEX = 593,
     RELATIVE_P = 594,
     RELEASE = 595,
     RENAME = 596,
     REPEATABLE = 597,
     REPLACE = 598,
     REPLICA = 599,
     RESET = 600,
     RESPECT_P = 601,
     RESTART = 602,
     RESTRICT = 603,
     RETURNING = 604,
     RETURNS = 605,
     REVOKE = 606,
     RIGHT = 607,
     ROLE = 608,
     ROLLBACK = 609,
     ROLLUP = 610,
     ROW = 611,
     ROWS = 612,
     RULE = 613,
     SAMPLE = 614,
     SAVEPOINT = 615,
     SCHEMA = 616,
     SCHEMAS = 617,
     SCROLL = 618,
     SEARCH = 619,
     SECOND_P = 620,
     SECONDS_P = 621,
     SECURITY = 622,
     SELECT = 623,
     SEQUENCE = 624,
     SEQUENCES = 625,
     SERIALIZABLE = 626,
     SERVER = 627,
     SESSION = 628,
     SESSION_USER = 629,
     SET = 630,
     SETOF = 631,
     SETS = 632,
     SHARE = 633,
     SHOW = 634,
     SIMILAR = 635,
     SIMPLE = 636,
     SKIP = 637,
     SMALLINT = 638,
     SNAPSHOT = 639,
     SOME = 640,
     SQL_P = 641,
     STABLE = 642,
     STANDALONE_P = 643,
     START = 644,
     STATEMENT = 645,
     STATISTICS = 646,
     STDIN = 647,
     STDOUT = 648,
     STORAGE = 649,
     STORED = 650,
     STRICT_P = 651,
     STRIP_P = 652,
     STRUCT = 653,
     SUBSCRIPTION = 654,
     SUBSTRING = 655,
     SUMMARIZE = 656,
     SYMMETRIC = 657,
     SYSID = 658,
     SYSTEM_P = 659,
     TABLE = 660,
     TABLES = 661,
     TABLESAMPLE = 662,
     TABLESPACE = 663,
     TEMP = 664,
     TEMPLATE = 665,
     TEMPORARY = 666,
     TEXT_P = 667,
     THEN = 668,
     TIME = 669,
     TIMESTAMP = 670,
     TO = 671,
     TRAILING = 672,
     TRANSACTION = 673,
     TRANSFORM = 674,
     TREAT = 675,
     TRIGGER = 676,
     TRIM = 677,
     TRUE_P = 678,
     TRUNCATE = 679,
     TRUSTED = 680,
     TRY_CAST = 681,
     TYPE_P = 682,
     TYPES_P = 683,
     UNBOUNDED = 684,
     UNCOMMITTED = 685,
     UNENCRYPTED = 686,
     UNION = 687,
     UNIQUE = 688,
     UNKNOWN = 689,
     UNLISTEN = 690,
     UNLOGGED = 691,
     UNTIL = 692,
     UPDATE = 693,
     USER = 694,
     USING = 695,
     VACUUM = 696,
     VALID = 697,
     VALIDATE = 698,
     VALIDATOR = 699,
     VALUE_P = 700,
     VALUES = 701,
     VARCHAR = 702,
     VARIADIC = 703,
     VARYING = 704,
     VERBOSE = 705,
     VERSION_P = 706,
     VIEW = 707,
     VIEWS = 708,
     VIRTUAL = 709,
     VOLATILE = 710,
     WHEN = 711,
     WHERE = 712,
     WHITESPACE_P = 713,
     WINDOW = 714,
     WITH = 715,
     WITHIN = 716,
     WITHOUT = 717,
     WORK = 718,
     WRAPPER = 719,
     WRITE_P = 720,
     XML_P = 721,
     XMLATTRIBUTES = 722,
     XMLCONCAT = 723,
     XMLELEMENT = 724,
     XMLEXISTS = 725,
     XMLFOREST = 726,
     XMLNAMESPACES = 727,
     XMLPARSE = 728,
     XMLPI = 729,
     XMLROOT = 730,
     XMLSERIALIZE = 731,
     XMLTABLE = 732,
     YEAR_P = 733,
     YEARS_P = 734,
     YES_P = 735,
     ZONE = 736,
     NOT_LA = 737,
     NULLS_LA = 738,
     WITH_LA = 739,
     POSTFIXOP = 740,
     UMINUS = 741
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define POWER_OF 271
#define LESS_EQUALS 272
#define GREATER_EQUALS 273
#define NOT_EQUALS 274
#define ABORT_P 275
#define ABSOLUTE_P 276
#define ACCESS 277
#define ACTION 278
#define ADD_P 279
#define ADMIN 280
#define AFTER 281
#define AGGREGATE 282
#define ALL 283
#define ALSO 284
#define ALTER 285
#define ALWAYS 286
#define ANALYSE 287
#define ANALYZE 288
#define AND 289
#define ANY 290
#define ARRAY 291
#define AS 292
#define ASC_P 293
#define ASSERTION 294
#define ASSIGNMENT 295
#define ASYMMETRIC 296
#define AT 297
#define ATTACH 298
#define ATTRIBUTE 299
#define AUTHORIZATION 300
#define BACKWARD 301
#define BEFORE 302
#define BEGIN_P 303
#define BETWEEN 304
#define BIGINT 305
#define BINARY 306
#define BIT 307
#define BOOLEAN_P 308
#define BOTH 309
#define BY 310
#define CACHE 311
#define CALL_P 312
#define CALLED 313
#define CASCADE 314
#define CASCADED 315
#define CASE 316
#define CAST 317
#define CATALOG_P 318
#define CHAIN 319
#define CHAR_P 320
#define CHARACTER 321
#define CHARACTERISTICS 322
#define CHECK_P 323
#define CHECKPOINT 324
#define CLASS 325
#define CLOSE 326
#define CLUSTER 327
#define COALESCE 328
#define COLLATE 329
#define COLLATION 330
#define COLUMN 331
#define COLUMNS 332
#define COMMENT 333
#define COMMENTS 334
#define COMMIT 335
#define COMMITTED 336
#define COMPRESSION 337
#define CONCURRENTLY 338
#define CONFIGURATION 339
#define CONFLICT 340
#define CONNECTION 341
#define CONSTRAINT 342
#define CONSTRAINTS 343
#define CONTENT_P 344
#define CONTINUE_P 345
#define CONVERSION_P 346
#define COPY 347
#define COST 348
#define CREATE_P 349
#define CROSS 350
#define CSV 351
#define CUBE 352
#define CURRENT_P 353
#define CURRENT_CATALOG 354
#define CURRENT_DATE 355
#define CURRENT_ROLE 356
#define CURRENT_SCHEMA 357
#define CURRENT_TIME 358
#define CURRENT_TIMESTAMP 359
#define CURRENT_USER 360
#define CURSOR 361
#define CYCLE 362
#define DATA_P 363
#define DATABASE 364
#define DAY_P 365
#define DAYS_P 366
#define DEALLOCATE 367
#define DEC 368
#define DECIMAL_P 369
#define DECLARE 370
#define DEFAULT 371
#define DEFAULTS 372
#define DEFERRABLE 373
#define DEFERRED 374
#define DEFINER 375
#define DELETE_P 376
#define DELIMITER 377
#define DELIMITERS 378
#define DEPENDS 379
#define DESC_P 380
#define DESCRIBE 381
#define DETACH 382
#define DICTIONARY 383
#define DISABLE_P 384
#define DISCARD 385
#define DISTINCT 386
#define DO 387
#define DOCUMENT_P 388
#define DOMAIN_P 389
#define DOUBLE_P 390
#define DROP 391
#define EACH 392
#define ELSE 393
#define ENABLE_P 394
#define ENCODING 395
#define ENCRYPTED 396
#define END_P 397
#define ENUM_P 398
#define ESCAPE 399
#define EVENT 400
#define EXCEPT 401
#define EXCLUDE 402
#define EXCLUDING 403
#define EXCLUSIVE 404
#define EXECUTE 405
#define EXISTS 406
#define EXPLAIN 407
#define EXPORT_P 408
#define EXPORT_STATE 409
#define EXTENSION 410
#define EXTERNAL 411
#define EXTRACT 412
#define FALSE_P 413
#define FAMILY 414
#define FETCH 415
#define FILTER 416
#define FIRST_P 417
#define FLOAT_P 418
#define FOLLOWING 419
#define FOR 420
#define FORCE 421
#define FOREIGN 422
#define FORWARD 423
#define FREEZE 424
#define FROM 425
#define FULL 426
#define FUNCTION 427
#define FUNCTIONS 428
#define GENERATED 429
#define GLOB 430
#define GLOBAL 431
#define GRANT 432
#define GRANTED 433
#define GROUP_P 434
#define GROUPING 435
#define GROUPING_ID 436
#define HANDLER 437
#define HAVING 438
#define HEADER_P 439
#define HOLD 440
#define HOUR_P 441
#define HOURS_P 442
#define IDENTITY_P 443
#define IF_P 444
#define IGNORE_P 445
#define ILIKE 446
#define IMMEDIATE 447
#define IMMUTABLE 448
#define IMPLICIT_P 449
#define IMPORT_P 450
#define IN_P 451
#define INCLUDING 452
#define INCREMENT 453
#define INDEX 454
#define INDEXES 455
#define INHERIT 456
#define INHERITS 457
#define INITIALLY 458
#define INLINE_P 459
#define INNER_P 460
#define INOUT 461
#define INPUT_P 462
#define INSENSITIVE 463
#define INSERT 464
#define INSTALL 465
#define INSTEAD 466
#define INT_P 467
#define INTEGER 468
#define INTERSECT 469
#define INTERVAL 470
#define INTO 471
#define INVOKER 472
#define IS 473
#define ISNULL 474
#define ISOLATION 475
#define JOIN 476
#define JSON 477
#define KEY 478
#define LABEL 479
#define LANGUAGE 480
#define LARGE_P 481
#define LAST_P 482
#define LATERAL_P 483
#define LEADING 484
#define LEAKPROOF 485
#define LEFT 486
#define LEVEL 487
#define LIKE 488
#define LIMIT 489
#define LISTEN 490
#define LOAD 491
#define LOCAL 492
#define LOCALTIME 493
#define LOCALTIMESTAMP 494
#define LOCATION 495
#define LOCK_P 496
#define LOCKED 497
#define LOGGED 498
#define MACRO 499
#define MAP 500
#define MAPPING 501
#define MATCH 502
#define MATERIALIZED 503
#define MAXVALUE 504
#define METHOD 505
#define MICROSECOND_P 506
#define MICROSECONDS_P 507
#define MILLISECOND_P 508
#define MILLISECONDS_P 509
#define MINUTE_P 510
#define MINUTES_P 511
#define MINVALUE 512
#define MODE 513
#define MONTH_P 514
#define MONTHS_P 515
#define MOVE 516
#define NAME_P 517
#define NAMES 518
#define NATIONAL 519
#define NATURAL 520
#define NCHAR 521
#define NEW 522
#define NEXT 523
#define NO 524
#define NONE 525
#define NOT 526
#define NOTHING 527
#define NOTIFY 528
#define NOTNULL 529
#define NOWAIT 530
#define NULL_P 531
#define NULLIF 532
#define NULLS_P 533
#define NUMERIC 534
#define OBJECT_P 535
#define OF 536
#define OFF 537
#define OFFSET 538
#define OIDS 539
#define OLD 540
#define ON 541
#define ONLY 542
#define OPERATOR 543
#define OPTION 544
#define OPTIONS 545
#define OR 546
#define ORDER 547
#define ORDINALITY 548
#define OUT_P 549
#define OUTER_P 550
#define OVER 551
#define OVERLAPS 552
#define OVERLAY 553
#define OVERRIDING 554
#define OWNED 555
#define OWNER 556
#define PARALLEL 557
#define PARSER 558
#define PARTIAL 559
#define PARTITION 560
#define PASSING 561
#define PASSWORD 562
#define PERCENT 563
#define PLACING 564
#define PLANS 565
#define POLICY 566
#define POSITION 567
#define PRAGMA_P 568
#define PRECEDING 569
#define PRECISION 570
#define PREPARE 571
#define PREPARED 572
#define PRESERVE 573
#define PRIMARY 574
#define PRIOR 575
#define PRIVILEGES 576
#define PROCEDURAL 577
#define PROCEDURE 578
#define PROGRAM 579
#define PUBLICATION 580
#define QUALIFY 581
#define QUOTE 582
#define RANGE 583
#define READ_P 584
#define REAL 585
#define REASSIGN 586
#define RECHECK 587
#define RECURSIVE 588
#define REF 589
#define REFERENCES 590
#define REFERENCING 591
#define REFRESH 592
#define REINDEX 593
#define RELATIVE_P 594
#define RELEASE 595
#define RENAME 596
#define REPEATABLE 597
#define REPLACE 598
#define REPLICA 599
#define RESET 600
#define RESPECT_P 601
#define RESTART 602
#define RESTRICT 603
#define RETURNING 604
#define RETURNS 605
#define REVOKE 606
#define RIGHT 607
#define ROLE 608
#define ROLLBACK 609
#define ROLLUP 610
#define ROW 611
#define ROWS 612
#define RULE 613
#define SAMPLE 614
#define SAVEPOINT 615
#define SCHEMA 616
#define SCHEMAS 617
#define SCROLL 618
#define SEARCH 619
#define SECOND_P 620
#define SECONDS_P 621
#define SECURITY 622
#define SELECT 623
#define SEQUENCE 624
#define SEQUENCES 625
#define SERIALIZABLE 626
#define SERVER 627
#define SESSION 628
#define SESSION_USER 629
#define SET 630
#define SETOF 631
#define SETS 632
#define SHARE 633
#define SHOW 634
#define SIMILAR 635
#define SIMPLE 636
#define SKIP 637
#define SMALLINT 638
#define SNAPSHOT 639
#define SOME 640
#define SQL_P 641
#define STABLE 642
#define STANDALONE_P 643
#define START 644
#define STATEMENT 645
#define STATISTICS 646
#define STDIN 647
#define STDOUT 648
#define STORAGE 649
#define STORED 650
#define STRICT_P 651
#define STRIP_P 652
#define STRUCT 653
#define SUBSCRIPTION 654
#define SUBSTRING 655
#define SUMMARIZE 656
#define SYMMETRIC 657
#define SYSID 658
#define SYSTEM_P 659
#define TABLE 660
#define TABLES 661
#define TABLESAMPLE 662
#define TABLESPACE 663
#define TEMP 664
#define TEMPLATE 665
#define TEMPORARY 666
#define TEXT_P 667
#define THEN 668
#define TIME 669
#define TIMESTAMP 670
#define TO 671
#define TRAILING 672
#define TRANSACTION 673
#define TRANSFORM 674
#define TREAT 675
#define TRIGGER 676
#define TRIM 677
#define TRUE_P 678
#define TRUNCATE 679
#define TRUSTED 680
#define TRY_CAST 681
#define TYPE_P 682
#define TYPES_P 683
#define UNBOUNDED 684
#define UNCOMMITTED 685
#define UNENCRYPTED 686
#define UNION 687
#define UNIQUE 688
#define UNKNOWN 689
#define UNLISTEN 690
#define UNLOGGED 691
#define UNTIL 692
#define UPDATE 693
#define USER 694
#define USING 695
#define VACUUM 696
#define VALID 697
#define VALIDATE 698
#define VALIDATOR 699
#define VALUE_P 700
#define VALUES 701
#define VARCHAR 702
#define VARIADIC 703
#define VARYING 704
#define VERBOSE 705
#define VERSION_P 706
#define VIEW 707
#define VIEWS 708
#define VIRTUAL 709
#define VOLATILE 710
#define WHEN 711
#define WHERE 712
#define WHITESPACE_P 713
#define WINDOW 714
#define WITH 715
#define WITHIN 716
#define WITHOUT 717
#define WORK 718
#define WRAPPER 719
#define WRITE_P 720
#define XML_P 721
#define XMLATTRIBUTES 722
#define XMLCONCAT 723
#define XMLELEMENT 724
#define XMLEXISTS 725
#define XMLFOREST 726
#define XMLNAMESPACES 727
#define XMLPARSE 728
#define XMLPI 729
#define XMLROOT 730
#define XMLSERIALIZE 731
#define XMLTABLE 732
#define YEAR_P 733
#define YEARS_P 734
#define YES_P 735
#define ZONE 736
#define NOT_LA 737
#define NULLS_LA 738
#define WITH_LA 739
#define POSTFIXOP 740
#define UMINUS 741




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGConstrType           constr;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1287 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1312 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  597
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   55751

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  508
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  397
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1849
/* YYNRULES -- Number of states.  */
#define YYNSTATES  3042

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   741

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   505,     2,   493,     2,     2,
     498,   499,   491,   489,   502,   490,   500,   492,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   507,   501,
     485,   487,   486,   506,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   496,     2,   497,   494,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   503,     2,   504,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     488,   495
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   275,   280,   283,   288,
     292,   299,   304,   307,   310,   313,   316,   318,   321,   322,
     324,   327,   330,   333,   335,   339,   344,   347,   349,   350,
     353,   357,   360,   364,   373,   375,   376,   378,   382,   389,
     396,   405,   412,   421,   428,   437,   444,   453,   462,   473,
     482,   493,   495,   496,   504,   506,   511,   516,   524,   527,
     529,   533,   538,   542,   543,   545,   546,   549,   553,   559,
     568,   574,   575,   581,   587,   595,   598,   599,   601,   603,
     605,   609,   612,   613,   615,   616,   618,   622,   624,   628,
     630,   633,   635,   639,   642,   645,   650,   656,   662,   671,
     673,   674,   678,   688,   701,   705,   706,   711,   718,   720,
     723,   725,   727,   728,   730,   733,   736,   738,   741,   744,
     746,   749,   753,   756,   759,   762,   765,   769,   773,   777,
     779,   783,   785,   786,   788,   791,   794,   797,   800,   803,
     806,   809,   812,   814,   816,   817,   827,   840,   852,   853,
     856,   858,   860,   862,   864,   866,   868,   872,   873,   875,
     878,   880,   882,   885,   888,   892,   894,   896,   899,   902,
     904,   907,   911,   917,   921,   924,   930,   932,   934,   936,
     937,   943,   951,   957,   960,   964,   966,   968,   971,   974,
     975,   979,   984,   989,   990,   994,   997,   998,  1002,  1004,
    1006,  1008,  1010,  1012,  1014,  1016,  1018,  1020,  1022,  1026,
    1030,  1032,  1035,  1038,  1041,  1044,  1047,  1050,  1051,  1055,
    1059,  1063,  1064,  1066,  1069,  1071,  1074,  1077,  1080,  1083,
    1087,  1092,  1094,  1098,  1100,  1102,  1104,  1106,  1110,  1112,
    1115,  1116,  1118,  1121,  1122,  1124,  1128,  1129,  1132,  1133,
    1137,  1141,  1143,  1149,  1153,  1155,  1159,  1161,  1164,  1166,
    1171,  1177,  1183,  1190,  1194,  1202,  1207,  1219,  1221,  1225,
    1228,  1231,  1234,  1235,  1239,  1241,  1243,  1246,  1249,  1252,
    1255,  1257,  1258,  1260,  1263,  1270,  1275,  1282,  1287,  1294,
    1303,  1308,  1315,  1317,  1319,  1321,  1323,  1326,  1328,  1331,
    1333,  1336,  1338,  1340,  1342,  1346,  1350,  1354,  1358,  1361,
    1364,  1366,  1370,  1372,  1374,  1376,  1378,  1382,  1384,  1386,
    1387,  1389,  1391,  1393,  1395,  1399,  1408,  1416,  1418,  1420,
    1423,  1427,  1436,  1448,  1458,  1460,  1462,  1466,  1467,  1469,
    1473,  1475,  1476,  1478,  1479,  1481,  1482,  1484,  1488,  1490,
    1492,  1494,  1498,  1499,  1502,  1505,  1506,  1509,  1510,  1512,
    1513,  1515,  1517,  1519,  1523,  1527,  1529,  1531,  1535,  1539,
    1543,  1547,  1552,  1556,  1559,  1561,  1563,  1565,  1567,  1569,
    1573,  1575,  1577,  1581,  1585,  1587,  1590,  1595,  1600,  1603,
    1607,  1613,  1619,  1621,  1623,  1635,  1647,  1649,  1652,  1657,
    1662,  1667,  1670,  1673,  1677,  1679,  1683,  1690,  1693,  1694,
    1698,  1702,  1707,  1712,  1717,  1722,  1726,  1729,  1731,  1733,
    1734,  1736,  1738,  1739,  1741,  1747,  1749,  1750,  1753,  1756,
    1757,  1759,  1760,  1764,  1770,  1776,  1778,  1782,  1787,  1791,
    1793,  1795,  1796,  1799,  1802,  1803,  1806,  1809,  1811,  1813,
    1815,  1816,  1819,  1824,  1830,  1835,  1838,  1842,  1845,  1848,
    1851,  1854,  1856,  1859,  1863,  1864,  1866,  1867,  1873,  1875,
    1880,  1887,  1890,  1892,  1893,  1898,  1899,  1901,  1903,  1906,
    1909,  1912,  1914,  1916,  1919,  1922,  1924,  1926,  1928,  1930,
    1932,  1934,  1938,  1942,  1946,  1947,  1949,  1953,  1955,  1958,
    1960,  1962,  1964,  1966,  1968,  1971,  1976,  1981,  1987,  1989,
    1991,  1994,  1995,  1998,  1999,  2001,  2005,  2007,  2008,  2010,
    2013,  2017,  2020,  2025,  2028,  2032,  2035,  2036,  2038,  2041,
    2042,  2047,  2053,  2055,  2058,  2061,  2062,  2064,  2068,  2070,
    2073,  2077,  2081,  2085,  2089,  2093,  2095,  2100,  2104,  2109,
    2115,  2120,  2126,  2131,  2137,  2140,  2145,  2147,  2149,  2150,
    2152,  2157,  2163,  2168,  2169,  2172,  2175,  2178,  2180,  2182,
    2183,  2188,  2191,  2193,  2196,  2199,  2204,  2207,  2214,  2217,
    2219,  2223,  2228,  2229,  2232,  2233,  2236,  2237,  2239,  2243,
    2247,  2250,  2251,  2254,  2259,  2261,  2263,  2265,  2266,  2269,
    2273,  2279,  2286,  2289,  2293,  2299,  2305,  2309,  2314,  2315,
    2317,  2319,  2321,  2323,  2325,  2328,  2333,  2335,  2337,  2339,
    2341,  2344,  2348,  2349,  2351,  2353,  2355,  2357,  2359,  2362,
    2365,  2368,  2371,  2374,  2376,  2380,  2381,  2383,  2385,  2387,
    2389,  2395,  2398,  2400,  2402,  2404,  2406,  2411,  2413,  2416,
    2419,  2421,  2425,  2429,  2432,  2434,  2435,  2441,  2444,  2450,
    2453,  2455,  2459,  2463,  2464,  2466,  2468,  2470,  2472,  2474,
    2476,  2478,  2480,  2482,  2484,  2486,  2488,  2490,  2492,  2494,
    2496,  2498,  2500,  2502,  2504,  2506,  2508,  2510,  2512,  2516,
    2520,  2524,  2528,  2532,  2536,  2540,  2541,  2543,  2547,  2551,
    2557,  2560,  2563,  2567,  2571,  2575,  2579,  2583,  2587,  2591,
    2595,  2599,  2603,  2607,  2611,  2615,  2619,  2622,  2625,  2629,
    2633,  2636,  2639,  2643,  2647,  2653,  2658,  2665,  2669,  2675,
    2680,  2687,  2692,  2699,  2705,  2713,  2717,  2720,  2725,  2729,
    2732,  2734,  2738,  2742,  2746,  2750,  2754,  2759,  2763,  2768,
    2772,  2777,  2783,  2790,  2797,  2805,  2812,  2820,  2827,  2835,
    2839,  2844,  2849,  2856,  2858,  2863,  2865,  2869,  2872,  2875,
    2879,  2883,  2887,  2891,  2895,  2899,  2903,  2907,  2911,  2915,
    2919,  2923,  2927,  2931,  2934,  2937,  2943,  2950,  2957,  2965,
    2967,  2969,  2972,  2975,  2978,  2983,  2985,  2988,  2990,  2993,
    2996,  3001,  3005,  3012,  3020,  3030,  3038,  3046,  3051,  3057,
    3059,  3061,  3063,  3069,  3071,  3073,  3078,  3080,  3085,  3087,
    3092,  3094,  3099,  3101,  3103,  3105,  3107,  3109,  3111,  3118,
    3125,  3130,  3135,  3140,  3145,  3152,  3158,  3164,  3170,  3175,
    3182,  3187,  3193,  3194,  3200,  3201,  3203,  3204,  3207,  3208,
    3210,  3214,  3218,  3221,  3224,  3225,  3232,  3234,  3235,  3239,
    3240,  3243,  3246,  3247,  3249,  3254,  3257,  3260,  3263,  3266,
    3269,  3274,  3278,  3280,  3286,  3290,  3292,  3296,  3298,  3301,
    3303,  3305,  3307,  3309,  3311,  3313,  3315,  3317,  3319,  3321,
    3323,  3325,  3327,  3329,  3331,  3333,  3335,  3337,  3339,  3344,
    3346,  3351,  3353,  3358,  3360,  3363,  3365,  3368,  3370,  3373,
    3375,  3379,  3381,  3385,  3387,  3390,  3392,  3393,  3395,  3399,
    3401,  3405,  3409,  3411,  3415,  3419,  3420,  3422,  3424,  3426,
    3428,  3430,  3432,  3434,  3436,  3438,  3440,  3445,  3449,  3452,
    3456,  3457,  3461,  3465,  3468,  3471,  3473,  3474,  3477,  3480,
    3484,  3487,  3489,  3491,  3495,  3501,  3503,  3506,  3511,  3514,
    3515,  3517,  3518,  3520,  3523,  3526,  3530,  3536,  3538,  3539,
    3541,  3544,  3545,  3548,  3550,  3551,  3553,  3554,  3556,  3560,
    3562,  3565,  3569,  3572,  3574,  3578,  3584,  3589,  3592,  3594,
    3595,  3599,  3601,  3605,  3607,  3610,  3615,  3618,  3619,  3621,
    3625,  3627,  3630,  3632,  3636,  3638,  3641,  3643,  3645,  3647,
    3650,  3652,  3654,  3657,  3659,  3661,  3664,  3672,  3675,  3681,
    3685,  3689,  3691,  3693,  3695,  3697,  3699,  3701,  3703,  3705,
    3707,  3709,  3711,  3713,  3715,  3717,  3719,  3721,  3723,  3725,
    3727,  3729,  3732,  3735,  3739,  3743,  3744,  3746,  3748,  3750,
    3752,  3754,  3756,  3758,  3764,  3768,  3769,  3771,  3773,  3775,
    3777,  3782,  3790,  3793,  3794,  3796,  3798,  3800,  3802,  3816,
    3833,  3835,  3838,  3839,  3841,  3842,  3844,  3845,  3848,  3849,
    3851,  3852,  3859,  3868,  3875,  3884,  3891,  3900,  3903,  3905,
    3910,  3914,  3917,  3922,  3926,  3932,  3934,  3935,  3937,  3939,
    3940,  3942,  3944,  3946,  3948,  3950,  3952,  3954,  3956,  3958,
    3960,  3962,  3966,  3968,  3970,  3972,  3974,  3976,  3978,  3981,
    3983,  3985,  3988,  3992,  3996,  4000,  4002,  4006,  4010,  4013,
    4017,  4021,  4025,  4029,  4031,  4033,  4035,  4037,  4041,  4047,
    4049,  4051,  4053,  4055,  4059,  4062,  4065,  4069,  4071,  4073,
    4078,  4084,  4090,  4095,  4102,  4104,  4106,  4108,  4110,  4112,
    4114,  4115,  4117,  4121,  4123,  4124,  4132,  4134,  4137,  4141,
    4144,  4145,  4148,  4149,  4152,  4157,  4160,  4162,  4164,  4166,
    4169,  4173,  4176,  4179,  4182,  4185,  4189,  4194,  4197,  4199,
    4201,  4203,  4205,  4209,  4212,  4222,  4234,  4247,  4262,  4266,
    4271,  4276,  4277,  4285,  4296,  4306,  4309,  4313,  4314,  4319,
    4321,  4323,  4325,  4327,  4329,  4331,  4333,  4335,  4337,  4339,
    4341,  4343,  4345,  4347,  4349,  4351,  4353,  4355,  4357,  4359,
    4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,  4377,  4379,
    4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,  4397,  4399,
    4401,  4403,  4405,  4407,  4409,  4411,  4413,  4415,  4417,  4419,
    4421,  4423,  4425,  4427,  4429,  4431,  4433,  4435,  4437,  4439,
    4441,  4443,  4445,  4447,  4449,  4451,  4453,  4455,  4457,  4459,
    4461,  4463,  4465,  4467,  4469,  4471,  4473,  4475,  4477,  4479,
    4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,  4497,  4499,
    4501,  4503,  4505,  4507,  4509,  4511,  4513,  4515,  4517,  4519,
    4521,  4523,  4525,  4527,  4529,  4531,  4533,  4535,  4537,  4539,
    4541,  4543,  4545,  4547,  4549,  4551,  4553,  4555,  4557,  4559,
    4561,  4563,  4565,  4567,  4569,  4571,  4573,  4575,  4577,  4579,
    4581,  4583,  4585,  4587,  4589,  4591,  4593,  4595,  4597,  4599,
    4601,  4603,  4605,  4607,  4609,  4611,  4613,  4615,  4617,  4619,
    4621,  4623,  4625,  4627,  4629,  4631,  4633,  4635,  4637,  4639,
    4641,  4643,  4645,  4647,  4649,  4651,  4653,  4655,  4657,  4659,
    4661,  4663,  4665,  4667,  4669,  4671,  4673,  4675,  4677,  4679,
    4681,  4683,  4685,  4687,  4689,  4691,  4693,  4695,  4697,  4699,
    4701,  4703,  4705,  4707,  4709,  4711,  4713,  4715,  4717,  4719,
    4721,  4723,  4725,  4727,  4729,  4731,  4733,  4735,  4737,  4739,
    4741,  4743,  4745,  4747,  4749,  4751,  4753,  4755,  4757,  4759,
    4761,  4763,  4765,  4767,  4769,  4771,  4773,  4775,  4777,  4779,
    4781,  4783,  4785,  4787,  4789,  4791,  4793,  4795,  4797,  4799,
    4801,  4803,  4805,  4807,  4809,  4811,  4813,  4815,  4817,  4819,
    4821,  4823,  4825,  4827,  4829,  4831,  4833,  4835,  4837,  4839,
    4841,  4843,  4845,  4847,  4849,  4851,  4853,  4855,  4857,  4859,
    4861,  4863,  4865,  4867,  4869,  4871,  4873,  4875,  4877,  4879,
    4881,  4883,  4885,  4887,  4889,  4891,  4893,  4895,  4897,  4899,
    4901,  4903,  4905,  4907,  4909,  4911,  4913,  4915,  4917,  4919,
    4921,  4923,  4925,  4927,  4929,  4931,  4933,  4935,  4937,  4939,
    4941,  4943,  4945,  4947,  4949,  4951,  4953,  4955,  4957,  4959,
    4961,  4963,  4965,  4967,  4969,  4971,  4973,  4975,  4977,  4979,
    4981,  4983,  4985,  4987,  4989,  4991,  4993,  4995,  4997,  4999,
    5001,  5003,  5005,  5007,  5009,  5011,  5013,  5015,  5017,  5019,
    5021,  5023,  5025,  5027,  5029,  5031,  5033,  5035,  5037,  5039,
    5041,  5043,  5045,  5047,  5049,  5051,  5053,  5055,  5057,  5059,
    5061,  5063,  5065,  5067,  5069,  5071,  5073,  5075,  5077,  5079,
    5081,  5083,  5085,  5087,  5089,  5091,  5093,  5095,  5097,  5099,
    5101,  5103,  5105,  5107,  5109,  5111,  5113,  5115,  5117,  5119,
    5121,  5123,  5125,  5127,  5129,  5131,  5133,  5135,  5137,  5139,
    5141,  5143,  5145,  5147,  5149,  5151,  5153,  5155,  5157,  5159,
    5161,  5163,  5165,  5167,  5169,  5171,  5173,  5175,  5177,  5179,
    5181,  5183,  5185,  5187,  5189,  5191,  5193,  5195,  5197,  5199,
    5201,  5203,  5205,  5207,  5209,  5211,  5213,  5215,  5217,  5219,
    5221,  5223,  5225,  5227,  5229,  5231,  5233,  5235,  5237,  5239,
    5241,  5243,  5245,  5247,  5249,  5251,  5253,  5255,  5257,  5259,
    5261,  5263,  5265,  5267,  5269,  5271,  5273,  5275,  5277,  5279,
    5281,  5283,  5285,  5287,  5289,  5291,  5293,  5295,  5297,  5299,
    5301,  5303,  5305,  5307,  5309,  5311,  5313,  5315,  5317,  5319,
    5321,  5323,  5325,  5327,  5329,  5331,  5333,  5335,  5337,  5339,
    5341,  5343,  5345,  5347,  5349,  5351,  5353,  5355,  5357,  5359,
    5361,  5363,  5365,  5367,  5369,  5371,  5373,  5375,  5377,  5379,
    5381,  5383,  5385,  5387,  5389,  5391,  5393,  5395,  5397,  5399,
    5401,  5403,  5405,  5407,  5409,  5411,  5413,  5415,  5417,  5419,
    5421,  5423,  5425,  5427,  5429,  5431,  5433,  5435,  5437,  5439,
    5441,  5443,  5445,  5447,  5449,  5451,  5453,  5455,  5457,  5459
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     509,     0,    -1,   510,    -1,   510,   501,   511,    -1,   511,
      -1,   853,    -1,   553,    -1,   512,    -1,   885,    -1,   892,
      -1,   854,    -1,   621,    -1,   895,    -1,   524,    -1,   617,
      -1,   843,    -1,   549,    -1,   562,    -1,   523,    -1,   881,
      -1,   610,    -1,   551,    -1,   857,    -1,   855,    -1,   856,
      -1,   846,    -1,   529,    -1,   874,    -1,   548,    -1,   840,
      -1,   527,    -1,   638,    -1,   560,    -1,   620,    -1,   876,
      -1,   886,    -1,   868,    -1,   889,    -1,   893,    -1,    -1,
      30,   405,   707,   520,    -1,    30,   405,   189,   151,   707,
     520,    -1,    30,   199,   820,   520,    -1,    30,   199,   189,
     151,   820,   520,    -1,    30,   369,   820,   520,    -1,    30,
     369,   189,   151,   820,   520,    -1,    30,   452,   820,   520,
      -1,    30,   452,   189,   151,   820,   520,    -1,   515,    -1,
     513,   515,    -1,   375,   116,   750,    -1,   136,   116,    -1,
     347,    -1,   347,   555,   556,    -1,   375,   557,    -1,   375,
     174,   609,    -1,   519,    -1,   516,   502,   519,    -1,    24,
     589,    -1,    24,   189,   271,   151,   589,    -1,    24,    76,
     589,    -1,    24,    76,   189,   271,   151,   589,    -1,    30,
     528,   829,   514,    -1,    30,   528,   829,   136,   271,   276,
      -1,    30,   528,   829,   375,   271,   276,    -1,    30,   528,
     829,   375,   391,   559,    -1,    30,   528,   829,   375,   577,
      -1,    30,   528,   829,   345,   577,    -1,    30,   528,   829,
     375,   394,   829,    -1,    30,   528,   829,    24,   174,   609,
      37,   188,   565,    -1,    30,   528,   829,   513,    -1,    30,
     528,   829,   136,   188,    -1,    30,   528,   829,   136,   188,
     189,   151,    -1,   136,   528,   189,   151,   829,   614,    -1,
     136,   528,   829,   614,    -1,    30,   528,   829,   522,   427,
     720,   716,   518,   614,    -1,    30,   528,   829,   521,    -1,
      24,   579,    -1,    30,    87,   823,   563,    -1,   443,    87,
     823,    -1,   136,    87,   189,   151,   823,   614,    -1,   136,
      87,   823,   614,    -1,   375,   243,    -1,   375,   436,    -1,
     375,   577,    -1,   345,   577,    -1,   521,    -1,   440,   750,
      -1,    -1,   573,    -1,   375,   573,    -1,    24,   573,    -1,
     136,   587,    -1,   517,    -1,   520,   502,   517,    -1,   290,
     498,   516,   499,    -1,   375,   108,    -1,   375,    -1,    -1,
     112,   823,    -1,   112,   316,   823,    -1,   112,    28,    -1,
     112,   316,    28,    -1,    94,   427,   834,    37,   143,   498,
     525,   499,    -1,   526,    -1,    -1,   828,    -1,   526,   502,
     828,    -1,    30,   361,   823,   341,   416,   823,    -1,    30,
     405,   707,   341,   416,   823,    -1,    30,   405,   189,   151,
     707,   341,   416,   823,    -1,    30,   369,   820,   341,   416,
     823,    -1,    30,   369,   189,   151,   820,   341,   416,   823,
      -1,    30,   452,   820,   341,   416,   823,    -1,    30,   452,
     189,   151,   820,   341,   416,   823,    -1,    30,   199,   820,
     341,   416,   823,    -1,    30,   199,   189,   151,   820,   341,
     416,   823,    -1,    30,   405,   707,   341,   528,   823,   416,
     823,    -1,    30,   405,   189,   151,   707,   341,   528,   823,
     416,   823,    -1,    30,   405,   707,   341,    87,   823,   416,
     823,    -1,    30,   405,   189,   151,   707,   341,    87,   823,
     416,   823,    -1,    76,    -1,    -1,   533,   209,   216,   531,
     530,   536,   538,    -1,   638,    -1,   299,   539,   445,   638,
      -1,   498,   543,   499,   638,    -1,   498,   543,   499,   299,
     539,   445,   638,    -1,   116,   446,    -1,   820,    -1,   820,
      37,   829,    -1,   498,   546,   499,   713,    -1,   286,    87,
     823,    -1,    -1,   643,    -1,    -1,   829,   807,    -1,   547,
     487,   750,    -1,   498,   540,   499,   487,   750,    -1,   286,
      85,   532,   132,   438,   375,   545,   713,    -1,   286,    85,
     532,   132,   272,    -1,    -1,   829,   541,   542,   657,   658,
      -1,   755,   541,   542,   657,   658,    -1,   498,   750,   499,
     541,   542,   657,   658,    -1,   349,   810,    -1,    -1,   439,
      -1,   404,    -1,   547,    -1,   540,   502,   547,    -1,    74,
     834,    -1,    -1,   834,    -1,    -1,   534,    -1,   543,   502,
     534,    -1,   535,    -1,   544,   502,   535,    -1,   544,    -1,
     544,   502,    -1,   537,    -1,   546,   502,   537,    -1,   829,
     807,    -1,   313,   829,    -1,   313,   829,   487,   873,    -1,
     313,   829,   498,   785,   499,    -1,    94,   608,   369,   820,
     550,    -1,    94,   608,   369,   189,   271,   151,   820,   550,
      -1,   554,    -1,    -1,   150,   823,   552,    -1,    94,   608,
     405,   897,    37,   150,   823,   552,   896,    -1,    94,   608,
     405,   189,   271,   151,   897,    37,   150,   823,   552,   896,
      -1,   498,   783,   499,    -1,    -1,    30,   369,   820,   554,
      -1,    30,   369,   189,   151,   820,   554,    -1,   557,    -1,
     554,   557,    -1,   460,    -1,   484,    -1,    -1,     4,    -1,
     489,     4,    -1,   490,     4,    -1,   559,    -1,    37,   722,
      -1,    56,   556,    -1,   107,    -1,   269,   107,    -1,   198,
     558,   556,    -1,   249,   556,    -1,   257,   556,    -1,   269,
     249,    -1,   269,   257,    -1,   300,    55,   834,    -1,   369,
     262,   834,    -1,   389,   555,   556,    -1,   347,    -1,   347,
     555,   556,    -1,    55,    -1,    -1,   827,    -1,   489,   827,
      -1,   490,   827,    -1,    20,   561,    -1,    48,   561,    -1,
     389,   561,    -1,    80,   561,    -1,   142,   561,    -1,   354,
     561,    -1,   463,    -1,   418,    -1,    -1,    94,   608,   405,
     820,   498,   595,   499,   584,   576,    -1,    94,   608,   405,
     189,   271,   151,   820,   498,   595,   499,   584,   576,    -1,
      94,   291,   343,   608,   405,   820,   498,   595,   499,   584,
     576,    -1,    -1,   563,   588,    -1,   603,    -1,   904,    -1,
     779,    -1,   556,    -1,   828,    -1,   270,    -1,   498,   554,
     499,    -1,    -1,   828,    -1,   269,    23,    -1,   348,    -1,
      59,    -1,   375,   276,    -1,   375,   116,    -1,    87,   823,
     569,    -1,   569,    -1,   583,    -1,    74,   834,    -1,   271,
     276,    -1,   276,    -1,   433,   594,    -1,   319,   223,   594,
      -1,    68,   498,   750,   499,   578,    -1,   440,    82,   823,
      -1,   116,   751,    -1,   335,   820,   597,   606,   575,    -1,
     454,    -1,   395,    -1,   570,    -1,    -1,   174,   609,    37,
     188,   565,    -1,   174,   609,    37,   498,   750,   499,   571,
      -1,    37,   498,   750,   499,   571,    -1,   587,   566,    -1,
     286,   438,   567,    -1,   574,    -1,   599,    -1,   574,   599,
      -1,   599,   574,    -1,    -1,   286,    80,   136,    -1,   286,
      80,   121,   357,    -1,   286,    80,   318,   357,    -1,    -1,
     498,   581,   499,    -1,   269,   201,    -1,    -1,    87,   823,
     604,    -1,   604,    -1,    79,    -1,    88,    -1,   117,    -1,
     188,    -1,   200,    -1,   391,    -1,   394,    -1,    28,    -1,
     600,    -1,   581,   502,   600,    -1,   440,   199,   591,    -1,
     118,    -1,   271,   118,    -1,   203,   119,    -1,   203,   192,
      -1,   460,   577,    -1,   460,   284,    -1,   462,   284,    -1,
      -1,   498,   590,   499,    -1,   586,   197,   580,    -1,   586,
     148,   580,    -1,    -1,   838,    -1,   271,   118,    -1,   118,
      -1,   203,   192,    -1,   203,   119,    -1,   271,   442,    -1,
     269,   201,    -1,   829,   720,   598,    -1,   829,   719,   572,
     598,    -1,   593,    -1,   590,   502,   593,    -1,   829,    -1,
     589,    -1,   607,    -1,   579,    -1,   838,   487,   564,    -1,
     838,    -1,   460,   585,    -1,    -1,   605,    -1,   605,   502,
      -1,    -1,   829,    -1,   498,   601,   499,    -1,    -1,   598,
     568,    -1,    -1,   286,   121,   567,    -1,   838,   487,   564,
      -1,   838,    -1,   838,   500,   838,   487,   564,    -1,   838,
     500,   838,    -1,   596,    -1,   601,   502,   596,    -1,   601,
      -1,   601,   502,    -1,   720,    -1,   831,   835,   493,   427,
      -1,   376,   831,   835,   493,   427,    -1,    68,   498,   750,
     499,   563,    -1,   433,   498,   602,   499,   594,   563,    -1,
     433,   582,   563,    -1,   319,   223,   498,   602,   499,   594,
     563,    -1,   319,   223,   582,   563,    -1,   167,   223,   498,
     602,   499,   335,   820,   597,   606,   575,   563,    -1,   592,
      -1,   605,   502,   592,    -1,   247,   171,    -1,   247,   304,
      -1,   247,   381,    -1,    -1,   233,   820,   586,    -1,   411,
      -1,   409,    -1,   237,   411,    -1,   237,   409,    -1,   176,
     411,    -1,   176,   409,    -1,   436,    -1,    -1,    31,    -1,
      55,   116,    -1,   136,   611,   189,   151,   613,   614,    -1,
     136,   611,   613,   614,    -1,   136,   612,   189,   151,   821,
     614,    -1,   136,   612,   821,   614,    -1,   136,   615,   823,
     286,   834,   614,    -1,   136,   615,   189,   151,   823,   286,
     834,   614,    -1,   136,   427,   616,   614,    -1,   136,   427,
     189,   151,   616,   614,    -1,   405,    -1,   369,    -1,   172,
      -1,   244,    -1,   244,   405,    -1,   452,    -1,   248,   452,
      -1,   199,    -1,   167,   405,    -1,    75,    -1,    91,    -1,
     391,    -1,   412,   364,   303,    -1,   412,   364,   128,    -1,
     412,   364,   410,    -1,   412,   364,    84,    -1,    22,   250,
      -1,   145,   421,    -1,   155,    -1,   167,   108,   464,    -1,
     325,    -1,   361,    -1,   372,    -1,   834,    -1,   613,   502,
     834,    -1,    59,    -1,   348,    -1,    -1,   311,    -1,   358,
      -1,   421,    -1,   720,    -1,   616,   502,   720,    -1,    94,
     608,   618,   820,   619,    37,   405,   638,    -1,    94,   608,
     618,   820,   619,    37,   750,    -1,   172,    -1,   244,    -1,
     498,   499,    -1,   498,   785,   499,    -1,   533,   438,   882,
     375,   545,   696,   883,   538,    -1,    92,   633,   820,   597,
     631,   622,   627,   636,   623,   555,   628,    -1,    92,   498,
     842,   499,   416,   627,   636,   555,   628,    -1,   170,    -1,
     416,    -1,   625,   123,   828,    -1,    -1,   635,    -1,   624,
     502,   635,    -1,   440,    -1,    -1,    37,    -1,    -1,   324,
      -1,    -1,   632,    -1,   498,   637,   499,    -1,   865,    -1,
     556,    -1,   491,    -1,   498,   624,   499,    -1,    -1,   838,
     629,    -1,   460,   284,    -1,    -1,   632,   634,    -1,    -1,
      51,    -1,    -1,    51,    -1,   284,    -1,   169,    -1,   122,
     626,   828,    -1,   276,   626,   828,    -1,    96,    -1,   184,
      -1,   327,   626,   828,    -1,   144,   626,   828,    -1,   166,
     327,   601,    -1,   166,   327,   491,    -1,   166,   271,   276,
     601,    -1,   166,   276,   601,    -1,   140,   828,    -1,   865,
      -1,   828,    -1,   392,    -1,   393,    -1,   630,    -1,   637,
     502,   630,    -1,   640,    -1,   639,    -1,   498,   640,   499,
      -1,   498,   639,   499,    -1,   642,    -1,   641,   654,    -1,
     641,   653,   687,   660,    -1,   641,   653,   659,   688,    -1,
     643,   641,    -1,   643,   641,   654,    -1,   643,   641,   653,
     687,   660,    -1,   643,   641,   653,   659,   688,    -1,   642,
      -1,   639,    -1,   368,   651,   809,   646,   696,   713,   676,
     685,   760,   686,   664,    -1,   368,   650,   811,   646,   696,
     713,   676,   685,   760,   686,   664,    -1,   695,    -1,   405,
     707,    -1,   641,   432,   649,   641,    -1,   641,   214,   649,
     641,    -1,   641,   146,   649,   641,    -1,   460,   644,    -1,
     484,   644,    -1,   460,   333,   644,    -1,   645,    -1,   644,
     502,   645,    -1,   823,   836,    37,   498,   842,   499,    -1,
     216,   647,    -1,    -1,   411,   648,   820,    -1,   409,   648,
     820,    -1,   237,   411,   648,   820,    -1,   237,   409,   648,
     820,    -1,   176,   411,   648,   820,    -1,   176,   409,   648,
     820,    -1,   436,   648,   820,    -1,   405,   820,    -1,   820,
      -1,   405,    -1,    -1,    28,    -1,   131,    -1,    -1,   131,
      -1,   131,   286,   498,   783,   499,    -1,    28,    -1,    -1,
     190,   278,    -1,   346,   278,    -1,    -1,   654,    -1,    -1,
     292,    55,   655,    -1,   292,    55,    28,   657,   658,    -1,
     292,    55,   491,   657,   658,    -1,   656,    -1,   655,   502,
     656,    -1,   750,   440,   779,   658,    -1,   750,   657,   658,
      -1,    38,    -1,   125,    -1,    -1,   483,   162,    -1,   483,
     227,    -1,    -1,   661,   662,    -1,   662,   661,    -1,   661,
      -1,   662,    -1,   659,    -1,    -1,   234,   670,    -1,   234,
     670,   502,   671,    -1,   160,   675,   672,   674,   287,    -1,
     160,   675,   674,   287,    -1,   283,   671,    -1,   283,   672,
     674,    -1,     4,   493,    -1,     9,   493,    -1,     4,   308,
      -1,     9,   308,    -1,     9,    -1,     9,   357,    -1,   440,
     359,   666,    -1,    -1,   829,    -1,    -1,   665,   498,   663,
     499,   669,    -1,   663,    -1,   663,   498,   829,   499,    -1,
     663,   498,   829,   502,     9,   499,    -1,   407,   666,    -1,
     667,    -1,    -1,   342,   498,     9,   499,    -1,    -1,   750,
      -1,    28,    -1,   750,   493,    -1,     4,   308,    -1,     9,
     308,    -1,   750,    -1,   752,    -1,   489,   673,    -1,   490,
     673,    -1,   827,    -1,     4,    -1,   356,    -1,   357,    -1,
     162,    -1,   268,    -1,   179,    55,   678,    -1,   179,    55,
      28,    -1,   179,    55,   491,    -1,    -1,   679,    -1,   677,
     502,   679,    -1,   677,    -1,   677,   502,    -1,   750,    -1,
     680,    -1,   682,    -1,   681,    -1,   683,    -1,   498,   499,
      -1,   355,   498,   783,   499,    -1,    97,   498,   783,   499,
      -1,   180,   377,   498,   678,   499,    -1,   180,    -1,   181,
      -1,   183,   750,    -1,    -1,   326,   750,    -1,    -1,   689,
      -1,   165,   329,   287,    -1,   687,    -1,    -1,   690,    -1,
     689,   690,    -1,   691,   692,   693,    -1,   165,   438,    -1,
     165,   269,   223,   438,    -1,   165,   378,    -1,   165,   223,
     378,    -1,   281,   819,    -1,    -1,   275,    -1,   382,   242,
      -1,    -1,   446,   498,   783,   499,    -1,   694,   502,   498,
     783,   499,    -1,   694,    -1,   694,   502,    -1,   170,   698,
      -1,    -1,   699,    -1,   697,   502,   699,    -1,   697,    -1,
     697,   502,    -1,   707,   702,   668,    -1,   708,   703,   668,
      -1,   228,   708,   703,    -1,   639,   702,   668,    -1,   228,
     639,   702,    -1,   700,    -1,   498,   700,   499,   701,    -1,
     498,   700,   499,    -1,   699,    95,   221,   699,    -1,   699,
     704,   221,   699,   706,    -1,   699,   221,   699,   706,    -1,
     699,   265,   704,   221,   699,    -1,   699,   265,   221,   699,
      -1,    37,   829,   498,   822,   499,    -1,    37,   830,    -1,
     829,   498,   822,   499,    -1,   829,    -1,   701,    -1,    -1,
     701,    -1,    37,   498,   714,   499,    -1,    37,   829,   498,
     714,   499,    -1,   829,   498,   714,   499,    -1,    -1,   171,
     705,    -1,   231,   705,    -1,   352,   705,    -1,   205,    -1,
     295,    -1,    -1,   440,   498,   822,   499,    -1,   286,   750,
      -1,   820,    -1,   820,   491,    -1,   287,   820,    -1,   287,
     498,   820,   499,    -1,   755,   712,    -1,   357,   170,   498,
     710,   499,   712,    -1,   755,   711,    -1,   709,    -1,   710,
     502,   709,    -1,    37,   498,   714,   499,    -1,    -1,   484,
     293,    -1,    -1,   457,   750,    -1,    -1,   715,    -1,   714,
     502,   715,    -1,   829,   720,   716,    -1,    74,   834,    -1,
      -1,   829,   720,    -1,   717,   502,   829,   720,    -1,   356,
      -1,   398,    -1,   720,    -1,    -1,   722,   721,    -1,   376,
     722,   721,    -1,   722,    36,   496,   827,   497,    -1,   376,
     722,    36,   496,   827,   497,    -1,   722,    36,    -1,   376,
     722,    36,    -1,   718,   498,   717,   499,   721,    -1,   245,
     498,   787,   499,   721,    -1,   721,   496,   497,    -1,   721,
     496,   827,   497,    -1,    -1,   724,    -1,   726,    -1,   728,
      -1,   732,    -1,   738,    -1,   739,   749,    -1,   739,   498,
     827,   499,    -1,   726,    -1,   729,    -1,   733,    -1,   738,
      -1,   833,   725,    -1,   498,   783,   499,    -1,    -1,   212,
      -1,   213,    -1,   383,    -1,    50,    -1,   330,    -1,   163,
     727,    -1,   135,   315,    -1,   114,   725,    -1,   113,   725,
      -1,   279,   725,    -1,    53,    -1,   498,   827,   499,    -1,
      -1,   730,    -1,   731,    -1,   730,    -1,   731,    -1,    52,
     737,   498,   783,   499,    -1,    52,   737,    -1,   734,    -1,
     735,    -1,   734,    -1,   735,    -1,   736,   498,   827,   499,
      -1,   736,    -1,    66,   737,    -1,    65,   737,    -1,   447,
      -1,   264,    66,   737,    -1,   264,    65,   737,    -1,   266,
     737,    -1,   449,    -1,    -1,   415,   498,   827,   499,   740,
      -1,   415,   740,    -1,   414,   498,   827,   499,   740,    -1,
     414,   740,    -1,   215,    -1,   484,   414,   481,    -1,   462,
     414,   481,    -1,    -1,   478,    -1,   479,    -1,   259,    -1,
     260,    -1,   110,    -1,   111,    -1,   186,    -1,   187,    -1,
     255,    -1,   256,    -1,   365,    -1,   366,    -1,   253,    -1,
     254,    -1,   251,    -1,   252,    -1,   741,    -1,   742,    -1,
     743,    -1,   744,    -1,   745,    -1,   746,    -1,   747,    -1,
     748,    -1,   741,   416,   742,    -1,   743,   416,   744,    -1,
     743,   416,   745,    -1,   743,   416,   746,    -1,   744,   416,
     745,    -1,   744,   416,   746,    -1,   745,   416,   746,    -1,
      -1,   752,    -1,   750,    11,   720,    -1,   750,    74,   834,
      -1,   750,    42,   414,   481,   750,    -1,   489,   750,    -1,
     490,   750,    -1,   750,   489,   750,    -1,   750,   490,   750,
      -1,   750,   491,   750,    -1,   750,   492,   750,    -1,   750,
     493,   750,    -1,   750,   494,   750,    -1,   750,    16,   750,
      -1,   750,   485,   750,    -1,   750,   486,   750,    -1,   750,
     487,   750,    -1,   750,    17,   750,    -1,   750,    18,   750,
      -1,   750,    19,   750,    -1,   750,   778,   750,    -1,   778,
     750,    -1,   750,   778,    -1,   750,    34,   750,    -1,   750,
     291,   750,    -1,   271,   750,    -1,   482,   750,    -1,   750,
     175,   750,    -1,   750,   233,   750,    -1,   750,   233,   750,
     144,   750,    -1,   750,   482,   233,   750,    -1,   750,   482,
     233,   750,   144,   750,    -1,   750,   191,   750,    -1,   750,
     191,   750,   144,   750,    -1,   750,   482,   191,   750,    -1,
     750,   482,   191,   750,   144,   750,    -1,   750,   380,   416,
     750,    -1,   750,   380,   416,   750,   144,   750,    -1,   750,
     482,   380,   416,   750,    -1,   750,   482,   380,   416,   750,
     144,   750,    -1,   750,   218,   276,    -1,   750,   219,    -1,
     750,   218,   271,   276,    -1,   750,   271,   276,    -1,   750,
     274,    -1,   771,    -1,   503,   774,   504,    -1,   496,   784,
     497,    -1,   750,    15,   750,    -1,   771,   297,   771,    -1,
     750,   218,   423,    -1,   750,   218,   271,   423,    -1,   750,
     218,   158,    -1,   750,   218,   271,   158,    -1,   750,   218,
     434,    -1,   750,   218,   271,   434,    -1,   750,   218,   131,
     170,   750,    -1,   750,   218,   271,   131,   170,   750,    -1,
     750,   218,   281,   498,   787,   499,    -1,   750,   218,   271,
     281,   498,   787,   499,    -1,   750,    49,   808,   751,    34,
     750,    -1,   750,   482,    49,   808,   751,    34,   750,    -1,
     750,    49,   402,   751,    34,   750,    -1,   750,   482,    49,
     402,   751,    34,   750,    -1,   750,   196,   797,    -1,   750,
     482,   196,   797,    -1,   750,   780,   775,   639,    -1,   750,
     780,   775,   498,   750,   499,    -1,   116,    -1,    36,   496,
     784,   497,    -1,   752,    -1,   751,    11,   720,    -1,   489,
     751,    -1,   490,   751,    -1,   751,   489,   751,    -1,   751,
     490,   751,    -1,   751,   491,   751,    -1,   751,   492,   751,
      -1,   751,   493,   751,    -1,   751,   494,   751,    -1,   751,
      16,   751,    -1,   751,   485,   751,    -1,   751,   486,   751,
      -1,   751,   487,   751,    -1,   751,    17,   751,    -1,   751,
      18,   751,    -1,   751,    19,   751,    -1,   751,   778,   751,
      -1,   778,   751,    -1,   751,   778,    -1,   751,   218,   131,
     170,   751,    -1,   751,   218,   271,   131,   170,   751,    -1,
     751,   218,   281,   498,   787,   499,    -1,   751,   218,   271,
     281,   498,   787,   499,    -1,   803,    -1,   826,    -1,   505,
       9,    -1,   506,   807,    -1,    10,   807,    -1,   498,   750,
     499,   807,    -1,   798,    -1,   754,   807,    -1,   639,    -1,
     639,   806,    -1,   151,   639,    -1,   684,   498,   783,   499,
      -1,   825,   498,   499,    -1,   825,   498,   785,   653,   652,
     499,    -1,   825,   498,   448,   786,   653,   652,   499,    -1,
     825,   498,   785,   502,   448,   786,   653,   652,   499,    -1,
     825,   498,    28,   785,   653,   652,   499,    -1,   825,   498,
     131,   785,   653,   652,   499,    -1,   825,   498,   491,   499,
      -1,   753,   757,   758,   759,   763,    -1,   756,    -1,   753,
      -1,   756,    -1,    75,   165,   498,   750,   499,    -1,   100,
      -1,   103,    -1,   103,   498,   827,   499,    -1,   104,    -1,
     104,   498,   827,   499,    -1,   238,    -1,   238,   498,   827,
     499,    -1,   239,    -1,   239,   498,   827,   499,    -1,   101,
      -1,   105,    -1,   374,    -1,   439,    -1,    99,    -1,   102,
      -1,    62,   498,   750,    37,   720,   499,    -1,   426,   498,
     750,    37,   720,   499,    -1,   157,   498,   788,   499,    -1,
     298,   498,   790,   499,    -1,   312,   498,   792,   499,    -1,
     400,   498,   793,   499,    -1,   420,   498,   750,    37,   720,
     499,    -1,   422,   498,    54,   796,   499,    -1,   422,   498,
     229,   796,   499,    -1,   422,   498,   417,   796,   499,    -1,
     422,   498,   796,   499,    -1,   277,   498,   750,   502,   750,
     499,    -1,    73,   498,   783,   499,    -1,   461,   179,   498,
     654,   499,    -1,    -1,   161,   498,   457,   750,   499,    -1,
      -1,   154,    -1,    -1,   459,   761,    -1,    -1,   762,    -1,
     761,   502,   762,    -1,   829,    37,   764,    -1,   296,   764,
      -1,   296,   829,    -1,    -1,   498,   765,   766,   653,   767,
     499,    -1,   829,    -1,    -1,   305,    55,   782,    -1,    -1,
     328,   768,    -1,   357,   768,    -1,    -1,   769,    -1,    49,
     769,    34,   769,    -1,   429,   314,    -1,   429,   164,    -1,
      98,   356,    -1,   750,   314,    -1,   750,   164,    -1,   356,
     498,   783,   499,    -1,   356,   498,   499,    -1,   770,    -1,
     498,   782,   502,   750,   499,    -1,   830,   507,   750,    -1,
     772,    -1,   773,   502,   772,    -1,   773,    -1,   773,   502,
      -1,    35,    -1,   385,    -1,    28,    -1,     8,    -1,   777,
      -1,   489,    -1,   490,    -1,   491,    -1,   492,    -1,   493,
      -1,   494,    -1,    16,    -1,   485,    -1,   486,    -1,   487,
      -1,    17,    -1,    18,    -1,    19,    -1,     8,    -1,   288,
     498,   781,   499,    -1,   776,    -1,   288,   498,   781,   499,
      -1,   776,    -1,   288,   498,   781,   499,    -1,   233,    -1,
     482,   233,    -1,   175,    -1,   482,   175,    -1,   191,    -1,
     482,   191,    -1,   776,    -1,   829,   500,   781,    -1,   750,
      -1,   782,   502,   750,    -1,   782,    -1,   782,   502,    -1,
     783,    -1,    -1,   786,    -1,   785,   502,   786,    -1,   750,
      -1,   837,    13,   750,    -1,   837,    14,   750,    -1,   720,
      -1,   787,   502,   720,    -1,   789,   170,   750,    -1,    -1,
       3,    -1,   741,    -1,   742,    -1,   743,    -1,   744,    -1,
     745,    -1,   746,    -1,   747,    -1,   748,    -1,   828,    -1,
     750,   791,   794,   795,    -1,   750,   791,   794,    -1,   309,
     750,    -1,   751,   196,   751,    -1,    -1,   750,   794,   795,
      -1,   750,   795,   794,    -1,   750,   794,    -1,   750,   795,
      -1,   782,    -1,    -1,   170,   750,    -1,   165,   750,    -1,
     750,   170,   783,    -1,   170,   783,    -1,   783,    -1,   639,
      -1,   498,   783,   499,    -1,    61,   802,   799,   801,   142,
      -1,   800,    -1,   799,   800,    -1,   456,   750,   413,   750,
      -1,   138,   750,    -1,    -1,   750,    -1,    -1,   829,    -1,
     829,   806,    -1,   500,   824,    -1,   496,   750,   497,    -1,
     496,   805,   507,   805,   497,    -1,   750,    -1,    -1,   804,
      -1,   806,   804,    -1,    -1,   807,   804,    -1,    41,    -1,
      -1,   811,    -1,    -1,   812,    -1,   810,   502,   812,    -1,
     810,    -1,   810,   502,    -1,   750,    37,   839,    -1,   750,
       3,    -1,   750,    -1,   491,   814,   818,    -1,   829,   500,
     491,   814,   818,    -1,   147,   498,   822,   499,    -1,   147,
     829,    -1,   813,    -1,    -1,   750,    37,   829,    -1,   815,
      -1,   816,   502,   815,    -1,   816,    -1,   816,   502,    -1,
     343,   498,   817,   499,    -1,   343,   815,    -1,    -1,   820,
      -1,   819,   502,   820,    -1,   830,    -1,   829,   806,    -1,
     823,    -1,   821,   502,   823,    -1,   821,    -1,   821,   502,
      -1,   829,    -1,   838,    -1,   832,    -1,   829,   806,    -1,
     827,    -1,     4,    -1,   828,   807,    -1,     6,    -1,     7,
      -1,   825,   828,    -1,   825,   498,   785,   653,   652,   499,
     828,    -1,   723,   828,    -1,   739,   498,   750,   499,   749,
      -1,   739,   827,   749,    -1,   739,   828,   749,    -1,   423,
      -1,   158,    -1,   276,    -1,     9,    -1,     5,    -1,     3,
      -1,   898,    -1,   899,    -1,   829,    -1,     5,    -1,     3,
      -1,   898,    -1,   903,    -1,     3,    -1,   898,    -1,   900,
      -1,     3,    -1,   898,    -1,   901,    -1,   829,    -1,   829,
     835,    -1,   500,   824,    -1,   835,   500,   824,    -1,   498,
     821,   499,    -1,    -1,   831,    -1,     3,    -1,   902,    -1,
     898,    -1,   904,    -1,   838,    -1,     5,    -1,   316,   823,
     841,    37,   842,    -1,   498,   787,   499,    -1,    -1,   638,
      -1,   529,    -1,   620,    -1,   881,    -1,    94,   361,   829,
     844,    -1,    94,   361,   189,   271,   151,   829,   844,    -1,
     844,   845,    -1,    -1,   562,    -1,   846,    -1,   549,    -1,
     893,    -1,    94,   852,   199,   849,   850,   286,   820,   848,
     498,   546,   499,   851,   713,    -1,    94,   852,   199,   849,
     189,   271,   151,   591,   286,   820,   848,   498,   546,   499,
     851,   713,    -1,   829,    -1,   440,   847,    -1,    -1,    83,
      -1,    -1,   591,    -1,    -1,   460,   577,    -1,    -1,   433,
      -1,    -1,    30,   405,   707,   375,   361,   823,    -1,    30,
     405,   189,   151,   707,   375,   361,   823,    -1,    30,   369,
     820,   375,   361,   823,    -1,    30,   369,   189,   151,   820,
     375,   361,   823,    -1,    30,   452,   820,   375,   361,   823,
      -1,    30,   452,   189,   151,   820,   375,   361,   823,    -1,
     166,    69,    -1,    69,    -1,   153,   109,   828,   628,    -1,
     195,   109,   828,    -1,   152,   860,    -1,   152,   864,   858,
     860,    -1,   152,   450,   860,    -1,   152,   498,   863,   499,
     860,    -1,   450,    -1,    -1,   865,    -1,   556,    -1,    -1,
     638,    -1,   529,    -1,   620,    -1,   881,    -1,   895,    -1,
       3,    -1,   898,    -1,   902,    -1,   861,    -1,   828,    -1,
     866,    -1,   863,   502,   866,    -1,    33,    -1,    32,    -1,
     423,    -1,   158,    -1,   286,    -1,   862,    -1,   867,   859,
      -1,   861,    -1,   864,    -1,   375,   869,    -1,   375,   237,
     869,    -1,   375,   373,   869,    -1,   375,   176,   869,    -1,
     870,    -1,   891,   170,    98,    -1,   414,   481,   872,    -1,
     361,   828,    -1,   891,   416,   873,    -1,   891,   487,   873,
      -1,   891,   416,   116,    -1,   891,   487,   116,    -1,   865,
      -1,   556,    -1,   828,    -1,     3,    -1,   739,   828,   749,
      -1,   739,   498,   827,   499,   828,    -1,   556,    -1,   116,
      -1,   237,    -1,   871,    -1,   873,   502,   871,    -1,   236,
     875,    -1,   210,   875,    -1,   166,   210,   875,    -1,   828,
      -1,   829,    -1,   441,   878,   880,   858,    -1,   441,   878,
     880,   858,   820,    -1,   441,   878,   880,   858,   885,    -1,
     441,   498,   879,   499,    -1,   441,   498,   879,   499,   820,
     836,    -1,   864,    -1,   450,    -1,   169,    -1,   171,    -1,
       3,    -1,   171,    -1,    -1,   877,    -1,   879,   502,   877,
      -1,   169,    -1,    -1,   533,   121,   170,   882,   884,   883,
     538,    -1,   707,    -1,   707,   829,    -1,   707,    37,   829,
      -1,   457,   750,    -1,    -1,   440,   698,    -1,    -1,   864,
     858,    -1,   864,   858,   820,   836,    -1,   345,   888,    -1,
     891,    -1,    28,    -1,   887,    -1,   414,   481,    -1,   418,
     220,   232,    -1,   890,   638,    -1,   401,   638,    -1,   401,
     891,    -1,   890,   891,    -1,   890,   414,   481,    -1,   890,
     418,   220,   232,    -1,   890,    28,    -1,   890,    -1,   379,
      -1,   126,    -1,   829,    -1,   891,   500,   829,    -1,    57,
     753,    -1,    94,   608,   452,   820,   597,   851,    37,   638,
     894,    -1,    94,   291,   343,   608,   452,   820,   597,   851,
      37,   638,   894,    -1,    94,   608,   333,   452,   820,   498,
     601,   499,   851,    37,   638,   894,    -1,    94,   291,   343,
     608,   333,   452,   820,   498,   601,   499,   851,    37,   638,
     894,    -1,   460,    68,   289,    -1,   460,    60,    68,   289,
      -1,   460,   237,    68,   289,    -1,    -1,    94,   608,   405,
     897,    37,   638,   896,    -1,    94,   608,   405,   189,   271,
     151,   897,    37,   638,   896,    -1,    94,   291,   343,   608,
     405,   897,    37,   638,   896,    -1,   460,   108,    -1,   460,
     269,   108,    -1,    -1,   820,   597,   584,   576,    -1,    20,
      -1,    21,    -1,    22,    -1,    23,    -1,    24,    -1,    25,
      -1,    26,    -1,    27,    -1,    29,    -1,    30,    -1,    31,
      -1,    39,    -1,    40,    -1,    42,    -1,    43,    -1,    44,
      -1,    46,    -1,    47,    -1,    48,    -1,    55,    -1,    56,
      -1,    57,    -1,    58,    -1,    60,    -1,    63,    -1,    64,
      -1,    67,    -1,    69,    -1,    70,    -1,    71,    -1,    72,
      -1,    77,    -1,    78,    -1,    79,    -1,    80,    -1,    81,
      -1,    82,    -1,    84,    -1,    85,    -1,    86,    -1,    88,
      -1,    89,    -1,    90,    -1,    91,    -1,    92,    -1,    93,
      -1,    96,    -1,    97,    -1,    98,    -1,   106,    -1,   107,
      -1,   108,    -1,   109,    -1,   110,    -1,   111,    -1,   112,
      -1,   115,    -1,   117,    -1,   119,    -1,   120,    -1,   121,
      -1,   122,    -1,   123,    -1,   124,    -1,   126,    -1,   127,
      -1,   128,    -1,   129,    -1,   130,    -1,   133,    -1,   134,
      -1,   135,    -1,   136,    -1,   137,    -1,   139,    -1,   140,
      -1,   141,    -1,   143,    -1,   144,    -1,   145,    -1,   147,
      -1,   148,    -1,   149,    -1,   150,    -1,   152,    -1,   153,
      -1,   154,    -1,   155,    -1,   156,    -1,   159,    -1,   161,
      -1,   162,    -1,   164,    -1,   166,    -1,   168,    -1,   172,
      -1,   173,    -1,   176,    -1,   178,    -1,   182,    -1,   184,
      -1,   185,    -1,   186,    -1,   187,    -1,   188,    -1,   189,
      -1,   190,    -1,   192,    -1,   193,    -1,   194,    -1,   195,
      -1,   197,    -1,   198,    -1,   199,    -1,   200,    -1,   201,
      -1,   202,    -1,   204,    -1,   207,    -1,   208,    -1,   209,
      -1,   210,    -1,   211,    -1,   217,    -1,   220,    -1,   222,
      -1,   223,    -1,   224,    -1,   225,    -1,   226,    -1,   227,
      -1,   230,    -1,   232,    -1,   235,    -1,   236,    -1,   237,
      -1,   240,    -1,   241,    -1,   242,    -1,   243,    -1,   244,
      -1,   246,    -1,   247,    -1,   248,    -1,   249,    -1,   250,
      -1,   251,    -1,   252,    -1,   253,    -1,   254,    -1,   255,
      -1,   256,    -1,   257,    -1,   258,    -1,   259,    -1,   260,
      -1,   261,    -1,   262,    -1,   263,    -1,   267,    -1,   268,
      -1,   269,    -1,   272,    -1,   273,    -1,   275,    -1,   278,
      -1,   280,    -1,   281,    -1,   282,    -1,   284,    -1,   285,
      -1,   288,    -1,   289,    -1,   290,    -1,   293,    -1,   296,
      -1,   299,    -1,   300,    -1,   301,    -1,   302,    -1,   303,
      -1,   304,    -1,   305,    -1,   306,    -1,   307,    -1,   308,
      -1,   310,    -1,   311,    -1,   313,    -1,   314,    -1,   316,
      -1,   317,    -1,   318,    -1,   320,    -1,   321,    -1,   322,
      -1,   323,    -1,   324,    -1,   325,    -1,   327,    -1,   328,
      -1,   329,    -1,   331,    -1,   332,    -1,   333,    -1,   334,
      -1,   336,    -1,   337,    -1,   338,    -1,   339,    -1,   340,
      -1,   341,    -1,   342,    -1,   343,    -1,   344,    -1,   345,
      -1,   346,    -1,   347,    -1,   350,    -1,   351,    -1,   353,
      -1,   354,    -1,   355,    -1,   357,    -1,   358,    -1,   359,
      -1,   360,    -1,   361,    -1,   362,    -1,   363,    -1,   364,
      -1,   365,    -1,   366,    -1,   367,    -1,   369,    -1,   370,
      -1,   371,    -1,   372,    -1,   373,    -1,   375,    -1,   377,
      -1,   378,    -1,   379,    -1,   381,    -1,   382,    -1,   384,
      -1,   386,    -1,   387,    -1,   388,    -1,   389,    -1,   390,
      -1,   391,    -1,   392,    -1,   393,    -1,   394,    -1,   395,
      -1,   396,    -1,   397,    -1,   399,    -1,   401,    -1,   403,
      -1,   404,    -1,   406,    -1,   408,    -1,   409,    -1,   410,
      -1,   411,    -1,   412,    -1,   418,    -1,   419,    -1,   421,
      -1,   424,    -1,   425,    -1,   427,    -1,   428,    -1,   429,
      -1,   430,    -1,   431,    -1,   434,    -1,   435,    -1,   436,
      -1,   437,    -1,   438,    -1,   441,    -1,   442,    -1,   443,
      -1,   444,    -1,   445,    -1,   449,    -1,   451,    -1,   452,
      -1,   453,    -1,   454,    -1,   455,    -1,   458,    -1,   461,
      -1,   462,    -1,   463,    -1,   464,    -1,   465,    -1,   466,
      -1,   478,    -1,   479,    -1,   480,    -1,   481,    -1,    49,
      -1,    50,    -1,    52,    -1,    53,    -1,    65,    -1,    66,
      -1,    73,    -1,   113,    -1,   114,    -1,   151,    -1,   157,
      -1,   163,    -1,   174,    -1,   180,    -1,   181,    -1,   206,
      -1,   212,    -1,   213,    -1,   215,    -1,   245,    -1,   264,
      -1,   266,    -1,   270,    -1,   277,    -1,   279,    -1,   294,
      -1,   298,    -1,   312,    -1,   315,    -1,   330,    -1,   356,
      -1,   376,    -1,   383,    -1,   398,    -1,   400,    -1,   414,
      -1,   415,    -1,   420,    -1,   422,    -1,   426,    -1,   446,
      -1,   447,    -1,   467,    -1,   468,    -1,   469,    -1,   470,
      -1,   471,    -1,   472,    -1,   473,    -1,   474,    -1,   475,
      -1,   476,    -1,   477,    -1,    45,    -1,    51,    -1,    75,
      -1,    83,    -1,    95,    -1,   102,    -1,   169,    -1,   171,
      -1,   174,    -1,   175,    -1,   191,    -1,   205,    -1,   218,
      -1,   219,    -1,   221,    -1,   231,    -1,   233,    -1,   245,
      -1,   265,    -1,   274,    -1,   295,    -1,   297,    -1,   352,
      -1,   380,    -1,   398,    -1,   407,    -1,   450,    -1,    45,
      -1,    51,    -1,    75,    -1,    83,    -1,    95,    -1,   102,
      -1,   169,    -1,   171,    -1,   175,    -1,   191,    -1,   205,
      -1,   218,    -1,   219,    -1,   221,    -1,   231,    -1,   233,
      -1,   265,    -1,   274,    -1,   295,    -1,   297,    -1,   352,
      -1,   380,    -1,   407,    -1,   426,    -1,   450,    -1,    49,
      -1,    50,    -1,    52,    -1,    53,    -1,    66,    -1,    65,
      -1,    73,    -1,   113,    -1,   114,    -1,   151,    -1,   157,
      -1,   163,    -1,   174,    -1,   180,    -1,   181,    -1,   206,
      -1,   213,    -1,   215,    -1,   212,    -1,   245,    -1,   264,
      -1,   266,    -1,   270,    -1,   277,    -1,   279,    -1,   294,
      -1,   298,    -1,   312,    -1,   315,    -1,   330,    -1,   356,
      -1,   376,    -1,   383,    -1,   398,    -1,   400,    -1,   414,
      -1,   415,    -1,   420,    -1,   422,    -1,   426,    -1,   446,
      -1,   447,    -1,   467,    -1,   468,    -1,   469,    -1,   470,
      -1,   471,    -1,   472,    -1,   473,    -1,   474,    -1,   475,
      -1,   476,    -1,   477,    -1,    45,    -1,    51,    -1,    75,
      -1,    83,    -1,    95,    -1,   102,    -1,   169,    -1,   171,
      -1,   174,    -1,   175,    -1,   191,    -1,   205,    -1,   218,
      -1,   219,    -1,   221,    -1,   231,    -1,   233,    -1,   245,
      -1,   265,    -1,   274,    -1,   295,    -1,   297,    -1,   352,
      -1,   380,    -1,   398,    -1,   407,    -1,   426,    -1,   450,
      -1,    28,    -1,    32,    -1,    33,    -1,    34,    -1,    35,
      -1,    36,    -1,    37,    -1,    38,    -1,    41,    -1,    54,
      -1,    59,    -1,    61,    -1,    62,    -1,    68,    -1,    74,
      -1,    76,    -1,    87,    -1,    94,    -1,    99,    -1,   100,
      -1,   101,    -1,   103,    -1,   104,    -1,   105,    -1,   116,
      -1,   118,    -1,   125,    -1,   131,    -1,   132,    -1,   138,
      -1,   142,    -1,   146,    -1,   158,    -1,   160,    -1,   165,
      -1,   167,    -1,   170,    -1,   177,    -1,   179,    -1,   183,
      -1,   196,    -1,   203,    -1,   214,    -1,   216,    -1,   228,
      -1,   229,    -1,   234,    -1,   238,    -1,   239,    -1,   271,
      -1,   276,    -1,   283,    -1,   286,    -1,   287,    -1,   291,
      -1,   292,    -1,   309,    -1,   319,    -1,   326,    -1,   335,
      -1,   348,    -1,   349,    -1,   368,    -1,   374,    -1,   385,
      -1,   402,    -1,   405,    -1,   413,    -1,   416,    -1,   417,
      -1,   423,    -1,   432,    -1,   433,    -1,   439,    -1,   440,
      -1,   448,    -1,   456,    -1,   457,    -1,   459,    -1,   460,
      -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   467,   467,   483,   495,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   539,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   319,   328,   336,   351,
     359,   369,   379,   386,   393,   401,   408,   419,   420,   425,
     429,   434,   439,   447,   448,   453,   457,   458,   459,     7,
      13,    19,    25,     7,    17,    18,    21,    23,     6,    15,
      25,    35,    45,    55,    65,    75,    85,    95,   106,   117,
     127,   140,   141,     8,    21,    27,    34,    40,    47,    57,
      61,    70,    79,    88,    95,    96,   101,   113,   118,   143,
     153,   163,   169,   180,   191,   206,   207,   213,   214,   219,
     220,   226,   227,   231,   232,   237,   239,   245,   246,   250,
     251,   254,   255,   260,     7,    14,    22,     9,    19,    32,
      33,     7,    14,    31,    51,    52,     9,    17,    29,    30,
      34,    35,    36,    41,    42,    43,    48,    52,    56,    60,
      64,    68,    72,    76,    80,    84,    88,    92,    97,   101,
     105,   112,   113,   117,   118,   119,     2,     9,    15,    21,
      28,    35,    45,    46,    47,     7,    21,    36,    56,    57,
      84,    85,    86,    87,    88,    89,    93,    94,    99,   104,
     105,   106,   107,   108,   113,   120,   121,   122,   139,   146,
     153,   163,   173,   185,   193,   202,   220,   229,   252,   266,
     273,   278,   280,   282,   284,   287,   290,   291,   292,   293,
     298,   302,   303,   308,   315,   320,   321,   322,   323,   324,
     325,   326,   327,   333,   334,   338,   343,   350,   357,   364,
     376,   377,   378,   379,   383,   388,   389,   390,   395,   400,
     401,   402,   403,   404,   405,   410,   429,   457,   458,   462,
     466,   467,   468,   472,   476,   484,   485,   490,   491,   492,
     496,   504,   505,   510,   511,   515,   520,   524,   528,   533,
     541,   542,   546,   547,   551,   552,   558,   569,   582,   596,
     610,   624,   638,   661,   665,   672,   676,   684,   689,   696,
     706,   707,   708,   709,   710,   717,   724,   725,   730,   731,
       9,    19,    29,    39,    49,    59,    69,    79,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   113,   114,   115,   116,   117,   118,
     119,   124,   125,   130,   131,   132,   137,   138,   139,   142,
     143,     8,    20,    36,    37,    41,    45,     7,     1,    30,
      53,    54,    59,    63,    68,    72,    80,    81,    85,    86,
      91,    92,    96,    97,   102,   103,   104,   105,   106,   111,
     119,   123,   128,   129,   134,   138,   143,   147,   151,   155,
     159,   163,   167,   171,   175,   179,   183,   187,   191,   195,
     203,   209,   210,   211,   216,   220,    47,    48,    52,    53,
      68,    69,    76,    84,    92,   100,   108,   116,   127,   128,
     155,   171,   188,   189,   208,   212,   216,   233,   240,   247,
     257,   258,   261,   273,   284,   292,   297,   302,   307,   312,
     320,   328,   333,   338,   345,   346,   350,   351,   352,   359,
     360,   364,   365,   369,   370,   371,   375,   376,   380,   381,
     391,   404,   405,   408,   417,   428,   429,   430,   433,   434,
     435,   439,   440,   441,   442,   446,   447,   451,   453,   469,
     471,   476,   479,   487,   491,   495,   499,   503,   507,   514,
     519,   526,   527,   531,   535,   539,   543,   550,   557,   558,
     563,   564,   568,   569,   574,   576,   578,   583,   603,   604,
     606,   611,   612,   616,   617,   620,   621,   646,   647,   652,
     657,   661,   662,   666,   667,   671,   672,   673,   674,   675,
     679,   692,   699,   706,   713,   714,   718,   719,   723,   724,
     728,   729,   733,   734,   738,   739,   743,   754,   755,   756,
     757,   761,   762,   767,   768,   769,   778,   784,   793,   794,
     807,   808,   812,   813,   817,   818,   824,   830,   838,   846,
     855,   864,   868,   894,   898,   911,   925,   940,   952,   968,
     974,   979,   985,   992,   993,  1001,  1005,  1009,  1015,  1022,
    1027,  1028,  1029,  1030,  1034,  1035,  1047,  1048,  1053,  1060,
    1067,  1074,  1106,  1117,  1130,  1135,  1136,  1139,  1140,  1143,
    1144,  1149,  1150,  1155,  1159,  1165,  1186,  1194,  1207,  1210,
    1214,  1214,  1217,  1218,  1220,  1225,  1232,  1237,  1243,  1248,
    1254,  1260,  1269,  1271,  1274,  1278,  1279,  1280,  1281,  1282,
    1283,  1288,  1308,  1309,  1310,  1311,  1322,  1336,  1337,  1343,
    1348,  1353,  1358,  1363,  1368,  1373,  1378,  1384,  1390,  1396,
    1403,  1425,  1434,  1438,  1446,  1450,  1458,  1470,  1491,  1495,
    1501,  1505,  1518,  1526,  1536,  1538,  1540,  1542,  1544,  1546,
    1551,  1552,  1559,  1568,  1576,  1585,  1596,  1604,  1605,  1606,
    1610,  1610,  1613,  1613,  1616,  1616,  1619,  1619,  1622,  1622,
    1625,  1625,  1628,  1628,  1631,  1631,  1634,  1636,  1638,  1640,
    1642,  1644,  1646,  1648,  1650,  1655,  1660,  1666,  1673,  1678,
    1684,  1690,  1721,  1723,  1725,  1733,  1748,  1750,  1752,  1754,
    1756,  1758,  1760,  1762,  1764,  1766,  1768,  1770,  1772,  1774,
    1776,  1779,  1781,  1783,  1786,  1788,  1790,  1792,  1795,  1800,
    1805,  1812,  1817,  1824,  1829,  1836,  1841,  1849,  1857,  1865,
    1873,  1891,  1899,  1907,  1915,  1923,  1931,  1935,  1939,  1943,
    1951,  1967,  1975,  1983,  1991,  1999,  2007,  2015,  2019,  2023,
    2027,  2031,  2039,  2047,  2055,  2063,  2083,  2105,  2116,  2123,
    2137,  2153,  2155,  2157,  2159,  2161,  2163,  2165,  2167,  2169,
    2171,  2173,  2175,  2177,  2179,  2181,  2183,  2185,  2187,  2189,
    2191,  2193,  2197,  2201,  2205,  2219,  2220,  2221,  2228,  2240,
    2255,  2267,  2269,  2281,  2292,  2316,  2327,  2336,  2340,  2347,
    2355,  2363,  2374,  2382,  2410,  2446,  2457,  2458,  2465,  2471,
    2475,  2479,  2483,  2487,  2491,  2495,  2499,  2503,  2507,  2511,
    2515,  2519,  2523,  2527,  2531,  2533,  2535,  2539,  2548,  2553,
    2560,  2575,  2582,  2586,  2590,  2594,  2598,  2612,  2613,  2617,
    2618,  2622,  2623,  2630,  2631,  2635,  2636,  2641,  2649,  2651,
    2665,  2668,  2695,  2696,  2699,  2700,  2711,  2717,  2724,  2733,
    2750,  2795,  2803,  2811,  2819,  2827,  2848,  2849,  2852,  2853,
    2857,  2867,  2868,  2872,  2873,  2877,  2878,  2879,  2882,  2883,
    2886,  2887,  2888,  2889,  2890,  2891,  2892,  2893,  2894,  2895,
    2896,  2897,  2898,  2901,  2903,  2908,  2910,  2915,  2917,  2919,
    2921,  2923,  2925,  2927,  2929,  2943,  2945,  2949,  2953,  2960,
    2965,  2972,  2977,  2985,  2989,  2995,  2999,  3008,  3019,  3020,
    3024,  3028,  3035,  3036,  3037,  3038,  3039,  3040,  3041,  3042,
    3043,  3044,  3054,  3058,  3065,  3072,  3073,  3089,  3093,  3098,
    3102,  3117,  3122,  3126,  3129,  3132,  3133,  3134,  3137,  3144,
    3154,  3168,  3169,  3173,  3184,  3185,  3188,  3189,  3192,  3196,
    3203,  3207,  3215,  3226,  3227,  3231,  3232,  3236,  3237,  3240,
    3241,  3251,  3252,  3256,  3257,  3261,  3262,  3265,  3281,  3289,
    3297,  3312,  3330,  3331,  3334,  3335,  3338,  3342,  3343,  3347,
    3348,  3351,  3352,  3353,  3363,  3364,  3375,  3379,  3406,  3408,
    3414,  3415,  3418,  3420,  3430,  3433,  3444,  3448,  3452,  3464,
    3468,  3477,  3484,  3522,  3526,  3530,  3534,  3538,  3542,  3546,
    3552,  3553,  3569,  3570,  3571,  3574,  3575,  3581,  3582,  3583,
    3586,  3587,  3588,  3591,  3592,  3593,  3596,  3597,  3600,  3602,
    3607,  3608,  3611,  3619,  3620,  3621,  3622,  3625,  3626,     7,
      18,    19,    23,    24,    25,    26,     7,    16,    34,    41,
      46,    47,    48,    49,     8,    33,    62,    66,    67,    72,
      73,    78,    79,    83,    84,    89,    90,     7,    16,    25,
      34,    43,    52,     5,    11,     7,    20,     9,    16,    26,
      33,    44,    45,    50,    51,    52,    57,    58,    59,    60,
      61,    65,    66,    67,    72,    73,    78,    82,    90,    91,
      96,    97,    98,   104,   109,   117,   118,    10,    16,    22,
      28,    38,    39,    47,    58,    70,    78,    86,    93,   103,
     105,   111,   115,   119,   134,   141,   142,   143,   147,   148,
       7,    14,    20,    28,    29,     8,    22,    36,    48,    56,
      70,    71,    72,    73,    74,    87,    88,    93,    94,    98,
      99,     7,    21,    25,    32,    43,    44,    50,    51,     9,
      19,     2,     7,    14,    24,    25,    32,     3,    10,    17,
      24,    31,    38,    45,    52,    61,    61,    63,    64,     6,
       8,    21,    34,    52,    74,    75,    76,    77,    11,    24,
      37,    54,    55,    56,    61,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "POWER_OF", "LESS_EQUALS",
  "GREATER_EQUALS", "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS",
  "ACTION", "ADD_P", "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER",
  "ALWAYS", "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P",
  "ASSERTION", "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE",
  "AUTHORIZATION", "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT",
  "BINARY", "BIT", "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED",
  "CASCADE", "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P",
  "CHARACTER", "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS",
  "CLOSE", "CLUSTER", "COALESCE", "COLLATE", "COLLATION", "COLUMN",
  "COLUMNS", "COMMENT", "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION",
  "CONCURRENTLY", "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT",
  "CONSTRAINTS", "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST",
  "CREATE_P", "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG",
  "CURRENT_DATE", "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME",
  "CURRENT_TIMESTAMP", "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P",
  "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P",
  "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER",
  "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE",
  "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT", "DO",
  "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P",
  "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT",
  "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN",
  "EXPORT_P", "EXPORT_STATE", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "GROUPING_ID", "HANDLER", "HAVING",
  "HEADER_P", "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P",
  "IGNORE_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P",
  "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT",
  "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P",
  "INSENSITIVE", "INSERT", "INSTALL", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "JSON", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P",
  "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT",
  "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION",
  "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P", "MICROSECONDS_P",
  "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE",
  "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL",
  "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING",
  "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC",
  "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY",
  "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P",
  "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER",
  "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD",
  "PERCENT", "PLACING", "PLANS", "POLICY", "POSITION", "PRAGMA_P",
  "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE", "PRIMARY",
  "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUALIFY", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN",
  "RECHECK", "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH",
  "REINDEX", "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE",
  "REPLICA", "RESET", "RESPECT_P", "RESTART", "RESTRICT", "RETURNING",
  "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW",
  "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL",
  "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE",
  "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET",
  "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP",
  "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P",
  "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE",
  "STORED", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
  "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
  "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VIRTUAL", "VOLATILE", "WHEN",
  "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK",
  "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT",
  "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE",
  "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'{'", "'}'", "'#'", "'?'",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "CreateEnumStmt", "opt_enum_val_list", "enum_val_list",
  "RenameStmt", "opt_column", "InsertStmt", "insert_rest", "insert_target",
  "opt_conf_expr", "opt_with_clause", "insert_column_item", "set_clause",
  "opt_on_conflict", "index_elem", "returning_clause", "override_kind",
  "set_target_list", "opt_collate", "opt_class", "insert_column_list",
  "set_clause_list", "set_clause_list_opt_comma", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "GeneratedColumnType", "opt_GeneratedColumnType",
  "GeneratedConstraintElem", "generic_option_elem", "key_update",
  "key_actions", "OnCommitOption", "reloptions", "opt_no_inherit",
  "TableConstraint", "TableLikeOption", "reloption_list", "ExistingIndex",
  "ConstraintAttr", "OptWith", "definition", "TableLikeOptionList",
  "generic_option_name", "ConstraintAttributeElem", "columnDef",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "columnList_opt_comma",
  "func_type", "ConstraintElem", "TableElementList", "key_match",
  "TableLikeClause", "OptTemp", "generated_when", "DropStmt",
  "drop_type_any_name", "drop_type_name", "any_name_list",
  "opt_drop_behavior", "drop_type_name_on_any_name", "type_name_list",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_list_opt_comma", "group_by_item",
  "empty_grouping_set", "rollup_clause", "cube_clause",
  "grouping_sets_clause", "grouping_or_grouping_id", "having_clause",
  "qualify_clause", "for_locking_clause", "opt_for_locking_clause",
  "for_locking_items", "for_locking_item", "for_locking_strength",
  "locked_rels_list", "opt_nowait_or_skip", "values_clause",
  "values_clause_opt_comma", "from_clause", "from_list",
  "from_list_opt_comma", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "opt_Typename", "Typename",
  "opt_array_bounds", "SimpleTypename", "ConstTypename", "GenericType",
  "opt_type_modifiers", "Numeric", "opt_float", "Bit", "ConstBit",
  "BitWithLength", "BitWithoutLength", "Character", "ConstCharacter",
  "CharacterWithLength", "CharacterWithoutLength", "character",
  "opt_varying", "ConstDatetime", "ConstInterval", "opt_timezone",
  "year_keyword", "month_keyword", "day_keyword", "hour_keyword",
  "minute_keyword", "second_keyword", "millisecond_keyword",
  "microsecond_keyword", "opt_interval", "a_expr", "b_expr", "c_expr",
  "func_application", "func_expr", "func_expr_windowless",
  "func_expr_common_subexpr", "within_group_clause", "filter_clause",
  "export_clause", "window_clause", "window_definition_list",
  "window_definition", "over_clause", "window_specification",
  "opt_existing_window_name", "opt_partition_clause", "opt_frame_clause",
  "frame_extent", "frame_bound", "qualified_row", "row", "dict_arg",
  "dict_arguments", "dict_arguments_opt_comma", "sub_type", "all_Op",
  "MathOp", "qual_Op", "qual_all_Op", "subquery_Op", "any_operator",
  "expr_list", "expr_list_opt_comma", "opt_expr_list_opt_comma",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric",
  "opt_target_list_opt_comma", "target_list", "target_list_opt_comma",
  "target_el", "except_list", "opt_except_list", "replace_list_el",
  "replace_list", "replace_list_opt_comma", "opt_replace_list",
  "qualified_name_list", "qualified_name", "name_list",
  "name_list_opt_comma", "name", "attr_name", "func_name", "AexprConst",
  "Iconst", "Sconst", "ColId", "ColIdOrString", "type_function_name",
  "function_name_token", "type_name_token", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,    60,    62,    61,   740,    43,
      45,    42,    47,    37,    94,   741,    91,    93,    40,    41,
      46,    59,    44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   508,   509,   510,   510,   511,   511,   511,   511,   511,
     511,   511,   511,   511,   511,   511,   511,   511,   511,   511,
     511,   511,   511,   511,   511,   511,   511,   511,   511,   511,
     511,   511,   511,   511,   511,   511,   511,   511,   511,   511,
     512,   512,   512,   512,   512,   512,   512,   512,   513,   513,
     514,   514,   515,   515,   515,   515,   516,   516,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   518,   518,   519,
     519,   519,   519,   520,   520,   521,   522,   522,   522,   523,
     523,   523,   523,   524,   525,   525,   526,   526,   527,   527,
     527,   527,   527,   527,   527,   527,   527,   527,   527,   527,
     527,   528,   528,   529,   530,   530,   530,   530,   530,   531,
     531,   532,   532,   532,   533,   533,   534,   535,   535,   536,
     536,   536,   537,   537,   537,   538,   538,   539,   539,   540,
     540,   541,   541,   542,   542,   543,   543,   544,   544,   545,
     545,   546,   546,   547,   548,   548,   548,   549,   549,   550,
     550,   551,   551,   551,   552,   552,   553,   553,   554,   554,
     555,   555,   555,   556,   556,   556,   556,   557,   557,   557,
     557,   557,   557,   557,   557,   557,   557,   557,   557,   557,
     557,   558,   558,   559,   559,   559,   560,   560,   560,   560,
     560,   560,   561,   561,   561,   562,   562,   562,   563,   563,
     564,   564,   564,   564,   564,   564,   565,   565,   566,   567,
     567,   567,   567,   567,   568,   568,   568,   568,   569,   569,
     569,   569,   569,   569,   569,   569,   570,   570,   571,   571,
     572,   572,   572,   573,   574,   575,   575,   575,   575,   575,
     576,   576,   576,   576,   577,   578,   578,   579,   579,   580,
     580,   580,   580,   580,   580,   580,   580,   581,   581,   582,
     583,   583,   583,   583,   584,   584,   584,   584,   585,   586,
     586,   586,   587,   588,   588,   588,   588,   588,   588,   589,
     589,   590,   590,   591,   592,   592,   592,   593,   593,   594,
     594,   595,   595,   595,   596,   597,   597,   598,   598,   599,
     600,   600,   600,   600,   601,   601,   602,   602,   603,   603,
     603,   604,   604,   604,   604,   604,   604,   605,   605,   606,
     606,   606,   606,   607,   608,   608,   608,   608,   608,   608,
     608,   608,   609,   609,   610,   610,   610,   610,   610,   610,
     610,   610,   611,   611,   611,   611,   611,   611,   611,   611,
     611,   611,   611,   611,   611,   611,   611,   611,   612,   612,
     612,   612,   612,   612,   612,   613,   613,   614,   614,   614,
     615,   615,   615,   616,   616,   617,   617,   618,   618,   619,
     619,   620,   621,   621,   622,   622,   623,   623,   624,   624,
     625,   625,   626,   626,   627,   627,   628,   628,   629,   629,
     629,   629,   629,   630,   631,   631,   632,   632,   633,   633,
     634,   634,   634,   634,   634,   634,   634,   634,   634,   634,
     634,   634,   634,   634,   635,   636,   636,   636,   637,   637,
     638,   638,   639,   639,   640,   640,   640,   640,   640,   640,
     640,   640,   641,   641,   642,   642,   642,   642,   642,   642,
     642,   643,   643,   643,   644,   644,   645,   646,   646,   647,
     647,   647,   647,   647,   647,   647,   647,   647,   648,   648,
     649,   649,   649,   650,   650,   651,   651,   652,   652,   652,
     653,   653,   654,   654,   654,   655,   655,   656,   656,   657,
     657,   657,   658,   658,   658,   659,   659,   659,   659,   660,
     660,   661,   661,   661,   661,   662,   662,   663,   663,   663,
     663,   663,   663,   664,   664,   665,   665,   666,   666,   666,
     666,   667,   668,   668,   669,   669,   670,   670,   670,   670,
     670,   671,   672,   672,   672,   673,   673,   674,   674,   675,
     675,   676,   676,   676,   676,   677,   677,   678,   678,   679,
     679,   679,   679,   679,   680,   681,   682,   683,   684,   684,
     685,   685,   686,   686,   687,   687,   688,   688,   689,   689,
     690,   691,   691,   691,   691,   692,   692,   693,   693,   693,
     694,   694,   695,   695,   696,   696,   697,   697,   698,   698,
     699,   699,   699,   699,   699,   699,   699,   700,   700,   700,
     700,   700,   700,   701,   701,   701,   701,   702,   702,   703,
     703,   703,   703,   703,   704,   704,   704,   704,   705,   705,
     706,   706,   707,   707,   707,   707,   708,   708,   709,   710,
     710,   711,   711,   712,   712,   713,   713,   714,   714,   715,
     716,   716,   717,   717,   718,   718,   719,   719,   720,   720,
     720,   720,   720,   720,   720,   720,   721,   721,   721,   722,
     722,   722,   722,   722,   722,   722,   723,   723,   723,   723,
     724,   725,   725,   726,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,   727,   727,   728,   728,   729,   729,
     730,   731,   732,   732,   733,   733,   734,   735,   736,   736,
     736,   736,   736,   736,   737,   737,   738,   738,   738,   738,
     739,   740,   740,   740,   741,   741,   742,   742,   743,   743,
     744,   744,   745,   745,   746,   746,   747,   747,   748,   748,
     749,   749,   749,   749,   749,   749,   749,   749,   749,   749,
     749,   749,   749,   749,   749,   749,   750,   750,   750,   750,
     750,   750,   750,   750,   750,   750,   750,   750,   750,   750,
     750,   750,   750,   750,   750,   750,   750,   750,   750,   750,
     750,   750,   750,   750,   750,   750,   750,   750,   750,   750,
     750,   750,   750,   750,   750,   750,   750,   750,   750,   750,
     750,   750,   750,   750,   750,   750,   750,   750,   750,   750,
     750,   750,   750,   750,   750,   750,   750,   750,   750,   750,
     750,   750,   750,   750,   750,   751,   751,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   752,
     752,   752,   752,   752,   752,   752,   752,   752,   752,   752,
     752,   753,   753,   753,   753,   753,   753,   753,   754,   754,
     755,   755,   756,   756,   756,   756,   756,   756,   756,   756,
     756,   756,   756,   756,   756,   756,   756,   756,   756,   756,
     756,   756,   756,   756,   756,   756,   756,   756,   756,   756,
     756,   757,   757,   758,   758,   759,   759,   760,   760,   761,
     761,   762,   763,   763,   763,   764,   765,   765,   766,   766,
     767,   767,   767,   768,   768,   769,   769,   769,   769,   769,
     770,   770,   771,   771,   772,   773,   773,   774,   774,   775,
     775,   775,   776,   776,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   778,   778,   779,
     779,   780,   780,   780,   780,   780,   780,   780,   780,   781,
     781,   782,   782,   783,   783,   784,   784,   785,   785,   786,
     786,   786,   787,   787,   788,   788,   789,   789,   789,   789,
     789,   789,   789,   789,   789,   789,   790,   790,   791,   792,
     792,   793,   793,   793,   793,   793,   793,   794,   795,   796,
     796,   796,   797,   797,   798,   799,   799,   800,   801,   801,
     802,   802,   803,   803,   804,   804,   804,   805,   805,   806,
     806,   807,   807,   808,   808,   809,   809,   810,   810,   811,
     811,   812,   812,   812,   812,   812,   813,   813,   814,   814,
     815,   816,   816,   817,   817,   818,   818,   818,   819,   819,
     820,   820,   821,   821,   822,   822,   823,   824,   825,   825,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   827,   828,   829,   829,   829,   830,
     830,   831,   831,   831,   832,   832,   832,   833,   833,   833,
     834,   834,   835,   835,   836,   836,   837,   838,   838,   838,
     838,   839,   839,   840,   841,   841,   842,   842,   842,   842,
     843,   843,   844,   844,   845,   845,   845,   845,   846,   846,
     847,   848,   848,   849,   849,   850,   850,   851,   851,   852,
     852,   853,   853,   853,   853,   853,   853,   854,   854,   855,
     856,   857,   857,   857,   857,   858,   858,   859,   859,   859,
     860,   860,   860,   860,   860,   861,   861,   861,   862,   862,
     863,   863,   864,   864,   865,   865,   865,   865,   866,   867,
     867,   868,   868,   868,   868,   869,   869,   869,   869,   870,
     870,   870,   870,   871,   871,   872,   872,   872,   872,   872,
     872,   872,   873,   873,   874,   874,   874,   875,   875,   876,
     876,   876,   876,   876,   877,   877,   877,   877,   877,   878,
     878,   879,   879,   880,   880,   881,   882,   882,   882,   883,
     883,   884,   884,   885,   885,   886,   887,   887,   888,   888,
     888,   889,   889,   889,   889,   889,   889,   889,   889,   890,
     890,   891,   891,   892,   893,   893,   893,   893,   894,   894,
     894,   894,   895,   895,   895,   896,   896,   896,   897,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   902,
     902,   902,   902,   902,   902,   902,   902,   902,   902,   902,
     902,   902,   902,   902,   902,   902,   902,   902,   902,   902,
     902,   902,   902,   902,   902,   902,   902,   902,   902,   902,
     902,   902,   902,   902,   902,   902,   902,   902,   902,   902,
     902,   902,   902,   902,   902,   902,   902,   902,   902,   902,
     902,   902,   903,   903,   903,   903,   903,   903,   903,   903,
     903,   903,   903,   903,   903,   903,   903,   903,   903,   903,
     903,   903,   903,   903,   903,   903,   903,   903,   903,   903,
     904,   904,   904,   904,   904,   904,   904,   904,   904,   904,
     904,   904,   904,   904,   904,   904,   904,   904,   904,   904,
     904,   904,   904,   904,   904,   904,   904,   904,   904,   904,
     904,   904,   904,   904,   904,   904,   904,   904,   904,   904,
     904,   904,   904,   904,   904,   904,   904,   904,   904,   904,
     904,   904,   904,   904,   904,   904,   904,   904,   904,   904,
     904,   904,   904,   904,   904,   904,   904,   904,   904,   904,
     904,   904,   904,   904,   904,   904,   904,   904,   904,   904
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     9,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     2,
       3,     2,     3,     8,     1,     0,     1,     3,     6,     6,
       8,     6,     8,     6,     8,     6,     8,     8,    10,     8,
      10,     1,     0,     7,     1,     4,     4,     7,     2,     1,
       3,     4,     3,     0,     1,     0,     2,     3,     5,     8,
       5,     0,     5,     5,     7,     2,     0,     1,     1,     1,
       3,     2,     0,     1,     0,     1,     3,     1,     3,     1,
       2,     1,     3,     2,     2,     4,     5,     5,     8,     1,
       0,     3,     9,    12,     3,     0,     4,     6,     1,     2,
       1,     1,     0,     1,     2,     2,     1,     2,     2,     1,
       2,     3,     2,     2,     2,     2,     3,     3,     3,     1,
       3,     1,     0,     1,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     0,     9,    12,    11,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     3,     2,     5,     1,     1,     1,     0,
       5,     7,     5,     2,     3,     1,     1,     2,     2,     0,
       3,     4,     4,     0,     3,     2,     0,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     3,
       1,     2,     2,     2,     2,     2,     2,     0,     3,     3,
       3,     0,     1,     2,     1,     2,     2,     2,     2,     3,
       4,     1,     3,     1,     1,     1,     1,     3,     1,     2,
       0,     1,     2,     0,     1,     3,     0,     2,     0,     3,
       3,     1,     5,     3,     1,     3,     1,     2,     1,     4,
       5,     5,     6,     3,     7,     4,    11,     1,     3,     2,
       2,     2,     0,     3,     1,     1,     2,     2,     2,     2,
       1,     0,     1,     2,     6,     4,     6,     4,     6,     8,
       4,     6,     1,     1,     1,     1,     2,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     1,     3,     8,     7,     1,     1,     2,
       3,     8,    11,     9,     1,     1,     3,     0,     1,     3,
       1,     0,     1,     0,     1,     0,     1,     3,     1,     1,
       1,     3,     0,     2,     2,     0,     2,     0,     1,     0,
       1,     1,     1,     3,     3,     1,     1,     3,     3,     3,
       3,     4,     3,     2,     1,     1,     1,     1,     1,     3,
       1,     1,     3,     3,     1,     2,     4,     4,     2,     3,
       5,     5,     1,     1,    11,    11,     1,     2,     4,     4,
       4,     2,     2,     3,     1,     3,     6,     2,     0,     3,
       3,     4,     4,     4,     4,     3,     2,     1,     1,     0,
       1,     1,     0,     1,     5,     1,     0,     2,     2,     0,
       1,     0,     3,     5,     5,     1,     3,     4,     3,     1,
       1,     0,     2,     2,     0,     2,     2,     1,     1,     1,
       0,     2,     4,     5,     4,     2,     3,     2,     2,     2,
       2,     1,     2,     3,     0,     1,     0,     5,     1,     4,
       6,     2,     1,     0,     4,     0,     1,     1,     2,     2,
       2,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     3,     3,     3,     0,     1,     3,     1,     2,     1,
       1,     1,     1,     1,     2,     4,     4,     5,     1,     1,
       2,     0,     2,     0,     1,     3,     1,     0,     1,     2,
       3,     2,     4,     2,     3,     2,     0,     1,     2,     0,
       4,     5,     1,     2,     2,     0,     1,     3,     1,     2,
       3,     3,     3,     3,     3,     1,     4,     3,     4,     5,
       4,     5,     4,     5,     2,     4,     1,     1,     0,     1,
       4,     5,     4,     0,     2,     2,     2,     1,     1,     0,
       4,     2,     1,     2,     2,     4,     2,     6,     2,     1,
       3,     4,     0,     2,     0,     2,     0,     1,     3,     3,
       2,     0,     2,     4,     1,     1,     1,     0,     2,     3,
       5,     6,     2,     3,     5,     5,     3,     4,     0,     1,
       1,     1,     1,     1,     2,     4,     1,     1,     1,     1,
       2,     3,     0,     1,     1,     1,     1,     1,     2,     2,
       2,     2,     2,     1,     3,     0,     1,     1,     1,     1,
       5,     2,     1,     1,     1,     1,     4,     1,     2,     2,
       1,     3,     3,     2,     1,     0,     5,     2,     5,     2,
       1,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     3,
       3,     3,     3,     3,     3,     0,     1,     3,     3,     5,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     2,     3,     3,
       2,     2,     3,     3,     5,     4,     6,     3,     5,     4,
       6,     4,     6,     5,     7,     3,     2,     4,     3,     2,
       1,     3,     3,     3,     3,     3,     4,     3,     4,     3,
       4,     5,     6,     6,     7,     6,     7,     6,     7,     3,
       4,     4,     6,     1,     4,     1,     3,     2,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     2,     5,     6,     6,     7,     1,
       1,     2,     2,     2,     4,     1,     2,     1,     2,     2,
       4,     3,     6,     7,     9,     7,     7,     4,     5,     1,
       1,     1,     5,     1,     1,     4,     1,     4,     1,     4,
       1,     4,     1,     1,     1,     1,     1,     1,     6,     6,
       4,     4,     4,     4,     6,     5,     5,     5,     4,     6,
       4,     5,     0,     5,     0,     1,     0,     2,     0,     1,
       3,     3,     2,     2,     0,     6,     1,     0,     3,     0,
       2,     2,     0,     1,     4,     2,     2,     2,     2,     2,
       4,     3,     1,     5,     3,     1,     3,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     4,     1,
       4,     1,     4,     1,     2,     1,     2,     1,     2,     1,
       3,     1,     3,     1,     2,     1,     0,     1,     3,     1,
       3,     3,     1,     3,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     4,     3,     2,     3,
       0,     3,     3,     2,     2,     1,     0,     2,     2,     3,
       2,     1,     1,     3,     5,     1,     2,     4,     2,     0,
       1,     0,     1,     2,     2,     3,     5,     1,     0,     1,
       2,     0,     2,     1,     0,     1,     0,     1,     3,     1,
       2,     3,     2,     1,     3,     5,     4,     2,     1,     0,
       3,     1,     3,     1,     2,     4,     2,     0,     1,     3,
       1,     2,     1,     3,     1,     2,     1,     1,     1,     2,
       1,     1,     2,     1,     1,     2,     7,     2,     5,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     3,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     5,     3,     0,     1,     1,     1,     1,
       4,     7,     2,     0,     1,     1,     1,     1,    13,    16,
       1,     2,     0,     1,     0,     1,     0,     2,     0,     1,
       0,     6,     8,     6,     8,     6,     8,     2,     1,     4,
       3,     2,     4,     3,     5,     1,     0,     1,     1,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     2,     1,
       1,     2,     3,     3,     3,     1,     3,     3,     2,     3,
       3,     3,     3,     1,     1,     1,     1,     3,     5,     1,
       1,     1,     1,     3,     2,     2,     3,     1,     1,     4,
       5,     5,     4,     6,     1,     1,     1,     1,     1,     1,
       0,     1,     3,     1,     0,     7,     1,     2,     3,     2,
       0,     2,     0,     2,     4,     2,     1,     1,     1,     2,
       3,     2,     2,     2,     2,     3,     4,     2,     1,     1,
       1,     1,     3,     2,     9,    11,    12,    14,     3,     4,
       4,     0,     7,    10,     9,     2,     3,     0,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     135,   214,     0,  1183,  1182,   214,     0,  1158,   214,   429,
     351,     0,  1260,     0,   214,     0,   135,     0,     0,     0,
       0,     0,     0,     0,     0,   214,   496,     0,  1259,   214,
       0,     0,  1230,     0,     0,     0,     0,     0,     2,     4,
       7,    18,    13,    30,    26,     0,    28,    16,    21,     6,
      32,    17,    20,    14,    33,    11,    31,   463,   450,   501,
     462,   134,   602,   466,    29,    15,    25,     5,    10,    23,
      24,    22,  1166,    36,    27,    34,    19,     8,    35,    37,
    1258,     9,    38,    12,   213,   212,   206,     0,     0,     0,
       0,     0,   207,  1096,  1279,  1280,  1281,  1282,  1283,  1284,
    1285,  1286,  1287,  1288,  1289,  1290,  1291,  1292,  1293,  1294,
    1637,  1295,  1296,  1297,  1584,  1585,  1638,  1586,  1587,  1298,
    1299,  1300,  1301,  1302,  1303,  1304,  1588,  1589,  1305,  1306,
    1307,  1308,  1309,  1590,  1639,  1310,  1311,  1312,  1313,  1314,
    1315,  1640,  1316,  1317,  1318,  1319,  1320,  1321,  1322,  1323,
    1324,  1641,  1325,  1326,  1327,  1642,  1328,  1329,  1330,  1331,
    1332,  1333,  1334,  1591,  1592,  1335,  1336,  1337,  1338,  1339,
    1340,  1341,  1342,  1343,  1344,  1345,  1346,  1347,  1348,  1349,
    1350,  1351,  1352,  1353,  1354,  1355,  1356,  1357,  1358,  1359,
    1360,  1361,  1362,  1593,  1363,  1364,  1365,  1366,  1367,  1594,
    1368,  1369,  1370,  1595,  1371,  1372,  1373,  1643,  1644,  1374,
    1375,  1596,  1646,  1376,  1377,  1597,  1598,  1378,  1379,  1380,
    1381,  1382,  1383,  1384,  1385,  1647,  1386,  1387,  1388,  1389,
    1390,  1391,  1392,  1393,  1394,  1395,  1396,  1648,  1599,  1397,
    1398,  1399,  1400,  1401,  1600,  1601,  1602,  1402,  1649,  1650,
    1403,  1651,  1404,  1405,  1406,  1407,  1408,  1409,  1410,  1652,
    1411,  1653,  1412,  1413,  1414,  1415,  1416,  1417,  1418,  1419,
    1603,  1420,  1421,  1422,  1423,  1424,  1425,  1426,  1427,  1428,
    1429,  1430,  1431,  1432,  1433,  1434,  1435,  1436,  1437,  1604,
    1655,  1605,  1438,  1439,  1440,  1606,  1441,  1442,  1656,  1443,
    1607,  1444,  1608,  1445,  1446,  1447,  1448,  1449,  1450,  1451,
    1452,  1453,  1609,  1657,  1454,  1658,  1610,  1455,  1456,  1457,
    1458,  1459,  1460,  1461,  1462,  1463,  1464,  1465,  1466,  1611,
    1467,  1468,  1612,  1469,  1470,  1471,  1472,  1473,  1474,  1475,
    1476,  1477,  1478,  1479,  1480,  1613,  1481,  1482,  1483,  1484,
    1485,  1486,  1487,  1488,  1489,  1490,  1491,  1492,  1493,  1494,
    1495,  1496,  1497,  1498,  1659,  1499,  1500,  1501,  1614,  1502,
    1503,  1504,  1505,  1506,  1507,  1508,  1509,  1510,  1511,  1512,
    1513,  1514,  1515,  1516,  1517,  1518,  1615,  1519,  1520,  1521,
    1660,  1522,  1523,  1616,  1524,  1525,  1526,  1527,  1528,  1529,
    1530,  1531,  1532,  1533,  1534,  1535,  1536,  1617,  1537,  1618,
    1538,  1539,  1540,  1541,  1662,  1542,  1543,  1544,  1545,  1546,
    1619,  1620,  1547,  1548,  1621,  1549,  1622,  1550,  1551,  1623,
    1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,
    1562,  1563,  1564,  1565,  1566,  1624,  1625,  1567,  1663,  1568,
    1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,  1578,
    1579,  1626,  1627,  1628,  1629,  1630,  1631,  1632,  1633,  1634,
    1635,  1636,  1580,  1581,  1582,  1583,  1263,     0,     0,  1078,
    1097,  1098,  1106,   209,   428,   135,     0,     0,     0,     0,
       0,   345,   344,     0,  1149,   350,     0,     0,  1096,   101,
    1596,  1603,  1469,  1617,    99,  1076,  1097,     0,   371,   372,
       0,   380,     0,   364,   369,   365,     0,   390,   382,   391,
     383,   363,   384,   373,   362,     0,   392,     0,   367,     0,
       0,     0,   210,   175,   351,   135,     0,  1171,  1172,  1170,
    1161,  1166,  1173,  1174,     0,  1157,     0,     0,  1095,  1217,
    1218,  1215,  1214,   164,  1125,  1247,  1619,  1547,  1261,  1248,
    1245,  1246,   211,   495,   493,     0,  1046,  1376,  1414,  1506,
    1517,  1619,  1191,  1195,     0,   208,  1624,  1252,     0,  1253,
    1100,     0,   467,   642,  1099,  1070,  1229,     0,  1234,     0,
    1483,   471,   474,  1115,   472,   463,     0,     1,   135,     0,
       0,     0,   492,   492,     0,   492,     0,   455,   463,   458,
     462,   603,  1165,  1243,  1257,  1619,  1547,  1251,  1254,  1384,
       0,     0,  1384,     0,  1384,     0,  1384,     0,     0,  1038,
       0,  1039,  1079,  1127,  1128,  1126,     0,  1129,   316,   349,
     348,   347,   346,   351,  1384,  1133,  1110,     0,   397,   398,
       0,     0,     0,     0,     0,  1144,   102,   100,   378,   379,
       0,   370,   366,   368,     0,  1107,  1664,   696,  1665,   725,
     703,   725,   725,  1666,  1667,  1668,  1669,   692,   692,  1350,
     705,  1670,  1671,  1672,  1384,  1673,  1674,   693,   694,   730,
    1675,  1676,  1677,  1678,  1679,     0,     0,  1680,   725,  1681,
     692,  1682,  1683,   697,  1684,   664,     0,  1685,   695,   665,
    1686,   733,   733,  1687,   720,  1688,   389,     0,   393,   678,
     679,   680,   681,   706,   707,   682,   712,   713,   717,   683,
     765,   692,  1108,  1109,  1384,   389,   385,  1384,   389,  1072,
    1384,     0,     0,   171,     0,     0,  1163,  1175,  1689,  1690,
    1691,  1692,  1694,  1693,  1695,  1696,  1697,  1698,  1699,  1700,
    1701,  1702,  1703,  1704,  1707,  1705,  1706,  1708,  1709,  1710,
    1711,  1712,  1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,
    1721,  1722,  1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,
    1731,  1732,  1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,
    1741,  1189,     0,  1190,  1180,  1169,  1176,  1177,   135,   427,
    1216,  1160,     0,     0,     0,     0,  1249,     0,     0,     0,
    1081,  1083,  1084,   967,  1094,  1041,     0,  1585,  1586,  1587,
    1031,     0,  1588,  1589,  1590,  1639,   896,   883,   892,   897,
     884,   886,   893,  1591,  1592,   833,  1593,  1594,  1092,  1595,
    1597,  1598,  1600,  1601,  1602,   888,   890,  1604,  1605,     0,
    1093,  1607,  1608,  1450,  1610,  1611,  1613,  1614,   894,  1616,
    1618,  1619,  1620,  1621,  1622,  1091,  1623,   895,  1625,     0,
       0,     0,  1059,   986,     0,     0,     0,  1041,   867,     0,
       0,   686,   687,   708,   709,   688,   714,   715,   689,     0,
    1053,   766,   912,  1041,   879,   942,   810,     0,   865,   859,
    1049,   478,  1047,     0,   860,  1080,  1041,  1032,   478,  1045,
    1194,  1192,  1198,  1193,     0,     0,     0,     0,     0,   644,
     643,  1071,  1228,  1226,  1227,  1225,  1224,  1231,     0,  1233,
    1166,   981,   983,     0,  1032,   473,     0,     0,     0,   453,
     452,     3,     0,     0,  1236,     0,   490,   491,     0,     0,
       0,     0,     0,     0,     0,     0,   587,   517,   518,   520,
     584,   588,   596,     0,   459,     0,  1115,  1255,     0,     0,
       0,   122,   122,     0,     0,     0,     0,     0,    93,    42,
      86,     0,     0,     0,     0,   189,   202,     0,     0,     0,
       0,     0,   199,     0,     0,   182,    44,   176,   178,     0,
     122,     0,    40,     0,     0,     0,    46,  1096,     0,  1637,
    1638,  1639,  1640,  1641,   897,     0,  1643,  1644,  1596,  1646,
    1647,  1648,  1649,  1650,  1651,  1652,  1653,  1603,  1655,  1656,
    1657,  1658,  1659,  1660,  1617,  1662,  1623,     0,  1663,     0,
     871,   989,   501,   987,  1116,     0,  1097,  1103,  1037,     0,
    1117,  1770,  1771,  1772,  1773,  1774,  1775,  1776,  1777,  1778,
    1779,  1780,  1781,  1782,  1783,  1784,  1785,  1786,  1787,  1788,
    1789,  1790,  1791,  1792,  1793,  1794,  1795,  1796,  1797,  1798,
    1799,  1800,  1801,  1802,  1803,  1804,  1805,  1806,  1807,  1808,
    1809,  1810,  1811,  1812,  1813,  1814,  1815,  1816,  1817,  1818,
    1819,  1820,  1821,  1822,  1823,  1824,  1825,  1826,  1827,  1828,
    1829,  1830,  1831,  1832,  1833,  1834,  1835,  1836,  1837,  1838,
    1839,  1840,  1841,  1842,  1843,  1844,  1729,  1845,  1846,  1847,
    1848,  1849,  1034,  1077,  1119,  1118,  1120,  1040,     0,     0,
     425,     0,     0,  1130,     0,  1111,     0,     0,  1384,   170,
    1384,   316,     0,   316,     0,  1143,  1146,   381,   377,   375,
     374,   376,   724,   711,   719,   718,     0,   701,   700,   699,
       0,   698,     0,     0,   725,   725,   723,   702,   678,     0,
       0,     0,   729,     0,   727,   387,   388,     0,   360,     0,
     672,   668,     0,   738,   739,   740,   741,   748,   749,   746,
     747,   742,   743,   736,   737,   744,   745,   734,   735,     0,
     750,   751,   752,   753,   754,   755,   756,   757,   684,   690,
       0,     0,   355,     0,     0,   357,     0,     0,     0,   351,
       0,   135,     0,   183,  1185,  1186,  1184,     0,     0,  1168,
     186,   203,  1179,  1188,  1178,  1187,  1167,  1162,     0,  1159,
     416,  1204,  1203,  1212,   165,     0,   992,     0,   135,  1250,
    1262,     0,   863,   986,  1030,     0,     0,     0,     0,     0,
       0,   869,   995,     0,     0,   790,     0,     0,     0,  1010,
       0,  1016,     0,     0,     0,   791,   770,   771,     0,  1058,
    1067,   985,     0,   867,   981,     0,   945,   947,     0,  1099,
       0,   861,   862,   868,     0,  1087,     0,   765,   765,  1052,
     967,     0,     0,   960,   964,   965,   966,     0,     0,     0,
    1044,     0,   975,   977,     0,     0,   806,   973,     0,   809,
       0,     0,     0,     0,   961,   962,   963,   954,   955,   956,
     957,   958,   959,   971,   953,   787,     0,     0,   914,   866,
       0,   786,  1050,     0,   605,     0,  1085,  1082,     0,  1033,
     605,  1206,  1210,  1211,  1209,     0,  1205,  1197,  1196,  1201,
    1199,  1202,  1200,     0,  1222,     0,  1219,   984,   600,   475,
       0,     0,  1242,     0,   129,     0,  1237,     0,   470,   469,
     511,   511,   502,   505,   511,   468,   559,   560,     0,     0,
       0,     0,   593,   591,  1081,  1094,   547,   521,   546,     0,
       0,   525,     0,   551,   766,   586,   457,   515,   516,   519,
     456,     0,   589,     0,   599,   587,   520,     0,  1244,  1256,
       0,     0,     0,     0,     0,  1384,     0,     0,    77,    58,
     268,   667,   121,     0,     0,     0,     0,     0,     0,     0,
      85,    82,    83,    84,     0,     0,     0,     0,   187,   188,
     201,     0,   192,   193,   190,   194,   195,     0,     0,   180,
     181,     0,     0,     0,     0,   179,     0,     0,     0,     0,
       0,     0,     0,     0,   501,   501,   501,   877,     0,   499,
     500,     0,     0,  1035,  1038,   415,   324,     0,   314,     0,
       0,     0,     0,     0,     0,   351,  1136,  1134,  1132,  1135,
    1137,  1112,     0,     0,     0,     0,   167,   169,     0,   313,
     287,     0,  1148,     0,     0,  1384,  1145,   303,     0,     0,
       0,     0,   389,     0,   722,   721,   673,   669,     0,     0,
       0,     0,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   389,   386,   389,  1073,     0,   389,   174,
       0,  1384,   316,     0,  1164,  1181,   184,   204,   185,   205,
     448,     0,   422,   430,   435,   413,     0,   413,     0,   432,
     436,   413,   431,   413,   426,     0,   166,     0,  1124,     0,
    1123,     0,  1042,     0,     0,  1029,  1025,     0,     0,     0,
       0,     0,   996,   997,   998,   999,  1000,  1001,  1002,  1003,
    1004,     0,     0,  1005,     0,     0,     0,   952,   960,   964,
     965,   966,   961,   962,   963,   954,   955,   956,   957,   958,
     959,   979,     0,     0,     0,     0,     0,     0,     0,     0,
     835,     0,     0,   941,     0,   981,  1015,     0,     0,     0,
       0,     0,     0,   981,  1021,     0,     0,     0,  1057,     0,
    1054,   812,  1041,     0,   948,   811,     0,     0,     0,  1089,
    1090,   767,   813,   778,   782,   783,   784,   788,  1122,  1121,
    1051,     0,  1043,     0,     0,   768,   792,   797,     0,  1022,
     829,     0,   817,     0,   805,     0,   815,   819,   793,   808,
       0,   789,     0,  1044,   976,   978,     0,   974,     0,   779,
     780,   781,   772,   773,   774,   775,   776,   777,   785,   951,
     949,   950,     0,     0,     0,   916,     0,     0,   814,  1048,
    1376,  1414,     0,   489,   489,   489,   477,   487,     0,   656,
     501,  1059,   656,     0,   765,   645,  1115,  1232,  1220,  1221,
     982,  1114,   135,     0,  1240,     0,     0,     0,   141,   124,
       0,  1238,     0,   157,   159,   605,     0,  1041,   509,   510,
     514,   514,     0,     0,   514,  1614,  1502,     0,     0,     0,
       0,   552,   594,     0,   585,   549,   550,     0,   548,  1081,
     553,  1080,   554,   557,   558,   526,   595,  1068,   597,     0,
     590,   461,   460,   601,     0,    43,     0,  1384,    60,     0,
       0,     0,     0,     0,     0,   218,     0,   318,   218,    98,
    1384,   389,  1384,   389,  1283,  1351,  1518,     0,    56,    89,
       0,   292,   115,     0,   277,   321,    79,    94,   108,     0,
       0,    45,   177,   191,   196,   111,   200,   197,  1153,   198,
     122,     0,    41,     0,   109,     0,  1151,     0,     0,    47,
     113,  1155,   499,   499,   499,     0,   988,     0,     0,     0,
     990,   991,  1037,     0,   414,     0,   315,     0,   424,   404,
     405,   415,     0,   316,     0,   316,  1133,     0,     0,  1113,
     105,     0,     0,     0,     0,   306,   304,   337,     0,   311,
     305,   314,     0,     0,   263,     0,  1277,     0,     0,   399,
       0,     0,     0,     0,     0,   691,   704,   361,   678,     0,
     732,   731,   733,   733,   678,     0,   662,     0,   676,     0,
     716,   685,   758,   759,   760,   761,   762,   763,   764,   354,
     356,     0,   358,     0,     0,     0,   417,     0,   420,     0,
     419,   423,   418,   412,     0,   443,     0,     0,     0,     0,
       0,     0,  1213,   993,   494,   834,     0,     0,  1026,     0,
       0,   910,     0,   885,   887,   900,     0,   889,   891,     0,
     968,     0,     0,     0,   901,   837,   838,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   854,   853,   902,   940,     0,
       0,  1013,  1014,     0,   903,     0,     0,  1020,     0,     0,
       0,   908,     0,  1074,     0,     0,     0,  1066,   864,   982,
     946,   944,   870,   765,     0,     0,     0,     0,     0,     0,
       0,   818,   807,     0,   816,   820,     0,     0,     0,   801,
       0,     0,   799,   830,   795,     0,     0,   831,     0,     0,
     915,   924,   489,   489,   489,   489,   486,   488,     0,     0,
       0,     0,  1502,     0,   628,   608,   604,   606,   615,   628,
     633,   880,   654,   881,  1099,     0,   564,   499,  1067,   564,
       0,  1207,  1223,     0,  1241,     0,   146,   128,   148,   147,
       0,   155,     0,  1041,     0,   146,   130,     0,   149,   160,
    1240,     0,   163,     0,   503,   504,   506,     0,   969,   514,
     508,   556,   555,     0,   524,   592,   522,     0,   598,     0,
       0,     0,   267,     0,     0,     0,   218,     0,   326,     0,
     333,     0,     0,   318,   299,    78,     0,     0,     0,    52,
      97,    70,    62,    48,    76,     0,     0,    81,     0,    74,
      91,    92,    90,    95,     0,   253,   228,   264,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   501,   497,   498,   872,  1036,   446,
     447,   182,   445,   325,     0,     0,   313,     0,  1148,  1131,
     351,     0,     0,   104,   106,     0,   170,   316,     0,   291,
     287,   312,   285,   284,   286,     0,  1278,   175,     0,  1272,
    1147,     0,   400,     0,   396,     0,  1142,   710,   675,     0,
     728,   726,   674,     0,   670,   677,   389,     0,   449,     0,
     408,   444,   433,   438,     0,   442,   440,   439,   434,   437,
       0,  1028,  1024,     0,   882,   994,     0,   980,  1008,  1007,
     836,   845,   849,   850,   851,  1009,     0,     0,     0,   846,
     847,   848,   839,   840,   841,   842,   843,   844,   852,  1018,
    1017,  1011,  1012,     0,   905,   906,   907,  1019,     0,  1075,
    1056,   981,  1061,  1063,     0,     0,   943,  1088,   769,     0,
       0,   798,  1023,   821,     0,     0,     0,   794,   968,     0,
       0,     0,     0,     0,   803,     0,     0,     0,     0,   878,
       0,     0,     0,     0,   480,   479,   485,   628,   633,     0,
     463,     0,   615,     0,   627,   543,   626,   609,     0,   639,
     637,     0,   639,     0,   639,     0,   543,     0,   629,   543,
     626,     0,   646,  1071,   655,     0,   581,     0,  1055,   581,
       0,   476,  1239,     0,  1235,     0,     0,     0,   136,   133,
     123,     0,     0,   158,   146,   137,   512,   513,     0,   507,
     523,  1069,   116,   218,     0,     0,    59,     0,   335,   279,
     327,   310,   294,     0,     0,     0,   219,     0,   352,     0,
       0,   300,     0,     0,     0,     0,   280,     0,     0,   239,
       0,     0,   310,     0,   317,   235,   236,     0,    51,    71,
       0,    67,     0,    96,     0,     0,     0,     0,     0,    54,
      66,     0,    49,     0,   389,   389,    57,   278,  1107,  1664,
    1665,  1666,  1667,  1668,  1669,  1670,  1671,  1750,  1672,  1673,
    1674,  1675,  1676,  1677,  1678,  1679,  1759,  1680,   225,  1681,
    1450,  1682,  1683,  1684,     0,  1685,   665,  1686,  1687,  1688,
     954,   955,   223,   320,   220,   328,   222,   224,     0,  1108,
     221,   323,   112,  1154,     0,   110,     0,  1152,   119,   117,
     114,  1156,   875,   876,   873,   499,   427,   407,     0,     0,
    1277,     0,     0,  1384,     0,   103,     0,  1148,   168,   313,
       0,   343,   263,   338,     0,  1277,  1275,     0,  1271,   395,
       0,     0,     0,   671,   663,   359,     0,   421,     0,   441,
    1027,   898,   909,  1006,     0,     0,     0,     0,   904,   899,
    1064,  1065,  1060,   827,   825,   822,     0,   823,   802,     0,
       0,   800,   796,     0,   832,   911,     0,   927,   922,   923,
     484,   483,   482,   481,   614,   612,     0,   617,  1099,   624,
     536,   542,   613,     0,   607,     0,   638,   634,     0,   635,
       0,     0,   636,     0,   610,     0,  1099,   611,     0,   653,
       0,     0,   918,   872,   918,  1208,   145,   125,     0,   126,
     156,     0,     0,     0,     0,   150,   401,     0,   331,    61,
       0,   310,     0,   218,   296,   295,   298,   293,   297,     0,
     353,     0,     0,   237,     0,   244,   282,   283,   281,   238,
     310,   316,   240,     0,     0,     0,    63,    53,    50,    55,
      64,     0,     0,    65,    68,   661,    80,    73,  1759,  1766,
       0,     0,     0,     0,     0,     0,   403,   410,   182,     0,
       0,   287,  1274,     0,     0,     0,   313,   107,     0,     0,
       0,  1277,     0,     0,   215,     0,   260,     0,   172,  1276,
       0,  1264,     0,  1140,  1141,     0,     0,   409,   855,     0,
       0,     0,  1062,   824,   828,   826,   804,   913,   929,   926,
     649,     0,   652,   616,     0,     0,   531,   538,     0,   541,
     535,     0,   618,     0,     0,   620,   622,     0,     0,     0,
     657,     0,     0,     0,  1076,   562,  1326,  1597,  1501,   563,
       0,   567,   561,   565,   570,   572,   571,   573,   569,   580,
       0,   583,  1086,   583,     0,     0,     0,     0,   161,     0,
     152,   152,     0,   138,   970,     0,   218,     0,   309,   332,
     249,   227,     0,     0,     0,   234,   241,   342,   243,     0,
      72,     0,    88,     0,     0,   322,   120,   118,   874,   427,
       0,  1148,   263,  1271,     0,     0,     0,   287,   175,  1273,
     276,   269,   270,   271,   272,   273,   274,   275,   290,   289,
     261,   262,     0,     0,     0,  1142,     0,   856,     0,   857,
       0,   501,   654,     0,     0,   648,     0,   529,   527,   530,
     532,   528,     0,     0,   625,   641,     0,   621,   619,   630,
       0,   661,     0,   632,     0,     0,     0,   574,   568,   917,
     919,     0,     0,   534,   534,     0,   132,     0,   656,     0,
       0,   154,   154,   140,     0,   316,   334,     0,   301,   308,
     247,   246,   248,   252,     0,   250,     0,   266,     0,   259,
     227,   660,     0,   389,     0,   329,   402,   406,     0,   217,
    1265,   313,     0,  1271,   263,  1277,     0,  1268,     0,     0,
    1148,   858,     0,   932,   647,   650,     0,   623,     0,     0,
       0,   658,   659,   631,     0,     0,     0,   566,     0,     0,
     582,     0,   465,   464,   127,   152,   131,   162,   151,   511,
     153,   511,     0,   342,   288,     0,     0,     0,   249,     0,
     242,   339,   340,   341,     0,   255,   245,   256,    69,    87,
      75,   330,     0,   313,  1266,   216,   173,  1269,  1270,     0,
     656,   928,     0,     0,     0,     0,   539,     0,   545,   640,
     576,     0,   575,   920,   921,   536,   154,   514,   514,   656,
     259,   302,   307,   226,   251,   265,     0,     0,     0,   257,
       0,   258,  1271,     0,  1138,  1584,  1327,  1554,     0,   930,
     933,   931,   925,   651,     0,     0,   537,   577,   533,   511,
     143,   142,   139,   218,   231,     0,   230,     0,   319,   254,
    1267,  1148,     0,   937,   936,   935,   939,   938,   540,     0,
     514,   336,   229,   233,   232,   656,     0,     0,   144,  1139,
     934,   544
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    37,    38,    39,    40,  2161,  2162,  2163,  1837,   988,
    2883,  1838,   989,   990,  2165,    41,    42,  2212,  2213,    43,
    1454,   537,  1768,  1393,  2613,    45,  2111,  1773,  2115,  2758,
    2374,  2110,  2117,  2861,  2929,  2112,  1774,  1775,  2759,  1776,
      46,    47,  1526,    48,   743,    49,  1527,  1481,  1261,  1008,
    1471,  1250,    50,    86,    51,  2150,  2483,  2875,  2175,  3018,
    2424,  2425,  2872,  2873,  2153,  1839,  2945,  2946,  2226,  1463,
    2940,  1905,  2808,  1843,  1825,  2426,  1914,  2768,  2521,  1840,
    2406,  1906,  2867,  1536,  1907,  2868,  2623,  1908,  1506,  1530,
    2154,  2947,  1844,  1507,  2149,  2484,  1450,  1909,  2879,  1910,
     496,  2410,    52,   529,   530,   735,  1198,   531,   716,    53,
     654,  1534,   538,    55,  1891,  2668,  2249,  2669,  1964,  1885,
    1259,  1961,  1580,  1510,  1260,   486,  1594,  2250,  2201,  1581,
     539,   888,    58,    59,    60,   578,   591,   592,  1364,  1746,
    2078,   958,   565,   566,  1879,   606,  1500,  1402,  1403,  1780,
    2124,  1429,  1430,   967,   968,  2717,  2922,  2718,  2719,  2581,
    2582,  3006,  1417,  1421,  1422,  1800,  1790,  1408,  2366,  2741,
    2742,  2743,  2744,  2745,  2746,  2747,   889,  2602,  2853,  1425,
    1426,   970,   971,   972,  1434,  1810,    62,    63,  1749,  2085,
    2086,  2087,  2088,  2344,  2345,  2359,  2355,  2587,  2725,  2089,
    2090,  2710,  2711,  2825,  2362,  2096,  2729,  2730,  2782,  1553,
     717,  1826,  1266,  1201,   719,   890,   720,  1177,   891,  1181,
     722,   892,   893,   894,   725,   895,   896,   897,   728,  1173,
     898,   899,  1192,  1220,  1221,  1222,  1223,  1224,  1225,  1226,
    1227,  1228,   941,  1649,   901,   902,   903,  2092,   904,  1358,
    1735,  2071,  2751,  2849,  2850,  2329,  2568,  2708,  2821,  2964,
    2999,  3000,   905,   906,  1306,  1307,  1308,  1732,  1353,  1354,
     907,  2486,  1356,  1642,   942,  1664,  1302,  1052,  1053,  1267,
    1621,  1622,  1645,  1993,  1652,  1657,  2021,  2022,  1665,  1700,
     908,  1605,  1606,  1979,  1275,   909,   631,  1059,   632,  1272,
    1694,   918,   910,   911,   912,  1299,  1300,  2037,  2303,  2304,
    1670,  1806,   583,  2033,  2721,   739,  1142,   913,   914,   915,
     916,   944,   585,  1054,   479,   731,  2930,  1155,   948,  1055,
    1841,  1690,    64,   815,   636,    65,  1153,  1518,    66,  2694,
    2532,  1166,  1538,  1918,   497,    67,    68,    69,    70,    71,
     613,  1253,   540,  1254,  1255,   802,    72,  1262,   804,   805,
      73,   572,   573,  1263,  1377,  1264,    74,   551,    75,   937,
     588,   938,   940,   542,   955,  2106,  1764,    77,    78,   559,
     560,    79,    80,   574,    81,    82,  2691,   543,  2229,  1894,
     506,   481,   482,   733,  1145,  1057,  1146
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2598
static const int yypact[] =
{
    5027,  -103,   716, -2598, -2598,  -103, 35212, -2598,  -103,    51,
    2277, 40002, -2598, 28879,  -103, 46708,   908,   210,   181,   230,
   40481, 40481, 46708, 46708, 40960,  -103,   243, 47187, -2598,  -103,
   24399, 37607,    38,  -109, 47666, 46708,   690,   383,   -42, -2598,
   -2598, -2598, -2598, -2598, -2598,    33, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598,   131, -2598,    60,
     155,   364,    53, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598,   149, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   23920, -2598, -2598, -2598, -2598, -2598, -2598, 41439, 46708, 41918,
   38086, 42397, -2598,   141, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598,   142, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
     162, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598,   166, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598,    69,   452, -2598,
     167, -2598, -2598, -2598, -2598,   690, 42876,   447,   621,   337,
   48145, -2598, -2598, 46708, -2598, -2598,    62,   500, -2598, -2598,
   -2598, -2598, 43355, -2598, -2598, -2598, -2598,   455, -2598, -2598,
     332, -2598,    78, -2598, -2598,   306,   353, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598,   451, -2598, 53878, -2598, 48624,
   49103, 49582, -2598,   393,   720,    59, 23441, -2598, -2598, -2598,
   -2598,   149, -2598, -2598,   925, -2598, 40481,   925, -2598, -2598,
   -2598, -2598, -2598,  -173,   439, -2598,   485,   751, -2598, -2598,
   -2598,   482, -2598, -2598,   739, 10515, 10515, 50061, 50061,   925,
   50061,   525, -2598, -2598,   -26, -2598,  -109, -2598,   364,   482,
   -2598, 24879, -2598,   565,   452, -2598, -2598,    97,   867, 14043,
   46708,   592, -2598,   569,   592,   620,   626, -2598,  5027,   962,
     923, 37607,   244,   244,  1094,   244,   153,   762, -2598,  1078,
   -2598,   675, -2598, 42876, -2598,   674,   960, -2598,   482,  1038,
     115,   851,  1066,  4333,  1083,   653,  1118,   714,  6987, 14043,
   33775, -2598,   452, -2598, -2598, -2598,   795, -2598,   798, -2598,
   -2598, -2598, -2598,   561,  1040, -2598,   806,  1288, -2598, -2598,
     885, 43834, 44313, 42876, 42876,  1250, -2598, -2598, -2598, -2598,
     891, -2598, -2598, -2598,   118, -2598, -2598, -2598, -2598,   902,
   -2598,   902,   902, -2598, -2598, -2598, -2598,   855,   855,  1052,
     877, -2598, -2598, -2598,  1249, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598,   900,   729, -2598,   902, -2598,
     855, -2598, -2598, -2598, -2598, -2598, 55270, -2598, -2598, -2598,
   -2598,   320,   395, -2598, -2598, -2598,    48,   917, -2598,  1385,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,   933, -2598,
    3475,   855, -2598, -2598,  1290,   151, -2598,  1293,   165, -2598,
    1301,  1175, 14043, -2598,  1123,  1070, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,  -109, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598,   323, -2598, -2598, 31350, -2598, -2598,    59,   975,
   -2598, -2598, 31350, 14547, 54342,  1441, -2598,  1252, 46708,   983,
   -2598, -2598, -2598, -2598, -2598, -2598,   991,  1484,    99,  1494,
   14043,  1005,    99,    99,  1011,  1346, -2598, -2598, -2598,   168,
    1019,  1022, -2598,   173,   173, -2598,  1027,  1030, -2598,   175,
    1036,  1044,  1542,  1545,   109,  1075,  1081,   729,    99, 14043,
   -2598,  1085,   173,  1088,  1097,  1104,  1561,  1108, -2598,  1566,
    1109,   116,   133,  1119,  1120, -2598,  1125, -2598,   176, 14043,
   14043, 14043,  1434, 14043,  7995, 42876,  1605, -2598,   452,  1128,
     925, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,   128,
    5422, -2598,  1166, -2598, -2598, -2598,  1334, 14043, -2598, -2598,
    1131,  1420, -2598,   177, -2598, -2598, -2598,   505,  1420, -2598,
   -2598, -2598, -2598, -2598,   196,  1539, 30392, 30871, 42876, -2598,
   -2598,   452, -2598, -2598, -2598, -2598, -2598, -2598,   511, -2598,
     149, 32593,  1136,  1147,   452,   592, 46708, 46708,  1610, -2598,
   -2598, -2598, 37607, 42876, 50540,  1273, -2598, -2598,   364,   364,
    9507,   364,   164,   125, 11019, 15051,  1485,  1366,   184,   292,
    1487, -2598,  1376,   153,   762, 14043,   569, -2598,  1427, 42876,
   35691,   628,   715,  1160,  1244,  1163,   298,  1577, -2598,  1164,
   -2598,  1253, 42876, 55270,   208, -2598,  1616,   208,   208,   200,
    1618,  1260,   228,  1403,   520,  -115,  1164,  2183, -2598, 37607,
     111,   541,  1164, 42876,  1261,   578,  1164,    98, 14547,   758,
     852,   290,   947,   986,   122, 14547,  1003,  1034,   127,  1048,
    1068,  1073,  1215,  1247,  1397,  1424,  1426,   129,  1444,  1456,
    1458,  1493,  1517,  1525,   161,  1527,    81, 14547,  1531,  1176,
   -2598, 32593,   -59, -2598, -2598,  1544,   163, -2598, 28956,  1172,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,  1265, 46708,
    1222,   -72,  1532,  1590, 33775,  1191,  1550, 42876,  1423,  2183,
    1428,  1200,  1663,   798,  1204, -2598, 51019, -2598, -2598, -2598,
   -2598, -2598, -2598,  1206, -2598, -2598, 14043, -2598, -2598, -2598,
    1692, -2598, 54342, 54342,   902,   902, -2598, -2598,  1669,  1296,
    1299,  1692, -2598,  1692, -2598, -2598, -2598, 54342, -2598, 46708,
    1211,  1218,  1692, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,  1692,
    1300, -2598,  1305,  1306,  1307, -2598, -2598, -2598, -2598, -2598,
   46708, 46708, -2598, 46708, 46708, -2598, 46708, 46708,  1216,   561,
   44792,    59, 38565, -2598, -2598, -2598, -2598,   572,   824, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, 33775, -2598,
    1450, -2598, -2598, -2598,  1223,   573, -2598,   639,   690, -2598,
   -2598, 14043,   452, 14043, 32593,  1262, 14043, 14043,  1226,  1692,
    1692, -2598,  4413,  1692,  1692,  6395, 14043, 27758, 14043, 18579,
   11523, 14043, 14043,  8499, 14043,  6395,  1716,  1716, 25837, -2598,
    1386, -2598,  1235,   928,  5756,  1234, -2598,  1236,  1233, -2598,
    1232, -2598,   452,   452, 14043, -2598, 14043,  3918,  3918, -2598,
     135, 54342, 14043, 14043, 14043, 14043, 14043, 14043, 33296,  1326,
      85, 46708, 14043, 14043,  1243,   710, -2598, 14043,  1474, -2598,
    1254, 14043,  1335,   101, 14043, 14043, 14043, 14043, 14043, 14043,
   14043, 14043, 14043, -2598, -2598, 20077,   183,  1575,  1594,   452,
    -120,   267, 10515, 39044,  1589,  6987, -2598,   452, 29434,    94,
    1589, -2598, -2598, -2598, -2598,   178, -2598, -2598, -2598, -2598,
    1223, -2598,  1223,  1263, 42876,    97, 37128, 14043, -2598, -2598,
     695,  1266,  1321,   735,  1731, 46708, -2598, 26316,  1555, -2598,
     239,   239,  1269, -2598, 31826,  1555, -2598, -2598, 19069,  1396,
    1559,  1491, -2598, -2598,  1476,  1478, -2598,  1285, 32821, 15555,
   15555, -2598,   547, 32593,  1203, -2598, -2598, -2598, -2598, -2598,
   -2598,   545, -2598, 42876,    -5,  1485,   292,  1291, -2598, -2598,
     789,  1295, 51498, 46708,  1571,  1518,  1572,  -167, -2598, -2598,
   -2598, 54342, -2598, 46708, 46708, 51977, 52456, 34254, 46708, 33775,
   -2598, -2598, -2598, -2598, 46708,  1033, 46708,  5193, -2598, -2598,
   -2598,   208, -2598, -2598, -2598, -2598, -2598, 46708, 46708, -2598,
   -2598,   208, 46708, 46708,   208, -2598,   954, 46708, 46708, 46708,
   46708,  1007, 46708, 46708,   -49,   -49,  1504, -2598, 12027,    77,
   -2598, 14043, 14043, -2598, 14043,  1473, -2598,   697, -2598,  1515,
      49,  1349, 42876, 42876, 46708,  1188, -2598, -2598, -2598, -2598,
   -2598, -2598, 33775,  1304,  1308,  1652, -2598,  2183,  1653, 36170,
     124,  1028,  1345, 12531,  1770,  1537, -2598, -2598,  1523, 14043,
    1312,  1313,    48,   706, -2598, -2598,  1317,  1218,  1333,  1336,
    1319,  1320, -2598,   707, 54342,  1692,    92,  1322,  1327,  1302,
     657,   614,  1199,   151, -2598,   165, -2598,  1529,   154, -2598,
    1411,  1549,   798,  1788, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598,   708, 22962, -2598, -2598,  1790,   925,  1790,    46, -2598,
   -2598,  1790, -2598,  1790, -2598, 31350, -2598, 14547, -2598, 54342,
   -2598,  1332, -2598,  1337, 14043,    13, -2598, 31887,  1341, 14043,
    1342,  1343, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598,  1348,  1662, -2598,  1351,  1353,  4775, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598,  1354,  1344, 31977,  1363, 18579, 18579,  7995,  1838,
   -2598, 18579,  1368, -2598,  1371, 31839,  1331,  1372, 32207, 13035,
   14043, 13035, 13035, 32261, -2598,  1373, 32400, 46708, -2598, 16059,
   -2598, -2598, -2598, 14043, 42876, -2598, 14043,  1379,  6245, -2598,
   -2598, -2598,   267,   659,  4079,  4079,  4079,  6395, -2598, -2598,
   -2598,  1355, -2598, 18579, 18579, -2598,  1883,  3224,  7995, -2598,
   -2598,  1665, -2598,  1178, -2598,  1347, -2598, -2598,  3230, -2598,
   27758,  3633, 14043,    87, -2598, 14043,  1243, 14043,  1449,  4079,
    4079,  4079,   294,   294,   174,   174,   174,   659,   267, -2598,
   -2598, -2598,  1381,  1383,  1387,  1732,  1108, 14043, -2598, -2598,
     635,   754, 42876,  2669,  2690,  3118, -2598, -2598, 21525,  1432,
     -59,  1434,  1432,  1692,  3918, -2598,   569, -2598, -2598, -2598,
   32593, -2598,   690, 21525,  1433,  1446,   -88, 24399,  1607, -2598,
   46708, -2598, 46708, -2598,  1393,  1589,  1409, -2598, -2598, -2598,
    1414,  1414, 14043,  2408,  1414,  1611,  1613,   878,   878,   547,
    1614, -2598, -2598,  1464, -2598, -2598, -2598, 14043,  9003,  1212,
   -2598,  1221, -2598, -2598, -2598, -2598,  1402, -2598, -2598,  1664,
   -2598, -2598, -2598, -2598,  1492,  1164, 14043,  1638, -2598,   121,
    1412,  1760,  -155,  1713, 46708, -2598,   232,   265, -2598,   856,
    1762,   154,  1763,   154, 33775, 33775, 33775,   723, -2598, -2598,
     925, -2598, -2598,   728, -2598,   191, -2598, -2598, -2598,  1500,
     629,  1164,  2183, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
     117,   647,  1164,  1501, -2598,  1503, -2598,  1505,   692,  1164,
   -2598, -2598,    77,    77,    77, 14547, -2598,  1642,  1644,  1429,
   32593, 32593, 32593,  1430, -2598,   147, -2598, 46708, -2598, -2598,
   -2598,  1473, 42876,  1425,  1889,   798, -2598,  1586,   396, -2598,
     925, 46708, 42876, 42876, 42876, -2598, -2598, -2598,  1431,  1435,
   -2598, 52935,   -53,  1647,  1648, 46708,  1475,  1163,  1899, -2598,
     743, 13539,  1794, 42876,  1440, -2598, -2598, -2598, -2598,  1692,
   -2598, -2598,   278,   278, -2598, 46708, -2598,  1451, -2598,  1452,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, 46708, -2598, 42876,  1795,   690, -2598, 33775, -2598, 36649,
   -2598, -2598, -2598, -2598,   925, -2598,   925,  1671, 46708, 29913,
     925,   925, -2598, -2598, -2598, -2598, 32485, 14043, -2598,  1808,
   54342, -2598,  6469, -2598, -2598, -2598, 14043, -2598, -2598, 14043,
   -2598, 27758, 14043,  1785, -2598,  1945,  1945,  5756, 54342, 18579,
   18579, 18579, 18579, 18579,   126,  1088, 18579, 18579, 18579, 18579,
   18579, 18579, 18579, 18579, 18579, 19573,   346, -2598, -2598, 14043,
   14043,  1793,  1785, 14043, -2598, 54342,  1461, -2598,  1462,  1463,
   14043, -2598, 54342,  1466,  1465,  7995, 32539, -2598,   452, 28245,
   -2598, 32593, -2598,  3918, 14043,  2142,  3015, 14043,  1467, 14043,
    1800, -2598, -2598,  1477, -2598, -2598, 54342, 14043,  1479,  4138,
   18579, 18579,  4306, -2598,  4895, 14043,  7995, -2598,  1504,  1506,
   -2598,  1676,  1560,  1560,  1560,  1560, -2598, -2598, 42876, 42876,
   42876, 22004,  1803, 21045, 45271,  1483, -2598,  1617, -2598, 45271,
   45750, -2598,  1507, -2598,   452, 14043,  1797,    77,  1386,  1797,
    1488, -2598, -2598,  1512, -2598, 14043,  1641, -2598, -2598, -2598,
    1554, -2598,   747, -2598,  1931,  1641, -2598,   748, -2598, 26316,
    1433, 14043,   452,   540, -2598, -2598, -2598,  1520, -2598,  1414,
   -2598, -2598, -2598,  1733, -2598, -2598, -2598, 42876, -2598, 46708,
   28274,  1870, -2598, 46708, 46708, 46708, -2598, 46708,  1521,  1533,
     459,  1524,   491, -2598,  1316,   459,  1854,   159,  1163,   228,
    1339,   334, -2598, -2598, -2598,  1603, 46708, -2598, 46708, -2598,
   -2598, -2598, -2598, -2598, 34254, -2598, -2598, -2598, 33775, 27278,
   33775, 46708, 46708, 46708, 46708, 46708, 46708, 46708, 46708, 46708,
   46708,  1534,  1536,  1538,  1504, -2598, -2598, -2598, -2598, -2598,
   -2598,  -115, -2598, -2598,   147,  1541, 36170,   690,  1345,  1590,
     561, 46229,  1543,  1547, -2598,   749,  2183,  1563,  1994, -2598,
     124, 36170, -2598, -2598, -2598,  1956, -2598,   393,   144, -2598,
   -2598,   690, -2598,   690, 32593, 46708,  1612, -2598,  1218,  1548,
   -2598, -2598,  1218, 54342, -2598, -2598,   154, 42876, -2598,   757,
   -2598, -2598, -2598, -2598, 46708,  1562, -2598,  1562, -2598, -2598,
   14043, 32593, -2598,  1558, -2598, 32593, 28309, -2598, 32593,  1793,
   -2598,  1945,  2900,  2900,  2900,  2283,  1877,   156,  1564,  2900,
    2900,  2900,   284,   284,   104,   104,   104,  1945,   346, 32593,
   32593, -2598, -2598,  1567, -2598, -2598, -2598, -2598,  1569, 46708,
   -2598,  5658, -2598,  1568,  1570, 46708, -2598, -2598,   361, 14043,
   14043,  1883, -2598,  6408, 14043, 54342,   775,  1883,   186, 14043,
    3476,  3815, 14043, 14043,  5322, 28338,  1573, 14043, 26795, -2598,
   42876, 42876, 42876, 42876, -2598, -2598, -2598, 45271, 45750,  1578,
   20565,  1617,  1574, 42876, -2598,  1658,  1580, 21525,  1859,  1787,
   -2598, 21525,  1787,  1259,  1787,  1863,  1658, 25358, -2598,  1658,
    1587,  1798, -2598,   418, 32593,  2031,  1904,  1591, -2598,  1904,
     925, -2598, 32593, 10515, -2598,   690,  1031, 46708,   452,   -48,
   -2598,  1601, 46708, -2598,  1641, 32593, -2598, -2598, 27758, -2598,
   -2598, -2598, -2598, -2598, 46708,  1593, -2598,  1595,   459, -2598,
   46708,  1636, -2598,   171,  1896,    31, -2598, 14043, -2598,  1982,
    2063,  1316,  1604, 46708, 46708, 18579, -2598,   266,   146, -2598,
    1878, 42876,  1636,  2021, -2598, -2598, -2598,   491, -2598,  1915,
    1829, -2598,   208, -2598, 14043,   491,  1830,   139, 46708, -2598,
   -2598,  2011, -2598, 54342,   154,   154, -2598, -2598,  1608,  1609,
    1619,  1620,  1621,  1622,  1623,  1624,  1625, -2598,  1627,  1628,
    1629,  1630,  1631,  1632,  1633,  1635,   900,  1637, -2598,  1639,
    1520,  1640,  1643,  1645, 54806,  1646,  1651,  1654,  1655,  1656,
     572,   824, -2598, -2598, -2598, -2598, -2598, -2598,   806,  1657,
   -2598,  1626, -2598, -2598,  1694, -2598,  1695, -2598, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598,    77,   975,    37, 46708,  1615,
    1475,  2075,    -1,  1846,  1649, -2598,   925,  1345, -2598, 36170,
    1037,   179,  1648, -2598,   235,  1475, -2598,  2028,  1681, -2598,
    1858, 46708,  1666, -2598, -2598, -2598,  2115, -2598, 36649,  1562,
   32593, -2598, -2598, -2598, 18579,  1995,  1668, 54342, -2598, -2598,
   14043, -2598, -2598,  1883,  1883,  6408,   799, -2598,  1883, 14043,
   14043,  1883,  1883, 14043, -2598, -2598, 28377, 53399, -2598, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, 34733, 45271,  1672, -2598,
   39523, -2598, -2598, 46708,  1617, 21525, -2598, -2598,  1514, -2598,
   21525,  1946, -2598, 21525, -2598, 46708,  1677, -2598, 46708, -2598,
   10011, 14043,  1710,   925,  1710, -2598,  1675, -2598,   -88, -2598,
   -2598,  2092, 22483,  2048, 14043, -2598, -2598,  1682,   459, -2598,
    1847,  1636,  1685, -2598, -2598, -2598, -2598, -2598, -2598, 28622,
   -2598,   -23, 14043, -2598,  1189,  2283, -2598, -2598, -2598, -2598,
    1636,   798, -2598, 46708,  2147,  2036, -2598, -2598, 32593, -2598,
   -2598,  1692,  1692, -2598, -2598,  2114, -2598, -2598, -2598, -2598,
     806,  -170, 27278, 46708, 46708,  1690, -2598, -2598,  -115,  2067,
     805,   124, -2598,   690, 42876,  2040, 36170, -2598,  2156,  1696,
   46708,  1475,   821,   821, -2598,  1837, -2598,  1839, -2598, -2598,
     231, -2598, 42876, -2598, -2598, 22483,   690, -2598,  3045, 18579,
   54342,   848, -2598, -2598,  1883,  1883,  1883, -2598,  1894, -2598,
   -2598,   864,  2164, -2598, 46708,   -68,   -64,  1704,  1707, -2598,
   -2598,  1708, -2598, 14043,  1712, -2598, -2598, 21525,  1514,   870,
   -2598, 54342, 46708,   872, 54342, -2598,  1714,  -114,  1718, -2598,
    7491,  1706, -2598, -2598, -2598, -2598, -2598, -2598, 32593, 32593,
   46708,  1880, -2598,  1880, 10515,  1772, 46708, 14043, -2598,   881,
    2144,    35,   -18, 32593, -2598, 42876, -2598, 33775, -2598,   459,
     -99,  1721, 14043, 28706,  1949, -2598, -2598,  1974, -2598,  2039,
   -2598, 46708,  1791,   281,  1806, -2598, -2598, -2598, -2598,   975,
     925,  1345,  1648,  1681,  1737, 42876,   690,   124,   393, -2598,
   -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598, -2598,
   -2598, -2598,  2170,  1951,  2173,  1612,   887,  3045,   889, -2598,
    2188,  1504,  1507, 34733,  1747, -2598,  1748, -2598, -2598, -2598,
   -2598, -2598, 46708,   890, -2598, 32593, 46708, -2598, -2598, -2598,
   46708,  2114,   905, -2598, 14043,  1750, 14043, -2598, 16563,  1744,
   -2598,  2212, 14043,  1810,  1810,   690, -2598, 28770,  1432, 22483,
   46708, 46708, 46708, -2598,  1876,   798,   459,   910, -2598,  1765,
   -2598, -2598, -2598, -2598,  2183, -2598, 28831,  1984,    57,  1970,
    1721, -2598, 14043,   154,  1834, -2598, -2598, -2598,  2220, -2598,
   -2598, 36170,  1764,  1681,  1648,  1475,  1976, -2598,  1977,  1769,
    1345, -2598, 14043,    -7, -2598, -2598, 46708, -2598,   918,  1771,
    1774, -2598, -2598, -2598,  1775, 16563,  1776, -2598, 46708,  1773,
   32593,  1917, -2598, -2598, -2598,  2144, -2598, -2598, -2598,   239,
   -2598,   239, 26316,  1974, -2598, 33775, 27278,  1116,   -99,  2076,
   -2598, -2598, -2598, -2598,    41,  1992, -2598,  1993, -2598, 32593,
   -2598, -2598,   690, 36170, -2598, -2598, -2598, -2598, -2598, 22483,
    1432,  1331, 17067, 17067,  1783,   920, -2598,  2275,  1943, -2598,
   -2598,  1789, -2598, -2598, -2598, 39523, 46708,  1414,  1414,  1432,
    1970, -2598, -2598, -2598, -2598, -2598,   197,   197,  2165, -2598,
    1851, -2598,  1681,   927, -2598, 18075,  1937,    96, 31874, -2598,
   -2598, -2598, -2598, -2598,  1796,  1799, -2598, -2598, -2598,   239,
   -2598, -2598, -2598, -2598, -2598,  2282, -2598,   123, -2598, -2598,
   -2598,  1345,  2264, -2598, -2598, -2598, -2598, -2598, -2598,  2297,
    1414,   459, -2598, -2598, -2598,  1432, 17571,  1813, -2598, -2598,
   -2598, -2598
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2598, -2598, -2598,  1709, -2598, -2598, -2598,   157, -2598,   849,
   -2598,   145,  -557,   486, -2598, -2598, -2598, -2598, -2598, -2598,
    -934,    10, -2598, -2598, -2598, -2598,   -44,   215, -2598,  -524,
   -1874,  -272, -2598, -2516, -2597, -2598, -2598,  -595, -2475, -1693,
   -2598, -1118,   132, -2598, -2135, -2598,  -615,  -988,  -802,  -985,
   -2598,   -97, -2598,  1035, -1093, -1792, -2454,  -542, -2598,  -645,
   -2598,  -290, -2598,  -588, -2598,  -710,  -598,  -628, -2406,  -944,
   -2598,  1374,  -330, -2598,   534, -2598, -2139, -2598, -2598,   522,
   -2598,  -951, -2598, -1868,   140,  -573, -2193, -2137, -1794,  -629,
     213,  -576,   192, -1742,  -945, -2598,   559, -2598,  -554, -2598,
    -520, -1866, -2598, -2598, -2598,  1155,  -679, -2598,  1205, -2598,
   -2598, -2598,    11, -2598, -2598, -2598, -2598, -2598,  -558,   495,
   -2291, -2598,   435, -2598, -2598, -2598, -2598,  -145,   190, -2598,
      89,  2162,   -20,   -12,    -8,    21,    61,  1457,  1486, -2598,
    -890,   632, -2598, -2598, -1789,  -589,   -58, -2598,   615, -1377,
   -1737,  -449,   969,  1438,  1443,  -437,  -452, -2598,  -568, -2598,
   -1461, -2598, -2598,   611,  1004, -1312, -1266, -2598,   312, -2598,
    -502,  -434, -2598, -2598, -2598, -2598, -2598,    64,  -338,  -448,
     987, -2598,  1459, -2598, -2598, -2598, -2598, -2598, -1257, -2598,
     668, -2005,   355, -1973, -1867,   103,    83, -1079,  -289,    15,
     363,  -381, -2598, -2598,  -376, -1707, -2434,  -391,  -390, -2598,
   -2598, -2598,  -462, -1125,  -704, -2598, -2598,   342,  -336, -2598,
   -2598, -2598,   966,  1047, -2598, -2598,  2077,  2291, -2598,  -574,
    2300,  -476,  -678,  1173, -1059,  1177, -1098, -1075,  -836,  1179,
    1180, -1243,  3528, -1365,  -901,     0, -2598, -2415, -1657, -2598,
   -2598, -2598,  -147, -2598,  -455, -2598,  -447, -2598, -2598, -2598,
    -496, -2323, -2598,  1111,   803, -2598, -2598, -2598, -1268, -2598,
    4057,   686, -2598, -1633,  -877,  -563,  1213,  -763, -1004, -1168,
   -2598, -2598, -2598, -2598, -2598, -2598, -1669, -1768,  -593,   771,
   -2598, -2598,   868, -2598, -2598, -2598,  -620,   974,  -551,  -845,
     776, -2598,   119,  1922, -1331, -2598,   740, -1945, -2598, -2598,
     392, -2598,   311,  -450, -1610,   992, -1029,    12, -2598,  2666,
      18,  1853,  -857, -2125, -2598, -2598,  -489, -2241,  -924, -2598,
    -625, -2598, -2598, -2598, -1180, -2598,   597, -2598, -1092, -2598,
    -321, -2598, -2598, -2136, -2598, -2598, -2598, -2598, -2598, -2598,
    -431, -2598,  -468,  -463, -2598, -2598,    16,  -792,  1255, -2598,
   -2598,   484, -2598,   901, -2598,   658, -2598,    66, -2598,  1110,
   -2598, -2598, -2598,    23,  1551,   379, -2598,  1114, -2598, -2598,
   -2598, -2598, -2598,   796, -2598, -1091, -2558,    86, -2322,  -622,
      -6, -2598, -2598, -2598,  -511, -2598, -2124
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1770
static const yytype_int16 yytable[] =
{
     480,   607,  1188,  1249,   647,  1143,   476,  1305,  1007,  1150,
      44,    54,  1147,  1256,   745,  1543,   596,  1484,   477,  1641,
     973,    61,  1485,    76,  1781,   807,   943,  1784,  1310,  1449,
    1162,  1739,   541,   931,  1194,  1516,  2155,    61,   549,   549,
     736,  1460,  1312,  1496,  2125,  2099,   582,  2130,  1456,   609,
    1265,   730,  1438,   610,  2488,  2490,  1232,  2034,  1359,  1235,
    1517,  1519,  1520,  1547,  1424,   718,  1006,   746,  1012,  2509,
    1016,  1367,  2511,   801,  1679,  1680,  1489,  2058,  2341,  2118,
     738,  2522,  2148,  2191,  2192,  2193,    83,   552,  1600,    56,
    2302,  2093,  2525,  2203, -1768, -1768,   594,  1174,  1175, -1079,
     932,   824,   484, -1104,  -725,   625,  2093,  1195,  1802,  2860,
     808, -1101, -1101,  1752,  -730,  1998,  2684,  2358,  -730,   577,
    1999,  -733,  1374,  1151,  1186,  1521,  1692, -1642,  1692,     3,
       4,  -451, -1645,   548, -1654, -1747, -1747,   824,  -733,   980,
   -1750, -1750, -1759, -1759,   925,   981, -1104, -1645,   824,  2627,
    1713,  1977,   548,   534,   599,  -454,  1805,   966,   969,  2215,
    -411,  2712,  2986,  -952,  2733,  2771, -1661, -1654, -1105,   617,
    -952, -1661, -1105, -1642, -1766, -1766, -1102, -1102,  -692,  1238,
    -705,  -720,   548,   548,  1616,  1321,   660,  1452,  2672,  1441,
    1323,   721,  1469,  1452,  1194,  1472,  1473,  2760,  1487,  1371,
    1243,   548,  1168,  2688,  2183,   824,   602,  1617,  2785,   586,
    1195,  1729,  1243,  1195,  -972,  2666,  1329,   824,  1730,  1889,
    2816,  -972,  2356,  1614,  1195,  -451,  2255,  2257,  2941,  2642,
     730,  2222,  -182,   604,   648,  2890,  1736,  -182,  2611,  3033,
    2827,  2380,   600,   604,  2829,  2862,  1169,  2661,  1331,  -454,
     545,   982,  2526,  2291,  2863,  1494,  3014,  2276,  1174,  1175,
    3024,  1511,  1495,  2845,  2638,  2931,   933,  1877,   934,  2151,
    1808,   563,   956,  1823,   603,  2428,  1714,  1778,  1321,  2399,
    2760,  1995,  1996,  1323,  1186,  1823,  2016,  2545,  1444,  1468,
    2624,  2812,  1715,  2830,   807,  1998,  2870,  1716,  2842,  2813,
    1999,   807,  -666, -1744, -1744,  1321,   649,  1474,  2367,  1329,
    1323,  1147,  1372,   962,   812,    84,  2108,  1967,   963,   544,
    1301,  2962,  1968,  2784,  2269,   813,  1406,  2682,  2045,  2046,
    1522,  1824,  1511,  1512,  1717,  2954,  1329,  1313,   730,   547,
    1257,  1331,  2584,  2145,   962,  1479,  2588,  2429,  1409,  2660,
    2963,  2109,   604,  2292,  2398,  2871,  2685,  1998,  2267,  2799,
      85,  2942,  1999,  2625,  1779,  2358,  1369,  2530,  1331,  1480,
     721,  2686,  1321,  1969,   564,   957,  2683,  1809,  1737,  3009,
    1513,  2678,  2679,   597,  -578,  2636,  2889,   964,  1650,   589,
     926,   546,  2389,  1369,  1410,   650,  1196,  2277,   620,  3034,
     623,  2148,   627,  2148,  2674,   983,  2152,  2278,  2712,  2976,
    3025,   689,  1437,  2527,  1656,   807,   807,  -451,   964,  2783,
    2864,  1170,  2639,  1878,  2093,  2828,  2093,    26,  2766,  2831,
    2430,   651,  1407,  1373,  3020,  1331,   965,  2546,  2943,  -666,
    1446,  -454,  1641,  1498,  2760,  1459,  1618,  2776,  1375,  1475,
    2612,  1513,   962,  1597,  1411,  1278,   984,  1476,  2637,   598,
     985,   927,  1943,  1499,    31,  1890,  3015,   652,  2814,  1604,
    2574,   601,  2965,  2628,   818,  2772,  1802,  2667,   721,  2987,
    -451,  1718,  2982,   661,  2993,  1944,  1946,  1693,  2955,  2060,
     986,  1818,   605,  1899,  1876,   633,   634,  1390,  2886,  1196,
    1942,  2543,  1196,  1412,  -454,    33,    61,  1791,   637,  1386,
    2616,  2101,  2539,  1196,   653,  2128,   596,   730,  2120,    34,
    -952,   732,  2408,  2133,  1435,  1436,   964,  1488,  1171,  1143,
     806,   629,  2792,  2184,  1532,   630,   587,  2488,  2490,  2199,
    2200,  1461,  1485,    35,  2760,  3016,  2409,   935,  1172,   485,
    1197,   974,   803,  2687,  1447,   611,    61,    36,   987,   480,
     480,  2644,   809,  1413,   549,   811,   609,   628,  1731,  2649,
     610,  -972,  3017,  2956,   635,   965,  1576,  2402,  1189,  1294,
    2722,   824,  2103,   480,  1912,  2726,  1913,   922,  2728,  1938,
     629,  -451, -1079,  1876,   630,  1189, -1104,  -725,  2014,   612,
    1190,  2618,  1750,   936,  2713,  2702,  2203,  -730,    44,    54,
    1544,  1545,   810,  1540,  1191,  -454,   954,  1190,  1573,    61,
   -1642,    76,  1056,   480,  1144, -1645,  1316, -1654,  2651,  2652,
    -451,  1193,  -451,  1582,  2271,  2272,  2273,  2274,  2275, -1104,
   -1645,  2279,  2280,  2281,  2282,  2283,  2284,  2285,  2286,  2287,
    2288,   945,  1602,  1231,  -454,  2888,  -454,   721,  2894, -1661,
   -1654, -1105,  2403,  2895, -1661, -1105, -1642,  1234,  1352,  1853,
    1321,  1176,  3022,  1180,  -720,  1365,  1753,   980,  2179,  1856,
     643,  2159,  1859,   981,    83,  1247,  1248,    56,  1479,  2615,
    2093,  2180,  1602,  1147,  2093,  2320,  2321,  1247,  1248,   655,
     732,  1329,  2386,  1689,  1452,   658,   730,   730,  1601,  2441,
    1301,   662,  1480,  3040,  1608,  1453,  2665,  -182,  -182,  1570,
     718,   730,  2837,  1641,  1945,  1947,  1948,  1654,  2404,   650,
    2405,   807,    26,  1331,  1462,  1552,   480,   487,   980,  1602,
    1189,   736,  1564,  1143,   981,  1650,  1650,  1602,  1568,  1147,
    1650,  1677,  1313,   659,  2509,  2617,  1347,  1348,  1349,  1350,
    1351,  1352,  1190,  1461,  2960,   651,  2670,  2387,  1409,    31,
    1920, -1742, -1742,  1574,  2884,  2011,  2012,  2013,  2014,   801,
    1960,  1522,  1189,  1565,  1461,  1349,  1350,  1351,  1352,   982,
    1962,  1452,  1650,  1650,  1184,  1185,  1459,   638,   488,   806,
    2307,  2211,  1455,  2238,  1190,   663,   806,  1056,   732,  2242,
      33,  2488,  2490,   980,  1410,   664,  2679,  1310,  1191,   981,
     561,  1461,  1241,  1252,   480,  1242,   579,  2038,  1578,    61,
    1252,  2769,  2102,   824,  1845,  2009,  2010,  2011,  2012,  2013,
    2014,  1701,  1695,  1205,  1206,   730,   721,   721,   653,  2800,
     982,  1765,  1852,   480,  2079,  2080,   639,  1189,   640,  1681,
    1305,   721,    36,  1927,   596, -1743, -1743,  1485,  1702,  1211,
    1212,  2194,  1461,   480,   480,   480,   618,   480,   480,  1190,
    2156,  1483,  2131,  1815,  1949,  3035,  1950,   824,  2316,  1952,
    1461,   742,   929,  1193,  2715,  2594,   487,  1143,  2597,  2716,
    2801,   480,  1490,  1803,  1804,  1872,  1873,  1874,  1315,  2802,
    1851,  2128,  1211,  1212,   629,    87, -1079,  1318,   630,  2093,
     806,   806,  -500,  1412,   976,   982,  2185,  -500,  2093,  1862,
     548,  1366,  2122,  2093,  1869,  1461,  2093,   814,  2803,  1493,
       3,     4,  1376,   983,  1252,  1252,  1398,  1399,   629,  1405,
     610,   610,   630,   610,   480,  2093,  1462,   488,   480,   480,
   -1745, -1745,  1159,  1161,  1163,  1164,   816,   954,  2223,   480,
     491,   817,   492,  2230,  2866,   730,  1924,  1462,   980,  1215,
    1216,  1703,   818,  1413,   981,   721,  1704,   732,  1854,  1827,
    2182,  1705,  2157,  1857,  1010,  1898,  -500,   495,   985, -1746,
   -1746,   629,   534,   504,   983,  1368,   924,   533,  2186,  2804,
    1384,   744,  1056,  1385,  1462,   554, -1748, -1748,  1459,  1056,
    1178,  2805,  1215,  1216,  1486,   819,   593,   593,  1011,  1966,
     641,   980,   642,  1970,  1766,  1971,   939,   981,  2093,  1459,
      92,  1056,  1187,   483,  2072,  -500,  2073, -1749, -1749,   532,
    2635,   920,   921,  2190,   923,  1014,   930,   980,    26,   985,
     562, -1751, -1751,   981,   575,  1462,  2026,   947,  2028,  2029,
    2093,   807,  1596,  1229,  -463,  1597,  1459,    88,   730,   983,
     621, -1752, -1752,  1462,   807,    89, -1753, -1753,  -463,  1015,
     982,  1516,  1936,  -463,   946,    31,   987,  2027,  1650,  1650,
    1650,  1650,  1650,    26,  2826,  1650,  1650,  1650,  1650,  1650,
    1650,  1650,  1650,  1650,  1650,   721,  1517,  1519,  1520,   949,
    1641,    90,  2826,   730,  2170,   950,  2172,  1459,  1462,   491,
    1814,   492,   952,  1706,   985,  2048,    33,  1973,  1598,   953,
      31,  1599,  -463,   982,  1707,  1459,   983,  2556,  1144,   960,
      34,  2926,  2167,   993,  2169,   977,   495,   987,  1305,  1650,
    1650,  2097,  -463,  2074,   986,  2075,  2093,  2251,    91,   982,
     480,  2432,   994,   975,    35,  2439,   732,   732,  1915,  2698,
     978,    33,  2330,  2331,  2332,  2333,  1178,  2680,    36,   979,
    1459,   732,   991,  2396,  1761,    34,  1886,  1234,  2395,  1887,
    2397,  2158,  2093,  2159,  1187,  1928,  1934,  1956,  1599,  1935,
    1957,  -463,  2806,  2506,  2431,  2807,  2440,   992,   721,    35,
    -463,  3031,  2173,   995,   602,  2174,  2910,  2177, -1754, -1754,
    2178,  2160,   987,  1767,  1009,   959,   806,   961,  -501,  1383,
    3010,  3011,  2232,  -501,   983,  1597,  2376,  2381,  2517,  2377,
    2382,  1887,  1144,  2994,  2240,  2241,  2537,  2412,   803,  2538,
   -1755, -1755,    61,   721,  1394,   480,  2208,   480,  2378,  1013,
     480,   480,  3012,  2589,  2557,  2592,    26,  1599,   633,   634,
     480,  2218,   480,   480,   480,   480,   480,   480,   480,    61,
    1440,   637,   603,  3038,  1148,  1860,  1149,   983,  2703,   985,
    1623,  1599,  2093,  1467,  2791,  2415,  1154,  1887,   480,  2050,
     480,  1152,  -501,    31,   996,   732,   480,   480,   480,   480,
     480,   480,  1144,   983,  1491,  1156,   480,   480,  3039,  1861,
    2608,   480,  1582,  1165,  2817,   480,  2051,  1157,   480,   480,
     480,   480,   480,   480,   480,   480,   480,  2819,  1867,   480,
    1599,  1172,   985,  1176,    33,  1167,   480,   635,   535,  1056,
    -463,  -501,  1144,  2822,   487,   997,  2823,  1179,    34,  2839,
     604,  2843,  2840,   998,  2840,  1180,   993,  2482,   985,  2701,
    2858,   480,  1868,  2859,  2412,   999,  2900, -1150,  2901,  2859,
    2413,  1599,    35,  1754,  2128,   994,    26,   987,  1183,    26,
    1182,   936,   480,  2414,  2913,    26,   536,  2840,   986,  2934,
   -1756, -1756,  2935,   480,   480,  1199,  1000,  2966,  1602,  3003,
    2967,  1200,  2840,  1739,   629,   488,  3021,   949,   630,  2859,
    2349,  1202,  2415,    31,  2416,   730,    31, -1757, -1757, -1758,
   -1758,  1230,    31,  2619,  1233,   732,   995,  2433,   807,  1827,
     987,  1144,  1236,  1144,  2052,  2434,  2439, -1760, -1760,  2053,
    2774,  1237,  2246,  1002,  2350,  2419,  1239,  2297,  1524, -1761,
   -1761, -1762, -1762,  1258,    33,  1240,   987,    33,  1268,  1897,
    2590,  1271,  1769,    33,  1269,  1003,  2579,  1273,    34,  -696,
    2352,    34,  1056,   723,   657,   480,   480,    34,   480,  -703,
    2579,  1583,  1602,  1276,   730,  1005, -1763, -1763,  2420,  1277,
     605,  1278,    35,  2435,  1650,    35,  1144,  1279,  2263,  2417,
    1280,    35,   730,   741,  2421,    36,    36,  1056,  1282,    36,
   -1764, -1764,  2818,   480,  -578,    36,  2270,   996, -1765, -1765,
   -1767, -1767,  -579,  2363, -1769, -1769,  1584,  -693,   732,   730,
    -694,  1572,  2977,  1845,  2978,  2491,   730,  1501,  1502,  -552,
    -552,  1213,  1214,  2293,  1215,  1216,  -697,  2535,  -556,  -556,
    2298,  -695,  1585,  1283,   724,   721,   806,  -555,  -555,  1284,
     730,  1298,   593,  1286,  1380,  1382,  1287,  2418,   997,   806,
    1586,  1056,  2419,   732,  1587,  1288,   998,   491,   480,   492,
    1252,  2054,  1289,   480,  1965,  2505,  1290,  1291,   999,  2348,
    2436,  2354,  2055,  1252,  1311,  2983,  1588,  1292,  1293,  1589,
    1916,   494,  2422,  1294,   495,  2536,  1314,  1357,   596,  2423,
    2647,  1360,  3030,  1362,  1590,  2420,  1363,  1378,  1387,  1000,
     480,   480,   480,  1650,   721,   480,  1388,  1391,  1397,   965,
     963,  2421,  1431,   480,   480,   480,   480,  1433,  1457,  1439,
    1458,  1459,   721,   480,  1464,  1482,  1465,   480,  2128,  1466,
     480,  1470,   723,  1477,  1747,  1497,  1478,  1492,   596,  1504,
    2789,  1505,  1509,  1514,  1515,  2349,  1002,   480,   480,   721,
    2512,  1522,   480,  1523,  1525,  1756,   721,  1758,  1529,  1528,
    1531,   824,  1533,   730,  1539,  1546,   480,  1555,  1003,   480,
    1548,   480,  2348,  1549,  1556,  1569,  1559,  2485,  1604,  2350,
     721,  1560,  1561,  1562,  1609,  1595,  1591,  1321,  1005,  1669,
    2437,   480,  1671,  2438,  1592,  2351,  1673,  1675,  1674,  1676,
    1691,  1698,   480,  1147,  1807,  2352,  2251,   596,  2091,  2422,
    1709,  1712,  1710,   724,  1733,  1734,  2423,   480,  1602,  1748,
     477,  1763,  1755,  2091,  1762,  2656,  2657,   730,  1770,   603,
    1188,  1782,   633,   634,  1792,   477,   480,  1593,  1794,  2353,
     723,  2534,  1793,    61,  1795,   637,  1796,  1797,  2349,  1821,
    1813,   480,   480,  1816,  1820,  1822,   604,  1884,  1650,  1888,
    2723,  1892,  1900,  1902,  1903,  1917,  1901,  1921,  1922,  1923,
     480,  1925,  1926,  1929,  1930,  1951,  1953,  1931,  1932,  1933,
    1954,  1940,  2350,  1893,  1895,  1955,  1941,  1963,  1144,  1144,
    1144,  1974,  1986,  2023,  1975,  2049,  2044,  1459,  2351,   730,
    1981,  1983,  1984,   721,  1991,  2056,   823,  1985,  2352,  1998,
    1987,   635,  1988,  1990,  1999,  2000,  2001,  2002,  2176,   478,
    2482,   724,  1994,  1305,   505,  2065,  2354,  2017,   505,  1056,
    2018,  2024,  2031,   550,   550,   553,   505,   558,  2042,  2066,
     558,  2068,  2353,   558,   584,  2069,  2070,   505,   505,  2095,
    2105,  1320,  2107,  2114,  1321,  2119,  2121,  2123,  -557,  1323,
    -558,  2134,  2135,  2202,  2137,   732,  2138,   721,  2139,  2141,
    2143,  2144,  2147,  2166,  2168,   480,  2181,  2187,  2214,  2188,
    2195,  2189,  2196,  2206,  2633,  1329,  2207,  2198,  2197,  2210,
    2220,  2224, -1770,   558,  2225,  2228,  2231,  2221,   593,  2237,
     584,   505,   584,   584,   584,  2235,  2247,  2254,  2244,  2245,
    2262,  1144,  1485,   806,  2724,  2020,  1998,  1331,  2019,   723,
    2294,  2295,  2296,  2327,  2300,  2077,  2312,   730,  2299,  2354,
    2314,   480,  2328,  2339,   732,  2315,  2365,  1252,  2318,   721,
     480,  2655,  2252,   480,  2253,  2347,   480,  2370,  2258,  2259,
    2373,  2361,   732,   480,   480,   480,   480,   480,   730,  2375,
     480,   480,   480,   480,   480,   480,   480,   480,   480,   480,
    2326,  2371,  2777,   480,   480,   596,  2379,   480,  2388,   732,
    2390,  2394,  2407,  2400,   480,  2961,   732,   807,  2427,   480,
    2443,  2520,  2401,  2502,  2003,  2503,  2524,  2504,   480,  2508,
     724,   480,  2515,   480,  1916,  2533,   596,  2544,   993,  2516,
     732,   480,  2531,  2076,   480,   480,  2004,  2541, -1770,   480,
     480,  2519,  2547,   596,  1887,  2580,  2548,   994,  2549,  2551,
    2550,   730,  2565,  2577, -1770,   480,  2576,   480,  2583, -1770,
    2585,  2091,  2586,  2091,  2593,  2598,  2600,  2601,  2614,   480,
    2603,  2599,  2620,   477,  2621,   477,  2622,  2626,  2630,   480,
    2631,  2640,  2632,  2643,  2645,  2646,  2650,   721, -1101, -1742,
    2663,  2664,  2673,  2662,  2671,   480, -1770,  2675,   995, -1743,
   -1744, -1745, -1746, -1747, -1748, -1749,  2005, -1751, -1752, -1753,
   -1754, -1755, -1756, -1757,  2482, -1758,  2689, -1760,   721, -1761,
   -1762,  2690,  2869, -1763,  2692, -1764, -1765,  2676,   723,   723,
     823, -1766,  2696,  1998, -1767, -1768, -1769, -1102,  1999,  2000,
    2001,  2002,    57,   723,  2695,  2699,  2700,  2727,  1144,  2750,
    2714,  1340,  1144,  2489,  1144,  2732,  2309,  2754,    57,  2756,
    2762,  2764,  2765,  2767,  2779,  2435,   730,  2780,  2781,  2788,
    2790,  2795,    57,  2796,  2810,  2797,  2811,  2487,   595,  2820,
    2485,  2824,  2832,  2205,  2950,  2833,  2852,  2834,  2848,   996,
    2836,   721,  2844,  2216,  2217,  2219,  2846,  2855,  2860,  2874,
     993,  2878,  2202,   608,   730,  2639,  1566,  2880,  1567,   724,
     724,  2882,  2903,  2885,  2236,  2891,  2933,   732,  2896,   994,
    2897,  2898,    57,  2902,   724,  2906,  2918,  2907,  2915,  2919,
    2921,  2932,  2936,  2939,   480,   730,  2944,  2952,   730,  2937,
     997,  2951,  2953, -1770,  1572,  2957,  2958,  2959,   998,  2841,
    2968,  2567,  2841,  2969,  2970,  2972,  2975,  2985,  2988,  2990,
     999,  2914,  3002,  2916,  3004,  3005,  2986,   723,  3007,  2987,
     995,   823,  2881,  3023,  1998,  3028,  2510,  3029,  3036,  1999,
    2000,  2001,  2002,   480,   480,  3032,  3037,   951,   480,   732,
    2869,  1000,  3041,   480,  1847,  2164,   480,   480,  2442,  2446,
    2528,   480,  2529,  2006,  2007,  2008,   721,  2009,  2010,  2011,
    2012,  2013,  2014,  2610,  2383,  2927,  2755,  2979,  2948,   584,
    2653,   480,  3019,   645,  2775,   480,   646,  2091,  2518,  2991,
    2984,  2091,  3013,  2809,  1448,   505,  2146,  2171,  1002,   477,
    2004,  2523,  2981,   477,   721, -1770,  2411,   480,   724,  2989,
    2447,  2928,  1347,  1348,  1349,  1350,  1351,  1352,  2142,  2980,
    1003,   996,   646,   505,   505,  1563,  2204,  1542,  2605,  2334,
    2335,  2336,  2248,  2697,  2507,   721,  2909,  2126,   721,   550,
    1005,   480,  2923,  1389,  1370,  1812,  1428,  3008,  2136,   480,
    1427,  2369,  1789,  2971,  2917,  2854,  1627,   723,   917,   917,
     558,   558,  1811,   558,  1628,  1629,  1630,  1631,   480,  1432,
    2005,  2104,   997,  2604,   584,  1819,  2591,   732,  2342,  2838,
     998,  2575,  2905,   505,  2338,  1828,  2904,  1831,  2391,  2911,
    1842,  2912,   999,   487,   584,  1613,  1846,  2753,  1848,  1615,
     730,  1619,  1620,  2973,  2607,  2609,   584,  3001,  2489,  2129,
    1855,  1738,  2974,  1978,  2485,  1858, -1150,  2040,  1883,  1863,
    1864,  1865,  1866,  1000,  1870,  1871,  1603,  2063,   919,  2061,
    2368,  2098,  2606,  2209,  2899,  1757,  1972,  1575,   724,  2384,
    1759,  2004,     0,  1392,   584,   584,   584,   584,     0,     0,
       0,     0,     0,     0,   488,     0,     0,     0,     0,     0,
     723,     0,  2514,     0,     0,     0,     0,     0,     0,     0,
    1002,     0,   806,     0,  2677,     0,     0,     0,   480,     0,
       0,   732,     0,     0,   480,     0,     0,     0,     0,     0,
       0,     0,  1003,   480,   480,     0,  1252,   480,  1572,     0,
       0,     0,     0,     0,     0,   723,     0,     0,   489,     0,
     480,  2005,  1005,     0,     0,     0,  2091,     0,     0,   480,
       0,     0,     0,     0,   480,  2091,     0,   480,   477,     0,
    2091,     0,     0,  2091,   480,   480,     0,   477,     0,     0,
     721,   724,   477,     0,   726,   477,   480,     0,   480,  2681,
       0,     0,  2091,     0,     0,     0,     0,     0,     0,     0,
       0,  2752,     0,     0,   477,     0,   480,  2006,  2007,  2008,
       0,  2009,  2010,  2011,  2012,  2013,  2014,     0,   490,     0,
       0,  2570,  2571,  2572,  2573,     0,   724,    57,     0,     0,
       0,     0,     0,     0,     0,     0,  2489,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1543,
       0,  1270,     0,     0,     0,     0,     0,     0,     0,     0,
    2487,     0,     0,     0,     0,     0,   491,     0,   492,   480,
   -1545,     0,     0,   480,   732,  2091,  2127,    57,   595,     0,
       0,     0,     0,     0,   493,     0,     0,   477,     0,     0,
     494,     0,     0,   495,     0,     0,     0,   480,     0,     0,
     596,   480,     0,     0,     0,   732,     0,  2091,   732,     0,
       0,     0,  2641,     0,   480,     0,     0,     0,  1309,   477,
     608,     0,     0,     0,     0,     0,     0,     0,   480,     0,
       0,   480,     0,     0,     0,     0,     0,     0,     0,     0,
      57,  1144,  2793, -1543,     0,     0,   480,     0,  2006,  2007,
    2008,     0,  2009,  2010,  2011,  2012,  2013,  2014,     0,     0,
       0,   584,     0,   726, -1545,  2681,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   505,
     505,     0,     0,     0,     0,   584,   584,  1396,  2887,     0,
       0,     0,     0,     0,     0, -1543,     0,   480,   727,     0,
       0,     0,     0,  2091,     0,     0,     0,   729,     0, -1543,
       0,     0,   584,  1451, -1543,   477, -1545,     0,   480, -1543,
     480,     0,   480,     0,     0,   584,   480,     0, -1543,     0,
   -1545,     0, -1543,   480,     0, -1545,     0,     0,     0,  2091,
   -1545,     0,   584,     0,     0,     0,   584,     0,     0, -1545,
       0,   477,     0, -1545,     0,     0,   480,   723,     0,     0,
       0,     0,     0, -1543,     0,  2893,     0,     0,     0,     0,
       0,   726,     0,  1632,  1633,  1634,   480,  1635,  1636,  1637,
    1638,  1639,  1640, -1543, -1545,     0,     0,  2227,   823,   480,
       0,  1998,     0,     0,     0,     0,  1999, -1770, -1770, -1770,
       0,     0,     0,     0, -1545,     0,     0,     0,     0,  1144,
    2489,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2924,     0,   723,     0,     0,     0,
       0,     0, -1543,   480,  2487, -1543,   480,   480,   724,  2091,
       0, -1543,     0,     0,   723,     0,     0,     0,     0,     0,
      57,   477,     0, -1545,     0,     0, -1545,     0,     0,     0,
       0,     0, -1545,     0,     0,  2794,     0,     0,     0,   480,
       0,   723,     0,     0,     0, -1543,     0,   727,   723,     0,
       0,     0,  1508,  2815,     0,     0,   729,     0,  1281,     0,
     584,     0,     0,     0,     0,     0, -1545,     0, -1543,  1537,
       0,     0,   723,   823,     0,     0,  1998,   724,     0,     0,
     480,  1999,  2000,  2001,  2002,     0,     0,     0,     0, -1545,
       0,  2992,     0,     0,     0,   724,  1303,     0,     0,  2310,
       0,     0,  1554,   823,     0,     0,  1998,     0,     0,     0,
       0,  1999,  2000,  2001,  2002,     0,     0,     0,     0,     0,
     726,     0,   724,     0,  2077,     0,  2865,     0,     0,   724,
       0,     0,     0,   646,   646,     0,   505,   505,     0,   505,
     646,     0,     0,   584,     0,  2077,     0,     0,     0,     0,
       0, -1543,     0,   724,     0,   727,  2892,     0,     0, -1543,
       0,     0,     0,     0,   729,     0,     0,     0, -1559,     0,
     608,   608, -1545,   608,     0,     0, -1543,     0, -1543, -1543,
   -1545,  2392,     0,     0,     0,     0,     0,     0,     0,     0,
    1643,     0,     0,     0,     0,   723,     0, -1545,     0, -1545,
   -1545,  1668,     0,     0,     0,     0,     0,     0,  2444,     0,
       0,     0,     0,     0,     0, -1543,     0,     0, -1543, -1543,
   -1543,     0,     0,  2492,  2493,  2494,  2495,  2496,  2497,  2498,
    2499,  2500,  2501,     0,   646,     0, -1545,     0,  2005, -1545,
   -1545, -1545,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   723,
       0,     0, -1559,     0,     0,   917,   584,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   724,     0,     0,     0,
       0,     0,  1320,  2004,     0,  1321,     0,   584,  1320,   584,
    1323,  1321,     0,     0,     0,     0,  1323,     0,  1771,     0,
    1777,     0,     0,     0,     0,     0,     0,     0,     0,   726,
     726,     0,     0, -1770, -1559,     0,  1329,     0,     0,     0,
       0,     0,  1329, -1770,   726,     0,     0,     0, -1559, -1770,
       0,   723,     0, -1559,   727,     0,   584,     0, -1559,     0,
     724,  1566,     0,   729,     0,  1451,   505, -1559,  1331,     0,
       0, -1559,     0,  2005,  1331,     0,   505,  1829,   505,  1833,
       0,   505,     0,     0,     0,     0,     0,   505,     0,   505,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     646,   505, -1559,  2005,     0,   646,   505,     0,     0,     0,
     505,   505,   505,   505,     0,   505,   505,     0,     0,     0,
       0,     0, -1559,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   724,     0,     0,   584,   584,  1896,  2047,     0,
       0,     0,     0,     0,  2057,     0,     0,     0,     0,     0,
       0,     0,  1911,     0,     0, -1770, -1770, -1770,     0,  2009,
    2010,  2011,  2012,  2013,  2014,     0,     0,     0,   726, -1770,
       0, -1559,     0,    57, -1559, -1770,  2634,     0,     0,   723,
   -1559,     0,     0,     0,     0, -1770,     0,     0,     0,     0,
   -1770, -1770,     0,     0,     0,     0, -1770,     0,     0,     0,
      57,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     723,     0,     0,     0, -1559,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1770,     0,     0,
       0,     0,     0, -1770,     0,     0,     0, -1559,     0,     0,
       0,  1251,     0,   727,   727,     0,     0,     0,  1251,     0,
       0,     0,   729,   729,   823,     0,     0,  1998,   727,     0,
     724,     0,  1999,  2000,  2001,  2002,  1699,   729,     0,     0,
    2006,  2007,  2008,     0,  2009,  2010,  2011,  2012,  2013,  2014,
    2559,     0,  1340,   723,     0,     0,     0,     0,  1340,     0,
     505,   724,     0,  2077,     0,     0,     0,  1309,   726,     0,
    2006,  2007,  2008,     0,  2009,  2010,  2011,  2012,  2013,  2014,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1559,     0,     0,     0,     0,    57,     0,     0, -1559,     0,
       0,     0,     0,  1643,     0,  1317,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1559,     0, -1559, -1559,     0,
       0,     0,     0,     0,     0,  1203,  1204,     0,     0,     0,
    1251,     0,  1251,  1251,   724,   584,     0,     0,     0,     0,
       0,  2094,     0,     0, -1770,     0,     0,     0,     0,     0,
   -1770,     0,   727,     0, -1559,     0,  2094, -1559, -1559, -1559,
    2113,   729,     0,  2116,     0,  1777,     0,     0,   723,     0,
       0,   726,     0,     0,     0,  2778,     0,     0,     0,     0,
       0,  1320,     0,     0,  1321,     0,     0,     0,     0,  1323,
    1324,  1325,  1326,     0,     0,  2786,  2787,     0,     0,     0,
    1251,  1205,  1206,  1251,  1251,     0,   723,  1327,     0,     0,
       0,     0,  2798,     0,     0,  1329,   726,  1508,     0,     0,
       0,     0,  1330,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    57,  2004,     0,     0,   723,     0,     0,
     723,     0,     0,     0,     0,     0, -1770,  1331,     0,   724,
       0,     0, -1770,  1347,  1348,  1349,  1350,  1351,  1352,  1347,
    1348,  1349,  1350,  1351,  1352,     0,  1207,  1208,  1209,  1210,
    1211,  1212,     0,     0,  1213,  1214,     0,     0,     0,     0,
    1508,     0,   727,     0,     0,   584,     0,   724,  2856,     0,
       0,   729,     0,     0,  1508,   584,   584,   584,     0,     0,
       0,     0,     0,     0,  2005,     0,     0,     0,   505,     0,
       0,     0,     0,     0,     0,     0,   584,     0,   724,     0,
       0,   724,     0,     0,     0,     0,     0,     0,  2243,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   646,     0,   584,     0,  1332,     0,
    1303,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1508,  1508,   823,  1333,     0,  1998,     0,     0,  1334,
       0,  1999,  2000,  2001,  2002,     0,     0,     0,     0,     0,
    1215,  1216,     0,     0,  1643,   727,  1541,     0,     0,  2560,
       0,  1335,  1336,     0,   729,     0,     0,  1550,     0,  1551,
    1303,     0,     0,     0,     0,     0,  1337,     0,  1557,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1699,     0,
       0,     0,     0,     0,     0,  1558,     0,     0,     0,     0,
     727,     0,     0,     0,  2067,     0,     0,     0,     0,   729,
       0,     0,   723,     0,  1338,     0,     0,  1339,     0,     0,
    2084,     0,     0,  1577,  1579,     0,     0,     0,     0,     0,
       0,  1340,     0,     0,    57,  2084,     0,     0,     0,   595,
       0,   584,   584,   584,   478,     0,  2094,  2346,     0,     0,
       0,     0,  2346,  2360,     0,  1610,  1611,     0,     0,  1624,
    1625,     0,     0,  1217,  1218,     0,     0,     0,     0,     0,
       0,  2006,  2007,  2008,     0,  2009,  2010,  2011,  2012,  2013,
    2014,     0,  1777,  1219,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   724,     0,     0,     0,     0,   726,     0,
     584,     0,   505,     0,     0,     0,  1508,  1451,  1508,     0,
    1537,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1342,     0,     0,     0,     0,     0,   505,
       0,  2445,     0,     0,     0,     0,     0,     0,  1203,  1204,
       0,     0,     0,  2004,   505,   505,   505,   505,   505,   505,
     505,   505,   505,   505,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   726,     0,  1911,
       0,     0,     0,     0,   584,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1451,   726,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1801,  1801,  1320,  1537,     0,
    1321,     0,     0,   900,   900,  1323, -1770, -1770, -1770,     0,
     584,     0,   726,  2005,  1205,  1206,     0,  1508,     0,   726,
       0,     0,     0,     0,     0,  1343,     0,    57,  1344,  1345,
    1346,  1329,  1347,  1348,  1349,  1350,  1351,  1352,  1330,     0,
       0,     0,     0,   726,     0,     0,     0,  1251,     0,     0,
       0,     0,     0,     0,     0,     0,  1320,  1251,     0,  1321,
    1251,     0,   505,  1331,  1323,     0,  1051,  1058,  2552,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1207,
    1208,  1209,  1210,  1211,  1212,     0,     0,  1213,  1214,     0,
    1329,  2569,     0,   584,   584,   584,   584, -1770,     0,     0,
    2346,  2360,     0,  2346,     0,     0,  2578,  1303,     0,     0,
    2094,     0,   727,     0,  2094,     0,     0,     0,     0,     0,
    2596,   729,  1331,     0,     0,     0,     0,     0,     0,     0,
       0,  1937,  1939,     0,     0,     0,   917,     0,  1303,     0,
    2113,     0,     0,     0,     0,  1777,     0,     0,     0,     0,
       0,  1643,     0,  2337,     0,  2340,     0,  1451,  1251,     0,
       0,     0,     0,  1508,  1332,     0,   726,     0,     0,     0,
       0,  1251,     0,     0,     0,     0,   646,   505,     0,     0,
    1333,   727,     0,     0,   584,  1334,     0,     0,     0,     0,
     729,     0,  2319,  1215,  1216,     0,     0,     0,     0,   727,
       0,  2654,     0,     0,     0,     0,     0,     0,   729,     0,
    2006,  2007,  2008,     0,  2009,  2010,  2011,  2012,  2013,  2014,
       0,     0,  1337, -1770,  1320,     0,   727,  1321,     0,     0,
     726,     0,  1323,   727,     0,   729,     0,     0,     0, -1770,
       0,     0,   729,     0, -1770,     0,     0,     0,     0,     0,
       0,  1051,     0,     0,     0,     0,     0,   727,  1329,     0,
       0,     0,     0,     0,     0, -1770,   729,   980,  1274,     0,
       0,  1508,     0,   981,     0,     0,     0,  1340,     0,    57,
     993, -1770,  1911,     0,     0,     0,     0,     0,     0,     0,
    1331,     0,     0,     0,  2693,     0,     0,  1285,     0,   994,
       0,     0,   726,    57,     0,    57,  1217,  1218,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1295,  1296,  1297,
       0,     0,  1304,     0,     0,     0,  1612,     0,   548,  2100,
    2709,     0,     0,     0,     0,     0,  1340,     0,     0,   478,
    2346,     0,     0,  2720,     0,  1361,   505,     0,  2094,     0,
     995,     0,     0,  2094,     0,     0,  2094,     0,  2731,     0,
    2322,  2734,     0,  2132,  2132,     0,     0,     0,     0,  1342,
       0,     0,     0,     0,     0,  2761,     0,     0,     0,   982,
     727,     0,     0,     0,     0,     0,     0,     0,     0,   729,
       0, -1770,     0,     0,     0,     0,     0,     0,  1404,     0,
       0,     0,  1418,  1423,     0,     0,   505, -1770,     0,     0,
       0,     0, -1770,     0,     0,     0,     0,     0,     0,  2084,
       0,     0,     0,  2084,     0,     0,   505,   505, -1770,     0,
     726,     0,     0,  1203,  1204,     0,     0,   584,     0,  1451,
       0,   996,     0,   505,   727,     0,     0,    57,    57, -1770,
       0,     0,     0,   729,     0,   584,  1051,     0,  2761,     0,
       0,   726,     0,  1051,     0,     0,     0,     0,     0,     0,
       0,  1343,     0,     0, -1770, -1770, -1770,   505,  1347,  1348,
    1349,  1350,  1351,  1352,     0,  1051,     0,     0,     0,     0,
    2094,     0,   997,     0,     0,  2734,     0,     0,     0,     0,
     998,     0,     0,     0,  1340,  2239,     0,     0,     0,  1205,
    1206,     0,   999,  2851,     0,     0,   727,   917,     0,   505,
       0,     0,     0,     0,     0,   729,     0,     0,   584,     0,
   -1770,     0,     0,   983,   726,     0,     0,  1347,  1348,  1349,
    1350,  1351,  1352,  1000,   646,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   584,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1207,  1208,  1209,  1210,  1211,  1212,
       0,     0,  1213,  1214,  1001,     0,   478,     0,   985,     0,
    1002,     0,    57,     0,     0,  2908, -1770,     0,     0,   505,
       0,     0,     0,  2731,     0,     0,     0,     0,     0,     0,
       0,     0,  1003,     0,     0,     0,     0,     0,  1004,     0,
       0,     0,  2761,   646,   646,   646,     0,     0,     0,     0,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   727,     0,     0,     0,     0,   726,
       0,     0,     0,   729,  1451,     0,     0,  2084,     0,     0,
       0,     0,  2084,     0,     0,  2084,     0,     0,     0,  2731,
       0,     0,     0,     0,     0,   727,     0,     0,     0,     0,
       0,  2851,     0,     0,   729,     0,   987,   726,  1215,  1216,
       0,     0,     0,  1320,     0,  1777,  1321,     0, -1770,     0,
    1322,  1323,  1324,  1325,  1326,  1347,  1348,  1349,  1350,  1351,
    1352,     0,     0,     0,  1607,     0,  1451,     0,   726,  1327,
       0,   726,  2761,     0,  1626,     0,  1644,  1329,     0,  1655,
    1658,  1663,  1666,     0,  1330,     0,     0,     0,  2720,   646,
       0,     0,     0,     0,     0,    57,     0,     0,   727,     0,
       0,     0,     0,     0,  1678,  1251,     0,   729,     0,  1331,
    1682,  1683,  1684,  1685,  1686,  1687,     0,     0,    57,     0,
    1696,  1697,     0,     0,     0,  1708,     0,     0,     0,  1711,
       0,     0,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,
    1727,     0,     0,  1728,     0,     0,     0,     0,     0,  2084,
     900,  1217,  1218,  1051,     0,     0,     0,     0,     0,     0,
       0,     0,  1303,  1320,     0,     0,  1321,     0,     0,     0,
       0,  1323,     0,     0,     0,  1760,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1329,     0,     0,
       0,     0,     0,     0, -1770,     0,     0,  1296,  1297,     0,
    1332,     0,     0,   727,     0,     0,     0,  1355,    57,     0,
       0,     0,   729,     0,     0,     0,  1333,     0,     0,  1331,
       0,  1334,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   727,     0,  1335,  1336,     0,     0,     0,  1355,     0,
     729,     0,     0,     0,     0,     0,     0,     0,  1337,     0,
       0,     0,     0,   726,     0,     0,     0,    57,     0,     0,
       0,     0,   727,     0,     0,   727,  1051,   -39,     0,  1880,
    1881,   729,  1882,     0,   729,     0,     0,     0,     0,  2323,
       0,     0,     0,     0,     0,     0,  1338,     1,     0,  1339,
       0,     0,     0,     0,     0,     0,     0,     2,     0,     3,
       4,  1051,     0,  1340,     0,     0,  1341,     0,     0,     0,
   -1770,     0,     0,     0,     0,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     6,     0, -1770,     0,     0,     0,
       0, -1770,     0,     0,     0,     0,     7,     0,  1251,     0,
       0,     0,     0,  1251,     0,     0,     0,     8,  1355,     0,
       0,     0,     0,     0,    57,  1355,     0,     0,     0,     9,
       0,    10,     0,     0,     0,  1051,     0,     0, -1770,     0,
       0,     0,  1976,     0,     0,     0,     0,  1982,     0,    11,
       0,     0,     0,     0,     0,     0,  1577,  1579,     0,     0,
       0,     0,     0,    12,     0,  1342,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,    14,
       0,     0,     0,     0,     0,     0,  1997,    15,     0,    16,
      17,     0,     0,  1340,     0,     0,     0,  1663,     0,  1663,
    1663,     0,     0,    18,     0,     0,     0,  2036,     0,     0,
       0,  2039,     0,     0,  2041,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   980,     0,     0,
       0,     0,    19,   981,     0,     0,     0,   727,     0,     0,
     993,     0,     0,     0,     0,     0,   729,    20,     0,     0,
    2059,     0,     0,  2062,     0,  2064,     0,     0,     0,   994,
       0,     0,     0,     0,     0,     0,     0,  1343,     0,     0,
    1344,  1345,  1346,    21,  1347,  1348,  1349,  1350,  1351,  1352,
       0,     0,     0,     0,     0, -1770,     0,  1989,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1404,     0,     0,     0,     0,     0,     0,  1577,  1579,     0,
       0,     0,     0,     0,     0,  1423,  1726,     0,  1251,   982,
    1320,  1355,     0,  1321,     0,     0,     0,     0,  1323,     0,
      22,     0,  1355,    23,  2140,     0,  1651,     0,     0,     0,
       0,     0,  1355,  1355,  1355,     0,     0,     0,     0,     0,
       0,  1355,     0,     0,  1329,     0,     0,     0,     0,     0,
       0, -1770,    24,     0,     0,     0,     0, -1770,     0,     0,
       0,    25,     0,     0,  1347,  1348,  1349,  1350,  1351,  1352,
       0,   996,     0,     0,     0,    26,  1331,     0,     0,     0,
       0,     0,    27,  1051,     0,     0,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,  1355,     0,
       0,     0,     0,     0,     0,  1319,     0,     0,    30,     0,
    1320,     0,    31,  1321,     0,     0,     0,  1322,  1323,  1324,
    1325,  1326,   997,     0,     0,     0,     0,     0,     0,  2234,
     998,     0,     0,     0,     0,     0,  1327,     0,     0,  1328,
       0,  1355,   999,     0,  1329,     0,  2563,     0,    32,     0,
       0,  1330,     0,    33,     0,  1355,     0,     0,     0,     0,
    1355,     0,     0,   983,     0,     0,     0,    34,     0,     0,
       0,     0,     0,  1000,     0,     0,  1331, -1770,     0,     0,
       0,     0,     0,     0,     0,  2261,     0,     0,     0,     0,
       0,    35,     0, -1770,  2265,     0,     0,  2266, -1770,     0,
    2268,     0,     0,     0,     0,    36,     0,     0,   -39,     0,
       0,     0,     0,     0,  1849,     0,     0,     0,   985,     0,
    1002,     0,     0,     0,     0,     0,     0,  2289,  2290,     0,
       0,  1760,     0,     0,     0, -1770,     0,     0,     0,     0,
       0,     0,  1003,  2301,     0,     0,     0,     0,  1850,     0,
       0,     0,  2308,     0,     0,  2311,     0,  2313,     0,     0,
       0,     0,  1005,     0,     0,  2317,     0,     0,     0,     0,
       0,     0,     0,  2324,  2325,     0,     0,  1332,     0,     0,
       0,     0,  1251,     0,     0,     0,     0,     0,     0,     0,
    1340,     0,     0,  1333,     0,     0,     0,     0,  1334,     0,
       0,     0,     0,  2364,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2372,     0,     0,   987,     0,     0,     0,
    1335,  1336,     0,     0,     0,     0,     0,     0,     0,  2385,
       0,     0,     0,     0,     0,  1337,     0,     0,     0,     0,
       0,     0,     0,     0,  1355,     0,  1320,     0,     0,  1321,
       0,     0,     0,  1322,  1323,  1324,  1325,  1326,     0,     0,
       0,     0,     0,  1355,     0,     0,     0,     0,     0,     0,
       0,     0,  1327,  1338,     0,  2305,  1339,     0,     0,     0,
    1329,  1355, -1770,  1651,  1651,     0,  2015,  1330,  1651,     0,
    1340,     0,  1355,  1341,     0,  1355,     0,     0,     0,     0,
    1355,     0,     0,  1355,     0,     0,     0,     0,     0,     0,
       0,     0,  1331,     0,     0,  1355,     0,     0,     0,  1355,
    1355,  1355,  1355,  1355,  1355,     0,     0,     0,     0,     0,
    1651,  1651,     0,  1355,  1355,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1320,  1355,     0,  1321,  1355,     0,
       0,  1322,  1323,  1324,  1325,  1326,  1355,  1355,  1355,  1355,
    1355,  1355,  1355,  1355,  1355,  1355,     0,     0,  2540,     0,
    1327,     0,     0,     0,     0,     0,     0,     0,  1329,     0,
       0,     0,  1342,     0, -1770,  1330,     0,     0,     0,     0,
       0,  1347,  1348,  1349,  1350,  1351,  1352,  1355,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1331,     0,     0,  1332,     0,     0,     0,  2553,  2554,     0,
       0,     0,  2555,     0,     0,     0,     0,  2558,     0,  1333,
    2561,  2562,     0,     0,  1334,  2566,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1335,  1336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1337,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   900,     0,     0,  1343,     0,     0,  1344,  1345,  1346,
       0,  1347,  1348,  1349,  1350,  1351,  1352,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1338,
       0,  1332,  1339,     0,     0,  2629,     0,  1355,  1355,  1355,
       0,     0,     0,     0,     0,     0,  1340,  1333,     0,  1341,
       0,     0,  1334,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2648,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1335,  1336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1337,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1338,     0,     0,
    1339,     0,     0,  1355,     0,     0,     0,     0,  1342,  1355,
       0,     0,     0,     0,  1340,     0,     0,  1341,     0,     0,
       0,     0,  2015,  2015,  1355,     0,  1651,  1651,  1651,  1651,
    1651,     0,     0,  1651,  1651,  1651,  1651,  1651,  1651,  1651,
    1651,  1651,  1651,  2015,     0,     0,     0,     0,  2036,     0,
       0,     0,     0,     0,     0,     0,     0,  2704,  2705,     0,
       0,  2706,     0,  1355,     0,     0,  1355,     0,  1355,     0,
       0,     0,  2015,  2015,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1355,  1651,  1651,  1355,
       0,  1355,     0,     0,     0,     0,     0,     0,  2748,  2749,
       0,     0,     0,     0,     0,     0,  1342,     0,     0,     0,
    1343,     0,  2763,  1344,  1345,  1346,     0,  1347,  1348,  1349,
    1350,  1351,  1352,     0,     0,     0,     0,  1672,     0,     0,
    2773,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1355,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1343,     0,
       0,  1344,  1345,  1346,     0,  1347,  1348,  1349,  1350,  1351,
    1352,  2835,     0,  1320,     0,  1672,  1321,     0,     0,     0,
    1322,  1323,  1324,  1325,  1326,     0,     0,     0,  1304,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1327,
       0,     0,   900,     0,     0,  2857,     0,  1329,     0,     0,
       0,  1355,     0,     0,  1330,     0,     0,     0,     0,     0,
    2876,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1355,  1331,
       0,     0,  1355,  1355,     0,  1355,     0,     0,  2015,  2015,
    2015,  2015,  2015,     0,     0,     0,  2015,  2015,  2015,  2015,
    2015,  2015,  2015,  2015,  2015,  2015,  1355,  1355,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1355,     0,
       0,     0,     0,     0,     0,  1355,     0,     0,  1355,     0,
    1355,     0,     0,     0,  1355,     0,  2748,  2015,  2015,     0,
    2920,  1355,  1355,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1320,     0,     0,  1321,     0,     0,     0,
    2949,  1323,  1324,  1325,  1326,     0,  1320,     0,     0,  1321,
    1332,  1355,     0,     0,  1323,  1324,  1325,  1326,     0,  1355,
       0,     0,     0,     0,     0,     0,  1333,  1329,     0,     0,
       0,  1334,  1355,  2748,  1330,     0,     0,     0,     0,     0,
    1329,     0,     0,     0,     0,     0,     0,  1330,     0,     0,
       0,     0,     0,  1335,  1336,     0,     0,     0,     0,  1331,
       0,     0,  1651,     0,     0,     0,     0,  1320,  1337,     0,
    1321,     0,  1331,     0,  1322,  1323,  1324,  1325,  1326,     0,
    2998,  2998,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1327,     0,     0,     0,     0,     0,     0,
       0,  1329,     0,     0,     0,     0,  1338,     0,  1330,  1339,
       0,     0,     0,  2998,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1340,     0,     0,  1341,     0,     0,     0,
       0,     0,     0,  1331,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2998,     0,     0,     0,     0,     0,
    1332,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1332,     0,     0,  1333,     0,     0,     0,
       0,  1334,     0,     0,     0,     0,     0,  1355,     0,  1333,
       0,  1651,     0,     0,  1334,     0,     0,     0,     0,     0,
    1355,  1355,  1355,  1335,  1336,  1355,     0,     0,  1355,  1355,
       0,     0,     0,  1355,     0,  1342, -1770, -1770,  1337,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1337,     0,     0,  1332,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,     0,     0,  1334,  1338,     0,     0,  1339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1770,  1340,     0,     0,  1355,  1335,  1336,     0,
       0,     0,  2015,     0,     0,     0,  1340,     0,     0,     0,
       0,     0,  1337,     0,     0,  1355,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1343,     0,     0,
    1344,  1345,  1346,     0,  1347,  1348,  1349,  1350,  1351,  1352,
    1338,     0,     0,  1339,  2043,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2015,  1651,  1340,     0,     0,
    1341,  1355,  1355,  1355,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1342,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1342,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1355,  1355,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1355,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1355,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2015,     0,     0,  1343,     0,     0,
    1344,  1345,  1346,     0,  1347,  1348,  1349,  1350,  1351,  1352,
    1343,     0,  1355,  1344,  1345,  1346,     0,  1347,  1348,  1349,
    1350,  1351,  1352,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1355,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1355,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1343,     0,     0,  1344,  1345,  1346,     0,  1347,  1348,
    1349,  1350,  1351,  1352,     0,     0,     0,     0,  2264,     0,
       0,     0,     0,     0,     0,     0,     0,  1355,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1017,   820,   548,   821,   822,   823,   824,   825,     0,     0,
       0,     0,     0,     0,     0,     0,  1355,    94,    95,    96,
      97,    98,    99,   100,   101,  1018,   102,   103,   104,     0,
       0,     0,     0,   826,     0,     0,   105,   106,     0,   107,
     108,   109,  1019,   111,   112,   113,   114,   827,  1020,   828,
     829,     0,   119,   120,   121,   122,     0,   123,   830,   831,
     124,   125,   832,   833,   128,  1355,   129,   130,   131,   132,
     834,     0,  1021,     0,   135,   136,   137,   138,   139,   140,
    1022,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,  1023,   152,   153,   154,   836,   837,   838,  1024,
     840,   841,   842,   156,   157,   158,   159,   160,   161,   162,
     843,   844,   165,   845,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,  1025,     0,
     178,   179,   679,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   846,   194,
     195,   196,   197,   198,   847,   848,   200,     0,   201,   202,
     849,   204,     0,   205,     0,   206,  1026,     0,  1027,   209,
     210,  1028,  1029,   213,     0,   214,     0,   850,   851,   217,
       0,   218,   219,   220,   221,   222,   223,   224,  1030,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,  1031,   238,   239,   240,   241,   242,   243,   852,
     853,     0,   854,     0,   247,  1032,  1033,   250,  1034,   252,
     253,   254,   255,   256,   257,     0,     0,   258,  1035,   260,
    1036,     0,   262,   263,   264,   855,   856,   265,   266,   267,
     268,   269,  1037,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   857,  1038,   858,   292,   293,   294,   295,   859,   296,
     297,  1039,   299,   860,   861,   301,   862,   303,   304,   305,
       0,   306,   307,     0,     0,   863,   309,   310,     0,     0,
     311,   312,  1040,   314,  1041,   864,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   865,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   866,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,  1042,
     365,   366,   367,   867,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   868,   385,   386,   387,   388,   389,  1043,   391,   392,
     869,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,  1044,   408,   870,   410,     0,
     411,   412,     0,   413,  1045,   415,   416,   417,   418,   419,
       0,   871,   872,     0,     0,   422,   423,   873,   425,   874,
     875,   427,   428,  1046,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   877,     0,   440,   441,
     442,   443,   444,   445,   878,  1047,   447,  1048,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   879,
       0,     0,     0,     0,     0,     0,   880,   881,  1049,     0,
       0,     0,     0,   883,     0,   884,  1050,     0,     0,     0,
     885,     0,   886,   887,    93,   820,   548,   821,   822,   823,
     824,   825,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,   826,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   827,   116,   828,   829,     0,   119,   120,   121,   122,
       0,   123,   830,   831,   124,   125,   832,   833,   128,     0,
     129,   130,   131,   132,   834,     0,   835,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     836,   837,   838,   839,   840,   841,   842,   156,   157,   158,
     159,   160,   161,   162,   843,   844,   165,   845,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   679,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   846,   194,   195,   196,   197,   198,   847,   848,
     200,     0,   201,   202,   849,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,   850,   851,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   852,   853,     0,   854,     0,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,     0,
       0,   258,   259,   260,   261,     0,   262,   263,   264,   855,
     856,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   857,   290,   858,   292,   293,
     294,   295,   859,   296,   297,   298,   299,   860,   861,   301,
     862,   303,   304,   305,     0,   306,   307,     0,     0,   863,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   864,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   865,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   866,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,   365,   366,   367,   867,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,    26,
     380,   381,   382,   383,   384,   868,   385,   386,   387,   388,
     389,   390,   391,   392,   869,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   870,   410,     0,   411,   412,    31,   413,   414,   415,
     416,   417,   418,   419,     0,   871,   872,     0,     0,   422,
     423,   873,   425,   874,   875,   427,   428,   876,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     877,     0,   440,   441,   442,   443,   444,   576,   878,     0,
     447,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,    34,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   879,     0,    35,     0,     0,     0,     0,
     880,   881,     0,     0,     0,     0,     0,   883,     0,   884,
    2847,     0,     0,     0,   885,     0,   886,   887,    93,   820,
     548,   821,   822,   823,   824,   825,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,   826,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,   114,   827,   116,   828,   829,     0,
     119,   120,   121,   122,     0,   123,   830,   831,   124,   125,
     832,   833,   128,     0,   129,   130,   131,   132,   834,     0,
     835,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   836,   837,   838,   839,   840,   841,
     842,   156,   157,   158,   159,   160,   161,   162,   843,   844,
     165,   845,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     679,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   846,   194,   195,   196,
     197,   198,   847,   848,   200,     0,   201,   202,   849,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,   850,   851,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   852,   853,     0,
     854,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   855,   856,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   857,
     290,   858,   292,   293,   294,   295,   859,   296,   297,   298,
     299,   860,   861,   301,   862,   303,   304,   305,     0,   306,
     307,     0,     0,   863,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   864,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   865,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   866,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,   365,   366,
     367,   867,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,    26,   380,   381,   382,   383,   384,   868,
     385,   386,   387,   388,   389,   390,   391,   392,   869,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   870,   410,     0,   411,   412,
      31,   413,   414,   415,   416,   417,   418,   419,     0,   871,
     872,     0,     0,   422,   423,   873,   425,   874,   875,   427,
     428,   876,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   877,     0,   440,   441,   442,   443,
     444,   576,   878,     0,   447,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,    34,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   879,     0,    35,
       0,     0,     0,     0,   880,   881,     0,     0,     0,     0,
       0,   883,     0,   884,     0,     0,     0,     0,   885,     0,
     886,   887,    93,   820,   548,   821,   822,   823,   824,   825,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,   826,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   827,
     116,   828,   829,  1659,   119,   120,   121,   122,     0,   123,
     830,   831,   124,   125,   832,   833,   128,     0,   129,   130,
     131,   132,   834,     0,   835,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   836,   837,
     838,   839,   840,   841,   842,   156,   157,   158,   159,   160,
     161,   162,   843,   844,   165,   845,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   679,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     846,   194,   195,   196,   197,   198,   847,   848,   200,     0,
     201,   202,   849,   204,     0,   205,     0,   206,   207,  1660,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   850,
     851,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   852,   853,     0,   854,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,  1661,   258,
     259,   260,   261,     0,   262,   263,   264,   855,   856,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   857,   290,   858,   292,   293,   294,   295,
     859,   296,   297,   298,   299,   860,   861,   301,   862,   303,
     304,   305,     0,   306,   307,     0,     0,   863,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   864,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   865,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   866,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,   365,   366,   367,   867,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   868,   385,   386,   387,   388,   389,   390,
     391,   392,   869,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   870,
     410,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,   871,   872,     0,  1662,   422,   423,   873,
     425,   874,   875,   427,   428,   876,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   877,     0,
     440,   441,   442,   443,   444,   445,   878,     0,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   879,     0,     0,     0,     0,     0,     0,   880,   881,
       0,     0,     0,     0,     0,   883,     0,   884,     0,     0,
       0,     0,   885,     0,   886,   887,    93,   820,   548,   821,
     822,   823,   824,   825,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,  -958,   102,   103,   104,     0,     0,     0,  -958,   826,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   827,   116,   828,   829,     0,   119,   120,
     121,   122,     0,   123,   830,   831,   124,   125,   832,   833,
     128,     0,   129,   130,   131,   132,   834,     0,   835,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   836,   837,   838,   839,   840,   841,   842,   156,
     157,   158,   159,   160,   161,   162,   843,   844,   165,   845,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   679,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   846,   194,   195,   196,   197,   198,
     847,   848,   200,     0,   201,   202,   849,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,   850,   851,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   852,   853,     0,   854,     0,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   855,   856,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   857,   290,   858,
     292,   293,   294,   295,   859,   296,   297,   298,   299,   860,
     861,   301,   862,   303,   304,   305,     0,   306,   307,     0,
       0,   863,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   864,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   865,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   866,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,   365,   366,   367,   867,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   868,   385,   386,
     387,   388,   389,   390,   391,   392,   869,   394,  -958,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   870,   410,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,   871,   872,     0,
       0,   422,   423,   873,   425,   874,   875,   427,   428,   876,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   877,     0,   440,   441,   442,   443,   444,   445,
     878,     0,   447,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   879,     0,     0,     0,     0,
       0,     0,   880,   881,     0,     0,     0,     0,     0,   883,
       0,   884,     0,     0,     0,     0,   885,     0,   886,   887,
      93,   820,   548,   821,   822,   823,   824,   825,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,  1400,   102,   103,   104,     0,
       0,     0,     0,   826,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113,   114,   827,   116,   828,
     829,     0,   119,   120,   121,   122,     0,   123,   830,   831,
     124,   125,   832,   833,   128,     0,   129,   130,   131,   132,
     834,     0,   835,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,   154,   836,   837,   838,   839,
     840,   841,   842,   156,   157,   158,   159,   160,   161,   162,
     843,   844,   165,   845,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   679,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   846,   194,
     195,   196,   197,   198,   847,   848,   200,     0,   201,   202,
     849,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,   850,   851,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,   238,   239,   240,   241,   242,   243,   852,
     853,     0,   854,     0,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,     0,     0,   258,   259,   260,
     261,     0,   262,   263,   264,   855,   856,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   857,   290,   858,   292,   293,   294,   295,   859,   296,
     297,   298,   299,   860,   861,   301,   862,   303,   304,   305,
       0,   306,   307,     0,     0,   863,   309,   310,     0,     0,
     311,   312,   313,   314,   315,   864,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   865,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   866,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
     365,   366,   367,   867,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   868,   385,   386,   387,   388,   389,   390,   391,   392,
     869,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   870,   410,     0,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,   871,   872,     0,     0,   422,   423,   873,   425,   874,
     875,   427,   428,   876,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   877,     0,   440,   441,
     442,   443,   444,   445,   878,     0,   447,   448,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   879,
       0,     0,     0,     0,     0,     0,   880,   881,  1401,     0,
       0,     0,     0,   883,     0,   884,     0,     0,     0,     0,
     885,     0,   886,   887,    93,   820,   548,   821,   822,   823,
     824,   825,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,  2735,
     102,   103,   104,     0,     0,     0,     0,   826,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   827,   116,   828,   829,     0,   119,   120,   121,   122,
       0,   123,   830,   831,   124,   125,   832,   833,   128,     0,
     129,   130,   131,   132,   834,     0,   835,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,  2736,   154,
     836,   837,   838,   839,   840,   841,   842,   156,   157,   158,
     159,   160,   161,   162,   843,   844,   165,   845,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   679,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   846,   194,   195,   196,   197,   198,   847,   848,
     200,     0,   201,   202,   849,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,  2737,   851,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   852,   853,     0,   854,     0,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,     0,
       0,   258,   259,   260,   261,     0,   262,   263,   264,   855,
     856,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   857,   290,   858,   292,   293,
     294,   295,   859,   296,   297,   298,   299,   860,   861,   301,
     862,   303,   304,   305,     0,   306,   307,     0,     0,   863,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   864,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   865,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   866,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,   365,   366,  2738,   867,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   868,   385,   386,   387,   388,
     389,   390,   391,   392,   869,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   870,   410,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,   871,   872,     0,     0,   422,
     423,   873,   425,   874,   875,   427,   428,   876,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     877,     0,   440,   441,   442,   443,   444,   445,   878,     0,
     447,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   879,     0,     0,     0,     0,     0,     0,
     880,   881,  2739,     0,     0,     0,     0,   883,     0,  2740,
       0,     0,     0,     0,   885,     0,   886,   887,    93,   820,
     548,   821,   822,   823,   824,   825,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,   826,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,   114,   827,   116,   828,   829,     0,
     119,   120,   121,   122,     0,   123,   830,   831,   124,   125,
     832,   833,   128,     0,   129,   130,   131,   132,   834,     0,
     835,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   836,   837,   838,   839,   840,   841,
     842,   156,   157,   158,   159,   160,   161,   162,   843,   844,
     165,   845,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     679,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   846,   194,   195,   196,
     197,   198,   847,   848,   200,     0,   201,   202,   849,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,   850,   851,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   852,   853,     0,
     854,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   855,   856,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   857,
     290,   858,   292,   293,   294,   295,   859,   296,   297,   298,
     299,   860,   861,   301,   862,   303,   304,   305,     0,   306,
     307,     0,     0,   863,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   864,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   865,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   866,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,   365,   366,
     367,   867,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   868,
     385,   386,   387,   388,   389,   390,   391,   392,   869,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   870,   410,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,   871,
     872,     0,     0,   422,   423,   873,   425,   874,   875,   427,
     428,   876,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   877,     0,   440,   441,   442,   443,
     444,   445,   878,     0,   447,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   879,     0,     0,
       0,     0,     0,     0,   880,   881,   882,     0,     0,     0,
       0,   883,     0,   884,     0,     0,     0,     0,   885,     0,
     886,   887,    93,  1414,   548,   821,   822,   823,  1415,   825,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,  1416,   102,   103,
     104,     0,     0,     0,     0,   826,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   827,
     116,   828,   829,     0,   119,   120,   121,   122,     0,   123,
     830,   831,   124,   125,   832,   833,   128,     0,   129,   130,
     131,   132,   834,     0,   835,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   836,   837,
     838,   839,   840,   841,   842,   156,   157,   158,   159,   160,
     161,   162,   843,   844,   165,   845,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   679,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     846,   194,   195,   196,   197,   198,   847,   848,   200,     0,
     201,   202,   849,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   850,
     851,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   852,   853,     0,   854,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   855,   856,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   857,   290,   858,   292,   293,   294,   295,
     859,   296,   297,   298,   299,   860,   861,   301,   862,   303,
     304,   305,     0,   306,   307,     0,     0,   863,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   864,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   865,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   866,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,   365,   366,   367,   867,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   868,   385,   386,   387,   388,   389,   390,
     391,   392,   869,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   870,
     410,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,   871,   872,     0,     0,   422,   423,   873,
     425,   874,   875,   427,   428,   876,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   877,     0,
     440,   441,   442,   443,   444,   445,   878,     0,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   879,     0,     0,     0,     0,     0,     0,   880,   881,
       0,     0,     0,     0,     0,   883,     0,   884,     0,     0,
       0,     0,   885,     0,   886,   887,    93,   820,   548,   821,
     822,   823,   824,   825,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   826,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   827,   116,   828,   829,     0,   119,   120,
     121,   122,     0,   123,   830,   831,   124,   125,   832,   833,
     128,     0,   129,   130,   131,   132,   834,     0,   835,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   836,   837,   838,   839,   840,   841,   842,   156,
     157,   158,   159,   160,   161,   162,   843,   844,   165,   845,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   679,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   846,   194,   195,   196,   197,   198,
     847,   848,   200,     0,   201,   202,   849,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,   850,   851,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   852,   853,     0,   854,     0,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   855,   856,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   857,   290,   858,
     292,   293,   294,   295,   859,   296,   297,   298,   299,   860,
     861,   301,   862,   303,   304,   305,     0,   306,   307,     0,
       0,   863,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   864,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   865,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   866,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,   365,   366,   367,   867,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   868,   385,   386,
     387,   388,   389,   390,   391,   392,   869,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   870,   410,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,   871,   872,     0,
       0,   422,   423,   873,   425,   874,   875,   427,   428,   876,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   877,     0,   440,   441,   442,   443,   444,   445,
     878,     0,   447,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   879,     0,     0,     0,     0,
       0,     0,   880,   881,     0,     0,     0,     0,     0,   883,
       0,   884,  1653,     0,     0,     0,   885,     0,   886,   887,
    1017,   820,   548,   821,   822,   823,   824,   825,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,   826,     0,     0,   105,   106,     0,   107,
     108,   109,  1019,   111,   112,   113,   114,   827,  1020,   828,
     829,     0,   119,   120,   121,   122,     0,   123,   830,   831,
     124,   125,   832,   833,   128,     0,   129,   130,   131,   132,
     834,     0,  1021,     0,   135,   136,   137,   138,   139,   140,
    1022,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,  1023,   152,   153,   154,   836,   837,   838,  1024,
     840,   841,   842,   156,   157,   158,   159,   160,   161,   162,
     843,   844,   165,   845,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   679,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   846,   194,
     195,   196,   197,   198,   847,   848,   200,     0,   201,   202,
     849,   204,     0,   205,     0,   206,  1026,     0,  1027,   209,
     210,  1028,  1029,   213,     0,   214,     0,   850,   851,   217,
       0,   218,   219,   220,   221,   222,   223,   224,  1030,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,  1031,   238,   239,   240,   241,   242,   243,   852,
     853,     0,   854,     0,   247,  1032,  1033,   250,  1034,   252,
     253,   254,   255,   256,   257,     0,     0,   258,  1035,   260,
    1036,     0,   262,   263,   264,   855,   856,   265,   266,   267,
     268,   269,  1037,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   857,  1038,   858,   292,   293,   294,   295,   859,   296,
     297,  1039,   299,   860,   861,   301,   862,   303,   304,   305,
       0,   306,   307,     0,     0,   863,   309,   310,     0,     0,
     311,   312,  1040,   314,  1041,   864,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   865,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   866,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,  1042,
     365,   366,   367,   867,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   868,   385,   386,   387,   388,   389,  1043,   391,   392,
     869,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,  1044,   408,   870,   410,     0,
     411,   412,     0,   413,  1045,   415,   416,   417,   418,   419,
       0,   871,   872,     0,     0,   422,   423,   873,   425,   874,
     875,   427,   428,  1046,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   877,     0,   440,   441,
     442,   443,   444,   445,   878,  1875,   447,  1048,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   879,
       0,     0,     0,     0,     0,     0,   880,   881,     0,     0,
       0,     0,     0,   883,     0,   884,     0,     0,     0,     0,
     885,     0,   886,   887,  1017,   820,   548,   821,   822,   823,
     824,   825,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,   826,     0,     0,
     105,   106,     0,   107,   108,   109,  1019,   111,   112,   113,
     114,   827,  1020,   828,   829,     0,   119,   120,   121,   122,
       0,   123,   830,   831,   124,   125,   832,   833,   128,     0,
     129,   130,   131,   132,   834,     0,  1021,     0,   135,   136,
     137,   138,   139,   140,  1022,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,  1023,   152,   153,   154,
     836,   837,   838,  1024,   840,   841,   842,   156,   157,   158,
     159,   160,   161,   162,   843,   844,   165,   845,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   679,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   846,   194,   195,   196,   197,   198,   847,   848,
     200,     0,   201,   202,   849,   204,     0,   205,     0,   206,
    1026,     0,  1027,   209,   210,  1028,  1029,   213,     0,   214,
       0,   850,   851,   217,     0,   218,   219,   220,   221,   222,
     223,   224,  1030,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,  1031,   238,   239,   240,
     241,   242,   243,   852,   853,     0,   854,     0,   247,  1032,
    1033,   250,  1034,   252,   253,   254,   255,   256,   257,     0,
       0,   258,  1035,   260,  1036,     0,   262,   263,   264,   855,
     856,   265,   266,   267,   268,   269,  1037,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   857,  1038,   858,   292,   293,
     294,   295,   859,   296,   297,  1039,   299,   860,   861,   301,
     862,   303,   304,   305,     0,   306,   307,     0,     0,   863,
     309,   310,     0,     0,   311,   312,  1040,   314,  1041,   864,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   865,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   866,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,  1042,   365,   366,   367,   867,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   868,   385,   386,   387,   388,
     389,  1043,   391,   392,   869,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,  1044,
     408,   870,   410,     0,   411,   412,     0,   413,  1045,   415,
     416,   417,   418,   419,     0,   871,   872,     0,     0,   422,
     423,   873,   425,   874,   875,   427,   428,  1046,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     877,     0,   440,   441,   442,   443,   444,   445,   878,     0,
     447,  1048,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   879,     0,     0,     0,     0,     0,     0,
     880,   881,     0,     0,     0,     0,     0,   883,     0,   884,
    1919,     0,     0,     0,   885,     0,   886,   887,    93,   820,
     548,   821,   822,   823,   824,   825,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,   826,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,   114,   827,   116,   828,   829,     0,
     119,   120,   121,   122,     0,   123,   830,   831,   124,   125,
     832,   833,   128,     0,   129,   130,   131,   132,   834,     0,
     835,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   836,   837,   838,   839,   840,   841,
     842,   156,   157,   158,   159,   160,   161,   162,   843,   844,
     165,   845,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     679,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   846,   194,   195,   196,
     197,   198,   847,   848,   200,     0,   201,   202,   849,   204,
       0,   205,     0,   206,   207,  1660,   208,   209,   210,   211,
     212,   213,     0,   214,     0,   850,   851,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   852,   853,     0,
     854,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   855,   856,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   857,
     290,   858,   292,   293,   294,   295,   859,   296,   297,   298,
     299,   860,   861,   301,   862,   303,   304,   305,     0,   306,
     307,     0,     0,   863,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   864,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   865,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   866,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,   365,   366,
     367,   867,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   868,
     385,   386,   387,   388,   389,   390,   391,   392,   869,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   870,   410,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,   871,
     872,     0,     0,   422,   423,   873,   425,   874,   875,   427,
     428,   876,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   877,     0,   440,   441,   442,   443,
     444,   445,   878,     0,   447,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   879,     0,     0,
       0,     0,     0,     0,   880,   881,     0,     0,     0,     0,
       0,   883,     0,   884,     0,     0,     0,     0,   885,     0,
     886,   887,    93,   820,   548,   821,   822,   823,   824,   825,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,   826,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   827,
     116,   828,   829,     0,   119,   120,   121,   122,     0,   123,
     830,   831,   124,   125,   832,   833,   128,     0,   129,   130,
     131,   132,   834,     0,   835,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   836,   837,
     838,   839,   840,   841,   842,   156,   157,   158,   159,   160,
     161,   162,   843,   844,   165,   845,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   679,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     846,   194,   195,   196,   197,   198,   847,   848,   200,     0,
     201,   202,   849,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   850,
     851,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   852,   853,     0,   854,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   855,   856,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   857,   290,   858,   292,   293,   294,   295,
     859,   296,   297,   298,   299,   860,   861,   301,   862,   303,
     304,   305,     0,   306,   307,     0,     0,   863,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   864,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   865,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   866,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,   365,   366,   367,   867,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   868,   385,   386,   387,   388,   389,   390,
     391,   392,   869,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   870,
     410,     0,   411,   412,  2233,   413,   414,   415,   416,   417,
     418,   419,     0,   871,   872,     0,     0,   422,   423,   873,
     425,   874,   875,   427,   428,   876,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   877,     0,
     440,   441,   442,   443,   444,   445,   878,     0,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   879,     0,     0,     0,     0,     0,     0,   880,   881,
       0,     0,     0,     0,     0,   883,     0,   884,     0,     0,
       0,     0,   885,     0,   886,   887,    93,   820,   548,   821,
     822,   823,   824,   825,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   826,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   827,   116,   828,   829,     0,   119,   120,
     121,   122,     0,   123,   830,   831,   124,   125,   832,   833,
     128,     0,   129,   130,   131,   132,   834,     0,   835,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   836,   837,   838,   839,   840,   841,   842,   156,
     157,   158,   159,   160,   161,   162,   843,   844,   165,   845,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   679,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   846,   194,   195,   196,   197,   198,
     847,   848,   200,     0,   201,   202,   849,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,   850,   851,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   852,   853,     0,   854,     0,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   855,   856,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   857,   290,   858,
     292,   293,   294,   295,   859,   296,   297,   298,   299,   860,
     861,   301,   862,   303,   304,   305,     0,   306,   307,     0,
       0,   863,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   864,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   865,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   866,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,   365,   366,   367,   867,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   868,   385,   386,
     387,   388,   389,   390,   391,   392,   869,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   870,   410,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,   871,   872,     0,
       0,   422,   423,   873,   425,   874,   875,   427,   428,   876,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   877,     0,   440,   441,   442,   443,   444,   445,
     878,     0,   447,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   879,     0,     0,     0,     0,
       0,     0,   880,   881,     0,     0,     0,     0,     0,   883,
       0,   884,     0,     0,     0,     0,   885,     0,   886,   887,
    1017,   820,   548,   821,   822,   823,   824,   825,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,   826,     0,     0,   105,   106,     0,   107,
     108,   109,  1019,   111,   112,   113,   114,   827,  1020,   828,
     829,     0,   119,   120,   121,   122,     0,   123,   830,   831,
     124,   125,   832,   833,   128,     0,   129,   130,   131,   132,
     834,     0,  1021,     0,   135,   136,   137,   138,   139,   140,
    1022,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,  1023,   152,   153,   154,   836,   837,   838,  1024,
     840,   841,   842,   156,   157,   158,   159,   160,   161,   162,
     843,   844,   165,   845,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   679,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   846,   194,
     195,   196,   197,   198,   847,   848,   200,     0,   201,   202,
     849,   204,     0,   205,     0,   206,  1026,     0,  1027,   209,
     210,  1028,  1029,   213,     0,   214,     0,   850,   851,   217,
       0,   218,   219,   220,   221,   222,   223,   224,  1030,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,  1031,   238,   239,   240,   241,   242,   243,   852,
     853,     0,   854,     0,   247,  1032,  1033,   250,  1034,   252,
     253,   254,   255,   256,   257,     0,     0,   258,  1035,   260,
    1036,     0,   262,   263,   264,   855,   856,   265,   266,   267,
     268,   269,  1037,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   857,  1038,   858,   292,   293,   294,   295,   859,   296,
     297,  1039,   299,   860,   861,   301,   862,   303,   304,   305,
       0,   306,   307,     0,     0,   863,   309,   310,     0,     0,
     311,   312,  1040,   314,  1041,   864,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   865,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   866,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,  1042,
     365,   366,   367,   867,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   868,   385,   386,   387,   388,   389,  1043,   391,   392,
     869,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,  1044,   408,   870,   410,     0,
     411,   412,     0,   413,  1045,   415,   416,   417,   418,   419,
       0,   871,   872,     0,     0,   422,   423,   873,   425,   874,
     875,   427,   428,  1046,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   877,     0,   440,   441,
     442,   443,   444,   445,   878,     0,   447,  1048,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   879,
       0,     0,     0,     0,     0,     0,   880,   881,     0,     0,
       0,     0,     0,   883,     0,   884,     0,     0,     0,     0,
     885,     0,   886,   887,    93,   820,   548,   821,   822,   823,
     824,   825,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,   826,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   827,   116,   828,   829,     0,   119,   120,   121,   122,
       0,   123,   830,   831,   124,   125,   832,   833,   128,     0,
     129,   130,   131,   132,   834,     0,   835,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     836,   837,   838,   839,   840,   841,   842,   156,   157,   158,
     159,   160,   161,   162,   843,   844,   165,   845,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   679,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   846,   194,   195,   196,   197,   198,   847,   848,
     200,     0,   201,   202,   849,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,   850,   851,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   852,   853,     0,   854,     0,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,     0,
       0,   258,   259,   260,   261,     0,   262,   263,   264,   855,
     856,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   857,   290,   858,   292,   293,
     294,   295,   859,   296,   297,   298,   299,   860,   861,   301,
     862,   303,   304,   305,     0,   306,   307,     0,     0,   863,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   864,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   865,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   866,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,   365,   366,   367,   867,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   868,   385,   386,   387,   388,
     389,   390,   391,   392,   869,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   870,   410,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,   871,   872,     0,     0,   422,
     423,   873,   425,   874,   875,   427,   428,   876,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     877,     0,   440,   441,   442,   443,   444,   445,   878,     0,
     447,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   879,     0,     0,     0,     0,     0,     0,
    1419,  1420,     0,     0,     0,     0,     0,   883,     0,   884,
       0,     0,     0,     0,   885,     0,   886,   887,    93,  1799,
     548,   821,   822,   823,   824,   825,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,   826,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,   114,   827,   116,   828,   829,     0,
     119,   120,   121,   122,     0,   123,   830,   831,   124,   125,
     832,   833,   128,     0,   129,   130,   131,   132,   834,     0,
     835,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   836,   837,   838,   839,   840,   841,
     842,   156,   157,   158,   159,   160,   161,   162,   843,   844,
     165,   845,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     679,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   846,   194,   195,   196,
     197,   198,   847,   848,   200,     0,   201,   202,   849,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,   850,   851,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   852,   853,     0,
     854,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   855,   856,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   857,
     290,   858,   292,   293,   294,   295,   859,   296,   297,   298,
     299,   860,   861,   301,   862,   303,   304,   305,     0,   306,
     307,     0,     0,   863,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   864,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   865,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   866,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,   365,   366,
     367,   867,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   868,
     385,   386,   387,   388,   389,   390,   391,   392,   869,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   870,   410,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,   871,
     872,     0,     0,   422,   423,   873,   425,   874,   875,   427,
     428,   876,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   877,     0,   440,   441,   442,   443,
     444,   445,   878,     0,   447,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   879,     0,     0,
       0,     0,     0,     0,   880,   881,     0,     0,     0,     0,
       0,   883,     0,   884,     0,     0,     0,     0,   885,     0,
     886,   887,    93,   820,   548,   821,   822,   823,   824,   825,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,   826,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   827,
     116,   828,   829,     0,   119,   120,   121,   122,     0,   123,
     830,   831,   124,   125,   832,   833,   128,     0,   129,   130,
     131,   132,   834,     0,   835,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   836,   837,
     838,   839,   840,   841,   842,   156,   157,   158,   159,   160,
     161,   162,   843,   844,   165,   845,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   679,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     846,   194,   195,   196,   197,   198,   847,   848,   200,     0,
     201,   202,   849,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   850,
     851,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   852,   853,     0,   854,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   855,   856,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   857,   290,   858,   292,   293,   294,   295,
     859,   296,   297,   298,   299,   860,   861,   301,   862,   303,
     304,   305,     0,   306,   307,     0,     0,   863,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   864,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   865,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   866,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,   365,   366,   367,   867,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   868,   385,   386,   387,   388,   389,   390,
     391,   392,   869,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   870,
     410,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,   871,   872,     0,     0,   422,   423,   873,
     425,   874,   875,   427,   428,   876,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   877,     0,
     440,   441,   442,   443,   444,   445,   878,     0,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   879,     0,     0,     0,     0,     0,     0,   880,   881,
       0,     0,     0,     0,     0,   883,     0,  2035,     0,     0,
       0,     0,   885,     0,   886,   887,    93,   820,   548,   821,
     822,   823,   824,   825,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   826,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   827,   116,   828,   829,     0,   119,   120,
     121,   122,     0,   123,   830,   831,   124,   125,   832,   833,
     128,     0,   129,   130,   131,   132,   834,     0,   835,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
    2736,   154,   836,   837,   838,   839,   840,   841,   842,   156,
     157,   158,   159,   160,   161,   162,   843,   844,   165,   845,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   679,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   846,   194,   195,   196,   197,   198,
     847,   848,   200,     0,   201,   202,   849,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,  2737,   851,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   852,   853,     0,   854,     0,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   855,   856,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   857,   290,   858,
     292,   293,   294,   295,   859,   296,   297,   298,   299,   860,
     861,   301,   862,   303,   304,   305,     0,   306,   307,     0,
       0,   863,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   864,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   865,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   866,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,   365,   366,  2738,   867,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   868,   385,   386,
     387,   388,   389,   390,   391,   392,   869,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   870,   410,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,   871,   872,     0,
       0,   422,   423,   873,   425,   874,   875,   427,   428,   876,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   877,     0,   440,   441,   442,   443,   444,   445,
     878,     0,   447,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   879,     0,     0,     0,     0,
       0,     0,   880,   881,     0,     0,     0,     0,     0,   883,
       0,  2740,     0,     0,     0,     0,   885,     0,   886,   887,
      93,   820,   548,   821,   822,   823,   824,   825,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,   826,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113,  2995,   827,   116,   828,
     829,     0,   119,   120,   121,   122,     0,   123,   830,   831,
     124,   125,   832,   833,   128,     0,   129,   130,   131,   132,
     834,     0,   835,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,  2996,   836,   837,   838,   839,
     840,   841,   842,   156,   157,   158,   159,   160,   161,   162,
     843,   844,   165,   845,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   679,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   846,   194,
     195,   196,   197,   198,   847,   848,   200,     0,   201,   202,
     849,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,   850,   851,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,   238,   239,   240,   241,   242,   243,   852,
     853,     0,   854,     0,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,     0,     0,   258,   259,   260,
     261,     0,   262,   263,   264,   855,   856,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   857,   290,   858,   292,   293,   294,   295,   859,   296,
     297,   298,   299,   860,   861,   301,   862,   303,   304,   305,
       0,   306,   307,     0,     0,   863,   309,   310,     0,     0,
     311,   312,   313,   314,   315,   864,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   865,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   866,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
     365,   366,   367,   867,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   868,   385,   386,   387,   388,   389,   390,   391,   392,
     869,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   870,   410,     0,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,   871,   872,     0,     0,   422,   423,   873,   425,   874,
     875,   427,   428,   876,   430,   431,  2997,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   877,     0,   440,   441,
     442,   443,   444,   445,   878,     0,   447,   448,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   879,
       0,     0,     0,     0,     0,     0,   880,   881,     0,     0,
       0,     0,     0,   883,     0,   884,     0,     0,     0,     0,
     885,     0,   886,   887,    93,   820,   548,   821,   822,   823,
     824,   825,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,   826,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   827,   116,   828,   829,     0,   119,   120,   121,   122,
       0,   123,   830,   831,   124,   125,   832,   833,   128,     0,
     129,   130,   131,   132,   834,     0,   835,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,  2996,
     836,   837,   838,   839,   840,   841,   842,   156,   157,   158,
     159,   160,   161,   162,   843,   844,   165,   845,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   679,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   846,   194,   195,   196,   197,   198,   847,   848,
     200,     0,   201,   202,   849,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,   850,   851,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   852,   853,     0,   854,     0,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,     0,
       0,   258,   259,   260,   261,     0,   262,   263,   264,   855,
     856,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   857,   290,   858,   292,   293,
     294,   295,   859,   296,   297,   298,   299,   860,   861,   301,
     862,   303,   304,   305,     0,   306,   307,     0,     0,   863,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   864,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   865,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   866,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,   365,   366,   367,   867,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   868,   385,   386,   387,   388,
     389,   390,   391,   392,   869,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   870,   410,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,   871,   872,     0,     0,   422,
     423,   873,   425,   874,   875,   427,   428,   876,   430,   431,
    2997,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     877,     0,   440,   441,   442,   443,   444,   445,   878,     0,
     447,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   879,     0,     0,     0,     0,     0,     0,
     880,   881,     0,     0,     0,     0,     0,   883,     0,   884,
       0,     0,     0,     0,   885,     0,   886,   887,    93,   820,
     548,   821,   822,   823,   824,   825,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,   826,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113, -1770,   827,   116,   828,   829,     0,
     119,   120,   121,   122,     0,   123,   830,   831,   124,   125,
     832,   833,   128,     0,   129,   130,   131,   132,   834,     0,
     835,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,  2996,   836,   837,   838,   839,   840,   841,
     842,   156,   157,   158,   159,   160,   161,   162,   843,   844,
     165,   845,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     679,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   846,   194,   195,   196,
     197,   198,   847,   848,   200,     0,   201,   202,   849,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
   -1770,   213,     0,   214,     0,   850,   851,   217,     0,   218,
     219,   220,   221,   222,   223,   224, -1770,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   852,   853,     0,
     854,     0,   247,     0,     0,   250,   251,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   259,   260, -1770,     0,
     262,   263,   264,   855,   856,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   857,
     290,   858,   292,   293,   294,   295,     0,   296,   297,     0,
     299,   860,   861,   301,   862,   303,   304,   305,     0,   306,
     307,     0,     0,   863,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   864,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   865,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   866,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,   365,   366,
     367,   867,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   868,
     385,   386,   387,   388,   389, -1770,   391,   392,   869,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   870,   410,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,   871,
     872,     0,     0,   422,   423,   873,   425,   874,   875,   427,
     428,   876,   430,   431,  2997,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   877,     0,   440,   441,   442,   443,
     444,   445,   878,     0,   447,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475, -1770,     0,     0,
       0,     0,     0,     0,   880,   881,     0,     0,     0,     0,
       0,   883,     0,   884,     0,     0,     0,     0,   885,     0,
     886,   887,    93,   820,   548,   821,   822,   823,   824,   825,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   827,
     116,   828,   829,     0,   119,   120,   121,   122,     0,   123,
     830,   831,   124,   125,   832,   833,   128,     0,   129,   130,
     131,   132,   834,     0,   835,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   836,   837,
     838,   839,   840,   841,   842,   156,   157,   158,   159,   160,
     161,   162,   843,   844,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   679,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     846,   194,   195,   196,   197,   198,   847,   848,   200,     0,
     201,   202,   849,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   850,
     851,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   852,   853,     0,   854,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   855,   856,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   857,   290,   858,   292,   293,   294,   295,
       0,   296,   297,   298,   299,   860,   861,   301,   862,   303,
     304,   305,     0,   306,   307,     0,     0,   863,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   864,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   865,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   866,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   868,   385,   386,   387,   388,   389,   390,
     391,   392,   869,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   870,
     410,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,   871,   872,     0,     0,   422,   423,   873,
     425,   874,   875,   427,   428,   876,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   877,     0,
     440,   441,   442,   443,   444,   445,   878,     0,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     0,     0,     0,     0,     0,     0,     0,  1646,  1647,
       0,     0,    93,   820,   548,   821,   822,  1648,   824,   825,
       0,     0,     0,     0,   886,   887,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   827,
     116,   828,   829,     0,   119,   120,   121,   122,     0,   123,
     830,   831,   124,   125,   832,   833,   128,     0,   129,   130,
     131,   132,   834,     0,   835,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   836,   837,
     838,   839,   840,   841,   842,   156,   157,   158,   159,   160,
     161,   162,   843,   844,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   679,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     846,   194,   195,   196,   197,   198,   847,   848,   200,     0,
     201,   202,   849,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   850,
     851,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   852,   853,     0,   854,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   855,   856,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   857,   290,   858,   292,   293,   294,   295,
       0,   296,   297,   298,   299,   860,   861,   301,   862,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   864,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   865,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   866,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,   365,   366,   367,  1785,  1786,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   868,   385,   386,   387,   388,   389,   390,
     391,   392,   869,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   870,
     410,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,   871,   872,     0,     0,   422,   423,   873,
     425,   874,   875,   427,   428,   876,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   877,     0,
     440,   441,   442,   443,   444,   445,   878,     0,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     0,     0,     0,     0,     0,     0,     0,  1787,  1788,
       0,     0,     0,     0,     0,     0,     0,  1648,     0,     0,
       0,     0,     0,     0,   886,   887,    93,   820,   548,   821,
     822,   823,   824,   825,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   827,   116,   828,   829,     0,   119,   120,
     121,   122,     0,   123,   830,   831,   124,   125,   832,   833,
     128,     0,   129,   130,   131,   132,   834,     0,   835,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   836,   837,   838,   839,   840,   841,   842,   156,
     157,   158,   159,   160,   161,   162,   843,   844,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   679,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   846,   194,   195,   196,   197,   198,
     847,   848,   200,     0,   201,   202,   849,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,   850,   851,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   852,   853,     0,   854,     0,
     247,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   855,   856,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   857,   290,   858,
     292,   293,   294,   295,     0,   296,   297,   298,   299,   860,
     861,   301,   862,   303,   304,   305,     0,   306,   307,     0,
       0,   863,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   864,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   865,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   866,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   868,   385,   386,
     387,   388,   389,   390,   391,   392,   869,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   870,   410,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,   871,   872,     0,
       0,   422,   423,   873,   425,   874,   875,   427,   428,   876,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   877,     0,   440,   441,   442,   443,   444,   445,
     878,     0,   447,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     0,     0,     0,     0,     0,
       0,     0,  1646,  1647,     0,     0,     0,     0,     0,     0,
       0,  1648,     0,     0,     0,     0,     0,     0,   886,   887,
      93,   820,   548,   821,   822,   823,   824,   825,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,   826,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113,     0,   827,   116,   828,
     829,     0,   119,   120,   121,   122,     0,   123,   830,   831,
     124,   125,   832,   833,   128,     0,   129,   130,   131,   132,
     834,     0,   835,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,   154,   836,   837,   838,   839,
     840,   841,   842,   156,   157,   158,   159,   160,   161,   162,
     843,   844,   165,   845,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   679,   181,   182,     0,   183,   184,   185,     0,
     186,     0,   188,     0,   189,   190,   191,   192,   846,   194,
     195,   196,   197,   198,   847,   848,   200,     0,   201,   202,
     849,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,     0,   213,     0,   214,     0,   850,   851,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,   238,   239,   240,   241,   242,   243,   852,
     853,     0,   854,     0,   247,     0,     0,   250,   251,   252,
     253,   254,   255,   256,   257,     0,     0,   258,   259,   260,
       0,     0,   262,   263,   264,   855,   856,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   857,   290,   858,   292,   293,   294,   295,     0,   296,
     297,     0,   299,   860,   861,   301,   862,   303,   304,   305,
       0,   306,   307,     0,     0,   863,   309,   310,     0,     0,
     311,   312,   313,   314,   315,   864,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   865,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   866,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
     365,   366,   367,   867,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   868,   385,   386,   387,   388,   389,     0,   391,   392,
     869,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   870,   410,     0,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,   871,   872,     0,     0,   422,   423,   873,   425,   874,
     875,   427,   428,   876,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   877,     0,   440,   441,
     442,   443,   444,   445,   878,     0,   447,   448,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     0,
       0,     0,     0,     0,     0,     0,   880,   881,   498,     0,
       0,     0,     0,   883,     0,   884,     0,     0,     0,     0,
     885,     0,   886,   887,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,  2343,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,     0,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
    -628,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,  -628,   209,   210,   500,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
    -628,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,  -628,   252,   253,   254,
     255,   256,   257,     0,     0,   258,  -628,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     501,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
    -628,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,  -628,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,     0,   391,   392,   393,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   503,   408,   409,   410,     0,   411,   412,
       0,   413,  -628,   415,   416,   417,   418,   419,     0,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,   427,
     428,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,     0,     0,   440,   441,   442,   443,
     444,   445,   446,     0,   447,     0,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     0,    93,     0,
     580,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   949,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,     0,
     119,   120,   121,   122,     0,   123,     0,   831,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   834,     0,
     835,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   836,   837,   838,   839,   840,   841,
     842,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   847,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,  2081,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   855,   856,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
     299,     0,   861,   301,   302,   303,   304,   305,     0,   306,
     307,     0,   581,   308,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   864,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   865,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,   365,   366,
     367,   368,  2082,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,    26,   380,   381,   382,   383,   384,   868,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   870,   410,     0,   411,   412,
      31,   413,   414,   415,   416,   417,   418,   419,     0,   420,
     421,     0,     0,   422,   423,   873,   425,   874,     0,   427,
     428,   876,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   877,     0,   440,   441,   442,   443,
     444,   576,   446,     0,   447,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,    34,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     0,    93,    35,
     580,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2083,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,     0,
     119,   120,   121,   122,     0,   123,     0,   831,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   834,     0,
     835,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   836,   837,   838,   839,   840,   841,
     842,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   847,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,  2081,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   855,   856,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
     299,     0,   861,   301,   302,   303,   304,   305,     0,   306,
     307,     0,   581,   308,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   864,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   865,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,   365,   366,
     367,   368,  2082,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   868,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   870,   410,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,   420,
     421,     0,     0,   422,   423,   873,   425,   874,     0,   427,
     428,   876,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   877,     0,   440,   441,   442,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2083,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,   831,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   834,     0,   835,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,   153,   154,   836,   837,   838,   839,   840,   841,   842,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   847,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,     0,     0,   258,   259,   260,   261,     0,   262,
     263,   264,   855,   856,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,   299,
       0,   861,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,   313,
     314,   315,   864,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   865,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,   364,   365,   366,   367,
     368,  2082,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   868,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   870,   410,     0,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   873,   425,   874,     0,   427,   428,
     876,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,   877,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    36,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,     0,   119,   120,
     121,   122,     0,   123,     0,   831,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   834,     0,   835,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   836,   837,   838,   839,   840,   841,   842,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     847,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   855,   856,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,   299,     0,
     861,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   864,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   865,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   868,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   870,   410,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,   420,   421,     0,
       0,   422,   423,   873,   425,   874,     0,   427,   428,   876,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   877,     0,   440,   441,   442,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   747,  1243,   548,     0,     0,
       0,   824,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2757,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   748,   749,     0,   750,   751,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   752,   753,   128,
       0,   129,   130,   131,   132,   754,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   755,   756,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   757,   194,   195,   196,   197,   198,   758,
    1244,   200,     0,   201,   202,   759,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   760,     0,   213,     0,
     214,     0,   761,   762,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   763,   239,
     240,   241,   242,   243,   764,   765,     0,   766,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   767,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   768,     0,   769,   292,
     293,   294,   770,     0,   296,   297,     0,   299,     0,   771,
     301,   772,   303,   304,   305,     0,   306,   307,  1245,     0,
     308,   309,   310,     0,     0,   311,   773,     0,   314,     0,
     774,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   775,   330,   331,   776,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   777,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   778,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   779,   387,
     388,   389,     0,   391,   392,   780,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     781,   408,   782,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   783,   784,     0,     0,
     422,   423,   785,   425,   786,  1246,   427,   428,   787,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,  1136,   789,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   790,
     791,   792,   793,   794,   795,   796,   797,   798,   799,   800,
     472,   473,   474,   475,   747,     0,     0,     0,     0,     0,
       0,  1247,  1248,  1958,     0,     0,     0,     0,     0,     0,
    1959,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     3,     4,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     748,   749,     0,   750,   751,     0,   119,   120,   121,   122,
       0,   123,     0,     0,   124,   125,   752,   753,   128,     0,
     129,   130,   131,   132,   754,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   755,   756,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   757,   194,   195,   196,   197,   198,   758,     0,
     200,     0,   201,   202,   759,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   760,     0,   213,     0,   214,
       0,   761,   762,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   763,   239,   240,
     241,   242,   243,   764,   765,     0,   766,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   767,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   768,     0,   769,   292,   293,
     294,   770,     0,   296,   297,     0,   299,     0,   771,   301,
     772,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   773,     0,   314,     0,   774,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   775,   330,   331,   776,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   777,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,     0,   365,   366,   367,   778,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,    26,
     380,   381,   382,   383,   384,     0,   385,   779,   387,   388,
     389,     0,   391,   392,   780,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   781,
     408,   782,   410,     0,   411,   412,    31,   413,     0,   415,
     416,   417,   418,   419,     0,   783,   784,     0,     0,   422,
     423,   785,   425,   786,     0,   427,   428,   787,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,   788,   789,     0,
     447,     0,   449,   450,   451,   452,   453,     0,     0,   454,
       0,    34,   455,   456,   457,   458,   459,   460,   790,   791,
     792,   793,   794,   795,   796,   797,   798,   799,   800,   472,
     473,   474,   475,   498,     0,    35,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    36,
      94,    95,    96,    97,    98,    99,   100,   101,   614,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   500,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   501,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,    26,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   503,   408,
     409,   410,     0,   411,   412,    31,   413,     0,   415,   416,
     417,   418,   419,     0,   615,   421,     0,     0,   616,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   576,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
      34,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,    35,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    36,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,     0,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   500,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   501,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,    26,   380,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,     0,
     391,   392,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   503,   408,   409,
     410,     0,   411,   412,    31,   413,     0,   415,   416,   417,
     418,   419,     0,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,   427,   428,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,     0,     0,
     440,   441,   442,   443,   444,   576,   446,     0,   447,     0,
     449,   450,   451,   452,   453,     0,     0,   454,     0,    34,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     0,   498,    35,   580,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    36,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,     0,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   500,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   501,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,     0,
     391,   392,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   503,   408,   409,
     410,     0,   411,   412,     0,   413,     0,   415,   416,   417,
     418,   419,     0,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,   427,   428,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,     0,     0,
     440,   441,   442,   443,   444,   445,   446,     0,   447,     0,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   928,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   500,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   501,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   503,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2595,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,     0,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   500,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   501,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,     0,   391,   392,
     393,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   503,   408,   409,   410,     0,
     411,   412,     0,   413,     0,   415,   416,   417,   418,   419,
       0,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,   427,   428,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,     0,     0,   440,   441,
     442,   443,   444,   445,   446,     0,   447,     0,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1667,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     500,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   501,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   503,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1772,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,     0,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   500,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     501,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,     0,   391,   392,   393,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   503,   408,   409,   410,     0,   411,   412,
       0,   413,     0,   415,   416,   417,   418,   419,     0,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,   427,
     428,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,     0,     0,   440,   441,   442,   443,
     444,   445,   446,     0,   447,     0,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     0,     0,     0,
       0,  2448,  1243,   548,     0,     0,  1627,   824,     0,     0,
       0,     0,     0,  2567,  1628,  1629,  1630,  1631,    94,    95,
      96,    97,    98,    99,   100,   101,  1061,   102,   103,   104,
    1062,  1063,  1064,  1065,  1066,  1067,  1068,   105,   106,  1069,
     107,   108,   109,  2449,   111,   112,   113,     0,   667,  2450,
     669,   670,  1070,   119,   120,   121,   122,  1071,   123,  1072,
    1073,   124,   125,   671,   672,   128,  1074,   129,   130,   131,
     132,     0,  1075,  2451,  1076,   135,   136,   137,   138,   139,
     140,  2452,   142,   143,   144,  1077,   145,   146,   147,   148,
     149,   150,  1078,  2453,   152,   153,   154,  1079,  1080,  1081,
    2454,  1082,  1083,  1084,   156,   157,   158,   159,   160,   161,
     162,   677,   678,   165,  1085,   166,  1086,   167,   168,   169,
     170,   171,   172,  1087,   173,   174,   175,   176,   177,  1088,
    1089,   178,   179,   679,   181,   182,  1090,   183,   184,   185,
    1091,   186,   187,   188,  1092,   189,   190,   191,   192,     0,
     194,   195,   196,   197,   198,     0,  1093,   200,  1094,   201,
     202,   680,   204,  1095,   205,  1096,   206,  2455,  1097,  2456,
     209,   210,  2457,  2458,   213,  1098,   214,  1099,     0,     0,
     217,  1100,   218,   219,   220,   221,   222,   223,   224,  2459,
     226,   227,   228,   229,  1101,   230,   231,   232,   233,   234,
     235,  1102,   236,  2460,     0,   239,   240,   241,   242,   243,
     687,   688,  1103,   689,  1104,   247,  2461,  2462,   250,  2463,
     252,   253,   254,   255,   256,   257,  1105,  1106,   258,  2464,
     260,  2465,  1107,   262,   263,   264,  1108,  1109,   265,   266,
     267,   268,   269,  2466,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   696,  2467,   698,   292,   293,   294,  2468,  1110,
     296,   297,  2469,   299,  1111,     0,   301,   700,   303,   304,
     305,  1112,   306,   307,  1113,  1114,  2470,   309,   310,  1115,
    1116,   311,     0,  2471,   314,  2472,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,  1117,   327,   328,
       0,   330,   331,     0,   333,   334,   335,  1118,   336,   337,
     338,   339,   340,   341,  1119,   342,   343,   344,   703,   346,
     347,   348,   349,  1120,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,  1121,  1122,   362,   363,
    2473,   365,   366,   367,   705,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,  1123,   380,   381,   382,
     383,   384,  1124,   385,  2474,   387,   388,   389,  2475,   391,
     392,   708,   394,  1125,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,  2476,   408,     0,   410,
    1126,   411,   412,  1127,   413,  2477,   415,   416,   417,   418,
     419,  1128,   711,   712,  1129,  1130,   422,   423,     0,   425,
       0,  1131,   427,   428,  2478,   430,   431,   432,   433,   434,
    1132,  1133,   435,   436,   437,   438,   439,  1134,  1135,   440,
     441,   442,   443,   444,     0,   714,  1137,   447,  2479,   449,
     450,   451,   452,   453,  1138,  1139,   454,  1140,  1141,   455,
     456,   457,   458,   459,   460,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   472,   473,   474,   475,
       0,   498,     0,  1632,  1633,  1634,  1627,  2480,  2481,  1637,
    1638,  1639,  1640,     0,  1628,  1629,  1630,  1631,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   500,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   501,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   503,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       0,     0,     0,  1632,  1633,  1634,     0,  1635,  1636,  1637,
    1638,  1639,  1640,  1320,     0,     0,  1321,     0,     0,     0,
    1322,  1323,  1324,  1325,  1326,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1327,
       0,     0,  1320,     0,     0,  1321,     0,  1329,     0,  1322,
    1323,  1324,  1325,  1326,  1330,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,     0,     0,     0,  1329,  1320,     0,  1331,
    1321,     0,     0,  1330,  1322,  1323,  1324,  1325,  1326,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1327,     0,     0,  1320,     0,  1331,  1321,
       0,  1329,     0,  1322,  1323,  1324,  1325,  1326,  1330,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1327,     0,     0,     0,     0,     0,     0,     0,
    1329,     0,     0,  1331,     0,  1320,     0,  1330,  1321,     0,
       0,     0,  1322,  1323,  1324,  1325,  1326,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1327,  1331,     0,     0,     0,     0,     0,     0,  1329,
    1332,     0,     0,     0,     0,     0,  1330,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1333,     0,     0,     0,
       0,  1334,     0,     0,     0,     0,     0,     0,     0,  1332,
       0,  1331,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1335,  1336,  1333,     0,     0,     0,     0,
    1334,     0,     0,     0,     0,     0,     0,     0,  1337,     0,
       0,     0,     0,     0,  1332,     0,     0,     0,     0,     0,
       0,     0,  1335,  1336,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,     0,     0,  1334,     0,  1337,     0,     0,
       0,     0,     0,  1332,     0,     0,  1338,     0,     0,  1339,
       0,     0,     0,     0,     0,     0,     0,  1335,  1336,  1333,
       0,     0,     0,  1340,  1334,     0,  1341,     0,     0,     0,
       0,     0,  1337,     0,     0,  1338,     0,     0,  1339,     0,
       0,     0,  1332,     0,     0,     0,  1335,  1336,     0,     0,
       0,     0,  1340,     0,     0,  1341,     0,     0,  1333,     0,
       0,  1337,     0,  1334,     0,     0,     0,     0,     0,     0,
    1338,     0,     0,  1339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1335,  1336,  1340,     0,     0,
    1341,     0,     0,     0,     0,     0,     0,     0,     0,  1338,
    1337,     0,  1339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1342,  1340,     0,     0,  1341,
    1320,     0,     0,  1321,     0,     0,     0,  1322,  1323,  1324,
    1325,  1326,     0,     0,     0,     0,     0,     0,  1338,     0,
       0,  1339,     0,     0,  1342,     0,  1327,     0,     0,     0,
       0,     0,     0,     0,  1329,  1340,     0,     0,  1341,     0,
       0,  1330,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1342,
       0,     0,     0,     0,     0,     0,  1331,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1320,     0,     0,  1321,  1342,     0,
       0,  1322,  1323,  1324,  1325,  1326,     0,  1343,     0,     0,
    1344,  1345,  1346,     0,  1347,  1348,  1349,  1350,  1351,  1352,
    1327,     0,     0,     0,  2306,     0,     0,     0,  1329,     0,
       0,     0,     0,     0,     0,  1330,  1343,  1342,     0,  1344,
    1345,  1346,     0,  1347,  1348,  1349,  1350,  1351,  1352,     0,
       0,     0,     0,  2393,     0,     0,     0,     0,  1320,     0,
    1331,  1321,     0,     0,     0,  1322,  1323,  1324,  1325,  1326,
       0,  1343,     0,     0,  1344,  1345,  1346,  1332,  1347,  1348,
    1349,  1350,  1351,  1352,  1327,     0,     0,     0,  2542,     0,
       0,     0,  1329,  1333,     0,     0,     0,     0,  1334,  1330,
    1343,     0,     0,  1344,  1345,  1346,     0,  1347,  1348,  1349,
    1350,  1351,  1352,     0,     0,     0,     0,  2564,     0,  1320,
    1335,  1336,  1321,     0,  1331,     0,  1322,  1323,  1324,  1325,
    1326,     0,     0,     0,     0,  1337,     0,     0,     0,  1343,
       0,     0,  1344,  1345,  1346,  1327,  1347,  1348,  1349,  1350,
    1351,  1352,     0,  1329,     0,     0,  2707,     0,     0,     0,
    1330,  1332,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1338,     0,     0,  1339,  1333,     0,     0,
       0,   507,  1334,     0,     0,  1331,     0,     0,     0,     0,
    1340,     0,     0,  1341,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1335,  1336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1337,
       0,     0,     0,     0,     0,  1332,     0,     0,     0,     0,
       0,     0,     0,     0,   508,     0,     0,     0,     0,     0,
       0,  1333,     0,     0,  1320,     0,  1334,  1321,     0,     0,
     509,  1322,  1323,  1324,  1325,  1326,     0,  1338,     0,     0,
    1339,     0,     0,     0,     0,     0,     0,     0,  1335,  1336,
    1327,     0,     0,     0,  1340,     0,     0,  1341,  1329,     0,
       0,     0,  1342,  1337,     0,  1330,  1332,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1333,     0,   510,     0,     0,  1334,     0,     0,
    1331,     0,     0,     0,   511,     0,     0,     0,     0,     0,
       0,  1338,     0,     0,  1339,     0,   512,     0,     0,  1335,
    1336,   513,     0,     0,     0,     0,     0,     0,  1340,     0,
       0,  1341,     0,     0,  1337,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   514,     0,
       0,     0,     0,     0,     0,     0,  1342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1338,     0,  1343,  1339,     0,  1344,  1345,  1346,
       0,  1347,  1348,  1349,  1350,  1351,  1352,     0,     0,  1340,
       0,  2770,  1341,   515,     0,     0,     0,   516,     0,     0,
       0,  1332,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1333,     0,     0,
    1342,     0,  1334,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1335,  1336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1343,  1337,
     517,  1344,  1345,  1346,     0,  1347,  1348,  1349,  1350,  1351,
    1352,     0,     0,     0,   518,  2877,     0,     0,     0,     0,
       0,  1342,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1338,     0,     0,
    1339,     0,     0,     0,     0,     0,     0,   519,     0,     0,
     520,     0,     0,     0,  1340,     0,     0,  1341,   521,     0,
       0,   522,  1343,     0,     0,  1344,  1345,  1346,     0,  1347,
    1348,  1349,  1350,  1351,  1352,     0,     0,     0,     0,  2925,
     523,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   524,     0,     0,     0,     0,     0,
       0,   525,     0,     0,     0,     0,     0,     0,     0,     0,
     526,     0,     0,     0,     0,     0,   527,     0,     0,     0,
       0,     0,     0,  1343,     0,     0,  1344,  1345,  1346,     0,
    1347,  1348,  1349,  1350,  1351,  1352,     0,     0,     0,     0,
    2938,   528,     0,     0,     0,     0,  1342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1060,  1343,     0,
       0,  1344,  1345,  1346,     0,  1347,  1348,  1349,  1350,  1351,
    1352,     0,     0,  1503,    94,    95,    96,    97,    98,    99,
     100,   101,  1061,   102,   103,   104,  1062,  1063,  1064,  1065,
    1066,  1067,  1068,   105,   106,  1069,   107,   108,   109,     0,
     111,   112,   113,   748,   749,     0,   750,   751,  1070,   119,
     120,   121,   122,  1071,   123,  1072,  1073,   124,   125,   752,
     753,   128,  1074,   129,   130,   131,   132,   754,  1075,     0,
    1076,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,  1077,   145,   146,   147,   148,   149,   150,  1078,     0,
     152,   153,   154,  1079,  1080,  1081,     0,  1082,  1083,  1084,
     156,   157,   158,   159,   160,   161,   162,   755,   756,   165,
    1085,   166,  1086,   167,   168,   169,   170,   171,   172,  1087,
     173,   174,   175,   176,   177,  1088,  1089,   178,   179,   180,
     181,   182,  1090,   183,   184,   185,  1091,   186,   187,   188,
    1092,   189,   190,   191,   192,   757,   194,   195,   196,   197,
     198,   758,  1093,   200,  1094,   201,   202,   759,   204,  1095,
     205,  1096,   206,     0,  1097,     0,   209,   210,   760,     0,
     213,  1098,   214,  1099,   761,   762,   217,  1100,   218,   219,
     220,   221,   222,   223,   224,     0,   226,   227,   228,   229,
    1101,   230,   231,   232,   233,   234,   235,  1102,   236,     0,
     763,   239,   240,   241,   242,   243,   764,   765,  1103,   766,
    1104,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,  1105,  1106,   258,     0,   260,     0,  1107,   262,
     263,   264,  1108,  1109,   265,   266,   267,   268,   269,   767,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   768,     0,
     769,   292,   293,   294,   770,  1110,   296,   297,     0,   299,
    1111,   771,   301,   772,   303,   304,   305,  1112,   306,   307,
    1113,  1114,   308,   309,   310,  1115,  1116,   311,   773,     0,
     314,     0,   774,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,  1117,   327,   328,   775,   330,   331,   776,
     333,   334,   335,  1118,   336,   337,   338,   339,   340,   341,
    1119,   342,   343,   344,   777,   346,   347,   348,   349,  1120,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,  1121,  1122,   362,   363,     0,   365,   366,   367,
     778,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,  1123,   380,   381,   382,   383,   384,  1124,   385,
     779,   387,   388,   389,     0,   391,   392,   780,   394,  1125,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   781,   408,   782,   410,  1126,   411,   412,  1127,
     413,     0,   415,   416,   417,   418,   419,  1128,   783,   784,
    1129,  1130,   422,   423,   785,   425,   786,  1131,   427,   428,
     787,   430,   431,   432,   433,   434,  1132,  1133,   435,   436,
     437,   438,   439,  1134,  1135,   440,   441,   442,   443,   444,
    1136,   789,  1137,   447,     0,   449,   450,   451,   452,   453,
    1138,  1139,   454,  1140,  1141,   455,   456,   457,   458,   459,
     460,   790,   791,   792,   793,   794,   795,   796,   797,   798,
     799,   800,   472,   473,   474,   475,   498,     0,     0,     0,
       0,     0,     0,     0,     0,  1751,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,     0,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   500,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   501,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,     0,   391,   392,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   503,   408,   409,   410,     0,   411,   412,     0,   413,
       0,   415,   416,   417,   418,   419,     0,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,   427,   428,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,     0,   447,     0,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   747,  1243,   548,     0,     0,
       0,   824,     0,     0,  2256,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   748,   749,     0,   750,   751,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   752,   753,   128,
       0,   129,   130,   131,   132,   754,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   755,   756,   165,  1379,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   757,   194,   195,   196,   197,   198,   758,
    1244,   200,     0,   201,   202,   759,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   760,     0,   213,     0,
     214,     0,   761,   762,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   763,   239,
     240,   241,   242,   243,   764,   765,     0,   766,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   767,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   768,     0,   769,   292,
     293,   294,   770,     0,   296,   297,     0,   299,     0,   771,
     301,   772,   303,   304,   305,     0,   306,   307,  1245,     0,
     308,   309,   310,     0,     0,   311,   773,     0,   314,     0,
     774,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   775,   330,   331,   776,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   777,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   778,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   779,   387,
     388,   389,     0,   391,   392,   780,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     781,   408,   782,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   783,   784,     0,     0,
     422,   423,   785,   425,   786,  1246,   427,   428,   787,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,  1136,   789,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   790,
     791,   792,   793,   794,   795,   796,   797,   798,   799,   800,
     472,   473,   474,   475,   747,  1243,   548,     0,     0,     0,
     824,  1247,  1248,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     748,   749,     0,   750,   751,     0,   119,   120,   121,   122,
       0,   123,     0,     0,   124,   125,   752,   753,   128,     0,
     129,   130,   131,   132,   754,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   755,   756,   165,  1381,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   757,   194,   195,   196,   197,   198,   758,  1244,
     200,     0,   201,   202,   759,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   760,     0,   213,     0,   214,
       0,   761,   762,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   763,   239,   240,
     241,   242,   243,   764,   765,     0,   766,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   767,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   768,     0,   769,   292,   293,
     294,   770,     0,   296,   297,     0,   299,     0,   771,   301,
     772,   303,   304,   305,     0,   306,   307,  1245,     0,   308,
     309,   310,     0,     0,   311,   773,     0,   314,     0,   774,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   775,   330,   331,   776,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   777,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,     0,   365,   366,   367,   778,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   779,   387,   388,
     389,     0,   391,   392,   780,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   781,
     408,   782,   410,     0,   411,   412,     0,   413,     0,   415,
     416,   417,   418,   419,     0,   783,   784,     0,     0,   422,
     423,   785,   425,   786,  1246,   427,   428,   787,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,  1136,   789,     0,
     447,     0,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   790,   791,
     792,   793,   794,   795,   796,   797,   798,   799,   800,   472,
     473,   474,   475,   747,  1243,   548,     0,     0,     0,   824,
    1247,  1248,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   748,
     749,     0,   750,   751,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   752,   753,   128,     0,   129,
     130,   131,   132,   754,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   755,   756,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   757,   194,   195,   196,   197,   198,   758,  1244,   200,
       0,   201,   202,   759,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   760,     0,   213,     0,   214,     0,
     761,   762,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   763,   239,   240,   241,
     242,   243,   764,   765,     0,   766,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   767,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   768,     0,   769,   292,   293,   294,
     770,     0,   296,   297,     0,   299,     0,   771,   301,   772,
     303,   304,   305,     0,   306,   307,  1245,     0,   308,   309,
     310,     0,     0,   311,   773,     0,   314,     0,   774,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   775,   330,   331,   776,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     777,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   778,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   779,   387,   388,   389,
       0,   391,   392,   780,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   781,   408,
     782,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   783,   784,     0,     0,   422,   423,
     785,   425,   786,  1246,   427,   428,   787,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,  1136,   789,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   790,   791,   792,
     793,   794,   795,   796,   797,   798,   799,   800,   472,   473,
     474,   475,     0,     0,  1320,     0,     0,  1321,     0,  1247,
    1248,  1322,  1323,  1324,  1325,  1326,     0,  1320,     0,     0,
    1321,     0,     0,     0,  1322,  1323,  1324,  1325,  1326,     0,
    1327,     0,     0,     0,  1778,     0,     0,     0,  1329,     0,
       0,     0,     0,  1327,     0,  1330,     0,     0,     0,     0,
       0,  1329,  1320,     0,     0,  1321,     0,     0,  1330,  1322,
    1323,  1324,  1325,  1326,     0,  1320,     0,     0,  1321,     0,
    1331,     0,  1322,  1323,  1324,  1325,  1326,     0,  1327,     0,
       0,     0,     0,  1331,     0,     0,  1329,     0,     0,     0,
       0,  1327,     0,  1330,  1980,     0,     0,     0,     0,  1329,
       0,     0,     0,     0,     0,     0,  1330,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1331,     0,
       0,  1779,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1331,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1320,     0,     0,  1321,     0,
       0,     0,  1322,  1323,  1324,  1325,  1326,     0,     0,     0,
       0,  1332,     0,     0,  2019,     0,     0,     0,     0,  2020,
       0,  1327,     0,     0,  1332,     0,     0,  1333,     0,  1329,
       0,     0,  1334,     0,     0,     0,  1330,     0,     0,     0,
    1333,     0,     0,     0,     0,  1334,     0,     0,  3026,     0,
       0,     0,     0,     0,  1335,  1336,     0,     0,     0,  1332,
       0,  1331,     0,     0,     0,     0,     0,  1335,  1336,  1337,
       0,     0,  1332,     0,     0,  1333,     0,     0,     0,     0,
    1334,     0,  1337,     0,     0,     0,     0,     0,  1333,     0,
       0,     0,     0,  1334,     0,     0,     0,     0,     0,     0,
       0,     0,  1335,  1336,     0,     0,     0,  1338,     0,     0,
    1339,     0,     0,     0,     0,  1335,  1336,  1337,     0,     0,
    1338,     0,     0,  1339,  1340,     0,     0,  1341,     0,     0,
    1337,     0,     0,     0,     0,     0,     0,  1340,     0,     0,
    1341,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1338,     0,     0,  1339,     0,
       0,     0,  1332,     0,     0,     0,     0,     0,  1338,     0,
       0,  1339,  1340,     0,     0,  1341,     0,     0,  1333,     0,
       0,     0,     0,  1334,     0,  1340,     0,     0,  1341,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3027,     0,
       0,     0,     0,     0,     0,  1335,  1336,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1342,     0,     0,     0,
    1337,     0,     0,     0,     0,  1320,     0,     0,  1321,  1342,
       0,     0,  1322,  1323,  1324,  1325,  1326,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1327,     0,     0,  2025,     0,     0,     0,  1338,  1329,
       0,  1339,     0,     0,  1342,     0,  1330,     0,     0,     0,
       0,     0,     0,     0,     0,  1340,  1783,  1342,  1341,  1320,
       0,     0,  1321,     0,     0,     0,  1322,  1323,  1324,  1325,
    1326,  1331,     0,     0,     0,     0,  1992,     0,     0,     0,
       0,     0,     0,     0,     0,  1327,     0,     0,     0,     0,
       0,     0,     0,  1329,     0,     0,     0,     0,  1343,     0,
    1330,  1344,  1345,  1346,     0,  1347,  1348,  1349,  1350,  1351,
    1352,  1343,     0,     0,  1344,  1345,  1346,     0,  1347,  1348,
    1349,  1350,  1351,  1352,     0,  1331,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1343,  1342,     0,  1344,
    1345,  1346,     0,  1347,  1348,  1349,  1350,  1351,  1352,  1343,
       0,     0,  1344,  1345,  1346,     0,  1347,  1348,  1349,  1350,
    1351,  1352,  1332,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1333,     0,
       0,     0,     0,  1334,     0,     0,     0,     0,  1320,     0,
       0,  1321,     0,     0,     0,  1322,  1323,  1324,  1325,  1326,
       0,     0,     0,     0,     0,  1335,  1336,     0,     0,     0,
       0,  2030,     0,     0,  1327,     0,  1332,  2032,     0,     0,
    1337,     0,  1329,     0,     0,     0,     0,     0,     0,  1330,
       0,     0,  1333,     0,     0,     0,     0,  1334,     0,  1343,
       0,     0,  1344,  1345,  1346,     0,  1347,  1348,  1349,  1350,
    1351,  1352,     0,     0,  1331,     0,     0,     0,  1338,  1335,
    1336,  1339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1320,  1337,  1340,  1321,     0,  1341,     0,
    1322,  1323,  1324,  1325,  1326,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1327,
       0,     0,     0,     0,     0,     0,     0,  1329,     0,     0,
       0,     0,  1338,     0,  1330,  1339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1320,     0,  1340,
    1321,     0,  1341,     0,  1322,  1323,  1324,  1325,  1326,  1331,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1327,     0,  1332,  2305,     0,     0,     0,
       0,  1329,     0,     0,     0,     0,     0,  1342,  1330,     0,
       0,  1333,     0,     0,     0,     0,  1334,     0,     0,     0,
       0,  1320,     0,     0,  1321,     0,     0,     0,  1322,  1323,
    1324,  1325,  1326,  1331,     0,     0,     0,     0,  1335,  1336,
       0,     0,     0,     0,     0,     0,     0,  1327,     0,     0,
       0,     0,     0,  1337,     0,  1329,     0,     0,     0,     0,
       0,  1342,  1330,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1332,     0,     0,     0,     0,     0,     0,  1331,     0,     0,
       0,  1338,     0,     0,  1339,     0,  1333,     0,     0,     0,
       0,  1334,     0,     0,     0,     0,     0,     0,  1340,  1343,
       0,  1341,  1344,  1345,  1346,     0,  1347,  1348,  1349,  1350,
    1351,  1352,     0,  1335,  1336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1332,     0,     0,     0,  1337,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,     0,     0,  1334,     0,     0,     0,     0,
       0,     0,     0,  1343,     0,     0,  1344,  1345,  1346,     0,
    1347,  1348,  1349,  1350,  1351,  1352,  1338,  1335,  1336,  1339,
       0,     0,     0,     0,     0,     0,     0,     0,  1332,     0,
       0,     0,  1337,  1340,     0,     0,  1341,     0,     0,     0,
    1342,     0,     0,     0,  1333,     0,     0,     0,     0,  1334,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1338,  1335,  1336,  1339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1337,  1340,     0,  1320,
    1341,     0,  1321,     0,     0,     0,  1322,  1323,  1324,  1325,
    1326,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1327,     0,     0,     0,     0,
       0,     0,     0,  1329,  1338,  1342,     0,  1339,     0,     0,
    1330,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1340,  1343,     0,  1341,  1344,  1345,  1346,     0,  1347,
    1348,  1349,  1350,  1351,  1352,  1331,     0,     0,  2260,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1343,     0,     0,
    1344,  1345,  1346,  1342,  1347,  1348,  1349,  1350,  1351,  1352,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1333,     0,     0,     0,     0,  1334,     0,     0,
       0,  1343,     0,     0,  1344,  1345,  1346,     0,  1347,  1348,
    1349,  1350,  1351,  1352,     0,     0,     0,     0,     0,  1335,
    1336,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1337,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1343,     0,     0,  1344,  1345,
    1346,     0,  1347,  1348,  1349,  1350,  1351,  1352,     0,     0,
       0,     0,  1338,     0,     0,  1339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1340,
       0,     0,  1341,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1342,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1060,
       0,  1688,     0,  1343,     0,     0,  1344,  1345,  1346,     0,
    1347,  1348,  1349,  1350,  1798,  1352,    94,    95,    96,    97,
      98,    99,   100,   101,  1061,   102,   103,   104,  1062,  1063,
    1064,  1065,  1066,  1067,  1068,   105,   106,  1069,   107,   108,
     109,     0,   111,   112,   113,   748,   749,     0,   750,   751,
    1070,   119,   120,   121,   122,  1071,   123,  1072,  1073,   124,
     125,   752,   753,   128,  1074,   129,   130,   131,   132,   754,
    1075,     0,  1076,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,  1077,   145,   146,   147,   148,   149,   150,
    1078,     0,   152,   153,   154,  1079,  1080,  1081,     0,  1082,
    1083,  1084,   156,   157,   158,   159,   160,   161,   162,   755,
     756,   165,  1085,   166,  1086,   167,   168,   169,   170,   171,
     172,  1087,   173,   174,   175,   176,   177,  1088,  1089,   178,
     179,   180,   181,   182,  1090,   183,   184,   185,  1091,   186,
     187,   188,  1092,   189,   190,   191,   192,   757,   194,   195,
     196,   197,   198,   758,  1093,   200,  1094,   201,   202,   759,
     204,  1095,   205,  1096,   206,     0,  1097,     0,   209,   210,
     760,     0,   213,  1098,   214,  1099,   761,   762,   217,  1100,
     218,   219,   220,   221,   222,   223,   224,     0,   226,   227,
     228,   229,  1101,   230,   231,   232,   233,   234,   235,  1102,
     236,     0,   763,   239,   240,   241,   242,   243,   764,   765,
    1103,   766,  1104,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,  1105,  1106,   258,     0,   260,     0,
    1107,   262,   263,   264,  1108,  1109,   265,   266,   267,   268,
     269,   767,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     768,     0,   769,   292,   293,   294,   770,  1110,   296,   297,
       0,   299,  1111,   771,   301,   772,   303,   304,   305,  1112,
     306,   307,  1113,  1114,   308,   309,   310,  1115,  1116,   311,
     773,     0,   314,     0,   774,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,  1117,   327,   328,   775,   330,
     331,   776,   333,   334,   335,  1118,   336,   337,   338,   339,
     340,   341,  1119,   342,   343,   344,   777,   346,   347,   348,
     349,  1120,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,  1121,  1122,   362,   363,     0,   365,
     366,   367,   778,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,  1123,   380,   381,   382,   383,   384,
    1124,   385,   779,   387,   388,   389,     0,   391,   392,   780,
     394,  1125,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   781,   408,   782,   410,  1126,   411,
     412,  1127,   413,     0,   415,   416,   417,   418,   419,  1128,
     783,   784,  1129,  1130,   422,   423,   785,   425,   786,  1131,
     427,   428,   787,   430,   431,   432,   433,   434,  1132,  1133,
     435,   436,   437,   438,   439,  1134,  1135,   440,   441,   442,
     443,   444,  1136,   789,  1137,   447,     0,   449,   450,   451,
     452,   453,  1138,  1139,   454,  1140,  1141,   455,   456,   457,
     458,   459,   460,   790,   791,   792,   793,   794,   795,   796,
     797,   798,   799,   800,   472,   473,   474,   475,  1060,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,  1061,   102,   103,   104,  1062,  1063,  1064,
    1065,  1066,  1067,  1068,   105,   106,  1069,   107,   108,   109,
       0,   111,   112,   113,   748,   749,     0,   750,   751,  1070,
     119,   120,   121,   122,  1071,   123,  1072,  1073,   124,   125,
     752,   753,   128,  1074,   129,   130,   131,   132,   754,  1075,
       0,  1076,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,  1077,   145,   146,   147,   148,   149,   150,  1078,
       0,   152,   153,   154,  1079,  1080,  1081,     0,  1082,  1083,
    1084,   156,   157,   158,   159,   160,   161,   162,   755,   756,
     165,  1085,   166,  1086,   167,   168,   169,   170,   171,   172,
    1087,   173,   174,   175,   176,   177,  1088,  1089,   178,   179,
     180,   181,   182,  1090,   183,   184,   185,  1091,   186,   187,
     188,  1092,   189,   190,   191,   192,   757,   194,   195,   196,
     197,   198,   758,  1093,   200,  1094,   201,   202,   759,   204,
    1095,   205,  1096,   206,     0,  1097,     0,   209,   210,   760,
       0,   213,  1098,   214,  1099,   761,   762,   217,  1100,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,  1101,   230,   231,   232,   233,   234,   235,  1102,   236,
       0,   763,   239,   240,   241,   242,   243,   764,   765,  1103,
     766,  1104,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,  1105,  1106,   258,     0,   260,     0,  1107,
     262,   263,   264,  1108,  1109,   265,   266,   267,   268,   269,
     767,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   768,
       0,   769,   292,   293,   294,   770,  1110,   296,   297,     0,
     299,  1111,   771,   301,   772,   303,   304,   305,  1112,   306,
     307,  1113,  1114,   308,   309,   310,  1115,  1116,   311,   773,
       0,   314,     0,   774,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,  1117,   327,   328,   775,   330,   331,
     776,   333,   334,   335,  1118,   336,   337,   338,   339,   340,
     341,  1119,   342,   343,   344,   777,   346,   347,   348,   349,
    1120,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,  1121,  1122,   362,   363,     0,   365,   366,
     367,   778,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,  1123,   380,   381,   382,   383,   384,  1124,
     385,   779,   387,   388,   389,     0,   391,   392,   780,   394,
    1125,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   781,   408,   782,   410,  1126,   411,   412,
    1127,   413,     0,   415,   416,   417,   418,   419,  1128,   783,
     784,  1129,  1130,   422,   423,   785,   425,   786,  1131,   427,
     428,   787,   430,   431,   432,   433,   434,  1132,  1133,   435,
     436,   437,   438,   439,  1134,  1135,   440,   441,   442,   443,
     444,  1136,   789,  1137,   447,     0,   449,   450,   451,   452,
     453,  1138,  1139,   454,  1140,  1141,   455,   456,   457,   458,
     459,   460,   790,   791,   792,   793,   794,   795,   796,   797,
     798,   799,   800,   472,   473,   474,   475,  1060,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,  1834,    99,
     100,   101,  1061,   102,   103,   104,  1062,  1063,  1064,  1065,
    1066,  1067,  1068,   105,   106,  1069,   107,   108,   109,     0,
     111,   112,   113,   748,   749,     0,   750,   751,  1070,   119,
     120,   121,   122,  1071,   123,  1072,  1073,   124,   125,   752,
     753,   128,  1074,   129,   130,   131,   132,   754,  1075,     0,
    1076,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,  1077,   145,   146,   147,   148,   149,   150,  1078,     0,
     152,   153,   154,  1079,  1080,  1081,     0,  1082,  1083,  1084,
     156,   157,   158,   159,   160,   161,   162,   755,   756,   165,
    1085,   166,  1086,   167,   168,   169,   170,   171,   172,  1087,
     173,   174,   175,   176,   177,  1088,  1089,   178,   179,   180,
    1835,   182,  1090,   183,   184,   185,  1091,   186,   187,   188,
    1092,   189,   190,   191,   192,   757,   194,   195,   196,   197,
     198,   758,  1093,   200,  1094,   201,   202,   759,   204,  1095,
     205,  1096,   206,     0,  1097,     0,   209,   210,   760,     0,
     213,  1098,   214,  1099,   761,   762,   217,  1100,   218,   219,
     220,   221,   222,   223,   224,     0,   226,   227,   228,   229,
    1101,   230,   231,   232,   233,   234,   235,  1102,   236,     0,
     763,   239,   240,   241,   242,   243,   764,   765,  1103,   766,
    1104,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,  1105,  1106,   258,     0,   260,     0,  1107,   262,
     263,   264,  1108,  1109,   265,   266,   267,   268,   269,   767,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   768,     0,
     769,   292,   293,   294,   770,  1110,   296,   297,     0,   299,
    1111,   771,   301,   772,   303,   304,   305,  1112,   306,   307,
    1113,  1114,   308,   309,   310,  1115,  1116,   311,   773,     0,
     314,     0,   774,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,  1117,   327,   328,   775,   330,   331,   776,
     333,   334,   335,  1118,   336,   337,   338,   339,   340,   341,
    1119,   342,   343,   344,   777,   346,   347,   348,   349,  1120,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,  1121,  1122,   362,   363,     0,   365,   366,   367,
     778,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,  1123,   380,   381,   382,   383,   384,  1124,  1836,
     779,   387,   388,   389,     0,   391,   392,   780,   394,  1125,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   781,   408,   782,   410,  1126,   411,   412,  1127,
     413,     0,   415,   416,   417,   418,   419,  1128,   783,   784,
    1129,  1130,   422,   423,   785,   425,   786,  1131,   427,   428,
     787,   430,   431,   432,   433,   434,  1132,  1133,   435,   436,
     437,   438,   439,  1134,  1135,   440,   441,   442,   443,   444,
    1136,   789,  1137,   447,     0,   449,   450,   451,   452,   453,
    1138,  1139,   454,  1140,  1141,   455,   456,   457,   458,   459,
     460,   790,   791,   792,   793,   794,   795,   796,   797,   798,
     799,   800,   472,   473,   474,   475,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,     0,   119,   120,
     121,   122,     0,   123,     0,   831,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   834,     0,   835,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   836,   837,   838,   839,   840,   841,   842,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     847,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   855,   856,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,   299,     0,
     861,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   864,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   865,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   868,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   870,   410,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,   420,   421,     0,
       0,   422,   423,   873,   425,   874,     0,   427,   428,   876,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   877,     0,   440,   441,   442,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,   134,     0,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,   152,   153,
     154,     0,     0,     0,   155,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
       0,     0,   258,   259,   260,   261,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
       0,   123,     0,     0,   124,   125,   126,   127,   128,  1441,
     129,   130,   131,   132,   133,     0,     0,  1442,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,  1443,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,  1444,   206,
       0,     0,     0,   209,   210,   500,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
    1445,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   501,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
    1446,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,     0,   391,   392,   393,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   503,
     408,   409,   410,     0,   411,   412,     0,   413,     0,   415,
     416,   417,   418,   419,     0,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,   427,   428,   429,   430,   431,
     432,   433,   434,     0,  1447,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,   445,   446,     0,
     447,     0,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,  1441,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,  1443,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,  1444,   206,     0,
       0,     0,   209,   210,   500,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,  1904,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   501,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,  1446,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   503,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,  1447,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   747,     0,   548,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   748,   749,
       0,   750,   751,     0,   119,   120,   121,   122,     0,   123,
       0,     0,   124,   125,   752,   753,   128,     0,   129,   130,
     131,   132,   754,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   755,   756,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     757,   194,   195,   196,   197,   198,   758,  1244,   200,     0,
     201,   202,   759,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   760,     0,   213,     0,   214,     0,   761,
     762,   217,     0,   218,   219,   220,   221,   222,   223,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   763,   239,   240,   241,   242,
     243,   764,   765,     0,   766,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   767,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   768,     0,   769,   292,   293,   294,   770,
       0,   296,   297,     0,   299,     0,   771,   301,   772,   303,
     304,   305,     0,   306,   307,  1245,     0,   308,   309,   310,
       0,     0,   311,   773,     0,   314,     0,   774,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   775,   330,   331,   776,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   777,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,     0,   365,   366,   367,   778,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   385,   779,   387,   388,   389,     0,
     391,   392,   780,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   781,   408,   782,
     410,     0,   411,   412,     0,   413,     0,   415,   416,   417,
     418,   419,     0,   783,   784,     0,     0,   422,   423,   785,
     425,   786,  1246,   427,   428,   787,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,     0,     0,
     440,   441,   442,   443,   444,  1136,   789,     0,   447,     0,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   799,   800,   472,   473,   474,
     475,   498,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       3,     4,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   500,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   501,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   503,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,   580,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,     0,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   500,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   501,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,   581,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,     0,   391,   392,
     393,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   503,   408,   409,   410,     0,
     411,   412,     0,   413,     0,   415,   416,   417,   418,   419,
       0,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,   427,   428,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,     0,     0,   440,   441,
     442,   443,   444,   445,   446,     0,   447,     0,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,   580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     500,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   624,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   501,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,   581,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   503,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   747,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     3,     4,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   748,   749,     0,   750,   751,     0,
     119,   120,   121,   122,     0,   123,     0,     0,   124,   125,
     752,   753,   128,     0,   129,   130,   131,   132,   754,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   755,   756,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   757,   194,   195,   196,
     197,   198,   758,     0,   200,     0,   201,   202,   759,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   760,
       0,   213,     0,   214,     0,   761,   762,   217,     0,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   763,   239,   240,   241,   242,   243,   764,   765,     0,
     766,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     767,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   768,
       0,   769,   292,   293,   294,   770,     0,   296,   297,     0,
     299,     0,   771,   301,   772,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   773,
       0,   314,     0,   774,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   775,   330,   331,
     776,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   777,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,     0,   365,   366,
     367,   778,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     385,   779,   387,   388,   389,     0,   391,   392,   780,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   781,   408,   782,   410,     0,   411,   412,
       0,   413,     0,   415,   416,   417,   418,   419,     0,   783,
     784,     0,     0,   422,   423,   785,   425,   786,     0,   427,
     428,   787,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,     0,     0,   440,   441,   442,   443,
     444,  1136,   789,     0,   447,     0,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   790,   791,   792,   793,   794,   795,   796,   797,
     798,   799,   800,   472,   473,   474,   475,   498,     0,   580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   500,     0,
    1740,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,  1741,     0,     0,   265,   266,   267,   268,   269,   501,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   503,   408,   409,   410,     0,   411,   412,  1742,
     413,     0,   415,  1743,   417,  1744,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
    1745,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,  2715,     0,     0,
       0,     0,  2716,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,     0,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   500,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   501,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,     0,   391,   392,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   503,   408,   409,   410,     0,   411,   412,     0,   413,
       0,   415,   416,   417,   418,   419,     0,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,   427,   428,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,     0,   447,     0,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     499,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   500,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   501,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   502,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     503,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,   548,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
       0,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   500,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   501,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,     0,   391,   392,   393,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   503,
     408,   409,   410,     0,   411,   412,     0,   413,     0,   415,
     416,   417,   418,   419,     0,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,   427,   428,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,   445,   446,     0,
     447,     0,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   555,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   500,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   501,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   503,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   556,   421,     0,     0,   557,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,   580,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,     0,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   500,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   619,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   501,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,     0,
     391,   392,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   503,   408,   409,
     410,     0,   411,   412,     0,   413,     0,   415,   416,   417,
     418,   419,     0,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,   427,   428,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,     0,     0,
     440,   441,   442,   443,   444,   445,   446,     0,   447,     0,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   500,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   622,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   501,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   503,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,   580,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,     0,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   500,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   626,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   501,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,     0,   391,   392,
     393,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   503,   408,   409,   410,     0,
     411,   412,     0,   413,     0,   415,   416,   417,   418,   419,
       0,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,   427,   428,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,     0,     0,   440,   441,
     442,   443,   444,   445,   446,     0,   447,     0,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,   580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     500,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   501,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   503,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,   656,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,     0,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   500,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     501,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,     0,   391,   392,   393,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   503,   408,   409,   410,     0,   411,   412,
       0,   413,     0,   415,   416,   417,   418,   419,     0,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,   427,
     428,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,     0,     0,   440,   441,   442,   443,
     444,   445,   446,     0,   447,     0,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,   580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   500,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,  1158,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   501,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   503,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,   580,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,     0,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   500,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,  1160,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   501,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,     0,   391,   392,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   503,   408,   409,   410,     0,   411,   412,     0,   413,
       0,   415,   416,   417,   418,   419,     0,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,   427,   428,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,     0,   447,     0,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,   580,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   500,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,  1571,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   501,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     503,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,  2343,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
       0,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   500,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   501,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,     0,   391,   392,   393,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   503,
     408,   409,   410,     0,   411,   412,     0,   413,     0,   415,
     416,   417,   418,   419,     0,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,   427,   428,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,   445,   446,     0,
     447,     0,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,  2357,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   500,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   501,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   503,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,   580,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,     0,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   500,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,  2513,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   501,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,     0,
     391,   392,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   503,   408,   409,
     410,     0,   411,   412,     0,   413,     0,   415,   416,   417,
     418,   419,     0,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,   427,   428,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,     0,     0,
     440,   441,   442,   443,   444,   445,   446,     0,   447,     0,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   500,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   501,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   503,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,     0,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   500,     0,   567,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   568,     0,     0,   265,   266,   267,
     268,   269,   501,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   569,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     570,     0,   385,   386,   387,   388,   389,     0,   391,   392,
     393,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   503,   408,   409,   410,     0,
     411,   412,     0,   413,     0,   415,   416,   417,   418,   419,
       0,   571,   421,     0,     0,   422,   423,   424,   425,   426,
       0,   427,   428,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,     0,     0,   440,   441,
     442,   443,   444,   445,   446,     0,   447,     0,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     500,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   501,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   590,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   503,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,     0,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   500,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   644,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     501,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,     0,   391,   392,   393,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   503,   408,   409,   410,     0,   411,   412,
       0,   413,     0,   415,   416,   417,   418,   419,     0,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,   427,
     428,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,     0,     0,   440,   441,   442,   443,
     444,   445,   446,     0,   447,     0,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   500,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   734,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   501,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   503,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,     0,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   500,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   737,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   501,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,     0,   391,   392,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   503,   408,   409,   410,     0,   411,   412,     0,   413,
       0,   415,   416,   417,   418,   419,     0,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,   427,   428,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,     0,   447,     0,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   500,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   740,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   501,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     503,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
       0,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   500,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   501,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   569,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,     0,   391,   392,   393,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   503,
     408,   409,   410,     0,   411,   412,     0,   413,     0,   415,
     416,   417,   418,   419,     0,   571,   421,     0,     0,   422,
     423,   424,   425,   426,     0,   427,   428,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,   445,   446,     0,
     447,     0,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,  1395,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   500,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   501,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,     0,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   503,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,     0,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   500,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,  1535,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   501,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,     0,
     391,   392,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   503,   408,   409,
     410,     0,   411,   412,     0,   413,     0,   415,   416,   417,
     418,   419,     0,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,   427,   428,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,     0,     0,
     440,   441,   442,   443,   444,   445,   446,     0,   447,     0,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   500,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,  1817,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   501,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   503,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,     0,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   500,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,  1830,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   501,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,     0,   391,   392,
     393,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   503,   408,   409,   410,     0,
     411,   412,     0,   413,     0,   415,   416,   417,   418,   419,
       0,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,   427,   428,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,     0,     0,   440,   441,
     442,   443,   444,   445,   446,     0,   447,     0,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     500,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,  1832,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   501,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   503,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   665,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,  -667,     0,   105,   106,     0,   107,   108,   109,
     666,   111,   112,   113,     0,   667,   668,   669,   670,     0,
     119,   120,   121,   122,     0,   123,     0,     0,   124,   125,
     671,   672,   128,     0,   129,   130,   131,   132,     0,     0,
     673,     0,   135,   136,   137,   138,   139,   140,   674,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     675,   152,   153,   154,     0,     0,     0,   676,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   677,   678,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     679,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,     0,   194,   195,   196,
     197,   198,     0,     0,   200,     0,   201,   202,   680,   204,
       0,   205,     0,   206,   681,     0,   682,   209,   210,  -667,
     683,   213,     0,   214,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   685,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     686,     0,   239,   240,   241,   242,   243,   687,   688,     0,
     689,     0,   247,   690,   691,   250,   692,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   693,   260,   694,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     695,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   696,
     697,   698,   292,   293,   294,     0,     0,   296,   297,   699,
     299,     0,     0,   301,   700,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,     0,
     701,   314,   702,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,     0,   330,   331,
       0,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   703,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   704,   365,   366,
     367,   705,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     385,   706,   387,   388,   389,   707,   391,   392,   708,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   709,   408,     0,   410,     0,   411,   412,
       0,   413,   710,   415,   416,   417,   418,   419,     0,   711,
     712,     0,     0,   422,   423,     0,   425,     0,     0,   427,
     428,   713,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,     0,     0,   440,   441,   442,   443,
     444,     0,   714,     0,   447,   715,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   472,   473,   474,   475,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,     0,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   500,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   501,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,     0,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,     0,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,     0,   365,   366,   367,   368,     0,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,     0,
     391,   392,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   503,   408,   409,
     410,     0,   411,   412,     0,   413,     0,   415,   416,   417,
     418,   419,     0,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,   427,   428,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,     0,     0,
     440,   441,   442,   443,   444,   445,   446,     0,   447,     0,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   665,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   666,   111,   112,   113,     0,   667,   668,
     669,   670,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   671,   672,   128,     0,   129,   130,   131,
     132,     0,     0,   673,     0,   135,   136,   137,   138,   139,
     140,   674,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   675,   152,   153,   154,     0,     0,     0,
     676,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   677,   678,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   679,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,     0,
     194,   195,   196,   197,   198,     0,     0,   200,     0,   201,
     202,   680,   204,     0,   205,     0,   206,   681,     0,   682,
     209,   210,     0,   683,   213,     0,   214,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,   684,   224,   685,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   686,     0,   239,   240,   241,   242,   243,
     687,   688,     0,   689,     0,   247,   690,   691,   250,   692,
     252,   253,   254,   255,   256,   257,     0,     0,   258,   693,
     260,   694,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   695,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   696,   697,   698,   292,   293,   294,     0,     0,
     296,   297,   699,   299,     0,     0,   301,   700,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,     0,   701,   314,   702,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
       0,   330,   331,     0,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   703,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
     704,   365,   366,   367,   705,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   706,   387,   388,   389,   707,   391,
     392,   708,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   709,   408,     0,   410,
       0,   411,   412,     0,   413,   710,   415,   416,   417,   418,
     419,     0,   711,   712,     0,     0,   422,   423,     0,   425,
       0,     0,   427,   428,   713,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,     0,   714,     0,   447,   715,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   665,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   472,   473,   474,   475,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,   666,   111,   112,
     113,     0,   667,   668,   669,   670,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   671,   672,   128,
       0,   129,   130,   131,   132,     0,     0,   673,     0,   135,
     136,   137,   138,   139,   140,   674,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   675,   152,   153,
     154,     0,     0,     0,   676,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   677,   678,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   679,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,     0,   194,   195,   196,   197,   198,     0,
       0,   200,     0,   201,   202,   680,   204,     0,   205,     0,
     206,   681,     0,   682,   209,   210,     0,   683,   213,     0,
     214,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   685,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   686,     0,   239,
     240,   241,   242,   243,   687,   688,     0,   689,     0,   247,
     690,   691,   250,   692,   252,   253,   254,   255,   256,   257,
       0,     0,   258,   693,   260,   694,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   695,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   696,   697,   698,   292,
     293,   294,     0,     0,   296,   297,   699,   299,     0,     0,
     301,   700,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,     0,   701,   314,   702,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,     0,   330,   331,     0,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   703,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,   704,   365,   366,   367,   705,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   706,   387,
     388,   389,   707,   391,   392,   708,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     709,   408,     0,   410,     0,   411,   412,     0,   413,   710,
     415,   416,   417,   418,   419,     0,   711,   712,     0,     0,
     422,   423,     0,   425,     0,     0,   427,   428,   713,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,     0,   714,
       0,   447,   715,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,  2448,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     472,   473,   474,   475,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,  2449,   111,   112,   113,     0,   667,  2450,   669,   670,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   671,   672,   128,     0,   129,   130,   131,   132,     0,
       0,  2451,     0,   135,   136,   137,   138,   139,   140,  2452,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,  2453,   152,   153,   154,     0,     0,     0,  2454,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   677,
     678,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   679,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,     0,   194,   195,
     196,   197,   198,     0,     0,   200,     0,   201,   202,   680,
     204,     0,   205,     0,   206,  2455,     0,  2456,   209,   210,
    2457,  2458,   213,     0,   214,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,   223,   224,  2459,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,  2460,     0,   239,   240,   241,   242,   243,   687,   688,
       0,   689,     0,   247,  2461,  2462,   250,  2463,   252,   253,
     254,   255,   256,   257,     0,     0,   258,  2464,   260,  2465,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,  2658,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     696,  2467,   698,   292,   293,   294,     0,     0,   296,   297,
    2469,   299,     0,     0,   301,   700,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
       0,  2471,   314,  2472,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,     0,   330,
     331,     0,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   703,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,  2473,   365,
     366,   367,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,     0,   387,   388,   389,  2475,   391,   392,   708,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,  2659,   408,     0,   410,     0,   411,
     412,     0,   413,  2477,   415,   416,   417,   418,   419,     0,
     711,   712,     0,     0,   422,   423,     0,   425,     0,     0,
     427,   428,  2478,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,     0,   714,     0,   447,  2479,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   472,   473,   474,   475,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,   666,   111,   112,   113,     0,
     667,   668,   669,   670,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   671,   672,   128,     0,   129,
     130,   131,   132,     0,     0,   673,     0,   135,   136,   137,
     138,   139,   140,   674,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   675,   152,   153,   154,     0,
       0,     0,   676,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   677,   678,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   679,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,     0,   194,   195,   196,   197,   198,     0,     0,   200,
       0,   201,   202,   680,   204,     0,   205,     0,   206,   681,
       0,   682,   209,   210,     0,   683,   213,     0,   214,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   685,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   686,     0,   239,   240,   241,
     242,   243,   687,   688,     0,   689,     0,   247,   690,   691,
     250,   692,   252,   253,   254,   255,   256,   257,     0,     0,
     258,   693,   260,   694,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,     0,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   696,   697,   698,   292,   293,   294,
       0,     0,   296,   297,   699,   299,     0,     0,   301,   700,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,     0,   701,   314,   702,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,     0,   330,   331,     0,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     703,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,   704,   365,   366,   367,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,     0,   387,   388,   389,
     707,   391,   392,   708,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,     0,   408,
       0,   410,     0,   411,   412,     0,   413,   710,   415,   416,
     417,   418,   419,     0,   711,   712,     0,     0,   422,   423,
       0,   425,     0,     0,   427,   428,   713,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,     0,   714,     0,   447,
     715,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   472,   473,
     474,   475
};

static const yytype_int16 yycheck[] =
{
       6,    59,   706,   805,   493,   630,     6,   884,   623,   638,
       0,     0,   632,   805,   534,  1183,    36,  1005,     6,  1287,
     609,     0,  1007,     0,  1401,   536,   589,  1404,   885,   980,
     652,  1362,    16,   584,   712,  1153,  1828,    16,    20,    21,
     529,   985,   887,  1047,  1781,  1752,    31,  1784,   982,    61,
     813,   527,   976,    61,  2179,  2179,   735,  1667,   903,   738,
    1153,  1153,  1153,  1188,   965,   527,   623,   535,   625,  2206,
     627,   916,  2208,   536,  1317,  1318,  1010,  1710,  2083,  1772,
     530,  2220,  1824,  1872,  1873,  1874,     0,    21,  1268,     0,
    2035,  1748,  2227,  1887,    13,    14,    35,   671,   672,     5,
       3,     9,    51,     5,     5,    90,  1763,    59,  1420,    74,
     541,    13,    14,  1370,     5,    11,  2522,  2090,     9,    30,
      16,     5,   924,   643,   698,  1154,    41,     5,    41,    32,
      33,     0,     5,     5,     5,    13,    14,     9,     5,    24,
      13,    14,    13,    14,   170,    30,     5,     5,     9,   118,
      49,   138,     5,    94,   121,     0,  1422,   606,   606,  1901,
     123,  2576,   121,    28,  2598,   188,     5,     5,     5,    80,
      35,     5,     5,     5,    13,    14,    13,    14,     5,   742,
       5,     5,     5,     5,  1282,    11,   108,    76,  2510,    68,
      16,   527,   994,    76,   872,   997,   998,  2612,    87,     3,
       4,     5,    84,  2525,    87,     9,   146,  1282,  2662,   171,
      59,    28,     4,    59,    28,  2506,    42,     9,    35,   170,
    2695,    35,  2089,  1282,    59,    94,  1968,  1969,   171,  2422,
     706,   284,     4,   292,   172,  2793,   356,     9,   286,   116,
     308,  2115,   209,   292,   308,  2761,   128,  2488,    74,    94,
      69,   136,   108,  2021,   272,  1018,    59,   131,   832,   833,
     164,   333,  1025,   377,   118,  2862,   169,   190,   171,    37,
     275,    28,    28,   440,   214,   116,   175,    38,    11,  2147,
    2695,  1646,  1647,    16,   858,   440,  1651,   131,   167,   993,
     119,    60,   191,   357,   805,    11,   395,   196,  2732,    68,
      16,   812,    37,    13,    14,    11,   244,   107,  2097,    42,
      16,   931,   116,   160,   487,   418,   404,   271,   165,   109,
     883,   328,   276,   493,  1993,   498,   162,   148,  1693,  1694,
     500,   498,   333,   405,   233,  2893,    42,   888,   814,   109,
     808,    74,  2347,   498,   160,   460,  2351,   188,   223,  2474,
     357,   439,   292,  2022,  2146,   454,   121,    11,  1991,  2681,
     463,   304,    16,   192,   125,  2338,   917,  2235,    74,   484,
     706,   136,    11,   327,   131,   131,   197,   382,   498,  2976,
     452,  2517,  2519,     0,   498,   119,  2792,   234,  1289,   498,
     416,   210,  2129,   944,   269,   333,   348,   271,    87,   276,
      89,  2143,    91,  2145,   405,   290,   174,   281,  2823,  2925,
     314,   215,   975,   269,  1291,   926,   927,   286,   234,  2660,
     438,   303,   276,   346,  2081,   493,  2083,   368,  2621,   493,
     271,   369,   268,   237,  2992,    74,   283,   281,   381,   174,
     319,   286,  1710,   502,  2859,   498,  1282,  2640,   924,   249,
     498,   452,   160,   502,   329,   165,   341,   257,   192,   501,
     345,   487,  1560,  1052,   405,   416,   269,   405,   237,   456,
    2337,   438,  2906,   442,   500,   498,  1788,   440,   814,   438,
     349,   380,  2936,   405,  2959,  1560,  1561,   402,  2894,   402,
     375,  1442,   432,  1522,  1498,   485,   485,   947,  2789,   348,
    1559,  2269,   348,   378,   349,   446,   485,  1408,   485,   940,
    2384,  1754,  2254,   348,   452,  1783,   536,   993,  1775,   460,
     385,   527,    31,  1789,   973,   973,   234,   416,   410,  1154,
     536,   496,  2671,   416,  1163,   500,   498,  2662,  2662,   392,
     393,   243,  1527,   484,  2959,   348,    55,   450,   449,   498,
     502,   609,   536,   318,   433,   502,   535,   498,   443,   565,
     566,  2427,   544,   438,   546,   547,   578,   498,   385,  2435,
     578,   385,   375,  2895,   485,   283,     4,   118,   462,   498,
    2585,     9,  1762,   589,   460,  2590,   462,   569,  2593,   497,
     496,   460,   498,  1597,   500,   462,   498,   498,   494,   450,
     484,  2393,  1365,   587,  2577,  2550,  2400,   498,   598,   598,
    1184,  1185,   546,  1176,   498,   460,   601,   484,  1240,   598,
     498,   598,   628,   629,   630,   498,   498,   498,   489,   490,
     499,   498,   501,  1258,  1999,  2000,  2001,  2002,  2003,   498,
     498,  2006,  2007,  2008,  2009,  2010,  2011,  2012,  2013,  2014,
    2015,   590,  1272,   502,   499,  2791,   501,   993,  2797,   498,
     498,   498,   203,  2798,   498,   498,   498,   502,   494,  1471,
      11,   498,  2995,   498,   498,   498,   498,    24,   487,  1481,
     343,   347,  1484,    30,   598,   489,   490,   598,   460,  2382,
    2347,   500,  1312,  1313,  2351,  2060,  2061,   489,   490,   199,
     706,    42,   162,  1328,    76,   250,  1182,  1183,  1271,   375,
    1273,   405,   484,  3036,  1277,    87,  2505,   489,   490,  1239,
    1182,  1197,  2727,  1991,  1560,  1561,  1562,  1290,   269,   333,
     271,  1242,   368,    74,   436,  1197,   742,   176,    24,  1359,
     462,  1230,  1231,  1368,    30,  1646,  1647,  1367,  1237,  1369,
    1651,  1314,  1303,   421,  2891,  2388,   489,   490,   491,   492,
     493,   494,   484,   243,  2900,   369,  2508,   227,   223,   405,
    1533,    13,    14,  1241,   493,   491,   492,   493,   494,  1242,
    1582,   500,   462,  1233,   243,   491,   492,   493,   494,   136,
    1582,    76,  1693,  1694,    65,    66,   498,   486,   237,   805,
    2043,   405,    87,  1928,   484,   452,   812,   813,   814,  1934,
     446,  2936,  2936,    24,   269,   364,  2953,  1674,   498,    30,
      24,   243,   499,   805,   830,   502,    30,  1672,     4,   808,
     812,  2623,  1756,     9,  1459,   489,   490,   491,   492,   493,
     494,   131,  1331,   186,   187,  1321,  1182,  1183,   452,    28,
     136,   116,  1467,   859,  1744,  1745,   409,   462,   411,  1321,
    1737,  1197,   498,  1542,   884,    13,    14,  1852,   158,   255,
     256,  1875,   243,   879,   880,   881,    80,   883,   884,   484,
      24,   361,     4,  1440,  1563,  3021,  1565,     9,  2056,  1568,
     243,   498,   581,   498,     4,  2356,   176,  1522,  2359,     9,
      79,   907,   361,   356,   357,  1494,  1495,  1496,   890,    88,
    1467,  2179,   255,   256,   496,   199,   498,   899,   500,  2576,
     926,   927,   160,   378,   613,   136,  1860,   165,  2585,  1486,
       5,   913,  1777,  2590,  1491,   243,  2593,   498,   117,   361,
      32,    33,   924,   290,   926,   927,   958,   959,   496,   961,
     958,   959,   500,   961,   960,  2612,   436,   237,   964,   965,
      13,    14,   651,   652,   653,   654,   481,   952,  1912,   975,
     409,   220,   411,  1917,  2766,  1451,  1539,   436,    24,   365,
     366,   271,   500,   438,    30,  1321,   276,   993,  1477,  1451,
     361,   281,   136,  1482,   341,  1515,   234,   436,   345,    13,
      14,   496,    94,    11,   290,   500,   481,    15,   361,   188,
     499,   291,  1018,   502,   436,    23,    13,    14,   498,  1025,
     678,   200,   365,   366,  1009,   286,    34,    35,   375,  1587,
     409,    24,   411,  1591,   299,  1593,   169,    30,  2695,   498,
       5,  1047,   700,     8,   409,   283,   411,    13,    14,    14,
    2415,   567,   568,   361,   570,   341,   491,    24,   368,   345,
      25,    13,    14,    30,    29,   436,  1659,   498,  1661,  1662,
    2727,  1582,   499,   731,   146,   502,   498,   361,  1554,   290,
      88,    13,    14,   436,  1595,   369,    13,    14,   160,   375,
     136,  2209,  1554,   165,   502,   405,   443,  1660,  1999,  2000,
    2001,  2002,  2003,   368,  2714,  2006,  2007,  2008,  2009,  2010,
    2011,  2012,  2013,  2014,  2015,  1451,  2209,  2209,  2209,   499,
    2388,   405,  2732,  1599,  1834,   499,  1836,   498,   436,   409,
     341,   411,   170,   423,   345,  1698,   446,  1599,   499,   216,
     405,   502,   214,   136,   434,   498,   290,  2315,  1154,    55,
     460,  2858,  1831,    37,  1833,   481,   436,   443,  2035,  2060,
    2061,  1750,   234,   409,   375,   411,  2823,  1959,   452,   136,
    1176,  2159,    56,   498,   484,  2160,  1182,  1183,   150,  2544,
     220,   446,  2072,  2073,  2074,  2075,   844,   150,   498,   151,
     498,  1197,   341,  2144,   499,   460,   499,   502,  2143,   502,
    2145,   345,  2859,   347,   862,   499,   499,   499,   502,   502,
     502,   283,   391,  2201,  2158,   394,  2160,   151,  1554,   484,
     292,  3013,   499,   107,   146,   502,  2836,   499,    13,    14,
     502,   375,   443,   498,   151,   603,  1242,   605,   160,   928,
    2977,  2978,   499,   165,   290,   502,   499,   499,   499,   502,
     502,   502,  1258,  2960,  1932,  1933,   499,    68,  1242,   502,
      13,    14,  1241,  1599,   953,  1271,  1895,  1273,  2113,   151,
    1276,  1277,  2979,  2352,   499,  2354,   368,   502,  1268,  1268,
    1286,  1903,  1288,  1289,  1290,  1291,  1292,  1293,  1294,  1268,
     979,  1268,   214,  3030,   499,   341,   498,   290,   499,   345,
    1282,   502,  2959,   992,   499,   116,   500,   502,  1314,   131,
    1316,   271,   234,   405,   198,  1321,  1322,  1323,  1324,  1325,
    1326,  1327,  1328,   290,  1013,    37,  1332,  1333,  3035,   375,
     299,  1337,  1957,    83,  2699,  1341,   158,   452,  1344,  1345,
    1346,  1347,  1348,  1349,  1350,  1351,  1352,   499,   341,  1355,
     502,   449,   345,   498,   446,   464,  1362,  1268,   450,  1365,
     432,   283,  1368,   499,   176,   249,   502,   315,   460,   499,
     292,   499,   502,   257,   502,   498,    37,  2179,   345,  2547,
     499,  1387,   375,   502,    68,   269,   499,   199,   499,   502,
      74,   502,   484,  1375,  2662,    56,   368,   443,   498,   368,
     151,  1385,  1408,    87,   499,   368,   498,   502,   375,   499,
      13,    14,   502,  1419,  1420,   498,   300,   499,  2038,   499,
     502,    36,   502,  2754,   496,   237,   499,   499,   500,   502,
     171,   498,   116,   405,   118,  1911,   405,    13,    14,    13,
      14,   151,   405,  2394,   151,  1451,   107,   108,  1959,  1911,
     443,  1457,   151,  1459,   276,   116,  2441,    13,    14,   281,
     271,   286,  1951,   347,   205,   276,   343,  2030,  1157,    13,
      14,    13,    14,   498,   446,   405,   443,   446,    37,   291,
     221,   498,  1393,   446,   232,   369,  2343,   496,   460,     5,
     231,   460,  1498,   527,   502,  1501,  1502,   460,  1504,     5,
    2357,    51,  2122,   498,  1980,   389,    13,    14,   319,   498,
     432,   165,   484,   174,  2415,   484,  1522,   498,  1980,   203,
     498,   484,  1998,   531,   335,   498,   498,  1533,   498,   498,
      13,    14,  2700,  1539,   498,   498,  1998,   198,    13,    14,
      13,    14,   498,  2094,    13,    14,    96,     5,  1554,  2025,
       5,  1240,  2929,  2178,  2931,  2180,  2032,    13,    14,   356,
     357,   259,   260,  2025,   365,   366,     5,  2246,   356,   357,
    2032,     5,   122,   498,   527,  1911,  1582,   356,   357,   498,
    2056,   147,   590,   498,   926,   927,   498,   271,   249,  1595,
     140,  1597,   276,  1599,   144,   498,   257,   409,  1604,   411,
    1582,   423,   498,  1609,  1586,  2194,   498,   498,   269,    95,
     271,   352,   434,  1595,     9,   499,   166,   498,   498,   169,
    1531,   433,   433,   498,   436,  2247,   498,   461,  1648,   440,
    2432,   297,  3009,   502,   184,   319,   216,    98,   502,   300,
    1646,  1647,  1648,  2544,  1980,  1651,   499,    37,   375,   283,
     165,   335,   165,  1659,  1660,  1661,  1662,   281,   498,   232,
     416,   498,  1998,  1669,    87,   262,   502,  1673,  2936,   416,
    1676,    55,   706,    55,  1363,   499,   416,   416,  1698,   507,
    2668,   416,   460,   151,    94,   171,   347,  1693,  1694,  2025,
    2210,   500,  1698,   143,   271,  1384,  2032,  1386,   498,   271,
      37,     9,   498,  2179,   498,    36,  1712,   496,   369,  1715,
     414,  1717,    95,   414,   496,   499,   416,  2179,   456,   205,
    2056,   416,   416,   416,   498,   502,   276,    11,   389,   343,
     391,  1737,   497,   394,   284,   221,   502,   504,   502,   507,
     414,   498,  1748,  2363,  1433,   231,  2538,  1767,  1748,   433,
     276,   416,   498,   706,   179,   161,   440,  1763,  2378,   170,
    1748,   440,   499,  1763,   498,  2444,  2445,  2243,    37,   214,
    2474,   502,  1762,  1762,   378,  1763,  1782,   327,   287,   265,
     814,  2243,   223,  1762,   308,  1762,   308,   502,   171,   271,
     499,  1797,  1798,   498,   223,   223,   292,   324,  2699,   284,
     286,   452,   498,   151,   151,   460,   498,    37,   271,   286,
    1816,   499,   499,   496,   481,   286,   405,   481,   499,   499,
     271,   499,   205,  1512,  1513,    37,   499,    37,  1834,  1835,
    1836,   499,   170,   502,   497,   170,   481,   498,   221,  2315,
     499,   499,   499,  2179,   500,   498,     8,   499,   231,    11,
     499,  1762,   499,   499,    16,    17,    18,    19,  1840,     6,
    2662,   814,   499,  2740,    11,   416,   352,   499,    15,  1875,
     499,   499,   499,    20,    21,    22,    23,    24,   499,   498,
      27,   498,   265,    30,    31,   498,   154,    34,    35,   457,
     457,     8,   446,   286,    11,   502,   487,   483,   287,    16,
     287,   287,   438,  1885,   502,  1911,   242,  2243,   416,   271,
     498,   151,   199,   151,   151,  1921,   416,   416,  1900,   416,
     278,   416,   278,   498,  2413,    42,    37,   497,   499,   343,
     499,   284,    49,    80,   286,   460,    37,   502,   946,   499,
      87,    88,    89,    90,    91,   151,   151,   276,   497,   497,
     142,  1957,  2937,  1959,   440,   170,    11,    74,   165,   993,
     499,   499,   499,   457,   499,   405,   499,  2443,   502,   352,
     170,  1977,   296,   170,  1980,   498,   179,  1959,   499,  2315,
    1986,  2443,  1964,  1989,  1966,   502,  1992,   499,  1970,  1971,
     349,   484,  1998,  1999,  2000,  2001,  2002,  2003,  2474,   445,
    2006,  2007,  2008,  2009,  2010,  2011,  2012,  2013,  2014,  2015,
    2068,   499,  2641,  2019,  2020,  2035,    85,  2023,   498,  2025,
     287,   151,   498,   502,  2030,  2902,  2032,  2538,   174,  2035,
     427,    37,   499,   499,   196,   499,    80,   499,  2044,   498,
     993,  2047,   499,  2049,  1955,   497,  2066,   170,    37,   502,
    2056,  2057,   440,  1742,  2060,  2061,   218,   499,   175,  2065,
    2066,   498,   498,  2083,   502,   407,   499,    56,   499,   499,
     502,  2547,   499,   499,   191,  2081,   498,  2083,   498,   196,
     221,  2081,   295,  2083,   221,   498,    55,   183,   487,  2095,
     499,   293,   499,  2081,   499,  2083,   460,   201,   116,  2105,
      37,   223,   498,    82,   189,   276,   276,  2443,   500,   500,
     416,   416,    37,   487,   499,  2121,   233,   271,   107,   500,
     500,   500,   500,   500,   500,   500,   288,   500,   500,   500,
     500,   500,   500,   500,  2936,   500,   108,   500,  2474,   500,
     500,   460,  2767,   500,   286,   500,   500,   498,  1182,  1183,
       8,   500,    37,    11,   500,   500,   500,   500,    16,    17,
      18,    19,     0,  1197,   498,   170,   498,   221,  2174,   459,
     498,   288,  2178,  2179,  2180,   498,    34,   502,    16,    87,
     132,   499,   335,   498,    37,   174,  2662,   151,    74,   499,
     123,   151,    30,    37,   357,   499,   357,  2179,    36,   305,
    2662,    37,   498,  1892,  2883,   498,   326,   499,   502,   198,
     498,  2547,   498,  1902,  1903,  1904,   498,   445,    74,   498,
      37,   247,  2204,    61,  2700,   276,  1234,   188,  1236,  1182,
    1183,   440,  2821,   427,  1923,   498,  2865,  2243,    68,    56,
     289,    68,    80,    55,  1197,   498,   502,   499,   498,    37,
     440,   375,   487,   269,  2260,  2731,   286,    37,  2734,  2874,
     249,   427,   498,   380,  1953,   289,   289,   498,   257,  2731,
     499,   498,  2734,   499,   499,   499,   359,   201,   286,   286,
     269,  2844,   499,  2846,     9,   342,   121,  1321,   499,   438,
     107,     8,  2781,   356,    11,   499,  2207,   498,    34,    16,
      17,    18,    19,  2309,  2310,    23,     9,   598,  2314,  2315,
    2935,   300,   499,  2319,  1465,  1829,  2322,  2323,  2161,  2174,
    2231,  2327,  2233,   485,   486,   487,  2662,   489,   490,   491,
     492,   493,   494,  2377,  2119,  2859,  2608,  2932,  2880,   486,
    2437,  2347,  2987,   490,  2634,  2351,   493,  2347,  2216,  2947,
    2938,  2351,  2980,  2683,   980,   502,  1822,  1835,   347,  2347,
     218,  2221,  2935,  2351,  2700,   482,  2153,  2373,  1321,  2945,
    2178,  2860,   489,   490,   491,   492,   493,   494,  1819,  2933,
     369,   198,   529,   530,   531,  1230,  1891,  1182,  2370,  2078,
    2079,  2080,  1957,  2538,  2204,  2731,  2833,  1782,  2734,   546,
     389,  2407,  2854,   946,   918,  1436,   968,  2975,  1797,  2415,
     967,  2099,  1408,  2915,  2848,  2753,     8,  1451,   565,   566,
     567,   568,  1435,   570,    16,    17,    18,    19,  2434,   970,
     288,  1763,   249,  2369,   581,  1443,  2353,  2443,  2083,  2728,
     257,  2338,  2823,   590,  2081,  1453,  2822,  1455,  2137,  2840,
    1458,  2841,   269,   176,   601,  1282,  1464,  2604,  1466,  1282,
    2936,  1282,  1282,  2918,  2375,  2376,   613,  2963,  2474,  1783,
    1478,  1360,  2919,  1605,  2936,  1483,   199,  1674,  1504,  1487,
    1488,  1489,  1490,   300,  1492,  1493,  1273,  1716,   566,  1713,
    2098,  1751,  2373,  1896,  2815,  1385,  1595,  1242,  1451,  2120,
    1386,   218,    -1,   952,   651,   652,   653,   654,    -1,    -1,
      -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,
    1554,    -1,  2211,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     347,    -1,  2538,    -1,  2516,    -1,    -1,    -1,  2544,    -1,
      -1,  2547,    -1,    -1,  2550,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   369,  2559,  2560,    -1,  2538,  2563,  2247,    -1,
      -1,    -1,    -1,    -1,    -1,  1599,    -1,    -1,   291,    -1,
    2576,   288,   389,    -1,    -1,    -1,  2576,    -1,    -1,  2585,
      -1,    -1,    -1,    -1,  2590,  2585,    -1,  2593,  2576,    -1,
    2590,    -1,    -1,  2593,  2600,  2601,    -1,  2585,    -1,    -1,
    2936,  1554,  2590,    -1,   527,  2593,  2612,    -1,  2614,  2520,
      -1,    -1,  2612,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2603,    -1,    -1,  2612,    -1,  2632,   485,   486,   487,
      -1,   489,   490,   491,   492,   493,   494,    -1,   361,    -1,
      -1,  2330,  2331,  2332,  2333,    -1,  1599,   485,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2662,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     0,
      -1,   818,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2662,    -1,    -1,    -1,    -1,    -1,   409,    -1,   411,  2695,
       0,    -1,    -1,  2699,  2700,  2695,   288,   535,   536,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,  2695,    -1,    -1,
     433,    -1,    -1,   436,    -1,    -1,    -1,  2723,    -1,    -1,
    2740,  2727,    -1,    -1,    -1,  2731,    -1,  2727,  2734,    -1,
      -1,    -1,  2421,    -1,  2740,    -1,    -1,    -1,   885,  2727,
     578,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2754,    -1,
      -1,  2757,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     598,  2767,  2673,    94,    -1,    -1,  2772,    -1,   485,   486,
     487,    -1,   489,   490,   491,   492,   493,   494,    -1,    -1,
      -1,   928,    -1,   706,    94,  2696,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   946,
     947,    -1,    -1,    -1,    -1,   952,   953,   954,  2790,    -1,
      -1,    -1,    -1,    -1,    -1,   146,    -1,  2823,   527,    -1,
      -1,    -1,    -1,  2823,    -1,    -1,    -1,   527,    -1,   160,
      -1,    -1,   979,   980,   165,  2823,   146,    -1,  2844,   170,
    2846,    -1,  2848,    -1,    -1,   992,  2852,    -1,   179,    -1,
     160,    -1,   183,  2859,    -1,   165,    -1,    -1,    -1,  2859,
     170,    -1,  1009,    -1,    -1,    -1,  1013,    -1,    -1,   179,
      -1,  2859,    -1,   183,    -1,    -1,  2882,  1911,    -1,    -1,
      -1,    -1,    -1,   214,    -1,  2796,    -1,    -1,    -1,    -1,
      -1,   814,    -1,   485,   486,   487,  2902,   489,   490,   491,
     492,   493,   494,   234,   214,    -1,    -1,  1915,     8,  2915,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    19,
      -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,  2935,
    2936,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2855,    -1,  1980,    -1,    -1,    -1,
      -1,    -1,   283,  2959,  2936,   286,  2962,  2963,  1911,  2959,
      -1,   292,    -1,    -1,  1998,    -1,    -1,    -1,    -1,    -1,
     808,  2959,    -1,   283,    -1,    -1,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,    -1,  2674,    -1,    -1,    -1,  2995,
      -1,  2025,    -1,    -1,    -1,   326,    -1,   706,  2032,    -1,
      -1,    -1,  1149,  2692,    -1,    -1,   706,    -1,   846,    -1,
    1157,    -1,    -1,    -1,    -1,    -1,   326,    -1,   349,  1166,
      -1,    -1,  2056,     8,    -1,    -1,    11,  1980,    -1,    -1,
    3036,    16,    17,    18,    19,    -1,    -1,    -1,    -1,   349,
      -1,  2952,    -1,    -1,    -1,  1998,   884,    -1,    -1,    34,
      -1,    -1,  1199,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,
     993,    -1,  2025,    -1,   405,    -1,  2765,    -1,    -1,  2032,
      -1,    -1,    -1,  1230,  1231,    -1,  1233,  1234,    -1,  1236,
    1237,    -1,    -1,  1240,    -1,   405,    -1,    -1,    -1,    -1,
      -1,   432,    -1,  2056,    -1,   814,  2795,    -1,    -1,   440,
      -1,    -1,    -1,    -1,   814,    -1,    -1,    -1,     0,    -1,
     958,   959,   432,   961,    -1,    -1,   457,    -1,   459,   460,
     440,  2139,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1287,    -1,    -1,    -1,    -1,  2179,    -1,   457,    -1,   459,
     460,  1298,    -1,    -1,    -1,    -1,    -1,    -1,  2166,    -1,
      -1,    -1,    -1,    -1,    -1,   496,    -1,    -1,   499,   500,
     501,    -1,    -1,  2181,  2182,  2183,  2184,  2185,  2186,  2187,
    2188,  2189,  2190,    -1,  1331,    -1,   496,    -1,   288,   499,
     500,   501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2243,
      -1,    -1,    94,    -1,    -1,  1362,  1363,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2179,    -1,    -1,    -1,
      -1,    -1,     8,   218,    -1,    11,    -1,  1384,     8,  1386,
      16,    11,    -1,    -1,    -1,    -1,    16,    -1,  1395,    -1,
    1397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1182,
    1183,    -1,    -1,   218,   146,    -1,    42,    -1,    -1,    -1,
      -1,    -1,    42,    49,  1197,    -1,    -1,    -1,   160,    49,
      -1,  2315,    -1,   165,   993,    -1,  1433,    -1,   170,    -1,
    2243,  2299,    -1,   993,    -1,  1442,  1443,   179,    74,    -1,
      -1,   183,    -1,   288,    74,    -1,  1453,  1454,  1455,  1456,
      -1,  1458,    -1,    -1,    -1,    -1,    -1,  1464,    -1,  1466,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1477,  1478,   214,   288,    -1,  1482,  1483,    -1,    -1,    -1,
    1487,  1488,  1489,  1490,    -1,  1492,  1493,    -1,    -1,    -1,
      -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2315,    -1,    -1,  1512,  1513,  1514,   144,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1529,    -1,    -1,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,   494,    -1,    -1,    -1,  1321,   175,
      -1,   283,    -1,  1241,   286,   175,  2414,    -1,    -1,  2443,
     292,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,
     196,   191,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
    1268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2474,    -1,    -1,    -1,   326,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
      -1,    -1,    -1,   233,    -1,    -1,    -1,   349,    -1,    -1,
      -1,   805,    -1,  1182,  1183,    -1,    -1,    -1,   812,    -1,
      -1,    -1,  1182,  1183,     8,    -1,    -1,    11,  1197,    -1,
    2443,    -1,    16,    17,    18,    19,  1334,  1197,    -1,    -1,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,   494,
      34,    -1,   288,  2547,    -1,    -1,    -1,    -1,   288,    -1,
    1667,  2474,    -1,   405,    -1,    -1,    -1,  1674,  1451,    -1,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,   494,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     432,    -1,    -1,    -1,    -1,  1393,    -1,    -1,   440,    -1,
      -1,    -1,    -1,  1710,    -1,   899,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   457,    -1,   459,   460,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
     924,    -1,   926,   927,  2547,  1742,    -1,    -1,    -1,    -1,
      -1,  1748,    -1,    -1,   380,    -1,    -1,    -1,    -1,    -1,
     380,    -1,  1321,    -1,   496,    -1,  1763,   499,   500,   501,
    1767,  1321,    -1,  1770,    -1,  1772,    -1,    -1,  2662,    -1,
      -1,  1554,    -1,    -1,    -1,  2643,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    19,    -1,    -1,  2663,  2664,    -1,    -1,    -1,
     994,   186,   187,   997,   998,    -1,  2700,    34,    -1,    -1,
      -1,    -1,  2680,    -1,    -1,    42,  1599,  1824,    -1,    -1,
      -1,    -1,    49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1531,   218,    -1,    -1,  2731,    -1,    -1,
    2734,    -1,    -1,    -1,    -1,    -1,   482,    74,    -1,  2662,
      -1,    -1,   482,   489,   490,   491,   492,   493,   494,   489,
     490,   491,   492,   493,   494,    -1,   251,   252,   253,   254,
     255,   256,    -1,    -1,   259,   260,    -1,    -1,    -1,    -1,
    1887,    -1,  1451,    -1,    -1,  1892,    -1,  2700,  2756,    -1,
      -1,  1451,    -1,    -1,  1901,  1902,  1903,  1904,    -1,    -1,
      -1,    -1,    -1,    -1,   288,    -1,    -1,    -1,  1915,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1923,    -1,  2731,    -1,
      -1,  2734,    -1,    -1,    -1,    -1,    -1,    -1,  1935,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1951,    -1,  1953,    -1,   175,    -1,
    1648,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1968,  1969,     8,   191,    -1,    11,    -1,    -1,   196,
      -1,    16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,
     365,   366,    -1,    -1,  1991,  1554,  1180,    -1,    -1,    34,
      -1,   218,   219,    -1,  1554,    -1,    -1,  1191,    -1,  1193,
    1698,    -1,    -1,    -1,    -1,    -1,   233,    -1,  1202,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1716,    -1,
      -1,    -1,    -1,    -1,    -1,  1219,    -1,    -1,    -1,    -1,
    1599,    -1,    -1,    -1,  1732,    -1,    -1,    -1,    -1,  1599,
      -1,    -1,  2936,    -1,   271,    -1,    -1,   274,    -1,    -1,
    1748,    -1,    -1,  1247,  1248,    -1,    -1,    -1,    -1,    -1,
      -1,   288,    -1,    -1,  1762,  1763,    -1,    -1,    -1,  1767,
      -1,  2078,  2079,  2080,  2081,    -1,  2083,  2084,    -1,    -1,
      -1,    -1,  2089,  2090,    -1,  1279,  1280,    -1,    -1,  1283,
    1284,    -1,    -1,   478,   479,    -1,    -1,    -1,    -1,    -1,
      -1,   485,   486,   487,    -1,   489,   490,   491,   492,   493,
     494,    -1,  2119,   498,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2936,    -1,    -1,    -1,    -1,  1911,    -1,
    2137,    -1,  2139,    -1,    -1,    -1,  2143,  2144,  2145,    -1,
    2147,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   380,    -1,    -1,    -1,    -1,    -1,  2166,
      -1,  2168,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,   218,  2181,  2182,  2183,  2184,  2185,  2186,
    2187,  2188,  2189,  2190,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1980,    -1,  2206,
      -1,    -1,    -1,    -1,  2211,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2221,  1998,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1419,  1420,     8,  2235,    -1,
      11,    -1,    -1,   565,   566,    16,    17,    18,    19,    -1,
    2247,    -1,  2025,   288,   186,   187,    -1,  2254,    -1,  2032,
      -1,    -1,    -1,    -1,    -1,   482,    -1,  1955,   485,   486,
     487,    42,   489,   490,   491,   492,   493,   494,    49,    -1,
      -1,    -1,    -1,  2056,    -1,    -1,    -1,  1471,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,  1481,    -1,    11,
    1484,    -1,  2299,    74,    16,    -1,   628,   629,  2305,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,   254,   255,   256,    -1,    -1,   259,   260,    -1,
      42,  2328,    -1,  2330,  2331,  2332,  2333,    49,    -1,    -1,
    2337,  2338,    -1,  2340,    -1,    -1,  2343,  2035,    -1,    -1,
    2347,    -1,  1911,    -1,  2351,    -1,    -1,    -1,    -1,    -1,
    2357,  1911,    74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1555,  1556,    -1,    -1,    -1,  2373,    -1,  2066,    -1,
    2377,    -1,    -1,    -1,    -1,  2382,    -1,    -1,    -1,    -1,
      -1,  2388,    -1,  2081,    -1,  2083,    -1,  2394,  1582,    -1,
      -1,    -1,    -1,  2400,   175,    -1,  2179,    -1,    -1,    -1,
      -1,  1595,    -1,    -1,    -1,    -1,  2413,  2414,    -1,    -1,
     191,  1980,    -1,    -1,  2421,   196,    -1,    -1,    -1,    -1,
    1980,    -1,   144,   365,   366,    -1,    -1,    -1,    -1,  1998,
      -1,  2438,    -1,    -1,    -1,    -1,    -1,    -1,  1998,    -1,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,   494,
      -1,    -1,   233,   175,     8,    -1,  2025,    11,    -1,    -1,
    2243,    -1,    16,  2032,    -1,  2025,    -1,    -1,    -1,   191,
      -1,    -1,  2032,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,   813,    -1,    -1,    -1,    -1,    -1,  2056,    42,    -1,
      -1,    -1,    -1,    -1,    -1,    49,  2056,    24,   830,    -1,
      -1,  2508,    -1,    30,    -1,    -1,    -1,   288,    -1,  2207,
      37,   233,  2519,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      74,    -1,    -1,    -1,  2531,    -1,    -1,   859,    -1,    56,
      -1,    -1,  2315,  2231,    -1,  2233,   478,   479,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   879,   880,   881,
      -1,    -1,   884,    -1,    -1,    -1,     3,    -1,     5,  1753,
    2567,    -1,    -1,    -1,    -1,    -1,   288,    -1,    -1,  2576,
    2577,    -1,    -1,  2580,    -1,   907,  2583,    -1,  2585,    -1,
     107,    -1,    -1,  2590,    -1,    -1,  2593,    -1,  2595,    -1,
     144,  2598,    -1,  1787,  1788,    -1,    -1,    -1,    -1,   380,
      -1,    -1,    -1,    -1,    -1,  2612,    -1,    -1,    -1,   136,
    2179,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2179,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   960,    -1,
      -1,    -1,   964,   965,    -1,    -1,  2643,   191,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,  2347,
      -1,    -1,    -1,  2351,    -1,    -1,  2663,  2664,   380,    -1,
    2443,    -1,    -1,   110,   111,    -1,    -1,  2674,    -1,  2676,
      -1,   198,    -1,  2680,  2243,    -1,    -1,  2375,  2376,   233,
      -1,    -1,    -1,  2243,    -1,  2692,  1018,    -1,  2695,    -1,
      -1,  2474,    -1,  1025,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   482,    -1,    -1,   485,   486,   487,  2714,   489,   490,
     491,   492,   493,   494,    -1,  1047,    -1,    -1,    -1,    -1,
    2727,    -1,   249,    -1,    -1,  2732,    -1,    -1,    -1,    -1,
     257,    -1,    -1,    -1,   288,  1929,    -1,    -1,    -1,   186,
     187,    -1,   269,  2750,    -1,    -1,  2315,  2754,    -1,  2756,
      -1,    -1,    -1,    -1,    -1,  2315,    -1,    -1,  2765,    -1,
     482,    -1,    -1,   290,  2547,    -1,    -1,   489,   490,   491,
     492,   493,   494,   300,  2781,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2795,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   252,   253,   254,   255,   256,
      -1,    -1,   259,   260,   341,    -1,  2823,    -1,   345,    -1,
     347,    -1,  2520,    -1,    -1,  2832,   380,    -1,    -1,  2836,
      -1,    -1,    -1,  2840,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,    -1,    -1,   375,    -1,
      -1,    -1,  2859,  2860,  2861,  2862,    -1,    -1,    -1,    -1,
      -1,    -1,   389,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2443,    -1,    -1,    -1,    -1,  2662,
      -1,    -1,    -1,  2443,  2891,    -1,    -1,  2585,    -1,    -1,
      -1,    -1,  2590,    -1,    -1,  2593,    -1,    -1,    -1,  2906,
      -1,    -1,    -1,    -1,    -1,  2474,    -1,    -1,    -1,    -1,
      -1,  2918,    -1,    -1,  2474,    -1,   443,  2700,   365,   366,
      -1,    -1,    -1,     8,    -1,  2932,    11,    -1,   482,    -1,
      15,    16,    17,    18,    19,   489,   490,   491,   492,   493,
     494,    -1,    -1,    -1,  1276,    -1,  2953,    -1,  2731,    34,
      -1,  2734,  2959,    -1,  1286,    -1,  1288,    42,    -1,  1291,
    1292,  1293,  1294,    -1,    49,    -1,    -1,    -1,  2975,  2976,
      -1,    -1,    -1,    -1,    -1,  2673,    -1,    -1,  2547,    -1,
      -1,    -1,    -1,    -1,  1316,  2179,    -1,  2547,    -1,    74,
    1322,  1323,  1324,  1325,  1326,  1327,    -1,    -1,  2696,    -1,
    1332,  1333,    -1,    -1,    -1,  1337,    -1,    -1,    -1,  1341,
      -1,    -1,  1344,  1345,  1346,  1347,  1348,  1349,  1350,  1351,
    1352,    -1,    -1,  1355,    -1,    -1,    -1,    -1,    -1,  2727,
    1362,   478,   479,  1365,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2740,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    -1,    -1,    -1,  1387,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,
      -1,    -1,    -1,    -1,    49,    -1,    -1,  1419,  1420,    -1,
     175,    -1,    -1,  2662,    -1,    -1,    -1,   900,  2796,    -1,
      -1,    -1,  2662,    -1,    -1,    -1,   191,    -1,    -1,    74,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2700,    -1,   218,   219,    -1,    -1,    -1,   941,    -1,
    2700,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,
      -1,    -1,    -1,  2936,    -1,    -1,    -1,  2855,    -1,    -1,
      -1,    -1,  2731,    -1,    -1,  2734,  1498,     0,    -1,  1501,
    1502,  2731,  1504,    -1,  2734,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,   271,    20,    -1,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    30,    -1,    32,
      33,  1533,    -1,   288,    -1,    -1,   291,    -1,    -1,    -1,
     175,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    57,    -1,   191,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    69,    -1,  2432,    -1,
      -1,    -1,    -1,  2437,    -1,    -1,    -1,    80,  1051,    -1,
      -1,    -1,    -1,    -1,  2952,  1058,    -1,    -1,    -1,    92,
      -1,    94,    -1,    -1,    -1,  1597,    -1,    -1,   233,    -1,
      -1,    -1,  1604,    -1,    -1,    -1,    -1,  1609,    -1,   112,
      -1,    -1,    -1,    -1,    -1,    -1,  2480,  2481,    -1,    -1,
      -1,    -1,    -1,   126,    -1,   380,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,   142,
      -1,    -1,    -1,    -1,    -1,    -1,  1648,   150,    -1,   152,
     153,    -1,    -1,   288,    -1,    -1,    -1,  1659,    -1,  1661,
    1662,    -1,    -1,   166,    -1,    -1,    -1,  1669,    -1,    -1,
      -1,  1673,    -1,    -1,  1676,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    24,    -1,    -1,
      -1,    -1,   195,    30,    -1,    -1,    -1,  2936,    -1,    -1,
      37,    -1,    -1,    -1,    -1,    -1,  2936,   210,    -1,    -1,
    1712,    -1,    -1,  1715,    -1,  1717,    -1,    -1,    -1,    56,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
     485,   486,   487,   236,   489,   490,   491,   492,   493,   494,
      -1,    -1,    -1,    -1,    -1,   380,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     107,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1782,    -1,    -1,    -1,    -1,    -1,    -1,  2651,  2652,    -1,
      -1,    -1,    -1,    -1,    -1,  1797,  1798,    -1,  2662,   136,
       8,  1274,    -1,    11,    -1,    -1,    -1,    -1,    16,    -1,
     313,    -1,  1285,   316,  1816,    -1,  1289,    -1,    -1,    -1,
      -1,    -1,  1295,  1296,  1297,    -1,    -1,    -1,    -1,    -1,
      -1,  1304,    -1,    -1,    42,    -1,    -1,    -1,    -1,    -1,
      -1,    49,   345,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,   354,    -1,    -1,   489,   490,   491,   492,   493,   494,
      -1,   198,    -1,    -1,    -1,   368,    74,    -1,    -1,    -1,
      -1,    -1,   375,  1875,    -1,    -1,   379,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   389,    -1,  1361,    -1,
      -1,    -1,    -1,    -1,    -1,     3,    -1,    -1,   401,    -1,
       8,    -1,   405,    11,    -1,    -1,    -1,    15,    16,    17,
      18,    19,   249,    -1,    -1,    -1,    -1,    -1,    -1,  1921,
     257,    -1,    -1,    -1,    -1,    -1,    34,    -1,    -1,    37,
      -1,  1404,   269,    -1,    42,    -1,   144,    -1,   441,    -1,
      -1,    49,    -1,   446,    -1,  1418,    -1,    -1,    -1,    -1,
    1423,    -1,    -1,   290,    -1,    -1,    -1,   460,    -1,    -1,
      -1,    -1,    -1,   300,    -1,    -1,    74,   175,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1977,    -1,    -1,    -1,    -1,
      -1,   484,    -1,   191,  1986,    -1,    -1,  1989,   196,    -1,
    1992,    -1,    -1,    -1,    -1,   498,    -1,    -1,   501,    -1,
      -1,    -1,    -1,    -1,   341,    -1,    -1,    -1,   345,    -1,
     347,    -1,    -1,    -1,    -1,    -1,    -1,  2019,  2020,    -1,
      -1,  2023,    -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,
      -1,    -1,   369,  2035,    -1,    -1,    -1,    -1,   375,    -1,
      -1,    -1,  2044,    -1,    -1,  2047,    -1,  2049,    -1,    -1,
      -1,    -1,   389,    -1,    -1,  2057,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2065,  2066,    -1,    -1,   175,    -1,    -1,
      -1,    -1,  2936,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     288,    -1,    -1,   191,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,  2095,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2105,    -1,    -1,   443,    -1,    -1,    -1,
     218,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2121,
      -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1607,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    18,    19,    -1,    -1,
      -1,    -1,    -1,  1626,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    34,   271,    -1,    37,   274,    -1,    -1,    -1,
      42,  1644,   380,  1646,  1647,    -1,  1649,    49,  1651,    -1,
     288,    -1,  1655,   291,    -1,  1658,    -1,    -1,    -1,    -1,
    1663,    -1,    -1,  1666,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    74,    -1,    -1,  1678,    -1,    -1,    -1,  1682,
    1683,  1684,  1685,  1686,  1687,    -1,    -1,    -1,    -1,    -1,
    1693,  1694,    -1,  1696,  1697,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,  1708,    -1,    11,  1711,    -1,
      -1,    15,    16,    17,    18,    19,  1719,  1720,  1721,  1722,
    1723,  1724,  1725,  1726,  1727,  1728,    -1,    -1,  2260,    -1,
      34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    -1,
      -1,    -1,   380,    -1,   482,    49,    -1,    -1,    -1,    -1,
      -1,   489,   490,   491,   492,   493,   494,  1760,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      74,    -1,    -1,   175,    -1,    -1,    -1,  2309,  2310,    -1,
      -1,    -1,  2314,    -1,    -1,    -1,    -1,  2319,    -1,   191,
    2322,  2323,    -1,    -1,   196,  2327,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2373,    -1,    -1,   482,    -1,    -1,   485,   486,   487,
      -1,   489,   490,   491,   492,   493,   494,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
      -1,   175,   274,    -1,    -1,  2407,    -1,  1880,  1881,  1882,
      -1,    -1,    -1,    -1,    -1,    -1,   288,   191,    -1,   291,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,    -1,    -1,
     274,    -1,    -1,  1976,    -1,    -1,    -1,    -1,   380,  1982,
      -1,    -1,    -1,    -1,   288,    -1,    -1,   291,    -1,    -1,
      -1,    -1,  1995,  1996,  1997,    -1,  1999,  2000,  2001,  2002,
    2003,    -1,    -1,  2006,  2007,  2008,  2009,  2010,  2011,  2012,
    2013,  2014,  2015,  2016,    -1,    -1,    -1,    -1,  2550,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2559,  2560,    -1,
      -1,  2563,    -1,  2036,    -1,    -1,  2039,    -1,  2041,    -1,
      -1,    -1,  2045,  2046,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2059,  2060,  2061,  2062,
      -1,  2064,    -1,    -1,    -1,    -1,    -1,    -1,  2600,  2601,
      -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,
     482,    -1,  2614,   485,   486,   487,    -1,   489,   490,   491,
     492,   493,   494,    -1,    -1,    -1,    -1,   499,    -1,    -1,
    2632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2140,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,
      -1,   485,   486,   487,    -1,   489,   490,   491,   492,   493,
     494,  2723,    -1,     8,    -1,   499,    11,    -1,    -1,    -1,
      15,    16,    17,    18,    19,    -1,    -1,    -1,  2740,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,
      -1,    -1,  2754,    -1,    -1,  2757,    -1,    42,    -1,    -1,
      -1,  2234,    -1,    -1,    49,    -1,    -1,    -1,    -1,    -1,
    2772,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2261,    74,
      -1,    -1,  2265,  2266,    -1,  2268,    -1,    -1,  2271,  2272,
    2273,  2274,  2275,    -1,    -1,    -1,  2279,  2280,  2281,  2282,
    2283,  2284,  2285,  2286,  2287,  2288,  2289,  2290,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2301,    -1,
      -1,    -1,    -1,    -1,    -1,  2308,    -1,    -1,  2311,    -1,
    2313,    -1,    -1,    -1,  2317,    -1,  2848,  2320,  2321,    -1,
    2852,  2324,  2325,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
    2882,    16,    17,    18,    19,    -1,     8,    -1,    -1,    11,
     175,  2364,    -1,    -1,    16,    17,    18,    19,    -1,  2372,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    42,    -1,    -1,
      -1,   196,  2385,  2915,    49,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    -1,    -1,    -1,    -1,    49,    -1,    -1,
      -1,    -1,    -1,   218,   219,    -1,    -1,    -1,    -1,    74,
      -1,    -1,  2415,    -1,    -1,    -1,    -1,     8,   233,    -1,
      11,    -1,    74,    -1,    15,    16,    17,    18,    19,    -1,
    2962,  2963,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    42,    -1,    -1,    -1,    -1,   271,    -1,    49,   274,
      -1,    -1,    -1,  2995,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   288,    -1,    -1,   291,    -1,    -1,    -1,
      -1,    -1,    -1,    74,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3036,    -1,    -1,    -1,    -1,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   175,    -1,    -1,   191,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,  2540,    -1,   191,
      -1,  2544,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
    2553,  2554,  2555,   218,   219,  2558,    -1,    -1,  2561,  2562,
      -1,    -1,    -1,  2566,    -1,   380,   218,   219,   233,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,    -1,   196,   271,    -1,    -1,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   274,   288,    -1,    -1,  2629,   218,   219,    -1,
      -1,    -1,  2635,    -1,    -1,    -1,   288,    -1,    -1,    -1,
      -1,    -1,   233,    -1,    -1,  2648,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,   494,
     271,    -1,    -1,   274,   499,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2698,  2699,   288,    -1,    -1,
     291,  2704,  2705,  2706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2748,  2749,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2763,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2773,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2817,    -1,    -1,   482,    -1,    -1,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,   494,
     482,    -1,  2835,   485,   486,   487,    -1,   489,   490,   491,
     492,   493,   494,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2857,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2876,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   482,    -1,    -1,   485,   486,   487,    -1,   489,   490,
     491,   492,   493,   494,    -1,    -1,    -1,    -1,   499,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2920,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2949,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    66,    67,  2998,    69,    70,    71,    72,
      73,    -1,    75,    -1,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,   169,    -1,   171,   172,
     173,   174,   175,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,    -1,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,   489,   490,   491,    -1,
      -1,    -1,    -1,   496,    -1,   498,   499,    -1,    -1,    -1,
     503,    -1,   505,   506,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    36,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    61,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    75,    -1,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
     169,    -1,   171,   172,   173,   174,   175,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,    -1,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,   484,    -1,    -1,    -1,    -1,
     489,   490,    -1,    -1,    -1,    -1,    -1,   496,    -1,   498,
     499,    -1,    -1,    -1,   503,    -1,   505,   506,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,   169,    -1,   171,   172,   173,   174,
     175,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,   484,
      -1,    -1,    -1,    -1,   489,   490,    -1,    -1,    -1,    -1,
      -1,   496,    -1,   498,    -1,    -1,    -1,    -1,   503,    -1,
     505,   506,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    36,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    -1,    60,
      61,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    75,    -1,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,   169,   170,
     171,   172,   173,   174,   175,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,    -1,   229,   230,
     231,   232,   233,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    -1,    -1,    -1,   489,   490,
      -1,    -1,    -1,    -1,    -1,   496,    -1,   498,    -1,    -1,
      -1,    -1,   503,    -1,   505,   506,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    -1,    -1,    -1,    35,    36,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    61,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    75,    -1,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,   169,    -1,   171,   172,   173,   174,   175,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,    -1,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,    -1,   489,   490,    -1,    -1,    -1,    -1,    -1,   496,
      -1,   498,    -1,    -1,    -1,    -1,   503,    -1,   505,   506,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    75,    -1,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,   169,    -1,   171,   172,
     173,   174,   175,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,    -1,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,   489,   490,   491,    -1,
      -1,    -1,    -1,   496,    -1,   498,    -1,    -1,    -1,    -1,
     503,    -1,   505,   506,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    -1,    -1,    -1,    -1,    36,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    61,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    75,    -1,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
     169,    -1,   171,   172,   173,   174,   175,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,    -1,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,
     489,   490,   491,    -1,    -1,    -1,    -1,   496,    -1,   498,
      -1,    -1,    -1,    -1,   503,    -1,   505,   506,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,   169,    -1,   171,   172,   173,   174,
     175,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
      -1,    -1,    -1,    -1,   489,   490,   491,    -1,    -1,    -1,
      -1,   496,    -1,   498,    -1,    -1,    -1,    -1,   503,    -1,
     505,   506,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    -1,    -1,    -1,    -1,    36,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      61,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    75,    -1,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,   169,    -1,
     171,   172,   173,   174,   175,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    -1,    -1,    -1,   489,   490,
      -1,    -1,    -1,    -1,    -1,   496,    -1,   498,    -1,    -1,
      -1,    -1,   503,    -1,   505,   506,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    36,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    61,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    75,    -1,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,   169,    -1,   171,   172,   173,   174,   175,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,    -1,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,    -1,   489,   490,    -1,    -1,    -1,    -1,    -1,   496,
      -1,   498,   499,    -1,    -1,    -1,   503,    -1,   505,   506,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    75,    -1,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,   169,    -1,   171,   172,
     173,   174,   175,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,    -1,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,   489,   490,    -1,    -1,
      -1,    -1,    -1,   496,    -1,   498,    -1,    -1,    -1,    -1,
     503,    -1,   505,   506,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    36,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    61,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    75,    -1,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
     169,    -1,   171,   172,   173,   174,   175,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,    -1,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,
     489,   490,    -1,    -1,    -1,    -1,    -1,   496,    -1,   498,
     499,    -1,    -1,    -1,   503,    -1,   505,   506,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,   169,   170,   171,   172,   173,   174,
     175,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
      -1,    -1,    -1,    -1,   489,   490,    -1,    -1,    -1,    -1,
      -1,   496,    -1,   498,    -1,    -1,    -1,    -1,   503,    -1,
     505,   506,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    36,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      61,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    75,    -1,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,   169,    -1,
     171,   172,   173,   174,   175,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    -1,    -1,    -1,   489,   490,
      -1,    -1,    -1,    -1,    -1,   496,    -1,   498,    -1,    -1,
      -1,    -1,   503,    -1,   505,   506,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    36,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    61,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    75,    -1,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,   169,    -1,   171,   172,   173,   174,   175,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,    -1,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,    -1,   489,   490,    -1,    -1,    -1,    -1,    -1,   496,
      -1,   498,    -1,    -1,    -1,    -1,   503,    -1,   505,   506,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    75,    -1,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,   169,    -1,   171,   172,
     173,   174,   175,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,    -1,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,   489,   490,    -1,    -1,
      -1,    -1,    -1,   496,    -1,   498,    -1,    -1,    -1,    -1,
     503,    -1,   505,   506,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    36,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    61,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    75,    -1,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
     169,    -1,   171,   172,   173,   174,   175,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,    -1,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,
     489,   490,    -1,    -1,    -1,    -1,    -1,   496,    -1,   498,
      -1,    -1,    -1,    -1,   503,    -1,   505,   506,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,   169,    -1,   171,   172,   173,   174,
     175,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
      -1,    -1,    -1,    -1,   489,   490,    -1,    -1,    -1,    -1,
      -1,   496,    -1,   498,    -1,    -1,    -1,    -1,   503,    -1,
     505,   506,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    36,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      61,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    75,    -1,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,   169,    -1,
     171,   172,   173,   174,   175,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    -1,    -1,    -1,   489,   490,
      -1,    -1,    -1,    -1,    -1,   496,    -1,   498,    -1,    -1,
      -1,    -1,   503,    -1,   505,   506,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    36,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    61,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    75,    -1,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,   169,    -1,   171,   172,   173,   174,   175,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,    -1,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,    -1,   489,   490,    -1,    -1,    -1,    -1,    -1,   496,
      -1,   498,    -1,    -1,    -1,    -1,   503,    -1,   505,   506,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    75,    -1,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,   169,    -1,   171,   172,
     173,   174,   175,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,    -1,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,   489,   490,    -1,    -1,
      -1,    -1,    -1,   496,    -1,   498,    -1,    -1,    -1,    -1,
     503,    -1,   505,   506,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    36,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    61,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    75,    -1,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
     169,    -1,   171,   172,   173,   174,   175,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,    -1,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,
     489,   490,    -1,    -1,    -1,    -1,    -1,   496,    -1,   498,
      -1,    -1,    -1,    -1,   503,    -1,   505,   506,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,   169,    -1,   171,   172,   173,   174,
     175,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
      -1,    -1,    -1,    -1,   489,   490,    -1,    -1,    -1,    -1,
      -1,   496,    -1,   498,    -1,    -1,    -1,    -1,   503,    -1,
     505,   506,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      61,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    75,    -1,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,   169,    -1,
     171,   172,   173,   174,   175,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
      -1,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   489,   490,
      -1,    -1,     3,     4,     5,     6,     7,   498,     9,    10,
      -1,    -1,    -1,    -1,   505,   506,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      61,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    75,    -1,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,   169,    -1,
     171,   172,   173,   174,   175,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
      -1,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   489,   490,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   498,    -1,    -1,
      -1,    -1,    -1,    -1,   505,   506,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    61,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    75,    -1,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,   169,    -1,   171,   172,   173,   174,   175,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,    -1,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,    -1,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   489,   490,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   498,    -1,    -1,    -1,    -1,    -1,    -1,   505,   506,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    45,    46,    47,    48,    -1,    50,    51,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    75,    -1,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,    -1,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,   169,    -1,   171,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,   231,   232,
      -1,    -1,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   489,   490,     3,    -1,
      -1,    -1,    -1,   496,    -1,   498,    -1,    -1,    -1,    -1,
     503,    -1,   505,   506,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    37,    -1,    39,    40,    -1,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      -1,    -1,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,    -1,    -1,   171,   172,   173,   174,
      -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,   231,   232,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,    -1,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,    -1,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   499,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,   169,    -1,   171,   172,   173,   174,
     175,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,    -1,   230,   231,   232,   233,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,    -1,   272,   273,   274,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,   287,   288,   289,   290,    -1,    -1,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,    -1,     3,   484,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   498,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,   169,    -1,   171,   172,   173,   174,
     175,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,    -1,   230,   231,   232,   233,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,    -1,   272,   273,   274,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,   287,   288,   289,   290,    -1,    -1,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   498,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    -1,    55,
      56,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    75,
      -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,   169,    -1,   171,   172,   173,   174,   175,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,   231,   232,   233,    -1,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,    -1,   272,   273,   274,   275,
      -1,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
      -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   498,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    75,    -1,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,   169,    -1,   171,   172,   173,   174,   175,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,    -1,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,    -1,   272,   273,   274,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,     3,     4,     5,    -1,    -1,
      -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   498,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    -1,    46,    47,
      48,    49,    50,    -1,    52,    53,    -1,    55,    56,    57,
      58,    -1,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,    -1,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,   286,    -1,
     288,   289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,    -1,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,   455,    -1,    -1,
     458,    -1,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,     3,    -1,    -1,    -1,    -1,    -1,
      -1,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,
     498,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    -1,    -1,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    -1,    -1,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
      -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,     3,    -1,   484,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   498,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    -1,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,   455,    -1,    -1,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,     3,    -1,   484,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   498,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,    -1,     3,   484,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   498,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   498,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    -1,    55,    56,    57,    58,    -1,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    -1,    -1,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,
     172,   173,   174,    -1,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,    -1,
     232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,    -1,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   498,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    -1,    46,    47,    48,    49,    50,    -1,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,    -1,   232,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,    -1,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   498,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   498,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      -1,    -1,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,
      -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,    -1,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,     3,     4,     5,    -1,    -1,     8,     9,    -1,    -1,
      -1,    -1,    -1,   498,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    -1,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,    -1,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,    -1,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,    -1,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
      -1,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   478,   479,   480,   481,
      -1,     3,    -1,   485,   486,   487,     8,   489,   490,   491,
     492,   493,   494,    -1,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    -1,    55,    56,    57,    58,    -1,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    -1,    -1,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,
     172,   173,   174,    -1,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,    -1,
     232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,    -1,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,   485,   486,   487,    -1,   489,   490,   491,
     492,   493,   494,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,
      -1,    -1,     8,    -1,    -1,    11,    -1,    42,    -1,    15,
      16,    17,    18,    19,    49,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    42,     8,    -1,    74,
      11,    -1,    -1,    49,    15,    16,    17,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    34,    -1,    -1,     8,    -1,    74,    11,
      -1,    42,    -1,    15,    16,    17,    18,    19,    49,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    74,    -1,     8,    -1,    49,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    34,    74,    -1,    -1,    -1,    -1,    -1,    -1,    42,
     175,    -1,    -1,    -1,    -1,    -1,    49,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   175,
      -1,    74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,   219,   191,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,
      -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,   219,    -1,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,    -1,   196,    -1,   233,    -1,    -1,
      -1,    -1,    -1,   175,    -1,    -1,   271,    -1,    -1,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,   191,
      -1,    -1,    -1,   288,   196,    -1,   291,    -1,    -1,    -1,
      -1,    -1,   233,    -1,    -1,   271,    -1,    -1,   274,    -1,
      -1,    -1,   175,    -1,    -1,    -1,   218,   219,    -1,    -1,
      -1,    -1,   288,    -1,    -1,   291,    -1,    -1,   191,    -1,
      -1,   233,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
     271,    -1,    -1,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,   219,   288,    -1,    -1,
     291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
     233,    -1,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   380,   288,    -1,    -1,   291,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      18,    19,    -1,    -1,    -1,    -1,    -1,    -1,   271,    -1,
      -1,   274,    -1,    -1,   380,    -1,    34,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    42,   288,    -1,    -1,   291,    -1,
      -1,    49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,
      -1,    -1,    -1,    -1,    -1,    -1,    74,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,   380,    -1,
      -1,    15,    16,    17,    18,    19,    -1,   482,    -1,    -1,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,   494,
      34,    -1,    -1,    -1,   499,    -1,    -1,    -1,    42,    -1,
      -1,    -1,    -1,    -1,    -1,    49,   482,   380,    -1,   485,
     486,   487,    -1,   489,   490,   491,   492,   493,   494,    -1,
      -1,    -1,    -1,   499,    -1,    -1,    -1,    -1,     8,    -1,
      74,    11,    -1,    -1,    -1,    15,    16,    17,    18,    19,
      -1,   482,    -1,    -1,   485,   486,   487,   175,   489,   490,
     491,   492,   493,   494,    34,    -1,    -1,    -1,   499,    -1,
      -1,    -1,    42,   191,    -1,    -1,    -1,    -1,   196,    49,
     482,    -1,    -1,   485,   486,   487,    -1,   489,   490,   491,
     492,   493,   494,    -1,    -1,    -1,    -1,   499,    -1,     8,
     218,   219,    11,    -1,    74,    -1,    15,    16,    17,    18,
      19,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,   482,
      -1,    -1,   485,   486,   487,    34,   489,   490,   491,   492,
     493,   494,    -1,    42,    -1,    -1,   499,    -1,    -1,    -1,
      49,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   271,    -1,    -1,   274,   191,    -1,    -1,
      -1,    22,   196,    -1,    -1,    74,    -1,    -1,    -1,    -1,
     288,    -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,    -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,     8,    -1,   196,    11,    -1,    -1,
      91,    15,    16,    17,    18,    19,    -1,   271,    -1,    -1,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
      34,    -1,    -1,    -1,   288,    -1,    -1,   291,    42,    -1,
      -1,    -1,   380,   233,    -1,    49,   175,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   191,    -1,   145,    -1,    -1,   196,    -1,    -1,
      74,    -1,    -1,    -1,   155,    -1,    -1,    -1,    -1,    -1,
      -1,   271,    -1,    -1,   274,    -1,   167,    -1,    -1,   218,
     219,   172,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,
      -1,   291,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   199,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   271,    -1,   482,   274,    -1,   485,   486,   487,
      -1,   489,   490,   491,   492,   493,   494,    -1,    -1,   288,
      -1,   499,   291,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
     380,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,   233,
     311,   485,   486,   487,    -1,   489,   490,   491,   492,   493,
     494,    -1,    -1,    -1,   325,   499,    -1,    -1,    -1,    -1,
      -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,    -1,    -1,
     274,    -1,    -1,    -1,    -1,    -1,    -1,   358,    -1,    -1,
     361,    -1,    -1,    -1,   288,    -1,    -1,   291,   369,    -1,
      -1,   372,   482,    -1,    -1,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,   494,    -1,    -1,    -1,    -1,   499,
     391,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   405,    -1,    -1,    -1,    -1,    -1,
      -1,   412,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     421,    -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,
      -1,    -1,    -1,   482,    -1,    -1,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,   494,    -1,    -1,    -1,    -1,
     499,   452,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,   482,    -1,
      -1,   485,   486,   487,    -1,   489,   490,   491,   492,   493,
     494,    -1,    -1,   497,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    -1,
      46,    47,    48,    49,    50,    -1,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    99,   100,   101,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,    -1,   170,    -1,   172,   173,   174,    -1,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,    -1,    -1,   220,    -1,   222,   223,   224,   225,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,    46,
      47,    48,    49,    50,    -1,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    -1,    -1,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,    -1,   220,    -1,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,   269,   270,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,    -1,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,     3,     4,     5,    -1,    -1,
      -1,     9,    -1,    -1,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    -1,    46,    47,
      48,    49,    50,    -1,    52,    53,    -1,    55,    56,    57,
      58,    -1,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,    -1,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,   286,    -1,
     288,   289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,    -1,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,   455,    -1,    -1,
     458,    -1,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,     3,     4,     5,    -1,    -1,    -1,
       9,   489,   490,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    -1,    -1,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    -1,    -1,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
      -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,     3,     4,     5,    -1,    -1,    -1,     9,
     489,   490,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    -1,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,   286,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,   455,    -1,    -1,   458,    -1,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,    -1,    -1,     8,    -1,    -1,    11,    -1,   489,
     490,    15,    16,    17,    18,    19,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    19,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    -1,    42,    -1,
      -1,    -1,    -1,    34,    -1,    49,    -1,    -1,    -1,    -1,
      -1,    42,     8,    -1,    -1,    11,    -1,    -1,    49,    15,
      16,    17,    18,    19,    -1,     8,    -1,    -1,    11,    -1,
      74,    -1,    15,    16,    17,    18,    19,    -1,    34,    -1,
      -1,    -1,    -1,    74,    -1,    -1,    42,    -1,    -1,    -1,
      -1,    34,    -1,    49,    37,    -1,    -1,    -1,    -1,    42,
      -1,    -1,    -1,    -1,    -1,    -1,    49,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    74,    -1,
      -1,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    19,    -1,    -1,    -1,
      -1,   175,    -1,    -1,   165,    -1,    -1,    -1,    -1,   170,
      -1,    34,    -1,    -1,   175,    -1,    -1,   191,    -1,    42,
      -1,    -1,   196,    -1,    -1,    -1,    49,    -1,    -1,    -1,
     191,    -1,    -1,    -1,    -1,   196,    -1,    -1,   164,    -1,
      -1,    -1,    -1,    -1,   218,   219,    -1,    -1,    -1,   175,
      -1,    74,    -1,    -1,    -1,    -1,    -1,   218,   219,   233,
      -1,    -1,   175,    -1,    -1,   191,    -1,    -1,    -1,    -1,
     196,    -1,   233,    -1,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,   219,    -1,    -1,    -1,   271,    -1,    -1,
     274,    -1,    -1,    -1,    -1,   218,   219,   233,    -1,    -1,
     271,    -1,    -1,   274,   288,    -1,    -1,   291,    -1,    -1,
     233,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,    -1,
     291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   271,    -1,    -1,   274,    -1,
      -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,   271,    -1,
      -1,   274,   288,    -1,    -1,   291,    -1,    -1,   191,    -1,
      -1,    -1,    -1,   196,    -1,   288,    -1,    -1,   291,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   314,    -1,
      -1,    -1,    -1,    -1,    -1,   218,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,
     233,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,   380,
      -1,    -1,    15,    16,    17,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    34,    -1,    -1,    37,    -1,    -1,    -1,   271,    42,
      -1,   274,    -1,    -1,   380,    -1,    49,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,   440,   380,   291,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      19,    74,    -1,    -1,    -1,    -1,   309,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    34,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,   482,    -1,
      49,   485,   486,   487,    -1,   489,   490,   491,   492,   493,
     494,   482,    -1,    -1,   485,   486,   487,    -1,   489,   490,
     491,   492,   493,   494,    -1,    74,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   482,   380,    -1,   485,
     486,   487,    -1,   489,   490,   491,   492,   493,   494,   482,
      -1,    -1,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,   494,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,    19,
      -1,    -1,    -1,    -1,    -1,   218,   219,    -1,    -1,    -1,
      -1,   170,    -1,    -1,    34,    -1,   175,    37,    -1,    -1,
     233,    -1,    42,    -1,    -1,    -1,    -1,    -1,    -1,    49,
      -1,    -1,   191,    -1,    -1,    -1,    -1,   196,    -1,   482,
      -1,    -1,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,   494,    -1,    -1,    74,    -1,    -1,    -1,   271,   218,
     219,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,   233,   288,    11,    -1,   291,    -1,
      15,    16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,
      -1,    -1,   271,    -1,    49,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,   288,
      11,    -1,   291,    -1,    15,    16,    17,    18,    19,    74,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    34,    -1,   175,    37,    -1,    -1,    -1,
      -1,    42,    -1,    -1,    -1,    -1,    -1,   380,    49,    -1,
      -1,   191,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    18,    19,    74,    -1,    -1,    -1,    -1,   218,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    -1,    -1,   233,    -1,    42,    -1,    -1,    -1,    -1,
      -1,   380,    49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,    74,    -1,    -1,
      -1,   271,    -1,    -1,   274,    -1,   191,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,   288,   482,
      -1,   291,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,   494,    -1,   218,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,   233,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   482,    -1,    -1,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,   494,   271,   218,   219,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   175,    -1,
      -1,    -1,   233,   288,    -1,    -1,   291,    -1,    -1,    -1,
     380,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     271,   218,   219,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,   288,    -1,     8,
     291,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    34,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    42,   271,   380,    -1,   274,    -1,    -1,
      49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,   482,    -1,   291,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,   494,    74,    -1,    -1,   413,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
     485,   486,   487,   380,   489,   490,   491,   492,   493,   494,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   191,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,   482,    -1,    -1,   485,   486,   487,    -1,   489,   490,
     491,   492,   493,   494,    -1,    -1,    -1,    -1,    -1,   218,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,   485,   486,
     487,    -1,   489,   490,   491,   492,   493,   494,    -1,    -1,
      -1,    -1,   271,    -1,    -1,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
      -1,     5,    -1,   482,    -1,    -1,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,   494,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    99,   100,   101,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,    -1,   170,    -1,   172,   173,
     174,    -1,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    99,   100,   101,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,    -1,   170,    -1,   172,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,    -1,    -1,   220,    -1,   222,   223,   224,
     225,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    -1,
      46,    47,    48,    49,    50,    -1,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    99,   100,   101,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,    -1,   170,    -1,   172,   173,   174,    -1,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,    -1,    -1,   220,    -1,   222,   223,   224,   225,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    75,    -1,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,   169,    -1,   171,   172,   173,   174,   175,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,    -1,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,    -1,   272,   273,   274,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    -1,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    -1,    -1,    -1,   102,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,    -1,   171,   172,   173,   174,   175,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,    -1,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,    -1,    -1,
     458,    -1,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    -1,    -1,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    -1,    -1,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,   163,   164,    -1,   166,   167,   168,
      -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    -1,
      60,    -1,    -1,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,   233,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,   433,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,   455,    -1,    -1,   458,    -1,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,   286,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      32,    33,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    -1,    55,    56,    57,    58,    -1,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    -1,    -1,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,
     172,   173,   174,    -1,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,    -1,
     232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,    -1,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    -1,    46,    47,    48,    49,    50,    -1,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,    -1,   232,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,   287,   288,   289,   290,    -1,    -1,
     293,   294,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,    -1,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,   287,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    32,    33,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      -1,    -1,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,
      -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,    -1,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,
      46,    47,    48,    49,    50,    -1,    52,    53,    -1,    55,
      56,    57,    58,    -1,    60,    -1,    -1,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    -1,
      -1,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,
     236,   237,    -1,    -1,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,   268,   269,   270,    -1,   272,   273,    -1,   275,
      -1,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,    -1,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,   455,
      -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,     3,     4,    -1,    -1,
      -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,    46,
      47,    48,    49,    50,    -1,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    -1,    -1,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,    -1,   220,    -1,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,   269,   270,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,    -1,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    -1,    46,    47,
      48,    49,    50,    -1,    52,    53,    -1,    55,    56,    57,
      58,    -1,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,    -1,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,    -1,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,   455,    -1,    -1,
     458,    -1,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    -1,    -1,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    -1,    -1,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
      -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    -1,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,   455,    -1,    -1,   458,    -1,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    -1,    55,    56,    57,    58,    -1,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    -1,    -1,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,
     172,   173,   174,    -1,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,    -1,
     232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,    -1,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    -1,    46,    47,    48,    49,    50,    -1,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,    -1,   232,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,    -1,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      -1,    -1,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,
      -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,    -1,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,
      46,    47,    48,    49,    50,    -1,    52,    53,    -1,    55,
      56,    57,    58,    -1,    60,    -1,    -1,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    -1,
      -1,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,
     236,   237,    -1,    -1,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,   268,   269,   270,    -1,   272,   273,    -1,   275,
      -1,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,    -1,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,   455,
      -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,    46,
      47,    48,    49,    50,    -1,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    -1,    -1,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,    -1,   220,    -1,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,   269,   270,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,    -1,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    -1,    46,    47,
      48,    49,    50,    -1,    52,    53,    -1,    55,    56,    57,
      58,    -1,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,    -1,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,    -1,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,   455,    -1,    -1,
     458,    -1,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    -1,    37,    -1,
      39,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    -1,    -1,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    -1,    -1,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
      -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    37,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    -1,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,   455,    -1,    -1,   458,    -1,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    -1,    55,    56,    57,    58,    -1,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    -1,    -1,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,
     172,   173,   174,    -1,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,    -1,
     232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,    -1,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    -1,    46,    47,    48,    49,    50,    -1,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,    -1,   232,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,    -1,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      -1,    -1,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,
      -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,    -1,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,
      46,    47,    48,    49,    50,    -1,    52,    53,    -1,    55,
      56,    57,    58,    -1,    60,    -1,    -1,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    -1,
      -1,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,
     236,   237,    -1,    -1,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,   268,   269,   270,    -1,   272,   273,    -1,   275,
      -1,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,    -1,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,   455,
      -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,    46,
      47,    48,    49,    50,    -1,    52,    53,    -1,    55,    56,
      57,    58,    -1,    60,    -1,    -1,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,    -1,   220,    -1,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,   269,   270,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,    -1,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,    -1,   451,   452,   453,   454,   455,    -1,
      -1,   458,    -1,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    -1,    46,    47,
      48,    49,    50,    -1,    52,    53,    -1,    55,    56,    57,
      58,    -1,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,    -1,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,    -1,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,   455,    -1,    -1,
     458,    -1,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    -1,    55,    56,    57,    58,
      -1,    60,    -1,    -1,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    -1,    -1,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
      -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
      -1,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,   455,    -1,    -1,   458,
      -1,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    37,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    -1,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,    -1,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,   455,    -1,    -1,   458,    -1,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    -1,    55,    56,    57,    58,    -1,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    -1,    -1,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,
     172,   173,   174,    -1,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,    -1,
     232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,    -1,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    -1,    46,    47,    48,    49,    50,    -1,    52,
      53,    -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,    -1,   232,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,    -1,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,    -1,   451,   452,
     453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    37,    -1,    39,    40,    -1,    42,    43,    44,
      45,    46,    47,    48,    -1,    50,    51,    52,    53,    -1,
      55,    56,    57,    58,    -1,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    -1,    -1,
      75,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    -1,    -1,    -1,   102,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,    -1,   152,   153,   154,
     155,   156,    -1,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,   169,    -1,   171,   172,   173,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,    -1,   272,   273,   274,
     275,    -1,    -1,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,    -1,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,    -1,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,    -1,   421,    -1,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,    -1,    -1,   441,   442,   443,   444,
     445,    -1,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   478,   479,   480,   481,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    -1,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,    -1,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,    -1,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    45,    46,    47,    48,    -1,    50,    51,
      52,    53,    -1,    55,    56,    57,    58,    -1,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    -1,    -1,    75,    -1,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    -1,    -1,    -1,
     102,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,    -1,
     152,   153,   154,   155,   156,    -1,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,   169,    -1,   171,
     172,   173,    -1,   175,   176,    -1,   178,    -1,    -1,    -1,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,   231,
     232,   233,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,    -1,
     272,   273,   274,   275,    -1,    -1,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,    -1,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
      -1,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
      -1,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,    -1,   421,
      -1,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,    -1,    -1,   458,    -1,    -1,   461,
     462,   463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   478,   479,   480,   481,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    -1,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    -1,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    -1,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    -1,    -1,    -1,   102,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,    -1,   152,   153,   154,   155,   156,    -1,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,    -1,   171,   172,   173,    -1,   175,   176,    -1,
     178,    -1,    -1,    -1,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,    -1,   272,   273,   274,   275,    -1,    -1,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,    -1,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,    -1,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,    -1,   421,    -1,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,    -1,    -1,
     458,    -1,    -1,   461,   462,   463,   464,   465,   466,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     478,   479,   480,   481,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    45,    46,    47,    48,    -1,    50,    51,    52,    53,
      -1,    55,    56,    57,    58,    -1,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    -1,
      -1,    75,    -1,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    -1,    -1,    -1,   102,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,    -1,   152,   153,
     154,   155,   156,    -1,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,   169,    -1,   171,   172,   173,
     174,   175,   176,    -1,   178,    -1,    -1,    -1,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,   231,   232,   233,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,    -1,   272,   273,
     274,   275,    -1,    -1,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
      -1,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,    -1,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,    -1,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,    -1,   421,    -1,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,    -1,    -1,   458,    -1,    -1,   461,   462,   463,
     464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   478,   479,   480,   481,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    45,    46,    47,    48,    -1,
      50,    51,    52,    53,    -1,    55,    56,    57,    58,    -1,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    -1,    -1,    75,    -1,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    -1,
      -1,    -1,   102,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,    -1,   152,   153,   154,   155,   156,    -1,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,   169,
      -1,   171,   172,   173,    -1,   175,   176,    -1,   178,    -1,
      -1,    -1,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,   231,   232,   233,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,    -1,   272,   273,   274,   275,    -1,    -1,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,    -1,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,    -1,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
      -1,   421,    -1,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,    -1,    -1,   458,    -1,
      -1,   461,   462,   463,   464,   465,   466,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   478,   479,
     480,   481
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    20,    30,    32,    33,    48,    57,    69,    80,    92,
      94,   112,   126,   136,   142,   150,   152,   153,   166,   195,
     210,   236,   313,   316,   345,   354,   368,   375,   379,   389,
     401,   405,   441,   446,   460,   484,   498,   509,   510,   511,
     512,   523,   524,   527,   529,   533,   548,   549,   551,   553,
     560,   562,   610,   617,   620,   621,   638,   639,   640,   641,
     642,   643,   694,   695,   840,   843,   846,   853,   854,   855,
     856,   857,   864,   868,   874,   876,   881,   885,   886,   889,
     890,   892,   893,   895,   418,   463,   561,   199,   361,   369,
     405,   452,   561,     3,    20,    21,    22,    23,    24,    25,
      26,    27,    29,    30,    31,    39,    40,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    55,
      56,    57,    58,    60,    63,    64,    65,    66,    67,    69,
      70,    71,    72,    73,    75,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    88,    89,    90,    91,    92,
      93,    95,    96,    97,    98,   102,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   117,   119,   120,   121,
     122,   123,   124,   126,   127,   128,   129,   130,   133,   134,
     135,   136,   137,   139,   140,   141,   143,   144,   145,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     159,   161,   162,   163,   164,   166,   168,   169,   171,   172,
     173,   174,   175,   176,   178,   180,   181,   182,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     197,   198,   199,   200,   201,   202,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   215,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   230,   231,
     232,   233,   235,   236,   237,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   272,   273,   274,   275,
     277,   278,   279,   280,   281,   282,   284,   285,   288,   289,
     290,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   320,   321,   322,   323,
     324,   325,   327,   328,   329,   330,   331,   332,   333,   334,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     369,   370,   371,   372,   373,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   403,   404,   406,   407,   408,   409,   410,   411,   412,
     414,   415,   418,   419,   420,   421,   422,   424,   425,   426,
     427,   428,   429,   430,   431,   434,   435,   436,   437,   438,
     441,   442,   443,   444,   445,   446,   447,   449,   450,   451,
     452,   453,   454,   455,   458,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   753,   825,   829,   832,
     898,   899,   900,   561,    51,   498,   633,   176,   237,   291,
     361,   409,   411,   427,   433,   436,   608,   852,     3,    28,
     174,   245,   316,   398,   823,   829,   898,    22,    75,    91,
     145,   155,   167,   172,   199,   244,   248,   311,   325,   358,
     361,   369,   372,   391,   405,   412,   421,   427,   452,   611,
     612,   615,   561,   823,    94,   450,   498,   529,   620,   638,
     860,   864,   881,   895,   109,    69,   210,   109,     5,   828,
     829,   875,   875,   829,   823,    28,   414,   418,   829,   887,
     888,   891,   561,    28,   131,   650,   651,   176,   237,   361,
     373,   414,   869,   870,   891,   561,   446,   638,   643,   891,
       5,   287,   707,   820,   829,   830,   171,   498,   878,   498,
     333,   644,   645,   823,   644,   639,   640,     0,   501,   121,
     209,   438,   146,   214,   292,   432,   653,   654,   639,   641,
     642,   502,   450,   858,    28,   414,   418,   638,   891,   189,
     820,   823,   189,   820,   189,   707,   189,   820,   498,   496,
     500,   804,   806,   529,   620,   638,   842,   881,   820,   409,
     411,   409,   411,   343,   189,   829,   829,   834,   172,   244,
     333,   369,   405,   452,   618,   199,    28,   823,   250,   421,
     108,   405,   405,   452,   364,     3,    45,    50,    51,    52,
      53,    65,    66,    75,    83,    95,   102,   113,   114,   135,
     163,   169,   171,   175,   189,   191,   205,   212,   213,   215,
     218,   219,   221,   231,   233,   245,   264,   265,   266,   274,
     279,   295,   297,   330,   352,   356,   376,   380,   383,   398,
     407,   414,   415,   426,   447,   450,   616,   718,   720,   722,
     724,   726,   728,   730,   731,   732,   734,   735,   736,   738,
     739,   833,   898,   901,   189,   613,   834,   189,   821,   823,
     189,   823,   498,   552,   291,   608,   860,     3,    49,    50,
      52,    53,    65,    66,    73,   113,   114,   151,   157,   163,
     174,   180,   181,   206,   212,   213,   215,   245,   264,   266,
     270,   277,   279,   294,   298,   312,   315,   330,   356,   376,
     383,   398,   400,   414,   415,   420,   422,   426,   446,   447,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   861,   863,   864,   866,   867,   898,   902,   858,   828,
     875,   828,   487,   498,   498,   841,   481,   220,   500,   286,
       4,     6,     7,     8,     9,    10,    36,    50,    52,    53,
      61,    62,    65,    66,    73,    75,    99,   100,   101,   102,
     103,   104,   105,   113,   114,   116,   151,   157,   158,   163,
     180,   181,   212,   213,   215,   238,   239,   264,   266,   271,
     276,   277,   279,   288,   298,   312,   330,   356,   374,   383,
     400,   414,   415,   420,   422,   423,   426,   439,   447,   482,
     489,   490,   491,   496,   498,   503,   505,   506,   639,   684,
     723,   726,   729,   730,   731,   733,   734,   735,   738,   739,
     750,   752,   753,   754,   756,   770,   771,   778,   798,   803,
     810,   811,   812,   825,   826,   827,   828,   829,   809,   811,
     869,   869,   828,   869,   481,   170,   416,   487,   498,   820,
     491,   806,     3,   169,   171,   450,   864,   877,   879,   169,
     880,   750,   782,   783,   829,   644,   502,   498,   836,   499,
     499,   511,   170,   216,   707,   882,    28,   131,   649,   649,
      55,   649,   160,   165,   234,   283,   659,   661,   662,   687,
     689,   690,   691,   653,   654,   498,   820,   481,   220,   151,
      24,    30,   136,   290,   341,   345,   375,   443,   517,   520,
     521,   341,   151,    37,    56,   107,   198,   249,   257,   269,
     300,   341,   347,   369,   375,   389,   520,   554,   557,   151,
     341,   375,   520,   151,   341,   375,   520,     3,    28,    45,
      51,    75,    83,    95,   102,   131,   169,   171,   174,   175,
     191,   205,   218,   219,   221,   231,   233,   245,   265,   274,
     295,   297,   352,   380,   398,   407,   426,   448,   450,   491,
     499,   750,   785,   786,   831,   837,   898,   903,   750,   805,
       3,    28,    32,    33,    34,    35,    36,    37,    38,    41,
      54,    59,    61,    62,    68,    74,    76,    87,    94,    99,
     100,   101,   103,   104,   105,   116,   118,   125,   131,   132,
     138,   142,   146,   158,   160,   165,   167,   170,   177,   179,
     183,   196,   203,   214,   216,   228,   229,   234,   238,   239,
     271,   276,   283,   286,   287,   291,   292,   309,   319,   326,
     335,   348,   349,   368,   374,   385,   402,   405,   413,   416,
     417,   423,   432,   433,   439,   440,   446,   448,   456,   457,
     459,   460,   824,   838,   898,   902,   904,   804,   499,   498,
     597,   608,   271,   844,   500,   835,    37,   452,   189,   820,
     189,   820,   897,   820,   820,    83,   849,   464,    84,   128,
     303,   410,   449,   737,   737,   737,   498,   725,   725,   315,
     498,   727,   151,   498,    65,    66,   737,   725,   722,   462,
     484,   498,   740,   498,   740,    59,   348,   502,   614,   498,
      36,   721,   498,   110,   111,   186,   187,   251,   252,   253,
     254,   255,   256,   259,   260,   365,   366,   478,   479,   498,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   725,
     151,   502,   614,   151,   502,   614,   151,   286,   783,   343,
     405,   499,   502,     4,   158,   286,   423,   489,   490,   556,
     559,   827,   828,   859,   861,   862,   865,   860,   498,   628,
     632,   556,   865,   871,   873,   785,   720,   787,    37,   232,
     829,   498,   807,   496,   750,   802,   498,   498,   165,   498,
     498,   639,   498,   498,   498,   750,   498,   498,   498,   498,
     498,   498,   498,   498,   498,   750,   750,   750,   147,   813,
     814,   783,   784,   639,   750,   782,   772,   773,   774,   829,
     830,     9,   807,   806,   498,   828,   498,   827,   828,     3,
       8,    11,    15,    16,    17,    18,    19,    34,    37,    42,
      49,    74,   175,   191,   196,   218,   219,   233,   271,   274,
     288,   291,   380,   482,   485,   486,   487,   489,   490,   491,
     492,   493,   494,   776,   777,   778,   780,   461,   757,   807,
     297,   750,   502,   216,   646,   498,   828,   807,   500,   806,
     646,     3,   116,   237,   556,   739,   828,   872,    98,   116,
     873,   116,   873,   820,   499,   502,   858,   502,   499,   645,
     821,    37,   882,   531,   820,    37,   829,   375,   641,   641,
      28,   491,   655,   656,   750,   641,   162,   268,   675,   223,
     269,   329,   378,   438,     4,     9,    28,   670,   750,   489,
     490,   671,   672,   750,   752,   687,   688,   662,   661,   659,
     660,   165,   690,   281,   692,   659,   687,   783,   836,   232,
     820,    68,    76,    87,   167,   189,   319,   433,   579,   589,
     604,   829,    76,    87,   528,    87,   528,   498,   416,   498,
     577,   243,   436,   577,    87,   502,   416,   820,   722,   556,
      55,   558,   556,   556,   107,   249,   257,    55,   416,   460,
     484,   555,   262,   361,   555,   557,   707,    87,   416,   528,
     361,   820,   416,   361,   785,   785,   786,   499,   502,   653,
     654,    13,    14,   497,   507,   416,   596,   601,   829,   460,
     631,   333,   405,   452,   151,    94,   549,   562,   845,   846,
     893,   824,   500,   143,   820,   271,   550,   554,   271,   498,
     597,    37,   597,   498,   619,   189,   591,   829,   850,   498,
     783,   827,   616,   787,   737,   737,    36,   721,   414,   414,
     827,   827,   720,   717,   829,   496,   496,   827,   827,   416,
     416,   416,   416,   613,   834,   821,   823,   823,   834,   499,
     608,   189,   820,   897,   860,   866,     4,   827,     4,   827,
     630,   637,   838,    51,    96,   122,   140,   144,   166,   169,
     184,   276,   284,   327,   634,   502,   499,   502,   499,   502,
     842,   783,   804,   784,   456,   799,   800,   750,   783,   498,
     827,   827,     3,   741,   742,   743,   744,   745,   746,   747,
     748,   788,   789,   828,   827,   827,   750,     8,    16,    17,
      18,    19,   485,   486,   487,   489,   490,   491,   492,   493,
     494,   776,   781,   829,   750,   790,   489,   490,   498,   751,
     752,   778,   792,   499,   783,   750,   782,   793,   750,    54,
     170,   229,   417,   750,   783,   796,   750,   498,   829,   343,
     818,   497,   499,   502,   502,   504,   507,   783,   750,   749,
     749,   720,   750,   750,   750,   750,   750,   750,     5,   838,
     839,   414,    41,   402,   808,   834,   750,   750,   498,   639,
     797,   131,   158,   271,   276,   281,   423,   434,   750,   276,
     498,   750,   416,    49,   175,   191,   196,   233,   380,   750,
     750,   750,   750,   750,   750,   750,   750,   750,   750,    28,
      35,   385,   775,   179,   161,   758,   356,   498,   771,   812,
     176,   237,   405,   409,   411,   436,   647,   820,   170,   696,
     785,   491,   696,   498,   828,   499,   820,   877,   820,   885,
     750,   499,   498,   440,   884,   116,   299,   498,   530,   638,
      37,   829,   498,   535,   544,   545,   547,   829,    38,   125,
     657,   657,   502,   440,   657,   356,   357,   489,   490,   672,
     674,   752,   378,   223,   287,   308,   308,   502,   493,     4,
     673,   827,   673,   356,   357,   674,   819,   820,   275,   382,
     693,   688,   660,   499,   341,   520,   498,   189,   589,   823,
     223,   271,   223,   440,   498,   582,   719,   720,   823,   829,
     189,   823,   189,   829,    24,   136,   375,   516,   519,   573,
     587,   838,   823,   581,   600,   838,   823,   517,   823,   341,
     375,   520,   554,   556,   834,   823,   556,   834,   823,   556,
     341,   375,   520,   823,   823,   823,   823,   341,   375,   520,
     823,   823,   653,   653,   653,   448,   786,   190,   346,   652,
     750,   750,   750,   805,   324,   627,   499,   502,   284,   170,
     416,   622,   452,   820,   897,   820,   829,   291,   608,   824,
     498,   498,   151,   151,   233,   579,   589,   592,   595,   605,
     607,   829,   460,   462,   584,   150,   638,   460,   851,   499,
     785,    37,   271,   286,   783,   499,   499,   614,   499,   496,
     481,   481,   499,   499,   499,   502,   720,   827,   497,   827,
     499,   499,   742,   744,   745,   746,   745,   746,   746,   614,
     614,   286,   614,   405,   271,    37,   499,   502,   491,   498,
     556,   629,   865,    37,   626,   828,   626,   271,   276,   327,
     626,   626,   871,   720,   499,   497,   750,   138,   800,   801,
      37,   499,   750,   499,   499,   499,   170,   499,   499,   502,
     499,   500,   309,   791,   499,   751,   751,   750,    11,    16,
      17,    18,    19,   196,   218,   288,   485,   486,   487,   489,
     490,   491,   492,   493,   494,   778,   751,   499,   499,   165,
     170,   794,   795,   502,   499,    37,   796,   783,   796,   796,
     170,   499,    37,   821,   822,   498,   750,   815,   807,   750,
     772,   750,   499,   499,   481,   751,   751,   144,   783,   170,
     131,   158,   276,   281,   423,   434,   498,   144,   781,   750,
     402,   808,   750,   797,   750,   416,   498,   639,   498,   498,
     154,   759,   409,   411,   409,   411,   820,   405,   648,   648,
     648,   228,   357,   498,   639,   697,   698,   699,   700,   707,
     708,   753,   755,   756,   829,   457,   713,   653,   814,   713,
     827,   749,   836,   842,   698,   457,   883,   446,   404,   439,
     539,   534,   543,   829,   286,   536,   829,   540,   547,   502,
     696,   487,   807,   483,   658,   658,   656,   288,   776,   779,
     658,     4,   827,   674,   287,   438,   671,   502,   242,   416,
     750,   271,   604,   498,   151,   498,   582,   199,   601,   602,
     563,    37,   174,   572,   598,   563,    24,   136,   345,   347,
     375,   513,   514,   515,   521,   522,   151,   614,   151,   614,
     573,   587,   573,   499,   502,   566,   828,   499,   502,   487,
     500,   416,   361,    87,   416,   528,   361,   416,   416,   416,
     361,   652,   652,   652,   786,   278,   278,   499,   497,   392,
     393,   636,   828,   596,   627,   820,   498,    37,   597,   844,
     343,   405,   525,   526,   828,   601,   820,   820,   897,   820,
     499,   502,   284,   577,   284,   286,   576,   823,   460,   896,
     577,    37,   499,   405,   750,   151,   820,   499,   721,   827,
     740,   740,   721,   829,   497,   497,   834,   151,   630,   624,
     635,   865,   828,   828,   276,   601,   491,   601,   828,   828,
     413,   750,   142,   720,   499,   750,   750,   781,   750,   794,
     720,   751,   751,   751,   751,   751,   131,   271,   281,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   750,
     750,   795,   794,   720,   499,   499,   499,   783,   720,   502,
     499,   750,   815,   816,   817,    37,   499,   749,   750,    34,
      34,   750,   499,   750,   170,   498,   787,   750,   499,   144,
     751,   751,   144,   144,   750,   750,   654,   457,   296,   763,
     648,   648,   648,   648,   820,   820,   820,   639,   708,   170,
     639,   699,   700,    37,   701,   702,   829,   502,    95,   171,
     205,   221,   231,   265,   352,   704,   702,    37,   701,   703,
     829,   484,   712,   806,   750,   179,   676,   652,   818,   676,
     499,   499,   750,   349,   538,   445,   499,   502,   807,    85,
     538,   499,   502,   535,   883,   750,   162,   227,   498,   658,
     287,   820,   823,   499,   151,   602,   589,   602,   563,   591,
     502,   499,   118,   203,   269,   271,   588,   498,    31,    55,
     609,   598,    68,    74,    87,   116,   118,   203,   271,   276,
     319,   335,   433,   440,   568,   569,   583,   174,   116,   188,
     271,   577,   555,   108,   116,   174,   271,   391,   394,   557,
     577,   375,   515,   427,   823,   829,   519,   600,     3,    45,
      51,    75,    83,    95,   102,   169,   171,   174,   175,   191,
     205,   218,   219,   221,   231,   233,   245,   265,   270,   274,
     288,   295,   297,   352,   376,   380,   398,   407,   426,   450,
     489,   490,   556,   564,   603,   720,   779,   828,   831,   898,
     904,   838,   823,   823,   823,   823,   823,   823,   823,   823,
     823,   823,   499,   499,   499,   653,   555,   636,   498,   595,
     638,   851,   608,   189,   820,   499,   502,   499,   550,   498,
      37,   586,   584,   592,    80,   552,   108,   269,   638,   638,
     591,   440,   848,   497,   720,   614,   897,   499,   502,   601,
     750,   499,   499,   795,   170,   131,   281,   498,   499,   499,
     502,   499,   829,   750,   750,   750,   787,   499,   750,    34,
      34,   750,   750,   144,   499,   499,   750,   498,   764,   829,
     820,   820,   820,   820,   702,   703,   498,   499,   829,   830,
     407,   667,   668,   498,   699,   221,   295,   705,   699,   705,
     221,   704,   705,   221,   668,   498,   829,   668,   498,   293,
      55,   183,   685,   499,   685,   828,   810,   638,   299,   638,
     534,   286,   498,   532,   487,   547,   538,   781,   563,   589,
     499,   499,   460,   594,   119,   192,   201,   118,   442,   750,
     116,    37,   498,   834,   823,   751,   119,   192,   118,   276,
     223,   820,   594,    82,   609,   189,   276,   556,   750,   609,
     276,   489,   490,   559,   829,   720,   614,   614,   245,   398,
     831,   835,   487,   416,   416,   652,   628,   440,   623,   625,
     601,   499,   896,    37,   405,   271,   498,   828,   851,   595,
     150,   638,   148,   197,   576,   121,   136,   318,   896,   108,
     460,   894,   286,   829,   847,   498,    37,   635,   751,   170,
     498,   787,   815,   499,   750,   750,   750,   499,   765,   829,
     709,   710,   755,   701,   498,     4,     9,   663,   665,   666,
     829,   822,   699,   286,   440,   706,   699,   221,   699,   714,
     715,   829,   498,   714,   829,    28,    97,   180,   355,   491,
     498,   677,   678,   679,   680,   681,   682,   683,   750,   750,
     459,   760,   828,   760,   502,   539,    87,   498,   537,   546,
     755,   829,   132,   750,   499,   335,   594,   498,   585,   563,
     499,   188,   498,   750,   271,   569,   594,   597,   823,    37,
     151,    74,   716,   835,   493,   564,   823,   823,   499,   555,
     123,   499,   584,   638,   820,   151,    37,   499,   823,   896,
      28,    79,    88,   117,   188,   200,   391,   394,   580,   580,
     357,   357,    60,    68,   237,   820,   546,   751,   787,   499,
     305,   766,   499,   502,    37,   711,   822,   308,   493,   308,
     357,   493,   498,   498,   499,   750,   498,   699,   706,   499,
     502,   720,   714,   499,   498,   377,   498,   499,   502,   761,
     762,   829,   326,   686,   686,   445,   823,   750,   499,   502,
      74,   541,   541,   272,   438,   820,   563,   590,   593,   838,
     395,   454,   570,   571,   498,   565,   750,   499,   247,   606,
     188,   834,   440,   518,   493,   427,   628,   828,   851,   576,
     894,   498,   820,   638,   584,   552,    68,   289,    68,   848,
     499,   499,    55,   653,   712,   709,   498,   499,   829,   663,
     822,   715,   716,   499,   783,   498,   783,   679,   502,    37,
     750,   440,   664,   664,   638,   499,   713,   537,   834,   542,
     834,   542,   375,   597,   499,   502,   487,   554,   499,   269,
     578,   171,   304,   381,   286,   574,   575,   599,   565,   750,
     614,   427,    37,   498,   894,   576,   896,   289,   289,   498,
     851,   782,   328,   357,   767,   714,   499,   502,   499,   499,
     499,   678,   499,   762,   764,   359,   541,   657,   657,   545,
     606,   593,   564,   499,   571,   201,   121,   438,   286,   599,
     286,   574,   638,   546,   713,    49,    98,   429,   750,   768,
     769,   768,   499,   499,     9,   342,   669,   499,   666,   542,
     658,   658,   713,   575,    59,   269,   348,   375,   567,   567,
     894,   499,   769,   356,   164,   314,   164,   314,   499,   498,
     657,   563,    23,   116,   276,   851,    34,     9,   658,   713,
     769,   499
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 468 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 484 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 496 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 539 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) def;
					n->behavior = (yyvsp[(9) - (9)].dbehavior);
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (9)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (9)].node);
					def->raw_default = (yyvsp[(8) - (9)].node);
					def->location = (yylsp[(3) - (9)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 320 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 329 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 337 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 352 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 360 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 370 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 380 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 387 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 394 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 402 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 409 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 420 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 426 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 430 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 435 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 440 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 448 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 453 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 459 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 105:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 106:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 107:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 108:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 117:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 118:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 119:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 120:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 121:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 122:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 123:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 124:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 125:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 126:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 127:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 128:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 129:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 130:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 131:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 132:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 133:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 134:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 135:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 136:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 137:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 138:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 139:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 140:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 141:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 142:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 143:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 144:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 145:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 146:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 147:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 148:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 149:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 150:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 151:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 152:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 153:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 154:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 155:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 156:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 157:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 158:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 159:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 160:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 161:
#line 254 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 162:
#line 255 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 163:
#line 261 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 164:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 170:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 171:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 172:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 173:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 174:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 175:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 176:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 177:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 178:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 179:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 180:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 181:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 182:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 183:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 184:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 185:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 186:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 187:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 188:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 190:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 191:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 193:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 195:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 196:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 197:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 198:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 200:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 201:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 202:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 203:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 204:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 205:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 206:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 211:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 212:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 213:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 214:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 215:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 216:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 217:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 218:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 219:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 220:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 221:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 222:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 223:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 224:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 225:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 226:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 227:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 228:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 229:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 230:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 231:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 232:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 233:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 234:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 235:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 236:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 237:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 238:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 239:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 245:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 246:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.constr) = PG_CONSTR_GENERATED_VIRTUAL; ;}
    break;

  case 247:
#line 221 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.constr) = PG_CONSTR_GENERATED_STORED; ;}
    break;

  case 248:
#line 225 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.constr) = (yyvsp[(1) - (1)].constr) ;}
    break;

  case 249:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.constr) = PG_CONSTR_GENERATED_VIRTUAL; ;}
    break;

  case 250:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 251:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = (yyvsp[(7) - (7)].constr);
					n->generated_when = (yyvsp[(2) - (7)].ival);
					n->raw_expr = (yyvsp[(5) - (7)].node);
					n->cooked_expr = NULL;
					n->location = (yylsp[(1) - (7)]);

					/*
					 * Can't do this in the grammar because of shift/reduce
					 * conflicts.  (IDENTITY allows both ALWAYS and BY
					 * DEFAULT, but generated columns only allow ALWAYS.)  We
					 * can also give a more useful error message and location.
					 */
					if ((yyvsp[(2) - (7)].ival) != PG_ATTRIBUTE_IDENTITY_ALWAYS)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("for a generated column, GENERATED ALWAYS must be specified"),
								 parser_errposition((yylsp[(2) - (7)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 252:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = (yyvsp[(5) - (5)].constr);
					n->generated_when = PG_ATTRIBUTE_IDENTITY_ALWAYS;
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 249:
#line 267 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 250:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 251:
#line 279 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 252:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 253:
#line 283 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 254:
#line 285 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 255:
#line 287 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 256:
#line 290 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 257:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 258:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 259:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 260:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 261:
#line 302 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 262:
#line 303 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 263:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 264:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 265:
#line 320 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 266:
#line 321 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 267:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 268:
#line 323 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 269:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 270:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 271:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 272:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 273:
#line 333 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 274:
#line 334 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 275:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 276:
#line 344 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 277:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 278:
#line 358 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 279:
#line 365 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 280:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 281:
#line 377 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 282:
#line 378 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 283:
#line 379 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 284:
#line 383 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 285:
#line 388 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 286:
#line 389 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 287:
#line 390 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 288:
#line 395 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 289:
#line 400 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 290:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 291:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 292:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 293:
#line 404 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 294:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 295:
#line 411 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->category = COL_STANDARD;
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					SplitColQualList((yyvsp[(3) - (3)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
			;}
    break;

  case 296:
#line 430 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->category = COL_GENERATED;
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					// merge the constraints with the generated column constraint
					auto constraints = (yyvsp[(4) - (4)].list);
					if (constraints) {
					    constraints = lappend(constraints, (yyvsp[(3) - (4)].node));
					} else {
					    constraints = list_make1((yyvsp[(3) - (4)].node));
					}
					SplitColQualList(constraints, &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
			;}
    break;

  case 297:
#line 457 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 298:
#line 458 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 299:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 300:
#line 466 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 301:
#line 467 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 302:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 303:
#line 473 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 304:
#line 477 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 305:
#line 484 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 306:
#line 485 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 307:
#line 490 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 308:
#line 491 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 309:
#line 492 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 310:
#line 497 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 311:
#line 504 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 312:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 313:
#line 510 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 314:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 315:
#line 515 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 316:
#line 521 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 317:
#line 525 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 318:
#line 529 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 319:
#line 534 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 320:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 321:
#line 542 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 322:
#line 546 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 323:
#line 547 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 324:
#line 551 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 325:
#line 553 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 326:
#line 559 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 327:
#line 570 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 328:
#line 584 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 329:
#line 597 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 330:
#line 612 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 331:
#line 625 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 332:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 333:
#line 662 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 334:
#line 666 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 335:
#line 673 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 336:
#line 677 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 337:
#line 685 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 338:
#line 689 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 339:
#line 697 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 706 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 341:
#line 707 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 342:
#line 708 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 343:
#line 709 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 344:
#line 711 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 345:
#line 718 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 346:
#line 724 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 347:
#line 725 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 348:
#line 730 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 349:
#line 731 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 354:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 355:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 356:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 357:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 358:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 359:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 360:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 361:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 362:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 363:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 364:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 365:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 366:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; ;}
    break;

  case 367:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 368:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 369:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 370:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 371:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 372:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 373:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 374:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 375:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 376:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 377:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 378:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 379:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 380:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 381:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 382:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 383:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 384:
#line 119 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 385:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 386:
#line 125 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 387:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 388:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 389:
#line 132 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 390:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 391:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 392:
#line 139 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 393:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 394:
#line 143 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 395:
#line 9 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (8)].ival);
				n->name = (yyvsp[(4) - (8)].range);
				n->params = (yyvsp[(5) - (8)].list);
				n->function = NULL;
				n->query = (yyvsp[(8) - (8)].node);
				(yyval.node) = (PGNode *)n;
				
			;}
    break;

  case 396:
#line 21 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (7)].ival);
				n->name = (yyvsp[(4) - (7)].range);
				n->params = (yyvsp[(5) - (7)].list);
				n->function = (yyvsp[(7) - (7)].node);
				n->query = NULL;
				(yyval.node) = (PGNode *)n;
                         ;}
    break;

  case 399:
#line 42 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 400:
#line 46 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 401:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 402:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 403:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 404:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 405:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 406:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 407:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 408:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 409:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 410:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 411:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 412:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 413:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 414:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 415:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 416:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 417:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 418:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 419:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 420:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 421:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 422:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 423:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 424:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 425:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 426:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 427:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 428:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 429:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 430:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 431:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 432:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 433:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 434:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 435:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 436:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 437:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 438:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 439:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 440:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 441:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 442:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 443:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 444:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 445:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 446:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 447:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 448:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 449:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 452:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 453:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 454:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 455:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 456:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 457:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 458:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 459:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 460:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 461:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 462:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 463:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 464:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 465:
#line 174 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (11)].list);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 466:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 467:
#line 190 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 468:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 469:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 470:
#line 217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 471:
#line 234 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 472:
#line 241 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 473:
#line 248 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 474:
#line 257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 475:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 476:
#line 262 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 477:
#line 274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 478:
#line 284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 479:
#line 293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 480:
#line 298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 481:
#line 303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 482:
#line 308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 483:
#line 313 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 484:
#line 321 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 485:
#line 329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 486:
#line 334 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 487:
#line 339 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 488:
#line 345 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 489:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 490:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 491:
#line 351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 492:
#line 352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 493:
#line 359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 494:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 495:
#line 364 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 496:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 497:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 498:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 499:
#line 371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 500:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 501:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 502:
#line 380 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 503:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 504:
#line 392 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 505:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 506:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 507:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 508:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 509:
#line 428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 510:
#line 429 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 511:
#line 430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 512:
#line 433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 513:
#line 434 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 514:
#line 435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 515:
#line 439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 516:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 517:
#line 441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 518:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 519:
#line 446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 520:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 521:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 522:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 523:
#line 470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 524:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 525:
#line 477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 526:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 527:
#line 488 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 528:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 529:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 530:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 531:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 532:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 533:
#line 515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 534:
#line 519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 535:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 536:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 537:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 538:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 539:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 540:
#line 544 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 541:
#line 551 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 542:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 543:
#line 558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 544:
#line 563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 545:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 546:
#line 568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 547:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 548:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 549:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 550:
#line 579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 551:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 552:
#line 603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 553:
#line 605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 554:
#line 607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 555:
#line 611 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 556:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 557:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 558:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 559:
#line 620 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 560:
#line 621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 561:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 562:
#line 648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 563:
#line 653 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 564:
#line 657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 565:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 566:
#line 662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 567:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 568:
#line 667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 569:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 570:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 571:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 572:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 573:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 574:
#line 680 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 575:
#line 693 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 576:
#line 700 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 577:
#line 707 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 578:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 579:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 580:
#line 718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 581:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 582:
#line 723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 583:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 584:
#line 728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 585:
#line 729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 586:
#line 733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 587:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 588:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 589:
#line 739 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 590:
#line 744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 591:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 592:
#line 755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 593:
#line 756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 594:
#line 757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 595:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 596:
#line 762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 597:
#line 767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 598:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 599:
#line 769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 600:
#line 779 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 601:
#line 785 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 602:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 603:
#line 794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (2)].node); ;}
    break;

  case 604:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 605:
#line 808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 606:
#line 812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 607:
#line 813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 608:
#line 817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 609:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 610:
#line 825 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 611:
#line 831 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 613:
#line 847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 614:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 615:
#line 865 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 616:
#line 869 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 617:
#line 895 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 618:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 619:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 620:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 621:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 622:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 623:
#line 969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 624:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 625:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 626:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 627:
#line 992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 628:
#line 993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 629:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 630:
#line 1006 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 631:
#line 1010 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 632:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 633:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 634:
#line 1027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 635:
#line 1028 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 636:
#line 1029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 637:
#line 1030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 638:
#line 1034 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 639:
#line 1035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 640:
#line 1047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 641:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 642:
#line 1054 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 643:
#line 1061 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 644:
#line 1068 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 645:
#line 1075 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 646:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 647:
#line 1118 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 648:
#line 1131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 649:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 650:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 651:
#line 1139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 652:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 653:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 654:
#line 1144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 655:
#line 1149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 656:
#line 1150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 657:
#line 1156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 658:
#line 1160 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 659:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 660:
#line 1187 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 661:
#line 1194 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 662:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 663:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 666:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 667:
#line 1218 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = NULL; ;}
    break;

  case 668:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 669:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 670:
#line 1233 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 671:
#line 1238 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 672:
#line 1244 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 673:
#line 1249 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 674:
#line 1254 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 675:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 676:
#line 1270 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 677:
#line 1272 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 678:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 679:
#line 1278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 680:
#line 1279 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 681:
#line 1280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 682:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 683:
#line 1282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 684:
#line 1284 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 685:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 686:
#line 1308 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 687:
#line 1309 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 688:
#line 1310 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 689:
#line 1311 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 690:
#line 1323 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 691:
#line 1336 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 692:
#line 1337 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 693:
#line 1344 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 694:
#line 1349 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 695:
#line 1354 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 696:
#line 1359 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 697:
#line 1364 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 698:
#line 1369 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 699:
#line 1374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 700:
#line 1379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 701:
#line 1385 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 702:
#line 1391 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 703:
#line 1397 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 704:
#line 1404 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 705:
#line 1425 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 706:
#line 1435 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 707:
#line 1439 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 708:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 709:
#line 1451 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 710:
#line 1459 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 711:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 712:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 713:
#line 1496 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 714:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 715:
#line 1506 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 716:
#line 1519 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 717:
#line 1527 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 718:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 719:
#line 1539 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 720:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 721:
#line 1543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 722:
#line 1545 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 723:
#line 1547 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 724:
#line 1551 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 725:
#line 1552 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 726:
#line 1560 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 727:
#line 1569 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 728:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 729:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 730:
#line 1597 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 731:
#line 1604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 732:
#line 1605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 733:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 750:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 751:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 752:
#line 1639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 753:
#line 1641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 754:
#line 1643 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 755:
#line 1645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 756:
#line 1647 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 757:
#line 1649 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 758:
#line 1651 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 759:
#line 1656 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 760:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 761:
#line 1667 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 762:
#line 1674 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 763:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 764:
#line 1685 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 765:
#line 1690 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 766:
#line 1721 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 767:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 768:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 769:
#line 1734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 770:
#line 1749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 771:
#line 1751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 772:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 773:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 774:
#line 1757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 775:
#line 1759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 776:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 777:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 778:
#line 1765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 779:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 780:
#line 1769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 781:
#line 1771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 782:
#line 1773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 783:
#line 1775 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 784:
#line 1777 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 785:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 786:
#line 1782 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 787:
#line 1784 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 788:
#line 1787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 789:
#line 1789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 790:
#line 1791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 791:
#line 1793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 792:
#line 1796 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 793:
#line 1801 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 794:
#line 1806 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 795:
#line 1813 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 796:
#line 1818 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 797:
#line 1825 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 798:
#line 1830 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 799:
#line 1837 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 800:
#line 1842 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 801:
#line 1850 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 802:
#line 1858 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 803:
#line 1866 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 804:
#line 1874 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 805:
#line 1892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 806:
#line 1900 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 807:
#line 1908 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 808:
#line 1916 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 809:
#line 1924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 810:
#line 1931 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 811:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 812:
#line 1939 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 813:
#line 1944 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->lhs = (yyvsp[(1) - (3)].node);
				n->rhs = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 814:
#line 1952 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 815:
#line 1968 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 816:
#line 1976 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 817:
#line 1984 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 818:
#line 1992 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 819:
#line 2000 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 820:
#line 2008 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 821:
#line 2016 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 822:
#line 2020 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 823:
#line 2024 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 824:
#line 2028 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 825:
#line 2032 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 826:
#line 2040 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 827:
#line 2048 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 828:
#line 2056 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 829:
#line 2064 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 830:
#line 2084 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 831:
#line 2106 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 832:
#line 2117 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 833:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 834:
#line 2137 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 835:
#line 2154 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 836:
#line 2156 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 837:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 838:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 839:
#line 2162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 840:
#line 2164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 841:
#line 2166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 842:
#line 2168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 843:
#line 2170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 844:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 845:
#line 2174 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 846:
#line 2176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 847:
#line 2178 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 848:
#line 2180 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 849:
#line 2182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 850:
#line 2184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 851:
#line 2186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 852:
#line 2188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 853:
#line 2190 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 854:
#line 2192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 855:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 856:
#line 2198 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 857:
#line 2202 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 858:
#line 2206 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 859:
#line 2219 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 860:
#line 2220 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 861:
#line 2222 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 862:
#line 2229 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 863:
#line 2241 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 864:
#line 2256 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 865:
#line 2268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 866:
#line 2270 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 867:
#line 2282 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 868:
#line 2293 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 869:
#line 2317 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 870:
#line 2328 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 871:
#line 2337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 872:
#line 2341 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 873:
#line 2348 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 874:
#line 2356 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 875:
#line 2364 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 876:
#line 2375 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 877:
#line 2383 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 878:
#line 2411 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (5)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (5)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						n->agg_order = (yyvsp[(2) - (5)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (5)].node);
					n->export_state = (yyvsp[(4) - (5)].boolean);
					n->over = (yyvsp[(5) - (5)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 879:
#line 2447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 880:
#line 2457 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 881:
#line 2458 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 882:
#line 2466 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 883:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 884:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 885:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 886:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 887:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 888:
#line 2492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 889:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 890:
#line 2500 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 891:
#line 2504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 892:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 893:
#line 2512 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 894:
#line 2516 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 895:
#line 2520 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 896:
#line 2524 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 897:
#line 2528 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 898:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 899:
#line 2534 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 900:
#line 2536 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 901:
#line 2540 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 902:
#line 2549 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 903:
#line 2554 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 904:
#line 2561 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 905:
#line 2576 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 906:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 907:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 908:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 909:
#line 2595 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 910:
#line 2599 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 911:
#line 2612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 912:
#line 2613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 913:
#line 2617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 914:
#line 2618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 915:
#line 2622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 916:
#line 2623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 917:
#line 2630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 918:
#line 2631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 919:
#line 2635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 920:
#line 2637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 921:
#line 2642 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 922:
#line 2650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 923:
#line 2652 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 924:
#line 2665 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 925:
#line 2670 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 926:
#line 2695 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 927:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 928:
#line 2699 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 929:
#line 2700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 930:
#line 2712 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 931:
#line 2718 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 932:
#line 2724 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 933:
#line 2734 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 934:
#line 2751 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 935:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 936:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 937:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 938:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 939:
#line 2828 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 940:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 941:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 942:
#line 2852 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 943:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 944:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 945:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 946:
#line 2868 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 947:
#line 2872 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 948:
#line 2873 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 949:
#line 2877 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 950:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 951:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 952:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 953:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 954:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 955:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 956:
#line 2888 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 957:
#line 2889 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 958:
#line 2890 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 959:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 960:
#line 2892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "**"; ;}
    break;

  case 961:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 962:
#line 2894 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 963:
#line 2895 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 964:
#line 2896 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 965:
#line 2897 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 966:
#line 2898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 967:
#line 2902 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 968:
#line 2904 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 969:
#line 2909 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 970:
#line 2911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 971:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 972:
#line 2918 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 973:
#line 2920 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 974:
#line 2922 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 975:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 976:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 977:
#line 2928 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 978:
#line 2930 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 979:
#line 2944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 980:
#line 2946 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 981:
#line 2950 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 982:
#line 2954 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 983:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 984:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (2)].list);
				;}
    break;

  case 985:
#line 2973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 986:
#line 2977 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 987:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 988:
#line 2990 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 989:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 990:
#line 3000 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 991:
#line 3009 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 992:
#line 3019 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 993:
#line 3020 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 994:
#line 3025 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 995:
#line 3028 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 996:
#line 3035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 997:
#line 3036 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 998:
#line 3037 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 999:
#line 3038 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 1000:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 1001:
#line 3040 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 1002:
#line 3041 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 1003:
#line 3042 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 1004:
#line 3043 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 1005:
#line 3044 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1006:
#line 3055 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 1007:
#line 3059 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1008:
#line 3066 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1009:
#line 3072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1010:
#line 3073 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1011:
#line 3090 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1012:
#line 3094 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 1013:
#line 3099 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1014:
#line 3103 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 1015:
#line 3118 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1016:
#line 3122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1017:
#line 3126 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1018:
#line 3129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1019:
#line 3132 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1020:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1021:
#line 3134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1022:
#line 3138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1023:
#line 3144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 1024:
#line 3155 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 1025:
#line 3168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1026:
#line 3169 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1027:
#line 3174 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 1028:
#line 3184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1029:
#line 3185 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1030:
#line 3188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1031:
#line 3189 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1032:
#line 3193 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 1033:
#line 3197 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 1034:
#line 3204 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 1035:
#line 3208 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1036:
#line 3216 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1037:
#line 3226 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1038:
#line 3227 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1039:
#line 3231 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1040:
#line 3232 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1041:
#line 3236 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1042:
#line 3237 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1045:
#line 3251 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1046:
#line 3252 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1047:
#line 3256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1048:
#line 3257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1049:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1050:
#line 3262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1051:
#line 3266 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1052:
#line 3282 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1053:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1054:
#line 3298 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1055:
#line 3313 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1056:
#line 3330 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1057:
#line 3331 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1058:
#line 3334 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1059:
#line 3335 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1060:
#line 3338 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1061:
#line 3342 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1062:
#line 3343 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1063:
#line 3347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1064:
#line 3348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1065:
#line 3351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1066:
#line 3352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1067:
#line 3353 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1068:
#line 3363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1069:
#line 3364 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1070:
#line 3376 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1071:
#line 3380 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1072:
#line 3407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1073:
#line 3409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1074:
#line 3414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1075:
#line 3415 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1076:
#line 3418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1077:
#line 3420 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1078:
#line 3431 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1079:
#line 3434 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1080:
#line 3445 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1081:
#line 3449 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1082:
#line 3453 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1083:
#line 3465 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1084:
#line 3469 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1085:
#line 3478 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1086:
#line 3485 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1087:
#line 3523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1088:
#line 3527 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1089:
#line 3531 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1090:
#line 3535 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1091:
#line 3539 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1092:
#line 3543 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1093:
#line 3547 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1094:
#line 3552 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1095:
#line 3553 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1096:
#line 3569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1097:
#line 3570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1098:
#line 3571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1099:
#line 3574 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1100:
#line 3575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1101:
#line 3581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1102:
#line 3582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1103:
#line 3583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1104:
#line 3586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1105:
#line 3587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1106:
#line 3588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1107:
#line 3591 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1108:
#line 3592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1109:
#line 3593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1110:
#line 3596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1111:
#line 3597 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1112:
#line 3601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1113:
#line 3603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1114:
#line 3607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1115:
#line 3608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1117:
#line 3619 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1118:
#line 3620 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1119:
#line 3621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1120:
#line 3622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1121:
#line 3625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1122:
#line 3626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1123:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1124:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1125:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1130:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1131:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1132:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1133:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1138:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1139:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1140:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1141:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1142:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1143:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1144:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1145:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1146:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1147:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1148:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1149:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1150:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1151:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1152:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1153:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1154:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1155:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1156:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1157:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1158:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1159:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1160:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1161:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1162:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1163:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1164:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1165:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1166:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1167:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1168:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1169:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1175:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1176:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1177:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1178:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1179:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1180:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1181:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1182:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1183:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1184:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1185:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1186:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1187:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1188:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1189:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1190:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1191:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1192:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1193:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1194:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1195:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1196:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1197:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1198:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1199:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1200:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1201:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1202:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1203:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1204:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1205:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1206:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1207:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1208:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1209:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1210:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1211:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1212:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1213:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1214:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					n->load_type = PG_LOAD_TYPE_LOAD;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1215:
#line 14 "third_party/libpg_query/grammar/statements/load.y"
    {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[(2) - (2)].str);
                    n->load_type = PG_LOAD_TYPE_INSTALL;
                    (yyval.node) = (PGNode *)n;
				;}
    break;

  case 1216:
#line 20 "third_party/libpg_query/grammar/statements/load.y"
    {
                      PGLoadStmt *n = makeNode(PGLoadStmt);
                      n->filename = (yyvsp[(3) - (3)].str);
                      n->load_type = PG_LOAD_TYPE_FORCE_INSTALL;
                      (yyval.node) = (PGNode *)n;
                ;}
    break;

  case 1217:
#line 28 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1218:
#line 29 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1219:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1220:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1221:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1222:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1223:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1224:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1225:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1226:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1227:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1228:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1229:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1230:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1231:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1232:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1233:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1234:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1235:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1236:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1237:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1238:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1239:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1240:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1241:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1242:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1243:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1244:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1245:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1246:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1247:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1248:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1249:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1250:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1251:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1252:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1253:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1254:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1255:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1256:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1257:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1258:
#line 53 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1261:
#line 63 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1262:
#line 65 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1263:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1264:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1265:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1266:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1267:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1268:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1269:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1270:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1271:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1272:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1273:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1274:
#line 38 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(8) - (9)].node);
					ctas->into = (yyvsp[(6) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(6) - (9)].into)->rel->relpersistence = (yyvsp[(4) - (9)].ival);
					(yyvsp[(6) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1275:
#line 54 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1276:
#line 55 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1277:
#line 56 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1278:
#line 62 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 25431 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 83 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

