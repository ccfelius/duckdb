/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     COMPRESSION = 336,
     CONCURRENTLY = 337,
     CONFIGURATION = 338,
     CONFLICT = 339,
     CONNECTION = 340,
     CONSTRAINT = 341,
     CONSTRAINTS = 342,
     CONTENT_P = 343,
     CONTINUE_P = 344,
     CONVERSION_P = 345,
     COPY = 346,
     COST = 347,
     CREATE_P = 348,
     CROSS = 349,
     CSV = 350,
     CUBE = 351,
     CURRENT_P = 352,
     CURRENT_CATALOG = 353,
     CURRENT_DATE = 354,
     CURRENT_ROLE = 355,
     CURRENT_SCHEMA = 356,
     CURRENT_TIME = 357,
     CURRENT_TIMESTAMP = 358,
     CURRENT_USER = 359,
     CURSOR = 360,
     CYCLE = 361,
     DATA_P = 362,
     DATABASE = 363,
     DAY_P = 364,
     DAYS_P = 365,
     DEALLOCATE = 366,
     DEC = 367,
     DECIMAL_P = 368,
     DECLARE = 369,
     DEFAULT = 370,
     DEFAULTS = 371,
     DEFERRABLE = 372,
     DEFERRED = 373,
     DEFINER = 374,
     DELETE_P = 375,
     DELIMITER = 376,
     DELIMITERS = 377,
     DEPENDS = 378,
     DESC_P = 379,
     DESCRIBE = 380,
     DETACH = 381,
     DICTIONARY = 382,
     DISABLE_P = 383,
     DISCARD = 384,
     DISTINCT = 385,
     DO = 386,
     DOCUMENT_P = 387,
     DOMAIN_P = 388,
     DOUBLE_P = 389,
     DROP = 390,
     EACH = 391,
     ELSE = 392,
     ENABLE_P = 393,
     ENCODING = 394,
     ENCRYPTED = 395,
     END_P = 396,
     ENUM_P = 397,
     ESCAPE = 398,
     EVENT = 399,
     EXCEPT = 400,
     EXCLUDE = 401,
     EXCLUDING = 402,
     EXCLUSIVE = 403,
     EXECUTE = 404,
     EXISTS = 405,
     EXPLAIN = 406,
     EXPORT_P = 407,
     EXTENSION = 408,
     EXTERNAL = 409,
     EXTRACT = 410,
     FALSE_P = 411,
     FAMILY = 412,
     FETCH = 413,
     FILTER = 414,
     FIRST_P = 415,
     FLOAT_P = 416,
     FOLLOWING = 417,
     FOR = 418,
     FORCE = 419,
     FOREIGN = 420,
     FORWARD = 421,
     FREEZE = 422,
     FROM = 423,
     FULL = 424,
     FUNCTION = 425,
     FUNCTIONS = 426,
     GENERATED = 427,
     GLOB = 428,
     GLOBAL = 429,
     GRANT = 430,
     GRANTED = 431,
     GROUP_P = 432,
     GROUPING = 433,
     GROUPING_ID = 434,
     HANDLER = 435,
     HAVING = 436,
     HEADER_P = 437,
     HOLD = 438,
     HOUR_P = 439,
     HOURS_P = 440,
     IDENTITY_P = 441,
     IF_P = 442,
     ILIKE = 443,
     IMMEDIATE = 444,
     IMMUTABLE = 445,
     IMPLICIT_P = 446,
     IMPORT_P = 447,
     IN_P = 448,
     INCLUDING = 449,
     INCREMENT = 450,
     INDEX = 451,
     INDEXES = 452,
     INHERIT = 453,
     INHERITS = 454,
     INITIALLY = 455,
     INLINE_P = 456,
     INNER_P = 457,
     INOUT = 458,
     INPUT_P = 459,
     INSENSITIVE = 460,
     INSERT = 461,
     INSTALL = 462,
     INSTEAD = 463,
     INT_P = 464,
     INTEGER = 465,
     INTERSECT = 466,
     INTERVAL = 467,
     INTO = 468,
     INVOKER = 469,
     IS = 470,
     ISNULL = 471,
     ISOLATION = 472,
     JOIN = 473,
     KEY = 474,
     LABEL = 475,
     LANGUAGE = 476,
     LARGE_P = 477,
     LAST_P = 478,
     LATERAL_P = 479,
     LEADING = 480,
     LEAKPROOF = 481,
     LEFT = 482,
     LEVEL = 483,
     LIKE = 484,
     LIMIT = 485,
     LISTEN = 486,
     LOAD = 487,
     LOCAL = 488,
     LOCALTIME = 489,
     LOCALTIMESTAMP = 490,
     LOCATION = 491,
     LOCK_P = 492,
     LOCKED = 493,
     LOGGED = 494,
     MACRO = 495,
     MAP = 496,
     MAPPING = 497,
     MATCH = 498,
     MATERIALIZED = 499,
     MAXVALUE = 500,
     METHOD = 501,
     MICROSECOND_P = 502,
     MICROSECONDS_P = 503,
     MILLISECOND_P = 504,
     MILLISECONDS_P = 505,
     MINUTE_P = 506,
     MINUTES_P = 507,
     MINVALUE = 508,
     MODE = 509,
     MONTH_P = 510,
     MONTHS_P = 511,
     MOVE = 512,
     NAME_P = 513,
     NAMES = 514,
     NATIONAL = 515,
     NATURAL = 516,
     NCHAR = 517,
     NEW = 518,
     NEXT = 519,
     NO = 520,
     NONE = 521,
     NOT = 522,
     NOTHING = 523,
     NOTIFY = 524,
     NOTNULL = 525,
     NOWAIT = 526,
     NULL_P = 527,
     NULLIF = 528,
     NULLS_P = 529,
     NUMERIC = 530,
     OBJECT_P = 531,
     OF = 532,
     OFF = 533,
     OFFSET = 534,
     OIDS = 535,
     OLD = 536,
     ON = 537,
     ONLY = 538,
     OPERATOR = 539,
     OPTION = 540,
     OPTIONS = 541,
     OR = 542,
     ORDER = 543,
     ORDINALITY = 544,
     OUT_P = 545,
     OUTER_P = 546,
     OVER = 547,
     OVERLAPS = 548,
     OVERLAY = 549,
     OVERRIDING = 550,
     OWNED = 551,
     OWNER = 552,
     PARALLEL = 553,
     PARSER = 554,
     PARTIAL = 555,
     PARTITION = 556,
     PASSING = 557,
     PASSWORD = 558,
     PERCENT = 559,
     PLACING = 560,
     PLANS = 561,
     POLICY = 562,
     POSITION = 563,
     PRAGMA_P = 564,
     PRECEDING = 565,
     PRECISION = 566,
     PREPARE = 567,
     PREPARED = 568,
     PRESERVE = 569,
     PRIMARY = 570,
     PRIOR = 571,
     PRIVILEGES = 572,
     PROCEDURAL = 573,
     PROCEDURE = 574,
     PROGRAM = 575,
     PUBLICATION = 576,
     QUOTE = 577,
     RANGE = 578,
     READ_P = 579,
     REAL = 580,
     REASSIGN = 581,
     RECHECK = 582,
     RECURSIVE = 583,
     REF = 584,
     REFERENCES = 585,
     REFERENCING = 586,
     REFRESH = 587,
     REINDEX = 588,
     RELATIVE_P = 589,
     RELEASE = 590,
     RENAME = 591,
     REPEATABLE = 592,
     REPLACE = 593,
     REPLICA = 594,
     RESET = 595,
     RESTART = 596,
     RESTRICT = 597,
     RETURNING = 598,
     RETURNS = 599,
     REVOKE = 600,
     RIGHT = 601,
     ROLE = 602,
     ROLLBACK = 603,
     ROLLUP = 604,
     ROW = 605,
     ROWS = 606,
     RULE = 607,
     SAMPLE = 608,
     SAVEPOINT = 609,
     SCHEMA = 610,
     SCHEMAS = 611,
     SCROLL = 612,
     SEARCH = 613,
     SECOND_P = 614,
     SECONDS_P = 615,
     SECURITY = 616,
     SELECT = 617,
     SEQUENCE = 618,
     SEQUENCES = 619,
     SERIALIZABLE = 620,
     SERVER = 621,
     SESSION = 622,
     SESSION_USER = 623,
     SET = 624,
     SETOF = 625,
     SETS = 626,
     SHARE = 627,
     SHOW = 628,
     SIMILAR = 629,
     SIMPLE = 630,
     SKIP = 631,
     SMALLINT = 632,
     SNAPSHOT = 633,
     SOME = 634,
     SQL_P = 635,
     STABLE = 636,
     STANDALONE_P = 637,
     START = 638,
     STATEMENT = 639,
     STATISTICS = 640,
     STDIN = 641,
     STDOUT = 642,
     STORAGE = 643,
     STRICT_P = 644,
     STRIP_P = 645,
     STRUCT = 646,
     SUBSCRIPTION = 647,
     SUBSTRING = 648,
     SUMMARIZE = 649,
     SYMMETRIC = 650,
     SYSID = 651,
     SYSTEM_P = 652,
     TABLE = 653,
     TABLES = 654,
     TABLESAMPLE = 655,
     TABLESPACE = 656,
     TEMP = 657,
     TEMPLATE = 658,
     TEMPORARY = 659,
     TEXT_P = 660,
     THEN = 661,
     TIME = 662,
     TIMESTAMP = 663,
     TO = 664,
     TRAILING = 665,
     TRANSACTION = 666,
     TRANSFORM = 667,
     TREAT = 668,
     TRIGGER = 669,
     TRIM = 670,
     TRUE_P = 671,
     TRUNCATE = 672,
     TRUSTED = 673,
     TRY_CAST = 674,
     TYPE_P = 675,
     TYPES_P = 676,
     UNBOUNDED = 677,
     UNCOMMITTED = 678,
     UNENCRYPTED = 679,
     UNION = 680,
     UNIQUE = 681,
     UNKNOWN = 682,
     UNLISTEN = 683,
     UNLOGGED = 684,
     UNTIL = 685,
     UPDATE = 686,
     USER = 687,
     USING = 688,
     VACUUM = 689,
     VALID = 690,
     VALIDATE = 691,
     VALIDATOR = 692,
     VALUE_P = 693,
     VALUES = 694,
     VARCHAR = 695,
     VARIADIC = 696,
     VARYING = 697,
     VERBOSE = 698,
     VERSION_P = 699,
     VIEW = 700,
     VIEWS = 701,
     VOLATILE = 702,
     WHEN = 703,
     WHERE = 704,
     WHITESPACE_P = 705,
     WINDOW = 706,
     WITH = 707,
     WITHIN = 708,
     WITHOUT = 709,
     WORK = 710,
     WRAPPER = 711,
     WRITE_P = 712,
     XML_P = 713,
     XMLATTRIBUTES = 714,
     XMLCONCAT = 715,
     XMLELEMENT = 716,
     XMLEXISTS = 717,
     XMLFOREST = 718,
     XMLNAMESPACES = 719,
     XMLPARSE = 720,
     XMLPI = 721,
     XMLROOT = 722,
     XMLSERIALIZE = 723,
     XMLTABLE = 724,
     YEAR_P = 725,
     YEARS_P = 726,
     YES_P = 727,
     ZONE = 728,
     NOT_LA = 729,
     NULLS_LA = 730,
     WITH_LA = 731,
     POSTFIXOP = 732,
     UMINUS = 733
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define COMPRESSION 336
#define CONCURRENTLY 337
#define CONFIGURATION 338
#define CONFLICT 339
#define CONNECTION 340
#define CONSTRAINT 341
#define CONSTRAINTS 342
#define CONTENT_P 343
#define CONTINUE_P 344
#define CONVERSION_P 345
#define COPY 346
#define COST 347
#define CREATE_P 348
#define CROSS 349
#define CSV 350
#define CUBE 351
#define CURRENT_P 352
#define CURRENT_CATALOG 353
#define CURRENT_DATE 354
#define CURRENT_ROLE 355
#define CURRENT_SCHEMA 356
#define CURRENT_TIME 357
#define CURRENT_TIMESTAMP 358
#define CURRENT_USER 359
#define CURSOR 360
#define CYCLE 361
#define DATA_P 362
#define DATABASE 363
#define DAY_P 364
#define DAYS_P 365
#define DEALLOCATE 366
#define DEC 367
#define DECIMAL_P 368
#define DECLARE 369
#define DEFAULT 370
#define DEFAULTS 371
#define DEFERRABLE 372
#define DEFERRED 373
#define DEFINER 374
#define DELETE_P 375
#define DELIMITER 376
#define DELIMITERS 377
#define DEPENDS 378
#define DESC_P 379
#define DESCRIBE 380
#define DETACH 381
#define DICTIONARY 382
#define DISABLE_P 383
#define DISCARD 384
#define DISTINCT 385
#define DO 386
#define DOCUMENT_P 387
#define DOMAIN_P 388
#define DOUBLE_P 389
#define DROP 390
#define EACH 391
#define ELSE 392
#define ENABLE_P 393
#define ENCODING 394
#define ENCRYPTED 395
#define END_P 396
#define ENUM_P 397
#define ESCAPE 398
#define EVENT 399
#define EXCEPT 400
#define EXCLUDE 401
#define EXCLUDING 402
#define EXCLUSIVE 403
#define EXECUTE 404
#define EXISTS 405
#define EXPLAIN 406
#define EXPORT_P 407
#define EXTENSION 408
#define EXTERNAL 409
#define EXTRACT 410
#define FALSE_P 411
#define FAMILY 412
#define FETCH 413
#define FILTER 414
#define FIRST_P 415
#define FLOAT_P 416
#define FOLLOWING 417
#define FOR 418
#define FORCE 419
#define FOREIGN 420
#define FORWARD 421
#define FREEZE 422
#define FROM 423
#define FULL 424
#define FUNCTION 425
#define FUNCTIONS 426
#define GENERATED 427
#define GLOB 428
#define GLOBAL 429
#define GRANT 430
#define GRANTED 431
#define GROUP_P 432
#define GROUPING 433
#define GROUPING_ID 434
#define HANDLER 435
#define HAVING 436
#define HEADER_P 437
#define HOLD 438
#define HOUR_P 439
#define HOURS_P 440
#define IDENTITY_P 441
#define IF_P 442
#define ILIKE 443
#define IMMEDIATE 444
#define IMMUTABLE 445
#define IMPLICIT_P 446
#define IMPORT_P 447
#define IN_P 448
#define INCLUDING 449
#define INCREMENT 450
#define INDEX 451
#define INDEXES 452
#define INHERIT 453
#define INHERITS 454
#define INITIALLY 455
#define INLINE_P 456
#define INNER_P 457
#define INOUT 458
#define INPUT_P 459
#define INSENSITIVE 460
#define INSERT 461
#define INSTALL 462
#define INSTEAD 463
#define INT_P 464
#define INTEGER 465
#define INTERSECT 466
#define INTERVAL 467
#define INTO 468
#define INVOKER 469
#define IS 470
#define ISNULL 471
#define ISOLATION 472
#define JOIN 473
#define KEY 474
#define LABEL 475
#define LANGUAGE 476
#define LARGE_P 477
#define LAST_P 478
#define LATERAL_P 479
#define LEADING 480
#define LEAKPROOF 481
#define LEFT 482
#define LEVEL 483
#define LIKE 484
#define LIMIT 485
#define LISTEN 486
#define LOAD 487
#define LOCAL 488
#define LOCALTIME 489
#define LOCALTIMESTAMP 490
#define LOCATION 491
#define LOCK_P 492
#define LOCKED 493
#define LOGGED 494
#define MACRO 495
#define MAP 496
#define MAPPING 497
#define MATCH 498
#define MATERIALIZED 499
#define MAXVALUE 500
#define METHOD 501
#define MICROSECOND_P 502
#define MICROSECONDS_P 503
#define MILLISECOND_P 504
#define MILLISECONDS_P 505
#define MINUTE_P 506
#define MINUTES_P 507
#define MINVALUE 508
#define MODE 509
#define MONTH_P 510
#define MONTHS_P 511
#define MOVE 512
#define NAME_P 513
#define NAMES 514
#define NATIONAL 515
#define NATURAL 516
#define NCHAR 517
#define NEW 518
#define NEXT 519
#define NO 520
#define NONE 521
#define NOT 522
#define NOTHING 523
#define NOTIFY 524
#define NOTNULL 525
#define NOWAIT 526
#define NULL_P 527
#define NULLIF 528
#define NULLS_P 529
#define NUMERIC 530
#define OBJECT_P 531
#define OF 532
#define OFF 533
#define OFFSET 534
#define OIDS 535
#define OLD 536
#define ON 537
#define ONLY 538
#define OPERATOR 539
#define OPTION 540
#define OPTIONS 541
#define OR 542
#define ORDER 543
#define ORDINALITY 544
#define OUT_P 545
#define OUTER_P 546
#define OVER 547
#define OVERLAPS 548
#define OVERLAY 549
#define OVERRIDING 550
#define OWNED 551
#define OWNER 552
#define PARALLEL 553
#define PARSER 554
#define PARTIAL 555
#define PARTITION 556
#define PASSING 557
#define PASSWORD 558
#define PERCENT 559
#define PLACING 560
#define PLANS 561
#define POLICY 562
#define POSITION 563
#define PRAGMA_P 564
#define PRECEDING 565
#define PRECISION 566
#define PREPARE 567
#define PREPARED 568
#define PRESERVE 569
#define PRIMARY 570
#define PRIOR 571
#define PRIVILEGES 572
#define PROCEDURAL 573
#define PROCEDURE 574
#define PROGRAM 575
#define PUBLICATION 576
#define QUOTE 577
#define RANGE 578
#define READ_P 579
#define REAL 580
#define REASSIGN 581
#define RECHECK 582
#define RECURSIVE 583
#define REF 584
#define REFERENCES 585
#define REFERENCING 586
#define REFRESH 587
#define REINDEX 588
#define RELATIVE_P 589
#define RELEASE 590
#define RENAME 591
#define REPEATABLE 592
#define REPLACE 593
#define REPLICA 594
#define RESET 595
#define RESTART 596
#define RESTRICT 597
#define RETURNING 598
#define RETURNS 599
#define REVOKE 600
#define RIGHT 601
#define ROLE 602
#define ROLLBACK 603
#define ROLLUP 604
#define ROW 605
#define ROWS 606
#define RULE 607
#define SAMPLE 608
#define SAVEPOINT 609
#define SCHEMA 610
#define SCHEMAS 611
#define SCROLL 612
#define SEARCH 613
#define SECOND_P 614
#define SECONDS_P 615
#define SECURITY 616
#define SELECT 617
#define SEQUENCE 618
#define SEQUENCES 619
#define SERIALIZABLE 620
#define SERVER 621
#define SESSION 622
#define SESSION_USER 623
#define SET 624
#define SETOF 625
#define SETS 626
#define SHARE 627
#define SHOW 628
#define SIMILAR 629
#define SIMPLE 630
#define SKIP 631
#define SMALLINT 632
#define SNAPSHOT 633
#define SOME 634
#define SQL_P 635
#define STABLE 636
#define STANDALONE_P 637
#define START 638
#define STATEMENT 639
#define STATISTICS 640
#define STDIN 641
#define STDOUT 642
#define STORAGE 643
#define STRICT_P 644
#define STRIP_P 645
#define STRUCT 646
#define SUBSCRIPTION 647
#define SUBSTRING 648
#define SUMMARIZE 649
#define SYMMETRIC 650
#define SYSID 651
#define SYSTEM_P 652
#define TABLE 653
#define TABLES 654
#define TABLESAMPLE 655
#define TABLESPACE 656
#define TEMP 657
#define TEMPLATE 658
#define TEMPORARY 659
#define TEXT_P 660
#define THEN 661
#define TIME 662
#define TIMESTAMP 663
#define TO 664
#define TRAILING 665
#define TRANSACTION 666
#define TRANSFORM 667
#define TREAT 668
#define TRIGGER 669
#define TRIM 670
#define TRUE_P 671
#define TRUNCATE 672
#define TRUSTED 673
#define TRY_CAST 674
#define TYPE_P 675
#define TYPES_P 676
#define UNBOUNDED 677
#define UNCOMMITTED 678
#define UNENCRYPTED 679
#define UNION 680
#define UNIQUE 681
#define UNKNOWN 682
#define UNLISTEN 683
#define UNLOGGED 684
#define UNTIL 685
#define UPDATE 686
#define USER 687
#define USING 688
#define VACUUM 689
#define VALID 690
#define VALIDATE 691
#define VALIDATOR 692
#define VALUE_P 693
#define VALUES 694
#define VARCHAR 695
#define VARIADIC 696
#define VARYING 697
#define VERBOSE 698
#define VERSION_P 699
#define VIEW 700
#define VIEWS 701
#define VOLATILE 702
#define WHEN 703
#define WHERE 704
#define WHITESPACE_P 705
#define WINDOW 706
#define WITH 707
#define WITHIN 708
#define WITHOUT 709
#define WORK 710
#define WRAPPER 711
#define WRITE_P 712
#define XML_P 713
#define XMLATTRIBUTES 714
#define XMLCONCAT 715
#define XMLELEMENT 716
#define XMLEXISTS 717
#define XMLFOREST 718
#define XMLNAMESPACES 719
#define XMLPARSE 720
#define XMLPI 721
#define XMLROOT 722
#define XMLSERIALIZE 723
#define XMLTABLE 724
#define YEAR_P 725
#define YEARS_P 726
#define YES_P 727
#define ZONE 728
#define NOT_LA 729
#define NULLS_LA 730
#define WITH_LA 731
#define POSTFIXOP 732
#define UMINUS 733




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1269 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1294 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  592
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   51420

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  500
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  382
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1791
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2958

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   733

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   497,     2,   485,     2,     2,
     490,   491,   483,   481,   494,   482,   492,   484,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   499,   493,
     477,   479,   478,   498,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   488,     2,   489,   486,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   495,     2,   496,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   480,   487
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     352,   356,   359,   363,   372,   374,   375,   377,   381,   388,
     395,   404,   411,   420,   427,   436,   443,   452,   461,   472,
     481,   492,   494,   495,   503,   505,   510,   515,   523,   526,
     528,   532,   537,   541,   542,   544,   545,   548,   552,   558,
     567,   573,   574,   580,   586,   594,   597,   598,   600,   602,
     604,   608,   611,   612,   614,   615,   617,   621,   623,   627,
     629,   633,   636,   639,   644,   650,   656,   665,   667,   668,
     672,   682,   695,   699,   700,   705,   712,   714,   717,   719,
     721,   722,   724,   727,   730,   732,   735,   738,   740,   743,
     747,   750,   753,   756,   759,   763,   767,   771,   773,   777,
     779,   780,   782,   785,   788,   791,   794,   797,   800,   803,
     806,   808,   810,   811,   821,   834,   846,   847,   850,   852,
     854,   856,   858,   860,   862,   866,   867,   869,   872,   874,
     876,   879,   882,   886,   888,   890,   893,   896,   898,   901,
     905,   911,   915,   918,   924,   930,   933,   937,   939,   941,
     944,   947,   948,   953,   954,   958,   963,   968,   969,   973,
     976,   977,   981,   983,   985,   987,   989,   991,   993,   995,
     997,   999,  1001,  1005,  1009,  1011,  1014,  1017,  1020,  1023,
    1026,  1029,  1030,  1034,  1038,  1042,  1043,  1045,  1048,  1050,
    1053,  1056,  1059,  1062,  1067,  1069,  1073,  1075,  1079,  1081,
    1083,  1085,  1087,  1091,  1093,  1096,  1097,  1099,  1100,  1102,
    1106,  1107,  1110,  1111,  1115,  1119,  1121,  1127,  1131,  1133,
    1137,  1139,  1144,  1150,  1156,  1163,  1167,  1175,  1180,  1192,
    1194,  1198,  1201,  1204,  1207,  1208,  1212,  1214,  1216,  1219,
    1222,  1225,  1228,  1230,  1231,  1233,  1236,  1243,  1248,  1255,
    1260,  1267,  1276,  1281,  1288,  1290,  1292,  1294,  1296,  1298,
    1301,  1303,  1306,  1308,  1310,  1312,  1316,  1320,  1324,  1328,
    1331,  1334,  1336,  1340,  1342,  1344,  1346,  1348,  1352,  1354,
    1356,  1357,  1359,  1361,  1363,  1365,  1369,  1376,  1378,  1380,
    1383,  1387,  1396,  1408,  1418,  1420,  1422,  1426,  1427,  1429,
    1433,  1435,  1436,  1438,  1439,  1441,  1442,  1444,  1448,  1450,
    1452,  1454,  1458,  1459,  1462,  1465,  1466,  1469,  1470,  1472,
    1473,  1475,  1477,  1479,  1483,  1487,  1489,  1491,  1495,  1499,
    1503,  1507,  1512,  1516,  1519,  1521,  1523,  1525,  1527,  1529,
    1533,  1535,  1537,  1541,  1545,  1547,  1550,  1555,  1560,  1563,
    1567,  1573,  1579,  1581,  1583,  1594,  1605,  1607,  1610,  1615,
    1620,  1625,  1628,  1631,  1635,  1637,  1641,  1648,  1651,  1652,
    1656,  1660,  1665,  1670,  1675,  1680,  1684,  1687,  1689,  1691,
    1692,  1694,  1696,  1697,  1699,  1705,  1707,  1708,  1710,  1711,
    1715,  1717,  1721,  1726,  1730,  1732,  1734,  1735,  1738,  1741,
    1742,  1745,  1748,  1750,  1752,  1754,  1755,  1758,  1763,  1769,
    1774,  1777,  1781,  1784,  1787,  1790,  1793,  1795,  1798,  1802,
    1803,  1805,  1806,  1812,  1814,  1819,  1826,  1829,  1831,  1832,
    1837,  1838,  1840,  1842,  1844,  1846,  1849,  1852,  1854,  1856,
    1858,  1860,  1862,  1864,  1868,  1869,  1871,  1875,  1877,  1879,
    1881,  1883,  1885,  1888,  1893,  1898,  1904,  1906,  1908,  1911,
    1912,  1914,  1918,  1920,  1921,  1923,  1926,  1930,  1933,  1938,
    1941,  1945,  1948,  1949,  1951,  1954,  1955,  1960,  1966,  1969,
    1970,  1972,  1976,  1980,  1984,  1988,  1992,  1996,  1998,  2003,
    2007,  2012,  2018,  2023,  2029,  2034,  2040,  2043,  2048,  2050,
    2052,  2053,  2055,  2060,  2066,  2071,  2072,  2075,  2078,  2081,
    2083,  2085,  2086,  2091,  2094,  2096,  2099,  2102,  2107,  2110,
    2117,  2120,  2122,  2126,  2131,  2132,  2135,  2136,  2139,  2140,
    2142,  2146,  2150,  2153,  2154,  2157,  2162,  2164,  2166,  2169,
    2173,  2179,  2186,  2189,  2193,  2199,  2205,  2209,  2214,  2215,
    2217,  2219,  2221,  2223,  2225,  2228,  2233,  2235,  2237,  2239,
    2241,  2244,  2248,  2249,  2251,  2253,  2255,  2257,  2259,  2262,
    2265,  2268,  2271,  2274,  2276,  2280,  2281,  2283,  2285,  2287,
    2289,  2295,  2298,  2300,  2302,  2304,  2306,  2311,  2313,  2316,
    2319,  2321,  2325,  2329,  2332,  2334,  2335,  2341,  2344,  2350,
    2353,  2355,  2359,  2363,  2364,  2366,  2368,  2370,  2372,  2374,
    2376,  2378,  2380,  2382,  2384,  2386,  2388,  2390,  2392,  2394,
    2396,  2398,  2400,  2402,  2404,  2406,  2408,  2410,  2412,  2416,
    2420,  2424,  2428,  2432,  2436,  2440,  2441,  2443,  2447,  2451,
    2457,  2460,  2463,  2467,  2471,  2475,  2479,  2483,  2487,  2491,
    2495,  2499,  2503,  2507,  2511,  2515,  2518,  2521,  2525,  2529,
    2532,  2535,  2539,  2543,  2549,  2554,  2561,  2565,  2571,  2576,
    2583,  2588,  2595,  2601,  2609,  2613,  2616,  2621,  2625,  2628,
    2630,  2634,  2638,  2642,  2646,  2650,  2654,  2659,  2663,  2668,
    2672,  2677,  2683,  2690,  2697,  2705,  2712,  2720,  2727,  2735,
    2739,  2744,  2749,  2756,  2758,  2763,  2765,  2769,  2772,  2775,
    2779,  2783,  2787,  2791,  2795,  2799,  2803,  2807,  2811,  2815,
    2819,  2823,  2827,  2830,  2833,  2839,  2846,  2853,  2861,  2863,
    2865,  2868,  2871,  2874,  2879,  2881,  2884,  2886,  2889,  2892,
    2897,  2901,  2907,  2914,  2923,  2930,  2937,  2942,  2947,  2949,
    2951,  2953,  2959,  2961,  2963,  2968,  2970,  2975,  2977,  2982,
    2984,  2989,  2991,  2993,  2995,  2997,  2999,  3001,  3008,  3015,
    3020,  3025,  3030,  3035,  3042,  3048,  3054,  3060,  3065,  3072,
    3077,  3083,  3084,  3090,  3091,  3094,  3095,  3097,  3101,  3105,
    3108,  3111,  3112,  3119,  3121,  3122,  3126,  3127,  3130,  3133,
    3134,  3136,  3141,  3144,  3147,  3150,  3153,  3156,  3161,  3165,
    3167,  3173,  3177,  3179,  3183,  3185,  3187,  3189,  3191,  3193,
    3195,  3197,  3199,  3201,  3203,  3205,  3207,  3209,  3211,  3213,
    3215,  3217,  3219,  3224,  3226,  3231,  3233,  3238,  3240,  3243,
    3245,  3248,  3250,  3253,  3255,  3259,  3261,  3265,  3267,  3268,
    3270,  3274,  3276,  3280,  3284,  3286,  3290,  3294,  3295,  3297,
    3299,  3301,  3303,  3305,  3307,  3309,  3311,  3313,  3315,  3320,
    3324,  3327,  3331,  3332,  3336,  3340,  3343,  3346,  3348,  3349,
    3352,  3355,  3359,  3362,  3364,  3366,  3370,  3376,  3378,  3381,
    3386,  3389,  3390,  3392,  3393,  3395,  3398,  3401,  3405,  3411,
    3413,  3414,  3416,  3419,  3420,  3423,  3425,  3426,  3428,  3429,
    3431,  3435,  3439,  3442,  3444,  3448,  3454,  3459,  3462,  3464,
    3465,  3469,  3471,  3475,  3480,  3483,  3484,  3486,  3490,  3492,
    3495,  3497,  3501,  3503,  3505,  3507,  3510,  3512,  3514,  3517,
    3519,  3521,  3524,  3531,  3534,  3540,  3544,  3548,  3550,  3552,
    3554,  3556,  3558,  3560,  3562,  3564,  3566,  3568,  3570,  3572,
    3574,  3576,  3578,  3580,  3582,  3584,  3586,  3588,  3591,  3594,
    3598,  3602,  3603,  3605,  3607,  3609,  3611,  3613,  3615,  3617,
    3623,  3627,  3628,  3630,  3632,  3634,  3636,  3641,  3649,  3652,
    3653,  3655,  3657,  3659,  3661,  3675,  3692,  3694,  3697,  3698,
    3700,  3701,  3703,  3704,  3707,  3708,  3710,  3711,  3718,  3727,
    3734,  3743,  3750,  3759,  3762,  3764,  3769,  3773,  3776,  3781,
    3785,  3791,  3793,  3794,  3796,  3798,  3799,  3801,  3803,  3805,
    3807,  3809,  3811,  3813,  3815,  3817,  3819,  3821,  3825,  3827,
    3829,  3831,  3833,  3835,  3837,  3840,  3842,  3844,  3847,  3851,
    3855,  3859,  3861,  3865,  3869,  3872,  3876,  3880,  3884,  3888,
    3890,  3892,  3894,  3896,  3900,  3906,  3908,  3910,  3912,  3914,
    3918,  3921,  3924,  3926,  3931,  3937,  3943,  3948,  3955,  3957,
    3959,  3961,  3963,  3965,  3967,  3968,  3970,  3974,  3976,  3977,
    3985,  3987,  3990,  3994,  3997,  3998,  4001,  4002,  4005,  4010,
    4013,  4015,  4017,  4019,  4022,  4026,  4029,  4032,  4035,  4038,
    4042,  4047,  4050,  4052,  4054,  4056,  4060,  4063,  4073,  4085,
    4098,  4113,  4117,  4122,  4127,  4128,  4136,  4147,  4150,  4154,
    4155,  4160,  4162,  4164,  4166,  4168,  4170,  4172,  4174,  4176,
    4178,  4180,  4182,  4184,  4186,  4188,  4190,  4192,  4194,  4196,
    4198,  4200,  4202,  4204,  4206,  4208,  4210,  4212,  4214,  4216,
    4218,  4220,  4222,  4224,  4226,  4228,  4230,  4232,  4234,  4236,
    4238,  4240,  4242,  4244,  4246,  4248,  4250,  4252,  4254,  4256,
    4258,  4260,  4262,  4264,  4266,  4268,  4270,  4272,  4274,  4276,
    4278,  4280,  4282,  4284,  4286,  4288,  4290,  4292,  4294,  4296,
    4298,  4300,  4302,  4304,  4306,  4308,  4310,  4312,  4314,  4316,
    4318,  4320,  4322,  4324,  4326,  4328,  4330,  4332,  4334,  4336,
    4338,  4340,  4342,  4344,  4346,  4348,  4350,  4352,  4354,  4356,
    4358,  4360,  4362,  4364,  4366,  4368,  4370,  4372,  4374,  4376,
    4378,  4380,  4382,  4384,  4386,  4388,  4390,  4392,  4394,  4396,
    4398,  4400,  4402,  4404,  4406,  4408,  4410,  4412,  4414,  4416,
    4418,  4420,  4422,  4424,  4426,  4428,  4430,  4432,  4434,  4436,
    4438,  4440,  4442,  4444,  4446,  4448,  4450,  4452,  4454,  4456,
    4458,  4460,  4462,  4464,  4466,  4468,  4470,  4472,  4474,  4476,
    4478,  4480,  4482,  4484,  4486,  4488,  4490,  4492,  4494,  4496,
    4498,  4500,  4502,  4504,  4506,  4508,  4510,  4512,  4514,  4516,
    4518,  4520,  4522,  4524,  4526,  4528,  4530,  4532,  4534,  4536,
    4538,  4540,  4542,  4544,  4546,  4548,  4550,  4552,  4554,  4556,
    4558,  4560,  4562,  4564,  4566,  4568,  4570,  4572,  4574,  4576,
    4578,  4580,  4582,  4584,  4586,  4588,  4590,  4592,  4594,  4596,
    4598,  4600,  4602,  4604,  4606,  4608,  4610,  4612,  4614,  4616,
    4618,  4620,  4622,  4624,  4626,  4628,  4630,  4632,  4634,  4636,
    4638,  4640,  4642,  4644,  4646,  4648,  4650,  4652,  4654,  4656,
    4658,  4660,  4662,  4664,  4666,  4668,  4670,  4672,  4674,  4676,
    4678,  4680,  4682,  4684,  4686,  4688,  4690,  4692,  4694,  4696,
    4698,  4700,  4702,  4704,  4706,  4708,  4710,  4712,  4714,  4716,
    4718,  4720,  4722,  4724,  4726,  4728,  4730,  4732,  4734,  4736,
    4738,  4740,  4742,  4744,  4746,  4748,  4750,  4752,  4754,  4756,
    4758,  4760,  4762,  4764,  4766,  4768,  4770,  4772,  4774,  4776,
    4778,  4780,  4782,  4784,  4786,  4788,  4790,  4792,  4794,  4796,
    4798,  4800,  4802,  4804,  4806,  4808,  4810,  4812,  4814,  4816,
    4818,  4820,  4822,  4824,  4826,  4828,  4830,  4832,  4834,  4836,
    4838,  4840,  4842,  4844,  4846,  4848,  4850,  4852,  4854,  4856,
    4858,  4860,  4862,  4864,  4866,  4868,  4870,  4872,  4874,  4876,
    4878,  4880,  4882,  4884,  4886,  4888,  4890,  4892,  4894,  4896,
    4898,  4900,  4902,  4904,  4906,  4908,  4910,  4912,  4914,  4916,
    4918,  4920,  4922,  4924,  4926,  4928,  4930,  4932,  4934,  4936,
    4938,  4940,  4942,  4944,  4946,  4948,  4950,  4952,  4954,  4956,
    4958,  4960,  4962,  4964,  4966,  4968,  4970,  4972,  4974,  4976,
    4978,  4980,  4982,  4984,  4986,  4988,  4990,  4992,  4994,  4996,
    4998,  5000,  5002,  5004,  5006,  5008,  5010,  5012,  5014,  5016,
    5018,  5020,  5022,  5024,  5026,  5028,  5030,  5032,  5034,  5036,
    5038,  5040,  5042,  5044,  5046,  5048,  5050,  5052,  5054,  5056,
    5058,  5060,  5062,  5064,  5066,  5068,  5070,  5072,  5074,  5076,
    5078,  5080,  5082,  5084,  5086,  5088,  5090,  5092,  5094,  5096,
    5098,  5100,  5102,  5104,  5106,  5108,  5110,  5112,  5114,  5116,
    5118,  5120,  5122,  5124,  5126,  5128,  5130,  5132,  5134,  5136,
    5138,  5140,  5142,  5144,  5146,  5148,  5150,  5152,  5154,  5156,
    5158,  5160,  5162,  5164,  5166,  5168,  5170,  5172,  5174,  5176,
    5178,  5180,  5182,  5184,  5186,  5188,  5190,  5192,  5194,  5196,
    5198,  5200,  5202,  5204,  5206,  5208,  5210,  5212,  5214,  5216,
    5218,  5220,  5222,  5224,  5226,  5228,  5230,  5232,  5234,  5236,
    5238,  5240,  5242,  5244,  5246,  5248,  5250,  5252,  5254,  5256,
    5258,  5260,  5262,  5264,  5266,  5268,  5270,  5272,  5274,  5276,
    5278,  5280
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     501,     0,    -1,   502,    -1,   502,   493,   503,    -1,   503,
      -1,   830,    -1,   544,    -1,   504,    -1,   862,    -1,   869,
      -1,   831,    -1,   610,    -1,   872,    -1,   516,    -1,   606,
      -1,   820,    -1,   540,    -1,   553,    -1,   515,    -1,   858,
      -1,   599,    -1,   542,    -1,   834,    -1,   832,    -1,   833,
      -1,   823,    -1,   521,    -1,   851,    -1,   539,    -1,   817,
      -1,   519,    -1,   627,    -1,   551,    -1,   609,    -1,   853,
      -1,   863,    -1,   845,    -1,   866,    -1,   870,    -1,    -1,
      29,   398,   691,   512,    -1,    29,   398,   187,   150,   691,
     512,    -1,    29,   196,   798,   512,    -1,    29,   196,   187,
     150,   798,   512,    -1,    29,   363,   798,   512,    -1,    29,
     363,   187,   150,   798,   512,    -1,    29,   445,   798,   512,
      -1,    29,   445,   187,   150,   798,   512,    -1,   507,    -1,
     505,   507,    -1,   369,   115,   733,    -1,   135,   115,    -1,
     341,    -1,   341,   546,   547,    -1,   369,   548,    -1,   369,
     172,   598,    -1,   511,    -1,   508,   494,   511,    -1,    23,
     578,    -1,    23,   187,   267,   150,   578,    -1,    23,    75,
     578,    -1,    23,    75,   187,   267,   150,   578,    -1,    29,
     520,   806,   506,    -1,    29,   520,   806,   135,   267,   272,
      -1,    29,   520,   806,   369,   267,   272,    -1,    29,   520,
     806,   369,   385,   550,    -1,    29,   520,   806,   369,   566,
      -1,    29,   520,   806,   340,   566,    -1,    29,   520,   806,
     369,   388,   806,    -1,    29,   520,   806,    23,   172,   598,
      36,   186,   556,    -1,    29,   520,   806,   505,    -1,    29,
     520,   806,   135,   186,    -1,    29,   520,   806,   135,   186,
     187,   150,    -1,   135,   520,   187,   150,   806,   603,    -1,
     135,   520,   806,   603,    -1,    29,   520,   806,   514,   420,
     703,   700,   510,    -1,    29,   520,   806,   513,    -1,    23,
     568,    -1,    29,    86,   800,   554,    -1,   436,    86,   800,
      -1,   135,    86,   187,   150,   800,   603,    -1,   135,    86,
     800,   603,    -1,   369,   239,    -1,   369,   429,    -1,   369,
     566,    -1,   340,   566,    -1,   513,    -1,   433,   733,    -1,
      -1,   561,    -1,   369,   561,    -1,    23,   561,    -1,   135,
     576,    -1,   509,    -1,   512,   494,   509,    -1,   286,   490,
     508,   491,    -1,   369,   107,    -1,   369,    -1,    -1,   111,
     800,    -1,   111,   312,   800,    -1,   111,    27,    -1,   111,
     312,    27,    -1,    93,   420,   811,    36,   142,   490,   517,
     491,    -1,   518,    -1,    -1,   805,    -1,   518,   494,   805,
      -1,    29,   355,   800,   336,   409,   800,    -1,    29,   398,
     691,   336,   409,   800,    -1,    29,   398,   187,   150,   691,
     336,   409,   800,    -1,    29,   363,   798,   336,   409,   800,
      -1,    29,   363,   187,   150,   798,   336,   409,   800,    -1,
      29,   445,   798,   336,   409,   800,    -1,    29,   445,   187,
     150,   798,   336,   409,   800,    -1,    29,   196,   798,   336,
     409,   800,    -1,    29,   196,   187,   150,   798,   336,   409,
     800,    -1,    29,   398,   691,   336,   520,   800,   409,   800,
      -1,    29,   398,   187,   150,   691,   336,   520,   800,   409,
     800,    -1,    29,   398,   691,   336,    86,   800,   409,   800,
      -1,    29,   398,   187,   150,   691,   336,    86,   800,   409,
     800,    -1,    75,    -1,    -1,   525,   206,   213,   523,   522,
     528,   530,    -1,   627,    -1,   295,   531,   438,   627,    -1,
     490,   535,   491,   627,    -1,   490,   535,   491,   295,   531,
     438,   627,    -1,   115,   439,    -1,   798,    -1,   798,    36,
     806,    -1,   490,   537,   491,   697,    -1,   282,    86,   800,
      -1,    -1,   632,    -1,    -1,   806,   787,    -1,   538,   479,
     733,    -1,   490,   532,   491,   479,   733,    -1,   282,    84,
     524,   131,   431,   369,   536,   697,    -1,   282,    84,   524,
     131,   268,    -1,    -1,   806,   533,   534,   645,   646,    -1,
     738,   533,   534,   645,   646,    -1,   490,   733,   491,   533,
     534,   645,   646,    -1,   343,   790,    -1,    -1,   432,    -1,
     397,    -1,   538,    -1,   532,   494,   538,    -1,    73,   811,
      -1,    -1,   811,    -1,    -1,   526,    -1,   535,   494,   526,
      -1,   527,    -1,   536,   494,   527,    -1,   529,    -1,   537,
     494,   529,    -1,   806,   787,    -1,   309,   806,    -1,   309,
     806,   479,   850,    -1,   309,   806,   490,   765,   491,    -1,
      93,   597,   363,   798,   541,    -1,    93,   597,   363,   187,
     267,   150,   798,   541,    -1,   545,    -1,    -1,   149,   800,
     543,    -1,    93,   597,   398,   874,    36,   149,   800,   543,
     873,    -1,    93,   597,   398,   187,   267,   150,   874,    36,
     149,   800,   543,   873,    -1,   490,   763,   491,    -1,    -1,
      29,   363,   798,   545,    -1,    29,   363,   187,   150,   798,
     545,    -1,   548,    -1,   545,   548,    -1,   452,    -1,   476,
      -1,    -1,     4,    -1,   481,     4,    -1,   482,     4,    -1,
     550,    -1,    36,   705,    -1,    55,   547,    -1,   106,    -1,
     265,   106,    -1,   195,   549,   547,    -1,   245,   547,    -1,
     253,   547,    -1,   265,   245,    -1,   265,   253,    -1,   296,
      54,   811,    -1,   363,   258,   811,    -1,   383,   546,   547,
      -1,   341,    -1,   341,   546,   547,    -1,    54,    -1,    -1,
     804,    -1,   481,   804,    -1,   482,   804,    -1,    19,   552,
      -1,    47,   552,    -1,   383,   552,    -1,    79,   552,    -1,
     141,   552,    -1,   348,   552,    -1,   455,    -1,   411,    -1,
      -1,    93,   597,   398,   798,   490,   585,   491,   573,   565,
      -1,    93,   597,   398,   187,   267,   150,   798,   490,   585,
     491,   573,   565,    -1,    93,   287,   338,   597,   398,   798,
     490,   585,   491,   573,   565,    -1,    -1,   554,   577,    -1,
     592,    -1,   881,    -1,   760,    -1,   547,    -1,   805,    -1,
     266,    -1,   490,   545,   491,    -1,    -1,   805,    -1,   265,
      22,    -1,   342,    -1,    58,    -1,   369,   272,    -1,   369,
     115,    -1,    86,   800,   560,    -1,   560,    -1,   572,    -1,
      73,   811,    -1,   267,   272,    -1,   272,    -1,   426,   584,
      -1,   315,   219,   584,    -1,    67,   490,   733,   491,   567,
      -1,   433,    81,   800,    -1,   115,   734,    -1,   172,   598,
      36,   186,   556,    -1,   330,   798,   587,   595,   563,    -1,
     576,   557,    -1,   282,   431,   558,    -1,   562,    -1,   589,
      -1,   562,   589,    -1,   589,   562,    -1,    -1,   286,   490,
     579,   491,    -1,    -1,   282,    79,   135,    -1,   282,    79,
     120,   351,    -1,   282,    79,   314,   351,    -1,    -1,   490,
     570,   491,    -1,   265,   198,    -1,    -1,    86,   800,   593,
      -1,   593,    -1,    78,    -1,    87,    -1,   116,    -1,   186,
      -1,   197,    -1,   385,    -1,   388,    -1,    27,    -1,   590,
      -1,   570,   494,   590,    -1,   433,   196,   581,    -1,   117,
      -1,   267,   117,    -1,   200,   118,    -1,   200,   189,    -1,
     452,   566,    -1,   452,   280,    -1,   454,   280,    -1,    -1,
     490,   580,   491,    -1,   575,   194,   569,    -1,   575,   147,
     569,    -1,    -1,   815,    -1,   267,   117,    -1,   117,    -1,
     200,   189,    -1,   200,   118,    -1,   267,   435,    -1,   265,
     198,    -1,   806,   703,   564,   588,    -1,   561,    -1,   579,
     494,   561,    -1,   583,    -1,   580,   494,   583,    -1,   806,
      -1,   578,    -1,   596,    -1,   568,    -1,   815,   479,   555,
      -1,   815,    -1,   452,   574,    -1,    -1,   594,    -1,    -1,
     806,    -1,   490,   591,   491,    -1,    -1,   588,   559,    -1,
      -1,   282,   120,   558,    -1,   815,   479,   555,    -1,   815,
      -1,   815,   492,   815,   479,   555,    -1,   815,   492,   815,
      -1,   586,    -1,   591,   494,   586,    -1,   703,    -1,   808,
     812,   485,   420,    -1,   370,   808,   812,   485,   420,    -1,
      67,   490,   733,   491,   554,    -1,   426,   490,   591,   491,
     584,   554,    -1,   426,   571,   554,    -1,   315,   219,   490,
     591,   491,   584,   554,    -1,   315,   219,   571,   554,    -1,
     165,   219,   490,   591,   491,   330,   798,   587,   595,   563,
     554,    -1,   582,    -1,   594,   494,   582,    -1,   243,   169,
      -1,   243,   300,    -1,   243,   375,    -1,    -1,   229,   798,
     575,    -1,   404,    -1,   402,    -1,   233,   404,    -1,   233,
     402,    -1,   174,   404,    -1,   174,   402,    -1,   429,    -1,
      -1,    30,    -1,    54,   115,    -1,   135,   600,   187,   150,
     602,   603,    -1,   135,   600,   602,   603,    -1,   135,   601,
     187,   150,   799,   603,    -1,   135,   601,   799,   603,    -1,
     135,   604,   800,   282,   811,   603,    -1,   135,   604,   187,
     150,   800,   282,   811,   603,    -1,   135,   420,   605,   603,
      -1,   135,   420,   187,   150,   605,   603,    -1,   398,    -1,
     363,    -1,   170,    -1,   240,    -1,   445,    -1,   244,   445,
      -1,   196,    -1,   165,   398,    -1,    74,    -1,    90,    -1,
     385,    -1,   405,   358,   299,    -1,   405,   358,   127,    -1,
     405,   358,   403,    -1,   405,   358,    83,    -1,    21,   246,
      -1,   144,   414,    -1,   153,    -1,   165,   107,   456,    -1,
     321,    -1,   355,    -1,   366,    -1,   811,    -1,   602,   494,
     811,    -1,    58,    -1,   342,    -1,    -1,   307,    -1,   352,
      -1,   414,    -1,   703,    -1,   605,   494,   703,    -1,    93,
     607,   798,   608,    36,   733,    -1,   170,    -1,   240,    -1,
     490,   491,    -1,   490,   765,   491,    -1,   525,   431,   859,
     369,   536,   681,   860,   530,    -1,    91,   622,   798,   587,
     620,   611,   616,   625,   612,   546,   617,    -1,    91,   490,
     819,   491,   409,   616,   625,   546,   617,    -1,   168,    -1,
     409,    -1,   614,   122,   805,    -1,    -1,   624,    -1,   613,
     494,   624,    -1,   433,    -1,    -1,    36,    -1,    -1,   320,
      -1,    -1,   621,    -1,   490,   626,   491,    -1,   842,    -1,
     547,    -1,   483,    -1,   490,   613,   491,    -1,    -1,   815,
     618,    -1,   452,   280,    -1,    -1,   621,   623,    -1,    -1,
      50,    -1,    -1,    50,    -1,   280,    -1,   167,    -1,   121,
     615,   805,    -1,   272,   615,   805,    -1,    95,    -1,   182,
      -1,   322,   615,   805,    -1,   143,   615,   805,    -1,   164,
     322,   591,    -1,   164,   322,   483,    -1,   164,   267,   272,
     591,    -1,   164,   272,   591,    -1,   139,   805,    -1,   842,
      -1,   805,    -1,   386,    -1,   387,    -1,   619,    -1,   626,
     494,   619,    -1,   629,    -1,   628,    -1,   490,   629,   491,
      -1,   490,   628,   491,    -1,   631,    -1,   630,   642,    -1,
     630,   641,   673,   648,    -1,   630,   641,   647,   674,    -1,
     632,   630,    -1,   632,   630,   642,    -1,   632,   630,   641,
     673,   648,    -1,   632,   630,   641,   647,   674,    -1,   631,
      -1,   628,    -1,   362,   640,   789,   635,   681,   697,   664,
     672,   742,   652,    -1,   362,   639,   790,   635,   681,   697,
     664,   672,   742,   652,    -1,   680,    -1,   398,   691,    -1,
     630,   425,   638,   630,    -1,   630,   211,   638,   630,    -1,
     630,   145,   638,   630,    -1,   452,   633,    -1,   476,   633,
      -1,   452,   328,   633,    -1,   634,    -1,   633,   494,   634,
      -1,   800,   813,    36,   490,   819,   491,    -1,   213,   636,
      -1,    -1,   404,   637,   798,    -1,   402,   637,   798,    -1,
     233,   404,   637,   798,    -1,   233,   402,   637,   798,    -1,
     174,   404,   637,   798,    -1,   174,   402,   637,   798,    -1,
     429,   637,   798,    -1,   398,   798,    -1,   798,    -1,   398,
      -1,    -1,    27,    -1,   130,    -1,    -1,   130,    -1,   130,
     282,   490,   763,   491,    -1,    27,    -1,    -1,   642,    -1,
      -1,   288,    54,   643,    -1,   644,    -1,   643,   494,   644,
      -1,   733,   433,   760,   646,    -1,   733,   645,   646,    -1,
      37,    -1,   124,    -1,    -1,   475,   160,    -1,   475,   223,
      -1,    -1,   649,   650,    -1,   650,   649,    -1,   649,    -1,
     650,    -1,   647,    -1,    -1,   230,   658,    -1,   230,   658,
     494,   659,    -1,   158,   663,   660,   662,   283,    -1,   158,
     663,   662,   283,    -1,   279,   659,    -1,   279,   660,   662,
      -1,     4,   485,    -1,     9,   485,    -1,     4,   304,    -1,
       9,   304,    -1,     9,    -1,     9,   351,    -1,   433,   353,
     654,    -1,    -1,   806,    -1,    -1,   653,   490,   651,   491,
     657,    -1,   651,    -1,   651,   490,   806,   491,    -1,   651,
     490,   806,   494,     9,   491,    -1,   400,   654,    -1,   655,
      -1,    -1,   337,   490,     9,   491,    -1,    -1,   733,    -1,
      27,    -1,   733,    -1,   735,    -1,   481,   661,    -1,   482,
     661,    -1,   804,    -1,     4,    -1,   350,    -1,   351,    -1,
     160,    -1,   264,    -1,   177,    54,   665,    -1,    -1,   666,
      -1,   665,   494,   666,    -1,   733,    -1,   667,    -1,   669,
      -1,   668,    -1,   670,    -1,   490,   491,    -1,   349,   490,
     763,   491,    -1,    96,   490,   763,   491,    -1,   178,   371,
     490,   665,   491,    -1,   178,    -1,   179,    -1,   181,   733,
      -1,    -1,   675,    -1,   163,   324,   283,    -1,   673,    -1,
      -1,   676,    -1,   675,   676,    -1,   677,   678,   679,    -1,
     163,   431,    -1,   163,   265,   219,   431,    -1,   163,   372,
      -1,   163,   219,   372,    -1,   277,   797,    -1,    -1,   271,
      -1,   376,   238,    -1,    -1,   439,   490,   763,   491,    -1,
     680,   494,   490,   763,   491,    -1,   168,   682,    -1,    -1,
     683,    -1,   682,   494,   683,    -1,   691,   686,   656,    -1,
     692,   687,   656,    -1,   224,   692,   687,    -1,   628,   686,
     656,    -1,   224,   628,   686,    -1,   684,    -1,   490,   684,
     491,   685,    -1,   490,   684,   491,    -1,   683,    94,   218,
     683,    -1,   683,   688,   218,   683,   690,    -1,   683,   218,
     683,   690,    -1,   683,   261,   688,   218,   683,    -1,   683,
     261,   218,   683,    -1,    36,   806,   490,   799,   491,    -1,
      36,   807,    -1,   806,   490,   799,   491,    -1,   806,    -1,
     685,    -1,    -1,   685,    -1,    36,   490,   698,   491,    -1,
      36,   806,   490,   698,   491,    -1,   806,   490,   698,   491,
      -1,    -1,   169,   689,    -1,   227,   689,    -1,   346,   689,
      -1,   202,    -1,   291,    -1,    -1,   433,   490,   799,   491,
      -1,   282,   733,    -1,   798,    -1,   798,   483,    -1,   283,
     798,    -1,   283,   490,   798,   491,    -1,   738,   696,    -1,
     351,   168,   490,   694,   491,   696,    -1,   738,   695,    -1,
     693,    -1,   694,   494,   693,    -1,    36,   490,   698,   491,
      -1,    -1,   476,   289,    -1,    -1,   449,   733,    -1,    -1,
     699,    -1,   698,   494,   699,    -1,   806,   703,   700,    -1,
      73,   811,    -1,    -1,   806,   703,    -1,   701,   494,   806,
     703,    -1,   350,    -1,   391,    -1,   705,   704,    -1,   370,
     705,   704,    -1,   705,    35,   488,   804,   489,    -1,   370,
     705,    35,   488,   804,   489,    -1,   705,    35,    -1,   370,
     705,    35,    -1,   702,   490,   701,   491,   704,    -1,   241,
     490,   767,   491,   704,    -1,   704,   488,   489,    -1,   704,
     488,   804,   489,    -1,    -1,   707,    -1,   709,    -1,   711,
      -1,   715,    -1,   721,    -1,   722,   732,    -1,   722,   490,
     804,   491,    -1,   709,    -1,   712,    -1,   716,    -1,   721,
      -1,   810,   708,    -1,   490,   763,   491,    -1,    -1,   209,
      -1,   210,    -1,   377,    -1,    49,    -1,   325,    -1,   161,
     710,    -1,   134,   311,    -1,   113,   708,    -1,   112,   708,
      -1,   275,   708,    -1,    52,    -1,   490,   804,   491,    -1,
      -1,   713,    -1,   714,    -1,   713,    -1,   714,    -1,    51,
     720,   490,   763,   491,    -1,    51,   720,    -1,   717,    -1,
     718,    -1,   717,    -1,   718,    -1,   719,   490,   804,   491,
      -1,   719,    -1,    65,   720,    -1,    64,   720,    -1,   440,
      -1,   260,    65,   720,    -1,   260,    64,   720,    -1,   262,
     720,    -1,   442,    -1,    -1,   408,   490,   804,   491,   723,
      -1,   408,   723,    -1,   407,   490,   804,   491,   723,    -1,
     407,   723,    -1,   212,    -1,   476,   407,   473,    -1,   454,
     407,   473,    -1,    -1,   470,    -1,   471,    -1,   255,    -1,
     256,    -1,   109,    -1,   110,    -1,   184,    -1,   185,    -1,
     251,    -1,   252,    -1,   359,    -1,   360,    -1,   249,    -1,
     250,    -1,   247,    -1,   248,    -1,   724,    -1,   725,    -1,
     726,    -1,   727,    -1,   728,    -1,   729,    -1,   730,    -1,
     731,    -1,   724,   409,   725,    -1,   726,   409,   727,    -1,
     726,   409,   728,    -1,   726,   409,   729,    -1,   727,   409,
     728,    -1,   727,   409,   729,    -1,   728,   409,   729,    -1,
      -1,   735,    -1,   733,    11,   703,    -1,   733,    73,   811,
      -1,   733,    41,   407,   473,   733,    -1,   481,   733,    -1,
     482,   733,    -1,   733,   481,   733,    -1,   733,   482,   733,
      -1,   733,   483,   733,    -1,   733,   484,   733,    -1,   733,
     485,   733,    -1,   733,   486,   733,    -1,   733,   477,   733,
      -1,   733,   478,   733,    -1,   733,   479,   733,    -1,   733,
      16,   733,    -1,   733,    17,   733,    -1,   733,    18,   733,
      -1,   733,   759,   733,    -1,   759,   733,    -1,   733,   759,
      -1,   733,    33,   733,    -1,   733,   287,   733,    -1,   267,
     733,    -1,   474,   733,    -1,   733,   173,   733,    -1,   733,
     229,   733,    -1,   733,   229,   733,   143,   733,    -1,   733,
     474,   229,   733,    -1,   733,   474,   229,   733,   143,   733,
      -1,   733,   188,   733,    -1,   733,   188,   733,   143,   733,
      -1,   733,   474,   188,   733,    -1,   733,   474,   188,   733,
     143,   733,    -1,   733,   374,   409,   733,    -1,   733,   374,
     409,   733,   143,   733,    -1,   733,   474,   374,   409,   733,
      -1,   733,   474,   374,   409,   733,   143,   733,    -1,   733,
     215,   272,    -1,   733,   216,    -1,   733,   215,   267,   272,
      -1,   733,   267,   272,    -1,   733,   270,    -1,   753,    -1,
     495,   755,   496,    -1,   488,   764,   489,    -1,   753,    15,
     733,    -1,   783,    15,   733,    -1,   753,   293,   753,    -1,
     733,   215,   416,    -1,   733,   215,   267,   416,    -1,   733,
     215,   156,    -1,   733,   215,   267,   156,    -1,   733,   215,
     427,    -1,   733,   215,   267,   427,    -1,   733,   215,   130,
     168,   733,    -1,   733,   215,   267,   130,   168,   733,    -1,
     733,   215,   277,   490,   767,   491,    -1,   733,   215,   267,
     277,   490,   767,   491,    -1,   733,    48,   788,   734,    33,
     733,    -1,   733,   474,    48,   788,   734,    33,   733,    -1,
     733,    48,   395,   734,    33,   733,    -1,   733,   474,    48,
     395,   734,    33,   733,    -1,   733,   193,   777,    -1,   733,
     474,   193,   777,    -1,   733,   761,   756,   628,    -1,   733,
     761,   756,   490,   733,   491,    -1,   115,    -1,    35,   488,
     764,   489,    -1,   735,    -1,   734,    11,   703,    -1,   481,
     734,    -1,   482,   734,    -1,   734,   481,   734,    -1,   734,
     482,   734,    -1,   734,   483,   734,    -1,   734,   484,   734,
      -1,   734,   485,   734,    -1,   734,   486,   734,    -1,   734,
     477,   734,    -1,   734,   478,   734,    -1,   734,   479,   734,
      -1,   734,    16,   734,    -1,   734,    17,   734,    -1,   734,
      18,   734,    -1,   734,   759,   734,    -1,   759,   734,    -1,
     734,   759,    -1,   734,   215,   130,   168,   734,    -1,   734,
     215,   267,   130,   168,   734,    -1,   734,   215,   277,   490,
     767,   491,    -1,   734,   215,   267,   277,   490,   767,   491,
      -1,   783,    -1,   803,    -1,   497,     9,    -1,   498,   787,
      -1,    10,   787,    -1,   490,   733,   491,   787,    -1,   778,
      -1,   737,   787,    -1,   628,    -1,   628,   786,    -1,   150,
     628,    -1,   671,   490,   763,   491,    -1,   802,   490,   491,
      -1,   802,   490,   765,   641,   491,    -1,   802,   490,   441,
     766,   641,   491,    -1,   802,   490,   765,   494,   441,   766,
     641,   491,    -1,   802,   490,    27,   765,   641,   491,    -1,
     802,   490,   130,   765,   641,   491,    -1,   802,   490,   483,
     491,    -1,   736,   740,   741,   745,    -1,   739,    -1,   736,
      -1,   739,    -1,    74,   163,   490,   733,   491,    -1,    99,
      -1,   102,    -1,   102,   490,   804,   491,    -1,   103,    -1,
     103,   490,   804,   491,    -1,   234,    -1,   234,   490,   804,
     491,    -1,   235,    -1,   235,   490,   804,   491,    -1,   100,
      -1,   104,    -1,   368,    -1,   432,    -1,    98,    -1,   101,
      -1,    61,   490,   733,    36,   703,   491,    -1,   419,   490,
     733,    36,   703,   491,    -1,   155,   490,   768,   491,    -1,
     294,   490,   770,   491,    -1,   308,   490,   772,   491,    -1,
     393,   490,   773,   491,    -1,   413,   490,   733,    36,   703,
     491,    -1,   415,   490,    53,   776,   491,    -1,   415,   490,
     225,   776,   491,    -1,   415,   490,   410,   776,   491,    -1,
     415,   490,   776,   491,    -1,   273,   490,   733,   494,   733,
     491,    -1,    72,   490,   763,   491,    -1,   453,   177,   490,
     642,   491,    -1,    -1,   159,   490,   449,   733,   491,    -1,
      -1,   451,   743,    -1,    -1,   744,    -1,   743,   494,   744,
      -1,   806,    36,   746,    -1,   292,   746,    -1,   292,   806,
      -1,    -1,   490,   747,   748,   641,   749,   491,    -1,   806,
      -1,    -1,   301,    54,   763,    -1,    -1,   323,   750,    -1,
     351,   750,    -1,    -1,   751,    -1,    48,   751,    33,   751,
      -1,   422,   310,    -1,   422,   162,    -1,    97,   350,    -1,
     733,   310,    -1,   733,   162,    -1,   350,   490,   763,   491,
      -1,   350,   490,   491,    -1,   752,    -1,   490,   763,   494,
     733,   491,    -1,   807,   499,   733,    -1,   754,    -1,   755,
     494,   754,    -1,    34,    -1,   379,    -1,    27,    -1,     8,
      -1,   758,    -1,   481,    -1,   482,    -1,   483,    -1,   484,
      -1,   485,    -1,   486,    -1,   477,    -1,   478,    -1,   479,
      -1,    16,    -1,    17,    -1,    18,    -1,     8,    -1,   284,
     490,   762,   491,    -1,   757,    -1,   284,   490,   762,   491,
      -1,   757,    -1,   284,   490,   762,   491,    -1,   229,    -1,
     474,   229,    -1,   173,    -1,   474,   173,    -1,   188,    -1,
     474,   188,    -1,   757,    -1,   806,   492,   762,    -1,   733,
      -1,   763,   494,   733,    -1,   763,    -1,    -1,   766,    -1,
     765,   494,   766,    -1,   733,    -1,   814,    13,   733,    -1,
     814,    14,   733,    -1,   703,    -1,   767,   494,   703,    -1,
     769,   168,   733,    -1,    -1,     3,    -1,   724,    -1,   725,
      -1,   726,    -1,   727,    -1,   728,    -1,   729,    -1,   730,
      -1,   731,    -1,   805,    -1,   733,   771,   774,   775,    -1,
     733,   771,   774,    -1,   305,   733,    -1,   734,   193,   734,
      -1,    -1,   733,   774,   775,    -1,   733,   775,   774,    -1,
     733,   774,    -1,   733,   775,    -1,   763,    -1,    -1,   168,
     733,    -1,   163,   733,    -1,   733,   168,   763,    -1,   168,
     763,    -1,   763,    -1,   628,    -1,   490,   763,   491,    -1,
      60,   782,   779,   781,   141,    -1,   780,    -1,   779,   780,
      -1,   448,   733,   406,   733,    -1,   137,   733,    -1,    -1,
     733,    -1,    -1,   806,    -1,   806,   786,    -1,   492,   801,
      -1,   488,   733,   489,    -1,   488,   785,   499,   785,   489,
      -1,   733,    -1,    -1,   784,    -1,   786,   784,    -1,    -1,
     787,   784,    -1,    40,    -1,    -1,   790,    -1,    -1,   791,
      -1,   790,   494,   791,    -1,   733,    36,   816,    -1,   733,
       3,    -1,   733,    -1,   483,   793,   796,    -1,   806,   492,
     483,   793,   796,    -1,   146,   490,   799,   491,    -1,   146,
     806,    -1,   792,    -1,    -1,   733,    36,   806,    -1,   794,
      -1,   795,   494,   794,    -1,   338,   490,   795,   491,    -1,
     338,   794,    -1,    -1,   798,    -1,   797,   494,   798,    -1,
     807,    -1,   806,   786,    -1,   800,    -1,   799,   494,   800,
      -1,   806,    -1,   815,    -1,   809,    -1,   806,   786,    -1,
     804,    -1,     4,    -1,   805,   787,    -1,     6,    -1,     7,
      -1,   802,   805,    -1,   802,   490,   765,   641,   491,   805,
      -1,   706,   805,    -1,   722,   490,   733,   491,   732,    -1,
     722,   804,   732,    -1,   722,   805,   732,    -1,   416,    -1,
     156,    -1,   272,    -1,     9,    -1,     5,    -1,     3,    -1,
     875,    -1,   876,    -1,   806,    -1,     5,    -1,     3,    -1,
     875,    -1,   880,    -1,     3,    -1,   875,    -1,   877,    -1,
       3,    -1,   875,    -1,   878,    -1,   806,    -1,   806,   812,
      -1,   492,   801,    -1,   812,   492,   801,    -1,   490,   799,
     491,    -1,    -1,   808,    -1,     3,    -1,   879,    -1,   875,
      -1,   881,    -1,   815,    -1,     5,    -1,   312,   800,   818,
      36,   819,    -1,   490,   767,   491,    -1,    -1,   627,    -1,
     521,    -1,   609,    -1,   858,    -1,    93,   355,   806,   821,
      -1,    93,   355,   187,   267,   150,   806,   821,    -1,   821,
     822,    -1,    -1,   553,    -1,   823,    -1,   540,    -1,   870,
      -1,    93,   829,   196,   826,   827,   282,   798,   825,   490,
     537,   491,   828,   697,    -1,    93,   829,   196,   826,   187,
     267,   150,   581,   282,   798,   825,   490,   537,   491,   828,
     697,    -1,   806,    -1,   433,   824,    -1,    -1,    82,    -1,
      -1,   581,    -1,    -1,   452,   566,    -1,    -1,   426,    -1,
      -1,    29,   398,   691,   369,   355,   800,    -1,    29,   398,
     187,   150,   691,   369,   355,   800,    -1,    29,   363,   798,
     369,   355,   800,    -1,    29,   363,   187,   150,   798,   369,
     355,   800,    -1,    29,   445,   798,   369,   355,   800,    -1,
      29,   445,   187,   150,   798,   369,   355,   800,    -1,   164,
      68,    -1,    68,    -1,   152,   108,   805,   617,    -1,   192,
     108,   805,    -1,   151,   837,    -1,   151,   841,   835,   837,
      -1,   151,   443,   837,    -1,   151,   490,   840,   491,   837,
      -1,   443,    -1,    -1,   842,    -1,   547,    -1,    -1,   627,
      -1,   521,    -1,   609,    -1,   858,    -1,   872,    -1,     3,
      -1,   875,    -1,   879,    -1,   838,    -1,   805,    -1,   843,
      -1,   840,   494,   843,    -1,    32,    -1,    31,    -1,   416,
      -1,   156,    -1,   282,    -1,   839,    -1,   844,   836,    -1,
     838,    -1,   841,    -1,   369,   846,    -1,   369,   233,   846,
      -1,   369,   367,   846,    -1,   369,   174,   846,    -1,   847,
      -1,   868,   168,    97,    -1,   407,   473,   849,    -1,   355,
     805,    -1,   868,   409,   850,    -1,   868,   479,   850,    -1,
     868,   409,   115,    -1,   868,   479,   115,    -1,   842,    -1,
     547,    -1,   805,    -1,     3,    -1,   722,   805,   732,    -1,
     722,   490,   804,   491,   805,    -1,   547,    -1,   115,    -1,
     233,    -1,   848,    -1,   850,   494,   848,    -1,   232,   852,
      -1,   207,   852,    -1,   805,    -1,   434,   855,   857,   835,
      -1,   434,   855,   857,   835,   798,    -1,   434,   855,   857,
     835,   862,    -1,   434,   490,   856,   491,    -1,   434,   490,
     856,   491,   798,   813,    -1,   841,    -1,   443,    -1,   167,
      -1,   169,    -1,     3,    -1,   169,    -1,    -1,   854,    -1,
     856,   494,   854,    -1,   167,    -1,    -1,   525,   120,   168,
     859,   861,   860,   530,    -1,   691,    -1,   691,   806,    -1,
     691,    36,   806,    -1,   449,   733,    -1,    -1,   433,   682,
      -1,    -1,   841,   835,    -1,   841,   835,   798,   813,    -1,
     340,   865,    -1,   868,    -1,    27,    -1,   864,    -1,   407,
     473,    -1,   411,   217,   228,    -1,   867,   627,    -1,   394,
     627,    -1,   394,   868,    -1,   867,   868,    -1,   867,   407,
     473,    -1,   867,   411,   217,   228,    -1,   867,    27,    -1,
     373,    -1,   125,    -1,   806,    -1,   868,   492,   806,    -1,
      56,   736,    -1,    93,   597,   445,   798,   587,   828,    36,
     627,   871,    -1,    93,   287,   338,   597,   445,   798,   587,
     828,    36,   627,   871,    -1,    93,   597,   328,   445,   798,
     490,   591,   491,   828,    36,   627,   871,    -1,    93,   287,
     338,   597,   328,   445,   798,   490,   591,   491,   828,    36,
     627,   871,    -1,   452,    67,   285,    -1,   452,    59,    67,
     285,    -1,   452,   233,    67,   285,    -1,    -1,    93,   597,
     398,   874,    36,   627,   873,    -1,    93,   597,   398,   187,
     267,   150,   874,    36,   627,   873,    -1,   452,   107,    -1,
     452,   265,   107,    -1,    -1,   798,   587,   573,   565,    -1,
      19,    -1,    20,    -1,    21,    -1,    22,    -1,    23,    -1,
      24,    -1,    25,    -1,    26,    -1,    28,    -1,    29,    -1,
      30,    -1,    38,    -1,    39,    -1,    41,    -1,    42,    -1,
      43,    -1,    45,    -1,    46,    -1,    47,    -1,    54,    -1,
      55,    -1,    56,    -1,    57,    -1,    58,    -1,    59,    -1,
      62,    -1,    63,    -1,    66,    -1,    68,    -1,    69,    -1,
      70,    -1,    71,    -1,    76,    -1,    77,    -1,    78,    -1,
      79,    -1,    80,    -1,    81,    -1,    83,    -1,    84,    -1,
      85,    -1,    87,    -1,    88,    -1,    89,    -1,    90,    -1,
      91,    -1,    92,    -1,    95,    -1,    96,    -1,    97,    -1,
     105,    -1,   106,    -1,   107,    -1,   108,    -1,   109,    -1,
     110,    -1,   111,    -1,   114,    -1,   116,    -1,   118,    -1,
     119,    -1,   120,    -1,   121,    -1,   122,    -1,   123,    -1,
     125,    -1,   126,    -1,   127,    -1,   128,    -1,   129,    -1,
     132,    -1,   133,    -1,   134,    -1,   135,    -1,   136,    -1,
     138,    -1,   139,    -1,   140,    -1,   142,    -1,   143,    -1,
     144,    -1,   146,    -1,   147,    -1,   148,    -1,   149,    -1,
     151,    -1,   152,    -1,   153,    -1,   154,    -1,   157,    -1,
     159,    -1,   160,    -1,   162,    -1,   164,    -1,   166,    -1,
     170,    -1,   171,    -1,   172,    -1,   174,    -1,   176,    -1,
     180,    -1,   182,    -1,   183,    -1,   184,    -1,   185,    -1,
     186,    -1,   187,    -1,   189,    -1,   190,    -1,   191,    -1,
     192,    -1,   194,    -1,   195,    -1,   196,    -1,   197,    -1,
     198,    -1,   199,    -1,   201,    -1,   204,    -1,   205,    -1,
     206,    -1,   207,    -1,   208,    -1,   214,    -1,   217,    -1,
     219,    -1,   220,    -1,   221,    -1,   222,    -1,   223,    -1,
     226,    -1,   228,    -1,   231,    -1,   232,    -1,   233,    -1,
     236,    -1,   237,    -1,   238,    -1,   239,    -1,   240,    -1,
     242,    -1,   243,    -1,   244,    -1,   245,    -1,   246,    -1,
     247,    -1,   248,    -1,   249,    -1,   250,    -1,   251,    -1,
     252,    -1,   253,    -1,   254,    -1,   255,    -1,   256,    -1,
     257,    -1,   258,    -1,   259,    -1,   263,    -1,   264,    -1,
     265,    -1,   268,    -1,   269,    -1,   271,    -1,   274,    -1,
     276,    -1,   277,    -1,   278,    -1,   280,    -1,   281,    -1,
     284,    -1,   285,    -1,   286,    -1,   289,    -1,   292,    -1,
     295,    -1,   296,    -1,   297,    -1,   298,    -1,   299,    -1,
     300,    -1,   301,    -1,   302,    -1,   303,    -1,   304,    -1,
     306,    -1,   307,    -1,   309,    -1,   310,    -1,   312,    -1,
     313,    -1,   314,    -1,   316,    -1,   317,    -1,   318,    -1,
     319,    -1,   320,    -1,   321,    -1,   322,    -1,   323,    -1,
     324,    -1,   326,    -1,   327,    -1,   328,    -1,   329,    -1,
     331,    -1,   332,    -1,   333,    -1,   334,    -1,   335,    -1,
     336,    -1,   337,    -1,   338,    -1,   339,    -1,   340,    -1,
     341,    -1,   342,    -1,   344,    -1,   345,    -1,   347,    -1,
     348,    -1,   349,    -1,   351,    -1,   352,    -1,   353,    -1,
     354,    -1,   355,    -1,   356,    -1,   357,    -1,   358,    -1,
     359,    -1,   360,    -1,   361,    -1,   363,    -1,   364,    -1,
     365,    -1,   366,    -1,   367,    -1,   369,    -1,   371,    -1,
     372,    -1,   373,    -1,   375,    -1,   376,    -1,   378,    -1,
     380,    -1,   381,    -1,   382,    -1,   383,    -1,   384,    -1,
     385,    -1,   386,    -1,   387,    -1,   388,    -1,   389,    -1,
     390,    -1,   392,    -1,   394,    -1,   396,    -1,   397,    -1,
     399,    -1,   401,    -1,   402,    -1,   403,    -1,   404,    -1,
     405,    -1,   411,    -1,   412,    -1,   414,    -1,   417,    -1,
     418,    -1,   420,    -1,   421,    -1,   422,    -1,   423,    -1,
     424,    -1,   427,    -1,   428,    -1,   429,    -1,   430,    -1,
     431,    -1,   434,    -1,   435,    -1,   436,    -1,   437,    -1,
     438,    -1,   442,    -1,   444,    -1,   445,    -1,   446,    -1,
     447,    -1,   450,    -1,   453,    -1,   454,    -1,   455,    -1,
     456,    -1,   457,    -1,   458,    -1,   470,    -1,   471,    -1,
     472,    -1,   473,    -1,    48,    -1,    49,    -1,    51,    -1,
      52,    -1,    64,    -1,    65,    -1,    72,    -1,   112,    -1,
     113,    -1,   150,    -1,   155,    -1,   161,    -1,   178,    -1,
     179,    -1,   203,    -1,   209,    -1,   210,    -1,   212,    -1,
     241,    -1,   260,    -1,   262,    -1,   266,    -1,   273,    -1,
     275,    -1,   290,    -1,   294,    -1,   308,    -1,   311,    -1,
     325,    -1,   350,    -1,   370,    -1,   377,    -1,   391,    -1,
     393,    -1,   407,    -1,   408,    -1,   413,    -1,   415,    -1,
     419,    -1,   439,    -1,   440,    -1,   459,    -1,   460,    -1,
     461,    -1,   462,    -1,   463,    -1,   464,    -1,   465,    -1,
     466,    -1,   467,    -1,   468,    -1,   469,    -1,    44,    -1,
      50,    -1,    74,    -1,    82,    -1,    94,    -1,   101,    -1,
     167,    -1,   169,    -1,   173,    -1,   188,    -1,   202,    -1,
     215,    -1,   216,    -1,   218,    -1,   227,    -1,   229,    -1,
     241,    -1,   261,    -1,   270,    -1,   291,    -1,   293,    -1,
     346,    -1,   374,    -1,   391,    -1,   400,    -1,   443,    -1,
      44,    -1,    50,    -1,    74,    -1,    82,    -1,    94,    -1,
     101,    -1,   167,    -1,   169,    -1,   173,    -1,   188,    -1,
     202,    -1,   215,    -1,   216,    -1,   218,    -1,   227,    -1,
     229,    -1,   261,    -1,   270,    -1,   291,    -1,   293,    -1,
     346,    -1,   374,    -1,   400,    -1,   419,    -1,   443,    -1,
      48,    -1,    49,    -1,    51,    -1,    52,    -1,    65,    -1,
      64,    -1,    72,    -1,   112,    -1,   113,    -1,   150,    -1,
     155,    -1,   161,    -1,   178,    -1,   179,    -1,   203,    -1,
     210,    -1,   212,    -1,   209,    -1,   241,    -1,   260,    -1,
     262,    -1,   266,    -1,   273,    -1,   275,    -1,   290,    -1,
     294,    -1,   308,    -1,   311,    -1,   325,    -1,   350,    -1,
     370,    -1,   377,    -1,   391,    -1,   393,    -1,   407,    -1,
     408,    -1,   413,    -1,   415,    -1,   419,    -1,   439,    -1,
     440,    -1,   459,    -1,   460,    -1,   461,    -1,   462,    -1,
     463,    -1,   464,    -1,   465,    -1,   466,    -1,   467,    -1,
     468,    -1,   469,    -1,    44,    -1,    50,    -1,    74,    -1,
      82,    -1,    94,    -1,   101,    -1,   167,    -1,   169,    -1,
     173,    -1,   188,    -1,   202,    -1,   215,    -1,   216,    -1,
     218,    -1,   227,    -1,   229,    -1,   241,    -1,   261,    -1,
     270,    -1,   291,    -1,   293,    -1,   346,    -1,   374,    -1,
     391,    -1,   400,    -1,   419,    -1,   443,    -1,    27,    -1,
      31,    -1,    32,    -1,    33,    -1,    34,    -1,    35,    -1,
      36,    -1,    37,    -1,    40,    -1,    53,    -1,    60,    -1,
      61,    -1,    67,    -1,    73,    -1,    75,    -1,    86,    -1,
      93,    -1,    98,    -1,    99,    -1,   100,    -1,   102,    -1,
     103,    -1,   104,    -1,   115,    -1,   117,    -1,   124,    -1,
     130,    -1,   131,    -1,   137,    -1,   141,    -1,   145,    -1,
     156,    -1,   158,    -1,   163,    -1,   165,    -1,   168,    -1,
     175,    -1,   177,    -1,   181,    -1,   193,    -1,   200,    -1,
     211,    -1,   213,    -1,   224,    -1,   225,    -1,   230,    -1,
     234,    -1,   235,    -1,   267,    -1,   272,    -1,   279,    -1,
     282,    -1,   283,    -1,   287,    -1,   288,    -1,   305,    -1,
     315,    -1,   330,    -1,   343,    -1,   362,    -1,   368,    -1,
     379,    -1,   395,    -1,   398,    -1,   406,    -1,   409,    -1,
     410,    -1,   416,    -1,   425,    -1,   426,    -1,   432,    -1,
     433,    -1,   441,    -1,   448,    -1,   449,    -1,   451,    -1,
     452,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   464,   464,   480,   492,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   536,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      13,    19,    25,     7,    17,    18,    21,    23,     6,    15,
      25,    35,    45,    55,    65,    75,    85,    95,   106,   117,
     127,   140,   141,     8,    21,    27,    34,    40,    47,    57,
      61,    70,    79,    88,    95,    96,   101,   113,   118,   143,
     153,   163,   169,   180,   191,   206,   207,   213,   214,   219,
     220,   226,   227,   231,   232,   237,   239,   245,   246,   250,
     251,   256,     7,    14,    22,     9,    19,    32,    33,     7,
      14,    31,    51,    52,     9,    17,    29,    30,    34,    35,
      36,    41,    42,    43,    48,    52,    56,    60,    64,    68,
      72,    76,    80,    84,    88,    92,    97,   101,   105,   112,
     113,   117,   118,   119,     2,     9,    15,    21,    28,    35,
      45,    46,    47,     7,    21,    36,    56,    57,    84,    85,
      86,    87,    88,    89,    93,    94,    99,   104,   105,   106,
     107,   108,   113,   120,   121,   122,   139,   146,   153,   163,
     173,   185,   193,   202,   211,   230,   237,   242,   244,   246,
     248,   251,   256,   257,   261,   262,   263,   264,   269,   273,
     274,   279,   286,   291,   292,   293,   294,   295,   296,   297,
     298,   304,   305,   309,   314,   321,   328,   335,   347,   348,
     349,   350,   354,   359,   360,   361,   366,   371,   372,   373,
     374,   375,   376,   381,   404,   408,   415,   416,   420,   424,
     425,   426,   430,   434,   442,   443,   448,   449,   453,   461,
     462,   467,   468,   472,   477,   481,   485,   490,   498,   499,
     503,   504,   510,   521,   534,   548,   562,   576,   590,   613,
     617,   624,   628,   636,   641,   648,   658,   659,   660,   661,
     662,   669,   676,   677,   682,   683,     9,    19,    29,    39,
      49,    59,    69,    79,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   112,
     113,   114,   115,   116,   117,   118,   123,   124,   129,   130,
     131,   136,   137,   138,   141,   142,     7,    18,    19,    23,
      27,     7,     1,    30,    53,    54,    59,    63,    68,    72,
      80,    81,    85,    86,    91,    92,    96,    97,   102,   103,
     104,   105,   106,   111,   119,   123,   128,   129,   134,   138,
     143,   147,   151,   155,   159,   163,   167,   171,   175,   179,
     183,   187,   191,   195,   203,   209,   210,   211,   216,   220,
      47,    48,    52,    53,    68,    69,    76,    84,    92,   100,
     108,   116,   127,   128,   155,   170,   186,   187,   206,   210,
     214,   231,   238,   245,   255,   256,   259,   271,   282,   290,
     295,   300,   305,   310,   318,   326,   331,   336,   343,   344,
     348,   349,   350,   357,   358,   362,   363,   367,   368,   372,
     376,   377,   380,   389,   400,   401,   402,   405,   406,   407,
     411,   412,   413,   414,   418,   419,   423,   425,   441,   443,
     448,   451,   459,   463,   467,   471,   475,   479,   486,   491,
     498,   499,   503,   507,   511,   515,   522,   529,   530,   535,
     536,   540,   541,   549,   569,   570,   572,   577,   578,   582,
     583,   586,   587,   612,   613,   617,   618,   622,   623,   624,
     625,   626,   630,   643,   650,   657,   664,   665,   669,   670,
     674,   675,   679,   680,   684,   685,   689,   700,   701,   702,
     703,   707,   708,   713,   714,   715,   724,   730,   748,   749,
     753,   754,   760,   766,   774,   782,   791,   800,   804,   830,
     834,   847,   861,   876,   888,   904,   910,   915,   921,   928,
     929,   937,   941,   945,   951,   958,   963,   964,   965,   966,
     970,   971,   983,   984,   989,   996,  1003,  1010,  1042,  1053,
    1066,  1071,  1072,  1075,  1076,  1079,  1080,  1085,  1086,  1091,
    1095,  1101,  1122,  1130,  1143,  1146,  1150,  1150,  1152,  1157,
    1164,  1169,  1175,  1180,  1186,  1192,  1201,  1203,  1206,  1210,
    1211,  1212,  1213,  1214,  1215,  1220,  1240,  1241,  1242,  1243,
    1254,  1268,  1269,  1275,  1280,  1285,  1290,  1295,  1300,  1305,
    1310,  1316,  1322,  1328,  1335,  1357,  1366,  1370,  1378,  1382,
    1390,  1402,  1423,  1427,  1433,  1437,  1450,  1458,  1468,  1470,
    1472,  1474,  1476,  1478,  1483,  1484,  1491,  1500,  1508,  1517,
    1528,  1536,  1537,  1538,  1542,  1542,  1545,  1545,  1548,  1548,
    1551,  1551,  1554,  1554,  1557,  1557,  1560,  1560,  1563,  1563,
    1566,  1568,  1570,  1572,  1574,  1576,  1578,  1580,  1582,  1587,
    1592,  1598,  1605,  1610,  1616,  1622,  1653,  1655,  1657,  1665,
    1680,  1682,  1684,  1686,  1688,  1690,  1692,  1694,  1696,  1698,
    1700,  1702,  1704,  1706,  1709,  1711,  1713,  1716,  1718,  1720,
    1722,  1725,  1730,  1735,  1742,  1747,  1754,  1759,  1767,  1772,
    1781,  1789,  1797,  1805,  1823,  1831,  1839,  1847,  1855,  1863,
    1867,  1871,  1875,  1883,  1891,  1907,  1915,  1923,  1931,  1939,
    1947,  1955,  1959,  1963,  1967,  1971,  1979,  1987,  1995,  2003,
    2023,  2045,  2056,  2063,  2077,  2093,  2095,  2097,  2099,  2101,
    2103,  2105,  2107,  2109,  2111,  2113,  2115,  2117,  2119,  2121,
    2123,  2125,  2127,  2129,  2131,  2135,  2139,  2143,  2157,  2158,
    2159,  2166,  2178,  2193,  2205,  2207,  2219,  2230,  2254,  2265,
    2274,  2278,  2284,  2291,  2298,  2308,  2315,  2343,  2378,  2389,
    2390,  2397,  2403,  2407,  2411,  2415,  2419,  2423,  2427,  2431,
    2435,  2439,  2443,  2447,  2451,  2455,  2459,  2463,  2465,  2467,
    2471,  2480,  2485,  2492,  2507,  2514,  2518,  2522,  2526,  2530,
    2544,  2545,  2549,  2550,  2558,  2559,  2563,  2564,  2569,  2577,
    2579,  2593,  2596,  2623,  2624,  2627,  2628,  2639,  2645,  2652,
    2661,  2678,  2723,  2731,  2739,  2747,  2755,  2776,  2777,  2780,
    2781,  2785,  2795,  2796,  2798,  2799,  2800,  2803,  2804,  2807,
    2808,  2809,  2810,  2811,  2812,  2813,  2814,  2815,  2816,  2817,
    2818,  2821,  2823,  2828,  2830,  2835,  2837,  2839,  2841,  2843,
    2845,  2847,  2849,  2863,  2865,  2869,  2873,  2880,  2885,  2892,
    2896,  2902,  2906,  2915,  2926,  2927,  2931,  2935,  2942,  2943,
    2944,  2945,  2946,  2947,  2948,  2949,  2950,  2951,  2961,  2965,
    2972,  2979,  2980,  2996,  3000,  3005,  3009,  3024,  3029,  3033,
    3036,  3039,  3040,  3041,  3044,  3051,  3061,  3075,  3076,  3080,
    3091,  3092,  3095,  3096,  3099,  3103,  3110,  3114,  3122,  3133,
    3134,  3138,  3139,  3143,  3144,  3147,  3148,  3158,  3159,  3163,
    3164,  3167,  3183,  3191,  3199,  3214,  3232,  3233,  3236,  3237,
    3240,  3244,  3245,  3248,  3249,  3250,  3260,  3261,  3272,  3276,
    3303,  3305,  3310,  3312,  3322,  3325,  3336,  3340,  3344,  3356,
    3360,  3369,  3376,  3408,  3412,  3416,  3420,  3424,  3428,  3432,
    3438,  3439,  3455,  3456,  3457,  3460,  3461,  3467,  3468,  3469,
    3472,  3473,  3474,  3477,  3478,  3479,  3482,  3483,  3486,  3488,
    3493,  3494,  3497,  3505,  3506,  3507,  3508,  3511,  3512,     7,
      18,    19,    23,    24,    25,    26,     7,    16,    34,    41,
      46,    47,    48,    49,     8,    33,    62,    66,    67,    72,
      73,    78,    79,    83,    84,    89,    90,     7,    16,    25,
      34,    43,    52,     5,    11,     7,    20,     9,    16,    26,
      33,    44,    45,    50,    51,    52,    57,    58,    59,    60,
      61,    65,    66,    67,    72,    73,    78,    82,    90,    91,
      96,    97,    98,   104,   109,   117,   118,    10,    16,    22,
      28,    38,    39,    47,    58,    70,    78,    86,    93,   103,
     105,   111,   115,   119,   134,   141,   142,   143,   147,   148,
       7,    14,    22,     8,    22,    36,    48,    56,    70,    71,
      72,    73,    74,    87,    88,    93,    94,    98,    99,     7,
      21,    25,    32,    43,    44,    50,    51,     9,    19,     2,
       7,    14,    24,    25,    32,     3,    10,    17,    24,    31,
      38,    45,    55,    55,    57,    58,     6,     8,    21,    34,
      52,    74,    75,    76,    77,    11,    24,    41,    42,    43,
      48,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION", "CONCURRENTLY",
  "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS",
  "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P",
  "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE",
  "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP",
  "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P",
  "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P", "DECLARE", "DEFAULT",
  "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER",
  "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY",
  "DISABLE_P", "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P",
  "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED",
  "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING",
  "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION",
  "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P",
  "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE",
  "FROM", "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL",
  "GRANT", "GRANTED", "GROUP_P", "GROUPING", "GROUPING_ID", "HANDLER",
  "HAVING", "HEADER_P", "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P",
  "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P",
  "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT", "INHERITS",
  "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE",
  "INSERT", "INSTALL", "INSTEAD", "INT_P", "INTEGER", "INTERSECT",
  "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN",
  "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P", "LEADING",
  "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL",
  "LOCALTIME", "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "LOCKED", "LOGGED",
  "MACRO", "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
  "MICROSECOND_P", "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P",
  "MINUTE_P", "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P",
  "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT",
  "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P",
  "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES",
  "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME",
  "REPEATABLE", "REPLACE", "REPLICA", "RESET", "RESTART", "RESTRICT",
  "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP",
  "ROW", "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS",
  "SCROLL", "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
  "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
  "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'{'", "'}'", "'#'", "'?'",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "CreateEnumStmt", "opt_enum_val_list", "enum_val_list",
  "RenameStmt", "opt_column", "InsertStmt", "insert_rest", "insert_target",
  "opt_conf_expr", "opt_with_clause", "insert_column_item", "set_clause",
  "opt_on_conflict", "index_elem", "returning_clause", "override_kind",
  "set_target_list", "opt_collate", "opt_class", "insert_column_list",
  "set_clause_list", "index_params", "set_target", "PragmaStmt",
  "CreateSeqStmt", "OptSeqOptList", "ExecuteStmt", "execute_param_clause",
  "AlterSeqStmt", "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem",
  "opt_by", "SignedIconst", "TransactionStmt", "opt_transaction",
  "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "type_name_list", "CreateFunctionStmt",
  "macro_alias", "param_list", "UpdateStmt", "CopyStmt", "copy_from",
  "copy_delimiter", "copy_generic_opt_arg_list", "opt_using", "opt_as",
  "opt_program", "copy_options", "copy_generic_opt_arg",
  "copy_generic_opt_elem", "opt_oids", "copy_opt_list", "opt_binary",
  "copy_opt_item", "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "rollup_clause", "cube_clause",
  "grouping_sets_clause", "grouping_or_grouping_id", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "sub_type", "all_Op", "MathOp", "qual_Op", "qual_all_Op", "subquery_Op",
  "any_operator", "expr_list", "opt_expr_list", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list", "target_list",
  "target_el", "except_list", "opt_except_list", "replace_list_el",
  "replace_list", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name", "attr_name", "func_name",
  "AexprConst", "Iconst", "Sconst", "ColId", "ColIdOrString",
  "type_function_name", "function_name_token", "type_name_token",
  "any_name", "attrs", "opt_name_list", "param_name", "ColLabel",
  "ColLabelOrString", "PrepareStmt", "prep_type_clause", "PreparableStmt",
  "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt", "IndexStmt",
  "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,    60,    62,    61,
     732,    43,    45,    42,    47,    37,    94,   733,    91,    93,
      40,    41,    46,    59,    44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   500,   501,   502,   502,   503,   503,   503,   503,   503,
     503,   503,   503,   503,   503,   503,   503,   503,   503,   503,
     503,   503,   503,   503,   503,   503,   503,   503,   503,   503,
     503,   503,   503,   503,   503,   503,   503,   503,   503,   503,
     504,   504,   504,   504,   504,   504,   504,   504,   505,   505,
     506,   506,   507,   507,   507,   507,   508,   508,   509,   509,
     509,   509,   509,   509,   509,   509,   509,   509,   509,   509,
     509,   509,   509,   509,   509,   509,   509,   509,   509,   509,
     509,   509,   509,   509,   509,   509,   509,   510,   510,   511,
     511,   511,   511,   512,   512,   513,   514,   514,   514,   515,
     515,   515,   515,   516,   517,   517,   518,   518,   519,   519,
     519,   519,   519,   519,   519,   519,   519,   519,   519,   519,
     519,   520,   520,   521,   522,   522,   522,   522,   522,   523,
     523,   524,   524,   524,   525,   525,   526,   527,   527,   528,
     528,   528,   529,   529,   529,   530,   530,   531,   531,   532,
     532,   533,   533,   534,   534,   535,   535,   536,   536,   537,
     537,   538,   539,   539,   539,   540,   540,   541,   541,   542,
     542,   542,   543,   543,   544,   544,   545,   545,   546,   546,
     546,   547,   547,   547,   547,   548,   548,   548,   548,   548,
     548,   548,   548,   548,   548,   548,   548,   548,   548,   549,
     549,   550,   550,   550,   551,   551,   551,   551,   551,   551,
     552,   552,   552,   553,   553,   553,   554,   554,   555,   555,
     555,   555,   555,   555,   556,   556,   557,   558,   558,   558,
     558,   558,   559,   559,   559,   559,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   561,   562,   563,   563,   563,
     563,   563,   564,   564,   565,   565,   565,   565,   566,   567,
     567,   568,   568,   569,   569,   569,   569,   569,   569,   569,
     569,   570,   570,   571,   572,   572,   572,   572,   573,   573,
     573,   573,   574,   575,   575,   575,   576,   577,   577,   577,
     577,   577,   577,   578,   579,   579,   580,   580,   581,   582,
     582,   582,   583,   583,   584,   584,   585,   585,   586,   587,
     587,   588,   588,   589,   590,   590,   590,   590,   591,   591,
     592,   592,   592,   593,   593,   593,   593,   593,   593,   594,
     594,   595,   595,   595,   595,   596,   597,   597,   597,   597,
     597,   597,   597,   597,   598,   598,   599,   599,   599,   599,
     599,   599,   599,   599,   600,   600,   600,   600,   600,   600,
     600,   600,   600,   600,   600,   600,   600,   600,   600,   601,
     601,   601,   601,   601,   601,   601,   602,   602,   603,   603,
     603,   604,   604,   604,   605,   605,   606,   607,   607,   608,
     608,   609,   610,   610,   611,   611,   612,   612,   613,   613,
     614,   614,   615,   615,   616,   616,   617,   617,   618,   618,
     618,   618,   618,   619,   620,   620,   621,   621,   622,   622,
     623,   623,   623,   623,   623,   623,   623,   623,   623,   623,
     623,   623,   623,   623,   624,   625,   625,   625,   626,   626,
     627,   627,   628,   628,   629,   629,   629,   629,   629,   629,
     629,   629,   630,   630,   631,   631,   631,   631,   631,   631,
     631,   632,   632,   632,   633,   633,   634,   635,   635,   636,
     636,   636,   636,   636,   636,   636,   636,   636,   637,   637,
     638,   638,   638,   639,   639,   640,   640,   641,   641,   642,
     643,   643,   644,   644,   645,   645,   645,   646,   646,   646,
     647,   647,   647,   647,   648,   648,   649,   649,   649,   649,
     650,   650,   651,   651,   651,   651,   651,   651,   652,   652,
     653,   653,   654,   654,   654,   654,   655,   656,   656,   657,
     657,   658,   658,   659,   660,   660,   660,   661,   661,   662,
     662,   663,   663,   664,   664,   665,   665,   666,   666,   666,
     666,   666,   667,   668,   669,   670,   671,   671,   672,   672,
     673,   673,   674,   674,   675,   675,   676,   677,   677,   677,
     677,   678,   678,   679,   679,   679,   680,   680,   681,   681,
     682,   682,   683,   683,   683,   683,   683,   683,   683,   684,
     684,   684,   684,   684,   684,   685,   685,   685,   685,   686,
     686,   687,   687,   687,   687,   687,   688,   688,   688,   688,
     689,   689,   690,   690,   691,   691,   691,   691,   692,   692,
     693,   694,   694,   695,   695,   696,   696,   697,   697,   698,
     698,   699,   700,   700,   701,   701,   702,   702,   703,   703,
     703,   703,   703,   703,   703,   703,   704,   704,   704,   705,
     705,   705,   705,   705,   705,   705,   706,   706,   706,   706,
     707,   708,   708,   709,   709,   709,   709,   709,   709,   709,
     709,   709,   709,   709,   710,   710,   711,   711,   712,   712,
     713,   714,   715,   715,   716,   716,   717,   718,   719,   719,
     719,   719,   719,   719,   720,   720,   721,   721,   721,   721,
     722,   723,   723,   723,   724,   724,   725,   725,   726,   726,
     727,   727,   728,   728,   729,   729,   730,   730,   731,   731,
     732,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,   732,   732,   732,   732,   733,   733,   733,   733,
     733,   733,   733,   733,   733,   733,   733,   733,   733,   733,
     733,   733,   733,   733,   733,   733,   733,   733,   733,   733,
     733,   733,   733,   733,   733,   733,   733,   733,   733,   733,
     733,   733,   733,   733,   733,   733,   733,   733,   733,   733,
     733,   733,   733,   733,   733,   733,   733,   733,   733,   733,
     733,   733,   733,   733,   733,   733,   733,   733,   733,   733,
     733,   733,   733,   733,   733,   734,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   734,   735,   735,
     735,   735,   735,   735,   735,   735,   735,   735,   735,   735,
     736,   736,   736,   736,   736,   736,   736,   737,   737,   738,
     738,   739,   739,   739,   739,   739,   739,   739,   739,   739,
     739,   739,   739,   739,   739,   739,   739,   739,   739,   739,
     739,   739,   739,   739,   739,   739,   739,   739,   739,   739,
     740,   740,   741,   741,   742,   742,   743,   743,   744,   745,
     745,   745,   746,   747,   747,   748,   748,   749,   749,   749,
     750,   750,   751,   751,   751,   751,   751,   752,   752,   753,
     753,   754,   755,   755,   756,   756,   756,   757,   757,   758,
     758,   758,   758,   758,   758,   758,   758,   758,   758,   758,
     758,   759,   759,   760,   760,   761,   761,   761,   761,   761,
     761,   761,   761,   762,   762,   763,   763,   764,   764,   765,
     765,   766,   766,   766,   767,   767,   768,   768,   769,   769,
     769,   769,   769,   769,   769,   769,   769,   769,   770,   770,
     771,   772,   772,   773,   773,   773,   773,   773,   773,   774,
     775,   776,   776,   776,   777,   777,   778,   779,   779,   780,
     781,   781,   782,   782,   783,   783,   784,   784,   784,   785,
     785,   786,   786,   787,   787,   788,   788,   789,   789,   790,
     790,   791,   791,   791,   791,   791,   792,   792,   793,   793,
     794,   795,   795,   796,   796,   796,   797,   797,   798,   798,
     799,   799,   800,   801,   802,   802,   803,   803,   803,   803,
     803,   803,   803,   803,   803,   803,   803,   803,   803,   803,
     804,   805,   806,   806,   806,   807,   807,   808,   808,   808,
     809,   809,   809,   810,   810,   810,   811,   811,   812,   812,
     813,   813,   814,   815,   815,   815,   815,   816,   816,   817,
     818,   818,   819,   819,   819,   819,   820,   820,   821,   821,
     822,   822,   822,   822,   823,   823,   824,   825,   825,   826,
     826,   827,   827,   828,   828,   829,   829,   830,   830,   830,
     830,   830,   830,   831,   831,   832,   833,   834,   834,   834,
     834,   835,   835,   836,   836,   836,   837,   837,   837,   837,
     837,   838,   838,   838,   839,   839,   840,   840,   841,   841,
     842,   842,   842,   842,   843,   844,   844,   845,   845,   845,
     845,   846,   846,   846,   846,   847,   847,   847,   847,   848,
     848,   849,   849,   849,   849,   849,   849,   849,   850,   850,
     851,   851,   852,   853,   853,   853,   853,   853,   854,   854,
     854,   854,   854,   855,   855,   856,   856,   857,   857,   858,
     859,   859,   859,   860,   860,   861,   861,   862,   862,   863,
     864,   864,   865,   865,   865,   866,   866,   866,   866,   866,
     866,   866,   867,   867,   868,   868,   869,   870,   870,   870,
     870,   871,   871,   871,   871,   872,   872,   873,   873,   873,
     874,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     2,
       3,     2,     3,     8,     1,     0,     1,     3,     6,     6,
       8,     6,     8,     6,     8,     6,     8,     8,    10,     8,
      10,     1,     0,     7,     1,     4,     4,     7,     2,     1,
       3,     4,     3,     0,     1,     0,     2,     3,     5,     8,
       5,     0,     5,     5,     7,     2,     0,     1,     1,     1,
       3,     2,     0,     1,     0,     1,     3,     1,     3,     1,
       3,     2,     2,     4,     5,     5,     8,     1,     0,     3,
       9,    12,     3,     0,     4,     6,     1,     2,     1,     1,
       0,     1,     2,     2,     1,     2,     2,     1,     2,     3,
       2,     2,     2,     2,     3,     3,     3,     1,     3,     1,
       0,     1,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     0,     9,    12,    11,     0,     2,     1,     1,
       1,     1,     1,     1,     3,     0,     1,     2,     1,     1,
       2,     2,     3,     1,     1,     2,     2,     1,     2,     3,
       5,     3,     2,     5,     5,     2,     3,     1,     1,     2,
       2,     0,     4,     0,     3,     4,     4,     0,     3,     2,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     1,     2,     2,     2,     2,     2,
       2,     0,     3,     3,     3,     0,     1,     2,     1,     2,
       2,     2,     2,     4,     1,     3,     1,     3,     1,     1,
       1,     1,     3,     1,     2,     0,     1,     0,     1,     3,
       0,     2,     0,     3,     3,     1,     5,     3,     1,     3,
       1,     4,     5,     5,     6,     3,     7,     4,    11,     1,
       3,     2,     2,     2,     0,     3,     1,     1,     2,     2,
       2,     2,     1,     0,     1,     2,     6,     4,     6,     4,
       6,     8,     4,     6,     1,     1,     1,     1,     1,     2,
       1,     2,     1,     1,     1,     3,     3,     3,     3,     2,
       2,     1,     3,     1,     1,     1,     1,     3,     1,     1,
       0,     1,     1,     1,     1,     3,     6,     1,     1,     2,
       3,     8,    11,     9,     1,     1,     3,     0,     1,     3,
       1,     0,     1,     0,     1,     0,     1,     3,     1,     1,
       1,     3,     0,     2,     2,     0,     2,     0,     1,     0,
       1,     1,     1,     3,     3,     1,     1,     3,     3,     3,
       3,     4,     3,     2,     1,     1,     1,     1,     1,     3,
       1,     1,     3,     3,     1,     2,     4,     4,     2,     3,
       5,     5,     1,     1,    10,    10,     1,     2,     4,     4,
       4,     2,     2,     3,     1,     3,     6,     2,     0,     3,
       3,     4,     4,     4,     4,     3,     2,     1,     1,     0,
       1,     1,     0,     1,     5,     1,     0,     1,     0,     3,
       1,     3,     4,     3,     1,     1,     0,     2,     2,     0,
       2,     2,     1,     1,     1,     0,     2,     4,     5,     4,
       2,     3,     2,     2,     2,     2,     1,     2,     3,     0,
       1,     0,     5,     1,     4,     6,     2,     1,     0,     4,
       0,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     3,     0,     1,     3,     1,     1,     1,
       1,     1,     2,     4,     4,     5,     1,     1,     2,     0,
       1,     3,     1,     0,     1,     2,     3,     2,     4,     2,
       3,     2,     0,     1,     2,     0,     4,     5,     2,     0,
       1,     3,     3,     3,     3,     3,     3,     1,     4,     3,
       4,     5,     4,     5,     4,     5,     2,     4,     1,     1,
       0,     1,     4,     5,     4,     0,     2,     2,     2,     1,
       1,     0,     4,     2,     1,     2,     2,     4,     2,     6,
       2,     1,     3,     4,     0,     2,     0,     2,     0,     1,
       3,     3,     2,     0,     2,     4,     1,     1,     2,     3,
       5,     6,     2,     3,     5,     5,     3,     4,     0,     1,
       1,     1,     1,     1,     2,     4,     1,     1,     1,     1,
       2,     3,     0,     1,     1,     1,     1,     1,     2,     2,
       2,     2,     2,     1,     3,     0,     1,     1,     1,     1,
       5,     2,     1,     1,     1,     1,     4,     1,     2,     2,
       1,     3,     3,     2,     1,     0,     5,     2,     5,     2,
       1,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     3,
       3,     3,     3,     3,     3,     0,     1,     3,     3,     5,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     2,     2,     3,     3,     2,
       2,     3,     3,     5,     4,     6,     3,     5,     4,     6,
       4,     6,     5,     7,     3,     2,     4,     3,     2,     1,
       3,     3,     3,     3,     3,     3,     4,     3,     4,     3,
       4,     5,     6,     6,     7,     6,     7,     6,     7,     3,
       4,     4,     6,     1,     4,     1,     3,     2,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     2,     2,     5,     6,     6,     7,     1,     1,
       2,     2,     2,     4,     1,     2,     1,     2,     2,     4,
       3,     5,     6,     8,     6,     6,     4,     4,     1,     1,
       1,     5,     1,     1,     4,     1,     4,     1,     4,     1,
       4,     1,     1,     1,     1,     1,     1,     6,     6,     4,
       4,     4,     4,     6,     5,     5,     5,     4,     6,     4,
       5,     0,     5,     0,     2,     0,     1,     3,     3,     2,
       2,     0,     6,     1,     0,     3,     0,     2,     2,     0,
       1,     4,     2,     2,     2,     2,     2,     4,     3,     1,
       5,     3,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     1,     4,     1,     4,     1,     2,     1,
       2,     1,     2,     1,     3,     1,     3,     1,     0,     1,
       3,     1,     3,     3,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     4,     3,
       2,     3,     0,     3,     3,     2,     2,     1,     0,     2,
       2,     3,     2,     1,     1,     3,     5,     1,     2,     4,
       2,     0,     1,     0,     1,     2,     2,     3,     5,     1,
       0,     1,     2,     0,     2,     1,     0,     1,     0,     1,
       3,     3,     2,     1,     3,     5,     4,     2,     1,     0,
       3,     1,     3,     4,     2,     0,     1,     3,     1,     2,
       1,     3,     1,     1,     1,     2,     1,     1,     2,     1,
       1,     2,     6,     2,     5,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     5,
       3,     0,     1,     1,     1,     1,     4,     7,     2,     0,
       1,     1,     1,     1,    13,    16,     1,     2,     0,     1,
       0,     1,     0,     2,     0,     1,     0,     6,     8,     6,
       8,     6,     8,     2,     1,     4,     3,     2,     4,     3,
       5,     1,     0,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     3,     3,
       3,     1,     3,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     3,
       2,     2,     1,     4,     5,     5,     4,     6,     1,     1,
       1,     1,     1,     1,     0,     1,     3,     1,     0,     7,
       1,     2,     3,     2,     0,     2,     0,     2,     4,     2,
       1,     1,     1,     2,     3,     2,     2,     2,     2,     3,
       4,     2,     1,     1,     1,     3,     2,     9,    11,    12,
      14,     3,     4,     4,     0,     7,    10,     2,     3,     0,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     135,   212,     0,  1139,  1138,   212,     0,  1114,   212,   419,
     343,     0,  1213,     0,   212,     0,   135,     0,     0,     0,
       0,     0,     0,     0,     0,   212,   486,     0,  1212,   212,
       0,     0,  1184,     0,     0,     0,     0,     0,     2,     4,
       7,    18,    13,    30,    26,     0,    28,    16,    21,     6,
      32,    17,    20,    14,    33,    11,    31,   453,   440,   488,
     452,   134,   456,    29,    15,    25,     5,    10,    23,    24,
      22,  1122,    36,    27,    34,    19,     8,    35,    37,     0,
       9,    38,    12,   211,   210,   204,     0,     0,     0,     0,
       0,   205,  1052,  1231,  1232,  1233,  1234,  1235,  1236,  1237,
    1238,  1239,  1240,  1241,  1242,  1243,  1244,  1245,  1246,  1585,
    1247,  1248,  1249,  1533,  1534,  1586,  1535,  1536,  1250,  1251,
    1252,  1253,  1254,  1255,  1256,  1257,  1537,  1538,  1258,  1259,
    1260,  1261,  1262,  1539,  1587,  1263,  1264,  1265,  1266,  1267,
    1268,  1588,  1269,  1270,  1271,  1272,  1273,  1274,  1275,  1276,
    1277,  1589,  1278,  1279,  1280,  1590,  1281,  1282,  1283,  1284,
    1285,  1286,  1287,  1540,  1541,  1288,  1289,  1290,  1291,  1292,
    1293,  1294,  1295,  1296,  1297,  1298,  1299,  1300,  1301,  1302,
    1303,  1304,  1305,  1306,  1307,  1308,  1309,  1310,  1311,  1312,
    1313,  1314,  1315,  1542,  1316,  1317,  1318,  1319,  1543,  1320,
    1321,  1322,  1544,  1323,  1324,  1325,  1591,  1592,  1326,  1327,
    1328,  1593,  1329,  1330,  1545,  1546,  1331,  1332,  1333,  1334,
    1335,  1336,  1337,  1594,  1338,  1339,  1340,  1341,  1342,  1343,
    1344,  1345,  1346,  1347,  1348,  1595,  1547,  1349,  1350,  1351,
    1352,  1353,  1548,  1549,  1550,  1354,  1596,  1597,  1355,  1598,
    1356,  1357,  1358,  1359,  1360,  1361,  1599,  1362,  1600,  1363,
    1364,  1365,  1366,  1367,  1368,  1369,  1370,  1551,  1371,  1372,
    1373,  1374,  1375,  1376,  1377,  1378,  1379,  1380,  1381,  1382,
    1383,  1384,  1385,  1386,  1387,  1388,  1552,  1602,  1553,  1389,
    1390,  1391,  1554,  1392,  1393,  1603,  1394,  1555,  1395,  1556,
    1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1557,
    1604,  1405,  1605,  1558,  1406,  1407,  1408,  1409,  1410,  1411,
    1412,  1413,  1414,  1415,  1416,  1417,  1559,  1418,  1419,  1560,
    1420,  1421,  1422,  1423,  1424,  1425,  1426,  1427,  1428,  1429,
    1430,  1431,  1561,  1432,  1433,  1434,  1435,  1436,  1437,  1438,
    1439,  1440,  1441,  1442,  1443,  1444,  1445,  1446,  1447,  1448,
    1449,  1606,  1450,  1451,  1452,  1562,  1453,  1454,  1455,  1456,
    1457,  1458,  1459,  1460,  1461,  1462,  1463,  1464,  1465,  1466,
    1467,  1468,  1469,  1563,  1470,  1471,  1472,  1607,  1473,  1474,
    1564,  1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,  1483,
    1484,  1485,  1486,  1565,  1487,  1566,  1488,  1489,  1490,  1491,
    1609,  1492,  1493,  1494,  1495,  1496,  1567,  1568,  1497,  1498,
    1569,  1499,  1570,  1500,  1501,  1571,  1502,  1503,  1504,  1505,
    1506,  1507,  1508,  1509,  1510,  1511,  1512,  1513,  1514,  1515,
    1516,  1572,  1573,  1517,  1610,  1518,  1519,  1520,  1521,  1522,
    1523,  1524,  1525,  1526,  1527,  1528,  1574,  1575,  1576,  1577,
    1578,  1579,  1580,  1581,  1582,  1583,  1584,  1529,  1530,  1531,
    1532,  1216,     0,     0,  1034,  1053,  1054,  1062,   207,   418,
     135,     0,   387,     0,     0,   388,     0,     0,   337,   336,
       0,  1105,   342,     0,     0,     0,  1052,   101,  1551,  1420,
    1565,    99,  1032,  1053,     0,   362,   363,     0,   371,     0,
     356,   360,   357,     0,   381,   373,   382,   374,   355,   375,
     364,   354,     0,   383,     0,   358,     0,     0,     0,   208,
     173,   343,   135,     0,  1127,  1128,  1126,  1117,  1122,  1129,
    1130,     0,  1113,     0,  1051,  1172,  1171,  1170,   162,  1081,
    1201,  1567,  1497,  1214,  1202,  1199,  1200,   209,   485,   483,
       0,  1008,  1329,  1365,  1457,  1468,  1567,  1147,  1151,     0,
     206,  1572,  1206,     0,  1207,  1056,     0,   457,   614,  1055,
    1028,  1183,     0,  1188,     0,  1434,   461,   464,  1071,   462,
     453,     0,     1,   135,     0,     0,     0,   482,   482,     0,
     482,     0,   445,   453,   448,   452,     0,  1121,  1197,  1211,
    1567,  1497,  1205,  1208,  1337,     0,     0,  1337,     0,  1337,
       0,  1337,     0,     0,  1000,     0,  1001,  1035,  1083,  1084,
    1082,     0,  1085,   310,   341,   340,   339,   338,   343,  1337,
    1089,  1066,     0,     0,     0,     0,     0,     0,  1100,   102,
     100,   369,   370,     0,   361,   359,     0,  1063,  1611,   666,
    1612,   695,   673,   695,   695,  1613,  1614,  1615,  1616,   662,
     662,  1303,   675,  1617,  1618,  1619,  1337,  1620,  1621,   663,
     664,   700,  1622,  1623,  1624,  1625,  1626,     0,     0,  1627,
     695,  1628,   662,  1629,  1630,   667,  1631,   636,     0,  1632,
     665,   637,  1633,   703,   703,  1634,   690,  1635,   380,     0,
     384,   648,   649,   650,   651,   676,   677,   652,   682,   683,
     687,   653,   735,   662,  1064,  1065,  1337,   380,   376,  1337,
     380,  1030,  1337,     0,     0,   169,     0,  1119,  1131,  1636,
    1637,  1638,  1639,  1641,  1640,  1642,  1643,  1644,  1645,  1646,
    1647,  1648,  1649,  1650,  1653,  1651,  1652,  1654,  1655,  1656,
    1657,  1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,  1666,
    1667,  1668,  1669,  1670,  1671,  1672,  1673,  1674,  1675,  1676,
    1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,
    1687,  1145,     0,  1146,  1136,  1125,  1132,  1133,   135,   417,
    1116,     0,     0,     0,     0,  1203,     0,     0,     0,  1037,
    1039,  1040,   931,  1050,  1003,     0,  1534,  1535,  1536,   993,
       0,  1537,  1538,  1539,  1587,   865,   852,   861,   866,   853,
     855,   862,  1540,  1541,   803,  1542,  1543,  1048,  1544,  1545,
    1546,  1548,  1549,  1550,   857,   859,  1552,  1553,     0,  1049,
    1555,  1556,  1401,  1558,  1559,  1561,  1562,   863,  1564,  1566,
    1567,  1568,  1569,  1570,  1047,  1571,   864,  1573,     0,     0,
       0,  1019,   948,     0,     0,     0,  1003,   836,     0,     0,
     656,   657,   678,   679,   658,   684,   685,   659,     0,  1013,
     736,   881,  1003,   848,   909,   779,     0,   834,   828,   468,
    1009,     0,   829,  1036,  1003,   994,   468,  1007,  1150,  1148,
    1154,  1149,     0,     0,     0,     0,     0,   616,   615,  1029,
    1182,  1180,  1181,  1179,  1178,  1185,     0,  1187,  1122,   945,
       0,   994,   463,     0,     0,     0,   443,   442,     3,     0,
       0,  1190,     0,   480,   481,     0,     0,     0,     0,     0,
       0,     0,     0,   563,   502,   503,   505,   560,   564,   572,
       0,   449,     0,  1071,  1209,     0,     0,     0,   122,   122,
       0,     0,     0,     0,     0,    93,    42,    86,     0,     0,
       0,     0,   187,   200,     0,     0,     0,     0,     0,   197,
       0,     0,   180,    44,   174,   176,     0,   122,     0,    40,
       0,     0,     0,    46,  1052,     0,  1585,  1586,  1587,  1588,
    1589,   866,     0,  1591,  1592,  1593,  1594,  1595,  1596,  1597,
    1598,  1599,  1600,  1551,  1602,  1603,  1604,  1605,  1606,  1607,
    1565,  1609,  1571,     0,  1610,     0,   840,   951,   488,   949,
    1072,     0,  1053,  1059,   999,     0,  1073,  1715,  1716,  1717,
    1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,  1727,
    1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,  1737,
    1738,  1739,  1740,  1741,  1742,  1743,  1744,  1745,  1746,  1747,
    1748,  1749,  1750,  1751,  1752,  1753,  1754,  1755,  1756,  1757,
    1758,  1759,  1760,  1761,  1762,  1763,  1764,  1765,  1766,  1767,
    1768,  1769,  1770,  1771,  1772,  1773,  1774,  1775,  1776,  1777,
    1778,  1779,  1780,  1781,  1782,  1783,  1784,  1785,  1786,  1675,
    1787,  1788,  1789,  1790,  1791,   996,  1033,  1075,  1074,  1076,
    1002,     0,     0,   415,     0,     0,  1086,     0,  1067,     0,
       0,  1337,   168,  1337,   310,     0,   310,     0,     0,  1099,
    1102,   372,   368,   366,   365,   367,   694,   681,   689,   688,
       0,   671,   670,   669,     0,   668,     0,     0,   695,   695,
     693,   672,   648,     0,     0,     0,   699,     0,   697,   378,
     379,     0,   352,     0,   642,   638,     0,   708,   709,   710,
     711,   718,   719,   716,   717,   712,   713,   706,   707,   714,
     715,   704,   705,     0,   720,   721,   722,   723,   724,   725,
     726,   727,   654,   660,     0,     0,   347,     0,     0,   349,
       0,     0,     0,     0,   135,     0,   181,  1141,  1142,  1140,
       0,     0,  1124,   184,   201,  1135,  1144,  1134,  1143,  1123,
    1118,     0,  1115,   406,  1160,  1159,  1168,   163,     0,   954,
       0,   135,  1204,  1215,     0,   832,   948,   992,     0,     0,
       0,     0,     0,     0,   838,   957,     0,     0,   759,     0,
       0,     0,   972,     0,   978,     0,     0,     0,   760,   740,
     741,     0,  1018,  1025,   947,     0,   836,   945,     0,   912,
       0,  1055,     0,   830,   831,   837,     0,  1043,     0,   735,
     735,  1012,   931,     0,   928,   929,   930,     0,     0,     0,
    1006,     0,   939,   941,     0,     0,   775,   937,     0,   778,
       0,     0,     0,     0,   925,   926,   927,   919,   920,   921,
     922,   923,   924,   935,   918,   756,     0,     0,   883,   835,
       0,     0,   755,     0,     0,     0,   579,     0,  1041,  1038,
       0,   995,   579,  1162,  1166,  1167,  1165,     0,  1161,  1153,
    1152,  1157,  1155,  1158,  1156,     0,  1176,     0,  1173,   576,
       0,   465,     0,     0,  1196,     0,   129,     0,  1191,     0,
     460,   459,   489,   490,   496,   458,   541,   542,     0,     0,
       0,     0,   569,   567,   532,   506,   531,     0,     0,   510,
       0,   533,   736,   562,   447,   500,   501,   504,   446,     0,
     565,     0,   575,   563,   505,     0,  1198,  1210,     0,     0,
       0,     0,     0,  1337,     0,     0,    77,    58,   262,     0,
     121,     0,     0,     0,     0,     0,     0,     0,    85,    82,
      83,    84,     0,     0,     0,     0,   185,   186,   199,     0,
     190,   191,   188,   192,   193,     0,     0,   178,   179,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,   488,   488,   488,   846,     0,     0,   487,     0,
       0,   997,  1000,   405,   318,     0,   308,     0,     0,     0,
       0,     0,     0,   343,  1092,  1090,  1088,  1091,  1093,  1068,
       0,     0,     0,     0,   165,   167,     0,   307,   281,     0,
    1104,   389,     0,     0,  1337,  1101,   298,     0,     0,     0,
       0,   380,     0,   692,   691,   643,   639,     0,     0,     0,
       0,   385,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   380,   377,   380,  1031,     0,   380,   172,  1337,
     310,     0,  1120,  1137,   182,   202,   183,   203,   438,     0,
     412,   420,   425,   403,     0,   403,     0,   422,   426,   403,
     421,   403,   416,     0,   164,     0,  1080,     0,  1079,     0,
    1004,     0,     0,   991,   987,     0,     0,     0,     0,     0,
     958,   959,   960,   961,   962,   963,   964,   965,   966,     0,
       0,   967,     0,     0,     0,   917,   928,   929,   930,   925,
     926,   927,   919,   920,   921,   922,   923,   924,   943,     0,
       0,     0,     0,     0,     0,     0,     0,   805,     0,     0,
     828,   908,     0,   945,   977,     0,     0,     0,     0,     0,
       0,   945,   983,     0,     0,     0,  1017,     0,  1014,   781,
    1003,     0,     0,   780,     0,     0,     0,  1045,  1046,   737,
     751,   752,   753,   757,  1078,  1077,  1011,     0,  1005,     0,
       0,   738,   761,   766,     0,   984,   799,     0,   787,     0,
     774,     0,   785,   789,   762,   777,     0,   758,     0,  1006,
     940,   942,     0,   938,     0,   748,   749,   750,   742,   743,
     744,   745,   746,   747,   754,   916,   914,   915,     0,     0,
       0,   891,   782,     0,     0,   784,   783,  1329,  1365,     0,
     479,   479,   479,   467,   477,  1010,     0,   628,   488,  1019,
     628,     0,   735,   617,  1071,  1186,  1174,  1175,   946,  1070,
     135,     0,  1194,     0,     0,     0,   141,   124,     0,  1192,
       0,   157,   579,     0,  1003,     0,   494,   495,     0,   499,
    1562,  1453,     0,     0,     0,     0,   534,   570,     0,   561,
       0,  1037,   535,  1036,   536,   539,   540,   511,   571,  1026,
     573,     0,   566,   451,   450,   577,     0,    43,     0,  1337,
      60,     0,     0,     0,     0,     0,     0,   216,   253,   216,
      98,  1337,   380,  1337,   380,  1235,  1304,  1469,     0,    56,
      89,     0,   286,   115,     0,   271,   315,    79,    94,   108,
       0,     0,    45,   175,   189,   194,   111,   198,   195,  1109,
     196,   122,     0,    41,     0,   109,     0,  1107,     0,     0,
      47,   113,  1111,     0,     0,     0,     0,   950,   841,   952,
     953,   999,     0,   404,     0,   309,     0,   414,   394,   395,
     405,     0,     0,   310,  1089,     0,  1069,   105,     0,     0,
       0,     0,   301,   299,   329,     0,   306,   300,   308,     0,
       0,   257,     0,  1229,     0,     0,   390,   386,     0,     0,
       0,   661,   674,   353,   648,     0,   702,   701,   703,   703,
     648,     0,   634,     0,   646,     0,   686,   655,   728,   729,
     730,   731,   732,   733,   734,   346,   348,     0,   350,     0,
       0,   407,     0,   410,     0,   409,   413,   408,   402,     0,
     433,     0,     0,     0,     0,     0,     0,  1169,   955,   484,
     804,     0,     0,   988,     0,     0,   879,     0,   854,   856,
     869,     0,   858,   860,     0,   932,     0,     0,     0,   870,
     807,   808,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   823,
     822,   871,   907,     0,     0,   975,   976,   872,     0,     0,
     982,     0,     0,     0,   877,     0,     0,     0,     0,  1024,
     833,   946,   913,   911,   839,   735,     0,     0,     0,     0,
       0,     0,     0,   788,   776,     0,   786,   790,     0,     0,
       0,   770,     0,     0,   768,   800,   764,     0,     0,   801,
       0,     0,     0,   847,   479,   479,   479,   479,   476,   478,
       0,     0,     0,     0,  1453,     0,   600,   578,   580,   587,
     600,   605,   849,   626,   850,  1055,     0,   544,     0,  1025,
     544,     0,  1163,  1177,     0,  1195,     0,   146,   128,   148,
     147,     0,   155,     0,  1003,     0,   146,   130,     0,   149,
       0,  1194,     0,   161,   491,     0,   933,   499,     0,   493,
     538,   537,     0,   509,   568,   507,     0,   574,     0,     0,
       0,   261,     0,     0,     0,   216,     0,     0,   325,     0,
     312,    78,     0,     0,     0,    52,    97,    70,    62,    48,
      76,     0,     0,    81,     0,    74,    91,    92,    90,    95,
       0,   245,   226,   258,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   844,   845,   842,
     488,   998,   436,   437,   180,   435,   319,     0,     0,   307,
    1104,  1087,     0,     0,   104,   106,     0,   168,   310,     0,
     285,   281,     0,   279,   278,   280,     0,  1230,   173,     0,
    1225,  1103,     0,     0,  1098,   680,   645,     0,   698,   696,
     644,     0,   640,   647,   380,     0,   439,     0,   398,   434,
     423,   428,     0,   432,   430,   429,   424,   427,     0,   990,
     986,     0,   851,   956,     0,   944,   970,   969,   806,   818,
     819,   820,   971,     0,     0,     0,   815,   816,   817,   809,
     810,   811,   812,   813,   814,   821,   980,   979,   973,   974,
       0,   874,   875,   876,   981,     0,  1016,   945,  1021,     0,
       0,   910,  1044,   739,     0,     0,   767,   985,   791,     0,
       0,     0,   763,   932,     0,     0,     0,     0,     0,   772,
       0,     0,     0,   894,   889,   890,     0,     0,     0,     0,
     470,   469,   475,   600,   605,     0,   453,     0,   587,     0,
     599,   528,   598,     0,     0,   611,   609,     0,   611,     0,
     611,     0,   528,     0,   601,   528,   598,     0,   618,  1029,
     627,     0,   559,   841,  1015,   559,     0,   466,  1193,     0,
    1189,     0,     0,     0,   136,   133,   123,     0,     0,   158,
     146,   137,     0,   492,   497,   498,   508,  1027,   116,   216,
       0,     0,    59,     0,   327,   273,   305,   288,     0,     0,
       0,   217,     0,   293,     0,    51,    71,     0,    67,     0,
      96,     0,     0,     0,     0,     0,    54,    66,     0,    49,
       0,   380,   380,    57,   272,  1063,  1611,  1612,  1613,  1614,
    1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,
    1625,  1626,  1704,  1627,   223,  1628,  1401,  1629,  1630,  1631,
       0,  1632,   637,  1633,  1634,  1635,   919,   920,   221,   314,
     218,   320,   220,   222,     0,  1064,   219,   317,   112,  1110,
       0,   110,     0,  1108,   119,   117,   114,  1112,     0,   417,
     397,     0,     0,     0,  1337,     0,   103,     0,  1104,   166,
     307,     0,   335,   257,   330,     0,  1229,  1227,     0,  1224,
       0,     0,     0,   641,   635,   351,     0,   411,     0,   431,
     989,   867,   878,   968,     0,     0,     0,     0,   873,   868,
    1023,     0,  1020,   797,   795,   792,     0,   793,   771,     0,
       0,   769,   765,     0,   802,   880,     0,   896,   893,   474,
     473,   472,   471,   586,   584,     0,   589,  1055,   596,   521,
     527,   585,     0,   581,     0,   610,   606,     0,   607,     0,
       0,   608,     0,   582,     0,  1055,   583,     0,   625,     0,
       0,   885,  1042,   885,  1164,   145,   125,     0,   126,   156,
       0,     0,     0,     0,   150,   391,     0,   323,    61,     0,
     305,     0,   216,   290,   289,   292,   287,   291,   294,     0,
       0,     0,     0,     0,   274,     0,     0,     0,   237,     0,
       0,   305,     0,   311,   233,   234,   344,     0,     0,     0,
      63,    53,    50,    55,    64,     0,     0,    65,    68,   633,
      80,    73,  1704,  1711,     0,     0,     0,     0,     0,   843,
     393,   400,   180,     0,     0,   281,     0,     0,   307,   107,
       0,     0,     0,  1229,     0,     0,   213,     0,   254,     0,
     170,  1228,     0,  1217,     0,  1096,  1097,     0,     0,   399,
     824,     0,     0,     0,  1022,   794,   798,   796,   773,   882,
       0,   488,   621,     0,   624,   588,     0,     0,   516,   523,
       0,   526,   520,     0,   590,     0,     0,   592,   594,     0,
       0,     0,   629,     0,     0,     0,  1032,  1279,  1545,  1452,
       0,   543,   545,   548,   550,   549,   551,   547,   558,     0,
     519,   519,     0,     0,     0,   159,     0,   152,   152,     0,
     138,   934,     0,   216,     0,   304,   324,   252,     0,     0,
     235,     0,   242,     0,   276,   277,   275,   236,   305,   310,
     238,     0,   345,     0,    72,     0,    88,     0,     0,   316,
     120,   118,   417,     0,  1104,   257,  1224,     0,     0,   281,
     173,  1226,   270,   263,   264,   265,   266,   267,   268,   269,
     284,   283,   255,   256,     0,     0,     0,  1098,     0,   825,
       0,   826,     0,   899,   626,     0,     0,   620,     0,   514,
     512,   515,   517,   513,     0,     0,   597,   613,     0,   593,
     591,   602,     0,   633,     0,   604,     0,     0,     0,   552,
       0,   884,   886,     0,     0,   455,   454,     0,   132,     0,
     628,     0,     0,   154,   154,   140,     0,   310,   326,     0,
     296,   303,   295,     0,     0,   232,     0,   239,   334,   241,
     225,   632,     0,    75,     0,   321,   392,   396,     0,   215,
    1218,     0,  1224,   257,  1229,     0,  1221,     0,     0,  1104,
     827,   895,     0,     0,     0,   619,   622,     0,   595,     0,
       0,     0,   630,   631,   603,     0,     0,     0,   546,     0,
       0,   521,   127,   152,   131,   160,   151,   496,   153,   496,
       0,   334,   282,     0,     0,   260,   225,     0,   251,     0,
      69,    87,   322,     0,   307,  1219,   214,   171,  1222,  1223,
       0,   628,  1533,  1280,  1504,     0,   897,   900,   898,   892,
       0,   524,     0,   530,   612,   554,     0,   553,   887,   888,
     518,   154,   499,   499,   628,   251,   297,   302,     0,   240,
     243,   331,   332,   333,     0,   247,   244,   248,     0,  1224,
       0,  1094,     0,   904,   903,   902,   906,   905,   623,     0,
       0,   522,   555,   496,   143,   142,   139,   216,   259,     0,
       0,     0,   249,     0,   250,   224,  1220,  1104,     0,   525,
       0,   499,   328,   229,     0,   228,     0,   313,   246,   628,
     901,     0,   144,   227,   231,   230,  1095,   529
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    37,    38,    39,    40,  2117,  2118,  2119,  1808,   975,
    2803,  1809,   976,   977,  2121,    41,    42,  2163,  2164,    43,
    1432,   534,  1746,  1375,  2532,    45,  2072,  1751,  2076,  2675,
    2320,  2071,  2078,  2783,  2847,  2073,  1752,  2676,  1753,    46,
      47,  1504,    48,   735,    49,  1505,  1459,  1244,   995,  1449,
    1233,    50,    85,    51,  2108,  2409,  2860,  2131,  2947,  2563,
    2564,  1810,  2905,  2906,  2110,  2177,  1441,  2899,  1872,  2730,
    1814,  1797,  2565,  1881,  2685,  2442,  1811,  2351,  1873,  2549,
    2789,  1515,  1874,  2790,  2542,  1875,  1484,  1508,  2353,  2907,
    1815,  1485,  2410,  1428,  1876,  2858,  1877,   493,  2568,    52,
     526,   527,   727,  1182,   528,   708,    53,   494,  1148,   535,
      55,  1860,  2592,  2197,  2593,  1929,  1854,  1242,  1926,  1558,
    1488,  1243,   481,  1572,  2198,  2154,  1559,   536,   877,    58,
      59,    60,   573,   586,   587,  1346,  1723,  2040,   945,   560,
     561,   601,  1478,  1382,  1383,  1759,  2089,  1407,  1408,   954,
     955,  2639,  2775,  2640,  2641,  2500,  2501,  2921,  1395,  1399,
    1400,  1772,  1765,  1388,  2312,  2661,  2662,  2663,  2664,  2665,
    2666,   878,  2521,  1403,  1404,   957,   958,   959,  1412,  1782,
      62,  1727,  2047,  2048,  2049,  2290,  2291,  2305,  2301,  2506,
    2647,  2050,  2051,  2632,  2633,  2747,  2308,  2057,  2651,  2652,
    2706,  1532,   709,  1249,  1185,   711,   879,   712,  1161,   880,
    1165,   714,   881,   882,   883,   717,   884,   885,   886,   720,
    1157,   887,   888,  1176,  1204,  1205,  1206,  1207,  1208,  1209,
    1210,  1211,  1212,   929,  1626,   890,   891,   892,  2053,   893,
    1338,  1711,  2670,  2771,  2772,  2033,  2274,  2487,  2631,  2824,
    2876,  2877,   894,   895,  1289,  1290,  1708,  1333,  1334,   896,
    2412,  1336,  1619,  1288,  1285,  1038,  1039,  1250,  1599,  1600,
    1622,  1958,  1629,  1635,  1985,  1986,  1643,  1676,   897,  1583,
    1584,  1944,  1258,   898,   626,  1045,   627,  1255,  1670,   906,
     899,   900,  1282,  1283,  1999,  2249,  1648,  1778,   578,  2643,
     731,  1125,   901,   902,   903,   904,   931,   580,  1040,   474,
     723,  2848,  1138,   935,  1041,  1812,  1666,    63,   804,   631,
      64,  1136,  1496,    65,  2616,  2452,  1150,  1517,  1885,   495,
      66,    67,    68,    69,    70,   608,  1236,   537,  1237,  1238,
     792,    71,  1245,   794,   795,    72,   567,   568,  1246,  1359,
    1247,    73,   546,    74,   925,   583,   926,   928,   539,   942,
    2067,  1742,    76,    77,   554,   555,    78,    79,   569,    80,
      81,  2613,   540,  2180,  1145,   503,   476,   477,   725,  1128,
    1043,  1129
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2600
static const int yypact[] =
{
    4268,   -97,   669, -2600, -2600,   -97, 32152, -2600,   -97,    40,
    2400, 36862, -2600,  5926,   -97, 42985,   380,   218,   454,   267,
     552,   552, 42985, 42985, 37333,   -97,   247, 43456, -2600,   -97,
   21630, 34507,    12,   147, 43927, 42985,  1059,   567,    70, -2600,
   -2600, -2600, -2600, -2600, -2600,    95, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600,    81, -2600,    91,
      82,   450,   231, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600,   233, -2600, -2600, -2600, -2600, -2600, -2600, -2600, 21158,
   -2600, -2600, -2600, -2600, -2600, -2600, 37804, 42985, 38275, 34978,
   38746, -2600,    71, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600,   138, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600,   143, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600,   256,  -182, -2600,   151, -2600, -2600, -2600, -2600,
    1059, 39217, -2600,    30,   523, -2600,   398, 44398, -2600, -2600,
   42985, -2600, -2600,   685, 39217,   559, -2600, -2600, -2600, 39688,
   -2600, -2600, -2600, -2600,   517, -2600, -2600,   355, -2600,    57,
   -2600, -2600, -2600,   332, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600,   442, -2600, 49579, -2600, 44869, 45340, 45811, -2600,
     319,   680,   328, 20686, -2600, -2600, -2600, -2600,   233, -2600,
   -2600,   552, -2600,   552, -2600, -2600, -2600, -2600,   196,   343,
   -2600,   385,   660, -2600, -2600, -2600,   415, -2600, -2600,   605,
    8459,  8459, 46282, 46282,   552, 46282,   465, -2600, -2600,   -28,
   -2600,   147, -2600,   450,   415, -2600, 22102, -2600,   489,  -182,
   -2600, -2600,   103,   812, 11435, 42985,   502, -2600,   515,   502,
     540,   553, -2600,  4268,   884,   861, 34507,   673,   673,  1058,
     673,   105,   519, -2600,   189, -2600,   602, -2600, 39217, -2600,
     633,   902, -2600,   415,   994,   425,   814,  1014,  5370,  1021,
     782,  1030,   787,  6475, 11435, 30739, -2600,  -182, -2600, -2600,
   -2600,   691, -2600,   704, -2600, -2600, -2600, -2600,   680,   932,
   -2600,   719,  1185,   783, 40159, 40630, 39217,   746,  1159, -2600,
   -2600, -2600, -2600,   795, -2600, -2600,   111, -2600, -2600, -2600,
   -2600,   832, -2600,   832,   832, -2600, -2600, -2600, -2600,   770,
     770,  1003,   792, -2600, -2600, -2600,  1186, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600,   872,   779, -2600,
     832, -2600,   770, -2600, -2600, -2600, -2600, -2600, 50947, -2600,
   -2600, -2600, -2600,   452,   563, -2600, -2600, -2600,    44,   876,
   -2600,  1307, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
     887, -2600,  3337,   770, -2600, -2600,  1222,    45, -2600,  1229,
      46, -2600,  1231,  1114, 11435, -2600,  1006, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,   147, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600,   654, -2600, -2600, 28350, -2600, -2600,   328,   930,
   -2600, 28350, 11931, 50035,  1379, -2600,  1200, 42985,   954, -2600,
   -2600, -2600, -2600, -2600, -2600,   961,  1446,   166,  1451, 11435,
     973,   166,   166,   977,  1298, -2600, -2600, -2600,   153,   995,
    1007, -2600,   155,   155, -2600,  1015,  1025, -2600,   157,  1031,
    1033,  1490,  1520,    86,  1063,  1069,   779,   166, 11435, -2600,
    1076,   155,  1083,  1100,  1113,  1537,  1117, -2600,  1574,  1131,
     131,   156,  1133,  1138, -2600,  1140, -2600,   160, 11435, 11435,
   11435,  1470, 11435,  7467, 39217,  1626, -2600,  -182,  1172,   552,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,   113,  4673,
   -2600,  1196, -2600, -2600, -2600,   172, 11435, -2600,  1666,   -27,
   -2600,   162, -2600, -2600, -2600,   451,  1454,  1189, -2600, -2600,
   -2600, -2600,   180,  1589, 27408, 27879, 39217, -2600, -2600,  -182,
   -2600, -2600, -2600, -2600, -2600, -2600,   661, -2600,   233, 29753,
     699,  -182,   502, 42985, 42985,  1654, -2600, -2600, -2600, 34507,
   39217, 46753,  1323, -2600, -2600,   450,   450, 11435,   450,   139,
      22,  8955, 12427,  1533,  1428,   142,   118,  1547, -2600,  1436,
     105,   519, 11435,   515, -2600,  1486, 39217, 32623,   456,   608,
    1225,  1308,  1226,   207,  1635, -2600,  1228, -2600,  1314, 39217,
   50947,   184, -2600,  1670,   184,   184,   604,  1672,  1318,   203,
    1471,   569,  -155,  1228,  2365, -2600, 34507,    94,   652,  1228,
   39217,  1319,   730,  1228,    80, 11931,   885,   905,   303,   974,
    1126,   107, 11931,  1144,  1192,  1273,  1291,  1375,  1534,  1583,
    1586,  1597,  1600,   112,  1613,  1623,  1625,  1630,  1633,  1639,
     125,  1641,   141, 11931,  1652,  1239, -2600, 29753,   -72, -2600,
   -2600,  1657,   137, -2600, 25994,  1232, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600,  1327, 42985,  1280,   447,  1587,  1645, 30739,  1247,  1601,
   39217,  1475,  2365,  1477,  1256,  1712,   704,  9451,  1716, -2600,
   47224, -2600, -2600, -2600, -2600, -2600, -2600,  1263, -2600, -2600,
   11435, -2600, -2600, -2600,  1745, -2600, 50035, 50035,   832,   832,
   -2600, -2600,  1721,  1350,  1351,  1745, -2600,  1745, -2600, -2600,
   -2600, 50035, -2600, 42985,  1271,  1272,  1745, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600,  1745,  1352, -2600,  1354,  1357,  1361, -2600,
   -2600, -2600, -2600, -2600, 42985, 42985, -2600, 42985, 42985, -2600,
   42985, 42985,   709, 41101,   328, 35449, -2600, -2600, -2600, -2600,
     352,   798, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, 30739, -2600,  1188, -2600, -2600, -2600,  1278,   716, -2600,
     731,  1059, -2600, -2600, 11435,  -182, 11435, 29753,  1326, 11435,
   11435,  1285,  1745,  1745, -2600,  3808,  1745,  1745,  4973, 11435,
   24937, 11435, 15899,  9947, 11435, 11435,  7963, 11435,  4973,  1765,
    1765, 23046, -2600,  1440,  1286,  1290,  2318,  5544,  1292, -2600,
     518, -2600,  1288, -2600,  -182,  -182, 11435, -2600, 11435,  3905,
    3905, -2600,   171, 50035, 11435, 11435, 11435, 11435, 30268,  1378,
      75, 42985, 11435, 11435,  1299,   756, -2600, 11435,  1516, -2600,
    1301, 11435,  1383,   178, 11435, 11435, 11435, 11435, 11435, 11435,
   11435, 11435, 11435, -2600, -2600, 17373,   174,  1617,  1643,  -182,
   11435,  -117,   188, 11435, 35920,  8459,  1636,  6475, -2600,  -182,
   26466,   152,  1636, -2600, -2600, -2600, -2600,   163, -2600, -2600,
   -2600, -2600,  1278, -2600,  1278,  1312, 39217,   103, 34036, -2600,
   11435, -2600,   735,  1316,  1376,    -2,  1775, 42985, -2600, 23518,
    1602, -2600,  1328, -2600, 28817,  1602, -2600, -2600, 16381,  1448,
    1593,  1538, -2600, -2600, -2600,  1331, 29753, 12923, 12923, -2600,
     675, 29753,  1322, -2600, -2600, -2600, -2600, -2600, -2600,    26,
   -2600, 39217,    -9,  1533,   118,   749, -2600, -2600,  1168,  1333,
   47695, 42985,  1614,  1567,  1616,  -158, -2600, -2600, -2600, 50035,
   -2600, 42985, 42985, 48166, 48637, 31210, 42985, 30739, -2600, -2600,
   -2600, -2600, 42985,    76, 42985,  6026, -2600, -2600, -2600,   184,
   -2600, -2600, -2600, -2600, -2600, 42985, 42985, -2600, -2600,   184,
   42985, 42985,   184, -2600,  1507, 42985, 42985, 42985, 42985,  1754,
   42985, 42985,   -42,   -42,  1548, -2600, 10443,  1346, -2600, 11435,
   11435, -2600, 11435,  1519, -2600,   755, -2600,  1561,    52,  1409,
   39217, 39217, 42985,  1622, -2600, -2600, -2600, -2600, -2600, -2600,
   30739,  1369,  1370,  1708, -2600,  2365,  1713, 33094,   583,   395,
    1410, -2600,   761, 11435,  1598, -2600, -2600,  1584, 11435,   767,
    1377,    44,   785, -2600, -2600,  1381,  1272,  1397,  1398,  1382,
    1384, -2600,   822, 50035,  1745,    77,  1386,  1387,  1419,   642,
     696,  1317,    45, -2600,    46, -2600,  1592,   114, -2600,  1612,
     704,  1844, -2600, -2600, -2600, -2600, -2600, -2600, -2600,   839,
   20214, -2600, -2600,  1847,   552,  1847,   648, -2600, -2600,  1847,
   -2600,  1847, -2600, 28350, -2600, 11931, -2600, 50035, -2600,   841,
   -2600,  1395, 11435,    42, -2600, 28895,   852, 11435,  1394,  1396,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,  1399,
    1718, -2600,  1403,  1404,  3161, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,  1405,
    1406, 28941,  1412, 15899, 15899,  7467,  1079, -2600, 15899,  1414,
   -2600, -2600,   857, 28835,  1286,  1415, 29059, 10939, 11435, 10939,
   10939, 29380,  1286,  1416, 29424, 42985, -2600, 13419, -2600, -2600,
   -2600, 11435, 39217, -2600, 11435,   866,  5772, -2600, -2600, -2600,
    2861,  2861,  2861,  4973, -2600, -2600, -2600,  1427, -2600, 15899,
   15899, -2600,  1345,  1856,  7467, -2600, -2600,  1720, -2600,   848,
   -2600,  1411, -2600, -2600,  2936, -2600, 24937, 29800, 11435,   109,
   -2600, 11435,  1299, 11435,  1499,  2861,  2861,  2861,   268,   268,
     181,   181,   181,   810,   188, -2600, -2600, -2600,  1420,  1421,
    1422,  1627, 29753,  1117, 11435, -2600, 29753,   641,   684, 39217,
    2963,  3473,  4519, -2600, -2600, -2600, 18798,  1465,   -72,  1470,
    1465,  1745,  3905, -2600,   515, -2600, -2600, -2600, 29753, -2600,
    1059, 18798,  1466,  1478,   -90, 21630,  1638, -2600, 42985, -2600,
   42985, -2600,   -31,  1443, -2600, 11435, -2600, -2600,  1216,  1452,
    1640,  1647,   811,   811,   675,  1649, -2600, -2600,  1497, -2600,
   11435,  1329, -2600,  1338, -2600, -2600, -2600, -2600,  1439, -2600,
   -2600,  1699, -2600, -2600, -2600, -2600,  1529,  1228, 11435,  1673,
   -2600,   115,  1456,  1791,  -141,  1746, 42985, -2600,  1658, -2600,
     528,  1797,   114,  1800,   114, 30739, 30739, 30739,   867, -2600,
   -2600,   552, -2600, -2600,   880, -2600,   229, -2600, -2600, -2600,
    1540,   769,  1228,  2365, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600,   127,   818,  1228,  1543, -2600,  1544, -2600,  1546,   860,
    1228, -2600, -2600,  1484,  1485,  1488, 11931, -2600, -2600, 29753,
   29753, 29753,  1467, -2600,   106, -2600, 42985, -2600, -2600, -2600,
    1519, 39217,  1472,   704, -2600,   914, -2600,   552, 42985, 39217,
   39217, 39217, -2600, -2600, -2600,  1492,  1487, -2600, 50035,   -55,
    1704,  1703, 42985,  1541,  1226,  1950, -2600, 29753,  1840, 39217,
     882, -2600, -2600, -2600, -2600,  1745, -2600, -2600,  -149,  -149,
   -2600, 42985, -2600,  1503, -2600,  1506, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, -2600, -2600, 42985, -2600,  1846,
    1059, -2600, 30739, -2600, 33565, -2600, -2600, -2600, -2600,   552,
   -2600,   552,  1725, 42985, 26937,   552,   552, -2600, -2600, -2600,
   -2600, 29450, 11435, -2600,  1860, 50035, -2600,  5791, -2600, -2600,
   -2600, 11435, -2600, -2600, 11435, -2600, 24937, 11435,  1834, -2600,
    1993,  1993,  5544, 50035, 15899, 15899, 15899, 15899,   524,  1083,
   15899, 15899, 15899, 15899, 15899, 15899, 15899, 15899, 15899, 16877,
     302, -2600, -2600, 11435, 11435,  1843,  1834, -2600, 50035,  1517,
    1286,  1518,  1524, 11435, -2600, 50035,   896,  7467, 29513, -2600,
    -182, 25416, -2600, 29753, -2600,  3905, 11435,  1799,  2354, 11435,
     903, 11435,  1839, -2600, -2600,  1528, -2600, -2600, 50035, 11435,
    1536,  3307, 15899, 15899,  4057, -2600,  4241, 11435,  7467, -2600,
    1548,  1570, 23990, -2600,  1634,  1634,  1634,  1634, -2600, -2600,
   39217, 39217, 39217, 19270,  1842, 18326, 41572,  1526,   947, -2600,
   41572, 42043, -2600,  1549, -2600,  -182, 11435,  1851,  1542,  1440,
    1851,  1550, -2600, -2600,  1551,  1526, 11435,  1691, -2600, -2600,
   -2600,  1605, -2600,   907, -2600,  1951,  1691, -2600,   911, -2600,
   23518,  1466, 11435,  -182, -2600,  1555, -2600,  1452,   130, -2600,
   -2600, -2600,  1755, -2600, -2600, -2600, 39217, -2600, 42985, 25434,
    1896, -2600, 42985, 42985, 42985, -2600, 42985,   912,   617,  1557,
   -2600,   617,  1882,   289,  1226,   203,  2051,   -12, -2600, -2600,
   -2600,  1642, 42985, -2600, 42985, -2600, -2600, -2600, -2600, -2600,
   31210, -2600, -2600, -2600, 30739, 24465, 30739, 42985, 42985, 42985,
   42985, 42985, 42985, 42985, 42985, 42985, 42985, -2600, -2600, -2600,
    1548, -2600, -2600, -2600,  -155, -2600, -2600,   106,  1565, 33094,
    1410,  1645, 42514,  1572,  1562, -2600,   917,  2365,  1578,  2028,
   -2600,   583, 33094, -2600, -2600, -2600,  1995, -2600,   319,   144,
   -2600, -2600,  1059, 42985,  1646, -2600,  1272,  1591, -2600, -2600,
    1272, 50035, -2600, -2600,   114, 39217, -2600,   919, -2600, -2600,
   -2600, -2600, 42985,  1581, -2600,  1581, -2600, -2600, 11435, 29753,
   -2600,  1595, -2600, 29753, 25455, -2600, 29753,  1843, -2600,  1367,
    1367,  1367,  2372,  1910,   182,  1594,  1367,  1367,  1367,   246,
     246,    78,    78,    78,  1993,   302, 29753, 29753, -2600, -2600,
    1604, -2600, -2600, -2600,  1286,  1609, -2600,  5089, -2600,   923,
   42985, -2600, -2600,   292, 11435, 11435,  1345, -2600,  4374, 11435,
   50035,   925,  1345,   222, 11435,  3474,  4552, 11435, 11435,  4598,
   25494,  1610, 11435, 49108, -2600, -2600, 39217, 39217, 39217, 39217,
   -2600, -2600, -2600, 41572, 42043,  1603, 17853,   947,  1611, 39217,
   -2600,  1682,  1606, 18798,  1873,  1801, -2600, 18798,  1801,   554,
    1801,  1886,  1682, 22574, -2600,  1682,  1615,  1819, -2600,   550,
   29753,  2055,  1929,   552, -2600,  1929,   552, -2600, 29753,  8459,
   -2600,  1059,  1050, 42985,  -182,   -76, -2600,  1632, 42985, -2600,
    1691, 29753, 24937, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   42985,   931, -2600,   942,   617, -2600,  1660, -2600,   165,  1916,
       7, -2600, 30739,  3612,   690, -2600,  1928,  1848, -2600,   184,
   -2600, 11435,   690,  1849,    87, 42985, -2600, -2600,  3841, -2600,
   50035,   114,   114, -2600, -2600,  1624,  1653,  1659,  1661,  1662,
    1663,  1668,  1671,  1676,  1680,  1681,  1683,  1684,  1690,  1692,
    1694,  1696,   872,  1697, -2600,  1700,  1555,  1701,  1702,  1705,
   50491,  1706,  1707,  1709,  1711,  1714,   352,   798, -2600, -2600,
   -2600, -2600, -2600, -2600,   719,  1719, -2600,  1667, -2600, -2600,
    1710, -2600,  1717, -2600, -2600, -2600, -2600, -2600,  1631,   930,
      48, 42985,  1648,  2082,  1858,  1651, -2600,   552,  1410, -2600,
   33094,   570,   533,  1703, -2600,   235,  1541, -2600,  2030,  1686,
    1867, 42985,  1674, -2600, -2600, -2600,  2114, -2600, 33565,  1581,
   29753, -2600, -2600, -2600, 15899,  1984,  1675, 50035, -2600, -2600,
   -2600, 11435, -2600,  1345,  1345,  4374,   944, -2600,  1345, 11435,
   11435,  1345,  1345, 11435, -2600, -2600, 25540,  1861, -2600, -2600,
   -2600, -2600, -2600, -2600, -2600, 31681, 41572,  1723, -2600, 36391,
   -2600, -2600, 42985,   947, 18798, -2600, -2600,   935, -2600, 18798,
    1973, -2600, 18798, -2600, 42985,  1724, -2600, 42985, -2600, 13915,
   11435,  1744, -2600,  1744, -2600,  1189, -2600,   -90, -2600, -2600,
    2118, 19742,  2069, 11435, -2600, -2600,  1727,   617, -2600,  1878,
    1660,  1729, -2600, -2600, -2600, -2600, -2600, -2600, -2600,   946,
    1730, 42985, 42985, 15899, -2600,   690,   200,   214, -2600,  1991,
   39217,  1660,  2140, -2600, -2600, -2600, -2600,  2107,  2188,  2077,
   -2600, -2600, 29753, -2600, -2600,  1745,  1745, -2600, -2600,  2155,
   -2600, -2600, -2600, -2600,   719,   274, 24465, 42985, 42985, -2600,
   -2600, -2600,  -155,  2110,   948,   583,  1059,  2079, 33094, -2600,
    2197,  1743, 42985,  1541,   136,   136, -2600,  1884, -2600,  1885,
   -2600, -2600,   175, -2600, 39217, -2600, -2600, 19742,  1059, -2600,
    4609, 15899, 50035,   959, -2600, -2600,  1345,  1345,  1345, -2600,
    2183,  1548, -2600,   964,  2202, -2600, 42985,   -54,   -57,  1753,
    1757, -2600, -2600,   971, -2600, 11435,  1761, -2600, -2600, 18798,
     935,   984, -2600, 50035, 42985,   986, 50035,  1762,  -116,  1766,
    6971,  1750, -2600, -2600, -2600, -2600, -2600, 29753, 29753, 42985,
    1812,  1812,  1817, 42985, 11435, -2600,   988,  2186,    55,   -38,
   29753, -2600, 39217, -2600, 30739, -2600,   617, -2600, 30739, 11435,
   -2600,   862,  2372,  2224, -2600, -2600, -2600, -2600,  1660,   704,
   -2600, 42985, -2600,  2078, -2600, 42985,  1830,   307,  1845, -2600,
   -2600, -2600,   930,   552,  1410,  1703,  1686, 39217,  1059,   583,
     319, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600, -2600,
   -2600, -2600, -2600, -2600,  2200,  1985,  2204,  1646,   996,  4609,
    1005, -2600, 11435,   194,  1549, 31681,  1779, -2600,  1012, -2600,
   -2600, -2600, -2600, -2600, 42985,   826, -2600, 29753, 42985, -2600,
   -2600, -2600, 42985,  2155,  1026, -2600, 11435,  1782, 11435, -2600,
   13915,  1780, -2600,  2237,  1922, -2600, -2600,  1059, -2600, 25771,
    1465, 19742, 42985, 42985, 42985, -2600,  1917,   704,   617,  1038,
   -2600,  1809, -2600, 25855,  2007, -2600,  2103, -2600,  2047, -2600,
    1802, -2600, 11435, -2600,  1874, -2600, -2600, -2600,  2261, -2600,
   -2600,  1811,  1686,  1703,  1541,  2014, -2600,  2017,  1813,  1410,
   -2600,  1286, 14411, 14411,  1814, -2600, -2600, 42985, -2600,  1040,
    1818,  1052, -2600, -2600, -2600,  1061, 13915,  1081, -2600, 42985,
    1820, 36391, -2600,  2186, -2600, -2600, -2600,   206, -2600,   206,
   23518,  2047, -2600, 30739, 24465,  2049,  1802,    68,  2033,  2365,
   -2600, 29753, -2600,  1059, 33094, -2600, -2600, -2600, -2600, -2600,
   19742,  1465, 15403,  1962,    73, 28856, -2600, -2600, -2600, -2600,
    1089, -2600,  2310,  1983, -2600, -2600,  1093, -2600, -2600, -2600,
   -2600, 42985,  1452,  1452,  -171,  2033, -2600, -2600,  2124, -2600,
   -2600, -2600, -2600, -2600,    98,  2042, -2600,  2043,   805,  1686,
    1094, -2600,  2295, -2600, -2600, -2600, -2600, -2600, -2600,  1838,
    1841, -2600, -2600,   206, -2600, -2600, -2600, -2600, -2600,   120,
     120,  2212, -2600,  1902, -2600, -2600, -2600,  1410, 14907, -2600,
    2325,  1452,   617, -2600,  2313, -2600,   167, -2600, -2600,  1465,
   -2600,  1852, -2600, -2600, -2600, -2600, -2600, -2600
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2600, -2600, -2600,  1751, -2600, -2600, -2600,   228, -2600,   906,
   -2600,   220,  -543,   556, -2600, -2600, -2600, -2600, -2600, -2600,
    -926,    11, -2600, -2600, -2600, -2600,    31,   272, -2600,  -428,
   -1848,  -170, -2600, -2425, -2486, -2600,  -492, -2426, -1677, -2600,
   -1110,   192, -2600, -2095, -2600,  -617,  -968,  -781,  -973, -2600,
      -4, -2600,  1086, -1098, -1760, -2396,  -495, -2600,  -567, -2600,
    -325, -1752,  -540,  -527, -2600, -2333,  -935, -2600,  1402,  -232,
   -2600,   580, -2600, -2084, -2600, -2600,   571, -2600,  -933, -2600,
   -2600, -1839,   204,  -471, -2292, -2090,   529,  -618, -2600,  -526,
     250, -1724, -2600,   595, -2600,  -456, -2600,  -509, -2135, -2600,
   -2600, -2600,  1183,  -666, -2600,  1233, -2600, -2600, -2600,    27,
   -2600, -2600, -2600, -2600, -2600,  -589,   538, -2276, -2600,   478,
   -2600, -2600, -2600, -2600,   -52,   251, -2600,     5,   116,   -34,
     -15,   -11,    33,    39,  1474,  1505, -2600, -1016,   507, -2600,
   -2600,  -600,   -56, -2600,   657, -2583, -2040,  -460,  1001,  1462,
    1464,  -336,  -249, -2600,  -418, -2600,  -713, -2600, -2600,   659,
    1036, -1284, -1281, -2600,   372,  -403,  -329, -2600, -2600, -2600,
   -2600, -2600,   129,  -454,  1029, -2600,  1491, -2600, -2600, -2600,
   -2600, -1254,   708, -1989,   405, -1959, -1854,   169,   158, -1122,
    -199,    34,   411,  -286, -2600, -2600,  -284, -1705, -2358,  -300,
    -299, -2600, -2600,  -444, -1130,  -691, -2600, -2600,   440,   -64,
   -2600, -2600, -2600,    35,   305, -2600, -2600,   922,  1368, -2600,
    -563,  2000,  -479,  -685,  1201, -1044,  1202, -1099, -1068,  -549,
    1203,  1204, -1237,  3181, -1384,  1305,    14, -2600, -2386, -1300,
   -2600, -2600,   -53, -2600,  -367, -2600,  -365, -2600, -2600, -2600,
    -345, -2599, -2600,  1139,   827, -2600, -2600, -1239, -2600,  3667,
     724, -2600, -1618,  -561,  1227,  -724,  -966, -1139, -2600, -2600,
   -2600, -2600, -2600, -2600, -1559, -1768,  -568,   793, -2600, -2600,
     901, -2600, -2600, -1012,  -591,  1004,  -562,  -844,   799, -2600,
    -551,  1145, -2600,   762, -1900, -2600,   433, -2600,  2517,  -519,
     960, -1004,    24, -2600,  2642,   883,  1571,  -862, -2081, -2600,
   -2600,  -474, -2182,  -912, -2600,  -612, -2600, -2600, -2600, -1163,
   -2600,   629, -2600, -1096, -2600,  -243, -2600, -2600, -2101, -2600,
   -2600, -2600, -2600, -2600, -2600,  -431, -2600,  -462,  -475, -2600,
   -2600,     2,  -789,  1270, -2600, -2600,   622, -2600,   924, -2600,
     789, -2600,  2479, -2600,  1134, -2600, -2600, -2600,    29,  1568,
     427, -2600,  1147, -2600, -2600, -2600, -2600, -2600,   816, -2600,
   -1095, -2492,    66, -2338, -1179,    -6, -2600, -2600, -2600,  -524,
   -2600, -2078
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1715
static const yytype_int16 yytable[] =
{
     475,   994,   591,   602,   960,    56,  1239,  1172,   730,   797,
     907,    44,  1292,  1126,  1232,  1133,   642,   919,   538,  1178,
     471,  1463,   736,   930,  1462,  2060,  1494,    54,  1522,    75,
     472,  1618,  1294,    61,  1427,   572,  1130,  1438,  1495,  2111,
    1497,  1498,  1526,  1434,  1551,   722,   604,  2333,  1339,    61,
     605,  1416,   728,  2126,  2414,  2128,  2287,  2416,   791,  2433,
    1349,  1216,  1657,  1658,  1219,   577,    82,  1474,  2020,  2432,
     737,  1467,  2107,  2079,   589,   993, -1060,   999,  1248,  1003,
     710,  -441,  -444,  2446,   612, -1060,   813,  2443,  1578,  1963,
     479,  -700,  2304, -1057, -1057,  -700,   813,  2248,  1730,   967,
    1158,  1159,  1179,  1179,  1179,   968,   920,   798,  2610,  2634,
    2606,   544, -1590,  1743,  1774,  1668,    57, -1601,   544,  1777,
   -1693, -1693,   813,   620,  2546, -1704, -1704,  1170,  2782,  1134,
   -1608,  1356,    57,  1499,     3,     4,  -703,  1726, -1711, -1711,
     913,   953, -1061, -1601,  2166,  2677,    57,   956, -1608,  1668,
   -1058, -1058,   590,  2590, -1713, -1713, -1061, -1035, -1590,  2655,
    -662,  -703,  -675,  2722,   653,  -690,  1594,   544,   544,  1430,
    -401,  -695,  1179,  1222,  -441,  -444,  1178,   603,  2943,  1942,
    1465,   581,  1419,  1353,  1226,   544,  1344,  1340,  1226,   813,
    2709,  2738,  1303,   813,  1152,    57,  2302,  1595,  -917,  1303,
    1447,  1705,  1430,  1450,  1451,  -917,  2530,  -180,  1706,  2203,
    2205,   969,  -180,  2139,  2723,   594,   599,  2238,  2929,   722,
    1858,  1592,  1309,  2724,  2810,  2173,  1689,  2573,  2326,  1309,
    2785,  2677,  2585,  1713,  2734,  2914,   597,  2901,  1153,  1960,
    1961,  1389,  2735,  1756,  1980,  1389,   599,  2751,  2683,  -936,
    2749,  2447,  2725,  2784,  1311,  2767,  -936,  1963,  1158,  1159,
    1630,  1311,  1780,   949,  2892,  2721,  2893,  2345,   950,  2700,
     921,   797,   922,  2912,   558,  1795,   949,   797,  2056,  1303,
    1422,  1472,  2954,  2543,  1170,  2007,  2008,  1390,  1473,  1446,
    2334,  1390,  1795,  1744,  2752,  1354,  2764,  1457,  2849,  1386,
     949,   595,   598,  1303,  2503,  1173,   624,  2069,  2507,  1309,
     625,  1284,  2465,  1963,    83,  1295, -1690, -1690,  2694,  2584,
    2865,  1458,  2726,  2080,   722,  2304,   541,  1174,  1130,  2115,
    1757,  2696,  1796,  2727,   597,   951,  1240,  2600,  2215,  2950,
    2941,  1311,  2070,  1351,  2450,  2344,  1391,  -488,   951,  2104,
    2601,  1690,  -488,  2335,  2544,  2607,  1554,  2368,    84,  2634,
      26,   813,   970,  -441,  -444,  1311,  1691,  1781,  2902,  1351,
    2608,  1692,   951,  1714,  -556,   543,  1630,   559,  2341,   599,
    2343,   914,  2809,  2915,   952,  2944,  1180,  1180,  1180,  2695,
     797,   797,   681,  2786,  1392,  2677,    31,   952,  1392,  2217,
     598,  1415,  2707,  1387,  2355,  2923,  2797,  1693,  2736,  2448,
    1154,     3,     4,  1355,  2531,  1372,   972,  2936,  2891,  -488,
    2693,   531,  1476,  1512,  -441,  -444,  2054,  2239,  2753,  2493,
    1424,  2750,   634,  1357,   635,  1437,  2806,    33,  1477,  2955,
    1909,  2054,  2547,  2903,  2910,   973,  1439,  1618,   967,  2463,
      34,   915,  1575,  1393,   968,   654,  1180,  1393,  2897,  2466,
     713,  1859,  2945,  2080,   807,  1341,  1261,  1345,  -488,  2880,
    1669,  1910,  1912,   531,    35,  2356,  2867,   599,  2459,  1774,
    2866,  2591,  2535,  2092,  2677,   630,  2697,  1790,  1745,  2946,
    1582,   628,  2152,  2153,  1908,  2062,  1866,  1368,  2081,   591,
    1413,   722,   582,  1466,  2022,  2414,  1414,   629,  2416,   632,
    1847,  2715,   974,    61,  1155,  2644,   600,  2822,   724,  2086,
    2648,  2728,   542,  2650,  2729,  1126,   596,   796,  1510,  2930,
     480,  1430,  1463,  -441,  -444,   793,  2140,  2635,  1181,  1215,
    1218,  1425,  1431,   624,  1882,  2823,   923,   625,   961,  2609,
    -917,  2112,  1694,  1707,   475,   475,  2357,   544,   604,   715,
     969, -1060,   605,   593,  1978,    61,  1904,   592,  2575,  2576,
   -1060,  2624,  -441,  -444,  -441,  -444,  -700,  2064,   475,  2537,
    2219,  2220,  2221,  2222,   924,  1173,  2226,  2227,  2228,  2229,
    2230,  2231,  2232,  2233,  2234,  2235,    57, -1590,    56,  1519,
    2548,  -936, -1601,  1298,    44,  1523,  1524,  1174,  1156,  1847,
    1173,  1630,  1630,  2808,   600, -1608,  1630,  1042,   475,  1127,
      54,  1175,    75,  1728,   932,  2814,    61, -1061, -1601,  1560,
     941,  1277,  1174, -1608,   713,  2813,  1440,   584,  2265,  2266,
     624, -1061, -1035, -1590,   625,  1160,  1177,  1164,    57,   590,
    -690,  2534,  1347,  1731,  2223,  1457,  -695,  1630,  1630,    82,
    2759,  1230,  1231,  2113,  1580,  1230,  1231,  1332,  1824,  1327,
    1328,  1329,  1330,  1331,  1332,   801,   607,  -487,  1827,  1458,
    2604,  1830,  -487,  1430,  -180,  -180,   802,   722,   722,   603,
      26,  2169,   724,  1579,  1433,  1284,  1665,  1437,  1544,  1586,
     943,   797,   722,  1580,  1130,  2041,  2042,  2594,  2135,    57,
    1452,   970,  1632,  1634,  2536,  1642,  1596,  1618,  2871,  2602,
    2566,  2136,   710,  2295,  1295,   606,    31,  2605,   475,  1975,
    1976,  1977,  1978,   715,  2347,  1655,   638,  1531,  1126,   713,
     728,  1543,    26,  2054,  2567,  2054,   623,  1547,  1580,  -487,
     791,  1329,  1330,  1331,  1332,   648,  2296,    26,  1580,  2708,
    1130,   971,  1552,   651,  2186,   972,  1500,    33,  2252,   652,
    2190,  1927,  2509,  2414,  2601,  1489,  2416,   655,    31,  1925,
      34,  2298,  2686,  1973,  1974,  1975,  1976,  1977,  1978,   796,
    1292,  2224,  2804,    31,   973,   796,  1042,   724,  -487,  1500,
     656,  2225,  1556,   944,    35,   967,  2000,   813,  1439,   734,
     967,   968,    26,   475,   970,  2090,   968,  2348,    36,    33,
     813,  1303,  2063,   532,   722,  1816,  1189,  1190,  1823,   716,
    2637,    61,    34,   803,    33,  2638,  2949,  1671,   715,   591,
     556,   980,   475,  1168,  1169,  1490,   574,    34,    31,  1453,
    1463,  1309,  2924,  2925,   483,  1893,    35,  1454,   805,  1659,
     981,   974,   475,   475,   475,    86,   475,   475,  2114,  2115,
     533,    35,  1843,  1844,  1845,  1787,  1915,   806,  1916,  2261,
    2150,  1918,  2349,  1311,  2350,    36,  1677,   808,  1126,    33,
     475,  1439,  1491,  1195,  1196,   613,  2086,  2116, -1688, -1688,
    2300,  2952,  1822,   545,   545,  2141,  1173,   807,   796,   796,
    2083,   982,  1678,   484,    57,  1932,   713,   969, -1689, -1689,
    1933,  1833,   969,  2788,  1461,   636,  1840,   637,  1174,  2550,
    1380,  1381,    26,  1385,   605,   605,  2792,   605,   912,   624,
      36,   475,  1175,  1350,  2174,   475,   475,  1195,  1196,  2181,
     722,  1264,  1630,  1630,  1630,  1630,   475,  1890,  1630,  1630,
    1630,  1630,  1630,  1630,  1630,  1630,  1630,  1630,    31,  1439,
    1934,   501,   918,   941,   724,   530,  1931,  2553,  2012,   927,
    1935,  1825,  1936,   549,  1865,  1798,  1828, -1691, -1691,  1286,
    1911,  1913,  1914,  2054,   588,   588,   933,  2054,  1440,  1042,
     983,  1199,  1200,   716,  2013,   934,  1042,  1468,  1439,    33,
    1630,  1630,  1652,   643,  1653,   715,  2456,  1173,  2276,  2277,
    2278,  2279,    34,  1679,    87,  1775,  1776,  1042,  1680,  2294,
    1464,   936,    88,  1681,  2555,  1879,   797,  1880,   624,  1174,
   -1035,  2294,   625,  2034,   937,  2035,    35,   616,   644,   797,
     984,  1494,   939,  1177,   722,  1199,  1200,  1439,   985,  1437,
      36,   603,   603,  1495,   603,  1497,  1498,    89,   970,  1989,
     986,  1991,  1992,   970,   940,  2844,  1642,  1990,  1642,  1642,
    2620,  1440,   488,   645,   489,  1471,  2036,   812,  2037,  1902,
    1963,    91,   962,  1618,   478,  1964,  1965,  1966,   722,  1439,
     529,   987,   713,   713,  2295,   946,   964,   948,   716,   492,
    1162,   557,   947,  2010,    90,   570,  2295,   713,   997,   965,
    2014,  2476,   972,  1001,  2138,  2015,  1996,   972,  2058,  2794,
     646,  1127,  1171,  1938,  2558,  2199,  2123,  2296,  2125, -1692,
   -1692,  1042,  1437,  2366,   966,  1224,   989,  2359,  1225,  2296,
     978,   998,  1366,  2297,   475,  1367,  1002, -1694, -1694,  1440,
     724,   724,  2298,  1213,   979,  2297,  2911,  2942,   990,  2692,
    2342,   996,  1682,  2142,  2298,   724,  2508,  2559,  2511,  2358,
    1000,  2367,  1131,  1683,   908,   909,  2429,   911,   992,  2926,
    1369,   967,  2560,  1370,  1132,  2054,  2299,   968,  1440,  1135,
    1548,   715,   715,  1370,  2054, -1695, -1695,  1574,  2299,  2054,
    1575,  1137,  2054,  2188,  2189,  2146,   715,  2645,   974,   796,
    1437,  1139,  1576,   974,  1605,  1577,  1739,   793,  1140,  1218,
    2324,  2054,  1606,  1607,  1608,  1127,  1147,  2739,  1561,   713,
    1785,  1149,   643,  1370,  2956,  2160,  1855,  1440,   475,  1856,
     475,  1151,  1886,   475,   475,  1575,   630,    61,  1891,  1437,
    1160,  1370,   628,   475,  2016,   475,   475,   475,   475,   475,
     475,   475,  1967,  1162,  1156,  2017,  1894,   644,   629,  1577,
     632,  2300,  1164,  1562,    61,   716, -1696, -1696,  2561,  1440,
     475,  1171,   475,  2300,  1968,  2562,  2935,   724,   475,   475,
     475,   475,  1127,   969, -1697, -1697,   475,   475,  1437,  1563,
    1560,   475,  2162,  1900,  1163,   475,  1901,  2054,   475,   475,
     475,   475,   475,   475,   475,   475,   475,  1564,  2623,   475,
    1921,  1565,  1939,  1922,   475,  1370,  1166,   475,   715,   475,
      57,  1042,  1184,  1946,  1127,  2527,  1370,  2086,  1982,  2054,
    1437,  1370,  1566,  1302,  2408,  1567,  1303,  2004,  2129,   646,
    1370,  2130,  1167,  1969,   475,   713,  1183,    57,  2646,   924,
    1568,  2133,  1214,  2185,  2134,   812,  1370,  1186,  1963,  1217,
    1747,  1220,   475, -1715, -1715, -1715,  1309,  2246, -1698, -1698,
    1218,   475,   475, -1715,  2257,  2366,  1221,  1370,  2322,   722,
     797,  2323,  2327,  2346,  1223,  2328,  1856,  2538,  2438,  1580,
    2457,  1856,    26,  2458,  2470,  1251,  2477,  2471,  1311,  1577,
    1241,    26,  2539,   724,   799,  1856,   800,  2498,  1252,  1127,
    1675,  1127,  2244,  2540,  1798,  2625,  1856,  2687,  1577,  2714,
    2688,  2498,  1856,  2194,  1254,  2054,   718,   910,    31,  1256,
    2741,  -666,  1630,  1577,   970,  2744,  -673,    31,  2745,   650,
    1569,  1261,  2756,  1259,   715,  1218,   722,  1260,  1570,   713,
    1042,   716,   716,   475,   475,  2761,   475,  2765,  2762,  2780,
    2762,  2054,  2781,  2740,   722,  1262,   716,  2819,   733,    33,
    2781,    57,  1580,  2309,  1127,  -663,  2820,  1263,    33,  1577,
    2085,  2211,    34,  2828,  1786,    36,  1218,   475,   972,   722,
    1571,    34,   475,   713,  1883,  1265,   722,  2834, -1715,  2218,
    2762,  -556,  1816,  -557,  2417,  -664,    35,   724,  2455,  2852,
     967,  2881,  2853, -1715,  2882,    35,   968,   973, -1715,   722,
      36,  1630,  -667,  2884,  2240,   588,  1218, -1699, -1699,    36,
    2428,  2245,  2885,  1266,   796,  1370,  1970,  1971,  1972,  1267,
    1973,  1974,  1975,  1976,  1977,  1978,  1269,   796,   715,  1042,
    2054,   724,  2887,  1270, -1715,  1370,   475,   473,  2571,  -665,
    2918,   475,   502,  2762,  2922,  2937,   502,  2770,  2781,  2513,
    1271,   591,  2516,   548,   502,   553, -1700, -1700,   553, -1701,
   -1701,   553,   579,  1272,   974,   502,   502,  1273,   716,  1630,
   -1702, -1702,   715, -1703, -1703,  2086,  1281,   475,   475,   475,
     718,  1274,   475,  1275,  2712,    57, -1705, -1705,  1276,  1320,
    1277,   475,   475,   475,   475,  1293, -1706, -1706, -1707, -1707,
     591,   475,   969, -1708, -1708,   475, -1709, -1709,   475,  1337,
     553,  1969, -1710, -1710, -1712, -1712,   722,   579,   502,   579,
     579,   579,  1296,   475,   475, -1714, -1714,  1344,   475,  2199,
    1479,  1480,  -534,  -534,  1197,  1198,  1199,  1200,  1235,  -538,
    -538,  1343,   475,  1345,  1235,   475,  1360,   475,  -537,  -537,
    1373,  2411,  1379,  1609,  1610,  1611,   950,  1612,  1613,  1614,
    1615,  1616,  1617,  1362,  1364,  2580,  2581,   952,   475,  1172,
    1409,   591,   722,  1411,  1417,  1435,  1437,  1436,  1130, -1715,
     475,  1442,  1443,  1444,  1448,   718,  1455,  1456,  1470,  1460,
    1475,  1482,  1487,  1580,   716,   475,  1483,  1492,  1493,  1500,
    2052,  1286,  1503,  1501,  1506,   630,  1507,  2454,  1509,   475,
     472,   628,  1513,  1518,   813,  2052,  1525,  1527,  1528,  1534,
    1535,  1538,  1297,  1539,   475,   472,  1540,   629,  2525,   632,
    1541,  1300,  1573,    61,  1582,  1587,  1303,   967,  1647,  1649,
    1370,   722,   475,   968,  1348,  1667,  1651,  1654,  1685,  1674,
    1286,  1686,  1688,   970,  1709,  1358,   483,  1235,  1235,  1127,
    1127,  1127,  1710,  1733,  1726,  2408,  1740,   812,  1675,  1741,
    1963,  1748,  1768,   598,   713,  1964,  1965,  1966, -1106, -1715,
    1767,  1769,  1755,  1788,  2029,  1770,  1327,  1328,  1329,  1330,
    1331,  1332,  2254,  1792,  1793,  1794,   599,  1848,   716,  1853,
    1042,  1857,  2046,  1831, -1715, -1715, -1715,   972,  1973,  1974,
    1975,  1976,  1977,  1978,  1861,   484,    57,  2046,  1869,  1867,
    1868,   590,  1884,  1870,  1302,  1888,  1889,  1303,  1892,  1895,
    1896,  1897,   724,  1898,  1917,  1899,  1832,  1906,  1907,  1919,
    1920,   713,   716,  1928,  1940,  1948,  1951,  1949,  2011,   969,
    1950,   722,   719,   588,  1952,  1953,  1955,  1309,  1956,   713,
    2006,  2018,   718,  1959, -1715,  1981,  1987,  1994,  2027,   486,
    2028,  2030,  2031,   715,  2056,  2066,  1127,  2068,   796,  2032,
    2075,   722,  2082,  -539,   713,  1883,  2579,  2088,  2094,  1311,
    -540,   713,  2093,  2096,   797,  1463,   475,  2097,  2098,   724,
    2100,  2103,  2106,   974,  2109,   475,  2102,  2122,   475,  2137,
    2124,   475,  2143,  2144,   713,  2145,  2151,   724,   475,   475,
     475,   475,  2159,   591,   475,   475,   475,   475,   475,   475,
     475,   475,   475,   475,  2271,  2147,  2148,   475,   475,  2149,
     715,  2172,   724,  2171,  2175,  2176,  2182,   475,   722,   724,
    2183,   475,  2192,  2179,   591,  2193,  2195,  2202,   715,  2009,
     475,  2210,  1984,   475,  1963,   475,  1983,  2259,  2241,  2242,
    2285,   591,   724,   475,  1968,  2243,   475,   475,  2260,  2272,
    2293,   475,   475,   715,   488,  2307,   489,  2263,  2311, -1715,
     715,  2743,  2039,  2313,  2319,  2325,    57,   475,  2336,   475,
     970,  2316,  2317,  2321, -1715,  2332,  2340,  2352,   491, -1715,
     475,   492,   579,   715,  2354,  2431,  2437,  2052,   640,  2052,
     475,   641,  2370,  2436,  2441,   579,   719,   472,  2440,   472,
     502,   713,  2791,  2408,  2445,  1856,   475,  2690,  2464,  2451,
    2453,  2798,  2499,  1969,  2467, -1715,  2461,   980,   718,   718,
    1838,  2504,  2505,  2495,   972,  2468,  2502,   641,   502,   502,
    2469,  2485,  2496,   718,  2512,  2517,   981,   722,  2518,  2519,
    2520,  2533,  2541,  1286,  2545,  2569, -1057,  2748,  2596,  2587,
    2570,  2574,  2589,  1839,  1127,  2597,  2588,   713,  1127,  2415,
    1127,   905,   905,   553,   553,  2748,   553,  2611,  2612,  2595,
    1320,  2598,  2411,   722,  1286, -1688,  2586,   579,  1601,  2614,
    2618, -1689,  2621, -1690, -1691, -1692,   502,   982,  2360,  2283,
   -1693,  2286,  2630, -1694,  2617,  2622,  2361,   579, -1695,  2851,
     715,   719, -1696, -1697,   722, -1698, -1699,   722,  1545,   579,
    1546,  2821, -1700,   716, -1701,   724, -1702,  2449, -1703, -1705,
     974,  2649, -1706, -1707, -1708,  2669,   713, -1709, -1710, -1711,
    2679, -1712,   475, -1713,  2673,  2835, -1714,  2837,  2682,  2763,
    2698, -1058,  2763,  2636,  2654,   579,   579,   579,  2681,  2684,
    2689,  2701,  2702,  2362,  2703,   718,   715,  2704,  2705,  2717,
   -1715,  2801,  2713,  2718,  2719,  2732,  2733,  2742,  2746,  2831,
    1732,  2791,  2908,  2754,  2770,  2774,   983,  2755,   475,   475,
     716,  2758,  2766,   475,   724,  2777,  2768,  1402,   475,  2782,
    2796,   475,   475,  2802,  2800,  2805,   475,  2815,   716,  2827,
    2816,  2817,  2836,  2840,  2839,  2841,  1970,  1971,  1972,  2697,
    1973,  1974,  1975,  1976,  1977,  1978,  2850,   475,  2854,  2856,
    2857,   475,  2859,   716,  2862,   715,   984,  2863,    57,  2868,
     716,  2864,  2869,  2870,   985,  2879,   713,  2052,  2846,  2883,
    2273,  2052,  2913,   475,  2898,  2904,   986,   472,  2363,  2919,
    2920,   472,  2928,   716,  2931,  2933,  2526,  2528,  2938,  2939,
   -1715,  2940,  2929,  2930,  2951,  2953,   713,  1327,  1328,  1329,
    1330,  1331,  1332,  2957,   938,  2369,  1127,   987,   719,  1818,
    2373,   718,  2329,  2845,  2529,   475,  2120,  2672,  2894,  2439,
    2577,  2900,   812,  2948,   724,  1963,  2795,  2934,  2927,  1426,
    1964,  1965,  1966,  2731,  2105,   722,  2444,  2127,  1253,  2932,
     812,  1791,  2896,  1963,  2374,  2156,  2101,  2255,  1964,  1965,
    1966,  1799,   989,  1802,  2415,  2895,  1813,  1542,  2157,  1521,
    2196,   980,  1817,   713,  1819,   715,  2619,  1371,  2430,  2046,
    2411,  1352,  2084,  2046,   990,  1784,  1826,  1406,  1405,  2830,
     981,  1829,  2776,  2890,  1764,  1834,  1835,  1836,  1837,  2095,
    1841,  1842,  2315,  2886,   992,   715,  2364,    57,    57,  2365,
     716,  2838,  1783,  1235,  2523,  1291,  2603,  1930,  1410,  2065,
    2288,  2760,   796,  2494,  2284,   718,  1235,  2510,   475,  2826,
    2825,   724,  2832,  -453,  2833,   475,  1591,  1593,  1597,  1598,
    2671,   982,  2888,   475,   475,  2889,  -453,   475,  2878,  2002,
    1715,  -453,  2087,  1581,  1943,  2025,  1852,   579,  2023,   475,
    1725,  2059,  2314,  2161,  2818,  1553,   716,  1937,   475,   718,
     547,  1735,   715,   475,   502,   502,   475,  1374,  2330,  2052,
     579,   579,  1378,   475,   475,  1737,     0,     0,  2052,   472,
       0,     0,   713,  2052,   721,   475,  2052,   475,   472,  -453,
       0,     0,     0,   472,   719,   719,   472,   579,  1429,     0,
       0,  1437,     0,     0,     0,  2052,     0,   475,  -453,   719,
     579,     0,     0,     0,     0,   472,     0,    57,   713,     0,
     983,     0,     0,     0,     0,   716,     0,   579,     0,  1968,
     482,   579,     0,     0,   483,     0,     0,  1627,     0,     0,
    2415,     0,     0,     0,     0,     0,     0,  1968,     0,   713,
       0,     0,   713,     0,     0,     0, -1106,  -453,     0,     0,
       0,  2716,     0,   615,     0,   618,  -453,   622,     0,     0,
     984,   475,     0,     0,     0,   475,   724,     0,   985,     0,
    2046,   715,     0,  2603,     0,  2046,   591,     0,  2046,     0,
     986,  2052,     0,   484,     0,     0,     0,     0,  1969,   475,
     485,   472,     0,   475,     0,     0,     0,   724,     0,     0,
     724,     0,     0,     0,   475,     0,  1969,   715,     0,     0,
       0,   987,     0,  2052,     0,     0,     0,     0,   475,     0,
       0,   719,     0,   472,     0,   716,     0,     0,  1127,     0,
       0,     0,  1127,   475,     0,     0,     0,   486,   715,     0,
       0,   715,     0,  1766,  2132,     0,     0,     0,   721,     0,
       0,     0,     0,  1486,     0,   716,   989,     0,     0,     0,
       0,   579,    57,     0,     0,     0,     0,     0,     0,     0,
       0,  1516,     0,  2812,     0,     0,     0,     0,   990,     0,
       0,     0,     0,     0,    57,     0,   475,  2155,     0,   475,
       0,     0,     0,  -453,     0,     0,     0,     0,   992,     0,
    2165,     0,     0,     0,  1533,   487,     0,     0,     0,  2052,
     475,     0,   475,     0,   475,  2046,     0,     0,     0,   472,
       0,     0,   716,     0,     0,   475,  1286,     0,     0,     0,
       0,     0,  2842,     0,     0,   641,   641,     0,   502,   502,
     713,   502,   641,     0,   579,  2052,   475,   719,     0,     0,
     718,     0,   488,   721,   489,   472,   624,  1235,     0,   936,
     625,     0,  2200,     0,  2201,     0,   475,   475,  2206,  2207,
     490,     0,     0,     0,     0,     0,   491,     0,     0,   492,
     475,  1970,  1971,  1972,    57,  1973,  1974,  1975,  1976,  1977,
    1978,  1620,  2178,     0,     0,     0,     0,  1127,  2415,  1970,
    1971,  1972,  1646,  1973,  1974,  1975,  1976,  1977,  1978,     0,
       0,     0,     0,     0,   475,     0,   475,   718,  2909,  1302,
       0,     0,  1303,     0,     0,     0,     0, -1715, -1715, -1715,
       0,     0,   641,     0,  2052,   718,     0,     0,     0,   715,
       0,   716,     0,    57,   472,     0,     0,     0,     0,     0,
       0,   719,  1309,     0,     0,     0,     0,     0,     0,  1310,
     718,     0,     0,     0,     0,   579,   905,   718,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   716,  1627,  1627,
       0,     0,   475,  1627,  1311,     0,     0,   579,     0,   579,
     718,     0,     0,     0,  1302,   719,     0,  1303,  1749,     0,
    1754,     0,     0,     0,     0,     0,     0,     0,   716,     0,
       0,   716,     0, -1493,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1627,  1627,     0,  1309,     0,    57,
     721,     0,   579,     0, -1715,     0,     0,     0,     0,     0,
       0,  1429,   502,     0,     0,     0,     0,     0,   633,     0,
       0,     0,   502,  1800,   502,  1804,     0,   502,     0,  1311,
       0,   647,     0,   502,     0,   502,     0,     0,  2413,     0,
       0,     0,     0,     0,     0,     0,   641,   502,     0,     0,
       0,   641,   502,     0,  1312,     0,   502,   502,   502,   502,
    2155,   502,   502,     0,     0,     0,     0,     0,     0,  1313,
       0,     0,     0,     0,  1314,     0, -1493,   718,  2338,     0,
       0,   579,   579,  1864,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1878,  2019,
       0,     0,  2371,     0,     0,     0,     0,     0,     0,     0,
    1317,     0,     0,   917,     0,     0,     0,  2418,  2419,  2420,
    2421,  2422,  2423,  2424,  2425,  2426,  2427,     0, -1493, -1715,
       0,     0,     0,   718,     0,     0,     0,     0,     0,     0,
       0, -1493,     0,     0, -1715,   963, -1493,     0,     0, -1715,
       0, -1493,     0,     0,     0,     0,     0,     0,     0,     0,
   -1493,     0,     0,     0, -1493,  1320,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   716,
       0,  1142,  1144,  1146,     0, -1715,   721,   721,     0,  1302,
       0,     0,  1303,     0, -1493,     0,     0,  1304,  1305,  1306,
       0,   721,   718,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1493,  1307,     0,  2522,     0,     0,  2524,
       0,     0,  1309,     0,     0,     0,     0,     0,     0,  1310,
       0,     0,     0,     0,     0,     0,   502,     0,     0,     0,
    1320,     0,     0,  1291,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1311,  1322,     0,     0,     0,     0,
       0,     0, -1493,     0,     0, -1493,   719,     0,     0,     0,
       0, -1493,     0,     0,     0,     0,     0,  1620,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1627,
    1627,  1627,  1627,     0,     0,  1627,  1627,  1627,  1627,  1627,
    1627,  1627,  1627,  1627,  1627,     0,     0,     0,     0,     0,
     579,     0,   718,     0,     0,     0,     0,  2055,     0,     0,
       0,     0,     0,   721,     0,     0, -1493,     0,     0,     0,
   -1715,     0,  2055,   719,     0,  1302,  2074,     0,  1303,  2077,
    2599,  1754,   718,     0,     0,     0,     0,  1627,  1627,     0,
       0,   719,     0,     0,  1312,  1323,     0,     0, -1715, -1715,
   -1715,  1235,  1327,  1328,  1329,  1330,  1331,  1332,  1309,  1313,
       0,     0,     0,     0,  1314, -1715,   719,     0,     0,     0,
       0,  2039,     0,   719,     0,     0,     0,  1486,     0,     0,
       0,     0,     0,     0,     0,     0,  1315,  1316,     0,     0,
    1311,     0,     0,     0,     0,     0,   719,     0, -1493,   718,
    1317,     0,     0,     0,     0,     0, -1493,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1715,     0, -1493,     0, -1493, -1493,     0,  1327,  1328,  1329,
    1330,  1331,  1332,     0,     0,     0,     0,  1486,  1318,   721,
       0,  1319,   579,  1365,     0,     0,     0,  1234,     0,  1486,
     579,   579,   579,  1234,     0,  1320,  1187,  1188,  1321,     0,
    2264, -1493,     0,   502, -1493, -1493, -1493,  1376,     0,     0,
     579,     0,     0,     0,     0,     0,     0,     0,     0,  2413,
       0,     0,  2191, -1495,     0,     0,     0,     0,     0,     0,
   -1715,     0,   812,  1418,     0,  1963,     0,     0,   641,     0,
    1964,  1965,  1966,     0,     0, -1715,  1445,     0,     0,     0,
   -1715,     0,     0,   719,  1486,  1486,     0,  2479,   718,     0,
       0,     0,  2691,     0,     0,     0,     0,  1469,     0,     0,
       0,  1189,  1190,     0,     0,     0,     0,  1620,     0,     0,
    1299,     0,     0,   721,     0,  1322, -1715,     0,     0,     0,
       0,     0,     0,     0,   718,     0,     0,  2710,  2711,     0,
       0,     0,     0,     0,  1234,     0,  1234,  1234,     0,   719,
       0,     0,  2720,     0,     0,     0, -1495,     0,     0,     0,
       0,     0,     0,     0,     0,   718,     0,   721,   718,     0,
       0,     0,     0,     0,  1191,  1192,  1193,  1194,  1195,  1196,
       0,  1320,  1197,  1198,     0,     0,  2807,     0,     0,     0,
       0,     0,     0,  2275,     0,     0,     0,     0,     0,     0,
       0,   579,   579,   579,   473,     0,  2055,  2292, -1495,     0,
       0,  2292,  2306,  1234,     0,     0,  1234,  1234,   719,     0,
       0, -1495,     0,  2778,     0,  1323, -1495,     0,  1324,  1325,
    1326, -1495,  1327,  1328,  1329,  1330,  1331,  1332,     0,     0,
   -1495,  1754,     0,     0, -1495,  1954,     0,  1502,     0,     0,
       0,  2799,     0,     0,     0,     0,     0,   579,     0,   502,
       0,     0,     0,  1486,  1429,  1486,     0,  1516,     0,  2550,
       0, -1715,     0,     0, -1495,  2551,     0,     0,     0,  1968,
       0,     0,     0,   502,     0,  2372,  1199,  1200,  2552,     0,
       0,     0,     0, -1495,     0,     0,     0,     0,   502,   502,
     502,   502,   502,   502,   502,   502,   502,   502,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2553,     0,  2554,
    1429,     0,     0,   579,     0,     0,     0,  2413,   719,     0,
    1550,   889,   889,  1429,     0,     0,     0,     0,     0,     0,
       0,     0, -1495,     0,  1516, -1495,     0,     0,  1969,     0,
       0, -1495,     0,     0,     0,     0,   579,     0,   719,  1627,
       0,     0,     0,  1486,     0,     0,   718,     0,     0,     0,
       0, -1715,     0,     0,  2555,     0,     0,     0,  1327,  1328,
    1329,  1330,  1331,  1332,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1037,  1044,  1520,  1201,  1202,     0,
       0,  1590,  2556,   544,     0,     0, -1495,  1529,     0,  1530,
       0,  2472,     0,     0,     0,     0,     0,  1203,  1536,     0,
       0,     0,     0,     0,     0,   719,     0,     0,     0,     0,
       0,     0,     0,     0,  2488,  1537,     0,   579,   579,   579,
     579,     0,     0,     0,  2292,  2306,     0,  2292,  1627,     0,
    2497,  1724,     0,     0,  2055,     0,     0,     0,  2055,     0,
       0,  2039,  1555,  1557,  2515,     0,     0,   980,   721,  2557,
       0,     0,     0,  1734,  2558,  1736,     0,     0,     0,     0,
     905,     0,     0,     0,  2074,     0,   981,     0, -1495,  1754,
       0,     0,     0,  1620,  1588,  1589, -1495,     0,  1602,  1603,
       0,  1429,     0,     0,     0,     0,     0,  1187,  1188,     0,
       0,     0, -1495,     0, -1495, -1495,  1627,  2559,  1779,     0,
       0,     0,     0,     0,     0,     0,  2578,     0,     0,     0,
       0,     0,  2560,     0,     0,   721,     0,   982,     0,     0,
       0,  1970,  1971,  1972,   719,  1973,  1974,  1975,  1976,  1977,
    1978, -1495,     0,   721, -1495, -1495, -1495,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1037,     0,     0,     0,     0,   721,     0,
     719,     0,  1189,  1190,     0,   721,     0,     0,     0,     0,
    1257,     0,  1486,     0,     0,     0,     0,  1862,  1863,     0,
       0,  1878,     0,  2362,  1187,  1188,     0,     0,   721,     0,
       0,   719,  2615,     0,   719,     0,     0,     0,     0,  1268,
       0,     0,     0,     0,     0,     0,   983,     0,  2561,  1773,
    1773,     0,     0,     0,     0,  2562,     0,     0,     0,  1278,
    1279,  1280,     0,     0,  1287,  1191,  1192,  1193,  1194,  1195,
    1196,     0,     0,  1197,  1198,  1302,   473,  2292,  1303,     0,
    2642,     0,     0,   502,     0,  2055,     0,  1342,     0,     0,
    2055,     0,     0,  2055,     0,  2653,   984,     0,  2656,  1189,
    1190,  1234,     0,     0,   985,     0,     0,     0,  1309,     0,
       0,  1234,  2678,     0,  1234, -1715,   986,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   641,   502,     0,     0,     0,     0,  1384,     0,
    1311,   579,  1396,  1401,     0,   721,     0,   987,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1191,  1192,  1193,  1194,  1195,  1196,   502,   502,
    1197,  1198,     0,     0,     0,     0,     0,  1199,  1200,  1429,
       0,     0,     0,   502,     0,     0,  1903,  1905,     0,     0,
       0,     0,   989,     0,     0,   579,  1037,     0,  2678,     0,
       0,   721,     0,  1037,     0,     0,     0,     0,     0,     0,
    2267,     0,  1234,     0,   990,     0,     0,   502,     0,     0,
       0,     0,     0,     0,  1037,  1234,     0,     0,     0,     0,
    2055,     0,   719,     0,   992,  2656,     0,     0,     0,     0,
   -1715,     0,     0,     0,     0,     0,  2038,     0,     0,     0,
    2773,     0,     0,     0,   502, -1715,     0,     0,     0,  1302,
   -1715,     0,  1303,   579,     0,     0,     0,     0,     0,     0,
     721,     0,     0,     0,  1199,  1200,     0,     0,   -39,     0,
       0,     0,   502,     0,     0,     0,   641,     0,  1201,  1202,
       0,     0,  1309,     0,     0,     0, -1715,     1,   579, -1715,
       0,     0,     0,     0,     0,     0,     0,     2,     0,     3,
       4,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1311,     5,   473,     0,     0,     0,
       0,     0,     0,     0,     6,  2829,     0,     0,  1037,   502,
       0,     0,     0,  2653,     0,     0,     7,     0,     0,     0,
       0,  1320,     0,     0,     0,     0,     0,     8,     0,     0,
       0,     0,  2678,   641,   641,   641,     0,     0,     0,     9,
       0,    10,     0,     0,     0,     0,     0,     0,     0,     0,
     721,     0,     0,  2061,     0,  1201,  1202,     0,  2158,    11,
       0,     0,  1302,     0,  2268,  1303,  2167,  2168,  2170,     0,
    1304,  1305,  1306,    12,     0,     0,     0,     0,  2653,     0,
     721,     0,     0,    13,  2091,  2091,  2184,     0,     0,    14,
    2773,     0,  2642,     0, -1715,  1309,     0,    15,     0,    16,
      17,  1754,  1310,     0,     0,     0,     0,     0,     0, -1715,
       0, -1715,    18,     0, -1715,  1429,     0,     0,     0,     0,
    1585,  2678,     0,     0,     0,     0,     0,  1311,     0,     0,
    1604,     0,  1621,     0,     0,  1633,  1636,  1641,  1644,     0,
      19,     0,   641,     0,     0,     0,     0,   721,     0,     0,
   -1715,     0,     0,     0,     0,    20,     0,     0,     0,  1656,
       0,     0,     0,     0,     0,  1660,  1661,  1662,  1663,     0,
       0,     0,     0,  1672,  1673,     0,     0,     0,  1684,     0,
      21,     0,  1687,     0,     0,  1695,  1696,  1697,  1698,  1699,
    1700,  1701,  1702,  1703,     0,     0,  1704,     0,     0, -1509,
       0,  1712,     0,     0,  1716,  1320,   889,     0,  1037,     0,
       0, -1715,     0,     0,     0,     0,     0,  2187,  1327,  1328,
    1329,  1330,  1331,  1332,     0,     0,     0,  1312,     0,     0,
       0,  1738,     0,     0,     0,     0,  1335,  2280,  2281,  2282,
     812,     0,  1313,  1963,     0,     0,     0,  1314,  1964,  1965,
    1966,     0,     0,     0,     0,     0,     0,    22,  1279,  1280,
      23,     0,     0,     0,     0,  2480,   721,     0,     0, -1715,
   -1715,     0,     0,     0,     0,     0,  1335,     0,     0,     0,
       0,     0,     0,  1317,     0,     0,  1302,     0,    24,  1303,
       0,     0, -1509,  2337,     0, -1715,    25,   812,     0,     0,
    1963,     0,   721,     0,     0,  1964,  1965,  1966,     0,     0,
      26,     0,     0,     0,     0,     0,     0,    27,     0,  1309,
       0,    28,     0,     0, -1715,     0, -1715,     0,     0,     0,
       0,    29,     0,   721,     0,     0,   721,  1037,  1320,     0,
    1849,  1850,    30,  1851, -1509,     0,    31,     0,     0,     0,
       0,  1311,     0,     0,     0,     0,  1301, -1509,     0,  2435,
       0,  1302, -1509,     0,  1303,     0,     0, -1509,     0,  1304,
    1305,  1306,     0,     0,  1887,     0, -1509,     0,     0,     0,
   -1509,     0,    32,     0,  1335,     0,  1307,    33,     0,  1308,
       0,  1335,  1550,     0,  1309, -1715,     0,     0,     0,     0,
      34,  1310,  1327,  1328,  1329,  1330,  1331,  1332,     0,     0,
   -1509,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2483,     0,     0,    35,     0,  1311,     0,  1322, -1509,
       0,     0,     0,     0,     0,     0,  1037,     0,    36,     0,
       0,   -39,     0,  1941,     0,     0,     0,  1968,  1947,     0,
       0, -1715,     0,     0,     0,     0,     0,  1234,     0,     0,
       0,     0,     0,     0,     0,     0, -1715,     0,     0,     0,
       0, -1715,     0,  2489,  2490,  2491,  2492,     0, -1509,     0,
       0, -1509,     0,     0,     0,     0,  1962, -1509,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1641,     0,
    1641,  1641,     0,     0, -1715,     0,     0, -1715,  1998,     0,
       0,     0,  2001,     0,     0,  2003,  1969,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1312,     0,  1323,     0,
       0,  1324,  1325,  1326,   721,  1327,  1328,  1329,  1330,  1331,
    1332,  1313, -1509,     0,     0,     0,  1314,     0,     0,  2021,
       0,     0,  2024,     0,  2026,     0,     0,     0,     0,     0,
       0,     0,  1320,     0,     0,     0,     0,     0,  1315,  1316,
       0,     0,     0,  1969,     0,     0,     0,     0,     0,     0,
       0,     0,  1317,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2039,     0,     0,
       0,     0,     0,     0,  1335,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1335,  1384,     0,     0,  1628,
    1318,     0,     0,  1319, -1509,  1335,  1335,  1335,     0,     0,
       0,  1401, -1509,     0,  1335,     0,     0,  1320,     0,     0,
    1321,     0,     0,     0,     0,     0,     0,     0, -1509,  2099,
   -1509, -1509, -1715,     0,     0,     0,     0,     0,     0,     0,
       0,  1302,     0,     0,  1303,     0,     0,     0,     0,  1304,
    1305,  1306,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1234,     0,     0,     0,     0,  1234, -1509,     0,  1335,
   -1509, -1509, -1509,     0,  1309,     0,     0,     0,     0,     0,
       0,  1310,     0,     0,     0,     0,     0,  1037,     0,  1970,
    1971,  1972,     0,  1973,  1974,  1975,  1976,  1977,  1978,     0,
       0,     0,     0,     0,     0,     0,  1311,  1322,  1555,  1557,
       0,  1335,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1335,     0,     0,     0,     0,  1335,     0,
       0,     0, -1715,     0,     0,     0,     0,  2699,     0,  1327,
    1328,  1329,  1330,  1331,  1332,     0,  1970,  1971,  1972,     0,
    1973,  1974,  1975,  1976,  1977,  1978,     0,  1302,     0,     0,
    1303,     0,     0,     0,     0,  1304,  1305,  1306,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1307,  2209,     0,  2250,     0,     0,     0,     0,
    1309,  2737,  2213,     0,     0,  2214,     0,  1310,  2216,     0,
       0,     0,     0,     0,     0,     0,  1312,  1323,     0,     0,
    1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,
       0,  1313,  1311,     0,  2236,  2237,  1314,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2247,     0,
       0,     0,     0,     0,     0,     0,     0,  2253,  1315,  1316,
    2256,     0,  2258,     0,     0,     0,     0,     0,     0,  2787,
    2262,     0,  1317,     0,     0,     0,     0,     0,  2269,  2270,
       0,     0,     0,     0,     0,     0,     0,  1555,  1557,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1234,     0,
       0,     0,     0,     0,  2811,     0,     0,  2310,     0,     0,
    1318,     0,     0,  1319,     0,     0,     0,  2318,     0,     0,
       0,     0,  1335,     0,     0,     0,     0,  1320,     0,     0,
       0,     0,  1312,  2331,     0,     0,     0,     0,     0,     0,
       0,  1335,     0,     0,     0,     0,     0,  1313,     0,     0,
       0,     0,  1314,     0,     0,     0,     0,     0,  1335,     0,
    1628,  1628,     0,  1979,     0,  1628,     0,     0,     0,     0,
    1335,     0,     0,  1335,  1315,  1316,     0,     0,  1335,     0,
       0,  1335,     0,     0,     0,     0,     0,     0,  1317,     0,
       0,     0,     0,  1335,     0,     0,     0,  1335,  1335,  1335,
    1335,     0,     0,     0,     0,     0,  1628,  1628,     0,  1335,
    1335,     0,     0,     0,     0,     0,     0,  1322,     0,     0,
       0,  1335,     0,     0,  1335,     0,  1318,     0,     0,  1319,
       0,     0,  1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,
    1335,  1335,     0,  1320,     0,     0,  1321,     0,     0,  1335,
       0,     0,     0,  1335,     0,     0,     0,     0,     0,  2460,
       0,     0,     0,   967,     0,     0,     0,     0,     0,   968,
       0,     0,     0,     0,     0,  1335,   980,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2473,  2474,     0,     0,     0,
    2475,     0,     0,     0,     0,  2478,     0,  1323,  2481,  2482,
    1324,  1325,  1326,  2486,  1327,  1328,  1329,  1330,  1331,  1332,
       0,     0,     0,  1322,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1234,     0,     0,     0,
     889,     0,     0,     0,     0,   969,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1335,  1335,  1335,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2572,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1302,     0,  1335,  1303,     0,     0,     0,     0,
    1304,  1305,  1306,  1323,     0,   983,  1324,  1325,  1326,     0,
    1327,  1328,  1329,  1330,  1331,  1332,     0,  1307,     0,     0,
    1650,     0,     0,     0,     0,  1309,     0,     0,     0,     0,
       0,     0,  1310,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1335,     0,
       0,     0,     0,     0,  1335,   984,     0,  1311,     0,     0,
       0,     0,     0,   985,     0,     0,     0,  1979,  1979,  1335,
       0,  1628,  1628,  1628,  1628,   986,     0,  1628,  1628,  1628,
    1628,  1628,  1628,  1628,  1628,  1628,  1628,  1979,     0,     0,
       0,     0,  1998,     0,     0,     0,   970,     0,     0,     0,
    2626,  2627,     0,     0,  2628,  1335,   987,     0,  1335,     0,
    1335,     0,     0,     0,  1979,  1979,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1335,  1628,
    1628,  1335,     0,  1335,     0,     0,     0,     0,     0,     0,
    2667,  2668,     0,     0,     0,     0,   988,     0,     0,     0,
     972,   989,     0,     0,  2680,     0,     0,  1312,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1313,   990,     0,     0,     0,  1314,     0,   991,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   992,     0,     0,     0,     0,     0,  1315,
    1316,     0,     0,     0,     0,     0,  1335,     0,     0,     0,
       0,     0,     0,  1317,     0,     0,     0,     0,     0,     0,
    1302,     0,     0,  1303,     0,     0,     0,     0,  1304,  1305,
    1306,     0,     0,     0,     0,     0,     0,     0,     0,  1302,
       0,     0,  1303,     0,     0,  1307,   974,  1304,  1305,  1306,
       0,  1318,     0,  1309,  1319,     0,     0,     0,     0,     0,
    1310,     0,     0,     0,  1307,     0,  2757,     0,  1320,     0,
       0,  1321,  1309,     0,     0,     0,     0,     0,     0,  1310,
       0,  1287,     0,     0,     0,  1311,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2779,     0,     0,     0,     0,
       0,     0,     0,     0,  1311,     0,     0,     0,     0,     0,
    2793,     0,     0,     0,     0,     0,  1335,     0,     0,     0,
    1335,  1335,     0,  1335,     0,     0,  1979,  1979,  1979,  1979,
       0,     0,     0,  1979,  1979,  1979,  1979,  1979,  1979,  1979,
    1979,  1979,  1979,  1335,  1335,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1335,     0,     0,     0,  1322,     0,
    1335,     0,     0,  1335,     0,  1335,     0,     0,     0,  1335,
       0,     0,  1979,  1979,     0,     0,  1335,  1335,     0,     0,
       0,     0,     0,     0,     0,  1312,     0,   504,     0,     0,
       0,  2667,     0,     0,     0,     0,     0,     0,     0,     0,
    1313,     0,     0,     0,  1312,  1314,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1335,     0,  1313,
       0,     0,     0,  2861,  1314,  1335,     0,  1315,  1316,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1335,     0,
     505,  1317,     0,  2875,  2875,     0,  1315,  1316,     0,     0,
       0,     0,     0,     0,     0,     0,   506,  2667,  1323,     0,
    1317,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,
    1332,     0,     0,     0,     0,  1650,     0,     0,     0,  1318,
       0,     0,  1319,     0,     0,     0,     0,     0,     0,   967,
       0,     0,     0,  2875,     0,   968,  1320,     0,  1318,  1321,
       0,  1319,   980,     0,     0,     0,     0,     0,     0,     0,
     507,     0,     0,     0,     0,  1320,     0,     0,  1321,   508,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   509,     0,     0,     0,     0,   510,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2875,
       0,     0,   511,     0,     0,     0,     0,  1335,     0,     0,
       0,  1628,   982,     0,     0,     0,     0,     0,     0,     0,
    1335,  1335,  1335,     0,     0,  1335,  1322,     0,  1335,  1335,
       0,     0,     0,  1335,     0,     0,     0,     0,     0,     0,
       0,   969,     0,     0,     0,  1322,   512,     0,     0,     0,
     513,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1628,   983,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   514,     0,     0,     0,     0,     0,  1335,
       0,     0,     0,     0,     0,     0,  1323,   515,     0,  1324,
    1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,     0,
       0,     0,     0,  2005,     0,  1323,     0,     0,  1324,  1325,
    1326,   984,  1327,  1328,  1329,  1330,  1331,  1332,   516,   985,
       0,   517,  2212,     0,     0,     0,     0,  1979,  1628,   518,
       0,   986,   519,  1335,  1335,  1335,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   520,   970,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   987,     0,   521,     0,     0,     0,     0,     0,
       0,   522,     0,     0,  1335,  1335,     0,     0,     0,     0,
     523,     0,     0,     0,     0,     0,   524,  1335,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1979,
       0,     0,  1820,     0,     0,     0,   972,   989,     0,     0,
       0,   525,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   990,
       0,     0,     0,     0,     0,  1821,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1979,     0,     0,   992,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1335,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1335,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1335,     0,   974,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1004,   809,
     544,   810,   811,   812,   813,   814,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,  1005,   101,   102,   103,     0,     0,     0,     0,
     815,     0,     0,   104,   105,     0,   106,   107,   108,  1006,
     110,   111,   112,   113,   816,  1007,   817,   818,  1335,   118,
     119,   120,   121,   122,   123,   819,   820,   124,   125,   821,
     822,   128,  1335,   129,   130,   131,   132,   823,     0,  1008,
       0,   135,   136,   137,   138,   139,   140,  1009,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,  1010,
     152,   153,   154,   825,   826,   827,  1011,   829,   830,   831,
     156,   157,   158,   159,   160,   161,   162,   832,   833,   165,
     834,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,  1012,     0,   178,   179,   671,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   835,   194,   195,   196,   197,
     836,   837,   199,     0,   200,   201,   838,   203,     0,   204,
       0,   205,  1013,     0,  1014,   208,   209,   210,  1015,   212,
       0,   213,     0,   839,   840,   216,     0,   217,   218,   219,
     220,   221,   222,  1016,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,  1017,   236,   237,
     238,   239,   240,   241,   841,   842,     0,   843,     0,   245,
    1018,  1019,   248,  1020,   250,   251,   252,   253,   254,     0,
       0,   255,  1021,   257,  1022,     0,   259,   260,   261,   844,
     845,   262,   263,   264,   265,   266,  1023,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   846,  1024,   847,   289,   290,
     291,   292,   848,   293,   294,  1025,   296,   849,   850,   298,
     851,   300,   301,   302,     0,   303,   304,     0,     0,   852,
     306,   307,     0,     0,   308,   309,  1026,   311,  1027,   853,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,   324,   325,   854,   327,   328,   329,   330,   331,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     855,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,  1028,   362,   363,   364,   856,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,   857,   382,   383,   384,   385,   386,  1029,
     388,   389,   858,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,  1030,   404,   859,   406,
       0,   407,   408,     0,   409,  1031,   411,   412,   413,   414,
     415,     0,   860,   861,     0,     0,   418,   419,   862,   421,
     863,   864,   423,   424,  1032,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,   866,     0,   436,
     437,   438,   439,   440,   441,   867,  1033,   443,  1034,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   868,
       0,     0,     0,     0,     0,     0,   869,   870,  1035,     0,
       0,     0,     0,   872,     0,   873,  1036,     0,     0,     0,
     874,     0,   875,   876,    92,   809,   544,   810,   811,   812,
     813,   814,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,   815,     0,     0,   104,
     105,     0,   106,   107,   108,   109,   110,   111,   112,   113,
     816,   115,   817,   818,     0,   118,   119,   120,   121,   122,
     123,   819,   820,   124,   125,   821,   822,   128,     0,   129,
     130,   131,   132,   823,     0,   824,     0,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,   152,   153,   154,   825,
     826,   827,   828,   829,   830,   831,   156,   157,   158,   159,
     160,   161,   162,   832,   833,   165,   834,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   671,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   835,   194,   195,   196,   197,   836,   837,   199,     0,
     200,   201,   838,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,   839,
     840,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     841,   842,     0,   843,     0,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,     0,     0,   255,   256,   257,
     258,     0,   259,   260,   261,   844,   845,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   846,   287,   847,   289,   290,   291,   292,   848,   293,
     294,   295,   296,   849,   850,   298,   851,   300,   301,   302,
       0,   303,   304,     0,     0,   852,   306,   307,     0,     0,
     308,   309,   310,   311,   312,   853,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,   324,   325,   854,
     327,   328,   329,   330,   331,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   855,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   856,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,    26,   377,   378,   379,   380,   381,   857,
     382,   383,   384,   385,   386,   387,   388,   389,   858,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   859,   406,     0,   407,   408,    31,
     409,   410,   411,   412,   413,   414,   415,     0,   860,   861,
       0,     0,   418,   419,   862,   421,   863,   864,   423,   424,
     865,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,   866,     0,   436,   437,   438,   439,   440,
     571,   867,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,     0,    34,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   868,     0,    35,     0,     0,
       0,     0,   869,   870,     0,     0,     0,     0,     0,   872,
       0,   873,  2769,     0,     0,     0,   874,     0,   875,   876,
      92,   809,   544,   810,   811,   812,   813,   814,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,   815,     0,     0,   104,   105,     0,   106,   107,
     108,   109,   110,   111,   112,   113,   816,   115,   817,   818,
       0,   118,   119,   120,   121,   122,   123,   819,   820,   124,
     125,   821,   822,   128,     0,   129,   130,   131,   132,   823,
       0,   824,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,   154,   825,   826,   827,   828,   829,
     830,   831,   156,   157,   158,   159,   160,   161,   162,   832,
     833,   165,   834,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   671,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   835,   194,   195,
     196,   197,   836,   837,   199,     0,   200,   201,   838,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,   839,   840,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   841,   842,     0,   843,
       0,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,     0,     0,   255,   256,   257,   258,     0,   259,   260,
     261,   844,   845,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   846,   287,   847,
     289,   290,   291,   292,   848,   293,   294,   295,   296,   849,
     850,   298,   851,   300,   301,   302,     0,   303,   304,     0,
       0,   852,   306,   307,     0,     0,   308,   309,   310,   311,
     312,   853,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   854,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   855,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   856,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,    26,
     377,   378,   379,   380,   381,   857,   382,   383,   384,   385,
     386,   387,   388,   389,   858,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     859,   406,     0,   407,   408,    31,   409,   410,   411,   412,
     413,   414,   415,     0,   860,   861,     0,     0,   418,   419,
     862,   421,   863,   864,   423,   424,   865,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,   866,
       0,   436,   437,   438,   439,   440,   571,   867,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,     0,    34,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   868,     0,    35,     0,     0,     0,     0,   869,   870,
       0,     0,     0,     0,     0,   872,     0,   873,     0,     0,
       0,     0,   874,     0,   875,   876,    92,   809,   544,   810,
     811,   812,   813,   814,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,   815,     0,
       0,   104,   105,     0,   106,   107,   108,   109,   110,   111,
     112,   113,   816,   115,   817,   818,  1637,   118,   119,   120,
     121,   122,   123,   819,   820,   124,   125,   821,   822,   128,
       0,   129,   130,   131,   132,   823,     0,   824,     0,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,   152,   153,
     154,   825,   826,   827,   828,   829,   830,   831,   156,   157,
     158,   159,   160,   161,   162,   832,   833,   165,   834,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   671,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   835,   194,   195,   196,   197,   836,   837,
     199,     0,   200,   201,   838,   203,     0,   204,     0,   205,
     206,  1638,   207,   208,   209,   210,   211,   212,     0,   213,
       0,   839,   840,   216,     0,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   841,   842,     0,   843,     0,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,     0,  1639,   255,
     256,   257,   258,     0,   259,   260,   261,   844,   845,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   846,   287,   847,   289,   290,   291,   292,
     848,   293,   294,   295,   296,   849,   850,   298,   851,   300,
     301,   302,     0,   303,   304,     0,     0,   852,   306,   307,
       0,     0,   308,   309,   310,   311,   312,   853,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,   324,
     325,   854,   327,   328,   329,   330,   331,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   855,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   856,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,   857,   382,   383,   384,   385,   386,   387,   388,   389,
     858,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   859,   406,     0,   407,
     408,     0,   409,   410,   411,   412,   413,   414,   415,     0,
     860,   861,     0,  1640,   418,   419,   862,   421,   863,   864,
     423,   424,   865,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,   866,     0,   436,   437,   438,
     439,   440,   441,   867,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   868,     0,     0,
       0,     0,     0,     0,   869,   870,     0,     0,     0,     0,
       0,   872,     0,   873,     0,     0,     0,     0,   874,     0,
     875,   876,    92,   809,   544,   810,   811,   812,   813,   814,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,   815,     0,     0,   104,   105,     0,
     106,   107,   108,   109,   110,   111,   112,   113,   816,   115,
     817,   818,     0,   118,   119,   120,   121,   122,   123,   819,
     820,   124,   125,   821,   822,   128,     0,   129,   130,   131,
     132,   823,     0,   824,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   825,   826,   827,
     828,   829,   830,   831,   156,   157,   158,   159,   160,   161,
     162,   832,   833,   165,   834,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   671,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   835,
     194,   195,   196,   197,   836,   837,   199,     0,   200,   201,
     838,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,   839,   840,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   841,   842,
       0,   843,     0,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,     0,     0,   255,   256,   257,   258,     0,
     259,   260,   261,   844,   845,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   846,
     287,   847,   289,   290,   291,   292,   848,   293,   294,   295,
     296,   849,   850,   298,   851,   300,   301,   302,     0,   303,
     304,     0,     0,   852,   306,   307,     0,     0,   308,   309,
     310,   311,   312,   853,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,   324,   325,   854,   327,   328,
     329,   330,   331,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   855,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   856,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,   857,   382,   383,
     384,   385,   386,   387,   388,   389,   858,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   859,   406,     0,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,   860,   861,     0,     0,
     418,   419,   862,   421,   863,   864,   423,   424,   865,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,   866,     0,   436,   437,   438,   439,   440,   441,   867,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   868,     0,     0,     0,     0,     0,     0,
     869,   870,   871,     0,     0,     0,     0,   872,     0,   873,
       0,     0,     0,     0,   874,     0,   875,   876,    92,   809,
     544,   810,   811,   812,   813,   814,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,  1394,   101,   102,   103,     0,     0,     0,     0,
     815,     0,     0,   104,   105,     0,   106,   107,   108,   109,
     110,   111,   112,   113,   816,   115,   817,   818,     0,   118,
     119,   120,   121,   122,   123,   819,   820,   124,   125,   821,
     822,   128,     0,   129,   130,   131,   132,   823,     0,   824,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,   153,   154,   825,   826,   827,   828,   829,   830,   831,
     156,   157,   158,   159,   160,   161,   162,   832,   833,   165,
     834,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   671,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   835,   194,   195,   196,   197,
     836,   837,   199,     0,   200,   201,   838,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,   839,   840,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   841,   842,     0,   843,     0,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,     0,
       0,   255,   256,   257,   258,     0,   259,   260,   261,   844,
     845,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   846,   287,   847,   289,   290,
     291,   292,   848,   293,   294,   295,   296,   849,   850,   298,
     851,   300,   301,   302,     0,   303,   304,     0,     0,   852,
     306,   307,     0,     0,   308,   309,   310,   311,   312,   853,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,   324,   325,   854,   327,   328,   329,   330,   331,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     855,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   856,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,   857,   382,   383,   384,   385,   386,   387,
     388,   389,   858,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   859,   406,
       0,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,   860,   861,     0,     0,   418,   419,   862,   421,
     863,   864,   423,   424,   865,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,   866,     0,   436,
     437,   438,   439,   440,   441,   867,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   868,
       0,     0,     0,     0,     0,     0,   869,   870,     0,     0,
       0,     0,     0,   872,     0,   873,     0,     0,     0,     0,
     874,     0,   875,   876,  1004,   809,   544,   810,   811,   812,
     813,   814,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,   815,     0,     0,   104,
     105,     0,   106,   107,   108,  1006,   110,   111,   112,   113,
     816,  1007,   817,   818,     0,   118,   119,   120,   121,   122,
     123,   819,   820,   124,   125,   821,   822,   128,     0,   129,
     130,   131,   132,   823,     0,  1008,     0,   135,   136,   137,
     138,   139,   140,  1009,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,  1010,   152,   153,   154,   825,
     826,   827,  1011,   829,   830,   831,   156,   157,   158,   159,
     160,   161,   162,   832,   833,   165,   834,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   671,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   835,   194,   195,   196,   197,   836,   837,   199,     0,
     200,   201,   838,   203,     0,   204,     0,   205,  1013,     0,
    1014,   208,   209,   210,  1015,   212,     0,   213,     0,   839,
     840,   216,     0,   217,   218,   219,   220,   221,   222,  1016,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,  1017,   236,   237,   238,   239,   240,   241,
     841,   842,     0,   843,     0,   245,  1018,  1019,   248,  1020,
     250,   251,   252,   253,   254,     0,     0,   255,  1021,   257,
    1022,     0,   259,   260,   261,   844,   845,   262,   263,   264,
     265,   266,  1023,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   846,  1024,   847,   289,   290,   291,   292,   848,   293,
     294,  1025,   296,   849,   850,   298,   851,   300,   301,   302,
       0,   303,   304,     0,     0,   852,   306,   307,     0,     0,
     308,   309,  1026,   311,  1027,   853,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,   324,   325,   854,
     327,   328,   329,   330,   331,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   855,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,  1028,   362,   363,
     364,   856,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,   857,
     382,   383,   384,   385,   386,  1029,   388,   389,   858,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,  1030,   404,   859,   406,     0,   407,   408,     0,
     409,  1031,   411,   412,   413,   414,   415,     0,   860,   861,
       0,     0,   418,   419,   862,   421,   863,   864,   423,   424,
    1032,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,   866,     0,   436,   437,   438,   439,   440,
     441,   867,     0,   443,  1034,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   868,     0,     0,     0,     0,
       0,     0,   869,   870,     0,     0,     0,     0,     0,   872,
       0,   873,  1511,     0,     0,     0,   874,     0,   875,   876,
      92,   809,   544,   810,   811,   812,   813,   814,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,   815,     0,     0,   104,   105,     0,   106,   107,
     108,   109,   110,   111,   112,   113,   816,   115,   817,   818,
       0,   118,   119,   120,   121,   122,   123,   819,   820,   124,
     125,   821,   822,   128,     0,   129,   130,   131,   132,   823,
       0,   824,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,   154,   825,   826,   827,   828,   829,
     830,   831,   156,   157,   158,   159,   160,   161,   162,   832,
     833,   165,   834,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   671,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   835,   194,   195,
     196,   197,   836,   837,   199,     0,   200,   201,   838,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,   839,   840,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   841,   842,     0,   843,
       0,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,     0,     0,   255,   256,   257,   258,     0,   259,   260,
     261,   844,   845,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   846,   287,   847,
     289,   290,   291,   292,   848,   293,   294,   295,   296,   849,
     850,   298,   851,   300,   301,   302,     0,   303,   304,     0,
       0,   852,   306,   307,     0,     0,   308,   309,   310,   311,
     312,   853,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   854,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   855,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   856,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,   857,   382,   383,   384,   385,
     386,   387,   388,   389,   858,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     859,   406,     0,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,   860,   861,     0,     0,   418,   419,
     862,   421,   863,   864,   423,   424,   865,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,   866,
       0,   436,   437,   438,   439,   440,   441,   867,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   868,     0,     0,     0,     0,     0,     0,   869,   870,
       0,     0,     0,     0,     0,   872,     0,   873,  1631,     0,
       0,     0,   874,     0,   875,   876,  1004,   809,   544,   810,
     811,   812,   813,   814,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,   815,     0,
       0,   104,   105,     0,   106,   107,   108,  1006,   110,   111,
     112,   113,   816,  1007,   817,   818,     0,   118,   119,   120,
     121,   122,   123,   819,   820,   124,   125,   821,   822,   128,
       0,   129,   130,   131,   132,   823,     0,  1008,     0,   135,
     136,   137,   138,   139,   140,  1009,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,  1010,   152,   153,
     154,   825,   826,   827,  1011,   829,   830,   831,   156,   157,
     158,   159,   160,   161,   162,   832,   833,   165,   834,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   671,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   835,   194,   195,   196,   197,   836,   837,
     199,     0,   200,   201,   838,   203,     0,   204,     0,   205,
    1013,     0,  1014,   208,   209,   210,  1015,   212,     0,   213,
       0,   839,   840,   216,     0,   217,   218,   219,   220,   221,
     222,  1016,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,  1017,   236,   237,   238,   239,
     240,   241,   841,   842,     0,   843,     0,   245,  1018,  1019,
     248,  1020,   250,   251,   252,   253,   254,     0,     0,   255,
    1021,   257,  1022,     0,   259,   260,   261,   844,   845,   262,
     263,   264,   265,   266,  1023,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   846,  1024,   847,   289,   290,   291,   292,
     848,   293,   294,  1025,   296,   849,   850,   298,   851,   300,
     301,   302,     0,   303,   304,     0,     0,   852,   306,   307,
       0,     0,   308,   309,  1026,   311,  1027,   853,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,   324,
     325,   854,   327,   328,   329,   330,   331,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   855,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,  1028,
     362,   363,   364,   856,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,   857,   382,   383,   384,   385,   386,  1029,   388,   389,
     858,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,  1030,   404,   859,   406,     0,   407,
     408,     0,   409,  1031,   411,   412,   413,   414,   415,     0,
     860,   861,     0,     0,   418,   419,   862,   421,   863,   864,
     423,   424,  1032,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,   866,     0,   436,   437,   438,
     439,   440,   441,   867,  1846,   443,  1034,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   868,     0,     0,
       0,     0,     0,     0,   869,   870,     0,     0,     0,     0,
       0,   872,     0,   873,     0,     0,     0,     0,   874,     0,
     875,   876,    92,   809,   544,   810,   811,   812,   813,   814,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,   815,     0,     0,   104,   105,     0,
     106,   107,   108,   109,   110,   111,   112,   113,   816,   115,
     817,   818,     0,   118,   119,   120,   121,   122,   123,   819,
     820,   124,   125,   821,   822,   128,     0,   129,   130,   131,
     132,   823,     0,   824,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   825,   826,   827,
     828,   829,   830,   831,   156,   157,   158,   159,   160,   161,
     162,   832,   833,   165,   834,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   671,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   835,
     194,   195,   196,   197,   836,   837,   199,     0,   200,   201,
     838,   203,     0,   204,     0,   205,   206,  1638,   207,   208,
     209,   210,   211,   212,     0,   213,     0,   839,   840,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   841,   842,
       0,   843,     0,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,     0,     0,   255,   256,   257,   258,     0,
     259,   260,   261,   844,   845,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   846,
     287,   847,   289,   290,   291,   292,   848,   293,   294,   295,
     296,   849,   850,   298,   851,   300,   301,   302,     0,   303,
     304,     0,     0,   852,   306,   307,     0,     0,   308,   309,
     310,   311,   312,   853,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,   324,   325,   854,   327,   328,
     329,   330,   331,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   855,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   856,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,   857,   382,   383,
     384,   385,   386,   387,   388,   389,   858,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   859,   406,     0,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,   860,   861,     0,     0,
     418,   419,   862,   421,   863,   864,   423,   424,   865,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,   866,     0,   436,   437,   438,   439,   440,   441,   867,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   868,     0,     0,     0,     0,     0,     0,
     869,   870,     0,     0,     0,     0,     0,   872,     0,   873,
       0,     0,     0,     0,   874,     0,   875,   876,    92,   809,
     544,   810,   811,   812,   813,   814,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
     815,     0,     0,   104,   105,     0,   106,   107,   108,   109,
     110,   111,   112,   113,   816,   115,   817,   818,     0,   118,
     119,   120,   121,   122,   123,   819,   820,   124,   125,   821,
     822,   128,     0,   129,   130,   131,   132,   823,     0,   824,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,   153,   154,   825,   826,   827,   828,   829,   830,   831,
     156,   157,   158,   159,   160,   161,   162,   832,   833,   165,
     834,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   671,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   835,   194,   195,   196,   197,
     836,   837,   199,     0,   200,   201,   838,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,   839,   840,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   841,   842,     0,   843,     0,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,     0,
       0,   255,   256,   257,   258,     0,   259,   260,   261,   844,
     845,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   846,   287,   847,   289,   290,
     291,   292,   848,   293,   294,   295,   296,   849,   850,   298,
     851,   300,   301,   302,     0,   303,   304,     0,     0,   852,
     306,   307,     0,     0,   308,   309,   310,   311,   312,   853,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,   324,   325,   854,   327,   328,   329,   330,   331,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     855,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   856,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,   857,   382,   383,   384,   385,   386,   387,
     388,   389,   858,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   859,   406,
       0,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,   860,   861,     0,     0,   418,   419,   862,   421,
     863,   864,   423,   424,   865,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,   866,     0,   436,
     437,   438,   439,   440,   441,   867,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   868,
       0,     0,     0,     0,     0,     0,   869,   870,     0,     0,
       0,     0,     0,   872,     0,   873,     0,     0,     0,     0,
     874,     0,   875,   876,  1004,   809,   544,   810,   811,   812,
     813,   814,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,   815,     0,     0,   104,
     105,     0,   106,   107,   108,  1006,   110,   111,   112,   113,
     816,  1007,   817,   818,     0,   118,   119,   120,   121,   122,
     123,   819,   820,   124,   125,   821,   822,   128,     0,   129,
     130,   131,   132,   823,     0,  1008,     0,   135,   136,   137,
     138,   139,   140,  1009,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,  1010,   152,   153,   154,   825,
     826,   827,  1011,   829,   830,   831,   156,   157,   158,   159,
     160,   161,   162,   832,   833,   165,   834,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   671,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   835,   194,   195,   196,   197,   836,   837,   199,     0,
     200,   201,   838,   203,     0,   204,     0,   205,  1013,     0,
    1014,   208,   209,   210,  1015,   212,     0,   213,     0,   839,
     840,   216,     0,   217,   218,   219,   220,   221,   222,  1016,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,  1017,   236,   237,   238,   239,   240,   241,
     841,   842,     0,   843,     0,   245,  1018,  1019,   248,  1020,
     250,   251,   252,   253,   254,     0,     0,   255,  1021,   257,
    1022,     0,   259,   260,   261,   844,   845,   262,   263,   264,
     265,   266,  1023,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   846,  1024,   847,   289,   290,   291,   292,   848,   293,
     294,  1025,   296,   849,   850,   298,   851,   300,   301,   302,
       0,   303,   304,     0,     0,   852,   306,   307,     0,     0,
     308,   309,  1026,   311,  1027,   853,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,   324,   325,   854,
     327,   328,   329,   330,   331,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   855,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,  1028,   362,   363,
     364,   856,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,   857,
     382,   383,   384,   385,   386,  1029,   388,   389,   858,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,  1030,   404,   859,   406,     0,   407,   408,     0,
     409,  1031,   411,   412,   413,   414,   415,     0,   860,   861,
       0,     0,   418,   419,   862,   421,   863,   864,   423,   424,
    1032,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,   866,     0,   436,   437,   438,   439,   440,
     441,   867,     0,   443,  1034,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   868,     0,     0,     0,     0,
       0,     0,   869,   870,     0,     0,     0,     0,     0,   872,
       0,   873,     0,     0,     0,     0,   874,     0,   875,   876,
      92,   809,   544,   810,   811,   812,   813,   814,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,   815,     0,     0,   104,   105,     0,   106,   107,
     108,   109,   110,   111,   112,   113,   816,   115,   817,   818,
       0,   118,   119,   120,   121,   122,   123,   819,   820,   124,
     125,   821,   822,   128,     0,   129,   130,   131,   132,   823,
       0,   824,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,   154,   825,   826,   827,   828,   829,
     830,   831,   156,   157,   158,   159,   160,   161,   162,   832,
     833,   165,   834,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   671,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   835,   194,   195,
     196,   197,   836,   837,   199,     0,   200,   201,   838,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,   839,   840,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   841,   842,     0,   843,
       0,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,     0,     0,   255,   256,   257,   258,     0,   259,   260,
     261,   844,   845,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   846,   287,   847,
     289,   290,   291,   292,   848,   293,   294,   295,   296,   849,
     850,   298,   851,   300,   301,   302,     0,   303,   304,     0,
       0,   852,   306,   307,     0,     0,   308,   309,   310,   311,
     312,   853,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   854,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   855,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   856,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,   857,   382,   383,   384,   385,
     386,   387,   388,   389,   858,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     859,   406,     0,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,   860,   861,     0,     0,   418,   419,
     862,   421,   863,   864,   423,   424,   865,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,   866,
       0,   436,   437,   438,   439,   440,   441,   867,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   868,     0,     0,     0,     0,     0,     0,  1397,  1398,
       0,     0,     0,     0,     0,   872,     0,   873,     0,     0,
       0,     0,   874,     0,   875,   876,    92,  1771,   544,   810,
     811,   812,   813,   814,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,   815,     0,
       0,   104,   105,     0,   106,   107,   108,   109,   110,   111,
     112,   113,   816,   115,   817,   818,     0,   118,   119,   120,
     121,   122,   123,   819,   820,   124,   125,   821,   822,   128,
       0,   129,   130,   131,   132,   823,     0,   824,     0,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,   152,   153,
     154,   825,   826,   827,   828,   829,   830,   831,   156,   157,
     158,   159,   160,   161,   162,   832,   833,   165,   834,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   671,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   835,   194,   195,   196,   197,   836,   837,
     199,     0,   200,   201,   838,   203,     0,   204,     0,   205,
     206,     0,   207,   208,   209,   210,   211,   212,     0,   213,
       0,   839,   840,   216,     0,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   841,   842,     0,   843,     0,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,     0,     0,   255,
     256,   257,   258,     0,   259,   260,   261,   844,   845,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   846,   287,   847,   289,   290,   291,   292,
     848,   293,   294,   295,   296,   849,   850,   298,   851,   300,
     301,   302,     0,   303,   304,     0,     0,   852,   306,   307,
       0,     0,   308,   309,   310,   311,   312,   853,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,   324,
     325,   854,   327,   328,   329,   330,   331,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   855,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   856,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,   857,   382,   383,   384,   385,   386,   387,   388,   389,
     858,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   859,   406,     0,   407,
     408,     0,   409,   410,   411,   412,   413,   414,   415,     0,
     860,   861,     0,     0,   418,   419,   862,   421,   863,   864,
     423,   424,   865,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,   866,     0,   436,   437,   438,
     439,   440,   441,   867,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   868,     0,     0,
       0,     0,     0,     0,   869,   870,     0,     0,     0,     0,
       0,   872,     0,   873,     0,     0,     0,     0,   874,     0,
     875,   876,    92,   809,   544,   810,   811,   812,   813,   814,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,   815,     0,     0,   104,   105,     0,
     106,   107,   108,   109,   110,   111,   112,   113,   816,   115,
     817,   818,     0,   118,   119,   120,   121,   122,   123,   819,
     820,   124,   125,   821,   822,   128,     0,   129,   130,   131,
     132,   823,     0,   824,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   825,   826,   827,
     828,   829,   830,   831,   156,   157,   158,   159,   160,   161,
     162,   832,   833,   165,   834,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   671,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   835,
     194,   195,   196,   197,   836,   837,   199,     0,   200,   201,
     838,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,   839,   840,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   841,   842,
       0,   843,     0,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,     0,     0,   255,   256,   257,   258,     0,
     259,   260,   261,   844,   845,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   846,
     287,   847,   289,   290,   291,   292,   848,   293,   294,   295,
     296,   849,   850,   298,   851,   300,   301,   302,     0,   303,
     304,     0,     0,   852,   306,   307,     0,     0,   308,   309,
     310,   311,   312,   853,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,   324,   325,   854,   327,   328,
     329,   330,   331,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   855,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   856,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,   857,   382,   383,
     384,   385,   386,   387,   388,   389,   858,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   859,   406,     0,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,   860,   861,     0,     0,
     418,   419,   862,   421,   863,   864,   423,   424,   865,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,   866,     0,   436,   437,   438,   439,   440,   441,   867,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   868,     0,     0,     0,     0,     0,     0,
     869,   870,     0,     0,     0,     0,     0,   872,     0,  1997,
       0,     0,     0,     0,   874,     0,   875,   876,    92,   809,
     544,   810,   811,   812,   813,   814,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
     815,     0,     0,   104,   105,     0,   106,   107,   108,   109,
     110,   111,   112,   113,   816,   115,   817,   818,     0,   118,
     119,   120,   121,   122,   123,   819,   820,   124,   125,   821,
     822,   128,     0,   129,   130,   131,   132,   823,     0,   824,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,  2657,   154,   825,   826,   827,   828,   829,   830,   831,
     156,   157,   158,   159,   160,   161,   162,   832,   833,   165,
     834,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   671,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   835,   194,   195,   196,   197,
     836,   837,   199,     0,   200,   201,   838,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,  2658,   840,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   841,   842,     0,   843,     0,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,     0,
       0,   255,   256,   257,   258,     0,   259,   260,   261,   844,
     845,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   846,   287,   847,   289,   290,
     291,   292,   848,   293,   294,   295,   296,   849,   850,   298,
     851,   300,   301,   302,     0,   303,   304,     0,     0,   852,
     306,   307,     0,     0,   308,   309,   310,   311,   312,   853,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,   324,   325,   854,   327,   328,   329,   330,   331,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     855,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,  2659,   856,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,   857,   382,   383,   384,   385,   386,   387,
     388,   389,   858,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   859,   406,
       0,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,   860,   861,     0,     0,   418,   419,   862,   421,
     863,   864,   423,   424,   865,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,   866,     0,   436,
     437,   438,   439,   440,   441,   867,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   868,
       0,     0,     0,     0,     0,     0,   869,   870,     0,     0,
       0,     0,     0,   872,     0,  2660,     0,     0,     0,     0,
     874,     0,   875,   876,    92,   809,   544,   810,   811,   812,
     813,   814,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,   815,     0,     0,   104,
     105,     0,   106,   107,   108,   109,   110,   111,   112,  2872,
     816,   115,   817,   818,     0,   118,   119,   120,   121,   122,
     123,   819,   820,   124,   125,   821,   822,   128,     0,   129,
     130,   131,   132,   823,     0,   824,     0,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,   152,   153,  2873,   825,
     826,   827,   828,   829,   830,   831,   156,   157,   158,   159,
     160,   161,   162,   832,   833,   165,   834,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   671,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   835,   194,   195,   196,   197,   836,   837,   199,     0,
     200,   201,   838,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,   839,
     840,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     841,   842,     0,   843,     0,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,     0,     0,   255,   256,   257,
     258,     0,   259,   260,   261,   844,   845,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   846,   287,   847,   289,   290,   291,   292,   848,   293,
     294,   295,   296,   849,   850,   298,   851,   300,   301,   302,
       0,   303,   304,     0,     0,   852,   306,   307,     0,     0,
     308,   309,   310,   311,   312,   853,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,   324,   325,   854,
     327,   328,   329,   330,   331,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   855,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   856,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,   857,
     382,   383,   384,   385,   386,   387,   388,   389,   858,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   859,   406,     0,   407,   408,     0,
     409,   410,   411,   412,   413,   414,   415,     0,   860,   861,
       0,     0,   418,   419,   862,   421,   863,   864,   423,   424,
     865,   426,   427,  2874,   429,   430,     0,     0,   431,   432,
     433,   434,   435,   866,     0,   436,   437,   438,   439,   440,
     441,   867,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   868,     0,     0,     0,     0,
       0,     0,   869,   870,     0,     0,     0,     0,     0,   872,
       0,   873,     0,     0,     0,     0,   874,     0,   875,   876,
      92,   809,   544,   810,   811,   812,   813,   814,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,   815,     0,     0,   104,   105,     0,   106,   107,
     108,   109,   110,   111,   112,   113,   816,   115,   817,   818,
       0,   118,   119,   120,   121,   122,   123,   819,   820,   124,
     125,   821,   822,   128,     0,   129,   130,   131,   132,   823,
       0,   824,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,  2873,   825,   826,   827,   828,   829,
     830,   831,   156,   157,   158,   159,   160,   161,   162,   832,
     833,   165,   834,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   671,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   835,   194,   195,
     196,   197,   836,   837,   199,     0,   200,   201,   838,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,   839,   840,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   841,   842,     0,   843,
       0,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,     0,     0,   255,   256,   257,   258,     0,   259,   260,
     261,   844,   845,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   846,   287,   847,
     289,   290,   291,   292,   848,   293,   294,   295,   296,   849,
     850,   298,   851,   300,   301,   302,     0,   303,   304,     0,
       0,   852,   306,   307,     0,     0,   308,   309,   310,   311,
     312,   853,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   854,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   855,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   856,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,   857,   382,   383,   384,   385,
     386,   387,   388,   389,   858,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     859,   406,     0,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,   860,   861,     0,     0,   418,   419,
     862,   421,   863,   864,   423,   424,   865,   426,   427,  2874,
     429,   430,     0,     0,   431,   432,   433,   434,   435,   866,
       0,   436,   437,   438,   439,   440,   441,   867,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   868,     0,     0,     0,     0,     0,     0,   869,   870,
       0,     0,     0,     0,     0,   872,     0,   873,     0,     0,
       0,     0,   874,     0,   875,   876,    92,   809,   544,   810,
     811,   812,   813,   814,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,   815,     0,
       0,   104,   105,     0,   106,   107,   108,   109,   110,   111,
     112, -1715,   816,   115,   817,   818,     0,   118,   119,   120,
     121,   122,   123,   819,   820,   124,   125,   821,   822,   128,
       0,   129,   130,   131,   132,   823,     0,   824,     0,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,   152,   153,
    2873,   825,   826,   827,   828,   829,   830,   831,   156,   157,
     158,   159,   160,   161,   162,   832,   833,   165,   834,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   671,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   835,   194,   195,   196,   197,   836,   837,
     199,     0,   200,   201,   838,   203,     0,   204,     0,   205,
     206,     0,   207,   208,   209,   210, -1715,   212,     0,   213,
       0,   839,   840,   216,     0,   217,   218,   219,   220,   221,
     222, -1715,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   841,   842,     0,   843,     0,   245,     0,     0,
     248,   249,   250,   251,   252,   253,   254,     0,     0,   255,
     256,   257, -1715,     0,   259,   260,   261,   844,   845,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   846,   287,   847,   289,   290,   291,   292,
       0,   293,   294,     0,   296,   849,   850,   298,   851,   300,
     301,   302,     0,   303,   304,     0,     0,   852,   306,   307,
       0,     0,   308,   309,   310,   311,   312,   853,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,   324,
     325,   854,   327,   328,   329,   330,   331,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   855,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   856,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,   857,   382,   383,   384,   385,   386, -1715,   388,   389,
     858,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   859,   406,     0,   407,
     408,     0,   409,   410,   411,   412,   413,   414,   415,     0,
     860,   861,     0,     0,   418,   419,   862,   421,   863,   864,
     423,   424,   865,   426,   427,  2874,   429,   430,     0,     0,
     431,   432,   433,   434,   435,   866,     0,   436,   437,   438,
     439,   440,   441,   867,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470, -1715,     0,     0,
       0,     0,     0,     0,   869,   870,     0,     0,     0,     0,
       0,   872,     0,   873,     0,     0,     0,     0,   874,     0,
     875,   876,    92,   809,   544,   810,   811,   812,   813,   814,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,   109,   110,   111,   112,   113,   816,   115,
     817,   818,     0,   118,   119,   120,   121,   122,   123,   819,
     820,   124,   125,   821,   822,   128,     0,   129,   130,   131,
     132,   823,     0,   824,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   825,   826,   827,
     828,   829,   830,   831,   156,   157,   158,   159,   160,   161,
     162,   832,   833,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   671,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   835,
     194,   195,   196,   197,   836,   837,   199,     0,   200,   201,
     838,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,   839,   840,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   841,   842,
       0,   843,     0,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,     0,     0,   255,   256,   257,   258,     0,
     259,   260,   261,   844,   845,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   846,
     287,   847,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   849,   850,   298,   851,   300,   301,   302,     0,   303,
     304,     0,     0,   852,   306,   307,     0,     0,   308,   309,
     310,   311,   312,   853,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,   324,   325,   854,   327,   328,
     329,   330,   331,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   855,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,   857,   382,   383,
     384,   385,   386,   387,   388,   389,   858,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   859,   406,     0,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,   860,   861,     0,     0,
     418,   419,   862,   421,   863,   864,   423,   424,   865,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,   866,     0,   436,   437,   438,   439,   440,   441,   867,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,     0,     0,     0,     0,     0,     0,
    1623,  1624,     0,     0,    92,   809,   544,   810,   811,  1625,
     813,   814,     0,     0,     0,     0,   875,   876,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,   109,   110,   111,   112,   113,
     816,   115,   817,   818,     0,   118,   119,   120,   121,   122,
     123,   819,   820,   124,   125,   821,   822,   128,     0,   129,
     130,   131,   132,   823,     0,   824,     0,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,   152,   153,   154,   825,
     826,   827,   828,   829,   830,   831,   156,   157,   158,   159,
     160,   161,   162,   832,   833,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   671,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   835,   194,   195,   196,   197,   836,   837,   199,     0,
     200,   201,   838,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,   839,
     840,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     841,   842,     0,   843,     0,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,     0,     0,   255,   256,   257,
     258,     0,   259,   260,   261,   844,   845,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   846,   287,   847,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   849,   850,   298,   851,   300,   301,   302,
       0,   303,   304,     0,     0,   305,   306,   307,     0,     0,
     308,   309,   310,   311,   312,   853,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,   324,   325,   854,
     327,   328,   329,   330,   331,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   855,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,  1760,  1761,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,   857,
     382,   383,   384,   385,   386,   387,   388,   389,   858,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   859,   406,     0,   407,   408,     0,
     409,   410,   411,   412,   413,   414,   415,     0,   860,   861,
       0,     0,   418,   419,   862,   421,   863,   864,   423,   424,
     865,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,   866,     0,   436,   437,   438,   439,   440,
     441,   867,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,     0,     0,     0,     0,
       0,     0,  1762,  1763,     0,     0,     0,     0,     0,     0,
       0,  1625,     0,     0,     0,     0,     0,     0,   875,   876,
      92,   809,   544,   810,   811,   812,   813,   814,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,   109,   110,   111,   112,   113,   816,   115,   817,   818,
       0,   118,   119,   120,   121,   122,   123,   819,   820,   124,
     125,   821,   822,   128,     0,   129,   130,   131,   132,   823,
       0,   824,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,   154,   825,   826,   827,   828,   829,
     830,   831,   156,   157,   158,   159,   160,   161,   162,   832,
     833,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   671,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   835,   194,   195,
     196,   197,   836,   837,   199,     0,   200,   201,   838,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,   839,   840,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   841,   842,     0,   843,
       0,   245,     0,   247,   248,   249,   250,   251,   252,   253,
     254,     0,     0,   255,   256,   257,   258,     0,   259,   260,
     261,   844,   845,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   846,   287,   847,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   849,
     850,   298,   851,   300,   301,   302,     0,   303,   304,     0,
       0,   852,   306,   307,     0,     0,   308,   309,   310,   311,
     312,   853,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   854,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   855,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,   857,   382,   383,   384,   385,
     386,   387,   388,   389,   858,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     859,   406,     0,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,   860,   861,     0,     0,   418,   419,
     862,   421,   863,   864,   423,   424,   865,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,   866,
       0,   436,   437,   438,   439,   440,   441,   867,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,     0,     0,     0,     0,     0,     0,  1623,  1624,
       0,     0,     0,     0,     0,     0,     0,  1625,     0,     0,
       0,     0,     0,     0,   875,   876,    92,   809,   544,   810,
     811,   812,   813,   814,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,   815,     0,
       0,   104,   105,     0,   106,   107,   108,   109,   110,   111,
     112,     0,   816,   115,   817,   818,     0,   118,   119,   120,
     121,   122,   123,   819,   820,   124,   125,   821,   822,   128,
       0,   129,   130,   131,   132,   823,     0,   824,     0,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,   152,   153,
     154,   825,   826,   827,   828,   829,   830,   831,   156,   157,
     158,   159,   160,   161,   162,   832,   833,   165,   834,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   671,   181,   182,
       0,   183,   184,   185,     0,   186,     0,   188,     0,   189,
     190,   191,   192,   835,   194,   195,   196,   197,   836,   837,
     199,     0,   200,   201,   838,   203,     0,   204,     0,   205,
     206,     0,   207,   208,   209,   210,     0,   212,     0,   213,
       0,   839,   840,   216,     0,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   841,   842,     0,   843,     0,   245,     0,     0,
     248,   249,   250,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   259,   260,   261,   844,   845,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   846,   287,   847,   289,   290,   291,   292,
       0,   293,   294,     0,   296,   849,   850,   298,   851,   300,
     301,   302,     0,   303,   304,     0,     0,   852,   306,   307,
       0,     0,   308,   309,   310,   311,   312,   853,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,   324,
     325,   854,   327,   328,   329,   330,   331,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   855,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   856,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,   857,   382,   383,   384,   385,   386,     0,   388,   389,
     858,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   859,   406,     0,   407,
     408,     0,   409,   410,   411,   412,   413,   414,   415,     0,
     860,   861,     0,     0,   418,   419,   862,   421,   863,   864,
     423,   424,   865,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,   866,     0,   436,   437,   438,
     439,   440,   441,   867,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,     0,     0,
       0,     0,     0,     0,   869,   870,   496,     0,     0,     0,
       0,   872,     0,   873,     0,     0,     0,     0,   874,     0,
     875,   876,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,  2289,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   113,   114,     0,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,  -600,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,     0,
     199,     0,   200,   201,   202,   203,     0,   204,     0,   205,
       0,     0,  -600,   208,   209,   210,     0,   212,     0,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,  -600,   236,   237,   238,   239,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
     248,  -600,   250,   251,   252,   253,   254,     0,     0,   255,
    -600,   257,     0,     0,   259,   260,   261,     0,     0,   262,
     263,   264,   265,   266,   498,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,  -600,   288,   289,   290,   291,   292,
       0,   293,   294,     0,   296,     0,   297,   298,   299,   300,
     301,   302,     0,   303,   304,     0,     0,   305,   306,   307,
       0,     0,   308,   309,     0,   311,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,   324,
     325,   326,   327,   328,   329,   330,   331,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,  -600,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,  -600,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,     0,    92,
       0,   575,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   936,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,   820,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   823,     0,
     824,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   825,   826,   827,   828,   829,   830,
     831,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   836,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
     212,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,     0,   244,     0,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
    2043,     0,   255,   256,   257,   258,     0,   259,   260,   261,
     844,   845,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,     0,   293,   294,   295,   296,     0,   850,
     298,   299,   300,   301,   302,     0,   303,   304,     0,   576,
     305,   306,   307,     0,     0,   308,   309,   310,   311,   312,
     853,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,   324,   325,   854,   327,   328,   329,   330,   331,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   365,  2044,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,    26,   377,
     378,   379,   380,   381,   857,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   859,
     406,     0,   407,   408,    31,   409,   410,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,   418,   419,   862,
     421,   863,     0,   423,   424,   865,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,   866,     0,
     436,   437,   438,   439,   440,   571,   442,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,     0,    34,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,    92,    35,   575,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2045,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,   820,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     823,     0,   824,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,   154,   825,   826,   827,   828,
     829,   830,   831,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   836,     0,   199,     0,   200,   201,   202,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,     0,
     244,     0,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,  2043,     0,   255,   256,   257,   258,     0,   259,
     260,   261,   844,   845,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,     0,   293,   294,   295,   296,
       0,   850,   298,   299,   300,   301,   302,     0,   303,   304,
       0,   576,   305,   306,   307,     0,     0,   308,   309,   310,
     311,   312,   853,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,   324,   325,   854,   327,   328,   329,
     330,   331,   332,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,   361,   362,   363,   364,   365,  2044,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,   857,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   859,   406,     0,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,   418,
     419,   862,   421,   863,     0,   423,   424,   865,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
     866,     0,   436,   437,   438,   439,   440,   441,   442,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,    92,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2045,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,   820,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   823,     0,   824,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   825,   826,
     827,   828,   829,   830,   831,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   836,     0,   199,     0,   200,
     201,   202,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,   212,     0,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,     0,   244,     0,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,     0,     0,   255,   256,   257,   258,
       0,   259,   260,   261,   844,   845,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,     0,   850,   298,   299,   300,   301,   302,     0,
     303,   304,     0,     0,   305,   306,   307,     0,     0,   308,
     309,   310,   311,   312,   853,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,   324,   325,   854,   327,
     328,   329,   330,   331,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,   361,   362,   363,   364,
     365,  2044,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,   857,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   859,   406,     0,   407,   408,     0,   409,
     410,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,   418,   419,   862,   421,   863,     0,   423,   424,   865,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,   866,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,    92,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      36,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,   820,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   823,     0,   824,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     825,   826,   827,   828,   829,   830,   831,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   836,     0,   199,
       0,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,     0,   244,     0,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,     0,     0,   255,   256,
     257,   258,     0,   259,   260,   261,   844,   845,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,     0,
     293,   294,   295,   296,     0,   850,   298,   299,   300,   301,
     302,     0,   303,   304,     0,     0,   305,   306,   307,     0,
       0,   308,   309,   310,   311,   312,   853,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,   324,   325,
     854,   327,   328,   329,   330,   331,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
     857,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   859,   406,     0,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   862,   421,   863,     0,   423,
     424,   865,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,   866,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   738,  1226,   544,
       0,     0,     0,   813,     0,     0,     0,     0,     0,     0,
       0,     0,  2674,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   739,   740,     0,   741,   742,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   743,   744,
     128,     0,   129,   130,   131,   132,   745,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   746,   747,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   748,   194,   195,   196,   197,   749,
    1227,   199,     0,   200,   201,   750,   203,     0,   204,     0,
     205,     0,     0,     0,   208,   209,   210,     0,   212,     0,
     213,     0,   751,   752,   216,     0,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   753,   237,   238,
     239,   240,   241,   754,   755,     0,   756,     0,   245,     0,
       0,   248,     0,   250,   251,   252,   253,   254,     0,     0,
     255,     0,   257,     0,     0,   259,   260,   261,     0,     0,
     262,   263,   264,   265,   266,   757,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   758,     0,   759,   289,   290,   291,
     760,     0,   293,   294,     0,   296,     0,   761,   298,   762,
     300,   301,   302,     0,   303,   304,  1228,     0,   305,   306,
     307,     0,     0,   308,   763,     0,   311,     0,   764,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
     324,   325,   765,   327,   328,   766,   330,   331,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   767,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   768,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   769,   384,   385,   386,     0,   388,
     389,   770,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   771,   404,   772,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   773,   774,     0,     0,   418,   419,   775,   421,   776,
    1229,   423,   424,   777,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,  1119,   779,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   467,   468,   469,   470,     0,   738,
       0,     0,     0,     0,     0,  1230,  1231,  1923,     0,     0,
       0,     0,     0,     0,  1924,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     3,     4,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   739,   740,     0,   741,   742,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     743,   744,   128,     0,   129,   130,   131,   132,   745,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   746,   747,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   748,   194,   195,   196,
     197,   749,     0,   199,     0,   200,   201,   750,   203,     0,
     204,     0,   205,     0,     0,     0,   208,   209,   210,     0,
     212,     0,   213,     0,   751,   752,   216,     0,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   753,
     237,   238,   239,   240,   241,   754,   755,     0,   756,     0,
     245,     0,     0,   248,     0,   250,   251,   252,   253,   254,
       0,     0,   255,     0,   257,     0,     0,   259,   260,   261,
       0,     0,   262,   263,   264,   265,   266,   757,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   758,     0,   759,   289,
     290,   291,   760,     0,   293,   294,     0,   296,     0,   761,
     298,   762,   300,   301,   302,     0,   303,   304,     0,     0,
     305,   306,   307,     0,     0,   308,   763,     0,   311,     0,
     764,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,   324,   325,   765,   327,   328,   766,   330,   331,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   767,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   768,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,    26,   377,
     378,   379,   380,   381,     0,   382,   769,   384,   385,   386,
       0,   388,   389,   770,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   771,   404,   772,
     406,     0,   407,   408,    31,   409,     0,   411,   412,   413,
     414,   415,     0,   773,   774,     0,     0,   418,   419,   775,
     421,   776,     0,   423,   424,   777,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   778,   779,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,    34,   450,
     451,   452,   453,   454,   455,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   467,   468,   469,   470,
       0,   496,    35,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    36,    93,    94,    95,
      96,    97,    98,    99,   100,   609,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,     0,   199,     0,   200,   201,   202,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,   248,     0,   250,   251,   252,
     253,   254,     0,     0,   255,     0,   257,     0,     0,   259,
     260,   261,     0,     0,   262,   263,   264,   265,   266,   498,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
     288,   289,   290,   291,   292,     0,   293,   294,     0,   296,
       0,   297,   298,   299,   300,   301,   302,     0,   303,   304,
       0,     0,   305,   306,   307,     0,     0,   308,   309,     0,
     311,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,   324,   325,   326,   327,   328,   329,
     330,   331,   332,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
      26,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   388,   389,   390,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   500,
     404,   405,   406,     0,   407,   408,    31,   409,     0,   411,
     412,   413,   414,   415,     0,   610,   417,     0,     0,   611,
     419,   420,   421,   422,     0,   423,   424,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   571,   442,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
      34,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   496,    35,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    36,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,     0,   199,     0,   200,
     201,   202,   203,     0,   204,     0,   205,     0,     0,     0,
     208,   209,   210,     0,   212,     0,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   236,   237,   238,   239,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,   248,     0,   250,
     251,   252,   253,   254,     0,     0,   255,     0,   257,     0,
       0,   259,   260,   261,     0,     0,   262,   263,   264,   265,
     266,   498,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,   288,   289,   290,   291,   292,     0,   293,   294,
       0,   296,     0,   297,   298,   299,   300,   301,   302,     0,
     303,   304,     0,     0,   305,   306,   307,     0,     0,   308,
     309,     0,   311,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,   324,   325,   326,   327,
     328,   329,   330,   331,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,    26,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   500,   404,   405,   406,     0,   407,   408,    31,   409,
       0,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,   418,   419,   420,   421,   422,     0,   423,   424,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   571,
     442,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,    34,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   496,    35,   575,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      36,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,     0,   199,
       0,   200,   201,   202,   203,     0,   204,     0,   205,     0,
       0,     0,   208,   209,   210,     0,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,   248,
       0,   250,   251,   252,   253,   254,     0,     0,   255,     0,
     257,     0,     0,   259,   260,   261,     0,     0,   262,   263,
     264,   265,   266,   498,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,     0,   288,   289,   290,   291,   292,     0,
     293,   294,     0,   296,     0,   297,   298,   299,   300,   301,
     302,     0,   303,   304,     0,     0,   305,   306,   307,     0,
       0,   308,   309,     0,   311,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,   324,   325,
     326,   327,   328,   329,   330,   331,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   500,   404,   405,   406,     0,   407,   408,
       0,   409,     0,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,     0,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   496,     0,   575,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   916,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
       0,   199,     0,   200,   201,   202,   203,     0,   204,     0,
     205,     0,     0,     0,   208,   209,   210,     0,   212,     0,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,   248,     0,   250,   251,   252,   253,   254,     0,     0,
     255,     0,   257,     0,     0,   259,   260,   261,     0,     0,
     262,   263,   264,   265,   266,   498,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,     0,   288,   289,   290,   291,
     292,     0,   293,   294,     0,   296,     0,   297,   298,   299,
     300,   301,   302,     0,   303,   304,     0,     0,   305,   306,
     307,     0,     0,   308,   309,     0,   311,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
     324,   325,   326,   327,   328,   329,   330,   331,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   500,   404,   405,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   420,   421,   422,
       0,   423,   424,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2514,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,     0,     0,     0,   208,   209,   210,     0,
     212,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   236,
     237,   238,   239,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,   248,     0,   250,   251,   252,   253,   254,
       0,     0,   255,     0,   257,     0,     0,   259,   260,   261,
       0,     0,   262,   263,   264,   265,   266,   498,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,     0,   288,   289,
     290,   291,   292,     0,   293,   294,     0,   296,     0,   297,
     298,   299,   300,   301,   302,     0,   303,   304,     0,     0,
     305,   306,   307,     0,     0,   308,   309,     0,   311,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,   324,   325,   326,   327,   328,   329,   330,   331,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   500,   404,   405,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,   418,   419,   420,
     421,   422,     0,   423,   424,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   441,   442,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1645,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,     0,   199,     0,   200,   201,   202,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,   248,     0,   250,   251,   252,
     253,   254,     0,     0,   255,     0,   257,     0,     0,   259,
     260,   261,     0,     0,   262,   263,   264,   265,   266,   498,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
     288,   289,   290,   291,   292,     0,   293,   294,     0,   296,
       0,   297,   298,   299,   300,   301,   302,     0,   303,   304,
       0,     0,   305,   306,   307,     0,     0,   308,   309,     0,
     311,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,   324,   325,   326,   327,   328,   329,
     330,   331,   332,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   388,   389,   390,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   500,
     404,   405,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,   418,
     419,   420,   421,   422,     0,   423,   424,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   441,   442,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   496,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1750,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,     0,   199,     0,   200,
     201,   202,   203,     0,   204,     0,   205,     0,     0,     0,
     208,   209,   210,     0,   212,     0,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   236,   237,   238,   239,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,   248,     0,   250,
     251,   252,   253,   254,     0,     0,   255,     0,   257,     0,
       0,   259,   260,   261,     0,     0,   262,   263,   264,   265,
     266,   498,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,   288,   289,   290,   291,   292,     0,   293,   294,
       0,   296,     0,   297,   298,   299,   300,   301,   302,     0,
     303,   304,     0,     0,   305,   306,   307,     0,     0,   308,
     309,     0,   311,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,   324,   325,   326,   327,
     328,   329,   330,   331,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   500,   404,   405,   406,     0,   407,   408,     0,   409,
       0,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,   418,   419,   420,   421,   422,     0,   423,   424,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,     0,     0,     0,  2375,  1226,
     544,     0,     0,  1605,   813,     0,     0,     0,     0,     0,
    2273,  1606,  1607,  1608,    93,    94,    95,    96,    97,    98,
      99,   100,  1047,   101,   102,   103,  1048,  1049,  1050,  1051,
    1052,  1053,  1054,   104,   105,  1055,   106,   107,   108,  2376,
     110,   111,   112,     0,   659,  2377,   661,   662,  1056,   118,
     119,   120,   121,   122,   123,  1057,  1058,   124,   125,   663,
     664,   128,  1059,   129,   130,   131,   132,     0,  1060,  2378,
    1061,   135,   136,   137,   138,   139,   140,  2379,   142,   143,
     144,  1062,   145,   146,   147,   148,   149,   150,  1063,  2380,
     152,   153,   154,  1064,  1065,  1066,  2381,  1067,  1068,  1069,
     156,   157,   158,   159,   160,   161,   162,   669,   670,   165,
    1070,   166,  1071,   167,   168,   169,   170,   171,   172,  1072,
     173,   174,   175,   176,   177,  1073,  1074,   178,   179,   671,
     181,   182,  1075,   183,   184,   185,  1076,   186,   187,   188,
    1077,   189,   190,   191,   192,     0,   194,   195,   196,   197,
       0,  1078,   199,  1079,   200,   201,   672,   203,  1080,   204,
    1081,   205,  2382,  1082,  2383,   208,   209,   210,  2384,   212,
    1083,   213,  1084,     0,     0,   216,  1085,   217,   218,   219,
     220,   221,   222,  2385,   224,   225,   226,   227,  1086,   228,
     229,   230,   231,   232,   233,  1087,   234,  2386,     0,   237,
     238,   239,   240,   241,   679,   680,  1088,   681,  1089,   245,
    2387,  2388,   248,  2389,   250,   251,   252,   253,   254,  1090,
    1091,   255,  2390,   257,  2391,  1092,   259,   260,   261,  1093,
    1094,   262,   263,   264,   265,   266,  2392,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   688,  2393,   690,   289,   290,
     291,  2394,  1095,   293,   294,  2395,   296,  1096,     0,   298,
     692,   300,   301,   302,  1097,   303,   304,  1098,  1099,  2396,
     306,   307,  1100,  1101,   308,     0,  2397,   311,  2398,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
    1102,   324,   325,     0,   327,   328,     0,   330,   331,   332,
    1103,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     695,   343,   344,   345,   346,  1104,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,  1105,   359,
     360,  2399,   362,   363,   364,   697,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,  1106,   377,   378,
     379,   380,   381,  1107,   382,  2400,   384,   385,   386,  2401,
     388,   389,   700,   391,  1108,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,  2402,   404,     0,   406,
    1109,   407,   408,  1110,   409,  2403,   411,   412,   413,   414,
     415,  1111,   703,   704,  1112,  1113,   418,   419,     0,   421,
       0,  1114,   423,   424,  2404,   426,   427,   428,   429,   430,
    1115,  1116,   431,   432,   433,   434,   435,  1117,  1118,   436,
     437,   438,   439,   440,     0,   706,  1120,   443,  2405,   445,
     446,   447,   448,  1121,  1122,   449,  1123,  1124,   450,   451,
     452,   453,   454,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   467,   468,   469,   470,     0,
     496,     0,  1609,  1610,  1611,  1605,  2406,  2407,  1614,  1615,
    1616,  1617,     0,  1606,  1607,  1608,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,   248,     0,   250,   251,   252,   253,
     254,     0,     0,   255,     0,   257,     0,     0,   259,   260,
     261,     0,     0,   262,   263,   264,   265,   266,   498,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,   288,
     289,   290,   291,   292,     0,   293,   294,     0,   296,     0,
     297,   298,   299,   300,   301,   302,     0,   303,   304,     0,
       0,   305,   306,   307,     0,     0,   308,   309,     0,   311,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   326,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,     0,     0,  1609,  1610,  1611,     0,  1612,  1613,
    1614,  1615,  1616,  1617,  1302,     0,     0,  1303,     0,     0,
       0,     0,  1304,  1305,  1306,     0,     0,     0,     0,     0,
       0,     0,  1302,     0,     0,  1303,     0,     0,     0,  1307,
    1304,  1305,  1306,     0,     0,     0,     0,  1309,     0,     0,
       0,     0,     0,  1302,  1310,     0,  1303,  1307,     0,     0,
       0,  1304,  1305,  1306,     0,  1309,     0,     0,     0,     0,
       0,     0,  1310,     0,     0,     0,     0,     0,  1307,  1311,
       0,     0,     0,     0,     0,     0,  1309,     0,     0,     0,
       0,     0,  1302,  1310,     0,  1303,     0,  1311,     0,     0,
    1304,  1305,  1306,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1307,  1311,     0,
       0,     0,     0,     0,     0,  1309,     0,     0,     0,     0,
       0,     0,  1310,     0,     0,     0,     0,     0,  1302,     0,
       0,  1303,     0,     0,     0,     0,  1304,  1305,  1306,     0,
       0,     0,     0,     0,     0,     0,     0,  1311,     0,     0,
       0,     0,     0,  1307,     0,     0,     0,     0,     0,     0,
       0,  1309,     0,     0,     0,     0,     0,     0,  1310,  1312,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1313,     0,     0,  1312,     0,  1314,
       0,     0,     0,  1311,     0,     0,     0,     0,     0,     0,
       0,     0,  1313,     0,     0,     0,     0,  1314,  1312,     0,
       0,  1315,  1316,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1313,     0,  1317,     0,     0,  1314,  1315,
    1316,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1317,     0,     0,     0,  1312,     0,     0,
    1315,  1316,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1313,  1318,  1317,     0,  1319,  1314,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1320,  1318,     0,  1321,  1319,     0,     0,     0,     0,  1315,
    1316,     0,     0,  1312,     0,     0,     0,     0,  1320,     0,
       0,  1321,  1318,  1317,     0,  1319,     0,     0,  1313,     0,
       0,     0,     0,  1314,     0,     0,     0,     0,     0,  1320,
       0,     0,  1321,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1315,  1316,     0,     0,     0,
       0,  1318,     0,     0,  1319,     0,     0,     0,     0,  1317,
       0,     0,     0,     0,     0,     0,     0,     0,  1320,  1302,
       0,  1321,  1303,     0,     0,     0,     0,  1304,  1305,  1306,
    1322,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1307,     0,     0,  1318,  1322,     0,
    1319,     0,  1309,     0,     0,     0,     0,     0,     0,  1310,
       0,     0,     0,     0,  1320,     0,     0,  1321,     0,  1322,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1311,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1302,     0,     0,  1303,     0,  1322,     0,
       0,  1304,  1305,  1306,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1307,     0,
    1323,     0,     0,  1324,  1325,  1326,  1309,  1327,  1328,  1329,
    1330,  1331,  1332,  1310,     0,     0,     0,  2251,  1323,     0,
       0,  1324,  1325,  1326,  1322,  1327,  1328,  1329,  1330,  1331,
    1332,     0,     0,     0,     0,  2339,     0,     0,  1311,  1323,
       0,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,
    1331,  1332,     0,     0,  1312,     0,  2462,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1313,
       0,     0,     0,     0,  1314,     0,     0,     0,  1323,     0,
       0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,
    1332,     0,     0,     0,     0,  2484,  1315,  1316,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1317,     0,  1302,     0,     0,  1303,     0,     0,     0,     0,
    1304,  1305,  1306,     0,  1323,     0,     0,  1324,  1325,  1326,
       0,  1327,  1328,  1329,  1330,  1331,  1332,  1307,  1312,     0,
       0,  2629,     0,     0,     0,  1309,     0,     0,  1318,     0,
       0,  1319,  1310,  1313,     0,     0,     0,     0,  1314,     0,
       0,     0,     0,     0,     0,  1320,     0,     0,  1321,     0,
       0,     0,     0,     0,     0,     0,     0,  1311,     0,     0,
    1315,  1316,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1317,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1318,     0,     0,  1319,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1320,
       0,     0,  1321,     0,     0,  1322,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1312,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1313,     0,     0,     0,     0,  1314,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1315,
    1316,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1317,     0,     0,     0,     0,     0,  1322,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1323,     0,     0,  1324,  1325,
    1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,     0,     0,
       0,  1318,  2843,     0,  1319,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1320,     0,
       0,  1321,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1323,
       0,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,
    1331,  1332,     0,     0,     0,     0,  2855,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1322,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1323,  1046,
       0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,
    1332,     0,     0,  1481,     0,    93,    94,    95,    96,    97,
      98,    99,   100,  1047,   101,   102,   103,  1048,  1049,  1050,
    1051,  1052,  1053,  1054,   104,   105,  1055,   106,   107,   108,
       0,   110,   111,   112,   739,   740,     0,   741,   742,  1056,
     118,   119,   120,   121,   122,   123,  1057,  1058,   124,   125,
     743,   744,   128,  1059,   129,   130,   131,   132,   745,  1060,
       0,  1061,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,  1062,   145,   146,   147,   148,   149,   150,  1063,
       0,   152,   153,   154,  1064,  1065,  1066,     0,  1067,  1068,
    1069,   156,   157,   158,   159,   160,   161,   162,   746,   747,
     165,  1070,   166,  1071,   167,   168,   169,   170,   171,   172,
    1072,   173,   174,   175,   176,   177,  1073,  1074,   178,   179,
     180,   181,   182,  1075,   183,   184,   185,  1076,   186,   187,
     188,  1077,   189,   190,   191,   192,   748,   194,   195,   196,
     197,   749,  1078,   199,  1079,   200,   201,   750,   203,  1080,
     204,  1081,   205,     0,  1082,     0,   208,   209,   210,     0,
     212,  1083,   213,  1084,   751,   752,   216,  1085,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,  1086,
     228,   229,   230,   231,   232,   233,  1087,   234,     0,   753,
     237,   238,   239,   240,   241,   754,   755,  1088,   756,  1089,
     245,     0,     0,   248,     0,   250,   251,   252,   253,   254,
    1090,  1091,   255,     0,   257,     0,  1092,   259,   260,   261,
    1093,  1094,   262,   263,   264,   265,   266,   757,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   758,     0,   759,   289,
     290,   291,   760,  1095,   293,   294,     0,   296,  1096,   761,
     298,   762,   300,   301,   302,  1097,   303,   304,  1098,  1099,
     305,   306,   307,  1100,  1101,   308,   763,     0,   311,     0,
     764,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,  1102,   324,   325,   765,   327,   328,   766,   330,   331,
     332,  1103,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   767,   343,   344,   345,   346,  1104,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,  1105,
     359,   360,     0,   362,   363,   364,   768,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,  1106,   377,
     378,   379,   380,   381,  1107,   382,   769,   384,   385,   386,
       0,   388,   389,   770,   391,  1108,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   771,   404,   772,
     406,  1109,   407,   408,  1110,   409,     0,   411,   412,   413,
     414,   415,  1111,   773,   774,  1112,  1113,   418,   419,   775,
     421,   776,  1114,   423,   424,   777,   426,   427,   428,   429,
     430,  1115,  1116,   431,   432,   433,   434,   435,  1117,  1118,
     436,   437,   438,   439,   440,  1119,   779,  1120,   443,     0,
     445,   446,   447,   448,  1121,  1122,   449,  1123,  1124,   450,
     451,   452,   453,   454,   455,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   467,   468,   469,   470,
     496,     0,     0,     0,     0,     0,     0,     0,     0,  1729,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,   248,     0,   250,   251,   252,   253,
     254,     0,     0,   255,     0,   257,     0,     0,   259,   260,
     261,     0,     0,   262,   263,   264,   265,   266,   498,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,   288,
     289,   290,   291,   292,     0,   293,   294,     0,   296,     0,
     297,   298,   299,   300,   301,   302,     0,   303,   304,     0,
       0,   305,   306,   307,     0,     0,   308,   309,     0,   311,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   326,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   738,  1226,   544,     0,     0,     0,   813,     0,     0,
    2204,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   739,   740,     0,   741,
     742,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   743,   744,   128,     0,   129,   130,   131,   132,
     745,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     746,   747,   165,  1361,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   748,   194,
     195,   196,   197,   749,  1227,   199,     0,   200,   201,   750,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   751,   752,   216,     0,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   753,   237,   238,   239,   240,   241,   754,   755,     0,
     756,     0,   245,     0,     0,   248,     0,   250,   251,   252,
     253,   254,     0,     0,   255,     0,   257,     0,     0,   259,
     260,   261,     0,     0,   262,   263,   264,   265,   266,   757,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   758,     0,
     759,   289,   290,   291,   760,     0,   293,   294,     0,   296,
       0,   761,   298,   762,   300,   301,   302,     0,   303,   304,
    1228,     0,   305,   306,   307,     0,     0,   308,   763,     0,
     311,     0,   764,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,   324,   325,   765,   327,   328,   766,
     330,   331,   332,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   767,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   768,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   769,   384,
     385,   386,     0,   388,   389,   770,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   771,
     404,   772,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   773,   774,     0,     0,   418,
     419,   775,   421,   776,  1229,   423,   424,   777,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,  1119,   779,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   467,   468,
     469,   470,   738,  1226,   544,     0,     0,     0,   813,  1230,
    1231,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   110,   111,   112,   739,   740,     0,
     741,   742,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   743,   744,   128,     0,   129,   130,   131,
     132,   745,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   746,   747,   165,  1363,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   748,
     194,   195,   196,   197,   749,  1227,   199,     0,   200,   201,
     750,   203,     0,   204,     0,   205,     0,     0,     0,   208,
     209,   210,     0,   212,     0,   213,     0,   751,   752,   216,
       0,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   753,   237,   238,   239,   240,   241,   754,   755,
       0,   756,     0,   245,     0,     0,   248,     0,   250,   251,
     252,   253,   254,     0,     0,   255,     0,   257,     0,     0,
     259,   260,   261,     0,     0,   262,   263,   264,   265,   266,
     757,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   758,
       0,   759,   289,   290,   291,   760,     0,   293,   294,     0,
     296,     0,   761,   298,   762,   300,   301,   302,     0,   303,
     304,  1228,     0,   305,   306,   307,     0,     0,   308,   763,
       0,   311,     0,   764,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,   324,   325,   765,   327,   328,
     766,   330,   331,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   767,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   768,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   769,
     384,   385,   386,     0,   388,   389,   770,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     771,   404,   772,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   773,   774,     0,     0,
     418,   419,   775,   421,   776,  1229,   423,   424,   777,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,  1119,   779,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   467,
     468,   469,   470,   738,  1226,   544,     0,     0,     0,   813,
    1230,  1231,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   739,   740,
       0,   741,   742,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   743,   744,   128,     0,   129,   130,
     131,   132,   745,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   746,   747,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     748,   194,   195,   196,   197,   749,  1227,   199,     0,   200,
     201,   750,   203,     0,   204,     0,   205,     0,     0,     0,
     208,   209,   210,     0,   212,     0,   213,     0,   751,   752,
     216,     0,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   753,   237,   238,   239,   240,   241,   754,
     755,     0,   756,     0,   245,     0,     0,   248,     0,   250,
     251,   252,   253,   254,     0,     0,   255,     0,   257,     0,
       0,   259,   260,   261,     0,     0,   262,   263,   264,   265,
     266,   757,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     758,     0,   759,   289,   290,   291,   760,     0,   293,   294,
       0,   296,     0,   761,   298,   762,   300,   301,   302,     0,
     303,   304,  1228,     0,   305,   306,   307,     0,     0,   308,
     763,     0,   311,     0,   764,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,   324,   325,   765,   327,
     328,   766,   330,   331,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   767,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     768,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   382,
     769,   384,   385,   386,     0,   388,   389,   770,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   771,   404,   772,   406,     0,   407,   408,     0,   409,
       0,   411,   412,   413,   414,   415,     0,   773,   774,     0,
       0,   418,   419,   775,   421,   776,  1229,   423,   424,   777,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,  1119,
     779,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     467,   468,   469,   470,     0,  1302,     0,     0,  1303,     0,
       0,  1230,  1231,  1304,  1305,  1306,     0,     0,     0,     0,
       0,     0,     0,  1302,     0,     0,  1303,     0,     0,     0,
    1307,  1304,  1305,  1306,  1756,     0,     0,     0,  1309,     0,
       0,     0,     0,     0,  1302,  1310,     0,  1303,  1307,     0,
       0,     0,  1304,  1305,  1306,     0,  1309,     0,     0,     0,
       0,     0,     0,  1310,     0,     0,     0,     0,     0,  1307,
    1311,     0,     0,     0,     0,     0,     0,  1309,     0,     0,
       0,     0,     0,  1302,  1310,     0,  1303,     0,  1311,     0,
       0,  1304,  1305,  1306,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1307,  1311,
       0,  1945,     0,     0,     0,     0,  1309,     0,     0,     0,
       0,  1757,     0,  1310,     0,     0,     0,     0,     0,  1302,
       0,     0,  1303,     0,     0,     0,     0,  1304,  1305,  1306,
       0,     0,     0,     0,     0,     0,     0,     0,  1311,     0,
       0,     0,     0,     0,  1307,     0,     0,     0,     0,     0,
       0,     0,  1309,     0,     0,     0,     0,     0,     0,  1310,
    1312,     0,     0,     0,     0,     0,     0,     0,  1983,     0,
       0,     0,     0,  1984,     0,  1313,     0,     0,  1312,     0,
    1314,     0,     0,     0,  1311,     0,     0,     0,  2916,     0,
       0,     0,     0,  1313,     0,     0,     0,     0,  1314,  1312,
       0,     0,  1315,  1316,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1313,     0,  1317,     0,     0,  1314,
    1315,  1316,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1317,     0,     0,  1302,  1312,     0,
    1303,  1315,  1316,     0,     0,  1304,  1305,  1306,     0,     0,
       0,     0,     0,  1313,  1318,  1317,     0,  1319,  1314,     0,
       0,     0,  1307,     0,     0,  1988,     0,     0,     0,     0,
    1309,  1320,  1318,     0,  1321,  1319,     0,  1310,     0,     0,
    1315,  1316,     0,     0,  1312,     0,     0,     0,     0,  1320,
       0,     0,  1321,  1318,  1317,     0,  1319,     0,     0,  1313,
       0,     0,  1311,     0,  1314,     0,     0,     0,     0,     0,
    1320,     0,     0,  1321,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1315,  1316,     0,     0,
       0,     0,  1318,     0,     0,  1319,  2917,     0,     0,     0,
    1317,     0,     0,     0,     0,     0,     0,     0,     0,  1320,
       0,     0,  1321,     0,     0,     0,     0,     0,     0,     0,
       0,  1322,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1318,  1322,
       0,  1319,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1320,     0,     0,  1321,     0,
    1322,     0,  1312,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1957,  1313,     0,     0,
    1758,     0,  1314,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1322,
       0,     0,     0,     0,  1315,  1316,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1317,     0,
       0,  1323,     0,     0,  1324,  1325,  1326,     0,  1327,  1328,
    1329,  1330,  1331,  1332,     0,     0,     0,     0,     0,  1323,
       0,     0,  1324,  1325,  1326,  1322,  1327,  1328,  1329,  1330,
    1331,  1332,     0,     0,     0,     0,  1318,     0,     0,  1319,
    1323,     0,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,
    1330,  1331,  1332,  1320,     0,     0,  1321,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1323,
       0,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,
    1331,  1332,     0,     0,     0,     0,     0,     0,  1302,     0,
       0,  1303,     0,     0,     0,     0,  1304,  1305,  1306,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1307,     0,  1323,     0,     0,  1324,  1325,
    1326,  1309,  1327,  1328,  1329,  1330,  1331,  1332,  1310,     0,
       0,     0,  1302,  1322,     0,  1303,     0,     0,     0,     0,
    1304,  1305,  1306,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1311,     0,     0,     0,  1307,  1302,     0,
    1995,  1303,     0,     0,     0,  1309,  1304,  1305,  1306,     0,
       0,     0,  1310,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1307,     0,     0,     0,     0,     0,     0,
       0,  1309,     0,     0,     0,     0,     0,  1311,  1310,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1302,     0,  1311,  1303,     0,     0,     0,     0,  1304,
    1305,  1306,     0,  1323,     0,     0,  1324,  1325,  1326,     0,
    1327,  1328,  1329,  1330,  1331,  1332,  1307,     0,  1993,  2250,
       0,     0,     0,  1312,  1309,     0,     0,     0,     0,     0,
       0,  1310,     0,     0,     0,     0,     0,     0,  1313,     0,
       0,     0,     0,  1314,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1311,     0,     0,     0,
       0,     0,     0,     0,     0,  1315,  1316,  1312,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1317,
       0,     0,  1313,     0,     0,     0,     0,  1314,     0,     0,
       0,     0,     0,  1312,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1313,  1315,
    1316,     0,     0,  1314,     0,     0,     0,  1318,     0,     0,
    1319,     0,     0,  1317,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1320,  1315,  1316,  1321,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1317,
       0,     0,     0,     0,     0,     0,  1312,     0,     0,     0,
       0,  1318,     0,     0,  1319,     0,     0,     0,     0,     0,
       0,  1313,     0,     0,     0,     0,  1314,     0,  1320,     0,
       0,  1321,     0,     0,     0,     0,     0,  1318,     0,     0,
    1319,     0,     0,     0,     0,     0,     0,     0,  1315,  1316,
       0,     0,     0,     0,  1320,     0,     0,  1321,     0,     0,
       0,     0,  1317,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1322,     0,     0,     0,     0,     0,
       0,  1302,     0,     0,  1303,     0,     0,     0,     0,  1304,
    1305,  1306,     0,     0,     0,     0,     0,     0,     0,     0,
    1318,     0,     0,  1319,     0,     0,  1307,     0,     0,     0,
       0,     0,     0,     0,  1309,     0,     0,  1320,  1322,     0,
    1321,  1310,     0,     0,     0,     0,     0,     0,  1302,     0,
       0,  1303,     0,     0,     0,     0,  1304,  1305,  1306,     0,
       0,     0,     0,     0,  1322,     0,  1311,     0,     0,     0,
       0,     0,     0,  1307,     0,     0,     0,     0,     0,     0,
       0,  1309,     0,     0,     0,     0,     0,     0,  1310,     0,
       0,     0,     0,     0,  1323,     0,  2208,  1324,  1325,  1326,
       0,  1327,  1328,  1329,  1330,  1331,  1332,     0,     0,     0,
       0,     0,     0,  1311,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1322,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1323,     0,
       0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,
    1332,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1323,     0,  1312,  1324,  1325,  1326,
       0,  1327,  1328,  1329,  1330,  1331,  1332,     0,     0,     0,
       0,  1313,     0,     0,     0,     0,  1314,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1315,  1316,
       0,     0,     0,  1312,     0,     0,     0,     0,     0,     0,
       0,     0,  1317,     0,     0,     0,     0,  1323,  1313,     0,
    1324,  1325,  1326,  1314,  1327,  1328,  1329,  1330,  1331,  1332,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1315,  1316,     0,     0,     0,
    1318,     0,     0,  1319,     0,     0,     0,     0,     0,  1317,
       0,     0,     0,     0,     0,     0,     0,  1320,     0,     0,
    1321,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1318,     0,     0,
    1319,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1320,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1322,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1322,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1323,     0,     0,
    1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1046,     0,  1664,  1323,     0,     0,  1324,  1325,  1326,
       0,  1327,  1328,  1329,  1330,  1331,  1332,    93,    94,    95,
      96,    97,    98,    99,   100,  1047,   101,   102,   103,  1048,
    1049,  1050,  1051,  1052,  1053,  1054,   104,   105,  1055,   106,
     107,   108,     0,   110,   111,   112,   739,   740,     0,   741,
     742,  1056,   118,   119,   120,   121,   122,   123,  1057,  1058,
     124,   125,   743,   744,   128,  1059,   129,   130,   131,   132,
     745,  1060,     0,  1061,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,  1062,   145,   146,   147,   148,   149,
     150,  1063,     0,   152,   153,   154,  1064,  1065,  1066,     0,
    1067,  1068,  1069,   156,   157,   158,   159,   160,   161,   162,
     746,   747,   165,  1070,   166,  1071,   167,   168,   169,   170,
     171,   172,  1072,   173,   174,   175,   176,   177,  1073,  1074,
     178,   179,   180,   181,   182,  1075,   183,   184,   185,  1076,
     186,   187,   188,  1077,   189,   190,   191,   192,   748,   194,
     195,   196,   197,   749,  1078,   199,  1079,   200,   201,   750,
     203,  1080,   204,  1081,   205,     0,  1082,     0,   208,   209,
     210,     0,   212,  1083,   213,  1084,   751,   752,   216,  1085,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,  1086,   228,   229,   230,   231,   232,   233,  1087,   234,
       0,   753,   237,   238,   239,   240,   241,   754,   755,  1088,
     756,  1089,   245,     0,     0,   248,     0,   250,   251,   252,
     253,   254,  1090,  1091,   255,     0,   257,     0,  1092,   259,
     260,   261,  1093,  1094,   262,   263,   264,   265,   266,   757,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   758,     0,
     759,   289,   290,   291,   760,  1095,   293,   294,     0,   296,
    1096,   761,   298,   762,   300,   301,   302,  1097,   303,   304,
    1098,  1099,   305,   306,   307,  1100,  1101,   308,   763,     0,
     311,     0,   764,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,  1102,   324,   325,   765,   327,   328,   766,
     330,   331,   332,  1103,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   767,   343,   344,   345,   346,  1104,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,  1105,   359,   360,     0,   362,   363,   364,   768,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
    1106,   377,   378,   379,   380,   381,  1107,   382,   769,   384,
     385,   386,     0,   388,   389,   770,   391,  1108,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   771,
     404,   772,   406,  1109,   407,   408,  1110,   409,     0,   411,
     412,   413,   414,   415,  1111,   773,   774,  1112,  1113,   418,
     419,   775,   421,   776,  1114,   423,   424,   777,   426,   427,
     428,   429,   430,  1115,  1116,   431,   432,   433,   434,   435,
    1117,  1118,   436,   437,   438,   439,   440,  1119,   779,  1120,
     443,     0,   445,   446,   447,   448,  1121,  1122,   449,  1123,
    1124,   450,   451,   452,   453,   454,   455,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   467,   468,
     469,   470,  1046,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,  1047,   101,   102,   103,
    1048,  1049,  1050,  1051,  1052,  1053,  1054,   104,   105,  1055,
     106,   107,   108,     0,   110,   111,   112,   739,   740,     0,
     741,   742,  1056,   118,   119,   120,   121,   122,   123,  1057,
    1058,   124,   125,   743,   744,   128,  1059,   129,   130,   131,
     132,   745,  1060,     0,  1061,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,  1062,   145,   146,   147,   148,
     149,   150,  1063,     0,   152,   153,   154,  1064,  1065,  1066,
       0,  1067,  1068,  1069,   156,   157,   158,   159,   160,   161,
     162,   746,   747,   165,  1070,   166,  1071,   167,   168,   169,
     170,   171,   172,  1072,   173,   174,   175,   176,   177,  1073,
    1074,   178,   179,   180,   181,   182,  1075,   183,   184,   185,
    1076,   186,   187,   188,  1077,   189,   190,   191,   192,   748,
     194,   195,   196,   197,   749,  1078,   199,  1079,   200,   201,
     750,   203,  1080,   204,  1081,   205,     0,  1082,     0,   208,
     209,   210,     0,   212,  1083,   213,  1084,   751,   752,   216,
    1085,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,  1086,   228,   229,   230,   231,   232,   233,  1087,
     234,     0,   753,   237,   238,   239,   240,   241,   754,   755,
    1088,   756,  1089,   245,     0,     0,   248,     0,   250,   251,
     252,   253,   254,  1090,  1091,   255,     0,   257,     0,  1092,
     259,   260,   261,  1093,  1094,   262,   263,   264,   265,   266,
     757,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   758,
       0,   759,   289,   290,   291,   760,  1095,   293,   294,     0,
     296,  1096,   761,   298,   762,   300,   301,   302,  1097,   303,
     304,  1098,  1099,   305,   306,   307,  1100,  1101,   308,   763,
       0,   311,     0,   764,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,  1102,   324,   325,   765,   327,   328,
     766,   330,   331,   332,  1103,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   767,   343,   344,   345,   346,  1104,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,  1105,   359,   360,     0,   362,   363,   364,   768,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,  1106,   377,   378,   379,   380,   381,  1107,   382,   769,
     384,   385,   386,     0,   388,   389,   770,   391,  1108,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     771,   404,   772,   406,  1109,   407,   408,  1110,   409,     0,
     411,   412,   413,   414,   415,  1111,   773,   774,  1112,  1113,
     418,   419,   775,   421,   776,  1114,   423,   424,   777,   426,
     427,   428,   429,   430,  1115,  1116,   431,   432,   433,   434,
     435,  1117,  1118,   436,   437,   438,   439,   440,  1119,   779,
    1120,   443,     0,   445,   446,   447,   448,  1121,  1122,   449,
    1123,  1124,   450,   451,   452,   453,   454,   455,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   467,
     468,   469,   470,  1046,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,  1805,    98,    99,   100,  1047,   101,   102,
     103,  1048,  1049,  1050,  1051,  1052,  1053,  1054,   104,   105,
    1055,   106,   107,   108,     0,   110,   111,   112,   739,   740,
       0,   741,   742,  1056,   118,   119,   120,   121,   122,   123,
    1057,  1058,   124,   125,   743,   744,   128,  1059,   129,   130,
     131,   132,   745,  1060,     0,  1061,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,  1062,   145,   146,   147,
     148,   149,   150,  1063,     0,   152,   153,   154,  1064,  1065,
    1066,     0,  1067,  1068,  1069,   156,   157,   158,   159,   160,
     161,   162,   746,   747,   165,  1070,   166,  1071,   167,   168,
     169,   170,   171,   172,  1072,   173,   174,   175,   176,   177,
    1073,  1074,   178,   179,   180,  1806,   182,  1075,   183,   184,
     185,  1076,   186,   187,   188,  1077,   189,   190,   191,   192,
     748,   194,   195,   196,   197,   749,  1078,   199,  1079,   200,
     201,   750,   203,  1080,   204,  1081,   205,     0,  1082,     0,
     208,   209,   210,     0,   212,  1083,   213,  1084,   751,   752,
     216,  1085,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,  1086,   228,   229,   230,   231,   232,   233,
    1087,   234,     0,   753,   237,   238,   239,   240,   241,   754,
     755,  1088,   756,  1089,   245,     0,     0,   248,     0,   250,
     251,   252,   253,   254,  1090,  1091,   255,     0,   257,     0,
    1092,   259,   260,   261,  1093,  1094,   262,   263,   264,   265,
     266,   757,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     758,     0,   759,   289,   290,   291,   760,  1095,   293,   294,
       0,   296,  1096,   761,   298,   762,   300,   301,   302,  1097,
     303,   304,  1098,  1099,   305,   306,   307,  1100,  1101,   308,
     763,     0,   311,     0,   764,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,  1102,   324,   325,   765,   327,
     328,   766,   330,   331,   332,  1103,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   767,   343,   344,   345,   346,
    1104,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,  1105,   359,   360,     0,   362,   363,   364,
     768,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,  1106,   377,   378,   379,   380,   381,  1107,  1807,
     769,   384,   385,   386,     0,   388,   389,   770,   391,  1108,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   771,   404,   772,   406,  1109,   407,   408,  1110,   409,
       0,   411,   412,   413,   414,   415,  1111,   773,   774,  1112,
    1113,   418,   419,   775,   421,   776,  1114,   423,   424,   777,
     426,   427,   428,   429,   430,  1115,  1116,   431,   432,   433,
     434,   435,  1117,  1118,   436,   437,   438,   439,   440,  1119,
     779,  1120,   443,     0,   445,   446,   447,   448,  1121,  1122,
     449,  1123,  1124,   450,   451,   452,   453,   454,   455,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     467,   468,   469,   470,    92,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,   820,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   823,     0,   824,     0,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,   152,   153,   154,   825,
     826,   827,   828,   829,   830,   831,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   836,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,     0,   244,     0,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,     0,     0,   255,   256,   257,
     258,     0,   259,   260,   261,   844,   845,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,     0,   850,   298,   299,   300,   301,   302,
       0,   303,   304,     0,     0,   305,   306,   307,     0,     0,
     308,   309,   310,   311,   312,   853,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,   324,   325,   854,
     327,   328,   329,   330,   331,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,   857,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   859,   406,     0,   407,   408,     0,
     409,   410,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   862,   421,   863,     0,   423,   424,
     865,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,   866,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    92,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,   134,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
       0,     0,     0,   155,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,     0,   199,
       0,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,     0,   244,     0,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,     0,     0,   255,   256,
     257,   258,     0,   259,   260,   261,     0,     0,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,     0,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   301,
     302,     0,   303,   304,     0,     0,   305,   306,   307,     0,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,   324,   325,
     326,   327,   328,   329,   330,   331,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   113,   114,     0,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   126,   127,   128,
    1419,   129,   130,   131,   132,   133,     0,     0,  1420,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,  1421,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,     0,
     199,     0,   200,   201,   202,   203,     0,   204,  1422,   205,
       0,     0,     0,   208,   209,   210,     0,   212,     0,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
    1423,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
     248,     0,   250,   251,   252,   253,   254,     0,     0,   255,
       0,   257,     0,     0,   259,   260,   261,     0,     0,   262,
     263,   264,   265,   266,   498,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,   288,   289,   290,   291,   292,
       0,   293,   294,     0,   296,     0,   297,   298,   299,   300,
     301,   302,     0,   303,   304,     0,     0,   305,   306,   307,
       0,     0,   308,   309,     0,   311,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,   324,
     325,   326,   327,   328,   329,   330,   331,   332,  1424,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,  1425,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,  1419,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
    1421,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
       0,   199,     0,   200,   201,   202,   203,     0,   204,  1422,
     205,     0,     0,     0,   208,   209,   210,     0,   212,     0,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,   248,     0,   250,   251,   252,   253,   254,     0,     0,
     255,     0,   257,  1871,     0,   259,   260,   261,     0,     0,
     262,   263,   264,   265,   266,   498,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,     0,   288,   289,   290,   291,
     292,     0,   293,   294,     0,   296,     0,   297,   298,   299,
     300,   301,   302,     0,   303,   304,     0,     0,   305,   306,
     307,     0,     0,   308,   309,     0,   311,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
     324,   325,   326,   327,   328,   329,   330,   331,   332,  1424,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   500,   404,   405,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   420,   421,   422,
       0,   423,   424,   425,   426,   427,   428,   429,   430,     0,
    1425,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   738,     0,
     544,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   739,   740,     0,   741,   742,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   743,
     744,   128,     0,   129,   130,   131,   132,   745,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   746,   747,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   748,   194,   195,   196,   197,
     749,  1227,   199,     0,   200,   201,   750,   203,     0,   204,
       0,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   751,   752,   216,     0,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   753,   237,
     238,   239,   240,   241,   754,   755,     0,   756,     0,   245,
       0,     0,   248,     0,   250,   251,   252,   253,   254,     0,
       0,   255,     0,   257,     0,     0,   259,   260,   261,     0,
       0,   262,   263,   264,   265,   266,   757,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   758,     0,   759,   289,   290,
     291,   760,     0,   293,   294,     0,   296,     0,   761,   298,
     762,   300,   301,   302,     0,   303,   304,  1228,     0,   305,
     306,   307,     0,     0,   308,   763,     0,   311,     0,   764,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,   324,   325,   765,   327,   328,   766,   330,   331,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     767,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   768,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   769,   384,   385,   386,     0,
     388,   389,   770,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   771,   404,   772,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   773,   774,     0,     0,   418,   419,   775,   421,
     776,  1229,   423,   424,   777,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,  1119,   779,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   467,   468,   469,   470,   496,
       0,   575,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     3,     4,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,     0,     0,     0,   208,   209,   210,     0,
     212,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   236,
     237,   238,   239,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,   248,     0,   250,   251,   252,   253,   254,
       0,     0,   255,     0,   257,     0,     0,   259,   260,   261,
       0,     0,   262,   263,   264,   265,   266,   498,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,     0,   288,   289,
     290,   291,   292,     0,   293,   294,     0,   296,     0,   297,
     298,   299,   300,   301,   302,     0,   303,   304,     0,     0,
     305,   306,   307,     0,     0,   308,   309,     0,   311,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,   324,   325,   326,   327,   328,   329,   330,   331,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   500,   404,   405,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,   418,   419,   420,
     421,   422,     0,   423,   424,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   441,   442,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     496,     0,   575,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,   248,     0,   250,   251,   252,   253,
     254,     0,     0,   255,     0,   257,     0,     0,   259,   260,
     261,     0,     0,   262,   263,   264,   265,   266,   498,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,   288,
     289,   290,   291,   292,     0,   293,   294,     0,   296,     0,
     297,   298,   299,   300,   301,   302,     0,   303,   304,     0,
     576,   305,   306,   307,     0,     0,   308,   309,     0,   311,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   326,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,   575,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,     0,   199,     0,   200,   201,   202,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   619,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,   248,     0,   250,   251,   252,
     253,   254,     0,     0,   255,     0,   257,     0,     0,   259,
     260,   261,     0,     0,   262,   263,   264,   265,   266,   498,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
     288,   289,   290,   291,   292,     0,   293,   294,     0,   296,
       0,   297,   298,   299,   300,   301,   302,     0,   303,   304,
       0,   576,   305,   306,   307,     0,     0,   308,   309,     0,
     311,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,   324,   325,   326,   327,   328,   329,
     330,   331,   332,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   388,   389,   390,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   500,
     404,   405,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,   418,
     419,   420,   421,   422,     0,   423,   424,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   441,   442,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   738,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       3,     4,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   110,   111,   112,   739,   740,     0,
     741,   742,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   743,   744,   128,     0,   129,   130,   131,
     132,   745,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   746,   747,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   748,
     194,   195,   196,   197,   749,     0,   199,     0,   200,   201,
     750,   203,     0,   204,     0,   205,     0,     0,     0,   208,
     209,   210,     0,   212,     0,   213,     0,   751,   752,   216,
       0,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   753,   237,   238,   239,   240,   241,   754,   755,
       0,   756,     0,   245,     0,     0,   248,     0,   250,   251,
     252,   253,   254,     0,     0,   255,     0,   257,     0,     0,
     259,   260,   261,     0,     0,   262,   263,   264,   265,   266,
     757,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   758,
       0,   759,   289,   290,   291,   760,     0,   293,   294,     0,
     296,     0,   761,   298,   762,   300,   301,   302,     0,   303,
     304,     0,     0,   305,   306,   307,     0,     0,   308,   763,
       0,   311,     0,   764,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,   324,   325,   765,   327,   328,
     766,   330,   331,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   767,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   768,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   769,
     384,   385,   386,     0,   388,   389,   770,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     771,   404,   772,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   773,   774,     0,     0,
     418,   419,   775,   421,   776,     0,   423,   424,   777,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,  1119,   779,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   467,
     468,   469,   470,   496,     0,   575,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,     0,   199,     0,   200,
     201,   202,   203,     0,   204,     0,   205,     0,     0,     0,
     208,   209,   210,     0,  1717,     0,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   236,   237,   238,   239,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,   248,     0,   250,
     251,   252,   253,   254,     0,     0,   255,     0,   257,     0,
       0,   259,   260,  1718,     0,     0,   262,   263,   264,   265,
     266,   498,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,   288,   289,   290,   291,   292,     0,   293,   294,
       0,   296,     0,   297,   298,   299,   300,   301,   302,     0,
     303,   304,     0,     0,   305,   306,   307,     0,     0,   308,
     309,     0,   311,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,   324,   325,   326,   327,
     328,   329,   330,   331,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   500,   404,   405,   406,     0,   407,   408,  1719,   409,
       0,   411,  1720,   413,  1721,   415,     0,   416,   417,     0,
       0,   418,   419,   420,   421,   422,     0,   423,   424,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,  1722,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   496,  2637,     0,     0,     0,     0,
    2638,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   110,   111,   112,   113,
     114,     0,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,     0,     0,
       0,   208,   209,   210,     0,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,   248,     0,
     250,   251,   252,   253,   254,     0,     0,   255,     0,   257,
       0,     0,   259,   260,   261,     0,     0,   262,   263,   264,
     265,   266,   498,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,   288,   289,   290,   291,   292,     0,   293,
     294,     0,   296,     0,   297,   298,   299,   300,   301,   302,
       0,   303,   304,     0,     0,   305,   306,   307,     0,     0,
     308,   309,     0,   311,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,   324,   325,   326,
     327,   328,   329,   330,   331,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,   497,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,     0,   199,
       0,   200,   201,   202,   203,     0,   204,     0,   205,     0,
       0,     0,   208,   209,   210,     0,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,   248,
       0,   250,   251,   252,   253,   254,     0,     0,   255,     0,
     257,     0,     0,   259,   260,   261,     0,     0,   262,   263,
     264,   265,   266,   498,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,     0,   288,   289,   290,   291,   292,     0,
     293,   294,     0,   296,     0,   297,   298,   299,   300,   301,
     302,     0,   303,   304,     0,     0,   305,   306,   307,     0,
       0,   308,   309,     0,   311,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,   324,   325,
     326,   327,   328,   329,   499,   331,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   500,   404,   405,   406,     0,   407,   408,
       0,   409,     0,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,     0,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
     550,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   113,   114,     0,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,     0,
     199,     0,   200,   201,   202,   203,     0,   204,     0,   205,
       0,     0,     0,   208,   209,   210,     0,   212,     0,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
     248,     0,   250,   251,   252,   253,   254,     0,     0,   255,
       0,   257,     0,     0,   259,   260,   261,     0,     0,   262,
     263,   264,   265,   266,   498,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,   288,   289,   290,   291,   292,
       0,   293,   294,     0,   296,     0,   297,   298,   299,   300,
     301,   302,     0,   303,   304,     0,     0,   305,   306,   307,
       0,     0,   308,   309,     0,   311,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,   324,
     325,   326,   327,   328,   329,   330,   331,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     551,   417,     0,     0,   552,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,   575,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
       0,   199,     0,   200,   201,   202,   203,     0,   204,     0,
     205,     0,     0,     0,   208,   209,   210,     0,   212,     0,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   614,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,   248,     0,   250,   251,   252,   253,   254,     0,     0,
     255,     0,   257,     0,     0,   259,   260,   261,     0,     0,
     262,   263,   264,   265,   266,   498,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,     0,   288,   289,   290,   291,
     292,     0,   293,   294,     0,   296,     0,   297,   298,   299,
     300,   301,   302,     0,   303,   304,     0,     0,   305,   306,
     307,     0,     0,   308,   309,     0,   311,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
     324,   325,   326,   327,   328,   329,   330,   331,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   500,   404,   405,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   420,   421,   422,
       0,   423,   424,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   496,     0,
     575,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   113,   114,     0,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,     0,   199,     0,   200,   201,   202,   203,     0,   204,
       0,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   617,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,   243,     0,   244,     0,   245,
       0,     0,   248,     0,   250,   251,   252,   253,   254,     0,
       0,   255,     0,   257,     0,     0,   259,   260,   261,     0,
       0,   262,   263,   264,   265,   266,   498,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,   288,   289,   290,
     291,   292,     0,   293,   294,     0,   296,     0,   297,   298,
     299,   300,   301,   302,     0,   303,   304,     0,     0,   305,
     306,   307,     0,     0,   308,   309,     0,   311,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,   324,   325,   326,   327,   328,   329,   330,   331,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,   575,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,     0,     0,     0,   208,   209,   210,     0,
     212,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   621,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   236,
     237,   238,   239,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,   248,     0,   250,   251,   252,   253,   254,
       0,     0,   255,     0,   257,     0,     0,   259,   260,   261,
       0,     0,   262,   263,   264,   265,   266,   498,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,     0,   288,   289,
     290,   291,   292,     0,   293,   294,     0,   296,     0,   297,
     298,   299,   300,   301,   302,     0,   303,   304,     0,     0,
     305,   306,   307,     0,     0,   308,   309,     0,   311,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,   324,   325,   326,   327,   328,   329,   330,   331,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   500,   404,   405,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,   418,   419,   420,
     421,   422,     0,   423,   424,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   441,   442,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     496,     0,   575,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,   248,     0,   250,   251,   252,   253,
     254,     0,     0,   255,     0,   257,     0,     0,   259,   260,
     261,     0,     0,   262,   263,   264,   265,   266,   498,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,   288,
     289,   290,   291,   292,     0,   293,   294,     0,   296,     0,
     297,   298,   299,   300,   301,   302,     0,   303,   304,     0,
       0,   305,   306,   307,     0,     0,   308,   309,     0,   311,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   326,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,   649,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,     0,   199,     0,   200,   201,   202,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,   248,     0,   250,   251,   252,
     253,   254,     0,     0,   255,     0,   257,     0,     0,   259,
     260,   261,     0,     0,   262,   263,   264,   265,   266,   498,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
     288,   289,   290,   291,   292,     0,   293,   294,     0,   296,
       0,   297,   298,   299,   300,   301,   302,     0,   303,   304,
       0,     0,   305,   306,   307,     0,     0,   308,   309,     0,
     311,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,   324,   325,   326,   327,   328,   329,
     330,   331,   332,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   388,   389,   390,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   500,
     404,   405,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,   418,
     419,   420,   421,   422,     0,   423,   424,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   441,   442,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   496,     0,   575,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   110,   111,   112,   113,   114,     0,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,     0,   199,     0,   200,   201,
     202,   203,     0,   204,     0,   205,     0,     0,     0,   208,
     209,   210,     0,   212,     0,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,  1141,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,   248,     0,   250,   251,
     252,   253,   254,     0,     0,   255,     0,   257,     0,     0,
     259,   260,   261,     0,     0,   262,   263,   264,   265,   266,
     498,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
       0,   288,   289,   290,   291,   292,     0,   293,   294,     0,
     296,     0,   297,   298,   299,   300,   301,   302,     0,   303,
     304,     0,     0,   305,   306,   307,     0,     0,   308,   309,
       0,   311,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,   324,   325,   326,   327,   328,
     329,   330,   331,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,   575,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,     0,   199,     0,   200,
     201,   202,   203,     0,   204,     0,   205,     0,     0,     0,
     208,   209,   210,     0,   212,     0,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,  1143,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   236,   237,   238,   239,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,   248,     0,   250,
     251,   252,   253,   254,     0,     0,   255,     0,   257,     0,
       0,   259,   260,   261,     0,     0,   262,   263,   264,   265,
     266,   498,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,   288,   289,   290,   291,   292,     0,   293,   294,
       0,   296,     0,   297,   298,   299,   300,   301,   302,     0,
     303,   304,     0,     0,   305,   306,   307,     0,     0,   308,
     309,     0,   311,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,   324,   325,   326,   327,
     328,   329,   330,   331,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   500,   404,   405,   406,     0,   407,   408,     0,   409,
       0,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,   418,   419,   420,   421,   422,     0,   423,   424,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   496,     0,   575,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   110,   111,   112,   113,
     114,     0,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,     0,     0,
       0,   208,   209,   210,     0,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,  1549,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,   248,     0,
     250,   251,   252,   253,   254,     0,     0,   255,     0,   257,
       0,     0,   259,   260,   261,     0,     0,   262,   263,   264,
     265,   266,   498,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,   288,   289,   290,   291,   292,     0,   293,
     294,     0,   296,     0,   297,   298,   299,   300,   301,   302,
       0,   303,   304,     0,     0,   305,   306,   307,     0,     0,
     308,   309,     0,   311,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,   324,   325,   326,
     327,   328,   329,   330,   331,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,  2289,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,     0,   199,
       0,   200,   201,   202,   203,     0,   204,     0,   205,     0,
       0,     0,   208,   209,   210,     0,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,   248,
       0,   250,   251,   252,   253,   254,     0,     0,   255,     0,
     257,     0,     0,   259,   260,   261,     0,     0,   262,   263,
     264,   265,   266,   498,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,     0,   288,   289,   290,   291,   292,     0,
     293,   294,     0,   296,     0,   297,   298,   299,   300,   301,
     302,     0,   303,   304,     0,     0,   305,   306,   307,     0,
       0,   308,   309,     0,   311,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,   324,   325,
     326,   327,   328,   329,   330,   331,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   500,   404,   405,   406,     0,   407,   408,
       0,   409,     0,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,     0,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,  2303,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   113,   114,     0,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,     0,
     199,     0,   200,   201,   202,   203,     0,   204,     0,   205,
       0,     0,     0,   208,   209,   210,     0,   212,     0,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
     248,     0,   250,   251,   252,   253,   254,     0,     0,   255,
       0,   257,     0,     0,   259,   260,   261,     0,     0,   262,
     263,   264,   265,   266,   498,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,   288,   289,   290,   291,   292,
       0,   293,   294,     0,   296,     0,   297,   298,   299,   300,
     301,   302,     0,   303,   304,     0,     0,   305,   306,   307,
       0,     0,   308,   309,     0,   311,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,   324,
     325,   326,   327,   328,   329,   330,   331,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,   575,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
       0,   199,     0,   200,   201,   202,   203,     0,   204,     0,
     205,     0,     0,     0,   208,   209,   210,     0,   212,     0,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,  2434,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,   248,     0,   250,   251,   252,   253,   254,     0,     0,
     255,     0,   257,     0,     0,   259,   260,   261,     0,     0,
     262,   263,   264,   265,   266,   498,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,     0,   288,   289,   290,   291,
     292,     0,   293,   294,     0,   296,     0,   297,   298,   299,
     300,   301,   302,     0,   303,   304,     0,     0,   305,   306,
     307,     0,     0,   308,   309,     0,   311,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
     324,   325,   326,   327,   328,   329,   330,   331,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   500,   404,   405,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   420,   421,   422,
       0,   423,   424,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   496,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   113,   114,     0,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,     0,   199,     0,   200,   201,   202,   203,     0,   204,
       0,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,   243,     0,   244,     0,   245,
       0,     0,   248,     0,   250,   251,   252,   253,   254,     0,
       0,   255,     0,   257,     0,     0,   259,   260,   261,     0,
       0,   262,   263,   264,   265,   266,   498,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,   288,   289,   290,
     291,   292,     0,   293,   294,     0,   296,     0,   297,   298,
     299,   300,   301,   302,     0,   303,   304,     0,     0,   305,
     306,   307,     0,     0,   308,   309,     0,   311,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,   324,   325,   326,   327,   328,   329,   330,   331,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,     0,     0,     0,   208,   209,   210,     0,
     562,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   236,
     237,   238,   239,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,   248,     0,   250,   251,   252,   253,   254,
       0,     0,   255,     0,   257,     0,     0,   259,   260,   563,
       0,     0,   262,   263,   264,   265,   266,   498,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,     0,   288,   289,
     290,   291,   292,     0,   293,   294,     0,   296,     0,   297,
     298,   299,   300,   301,   302,     0,   303,   304,     0,     0,
     305,   306,   307,     0,     0,   308,   309,     0,   311,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,   324,   325,   326,   327,   328,   329,   330,   331,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   564,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   565,     0,   382,   383,   384,   385,   386,
       0,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   500,   404,   405,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   566,   417,     0,     0,   418,   419,   420,
     421,   422,     0,   423,   424,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   441,   442,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     496,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,   248,     0,   250,   251,   252,   253,
     254,     0,     0,   255,     0,   257,     0,     0,   259,   260,
     261,     0,     0,   262,   263,   264,   265,   266,   498,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,   288,
     289,   290,   291,   292,     0,   293,   294,     0,   296,     0,
     297,   298,   299,   300,   301,   302,     0,   303,   304,     0,
       0,   305,   306,   307,     0,     0,   308,   309,     0,   311,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   326,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   585,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,     0,   199,     0,   200,   201,   202,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   639,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,   248,     0,   250,   251,   252,
     253,   254,     0,     0,   255,     0,   257,     0,     0,   259,
     260,   261,     0,     0,   262,   263,   264,   265,   266,   498,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
     288,   289,   290,   291,   292,     0,   293,   294,     0,   296,
       0,   297,   298,   299,   300,   301,   302,     0,   303,   304,
       0,     0,   305,   306,   307,     0,     0,   308,   309,     0,
     311,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,   324,   325,   326,   327,   328,   329,
     330,   331,   332,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   388,   389,   390,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   500,
     404,   405,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,   418,
     419,   420,   421,   422,     0,   423,   424,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   441,   442,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   496,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   110,   111,   112,   113,   114,     0,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,     0,   199,     0,   200,   201,
     202,   203,     0,   204,     0,   205,     0,     0,     0,   208,
     209,   210,     0,   212,     0,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   726,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,   248,     0,   250,   251,
     252,   253,   254,     0,     0,   255,     0,   257,     0,     0,
     259,   260,   261,     0,     0,   262,   263,   264,   265,   266,
     498,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
       0,   288,   289,   290,   291,   292,     0,   293,   294,     0,
     296,     0,   297,   298,   299,   300,   301,   302,     0,   303,
     304,     0,     0,   305,   306,   307,     0,     0,   308,   309,
       0,   311,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,   324,   325,   326,   327,   328,
     329,   330,   331,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,     0,   199,     0,   200,
     201,   202,   203,     0,   204,     0,   205,     0,     0,     0,
     208,   209,   210,     0,   212,     0,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   729,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   236,   237,   238,   239,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,   248,     0,   250,
     251,   252,   253,   254,     0,     0,   255,     0,   257,     0,
       0,   259,   260,   261,     0,     0,   262,   263,   264,   265,
     266,   498,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,   288,   289,   290,   291,   292,     0,   293,   294,
       0,   296,     0,   297,   298,   299,   300,   301,   302,     0,
     303,   304,     0,     0,   305,   306,   307,     0,     0,   308,
     309,     0,   311,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,   324,   325,   326,   327,
     328,   329,   330,   331,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   500,   404,   405,   406,     0,   407,   408,     0,   409,
       0,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,   418,   419,   420,   421,   422,     0,   423,   424,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   496,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   110,   111,   112,   113,
     114,     0,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,     0,     0,
       0,   208,   209,   210,     0,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   732,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,   248,     0,
     250,   251,   252,   253,   254,     0,     0,   255,     0,   257,
       0,     0,   259,   260,   261,     0,     0,   262,   263,   264,
     265,   266,   498,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,   288,   289,   290,   291,   292,     0,   293,
     294,     0,   296,     0,   297,   298,   299,   300,   301,   302,
       0,   303,   304,     0,     0,   305,   306,   307,     0,     0,
     308,   309,     0,   311,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,   324,   325,   326,
     327,   328,   329,   330,   331,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,     0,   199,
       0,   200,   201,   202,   203,     0,   204,     0,   205,     0,
       0,     0,   208,   209,   210,     0,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,   248,
       0,   250,   251,   252,   253,   254,     0,     0,   255,     0,
     257,     0,     0,   259,   260,   261,     0,     0,   262,   263,
     264,   265,   266,   498,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,     0,   288,   289,   290,   291,   292,     0,
     293,   294,     0,   296,     0,   297,   298,   299,   300,   301,
     302,     0,   303,   304,     0,     0,   305,   306,   307,     0,
       0,   308,   309,     0,   311,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,   324,   325,
     326,   327,   328,   329,   330,   331,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   564,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   500,   404,   405,   406,     0,   407,   408,
       0,   409,     0,   411,   412,   413,   414,   415,     0,   566,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,     0,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,  1377,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   113,   114,     0,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,     0,
     199,     0,   200,   201,   202,   203,     0,   204,     0,   205,
       0,     0,     0,   208,   209,   210,     0,   212,     0,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
     248,     0,   250,   251,   252,   253,   254,     0,     0,   255,
       0,   257,     0,     0,   259,   260,   261,     0,     0,   262,
     263,   264,   265,   266,   498,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,   288,   289,   290,   291,   292,
       0,   293,   294,     0,   296,     0,   297,   298,   299,   300,
     301,   302,     0,   303,   304,     0,     0,   305,   306,   307,
       0,     0,   308,   309,     0,   311,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,   324,
     325,   326,   327,   328,   329,   330,   331,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,     0,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
       0,   199,     0,   200,   201,   202,   203,     0,   204,     0,
     205,     0,     0,     0,   208,   209,   210,     0,   212,     0,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,  1514,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,   248,     0,   250,   251,   252,   253,   254,     0,     0,
     255,     0,   257,     0,     0,   259,   260,   261,     0,     0,
     262,   263,   264,   265,   266,   498,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,     0,   288,   289,   290,   291,
     292,     0,   293,   294,     0,   296,     0,   297,   298,   299,
     300,   301,   302,     0,   303,   304,     0,     0,   305,   306,
     307,     0,     0,   308,   309,     0,   311,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
     324,   325,   326,   327,   328,   329,   330,   331,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   500,   404,   405,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   420,   421,   422,
       0,   423,   424,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   496,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   113,   114,     0,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,     0,   199,     0,   200,   201,   202,   203,     0,   204,
       0,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,  1789,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,   243,     0,   244,     0,   245,
       0,     0,   248,     0,   250,   251,   252,   253,   254,     0,
       0,   255,     0,   257,     0,     0,   259,   260,   261,     0,
       0,   262,   263,   264,   265,   266,   498,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,   288,   289,   290,
     291,   292,     0,   293,   294,     0,   296,     0,   297,   298,
     299,   300,   301,   302,     0,   303,   304,     0,     0,   305,
     306,   307,     0,     0,   308,   309,     0,   311,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,   324,   325,   326,   327,   328,   329,   330,   331,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,     0,     0,     0,   208,   209,   210,     0,
     212,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,  1801,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   236,
     237,   238,   239,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,   248,     0,   250,   251,   252,   253,   254,
       0,     0,   255,     0,   257,     0,     0,   259,   260,   261,
       0,     0,   262,   263,   264,   265,   266,   498,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,     0,   288,   289,
     290,   291,   292,     0,   293,   294,     0,   296,     0,   297,
     298,   299,   300,   301,   302,     0,   303,   304,     0,     0,
     305,   306,   307,     0,     0,   308,   309,     0,   311,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,   324,   325,   326,   327,   328,   329,   330,   331,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   500,   404,   405,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,   418,   419,   420,
     421,   422,     0,   423,   424,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   441,   442,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     496,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,  1803,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,   248,     0,   250,   251,   252,   253,
     254,     0,     0,   255,     0,   257,     0,     0,   259,   260,
     261,     0,     0,   262,   263,   264,   265,   266,   498,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,   288,
     289,   290,   291,   292,     0,   293,   294,     0,   296,     0,
     297,   298,   299,   300,   301,   302,     0,   303,   304,     0,
       0,   305,   306,   307,     0,     0,   308,   309,     0,   311,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,   326,   327,   328,   329,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,     0,   199,     0,   200,   201,   202,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,   248,     0,   250,   251,   252,
     253,   254,     0,     0,   255,     0,   257,     0,     0,   259,
     260,   261,     0,     0,   262,   263,   264,   265,   266,   498,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
     288,   289,   290,   291,   292,     0,   293,   294,     0,   296,
       0,   297,   298,   299,   300,   301,   302,     0,   303,   304,
       0,     0,   305,   306,   307,     0,     0,   308,   309,     0,
     311,     0,   313,   314,   315,   316,   317,   318,   319,     0,
     321,   322,   323,     0,   324,   325,   326,   327,   328,   329,
     330,   331,   332,     0,   333,   334,   335,   336,   337,   338,
     339,     0,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   388,   389,   390,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   500,
     404,   405,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,   418,
     419,   420,   421,   422,     0,   423,   424,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   441,   442,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   657,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,   658,   110,   111,   112,     0,   659,   660,
     661,   662,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   663,   664,   128,     0,   129,   130,   131,
     132,     0,     0,   665,     0,   135,   136,   137,   138,   139,
     140,   666,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   667,   152,   153,   154,     0,     0,     0,
     668,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   669,   670,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   671,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,     0,
     194,   195,   196,   197,     0,     0,   199,     0,   200,   201,
     672,   203,     0,   204,     0,   205,   673,     0,   674,   208,
     209,   210,   675,   212,     0,   213,     0,     0,     0,   216,
       0,   217,   218,   219,   220,   221,   676,   677,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   678,     0,   237,   238,   239,   240,   241,   679,   680,
       0,   681,     0,   245,   682,   683,   248,   684,   250,   251,
     252,   253,   254,     0,     0,   255,   685,   257,   686,     0,
     259,   260,   261,     0,     0,   262,   263,   264,   265,   266,
     687,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   688,
     689,   690,   289,   290,   291,     0,     0,   293,   294,   691,
     296,     0,     0,   298,   692,   300,   301,   302,     0,   303,
     304,     0,     0,   305,   306,   307,     0,     0,   308,     0,
     693,   311,   694,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,   324,   325,     0,   327,   328,
       0,   330,   331,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   695,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,   696,   362,   363,   364,   697,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   698,
     384,   385,   386,   699,   388,   389,   700,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     701,   404,     0,   406,     0,   407,   408,     0,   409,   702,
     411,   412,   413,   414,   415,     0,   703,   704,     0,     0,
     418,   419,     0,   421,     0,     0,   423,   424,   705,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,     0,   706,
       0,   443,   707,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   657,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   467,
     468,   469,   470,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,   658,
     110,   111,   112,     0,   659,   660,   661,   662,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   663,
     664,   128,     0,   129,   130,   131,   132,     0,     0,   665,
       0,   135,   136,   137,   138,   139,   140,   666,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   667,
     152,   153,   154,     0,     0,     0,   668,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   669,   670,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   671,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,     0,   194,   195,   196,   197,
       0,     0,   199,     0,   200,   201,   672,   203,     0,   204,
       0,   205,   673,     0,   674,   208,   209,   210,   675,   212,
       0,   213,     0,     0,     0,   216,     0,   217,   218,   219,
     220,   221,   222,   677,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   678,     0,   237,
     238,   239,   240,   241,   679,   680,     0,   681,     0,   245,
     682,   683,   248,   684,   250,   251,   252,   253,   254,     0,
       0,   255,   685,   257,   686,     0,   259,   260,   261,     0,
       0,   262,   263,   264,   265,   266,   687,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   688,   689,   690,   289,   290,
     291,     0,     0,   293,   294,   691,   296,     0,     0,   298,
     692,   300,   301,   302,     0,   303,   304,     0,     0,   305,
     306,   307,     0,     0,   308,     0,   693,   311,   694,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,   324,   325,     0,   327,   328,     0,   330,   331,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     695,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,   696,   362,   363,   364,   697,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   698,   384,   385,   386,   699,
     388,   389,   700,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   701,   404,     0,   406,
       0,   407,   408,     0,   409,   702,   411,   412,   413,   414,
     415,     0,   703,   704,     0,     0,   418,   419,     0,   421,
       0,     0,   423,   424,   705,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,     0,   706,     0,   443,   707,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,  2375,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   467,   468,   469,   470,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,  2376,   110,   111,   112,     0,
     659,  2377,   661,   662,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   663,   664,   128,     0,   129,
     130,   131,   132,     0,     0,  2378,     0,   135,   136,   137,
     138,   139,   140,  2379,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,  2380,   152,   153,   154,     0,
       0,     0,  2381,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   669,   670,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   671,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,     0,   194,   195,   196,   197,     0,     0,   199,     0,
     200,   201,   672,   203,     0,   204,     0,   205,  2382,     0,
    2383,   208,   209,   210,  2384,   212,     0,   213,     0,     0,
       0,   216,     0,   217,   218,   219,   220,   221,   222,  2385,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,  2386,     0,   237,   238,   239,   240,   241,
     679,   680,     0,   681,     0,   245,  2387,  2388,   248,  2389,
     250,   251,   252,   253,   254,     0,     0,   255,  2390,   257,
    2391,     0,   259,   260,   261,     0,     0,   262,   263,   264,
     265,   266,  2582,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   688,  2393,   690,   289,   290,   291,     0,     0,   293,
     294,  2395,   296,     0,     0,   298,   692,   300,   301,   302,
       0,   303,   304,     0,     0,   305,   306,   307,     0,     0,
     308,     0,  2397,   311,  2398,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,   324,   325,     0,
     327,   328,     0,   330,   331,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   695,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,  2399,   362,   363,
     364,     0,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,     0,   384,   385,   386,  2401,   388,   389,   700,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,  2583,   404,     0,   406,     0,   407,   408,     0,
     409,  2403,   411,   412,   413,   414,   415,     0,   703,   704,
       0,     0,   418,   419,     0,   421,     0,     0,   423,   424,
    2404,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,   706,     0,   443,  2405,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     657,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   467,   468,   469,   470,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,   658,   110,   111,   112,     0,   659,   660,   661,   662,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   663,   664,   128,     0,   129,   130,   131,   132,     0,
       0,   665,     0,   135,   136,   137,   138,   139,   140,   666,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   667,   152,   153,   154,     0,     0,     0,   668,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   669,
     670,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   671,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,     0,   194,   195,
     196,   197,     0,     0,   199,     0,   200,   201,   672,   203,
       0,   204,     0,   205,   673,     0,   674,   208,   209,   210,
     675,   212,     0,   213,     0,     0,     0,   216,     0,   217,
     218,   219,   220,   221,   222,   677,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   678,
       0,   237,   238,   239,   240,   241,   679,   680,     0,   681,
       0,   245,   682,   683,   248,   684,   250,   251,   252,   253,
     254,     0,     0,   255,   685,   257,   686,     0,   259,   260,
     261,     0,     0,   262,   263,   264,   265,   266,     0,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   688,   689,   690,
     289,   290,   291,     0,     0,   293,   294,   691,   296,     0,
       0,   298,   692,   300,   301,   302,     0,   303,   304,     0,
       0,   305,   306,   307,     0,     0,   308,     0,   693,   311,
     694,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   324,   325,     0,   327,   328,     0,   330,
     331,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   695,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,   696,   362,   363,   364,     0,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,     0,   384,   385,
     386,   699,   388,   389,   700,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,     0,   404,
       0,   406,     0,   407,   408,     0,   409,   702,   411,   412,
     413,   414,   415,     0,   703,   704,     0,     0,   418,   419,
       0,   421,     0,     0,   423,   424,   705,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,     0,   706,     0,   443,
     707,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   467,   468,   469,
     470
};

static const yytype_int16 yycheck[] =
{
       6,   618,    36,    59,   604,     0,   795,   698,   527,   533,
     561,     0,   874,   625,   795,   633,   490,   579,    16,   704,
       6,   994,   531,   584,   992,  1730,  1136,     0,  1167,     0,
       6,  1270,   876,     0,   967,    30,   627,   972,  1136,  1799,
    1136,  1136,  1172,   969,  1223,   524,    61,  2087,   892,    16,
      61,   963,   526,  1805,  2135,  1807,  2045,  2135,   533,  2160,
     904,   727,  1299,  1300,   730,    31,     0,  1033,  1686,  2159,
     532,   997,  1796,  1750,    35,   618,     5,   620,   802,   622,
     524,     0,     0,  2178,    79,     5,     9,  2171,  1251,    11,
      50,     5,  2051,    13,    14,     9,     9,  1997,  1352,    23,
     663,   664,    58,    58,    58,    29,     3,   538,  2446,  2495,
    2443,     5,     5,   115,  1398,    40,     0,     5,     5,  1400,
      13,    14,     9,    89,   117,    13,    14,   690,    73,   638,
       5,   912,    16,  1137,    31,    32,     5,   168,    13,    14,
     168,   601,     5,     5,  1868,  2531,    30,   601,     5,    40,
      13,    14,    36,  2429,    13,    14,     5,     5,     5,  2517,
       5,     5,     5,    27,   107,     5,  1265,     5,     5,    75,
     122,     5,    58,   734,    93,    93,   861,    61,    58,   137,
      86,   169,    67,     3,     4,     5,   213,    15,     4,     9,
    2586,  2617,    11,     9,    83,    79,  2050,  1265,    27,    11,
     981,    27,    75,   984,   985,    34,   282,     4,    34,  1933,
    1934,   135,     9,    86,    78,   120,   288,  1985,   120,   698,
     168,  1265,    41,    87,  2716,   280,    48,  2362,  2076,    41,
     268,  2617,  2414,   350,    59,   162,   145,   169,   127,  1623,
    1624,   219,    67,    37,  1628,   219,   288,   304,  2540,    27,
     304,   107,   116,  2678,    73,   371,    34,    11,   821,   822,
    1272,    73,   271,   158,  2847,  2603,  2849,  2106,   163,  2561,
     167,   795,   169,  2872,    27,   433,   158,   801,   449,    11,
     165,  1005,   115,   118,   847,  1669,  1670,   265,  1012,   980,
     160,   265,   433,   295,   351,   115,  2654,   452,  2784,   160,
     158,   206,   211,    11,  2293,   454,   488,   397,  2297,    41,
     492,   872,   130,    11,   411,   877,    13,    14,   118,  2400,
    2812,   476,   186,   494,   803,  2284,   108,   476,   919,   341,
     124,   117,   490,   197,   145,   230,   798,  2438,  1956,  2938,
    2923,    73,   432,   905,  2183,  2105,   324,   158,   230,   490,
    2440,   173,   163,   223,   189,   120,     4,   369,   455,  2745,
     362,     9,   286,   282,   282,    73,   188,   376,   300,   931,
     135,   193,   230,   490,   490,   108,  1388,   130,  2102,   288,
    2104,   409,  2715,   310,   279,   265,   342,   342,   342,   189,
     914,   915,   212,   431,   372,  2781,   398,   279,   372,  1958,
     211,   962,  2584,   264,   115,  2891,  2698,   229,   233,   265,
     299,    31,    32,   233,   490,   934,   340,  2909,  2843,   230,
    2555,    93,   494,  1147,   343,   343,  1726,  1986,   485,  2283,
     315,   485,   402,   912,   404,   490,  2712,   439,  1038,   272,
    1539,  1741,   435,   375,  2870,   369,   239,  1686,    23,  2217,
     452,   479,   494,   431,    29,   398,   342,   431,  2854,   277,
     524,   409,   342,   494,   492,   293,   163,   494,   279,  2827,
     395,  1539,  1540,    93,   476,   186,  2814,   288,  2202,  1763,
    2813,   433,  2330,  1764,  2870,   480,   272,  1420,   490,   369,
     448,   480,   386,   387,  1538,  1732,  1500,   928,  1752,   533,
     960,   980,   490,   409,   395,  2586,   960,   480,  2586,   480,
    1476,  2595,   436,   480,   403,  2504,   425,   323,   524,  1758,
    2509,   385,    68,  2512,   388,  1137,   431,   533,  1146,   431,
     490,    75,  1505,   452,   452,   533,   409,  2496,   494,   494,
     494,   426,    86,   488,   149,   351,   443,   492,   604,   314,
     379,    23,   374,   379,   560,   561,   267,     5,   573,   524,
     135,   490,   573,   493,   486,   532,   489,     0,   481,   482,
     490,  2471,   491,   491,   493,   493,   490,  1740,   584,  2339,
    1964,  1965,  1966,  1967,   582,   454,  1970,  1971,  1972,  1973,
    1974,  1975,  1976,  1977,  1978,  1979,   480,   490,   593,  1160,
    2352,   379,   490,   490,   593,  1168,  1169,   476,   442,  1575,
     454,  1623,  1624,  2714,   425,   490,  1628,   623,   624,   625,
     593,   490,   593,  1347,   585,  2720,   593,   490,   490,  1241,
     596,   490,   476,   490,   698,  2719,   429,   490,  2022,  2023,
     488,   490,   490,   490,   492,   490,   490,   490,   532,   533,
     490,  2328,   490,   490,   130,   452,   490,  1669,  1670,   593,
    2649,   481,   482,   135,  1255,   481,   482,   486,  1449,   481,
     482,   483,   484,   485,   486,   479,   443,   158,  1459,   476,
     147,  1462,   163,    75,   481,   482,   490,  1166,  1167,   573,
     362,  1870,   698,  1254,    86,  1256,  1308,   490,  1217,  1260,
      27,  1225,  1181,  1294,  1295,  1721,  1722,  2431,   479,   593,
     106,   286,  1273,  1274,  2332,  1276,  1265,  1956,  2819,   149,
      30,   492,  1166,   169,  1286,   494,   398,   194,   734,   483,
     484,   485,   486,   698,   117,  1296,   338,  1181,  1350,   803,
    1214,  1215,   362,  2043,    54,  2045,   490,  1221,  1339,   230,
    1225,   483,   484,   485,   486,   196,   202,   362,  1349,   485,
    1351,   336,  1224,   246,  1894,   340,   492,   439,  2005,   414,
    1900,  1560,   218,  2854,  2864,   328,  2854,   445,   398,  1560,
     452,   227,  2542,   481,   482,   483,   484,   485,   486,   795,
    1652,   267,   485,   398,   369,   801,   802,   803,   279,   492,
     358,   277,     4,   130,   476,    23,  1650,     9,   239,   490,
      23,    29,   362,   819,   286,     4,    29,   200,   490,   439,
       9,    11,  1734,   443,  1303,  1437,   184,   185,  1445,   524,
       4,   798,   452,   490,   439,     9,  2937,  1311,   803,   873,
      24,    36,   848,    64,    65,   398,    30,   452,   398,   245,
    1823,    41,  2892,  2893,   174,  1521,   476,   253,   473,  1303,
      55,   436,   868,   869,   870,   196,   872,   873,   340,   341,
     490,   476,  1472,  1473,  1474,  1418,  1542,   217,  1544,  2018,
    1846,  1547,   265,    73,   267,   490,   130,   282,  1500,   439,
     896,   239,   445,   251,   252,    79,  2135,   369,    13,    14,
     346,  2941,  1445,    20,    21,  1831,   454,   492,   914,   915,
    1754,   106,   156,   233,   798,   267,   980,   135,    13,    14,
     272,  1464,   135,  2683,   355,   402,  1469,   404,   476,    67,
     945,   946,   362,   948,   945,   946,  2688,   948,   473,   488,
     490,   947,   490,   492,  1879,   951,   952,   251,   252,  1884,
    1429,   835,  1964,  1965,  1966,  1967,   962,  1518,  1970,  1971,
    1972,  1973,  1974,  1975,  1976,  1977,  1978,  1979,   398,   239,
     322,    11,   483,   939,   980,    15,  1565,   115,   130,   167,
    1569,  1455,  1571,    23,  1493,  1429,  1460,    13,    14,   873,
    1539,  1540,  1541,  2293,    34,    35,   494,  2297,   429,  1005,
     195,   359,   360,   698,   156,   490,  1012,   355,   239,   439,
    2022,  2023,   494,   328,   496,   980,  2195,   454,  2034,  2035,
    2036,  2037,   452,   267,   355,   350,   351,  1033,   272,    94,
     996,   491,   363,   277,   172,   452,  1560,   454,   488,   476,
     490,    94,   492,   402,   491,   404,   476,    87,   363,  1573,
     245,  2161,   168,   490,  1533,   359,   360,   239,   253,   490,
     490,   945,   946,  2161,   948,  2161,  2161,   398,   286,  1637,
     265,  1639,  1640,   286,   213,  2780,  1637,  1638,  1639,  1640,
    2464,   429,   402,   398,   404,   355,   402,     8,   404,  1533,
      11,     5,   490,  2332,     8,    16,    17,    18,  1577,   239,
      14,   296,  1166,  1167,   169,   598,   473,   600,   803,   429,
     670,    25,    54,  1674,   445,    29,   169,  1181,   336,   217,
     272,  2260,   340,   336,   355,   277,  1645,   340,  1728,   267,
     445,  1137,   692,  1577,   272,  1924,  1802,   202,  1804,    13,
      14,  1147,   490,  2116,   150,   491,   341,  2115,   494,   202,
     336,   369,   491,   218,  1160,   494,   369,    13,    14,   429,
    1166,  1167,   227,   723,   150,   218,  2871,  2927,   363,  2553,
    2103,   150,   416,   355,   227,  1181,  2298,   315,  2300,  2114,
     150,  2116,   491,   427,   562,   563,  2154,   565,   383,  2894,
     491,    23,   330,   494,   490,  2495,   261,    29,   429,   267,
     491,  1166,  1167,   494,  2504,    13,    14,   491,   261,  2509,
     494,   492,  2512,  1898,  1899,   355,  1181,   282,   436,  1225,
     490,    36,   491,   436,     8,   494,   491,  1225,   445,   494,
    2074,  2531,    16,    17,    18,  1241,   490,  2621,    50,  1303,
     491,    82,   328,   494,  2949,  1863,   491,   429,  1254,   494,
    1256,   456,   491,  1259,  1260,   494,  1251,  1224,   491,   490,
     490,   494,  1251,  1269,   416,  1271,  1272,  1273,  1274,  1275,
    1276,  1277,   193,   833,   442,   427,   491,   363,  1251,   494,
    1251,   346,   490,    95,  1251,   980,    13,    14,   426,   429,
    1296,   851,  1298,   346,   215,   433,   491,  1303,  1304,  1305,
    1306,  1307,  1308,   135,    13,    14,  1312,  1313,   490,   121,
    1922,  1317,   398,   491,   311,  1321,   494,  2617,  1324,  1325,
    1326,  1327,  1328,  1329,  1330,  1331,  1332,   139,  2467,  1335,
     491,   143,   491,   494,  1340,   494,   150,  1343,  1303,  1345,
    1224,  1347,    35,   491,  1350,   295,   494,  2586,   491,  2649,
     490,   494,   164,     8,  2135,   167,    11,   491,   491,   445,
     494,   494,   490,   284,  1370,  1429,   490,  1251,   433,  1367,
     182,   491,   150,   491,   494,     8,   494,   490,    11,   150,
    1375,   150,  1388,    16,    17,    18,    41,   491,    13,    14,
     494,  1397,  1398,    48,   491,  2368,   282,   494,   491,  1878,
    1924,   494,   491,   491,   398,   494,   494,  2340,   491,  2000,
     491,   494,   362,   494,   491,    36,   491,   494,    73,   494,
     490,   362,   491,  1429,   541,   494,   543,  2289,   228,  1435,
    1314,  1437,  1993,   491,  1878,   491,   494,   491,   494,   491,
     494,  2303,   494,  1917,   490,  2745,   524,   564,   398,   488,
     491,     5,  2464,   494,   286,   491,     5,   398,   494,   499,
     272,   163,   491,   490,  1429,   494,  1945,   490,   280,  1533,
    1476,  1166,  1167,  1479,  1480,   491,  1482,   491,   494,   491,
     494,  2781,   494,  2622,  1963,   490,  1181,   491,   528,   439,
     494,  1375,  2083,  2055,  1500,     5,   491,   490,   439,   494,
     284,  1945,   452,   491,   336,   490,   494,  1513,   340,  1988,
     322,   452,  1518,  1577,  1509,   490,  1995,   491,   173,  1963,
     494,   490,  2134,   490,  2136,     5,   476,  1533,  2194,   491,
      23,   491,   494,   188,   494,   476,    29,   369,   193,  2018,
     490,  2553,     5,   491,  1988,   585,   494,    13,    14,   490,
    2150,  1995,   491,   490,  1560,   494,   477,   478,   479,   490,
     481,   482,   483,   484,   485,   486,   490,  1573,  1533,  1575,
    2870,  1577,   491,   490,   229,   494,  1582,     6,  2359,     5,
     491,  1587,    11,   494,   491,   491,    15,   494,   494,  2302,
     490,  1625,  2305,    22,    23,    24,    13,    14,    27,    13,
      14,    30,    31,   490,   436,    34,    35,   490,  1303,  2621,
      13,    14,  1577,    13,    14,  2854,   146,  1623,  1624,  1625,
     698,   490,  1628,   490,  2592,  1509,    13,    14,   490,   284,
     490,  1637,  1638,  1639,  1640,     9,    13,    14,    13,    14,
    1674,  1647,   135,    13,    14,  1651,    13,    14,  1654,   453,
      79,   284,    13,    14,    13,    14,  2135,    86,    87,    88,
      89,    90,   490,  1669,  1670,    13,    14,   213,  1674,  2458,
      13,    14,   350,   351,   255,   256,   359,   360,   795,   350,
     351,    15,  1688,   494,   801,  1691,    97,  1693,   350,   351,
      36,  2135,   369,   477,   478,   479,   163,   481,   482,   483,
     484,   485,   486,   914,   915,  2371,  2372,   279,  1714,  2400,
     163,  1745,  2191,   277,   228,   490,   490,   409,  2309,   374,
    1726,    86,   494,   409,    54,   803,    54,   409,   409,   258,
     491,   499,   452,  2324,  1429,  1741,   409,   150,    93,   492,
    1726,  1625,   267,   142,   267,  1740,   490,  2191,    36,  1755,
    1726,  1740,    36,   490,     9,  1741,    35,   407,   407,   488,
     488,   409,   879,   409,  1770,  1741,   409,  1740,  2319,  1740,
     409,   888,   494,  1740,   448,   490,    11,    23,   338,   489,
     494,  2260,  1788,    29,   901,   407,   494,   499,   272,   490,
    1674,   490,   409,   286,   177,   912,   174,   914,   915,  1805,
    1806,  1807,   159,   491,   168,  2586,   490,     8,  1692,   433,
      11,    36,   219,   211,  1878,    16,    17,    18,   196,   474,
     372,   283,   494,   490,  1708,   494,   481,   482,   483,   484,
     485,   486,    33,   219,   267,   219,   288,   491,  1533,   320,
    1846,   280,  1726,   336,   477,   478,   479,   340,   481,   482,
     483,   484,   485,   486,   445,   233,  1740,  1741,   150,   490,
     490,  1745,   452,   150,     8,   267,   282,    11,   491,   488,
     473,   473,  1878,   491,   282,   491,   369,   491,   491,   267,
      36,  1945,  1577,    36,   489,   491,   168,   491,   168,   135,
     491,  2370,   524,   933,   491,   491,   491,    41,   492,  1963,
     473,   490,   980,   491,    48,   491,   491,   491,   409,   287,
     490,   490,   490,  1878,   449,   449,  1922,   439,  1924,   292,
     282,  2400,   479,   283,  1988,  1920,  2370,   475,   431,    73,
     283,  1995,   283,   494,  2458,  2908,  1942,   238,   409,  1945,
     267,   150,   196,   436,   286,  1951,   490,   150,  1954,   409,
     150,  1957,   409,   409,  2018,   409,   489,  1963,  1964,  1965,
    1966,  1967,   490,  1997,  1970,  1971,  1972,  1973,  1974,  1975,
    1976,  1977,  1978,  1979,  2030,   491,   491,  1983,  1984,   491,
    1945,   494,  1988,   491,   280,   282,    36,  1993,  2467,  1995,
     150,  1997,   489,   452,  2028,   489,   150,   272,  1963,   143,
    2006,   141,   168,  2009,    11,  2011,   163,   168,   491,   491,
     168,  2045,  2018,  2019,   215,   491,  2022,  2023,   490,   449,
     494,  2027,  2028,  1988,   402,   476,   404,   491,   177,   173,
    1995,  2631,   398,   491,   343,    84,  1920,  2043,   283,  2045,
     286,   491,   491,   438,   188,   490,   150,   490,   426,   193,
    2056,   429,   481,  2018,   172,   490,   494,  2043,   487,  2045,
    2066,   490,   420,   491,    36,   494,   698,  2043,   490,  2045,
     499,  2135,  2684,  2854,    79,   494,  2082,  2551,   168,   433,
     489,  2699,   400,   284,   490,   229,   491,    36,  1166,  1167,
     336,   218,   291,   490,   340,   491,   490,   526,   527,   528,
     491,   491,   491,  1181,   218,   490,    55,  2586,   289,    54,
     181,   479,   452,  1997,   198,   187,   492,  2636,    36,   409,
     272,   272,   491,   369,  2130,   267,   409,  2191,  2134,  2135,
    2136,   560,   561,   562,   563,  2654,   565,   107,   452,   491,
     284,   490,  2586,  2622,  2028,   492,   479,   576,  1265,   282,
      36,   492,   168,   492,   492,   492,   585,   106,   107,  2043,
     492,  2045,   301,   492,   490,   490,   115,   596,   492,  2787,
    2135,   803,   492,   492,  2653,   492,   492,  2656,  1218,   608,
    1220,  2742,   492,  1878,   492,  2191,   492,  2182,   492,   492,
     436,   218,   492,   492,   492,   451,  2260,   492,   492,   492,
     131,   492,  2208,   492,    86,  2766,   492,  2768,   330,  2653,
     219,   492,  2656,   490,   490,   644,   645,   646,   491,   490,
     490,    81,   115,   172,    36,  1303,  2191,   150,    73,   150,
     374,  2705,   122,    36,   491,   351,   351,    54,    36,  2758,
    1357,  2853,  2859,   490,   494,   433,   195,   490,  2254,  2255,
    1945,   490,   490,  2259,  2260,   438,   490,   952,  2264,    73,
      36,  2267,  2268,   433,   186,   420,  2272,    67,  1963,   490,
     285,    67,   490,    36,   494,   353,   477,   478,   479,   272,
     481,   482,   483,   484,   485,   486,   369,  2293,   479,   186,
     243,  2297,   490,  1988,   420,  2260,   245,    36,  2182,   285,
    1995,   490,   285,   490,   253,   491,  2370,  2293,  2782,   491,
     490,  2297,   350,  2319,   265,   282,   265,  2293,   267,     9,
     337,  2297,   198,  2018,   282,   282,  2321,  2322,    33,   491,
     474,   490,   120,   431,     9,    22,  2400,   481,   482,   483,
     484,   485,   486,   491,   593,  2117,  2352,   296,   980,  1443,
    2130,  1429,  2080,  2781,  2323,  2361,  1800,  2527,  2850,  2167,
    2364,  2856,     8,  2930,  2370,    11,  2691,  2907,  2895,   967,
      16,    17,    18,  2605,  1794,  2854,  2172,  1806,   807,  2905,
       8,  1421,  2853,    11,  2134,  1856,  1791,    33,    16,    17,
      18,  1431,   341,  1433,  2400,  2851,  1436,  1214,  1860,  1166,
    1922,    36,  1442,  2467,  1444,  2370,  2458,   933,  2157,  2293,
    2854,   906,  1755,  2297,   363,  1414,  1456,   955,   954,  2755,
      55,  1461,  2671,  2841,  1388,  1465,  1466,  1467,  1468,  1770,
    1470,  1471,  2060,  2836,   383,  2400,   385,  2321,  2322,   388,
    2135,  2770,  1413,  1560,  2315,   874,  2441,  1564,   957,  1741,
    2045,  2650,  2458,  2284,  2043,  1533,  1573,  2299,  2464,  2745,
    2744,  2467,  2762,   145,  2763,  2471,  1265,  1265,  1265,  1265,
    2523,   106,  2839,  2479,  2480,  2840,   158,  2483,  2823,  1652,
    1341,   163,  1758,  1256,  1583,  1692,  1482,   916,  1689,  2495,
    1345,  1729,  2059,  1864,  2737,  1225,  2191,  1573,  2504,  1577,
      21,  1367,  2467,  2509,   933,   934,  2512,   939,  2081,  2495,
     939,   940,   941,  2519,  2520,  1368,    -1,    -1,  2504,  2495,
      -1,    -1,  2586,  2509,   524,  2531,  2512,  2533,  2504,   211,
      -1,    -1,    -1,  2509,  1166,  1167,  2512,   966,   967,    -1,
      -1,   490,    -1,    -1,    -1,  2531,    -1,  2553,   230,  1181,
     979,    -1,    -1,    -1,    -1,  2531,    -1,  2441,  2622,    -1,
     195,    -1,    -1,    -1,    -1,  2260,    -1,   996,    -1,   215,
     170,  1000,    -1,    -1,   174,    -1,    -1,  1272,    -1,    -1,
    2586,    -1,    -1,    -1,    -1,    -1,    -1,   215,    -1,  2653,
      -1,    -1,  2656,    -1,    -1,    -1,   196,   279,    -1,    -1,
      -1,  2596,    -1,    86,    -1,    88,   288,    90,    -1,    -1,
     245,  2617,    -1,    -1,    -1,  2621,  2622,    -1,   253,    -1,
    2504,  2586,    -1,  2618,    -1,  2509,  2660,    -1,  2512,    -1,
     265,  2617,    -1,   233,    -1,    -1,    -1,    -1,   284,  2645,
     240,  2617,    -1,  2649,    -1,    -1,    -1,  2653,    -1,    -1,
    2656,    -1,    -1,    -1,  2660,    -1,   284,  2622,    -1,    -1,
      -1,   296,    -1,  2649,    -1,    -1,    -1,    -1,  2674,    -1,
      -1,  1303,    -1,  2649,    -1,  2370,    -1,    -1,  2684,    -1,
      -1,    -1,  2688,  2689,    -1,    -1,    -1,   287,  2653,    -1,
      -1,  2656,    -1,  1388,  1811,    -1,    -1,    -1,   698,    -1,
      -1,    -1,    -1,  1132,    -1,  2400,   341,    -1,    -1,    -1,
      -1,  1140,  2596,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1150,    -1,  2718,    -1,    -1,    -1,    -1,   363,    -1,
      -1,    -1,    -1,    -1,  2618,    -1,  2742,  1854,    -1,  2745,
      -1,    -1,    -1,   425,    -1,    -1,    -1,    -1,   383,    -1,
    1867,    -1,    -1,    -1,  1183,   355,    -1,    -1,    -1,  2745,
    2766,    -1,  2768,    -1,  2770,  2649,    -1,    -1,    -1,  2745,
      -1,    -1,  2467,    -1,    -1,  2781,  2660,    -1,    -1,    -1,
      -1,    -1,  2777,    -1,    -1,  1214,  1215,    -1,  1217,  1218,
    2854,  1220,  1221,    -1,  1223,  2781,  2802,  1429,    -1,    -1,
    1878,    -1,   402,   803,   404,  2781,   488,  1924,    -1,   491,
     492,    -1,  1929,    -1,  1931,    -1,  2822,  2823,  1935,  1936,
     420,    -1,    -1,    -1,    -1,    -1,   426,    -1,    -1,   429,
    2836,   477,   478,   479,  2718,   481,   482,   483,   484,   485,
     486,  1270,  1882,    -1,    -1,    -1,    -1,  2853,  2854,   477,
     478,   479,  1281,   481,   482,   483,   484,   485,   486,    -1,
      -1,    -1,    -1,    -1,  2870,    -1,  2872,  1945,  2863,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,  1311,    -1,  2870,  1963,    -1,    -1,    -1,  2854,
      -1,  2586,    -1,  2777,  2870,    -1,    -1,    -1,    -1,    -1,
      -1,  1533,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
    1988,    -1,    -1,    -1,    -1,  1344,  1345,  1995,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2622,  1623,  1624,
      -1,    -1,  2938,  1628,    73,    -1,    -1,  1366,    -1,  1368,
    2018,    -1,    -1,    -1,     8,  1577,    -1,    11,  1377,    -1,
    1379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2653,    -1,
      -1,  2656,    -1,     0,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1669,  1670,    -1,    41,    -1,  2863,
     980,    -1,  1411,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,  1420,  1421,    -1,    -1,    -1,    -1,    -1,   481,    -1,
      -1,    -1,  1431,  1432,  1433,  1434,    -1,  1436,    -1,    73,
      -1,   494,    -1,  1442,    -1,  1444,    -1,    -1,  2135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1455,  1456,    -1,    -1,
      -1,  1460,  1461,    -1,   173,    -1,  1465,  1466,  1467,  1468,
    2157,  1470,  1471,    -1,    -1,    -1,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    93,  2135,  2098,    -1,
      -1,  1490,  1491,  1492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1507,   143,
      -1,    -1,  2122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     229,    -1,    -1,   576,    -1,    -1,    -1,  2137,  2138,  2139,
    2140,  2141,  2142,  2143,  2144,  2145,  2146,    -1,   145,   173,
      -1,    -1,    -1,  2191,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   158,    -1,    -1,   188,   608,   163,    -1,    -1,   193,
      -1,   168,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     177,    -1,    -1,    -1,   181,   284,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2854,
      -1,   644,   645,   646,    -1,   229,  1166,  1167,    -1,     8,
      -1,    -1,    11,    -1,   211,    -1,    -1,    16,    17,    18,
      -1,  1181,  2260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   230,    33,    -1,  2313,    -1,    -1,  2316,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,  1645,    -1,    -1,    -1,
     284,    -1,    -1,  1652,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,   374,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,   282,  1878,    -1,    -1,    -1,
      -1,   288,    -1,    -1,    -1,    -1,    -1,  1686,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1964,
    1965,  1966,  1967,    -1,    -1,  1970,  1971,  1972,  1973,  1974,
    1975,  1976,  1977,  1978,  1979,    -1,    -1,    -1,    -1,    -1,
    1719,    -1,  2370,    -1,    -1,    -1,    -1,  1726,    -1,    -1,
      -1,    -1,    -1,  1303,    -1,    -1,   343,    -1,    -1,    -1,
     374,    -1,  1741,  1945,    -1,     8,  1745,    -1,    11,  1748,
    2437,  1750,  2400,    -1,    -1,    -1,    -1,  2022,  2023,    -1,
      -1,  1963,    -1,    -1,   173,   474,    -1,    -1,   477,   478,
     479,  2458,   481,   482,   483,   484,   485,   486,    41,   188,
      -1,    -1,    -1,    -1,   193,    48,  1988,    -1,    -1,    -1,
      -1,   398,    -1,  1995,    -1,    -1,    -1,  1796,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,
      73,    -1,    -1,    -1,    -1,    -1,  2018,    -1,   425,  2467,
     229,    -1,    -1,    -1,    -1,    -1,   433,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     474,    -1,   449,    -1,   451,   452,    -1,   481,   482,   483,
     484,   485,   486,    -1,    -1,    -1,    -1,  1856,   267,  1429,
      -1,   270,  1861,   916,    -1,    -1,    -1,   795,    -1,  1868,
    1869,  1870,  1871,   801,    -1,   284,   109,   110,   287,    -1,
     143,   488,    -1,  1882,   491,   492,   493,   940,    -1,    -1,
    1889,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2586,
      -1,    -1,  1901,     0,    -1,    -1,    -1,    -1,    -1,    -1,
     173,    -1,     8,   966,    -1,    11,    -1,    -1,  1917,    -1,
      16,    17,    18,    -1,    -1,   188,   979,    -1,    -1,    -1,
     193,    -1,    -1,  2135,  1933,  1934,    -1,    33,  2586,    -1,
      -1,    -1,  2552,    -1,    -1,    -1,    -1,  1000,    -1,    -1,
      -1,   184,   185,    -1,    -1,    -1,    -1,  1956,    -1,    -1,
     888,    -1,    -1,  1533,    -1,   374,   229,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2622,    -1,    -1,  2587,  2588,    -1,
      -1,    -1,    -1,    -1,   912,    -1,   914,   915,    -1,  2191,
      -1,    -1,  2602,    -1,    -1,    -1,    93,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2653,    -1,  1577,  2656,    -1,
      -1,    -1,    -1,    -1,   247,   248,   249,   250,   251,   252,
      -1,   284,   255,   256,    -1,    -1,  2713,    -1,    -1,    -1,
      -1,    -1,    -1,  2032,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2040,  2041,  2042,  2043,    -1,  2045,  2046,   145,    -1,
      -1,  2050,  2051,   981,    -1,    -1,   984,   985,  2260,    -1,
      -1,   158,    -1,  2673,    -1,   474,   163,    -1,   477,   478,
     479,   168,   481,   482,   483,   484,   485,   486,    -1,    -1,
     177,  2080,    -1,    -1,   181,   494,    -1,  1140,    -1,    -1,
      -1,  2701,    -1,    -1,    -1,    -1,    -1,  2096,    -1,  2098,
      -1,    -1,    -1,  2102,  2103,  2104,    -1,  2106,    -1,    67,
      -1,   374,    -1,    -1,   211,    73,    -1,    -1,    -1,   215,
      -1,    -1,    -1,  2122,    -1,  2124,   359,   360,    86,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,  2137,  2138,
    2139,  2140,  2141,  2142,  2143,  2144,  2145,  2146,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   115,    -1,   117,
    2159,    -1,    -1,  2162,    -1,    -1,    -1,  2854,  2370,    -1,
    1223,   560,   561,  2172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,  2183,   282,    -1,    -1,   284,    -1,
      -1,   288,    -1,    -1,    -1,    -1,  2195,    -1,  2400,  2464,
      -1,    -1,    -1,  2202,    -1,    -1,  2854,    -1,    -1,    -1,
      -1,   474,    -1,    -1,   172,    -1,    -1,    -1,   481,   482,
     483,   484,   485,   486,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   623,   624,  1164,   470,   471,    -1,
      -1,     3,   200,     5,    -1,    -1,   343,  1175,    -1,  1177,
      -1,  2250,    -1,    -1,    -1,    -1,    -1,   490,  1186,    -1,
      -1,    -1,    -1,    -1,    -1,  2467,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2273,  1203,    -1,  2276,  2277,  2278,
    2279,    -1,    -1,    -1,  2283,  2284,    -1,  2286,  2553,    -1,
    2289,  1344,    -1,    -1,  2293,    -1,    -1,    -1,  2297,    -1,
      -1,   398,  1230,  1231,  2303,    -1,    -1,    36,  1878,   267,
      -1,    -1,    -1,  1366,   272,  1368,    -1,    -1,    -1,    -1,
    2319,    -1,    -1,    -1,  2323,    -1,    55,    -1,   425,  2328,
      -1,    -1,    -1,  2332,  1262,  1263,   433,    -1,  1266,  1267,
      -1,  2340,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,   449,    -1,   451,   452,  2621,   315,  1411,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2365,    -1,    -1,    -1,
      -1,    -1,   330,    -1,    -1,  1945,    -1,   106,    -1,    -1,
      -1,   477,   478,   479,  2586,   481,   482,   483,   484,   485,
     486,   488,    -1,  1963,   491,   492,   493,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   802,    -1,    -1,    -1,    -1,  1988,    -1,
    2622,    -1,   184,   185,    -1,  1995,    -1,    -1,    -1,    -1,
     819,    -1,  2431,    -1,    -1,    -1,    -1,  1490,  1491,    -1,
      -1,  2440,    -1,   172,   109,   110,    -1,    -1,  2018,    -1,
      -1,  2653,  2451,    -1,  2656,    -1,    -1,    -1,    -1,   848,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,   426,  1397,
    1398,    -1,    -1,    -1,    -1,   433,    -1,    -1,    -1,   868,
     869,   870,    -1,    -1,   873,   247,   248,   249,   250,   251,
     252,    -1,    -1,   255,   256,     8,  2495,  2496,    11,    -1,
    2499,    -1,    -1,  2502,    -1,  2504,    -1,   896,    -1,    -1,
    2509,    -1,    -1,  2512,    -1,  2514,   245,    -1,  2517,   184,
     185,  1449,    -1,    -1,   253,    -1,    -1,    -1,    41,    -1,
      -1,  1459,  2531,    -1,  1462,    48,   265,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2551,  2552,    -1,    -1,    -1,    -1,   947,    -1,
      73,  2560,   951,   952,    -1,  2135,    -1,   296,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,   248,   249,   250,   251,   252,  2587,  2588,
     255,   256,    -1,    -1,    -1,    -1,    -1,   359,   360,  2598,
      -1,    -1,    -1,  2602,    -1,    -1,  1534,  1535,    -1,    -1,
      -1,    -1,   341,    -1,    -1,  2614,  1005,    -1,  2617,    -1,
      -1,  2191,    -1,  1012,    -1,    -1,    -1,    -1,    -1,    -1,
     143,    -1,  1560,    -1,   363,    -1,    -1,  2636,    -1,    -1,
      -1,    -1,    -1,    -1,  1033,  1573,    -1,    -1,    -1,    -1,
    2649,    -1,  2854,    -1,   383,  2654,    -1,    -1,    -1,    -1,
     173,    -1,    -1,    -1,    -1,    -1,  1719,    -1,    -1,    -1,
    2669,    -1,    -1,    -1,  2673,   188,    -1,    -1,    -1,     8,
     193,    -1,    11,  2682,    -1,    -1,    -1,    -1,    -1,    -1,
    2260,    -1,    -1,    -1,   359,   360,    -1,    -1,     0,    -1,
      -1,    -1,  2701,    -1,    -1,    -1,  2705,    -1,   470,   471,
      -1,    -1,    41,    -1,    -1,    -1,   229,    19,  2717,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    -1,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    47,  2745,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    56,  2754,    -1,    -1,  1147,  2758,
      -1,    -1,    -1,  2762,    -1,    -1,    68,    -1,    -1,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,
      -1,    -1,  2781,  2782,  2783,  2784,    -1,    -1,    -1,    91,
      -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2370,    -1,    -1,  1731,    -1,   470,   471,    -1,  1861,   111,
      -1,    -1,     8,    -1,   143,    11,  1869,  1870,  1871,    -1,
      16,    17,    18,   125,    -1,    -1,    -1,    -1,  2827,    -1,
    2400,    -1,    -1,   135,  1762,  1763,  1889,    -1,    -1,   141,
    2839,    -1,  2841,    -1,   173,    41,    -1,   149,    -1,   151,
     152,  2850,    48,    -1,    -1,    -1,    -1,    -1,    -1,   188,
      -1,   374,   164,    -1,   193,  2864,    -1,    -1,    -1,    -1,
    1259,  2870,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
    1269,    -1,  1271,    -1,    -1,  1274,  1275,  1276,  1277,    -1,
     192,    -1,  2891,    -1,    -1,    -1,    -1,  2467,    -1,    -1,
     229,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,  1298,
      -1,    -1,    -1,    -1,    -1,  1304,  1305,  1306,  1307,    -1,
      -1,    -1,    -1,  1312,  1313,    -1,    -1,    -1,  1317,    -1,
     232,    -1,  1321,    -1,    -1,  1324,  1325,  1326,  1327,  1328,
    1329,  1330,  1331,  1332,    -1,    -1,  1335,    -1,    -1,     0,
      -1,  1340,    -1,    -1,  1343,   284,  1345,    -1,  1347,    -1,
      -1,   474,    -1,    -1,    -1,    -1,    -1,  1895,   481,   482,
     483,   484,   485,   486,    -1,    -1,    -1,   173,    -1,    -1,
      -1,  1370,    -1,    -1,    -1,    -1,   889,  2040,  2041,  2042,
       8,    -1,   188,    11,    -1,    -1,    -1,   193,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,   309,  1397,  1398,
     312,    -1,    -1,    -1,    -1,    33,  2586,    -1,    -1,   215,
     216,    -1,    -1,    -1,    -1,    -1,   929,    -1,    -1,    -1,
      -1,    -1,    -1,   229,    -1,    -1,     8,    -1,   340,    11,
      -1,    -1,    93,  2096,    -1,   374,   348,     8,    -1,    -1,
      11,    -1,  2622,    -1,    -1,    16,    17,    18,    -1,    -1,
     362,    -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,    41,
      -1,   373,    -1,    -1,   270,    -1,    48,    -1,    -1,    -1,
      -1,   383,    -1,  2653,    -1,    -1,  2656,  1476,   284,    -1,
    1479,  1480,   394,  1482,   145,    -1,   398,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,     3,   158,    -1,  2162,
      -1,     8,   163,    -1,    11,    -1,    -1,   168,    -1,    16,
      17,    18,    -1,    -1,  1513,    -1,   177,    -1,    -1,    -1,
     181,    -1,   434,    -1,  1037,    -1,    33,   439,    -1,    36,
      -1,  1044,  2195,    -1,    41,   474,    -1,    -1,    -1,    -1,
     452,    48,   481,   482,   483,   484,   485,   486,    -1,    -1,
     211,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   143,    -1,    -1,   476,    -1,    73,    -1,   374,   230,
      -1,    -1,    -1,    -1,    -1,    -1,  1575,    -1,   490,    -1,
      -1,   493,    -1,  1582,    -1,    -1,    -1,   215,  1587,    -1,
      -1,   173,    -1,    -1,    -1,    -1,    -1,  2135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,    -1,    -1,
      -1,   193,    -1,  2276,  2277,  2278,  2279,    -1,   279,    -1,
      -1,   282,    -1,    -1,    -1,    -1,  1625,   288,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1637,    -1,
    1639,  1640,    -1,    -1,   215,    -1,    -1,   229,  1647,    -1,
      -1,    -1,  1651,    -1,    -1,  1654,   284,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,   474,    -1,
      -1,   477,   478,   479,  2854,   481,   482,   483,   484,   485,
     486,   188,   343,    -1,    -1,    -1,   193,    -1,    -1,  1688,
      -1,    -1,  1691,    -1,  1693,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,   215,   216,
      -1,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   398,    -1,    -1,
      -1,    -1,    -1,    -1,  1257,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1268,  1755,    -1,    -1,  1272,
     267,    -1,    -1,   270,   425,  1278,  1279,  1280,    -1,    -1,
      -1,  1770,   433,    -1,  1287,    -1,    -1,   284,    -1,    -1,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   449,  1788,
     451,   452,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2359,    -1,    -1,    -1,    -1,  2364,   488,    -1,  1342,
     491,   492,   493,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,  1846,    -1,   477,
     478,   479,    -1,   481,   482,   483,   484,   485,   486,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,   374,  2406,  2407,
      -1,  1384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1396,    -1,    -1,    -1,    -1,  1401,    -1,
      -1,    -1,   474,    -1,    -1,    -1,    -1,  2560,    -1,   481,
     482,   483,   484,   485,   486,    -1,   477,   478,   479,    -1,
     481,   482,   483,   484,   485,   486,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,  1942,    -1,    36,    -1,    -1,    -1,    -1,
      41,  2614,  1951,    -1,    -1,  1954,    -1,    48,  1957,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   173,   474,    -1,    -1,
     477,   478,   479,    -1,   481,   482,   483,   484,   485,   486,
      -1,   188,    73,    -1,  1983,  1984,   193,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1997,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2006,   215,   216,
    2009,    -1,  2011,    -1,    -1,    -1,    -1,    -1,    -1,  2682,
    2019,    -1,   229,    -1,    -1,    -1,    -1,    -1,  2027,  2028,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2575,  2576,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2586,    -1,
      -1,    -1,    -1,    -1,  2717,    -1,    -1,  2056,    -1,    -1,
     267,    -1,    -1,   270,    -1,    -1,    -1,  2066,    -1,    -1,
      -1,    -1,  1585,    -1,    -1,    -1,    -1,   284,    -1,    -1,
      -1,    -1,   173,  2082,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1604,    -1,    -1,    -1,    -1,    -1,   188,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,  1621,    -1,
    1623,  1624,    -1,  1626,    -1,  1628,    -1,    -1,    -1,    -1,
    1633,    -1,    -1,  1636,   215,   216,    -1,    -1,  1641,    -1,
      -1,  1644,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,
      -1,    -1,    -1,  1656,    -1,    -1,    -1,  1660,  1661,  1662,
    1663,    -1,    -1,    -1,    -1,    -1,  1669,  1670,    -1,  1672,
    1673,    -1,    -1,    -1,    -1,    -1,    -1,   374,    -1,    -1,
      -1,  1684,    -1,    -1,  1687,    -1,   267,    -1,    -1,   270,
      -1,    -1,  1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,
    1703,  1704,    -1,   284,    -1,    -1,   287,    -1,    -1,  1712,
      -1,    -1,    -1,  1716,    -1,    -1,    -1,    -1,    -1,  2208,
      -1,    -1,    -1,    23,    -1,    -1,    -1,    -1,    -1,    29,
      -1,    -1,    -1,    -1,    -1,  1738,    36,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    55,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2254,  2255,    -1,    -1,    -1,
    2259,    -1,    -1,    -1,    -1,  2264,    -1,   474,  2267,  2268,
     477,   478,   479,  2272,   481,   482,   483,   484,   485,   486,
      -1,    -1,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2854,    -1,    -1,    -1,
    2319,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1849,  1850,  1851,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2361,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,  1887,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,   474,    -1,   195,   477,   478,   479,    -1,
     481,   482,   483,   484,   485,   486,    -1,    33,    -1,    -1,
     491,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1941,    -1,
      -1,    -1,    -1,    -1,  1947,   245,    -1,    73,    -1,    -1,
      -1,    -1,    -1,   253,    -1,    -1,    -1,  1960,  1961,  1962,
      -1,  1964,  1965,  1966,  1967,   265,    -1,  1970,  1971,  1972,
    1973,  1974,  1975,  1976,  1977,  1978,  1979,  1980,    -1,    -1,
      -1,    -1,  2471,    -1,    -1,    -1,   286,    -1,    -1,    -1,
    2479,  2480,    -1,    -1,  2483,  1998,   296,    -1,  2001,    -1,
    2003,    -1,    -1,    -1,  2007,  2008,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2021,  2022,
    2023,  2024,    -1,  2026,    -1,    -1,    -1,    -1,    -1,    -1,
    2519,  2520,    -1,    -1,    -1,    -1,   336,    -1,    -1,    -1,
     340,   341,    -1,    -1,  2533,    -1,    -1,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   188,   363,    -1,    -1,    -1,   193,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,   215,
     216,    -1,    -1,    -1,    -1,    -1,  2099,    -1,    -1,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    33,   436,    16,    17,    18,
      -1,   267,    -1,    41,   270,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,    -1,    33,    -1,  2645,    -1,   284,    -1,
      -1,   287,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,  2660,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2674,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
    2689,    -1,    -1,    -1,    -1,    -1,  2209,    -1,    -1,    -1,
    2213,  2214,    -1,  2216,    -1,    -1,  2219,  2220,  2221,  2222,
      -1,    -1,    -1,  2226,  2227,  2228,  2229,  2230,  2231,  2232,
    2233,  2234,  2235,  2236,  2237,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2247,    -1,    -1,    -1,   374,    -1,
    2253,    -1,    -1,  2256,    -1,  2258,    -1,    -1,    -1,  2262,
      -1,    -1,  2265,  2266,    -1,    -1,  2269,  2270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   173,    -1,    21,    -1,    -1,
      -1,  2770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     188,    -1,    -1,    -1,   173,   193,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2310,    -1,   188,
      -1,    -1,    -1,  2802,   193,  2318,    -1,   215,   216,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2331,    -1,
      74,   229,    -1,  2822,  2823,    -1,   215,   216,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    90,  2836,   474,    -1,
     229,   477,   478,   479,    -1,   481,   482,   483,   484,   485,
     486,    -1,    -1,    -1,    -1,   491,    -1,    -1,    -1,   267,
      -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,    23,
      -1,    -1,    -1,  2872,    -1,    29,   284,    -1,   267,   287,
      -1,   270,    36,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,   284,    -1,    -1,   287,   153,
      -1,    55,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   165,    -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2938,
      -1,    -1,   196,    -1,    -1,    -1,    -1,  2460,    -1,    -1,
      -1,  2464,   106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2473,  2474,  2475,    -1,    -1,  2478,   374,    -1,  2481,  2482,
      -1,    -1,    -1,  2486,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,   374,   240,    -1,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2553,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   307,    -1,    -1,    -1,    -1,    -1,  2572,
      -1,    -1,    -1,    -1,    -1,    -1,   474,   321,    -1,   477,
     478,   479,    -1,   481,   482,   483,   484,   485,   486,    -1,
      -1,    -1,    -1,   491,    -1,   474,    -1,    -1,   477,   478,
     479,   245,   481,   482,   483,   484,   485,   486,   352,   253,
      -1,   355,   491,    -1,    -1,    -1,    -1,  2620,  2621,   363,
      -1,   265,   366,  2626,  2627,  2628,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   385,   286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   296,    -1,   398,    -1,    -1,    -1,    -1,    -1,
      -1,   405,    -1,    -1,  2667,  2668,    -1,    -1,    -1,    -1,
     414,    -1,    -1,    -1,    -1,    -1,   420,  2680,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2692,
      -1,    -1,   336,    -1,    -1,    -1,   340,   341,    -1,    -1,
      -1,   445,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,
      -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2739,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2757,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2779,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2793,    -1,   436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,  2861,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,  2875,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,   130,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,   229,    -1,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,   481,   482,   483,    -1,
      -1,    -1,    -1,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,    -1,   497,   498,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,    -1,   476,    -1,    -1,
      -1,    -1,   481,   482,    -1,    -1,    -1,    -1,    -1,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,    -1,   497,   498,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,   229,    -1,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,    -1,   476,    -1,    -1,    -1,    -1,   481,   482,
      -1,    -1,    -1,    -1,    -1,   488,    -1,   490,    -1,    -1,
      -1,    -1,   495,    -1,   497,   498,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,   168,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,    -1,   225,   226,
     227,   228,   229,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,    -1,    -1,    -1,
      -1,   488,    -1,   490,    -1,    -1,    -1,    -1,   495,    -1,
     497,   498,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,
     481,   482,   483,    -1,    -1,    -1,    -1,   488,    -1,   490,
      -1,    -1,    -1,    -1,   495,    -1,   497,   498,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,   229,    -1,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,
      -1,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,    -1,
     495,    -1,   497,   498,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,    -1,    -1,    -1,    -1,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,    -1,   497,   498,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,   229,    -1,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,
      -1,    -1,    -1,    -1,    -1,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,    -1,   497,   498,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,   229,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,    -1,    -1,    -1,
      -1,   488,    -1,   490,    -1,    -1,    -1,    -1,   495,    -1,
     497,   498,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,   168,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,
     481,   482,    -1,    -1,    -1,    -1,    -1,   488,    -1,   490,
      -1,    -1,    -1,    -1,   495,    -1,   497,   498,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,   229,    -1,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,
      -1,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,    -1,
     495,    -1,   497,   498,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,    -1,    -1,    -1,    -1,   488,
      -1,   490,    -1,    -1,    -1,    -1,   495,    -1,   497,   498,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,   229,    -1,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,
      -1,    -1,    -1,    -1,    -1,   488,    -1,   490,    -1,    -1,
      -1,    -1,   495,    -1,   497,   498,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,   229,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,    -1,    -1,    -1,
      -1,   488,    -1,   490,    -1,    -1,    -1,    -1,   495,    -1,
     497,   498,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,
     481,   482,    -1,    -1,    -1,    -1,    -1,   488,    -1,   490,
      -1,    -1,    -1,    -1,   495,    -1,   497,   498,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,   229,    -1,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,
      -1,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,    -1,
     495,    -1,   497,   498,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,    -1,    -1,    -1,    -1,   488,
      -1,   490,    -1,    -1,    -1,    -1,   495,    -1,   497,   498,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,   229,    -1,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,
      -1,    -1,    -1,    -1,    -1,   488,    -1,   490,    -1,    -1,
      -1,    -1,   495,    -1,   497,   498,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,   218,   219,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,   229,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,   272,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,    -1,    -1,    -1,
      -1,   488,    -1,   490,    -1,    -1,    -1,    -1,   495,    -1,
     497,   498,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,    -1,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     481,   482,    -1,    -1,     3,     4,     5,     6,     7,   490,
       9,    10,    -1,    -1,    -1,    -1,   497,   498,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,    -1,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   490,    -1,    -1,    -1,    -1,    -1,    -1,   497,   498,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,   229,    -1,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,    -1,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,    -1,    -1,
      -1,    -1,    -1,    -1,   497,   498,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,    -1,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,   218,   219,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,    -1,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,   272,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,     3,    -1,    -1,    -1,
      -1,   488,    -1,   490,    -1,    -1,    -1,    -1,   495,    -1,
     497,   498,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,   169,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,   218,   219,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,    -1,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   491,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,    -1,   268,   269,   270,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,   283,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,     3,   476,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   490,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,   283,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,    -1,   268,   269,
     270,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     490,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,    -1,
     268,   269,   270,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,   432,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,     3,     4,     5,
      -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   490,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,    -1,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,   282,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,     3,
      -1,    -1,    -1,    -1,    -1,   481,   482,   483,    -1,    -1,
      -1,    -1,    -1,    -1,   490,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,     3,   476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   490,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,    -1,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,     3,   476,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
      -1,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,     3,   476,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     490,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,    -1,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   490,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,    -1,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   490,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   490,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,    -1,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
      -1,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,    -1,    -1,    -1,     3,     4,
       5,    -1,    -1,     8,     9,    -1,    -1,    -1,    -1,    -1,
     490,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    -1,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
      -1,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,   291,   292,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,    -1,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,    -1,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
       3,    -1,   477,   478,   479,     8,   481,   482,   483,   484,
     485,   486,    -1,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,   477,   478,   479,    -1,   481,   482,
     483,   484,   485,   486,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    33,
      16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,     8,    48,    -1,    11,    33,    -1,    -1,
      -1,    16,    17,    18,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    33,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,     8,    48,    -1,    11,    -1,    73,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,   173,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   188,    -1,    -1,   173,    -1,   193,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   188,    -1,    -1,    -1,    -1,   193,   173,    -1,
      -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   188,    -1,   229,    -1,    -1,   193,   215,
     216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,   173,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   188,   267,   229,    -1,   270,   193,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   267,    -1,   287,   270,    -1,    -1,    -1,    -1,   215,
     216,    -1,    -1,   173,    -1,    -1,    -1,    -1,   284,    -1,
      -1,   287,   267,   229,    -1,   270,    -1,    -1,   188,    -1,
      -1,    -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,   284,
      -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,   267,    -1,    -1,   270,    -1,    -1,    -1,    -1,   229,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,     8,
      -1,   287,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
     374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    -1,    -1,   267,   374,    -1,
     270,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,   284,    -1,    -1,   287,    -1,   374,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,   374,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,
     474,    -1,    -1,   477,   478,   479,    41,   481,   482,   483,
     484,   485,   486,    48,    -1,    -1,    -1,   491,   474,    -1,
      -1,   477,   478,   479,   374,   481,   482,   483,   484,   485,
     486,    -1,    -1,    -1,    -1,   491,    -1,    -1,    73,   474,
      -1,    -1,   477,   478,   479,    -1,   481,   482,   483,   484,
     485,   486,    -1,    -1,   173,    -1,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   474,    -1,
      -1,   477,   478,   479,    -1,   481,   482,   483,   484,   485,
     486,    -1,    -1,    -1,    -1,   491,   215,   216,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     229,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,   474,    -1,    -1,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,    33,   173,    -1,
      -1,   491,    -1,    -1,    -1,    41,    -1,    -1,   267,    -1,
      -1,   270,    48,   188,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
      -1,    -1,   287,    -1,    -1,   374,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   188,    -1,    -1,    -1,    -1,   193,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,
     216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,   374,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   474,    -1,    -1,   477,   478,
     479,    -1,   481,   482,   483,   484,   485,   486,    -1,    -1,
      -1,   267,   491,    -1,   270,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,
      -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,
      -1,    -1,   477,   478,   479,    -1,   481,   482,   483,   484,
     485,   486,    -1,    -1,    -1,    -1,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,     3,
      -1,   477,   478,   479,    -1,   481,   482,   483,   484,   485,
     486,    -1,    -1,   489,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,    -1,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,   228,    -1,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,
     483,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,    -1,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
     282,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,     4,     5,    -1,    -1,    -1,     9,   481,
     482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,   282,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     3,     4,     5,    -1,    -1,    -1,     9,
     481,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
      -1,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,   282,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,     8,    -1,    -1,    11,    -1,
      -1,   481,   482,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      33,    16,    17,    18,    37,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,     8,    48,    -1,    11,    33,    -1,
      -1,    -1,    16,    17,    18,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    33,
      73,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,     8,    48,    -1,    11,    -1,    73,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    73,
      -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,   124,    -1,    48,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
     173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   163,    -1,
      -1,    -1,    -1,   168,    -1,   188,    -1,    -1,   173,    -1,
     193,    -1,    -1,    -1,    73,    -1,    -1,    -1,   162,    -1,
      -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,   173,
      -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   188,    -1,   229,    -1,    -1,   193,
     215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   229,    -1,    -1,     8,   173,    -1,
      11,   215,   216,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,   188,   267,   229,    -1,   270,   193,    -1,
      -1,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,    -1,
      41,   284,   267,    -1,   287,   270,    -1,    48,    -1,    -1,
     215,   216,    -1,    -1,   173,    -1,    -1,    -1,    -1,   284,
      -1,    -1,   287,   267,   229,    -1,   270,    -1,    -1,   188,
      -1,    -1,    73,    -1,   193,    -1,    -1,    -1,    -1,    -1,
     284,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,
      -1,    -1,   267,    -1,    -1,   270,   310,    -1,    -1,    -1,
     229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
      -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   374,
      -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,   287,    -1,
     374,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   188,    -1,    -1,
     433,    -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,
      -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,
      -1,   474,    -1,    -1,   477,   478,   479,    -1,   481,   482,
     483,   484,   485,   486,    -1,    -1,    -1,    -1,    -1,   474,
      -1,    -1,   477,   478,   479,   374,   481,   482,   483,   484,
     485,   486,    -1,    -1,    -1,    -1,   267,    -1,    -1,   270,
     474,    -1,    -1,   477,   478,   479,    -1,   481,   482,   483,
     484,   485,   486,   284,    -1,    -1,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,
      -1,    -1,   477,   478,   479,    -1,   481,   482,   483,   484,
     485,   486,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,   474,    -1,    -1,   477,   478,
     479,    41,   481,   482,   483,   484,   485,   486,    48,    -1,
      -1,    -1,     8,   374,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    33,     8,    -1,
      36,    11,    -1,    -1,    -1,    41,    16,    17,    18,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    73,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    73,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,   474,    -1,    -1,   477,   478,   479,    -1,
     481,   482,   483,   484,   485,   486,    33,    -1,   168,    36,
      -1,    -1,    -1,   173,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,
      -1,    -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,
      -1,    -1,   188,    -1,    -1,    -1,    -1,   193,    -1,    -1,
      -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   188,   215,
     216,    -1,    -1,   193,    -1,    -1,    -1,   267,    -1,    -1,
     270,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   215,   216,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,
      -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,
      -1,   267,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,
      -1,   188,    -1,    -1,    -1,    -1,   193,    -1,   284,    -1,
      -1,   287,    -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,
     270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,
      -1,    -1,    -1,    -1,   284,    -1,    -1,   287,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   374,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,    -1,    -1,   270,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,   284,   374,    -1,
     287,    48,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,   374,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,   474,    -1,   406,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,    -1,
      -1,   477,   478,   479,    -1,   481,   482,   483,   484,   485,
     486,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   474,    -1,   173,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,    -1,    -1,    -1,
      -1,   188,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,
      -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,    -1,   474,   188,    -1,
     477,   478,   479,   193,   481,   482,   483,   484,   485,   486,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
     267,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,   229,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,
     270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   374,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,    -1,    -1,
     477,   478,   479,    -1,   481,   482,   483,   484,   485,   486,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,    -1,     5,   474,    -1,    -1,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
     172,    -1,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,   228,    -1,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,    -1,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,   228,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,    -1,
     170,   171,   172,    -1,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,   228,    -1,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,    -1,   268,
     269,   270,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,    -1,
     268,   269,   270,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    -1,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,   165,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,   165,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,    -1,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,   282,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
     283,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,    -1,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,   283,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
      -1,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,     3,     4,    -1,    -1,    -1,    -1,
       9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,    -1,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,    -1,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,    -1,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
      -1,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,    -1,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,    -1,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,    -1,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
      -1,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,    -1,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,    -1,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,    -1,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,    -1,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,    -1,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    -1,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,    -1,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,    -1,    -1,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,    -1,    -1,   268,   269,   270,
     271,    -1,    -1,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,    -1,
     291,   292,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,    -1,   309,   310,
      -1,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,    -1,   394,    -1,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,    -1,   414,    -1,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,    -1,   440,
      -1,   442,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,
     471,   472,   473,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
      -1,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,   229,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,    -1,    -1,   268,   269,   270,   271,    -1,    -1,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,    -1,   291,   292,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,    -1,   309,   310,    -1,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,    -1,   394,
      -1,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,    -1,   414,
      -1,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,    -1,   440,    -1,   442,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    -1,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    -1,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,    -1,   151,   152,   153,   154,    -1,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,    -1,
      -1,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,    -1,    -1,   268,
     269,   270,   271,    -1,    -1,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,    -1,   291,   292,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,    -1,
     309,   310,    -1,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,    -1,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,    -1,   394,    -1,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,    -1,   414,    -1,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
      -1,   440,    -1,   442,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   470,   471,   472,   473,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    -1,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    -1,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,    -1,   151,   152,
     153,   154,    -1,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,    -1,    -1,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,   229,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,    -1,   268,   269,   270,   271,    -1,
      -1,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,    -1,   291,   292,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,    -1,   309,   310,    -1,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
      -1,   394,    -1,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
      -1,   414,    -1,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,    -1,   440,    -1,   442,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,   471,   472,
     473
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    91,
      93,   111,   125,   135,   141,   149,   151,   152,   164,   192,
     207,   232,   309,   312,   340,   348,   362,   369,   373,   383,
     394,   398,   434,   439,   452,   476,   490,   501,   502,   503,
     504,   515,   516,   519,   521,   525,   539,   540,   542,   544,
     551,   553,   599,   606,   609,   610,   627,   628,   629,   630,
     631,   632,   680,   817,   820,   823,   830,   831,   832,   833,
     834,   841,   845,   851,   853,   858,   862,   863,   866,   867,
     869,   870,   872,   411,   455,   552,   196,   355,   363,   398,
     445,   552,     3,    19,    20,    21,    22,    23,    24,    25,
      26,    28,    29,    30,    38,    39,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    54,    55,
      56,    57,    58,    59,    62,    63,    64,    65,    66,    68,
      69,    70,    71,    72,    74,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    89,    90,    91,
      92,    94,    95,    96,    97,   101,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   116,   118,   119,   120,
     121,   122,   123,   125,   126,   127,   128,   129,   132,   133,
     134,   135,   136,   138,   139,   140,   142,   143,   144,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   157,
     159,   160,   161,   162,   164,   166,   167,   169,   170,   171,
     172,   173,   174,   176,   178,   179,   180,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   194,   195,
     196,   197,   198,   199,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   212,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   226,   227,   228,   229,   231,
     232,   233,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   268,   269,   270,   271,   273,   274,   275,
     276,   277,   278,   280,   281,   284,   285,   286,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   363,   364,   365,
     366,   367,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   396,   397,   399,
     400,   401,   402,   403,   404,   405,   407,   408,   411,   412,
     413,   414,   415,   417,   418,   419,   420,   421,   422,   423,
     424,   427,   428,   429,   430,   431,   434,   435,   436,   437,
     438,   439,   440,   442,   443,   444,   445,   446,   447,   450,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   736,   802,   806,   809,   875,   876,   877,   552,    50,
     490,   622,   170,   174,   233,   240,   287,   355,   402,   404,
     420,   426,   429,   597,   607,   829,     3,    27,   241,   312,
     391,   800,   806,   875,    21,    74,    90,   144,   153,   165,
     170,   196,   240,   244,   307,   321,   352,   355,   363,   366,
     385,   398,   405,   414,   420,   445,   600,   601,   604,   552,
     800,    93,   443,   490,   521,   609,   627,   837,   841,   858,
     872,   108,    68,   108,     5,   805,   852,   852,   806,   800,
      27,   407,   411,   806,   864,   865,   868,   552,    27,   130,
     639,   640,   174,   233,   355,   367,   407,   846,   847,   868,
     552,   439,   627,   632,   868,     5,   283,   691,   798,   806,
     807,   169,   490,   855,   490,   328,   633,   634,   800,   633,
     628,   629,     0,   493,   120,   206,   431,   145,   211,   288,
     425,   641,   642,   628,   630,   631,   494,   443,   835,    27,
     407,   411,   627,   868,   187,   798,   800,   187,   798,   187,
     691,   187,   798,   490,   488,   492,   784,   786,   521,   609,
     627,   819,   858,   798,   402,   404,   402,   404,   338,   187,
     806,   806,   811,   328,   363,   398,   445,   798,   196,    27,
     800,   246,   414,   107,   398,   445,   358,     3,    44,    49,
      50,    51,    52,    64,    65,    74,    82,    94,   101,   112,
     113,   134,   161,   167,   169,   173,   187,   188,   202,   209,
     210,   212,   215,   216,   218,   227,   229,   241,   260,   261,
     262,   270,   275,   291,   293,   325,   346,   350,   370,   374,
     377,   391,   400,   407,   408,   419,   440,   443,   605,   702,
     703,   705,   707,   709,   711,   713,   714,   715,   717,   718,
     719,   721,   722,   810,   875,   878,   187,   602,   811,   187,
     799,   800,   187,   800,   490,   543,   597,   837,     3,    48,
      49,    51,    52,    64,    65,    72,   112,   113,   150,   155,
     161,   178,   179,   203,   209,   210,   212,   241,   260,   262,
     266,   273,   275,   290,   294,   308,   311,   325,   350,   370,
     377,   391,   393,   407,   408,   413,   415,   419,   439,   440,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   838,   840,   841,   843,   844,   875,   879,   835,   805,
     805,   479,   490,   490,   818,   473,   217,   492,   282,     4,
       6,     7,     8,     9,    10,    35,    49,    51,    52,    60,
      61,    64,    65,    72,    74,    98,    99,   100,   101,   102,
     103,   104,   112,   113,   115,   150,   155,   156,   161,   178,
     179,   209,   210,   212,   234,   235,   260,   262,   267,   272,
     273,   275,   284,   294,   308,   325,   350,   368,   377,   393,
     407,   408,   413,   415,   416,   419,   432,   440,   474,   481,
     482,   483,   488,   490,   495,   497,   498,   628,   671,   706,
     709,   712,   713,   714,   716,   717,   718,   721,   722,   733,
     735,   736,   737,   739,   752,   753,   759,   778,   783,   790,
     791,   802,   803,   804,   805,   806,   789,   790,   846,   846,
     805,   846,   473,   168,   409,   479,   490,   798,   483,   786,
       3,   167,   169,   443,   841,   854,   856,   167,   857,   733,
     763,   806,   633,   494,   490,   813,   491,   491,   503,   168,
     213,   691,   859,    27,   130,   638,   638,    54,   638,   158,
     163,   230,   279,   647,   649,   650,   673,   675,   676,   677,
     641,   642,   490,   798,   473,   217,   150,    23,    29,   135,
     286,   336,   340,   369,   436,   509,   512,   513,   336,   150,
      36,    55,   106,   195,   245,   253,   265,   296,   336,   341,
     363,   369,   383,   512,   545,   548,   150,   336,   369,   512,
     150,   336,   369,   512,     3,    27,    44,    50,    74,    82,
      94,   101,   130,   167,   169,   173,   188,   202,   215,   216,
     218,   227,   229,   241,   261,   270,   291,   293,   346,   374,
     391,   400,   419,   441,   443,   483,   491,   733,   765,   766,
     808,   814,   875,   880,   733,   785,     3,    27,    31,    32,
      33,    34,    35,    36,    37,    40,    53,    60,    61,    67,
      73,    75,    86,    93,    98,    99,   100,   102,   103,   104,
     115,   117,   124,   130,   131,   137,   141,   145,   156,   158,
     163,   165,   168,   175,   177,   181,   193,   200,   211,   213,
     224,   225,   230,   234,   235,   267,   272,   279,   282,   283,
     287,   288,   305,   315,   330,   343,   362,   368,   379,   395,
     398,   406,   409,   410,   416,   425,   426,   432,   433,   439,
     441,   448,   449,   451,   452,   801,   815,   875,   879,   881,
     784,   491,   490,   587,   597,   267,   821,   492,   812,    36,
     445,   187,   798,   187,   798,   874,   798,   490,   608,    82,
     826,   456,    83,   127,   299,   403,   442,   720,   720,   720,
     490,   708,   708,   311,   490,   710,   150,   490,    64,    65,
     720,   708,   705,   454,   476,   490,   723,   490,   723,    58,
     342,   494,   603,   490,    35,   704,   490,   109,   110,   184,
     185,   247,   248,   249,   250,   251,   252,   255,   256,   359,
     360,   470,   471,   490,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   708,   150,   494,   603,   150,   494,   603,
     150,   282,   763,   398,   491,   494,     4,   156,   282,   416,
     481,   482,   547,   550,   804,   805,   836,   838,   839,   842,
     837,   490,   617,   621,   547,   842,   848,   850,   765,   703,
     767,    36,   228,   806,   490,   787,   488,   733,   782,   490,
     490,   163,   490,   490,   628,   490,   490,   490,   733,   490,
     490,   490,   490,   490,   490,   490,   490,   490,   733,   733,
     733,   146,   792,   793,   763,   764,   628,   733,   763,   754,
     755,   806,   807,     9,   787,   786,   490,   805,   490,   804,
     805,     3,     8,    11,    16,    17,    18,    33,    36,    41,
      48,    73,   173,   188,   193,   215,   216,   229,   267,   270,
     284,   287,   374,   474,   477,   478,   479,   481,   482,   483,
     484,   485,   486,   757,   758,   759,   761,   453,   740,   787,
      15,   293,   733,    15,   213,   494,   635,   490,   805,   787,
     492,   786,   635,     3,   115,   233,   547,   722,   805,   849,
      97,   115,   850,   115,   850,   798,   491,   494,   835,   491,
     494,   634,   799,    36,   859,   523,   798,    36,   806,   369,
     630,   630,   643,   644,   733,   630,   160,   264,   663,   219,
     265,   324,   372,   431,    27,   658,   733,   481,   482,   659,
     660,   733,   735,   673,   674,   650,   649,   647,   648,   163,
     676,   277,   678,   647,   673,   763,   813,   228,   798,    67,
      75,    86,   165,   187,   315,   426,   568,   578,   593,   806,
      75,    86,   520,    86,   520,   490,   409,   490,   566,   239,
     429,   566,    86,   494,   409,   798,   705,   547,    54,   549,
     547,   547,   106,   245,   253,    54,   409,   452,   476,   546,
     258,   355,   546,   548,   691,    86,   409,   520,   355,   798,
     409,   355,   765,   765,   766,   491,   494,   641,   642,    13,
      14,   489,   499,   409,   586,   591,   806,   452,   620,   328,
     398,   445,   150,    93,   540,   553,   822,   823,   870,   801,
     492,   142,   798,   267,   541,   545,   267,   490,   587,    36,
     587,   491,   765,    36,   187,   581,   806,   827,   490,   763,
     804,   605,   767,   720,   720,    35,   704,   407,   407,   804,
     804,   703,   701,   806,   488,   488,   804,   804,   409,   409,
     409,   409,   602,   811,   799,   800,   800,   811,   491,   187,
     798,   874,   837,   843,     4,   804,     4,   804,   619,   626,
     815,    50,    95,   121,   139,   143,   164,   167,   182,   272,
     280,   322,   623,   494,   491,   494,   491,   494,   819,   763,
     784,   764,   448,   779,   780,   733,   763,   490,   804,   804,
       3,   724,   725,   726,   727,   728,   729,   730,   731,   768,
     769,   805,   804,   804,   733,     8,    16,    17,    18,   477,
     478,   479,   481,   482,   483,   484,   485,   486,   757,   762,
     806,   733,   770,   481,   482,   490,   734,   735,   759,   772,
     783,   491,   763,   733,   763,   773,   733,    53,   168,   225,
     410,   733,   763,   776,   733,   490,   806,   338,   796,   489,
     491,   494,   494,   496,   499,   763,   733,   732,   732,   703,
     733,   733,   733,   733,     5,   815,   816,   407,    40,   395,
     788,   811,   733,   733,   490,   628,   777,   130,   156,   267,
     272,   277,   416,   427,   733,   272,   490,   733,   409,    48,
     173,   188,   193,   229,   374,   733,   733,   733,   733,   733,
     733,   733,   733,   733,   733,    27,    34,   379,   756,   177,
     159,   741,   733,   350,   490,   753,   733,   174,   233,   398,
     402,   404,   429,   636,   798,   791,   168,   681,   765,   483,
     681,   490,   805,   491,   798,   854,   798,   862,   733,   491,
     490,   433,   861,   115,   295,   490,   522,   627,    36,   806,
     490,   527,   536,   538,   806,   494,    37,   124,   433,   645,
     350,   351,   481,   482,   660,   662,   735,   372,   219,   283,
     494,     4,   661,   804,   661,   350,   351,   662,   797,   798,
     271,   376,   679,   674,   648,   491,   336,   512,   490,   187,
     578,   800,   219,   267,   219,   433,   490,   571,   703,   800,
     806,   187,   800,   187,   806,    23,   135,   369,   508,   511,
     561,   576,   815,   800,   570,   590,   815,   800,   509,   800,
     336,   369,   512,   545,   547,   811,   800,   547,   811,   800,
     547,   336,   369,   512,   800,   800,   800,   800,   336,   369,
     512,   800,   800,   641,   641,   641,   441,   766,   491,   733,
     733,   733,   785,   320,   616,   491,   494,   280,   168,   409,
     611,   445,   798,   798,   806,   597,   801,   490,   490,   150,
     150,   229,   568,   578,   582,   585,   594,   596,   806,   452,
     454,   573,   149,   627,   452,   828,   491,   733,   267,   282,
     763,   491,   491,   603,   491,   488,   473,   473,   491,   491,
     491,   494,   703,   804,   489,   804,   491,   491,   725,   727,
     728,   729,   728,   729,   729,   603,   603,   282,   603,   267,
      36,   491,   494,   483,   490,   547,   618,   842,    36,   615,
     805,   615,   267,   272,   322,   615,   615,   848,   703,   491,
     489,   733,   137,   780,   781,    36,   491,   733,   491,   491,
     491,   168,   491,   491,   494,   491,   492,   305,   771,   491,
     734,   734,   733,    11,    16,    17,    18,   193,   215,   284,
     477,   478,   479,   481,   482,   483,   484,   485,   486,   759,
     734,   491,   491,   163,   168,   774,   775,   491,    36,   776,
     763,   776,   776,   168,   491,    36,   799,   490,   733,   794,
     787,   733,   754,   733,   491,   491,   473,   734,   734,   143,
     763,   168,   130,   156,   272,   277,   416,   427,   490,   143,
     762,   733,   395,   788,   733,   777,   733,   409,   490,   628,
     490,   490,   292,   745,   402,   404,   402,   404,   798,   398,
     637,   637,   637,   224,   351,   490,   628,   682,   683,   684,
     691,   692,   736,   738,   739,   806,   449,   697,   641,   793,
     697,   804,   732,   813,   819,   682,   449,   860,   439,   397,
     432,   531,   526,   535,   806,   282,   528,   806,   532,   538,
     494,   681,   479,   787,   644,   284,   757,   760,   475,   646,
       4,   804,   662,   283,   431,   659,   494,   238,   409,   733,
     267,   593,   490,   150,   490,   571,   196,   591,   554,   286,
     564,   554,    23,   135,   340,   341,   369,   505,   506,   507,
     513,   514,   150,   603,   150,   603,   561,   576,   561,   491,
     494,   557,   805,   491,   494,   479,   492,   409,   355,    86,
     409,   520,   355,   409,   409,   409,   355,   491,   491,   491,
     766,   489,   386,   387,   625,   805,   586,   616,   798,   490,
     587,   821,   398,   517,   518,   805,   591,   798,   798,   874,
     798,   491,   494,   280,   566,   280,   282,   565,   800,   452,
     873,   566,    36,   150,   798,   491,   704,   804,   723,   723,
     704,   806,   489,   489,   811,   150,   619,   613,   624,   842,
     805,   805,   272,   591,   483,   591,   805,   805,   406,   733,
     141,   703,   491,   733,   733,   762,   733,   774,   703,   734,
     734,   734,   734,   130,   267,   277,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   734,   733,   733,   775,   774,
     703,   491,   491,   491,   763,   703,   491,   733,   794,   795,
      36,   491,   732,   733,    33,    33,   733,   491,   733,   168,
     490,   767,   733,   491,   143,   734,   734,   143,   143,   733,
     733,   642,   449,   490,   746,   806,   637,   637,   637,   637,
     798,   798,   798,   628,   692,   168,   628,   683,   684,    36,
     685,   686,   806,   494,    94,   169,   202,   218,   227,   261,
     346,   688,   686,    36,   685,   687,   806,   476,   696,   786,
     733,   177,   664,   491,   796,   664,   491,   491,   733,   343,
     530,   438,   491,   494,   787,    84,   530,   491,   494,   527,
     860,   733,   490,   646,   160,   223,   283,   798,   800,   491,
     150,   591,   578,   591,   554,   581,   491,   117,   200,   265,
     267,   577,   490,   588,   172,   115,   186,   267,   566,   546,
     107,   115,   172,   267,   385,   388,   548,   566,   369,   507,
     420,   800,   806,   511,   590,     3,    44,    50,    74,    82,
      94,   101,   167,   169,   173,   188,   202,   215,   216,   218,
     227,   229,   241,   261,   266,   270,   284,   291,   293,   346,
     370,   374,   391,   400,   419,   443,   481,   482,   547,   555,
     592,   703,   760,   805,   808,   875,   881,   815,   800,   800,
     800,   800,   800,   800,   800,   800,   800,   800,   641,   546,
     625,   490,   585,   828,   187,   798,   491,   494,   491,   541,
     490,    36,   575,   573,   582,    79,   543,   107,   265,   627,
     581,   433,   825,   489,   703,   603,   874,   491,   494,   591,
     733,   491,   491,   775,   168,   130,   277,   490,   491,   491,
     491,   494,   806,   733,   733,   733,   767,   491,   733,    33,
      33,   733,   733,   143,   491,   491,   733,   747,   806,   798,
     798,   798,   798,   686,   687,   490,   491,   806,   807,   400,
     655,   656,   490,   683,   218,   291,   689,   683,   689,   218,
     688,   689,   218,   656,   490,   806,   656,   490,   289,    54,
     181,   672,   805,   672,   805,   790,   627,   295,   627,   526,
     282,   490,   524,   479,   538,   530,   762,   554,   578,   491,
     491,   452,   584,   118,   189,   198,   117,   435,   561,   579,
      67,    73,    86,   115,   117,   172,   200,   267,   272,   315,
     330,   426,   433,   559,   560,   572,    30,    54,   598,   187,
     272,   547,   733,   598,   272,   481,   482,   550,   806,   703,
     603,   603,   241,   391,   808,   812,   479,   409,   409,   491,
     617,   433,   612,   614,   591,   491,    36,   267,   490,   805,
     828,   585,   149,   627,   147,   194,   565,   120,   135,   314,
     873,   107,   452,   871,   282,   806,   824,   490,    36,   624,
     734,   168,   490,   767,   794,   491,   733,   733,   733,   491,
     301,   748,   693,   694,   738,   685,   490,     4,     9,   651,
     653,   654,   806,   799,   683,   282,   433,   690,   683,   218,
     683,   698,   699,   806,   490,   698,   806,    96,   178,   349,
     490,   665,   666,   667,   668,   669,   670,   733,   733,   451,
     742,   742,   531,    86,   490,   529,   537,   738,   806,   131,
     733,   491,   330,   584,   490,   574,   554,   491,   494,   490,
     811,   800,   734,   598,   118,   189,   117,   272,   219,   798,
     584,    81,   115,    36,   150,    73,   700,   812,   485,   555,
     800,   800,   546,   122,   491,   573,   627,   150,    36,   491,
     800,   873,    27,    78,    87,   116,   186,   197,   385,   388,
     569,   569,   351,   351,    59,    67,   233,   798,   537,   734,
     767,   491,    54,   641,   491,   494,    36,   695,   799,   304,
     485,   304,   351,   485,   490,   490,   491,   733,   490,   683,
     690,   491,   494,   703,   698,   491,   490,   371,   490,   491,
     494,   743,   744,   806,   433,   652,   652,   438,   800,   733,
     491,   494,    73,   533,   533,   268,   431,   798,   554,   580,
     583,   815,   561,   733,   267,   560,    36,   584,   587,   800,
     186,   811,   433,   510,   485,   420,   617,   805,   828,   565,
     871,   798,   627,   573,   543,    67,   285,    67,   825,   491,
     491,   763,   323,   351,   749,   696,   693,   490,   491,   806,
     651,   799,   699,   700,   491,   763,   490,   763,   666,   494,
      36,   353,   627,   491,   697,   529,   811,   534,   811,   534,
     369,   587,   491,   494,   479,   491,   186,   243,   595,   490,
     556,   733,   420,    36,   490,   871,   565,   873,   285,   285,
     490,   828,    48,    97,   422,   733,   750,   751,   750,   491,
     698,   491,   494,   491,   491,   491,   665,   491,   744,   746,
     654,   533,   645,   645,   536,   595,   583,   555,   265,   567,
     556,   169,   300,   375,   282,   562,   563,   589,   545,   627,
     537,   697,   751,   350,   162,   310,   162,   310,   491,     9,
     337,   657,   491,   534,   646,   646,   697,   563,   198,   120,
     431,   282,   589,   282,   562,   491,   871,   491,    33,   491,
     490,   645,   554,    58,   265,   342,   369,   558,   558,   828,
     751,     9,   646,    22,   115,   272,   697,   491
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 465 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 481 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 493 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 536 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 105:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 106:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 107:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 108:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 117:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 118:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 119:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 120:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 121:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 122:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 123:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 124:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 125:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 126:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 127:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 128:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 129:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 130:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 131:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 132:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 133:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 134:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 135:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 136:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 137:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 138:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 139:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 140:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 141:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 142:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 143:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 144:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 145:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 146:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 147:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 148:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 149:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 150:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 151:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 152:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 153:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 154:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 155:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 156:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 157:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 158:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 159:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 160:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 161:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 163:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 164:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 168:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 169:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 170:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 171:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 172:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 173:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 174:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 175:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 176:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 177:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 178:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 179:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 180:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 181:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 182:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 183:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 184:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 185:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 188:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 191:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 193:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 195:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 196:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 197:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 198:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 200:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 201:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 202:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 203:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 204:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 205:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 206:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 211:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 212:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 213:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 214:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 215:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 216:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 217:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 219:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 220:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 221:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 222:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 223:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 224:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 225:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 226:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 227:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 228:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 229:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 230:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 231:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 232:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 233:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 234:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 235:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 236:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 237:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 238:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 239:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 245:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 246:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 247:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 248:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 249:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 250:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 252:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 253:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 254:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 255:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 256:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 257:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 258:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 261:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 262:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 263:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 264:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 265:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 266:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 267:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 268:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 269:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 270:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 271:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 272:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 273:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 274:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 275:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 276:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 277:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 278:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 279:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 280:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 281:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 282:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 283:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 284:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 285:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 286:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 287:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 288:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 289:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 290:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 291:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 292:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 293:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 294:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 295:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 296:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 297:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 298:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 299:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 300:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 301:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 302:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 303:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 304:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 305:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 306:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 307:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 308:
#line 454 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 309:
#line 461 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 310:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 311:
#line 467 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 312:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 313:
#line 472 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 314:
#line 478 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 315:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 316:
#line 486 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 317:
#line 491 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 318:
#line 498 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 319:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 320:
#line 503 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 321:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 322:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 323:
#line 522 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 324:
#line 536 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 325:
#line 549 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 326:
#line 564 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 577 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 328:
#line 592 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 329:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 330:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 331:
#line 625 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 332:
#line 629 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 333:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 334:
#line 641 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 335:
#line 649 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 336:
#line 658 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 337:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 338:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 339:
#line 661 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 340:
#line 663 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 341:
#line 670 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 342:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 343:
#line 677 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 344:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 345:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 346:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 347:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 348:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 349:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 350:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 351:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 352:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 353:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 354:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 355:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 356:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 357:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 358:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 359:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 360:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 361:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 362:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 363:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 364:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 365:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 366:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 367:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 368:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 369:
#line 112 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 370:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 371:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 372:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 373:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 374:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 375:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 376:
#line 123 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 377:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 378:
#line 129 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 379:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 380:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 381:
#line 136 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 382:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 383:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 384:
#line 141 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 385:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 386:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 389:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 390:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 391:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 392:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 393:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 394:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 395:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 396:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 397:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 398:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 399:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 400:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 401:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 402:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 403:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 404:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 405:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 406:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 407:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 408:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 409:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 410:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 411:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 412:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 413:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 414:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 415:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 416:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 417:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 418:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 419:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 420:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 421:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 422:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 423:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 424:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 425:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 426:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 427:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 428:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 429:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 430:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 431:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 432:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 433:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 434:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 435:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 436:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 437:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 438:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 439:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 442:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 443:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 444:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 445:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 446:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 447:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 448:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 449:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 450:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 451:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 452:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 453:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 454:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 455:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 456:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 457:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 458:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 459:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 460:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 461:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 462:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 463:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 464:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 465:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 466:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 467:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 468:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 469:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 470:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 471:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 472:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 473:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 474:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 475:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 476:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 477:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 478:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 479:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 480:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 481:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 482:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 483:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 484:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 485:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 486:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 487:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 488:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 489:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 490:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 491:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 492:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 493:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 494:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 495:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 496:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 497:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 498:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 499:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 500:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 501:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 502:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 503:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 504:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 505:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 506:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 507:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 508:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 509:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 510:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 511:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 512:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 513:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 514:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 515:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 516:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 517:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 518:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 519:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 520:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 521:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 522:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 523:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 524:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 525:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 526:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 527:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 528:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 529:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 530:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 531:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 532:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 533:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 534:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 535:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 536:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 537:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 538:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 539:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 540:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 541:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 542:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 543:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 544:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 545:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 546:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 547:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 548:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 549:
#line 624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 550:
#line 625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 551:
#line 626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 552:
#line 631 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 553:
#line 644 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 554:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 555:
#line 658 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 556:
#line 664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 557:
#line 665 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 558:
#line 669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 559:
#line 670 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 560:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 561:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 562:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 563:
#line 680 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 564:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 565:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 566:
#line 690 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 567:
#line 700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 568:
#line 701 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 569:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 570:
#line 703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 571:
#line 707 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 572:
#line 708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 573:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 574:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 575:
#line 715 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 576:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 577:
#line 731 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 578:
#line 748 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 579:
#line 749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 580:
#line 753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 581:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 582:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 583:
#line 767 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 584:
#line 775 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 585:
#line 783 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 586:
#line 792 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 587:
#line 801 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 588:
#line 805 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 589:
#line 831 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 590:
#line 835 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 591:
#line 848 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 592:
#line 862 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 593:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 594:
#line 889 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 595:
#line 905 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 596:
#line 911 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 597:
#line 916 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 598:
#line 922 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 599:
#line 928 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 600:
#line 929 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 601:
#line 938 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 602:
#line 942 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 603:
#line 946 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 604:
#line 952 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 605:
#line 958 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 606:
#line 963 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 607:
#line 964 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 608:
#line 965 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 609:
#line 966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 610:
#line 970 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 611:
#line 971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 612:
#line 983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 613:
#line 984 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 614:
#line 990 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 615:
#line 997 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 616:
#line 1004 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 617:
#line 1011 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 618:
#line 1043 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 619:
#line 1054 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 620:
#line 1067 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 621:
#line 1071 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 622:
#line 1072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 623:
#line 1075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 624:
#line 1076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 625:
#line 1079 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 626:
#line 1080 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 627:
#line 1085 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 628:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 629:
#line 1092 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 630:
#line 1096 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 631:
#line 1102 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 632:
#line 1123 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 633:
#line 1130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 634:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 635:
#line 1146 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 638:
#line 1153 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 639:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 640:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 641:
#line 1170 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 642:
#line 1176 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 643:
#line 1181 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 644:
#line 1186 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 645:
#line 1192 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 646:
#line 1202 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 647:
#line 1204 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 648:
#line 1206 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 649:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 650:
#line 1211 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 651:
#line 1212 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 652:
#line 1213 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 653:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 654:
#line 1216 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 655:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 656:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 657:
#line 1241 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 658:
#line 1242 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 659:
#line 1243 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 660:
#line 1255 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 661:
#line 1268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 662:
#line 1269 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 663:
#line 1276 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 664:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 665:
#line 1286 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 666:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 667:
#line 1296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 668:
#line 1301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 669:
#line 1306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 670:
#line 1311 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 671:
#line 1317 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 672:
#line 1323 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 673:
#line 1329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 674:
#line 1336 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 675:
#line 1357 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 676:
#line 1367 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 677:
#line 1371 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 678:
#line 1379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 679:
#line 1383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 680:
#line 1391 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 681:
#line 1403 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 682:
#line 1424 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 683:
#line 1428 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 684:
#line 1434 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 685:
#line 1438 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 686:
#line 1451 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 687:
#line 1459 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 688:
#line 1469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 689:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 690:
#line 1473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 691:
#line 1475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 692:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 693:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 694:
#line 1483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 695:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 696:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 697:
#line 1501 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 698:
#line 1509 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 699:
#line 1518 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 700:
#line 1529 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 701:
#line 1536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 702:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 703:
#line 1538 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 720:
#line 1567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 721:
#line 1569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 722:
#line 1571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 723:
#line 1573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 724:
#line 1575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 725:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 726:
#line 1579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 727:
#line 1581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 728:
#line 1583 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 729:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 730:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 731:
#line 1599 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 732:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 733:
#line 1611 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 734:
#line 1617 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 735:
#line 1622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 736:
#line 1653 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 737:
#line 1656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1658 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 739:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 740:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 741:
#line 1683 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 742:
#line 1685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1687 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1689 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 1693 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 1695 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 748:
#line 1697 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 749:
#line 1699 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 750:
#line 1701 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 751:
#line 1703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 752:
#line 1705 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 753:
#line 1707 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 754:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 755:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 756:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 757:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 758:
#line 1719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 759:
#line 1721 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 760:
#line 1723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 761:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 762:
#line 1731 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 763:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 764:
#line 1743 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 765:
#line 1748 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 766:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 767:
#line 1760 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 768:
#line 1768 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 769:
#line 1773 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 770:
#line 1782 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 771:
#line 1790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 772:
#line 1798 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 773:
#line 1806 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 774:
#line 1824 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 775:
#line 1832 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 776:
#line 1840 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 777:
#line 1848 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 778:
#line 1856 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 779:
#line 1863 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 780:
#line 1867 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 781:
#line 1871 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 782:
#line 1876 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 783:
#line 1884 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 784:
#line 1892 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 785:
#line 1908 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 786:
#line 1916 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 787:
#line 1924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 788:
#line 1932 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 789:
#line 1940 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 790:
#line 1948 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 791:
#line 1956 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 792:
#line 1960 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 793:
#line 1964 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 794:
#line 1968 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 795:
#line 1972 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 796:
#line 1980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 797:
#line 1988 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 798:
#line 1996 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 799:
#line 2004 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 800:
#line 2024 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 801:
#line 2046 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 802:
#line 2057 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 803:
#line 2064 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 804:
#line 2077 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 805:
#line 2094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 806:
#line 2096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 807:
#line 2098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 808:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 809:
#line 2102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 810:
#line 2104 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 811:
#line 2106 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 812:
#line 2108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 813:
#line 2110 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 814:
#line 2112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 815:
#line 2114 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 816:
#line 2116 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 817:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 818:
#line 2120 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 819:
#line 2122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 820:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 821:
#line 2126 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 822:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 823:
#line 2130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 824:
#line 2132 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 825:
#line 2136 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 826:
#line 2140 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 827:
#line 2144 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 828:
#line 2157 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 829:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 830:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 831:
#line 2167 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 832:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 833:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 834:
#line 2206 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 835:
#line 2208 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 836:
#line 2220 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 837:
#line 2231 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 838:
#line 2255 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 839:
#line 2266 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 840:
#line 2275 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 841:
#line 2279 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 842:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 843:
#line 2292 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 844:
#line 2299 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 845:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 846:
#line 2316 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 847:
#line 2344 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 848:
#line 2379 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 849:
#line 2389 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 850:
#line 2390 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 851:
#line 2398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 852:
#line 2404 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 853:
#line 2408 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 854:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 855:
#line 2416 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 856:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 857:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 858:
#line 2428 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 859:
#line 2432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 860:
#line 2436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 861:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 862:
#line 2444 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 863:
#line 2448 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 864:
#line 2452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 865:
#line 2456 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 866:
#line 2460 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 867:
#line 2464 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 868:
#line 2466 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 869:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 870:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 871:
#line 2481 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 872:
#line 2486 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 873:
#line 2493 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 874:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 875:
#line 2515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 876:
#line 2519 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 877:
#line 2523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 878:
#line 2527 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 879:
#line 2531 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 880:
#line 2544 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 881:
#line 2545 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 882:
#line 2549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 883:
#line 2550 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 884:
#line 2558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 885:
#line 2559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 886:
#line 2563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 887:
#line 2565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 888:
#line 2570 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 889:
#line 2578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 890:
#line 2580 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 891:
#line 2593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 892:
#line 2598 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 893:
#line 2623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 894:
#line 2624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 895:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 896:
#line 2628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 897:
#line 2640 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 898:
#line 2646 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 899:
#line 2652 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 900:
#line 2662 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 901:
#line 2679 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 902:
#line 2724 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 903:
#line 2732 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 904:
#line 2740 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 905:
#line 2748 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 906:
#line 2756 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 907:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 908:
#line 2777 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 909:
#line 2780 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 910:
#line 2781 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 911:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 912:
#line 2795 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 913:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 914:
#line 2798 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 915:
#line 2799 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 916:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 917:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 918:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 919:
#line 2807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 920:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 921:
#line 2809 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 922:
#line 2810 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 923:
#line 2811 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 924:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 925:
#line 2813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 926:
#line 2814 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 927:
#line 2815 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 928:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 929:
#line 2817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 930:
#line 2818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 931:
#line 2822 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 932:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 933:
#line 2829 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 934:
#line 2831 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 935:
#line 2836 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 936:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 937:
#line 2840 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 938:
#line 2842 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 939:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 940:
#line 2846 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 941:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 942:
#line 2850 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 943:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 944:
#line 2866 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 945:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 946:
#line 2874 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 947:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 948:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 949:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 950:
#line 2897 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 951:
#line 2903 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 952:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 953:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 954:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 955:
#line 2927 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 956:
#line 2932 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 957:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 958:
#line 2942 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 959:
#line 2943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 960:
#line 2944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 961:
#line 2945 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 962:
#line 2946 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 963:
#line 2947 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 964:
#line 2948 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 965:
#line 2949 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 966:
#line 2950 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 967:
#line 2951 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 968:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 969:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 970:
#line 2973 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 971:
#line 2979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 972:
#line 2980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 973:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 974:
#line 3001 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 975:
#line 3006 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 976:
#line 3010 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 977:
#line 3025 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 978:
#line 3029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 979:
#line 3033 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 980:
#line 3036 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 981:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 982:
#line 3040 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 983:
#line 3041 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 984:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 985:
#line 3051 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 986:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 987:
#line 3075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 988:
#line 3076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 989:
#line 3081 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 990:
#line 3091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 991:
#line 3092 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 992:
#line 3095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 993:
#line 3096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 994:
#line 3100 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 995:
#line 3104 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 996:
#line 3111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 997:
#line 3115 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 998:
#line 3123 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 999:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1000:
#line 3134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1001:
#line 3138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1002:
#line 3139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1003:
#line 3143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1004:
#line 3144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1007:
#line 3158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1008:
#line 3159 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1009:
#line 3163 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1010:
#line 3164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1011:
#line 3168 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1012:
#line 3184 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1013:
#line 3192 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1014:
#line 3200 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1015:
#line 3215 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1016:
#line 3232 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1017:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1018:
#line 3236 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1019:
#line 3237 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1020:
#line 3240 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1021:
#line 3244 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1022:
#line 3245 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1023:
#line 3248 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1024:
#line 3249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1025:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1026:
#line 3260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1027:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1028:
#line 3273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1029:
#line 3277 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1030:
#line 3304 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1031:
#line 3306 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1032:
#line 3310 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1033:
#line 3312 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1034:
#line 3323 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1035:
#line 3326 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1036:
#line 3337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1037:
#line 3341 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1038:
#line 3345 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1039:
#line 3357 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1040:
#line 3361 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1041:
#line 3370 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1042:
#line 3377 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 1043:
#line 3409 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1044:
#line 3413 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1045:
#line 3417 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1046:
#line 3421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1047:
#line 3425 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1048:
#line 3429 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1049:
#line 3433 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1050:
#line 3438 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1051:
#line 3439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1052:
#line 3455 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1053:
#line 3456 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1054:
#line 3457 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1055:
#line 3460 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1056:
#line 3461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1057:
#line 3467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1058:
#line 3468 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1059:
#line 3469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1060:
#line 3472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1061:
#line 3473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1062:
#line 3474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1063:
#line 3477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1064:
#line 3478 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1065:
#line 3479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1066:
#line 3482 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1067:
#line 3483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1068:
#line 3487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1069:
#line 3489 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1070:
#line 3493 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1071:
#line 3494 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1073:
#line 3505 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1074:
#line 3506 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1075:
#line 3507 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1076:
#line 3508 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1077:
#line 3511 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1078:
#line 3512 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1079:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1080:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1081:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1086:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1087:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1088:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1089:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1094:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1095:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1096:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1097:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1098:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1099:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1100:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1101:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1102:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1103:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1104:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1105:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1106:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1107:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1108:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1109:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1110:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1111:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1112:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1113:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1114:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1115:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1116:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1117:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1118:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1119:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1120:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1121:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1122:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1123:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1124:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1125:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1131:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1132:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1133:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1134:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1135:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1136:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1137:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1138:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1139:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1140:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1141:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1142:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1143:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1144:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1145:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1146:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1147:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1148:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1149:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1150:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1151:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1152:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1153:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1154:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1155:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1156:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1157:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1158:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1159:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1160:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1161:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1162:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1163:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1164:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1165:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1166:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1167:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1168:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1169:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1170:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					n->install = 0;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1171:
#line 14 "third_party/libpg_query/grammar/statements/load.y"
    {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[(2) - (2)].str);
                    n->install = 1;
                    (yyval.node) = (PGNode *)n;
				;}
    break;

  case 1172:
#line 22 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1173:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1174:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1175:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1176:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1177:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1178:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1179:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1180:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1181:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1182:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1183:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1184:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1185:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1186:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1187:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1188:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1189:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1190:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1191:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1192:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1193:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1194:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1195:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1196:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1197:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1198:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1199:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1200:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1201:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1202:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1203:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1204:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1205:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1206:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1207:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1208:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1209:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1210:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1211:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "all";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1214:
#line 57 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1215:
#line 59 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1216:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1217:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1218:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1219:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1220:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1221:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1222:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1223:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1224:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1225:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1226:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1227:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1228:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1229:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1230:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 24203 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 70 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
