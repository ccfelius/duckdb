/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALL_P = 310,
     CALLED = 311,
     CASCADE = 312,
     CASCADED = 313,
     CASE = 314,
     CAST = 315,
     CATALOG_P = 316,
     CHAIN = 317,
     CHAR_P = 318,
     CHARACTER = 319,
     CHARACTERISTICS = 320,
     CHECK_P = 321,
     CHECKPOINT = 322,
     CLASS = 323,
     CLOSE = 324,
     CLUSTER = 325,
     COALESCE = 326,
     COLLATE = 327,
     COLLATION = 328,
     COLUMN = 329,
     COLUMNS = 330,
     COMMENT = 331,
     COMMENTS = 332,
     COMMIT = 333,
     COMMITTED = 334,
     CONCURRENTLY = 335,
     CONFIGURATION = 336,
     CONFLICT = 337,
     CONNECTION = 338,
     CONSTRAINT = 339,
     CONSTRAINTS = 340,
     CONTENT_P = 341,
     CONTINUE_P = 342,
     CONVERSION_P = 343,
     COPY = 344,
     COST = 345,
     CREATE_P = 346,
     CROSS = 347,
     CSV = 348,
     CUBE = 349,
     CURRENT_P = 350,
     CURRENT_CATALOG = 351,
     CURRENT_DATE = 352,
     CURRENT_ROLE = 353,
     CURRENT_SCHEMA = 354,
     CURRENT_TIME = 355,
     CURRENT_TIMESTAMP = 356,
     CURRENT_USER = 357,
     CURSOR = 358,
     CYCLE = 359,
     DATA_P = 360,
     DATABASE = 361,
     DAY_P = 362,
     DEALLOCATE = 363,
     DEC = 364,
     DECIMAL_P = 365,
     DECLARE = 366,
     DEFAULT = 367,
     DEFAULTS = 368,
     DEFERRABLE = 369,
     DEFERRED = 370,
     DEFINER = 371,
     DELETE_P = 372,
     DELIMITER = 373,
     DELIMITERS = 374,
     DEPENDS = 375,
     DESC_P = 376,
     DESCRIBE = 377,
     DETACH = 378,
     DICTIONARY = 379,
     DISABLE_P = 380,
     DISCARD = 381,
     DISTINCT = 382,
     DO = 383,
     DOCUMENT_P = 384,
     DOMAIN_P = 385,
     DOUBLE_P = 386,
     DROP = 387,
     EACH = 388,
     ELSE = 389,
     ENABLE_P = 390,
     ENCODING = 391,
     ENCRYPTED = 392,
     END_P = 393,
     ENUM_P = 394,
     ESCAPE = 395,
     EVENT = 396,
     EXCEPT = 397,
     EXCLUDE = 398,
     EXCLUDING = 399,
     EXCLUSIVE = 400,
     EXECUTE = 401,
     EXISTS = 402,
     EXPLAIN = 403,
     EXPORT_P = 404,
     EXTENSION = 405,
     EXTERNAL = 406,
     EXTRACT = 407,
     FALSE_P = 408,
     FAMILY = 409,
     FETCH = 410,
     FILTER = 411,
     FIRST_P = 412,
     FLOAT_P = 413,
     FOLLOWING = 414,
     FOR = 415,
     FORCE = 416,
     FOREIGN = 417,
     FORWARD = 418,
     FREEZE = 419,
     FROM = 420,
     FULL = 421,
     FUNCTION = 422,
     FUNCTIONS = 423,
     GENERATED = 424,
     GLOBAL = 425,
     GRANT = 426,
     GRANTED = 427,
     GROUP_P = 428,
     GROUPING = 429,
     HANDLER = 430,
     HAVING = 431,
     HEADER_P = 432,
     HOLD = 433,
     HOUR_P = 434,
     IDENTITY_P = 435,
     IF_P = 436,
     ILIKE = 437,
     IMMEDIATE = 438,
     IMMUTABLE = 439,
     IMPLICIT_P = 440,
     IMPORT_P = 441,
     IN_P = 442,
     INCLUDING = 443,
     INCREMENT = 444,
     INDEX = 445,
     INDEXES = 446,
     INHERIT = 447,
     INHERITS = 448,
     INITIALLY = 449,
     INLINE_P = 450,
     INNER_P = 451,
     INOUT = 452,
     INPUT_P = 453,
     INSENSITIVE = 454,
     INSERT = 455,
     INSTEAD = 456,
     INT_P = 457,
     INTEGER = 458,
     INTERSECT = 459,
     INTERVAL = 460,
     INTO = 461,
     INVOKER = 462,
     IS = 463,
     ISNULL = 464,
     ISOLATION = 465,
     JOIN = 466,
     KEY = 467,
     LABEL = 468,
     LANGUAGE = 469,
     LARGE_P = 470,
     LAST_P = 471,
     LATERAL_P = 472,
     LEADING = 473,
     LEAKPROOF = 474,
     LEFT = 475,
     LEVEL = 476,
     LIKE = 477,
     LIMIT = 478,
     LISTEN = 479,
     LOAD = 480,
     LOCAL = 481,
     LOCALTIME = 482,
     LOCALTIMESTAMP = 483,
     LOCATION = 484,
     LOCK_P = 485,
     LOCKED = 486,
     LOGGED = 487,
     MAPPING = 488,
     MATCH = 489,
     MATERIALIZED = 490,
     MAXVALUE = 491,
     METHOD = 492,
     MINUTE_P = 493,
     MINVALUE = 494,
     MODE = 495,
     MONTH_P = 496,
     MOVE = 497,
     NAME_P = 498,
     NAMES = 499,
     NATIONAL = 500,
     NATURAL = 501,
     NCHAR = 502,
     NEW = 503,
     NEXT = 504,
     NO = 505,
     NONE = 506,
     NOT = 507,
     NOTHING = 508,
     NOTIFY = 509,
     NOTNULL = 510,
     NOWAIT = 511,
     NULL_P = 512,
     NULLIF = 513,
     NULLS_P = 514,
     NUMERIC = 515,
     OBJECT_P = 516,
     OF = 517,
     OFF = 518,
     OFFSET = 519,
     OIDS = 520,
     OLD = 521,
     ON = 522,
     ONLY = 523,
     OPERATOR = 524,
     OPTION = 525,
     OPTIONS = 526,
     OR = 527,
     ORDER = 528,
     ORDINALITY = 529,
     OUT_P = 530,
     OUTER_P = 531,
     OVER = 532,
     OVERLAPS = 533,
     OVERLAY = 534,
     OVERRIDING = 535,
     OWNED = 536,
     OWNER = 537,
     PARALLEL = 538,
     PARSER = 539,
     PARTIAL = 540,
     PARTITION = 541,
     PASSING = 542,
     PASSWORD = 543,
     PLACING = 544,
     PLANS = 545,
     POLICY = 546,
     POSITION = 547,
     PRAGMA_P = 548,
     PRECEDING = 549,
     PRECISION = 550,
     PREPARE = 551,
     PREPARED = 552,
     PRESERVE = 553,
     PRIMARY = 554,
     PRIOR = 555,
     PRIVILEGES = 556,
     PROCEDURAL = 557,
     PROCEDURE = 558,
     PROGRAM = 559,
     PUBLICATION = 560,
     QUOTE = 561,
     RANGE = 562,
     READ_P = 563,
     REAL = 564,
     REASSIGN = 565,
     RECHECK = 566,
     RECURSIVE = 567,
     REF = 568,
     REFERENCES = 569,
     REFERENCING = 570,
     REFRESH = 571,
     REINDEX = 572,
     RELATIVE_P = 573,
     RELEASE = 574,
     RENAME = 575,
     REPEATABLE = 576,
     REPLACE = 577,
     REPLICA = 578,
     RESET = 579,
     RESTART = 580,
     RESTRICT = 581,
     RETURNING = 582,
     RETURNS = 583,
     REVOKE = 584,
     RIGHT = 585,
     ROLE = 586,
     ROLLBACK = 587,
     ROLLUP = 588,
     ROW = 589,
     ROWS = 590,
     RULE = 591,
     SAVEPOINT = 592,
     SCHEMA = 593,
     SCHEMAS = 594,
     SCROLL = 595,
     SEARCH = 596,
     SECOND_P = 597,
     SECURITY = 598,
     SELECT = 599,
     SEQUENCE = 600,
     SEQUENCES = 601,
     SERIALIZABLE = 602,
     SERVER = 603,
     SESSION = 604,
     SESSION_USER = 605,
     SET = 606,
     SETOF = 607,
     SETS = 608,
     SHARE = 609,
     SHOW = 610,
     SIMILAR = 611,
     SIMPLE = 612,
     SKIP = 613,
     SMALLINT = 614,
     SNAPSHOT = 615,
     SOME = 616,
     SQL_P = 617,
     STABLE = 618,
     STANDALONE_P = 619,
     START = 620,
     STATEMENT = 621,
     STATISTICS = 622,
     STDIN = 623,
     STDOUT = 624,
     STORAGE = 625,
     STRICT_P = 626,
     STRIP_P = 627,
     SUBSCRIPTION = 628,
     SUBSTRING = 629,
     SYMMETRIC = 630,
     SYSID = 631,
     SYSTEM_P = 632,
     TABLE = 633,
     TABLES = 634,
     TABLESAMPLE = 635,
     TABLESPACE = 636,
     TEMP = 637,
     TEMPLATE = 638,
     TEMPORARY = 639,
     TEXT_P = 640,
     THEN = 641,
     TIME = 642,
     TIMESTAMP = 643,
     TO = 644,
     TRAILING = 645,
     TRANSACTION = 646,
     TRANSFORM = 647,
     TREAT = 648,
     TRIGGER = 649,
     TRIM = 650,
     TRUE_P = 651,
     TRUNCATE = 652,
     TRUSTED = 653,
     TYPE_P = 654,
     TYPES_P = 655,
     UNBOUNDED = 656,
     UNCOMMITTED = 657,
     UNENCRYPTED = 658,
     UNION = 659,
     UNIQUE = 660,
     UNKNOWN = 661,
     UNLISTEN = 662,
     UNLOGGED = 663,
     UNTIL = 664,
     UPDATE = 665,
     USER = 666,
     USING = 667,
     VACUUM = 668,
     VALID = 669,
     VALIDATE = 670,
     VALIDATOR = 671,
     VALUE_P = 672,
     VALUES = 673,
     VARCHAR = 674,
     VARIADIC = 675,
     VARYING = 676,
     VERBOSE = 677,
     VERSION_P = 678,
     VIEW = 679,
     VIEWS = 680,
     VOLATILE = 681,
     WHEN = 682,
     WHERE = 683,
     WHITESPACE_P = 684,
     WINDOW = 685,
     WITH = 686,
     WITHIN = 687,
     WITHOUT = 688,
     WORK = 689,
     WRAPPER = 690,
     WRITE_P = 691,
     XML_P = 692,
     XMLATTRIBUTES = 693,
     XMLCONCAT = 694,
     XMLELEMENT = 695,
     XMLEXISTS = 696,
     XMLFOREST = 697,
     XMLNAMESPACES = 698,
     XMLPARSE = 699,
     XMLPI = 700,
     XMLROOT = 701,
     XMLSERIALIZE = 702,
     XMLTABLE = 703,
     YEAR_P = 704,
     YES_P = 705,
     ZONE = 706,
     NOT_LA = 707,
     NULLS_LA = 708,
     WITH_LA = 709,
     POSTFIXOP = 710,
     UMINUS = 711
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALL_P 310
#define CALLED 311
#define CASCADE 312
#define CASCADED 313
#define CASE 314
#define CAST 315
#define CATALOG_P 316
#define CHAIN 317
#define CHAR_P 318
#define CHARACTER 319
#define CHARACTERISTICS 320
#define CHECK_P 321
#define CHECKPOINT 322
#define CLASS 323
#define CLOSE 324
#define CLUSTER 325
#define COALESCE 326
#define COLLATE 327
#define COLLATION 328
#define COLUMN 329
#define COLUMNS 330
#define COMMENT 331
#define COMMENTS 332
#define COMMIT 333
#define COMMITTED 334
#define CONCURRENTLY 335
#define CONFIGURATION 336
#define CONFLICT 337
#define CONNECTION 338
#define CONSTRAINT 339
#define CONSTRAINTS 340
#define CONTENT_P 341
#define CONTINUE_P 342
#define CONVERSION_P 343
#define COPY 344
#define COST 345
#define CREATE_P 346
#define CROSS 347
#define CSV 348
#define CUBE 349
#define CURRENT_P 350
#define CURRENT_CATALOG 351
#define CURRENT_DATE 352
#define CURRENT_ROLE 353
#define CURRENT_SCHEMA 354
#define CURRENT_TIME 355
#define CURRENT_TIMESTAMP 356
#define CURRENT_USER 357
#define CURSOR 358
#define CYCLE 359
#define DATA_P 360
#define DATABASE 361
#define DAY_P 362
#define DEALLOCATE 363
#define DEC 364
#define DECIMAL_P 365
#define DECLARE 366
#define DEFAULT 367
#define DEFAULTS 368
#define DEFERRABLE 369
#define DEFERRED 370
#define DEFINER 371
#define DELETE_P 372
#define DELIMITER 373
#define DELIMITERS 374
#define DEPENDS 375
#define DESC_P 376
#define DESCRIBE 377
#define DETACH 378
#define DICTIONARY 379
#define DISABLE_P 380
#define DISCARD 381
#define DISTINCT 382
#define DO 383
#define DOCUMENT_P 384
#define DOMAIN_P 385
#define DOUBLE_P 386
#define DROP 387
#define EACH 388
#define ELSE 389
#define ENABLE_P 390
#define ENCODING 391
#define ENCRYPTED 392
#define END_P 393
#define ENUM_P 394
#define ESCAPE 395
#define EVENT 396
#define EXCEPT 397
#define EXCLUDE 398
#define EXCLUDING 399
#define EXCLUSIVE 400
#define EXECUTE 401
#define EXISTS 402
#define EXPLAIN 403
#define EXPORT_P 404
#define EXTENSION 405
#define EXTERNAL 406
#define EXTRACT 407
#define FALSE_P 408
#define FAMILY 409
#define FETCH 410
#define FILTER 411
#define FIRST_P 412
#define FLOAT_P 413
#define FOLLOWING 414
#define FOR 415
#define FORCE 416
#define FOREIGN 417
#define FORWARD 418
#define FREEZE 419
#define FROM 420
#define FULL 421
#define FUNCTION 422
#define FUNCTIONS 423
#define GENERATED 424
#define GLOBAL 425
#define GRANT 426
#define GRANTED 427
#define GROUP_P 428
#define GROUPING 429
#define HANDLER 430
#define HAVING 431
#define HEADER_P 432
#define HOLD 433
#define HOUR_P 434
#define IDENTITY_P 435
#define IF_P 436
#define ILIKE 437
#define IMMEDIATE 438
#define IMMUTABLE 439
#define IMPLICIT_P 440
#define IMPORT_P 441
#define IN_P 442
#define INCLUDING 443
#define INCREMENT 444
#define INDEX 445
#define INDEXES 446
#define INHERIT 447
#define INHERITS 448
#define INITIALLY 449
#define INLINE_P 450
#define INNER_P 451
#define INOUT 452
#define INPUT_P 453
#define INSENSITIVE 454
#define INSERT 455
#define INSTEAD 456
#define INT_P 457
#define INTEGER 458
#define INTERSECT 459
#define INTERVAL 460
#define INTO 461
#define INVOKER 462
#define IS 463
#define ISNULL 464
#define ISOLATION 465
#define JOIN 466
#define KEY 467
#define LABEL 468
#define LANGUAGE 469
#define LARGE_P 470
#define LAST_P 471
#define LATERAL_P 472
#define LEADING 473
#define LEAKPROOF 474
#define LEFT 475
#define LEVEL 476
#define LIKE 477
#define LIMIT 478
#define LISTEN 479
#define LOAD 480
#define LOCAL 481
#define LOCALTIME 482
#define LOCALTIMESTAMP 483
#define LOCATION 484
#define LOCK_P 485
#define LOCKED 486
#define LOGGED 487
#define MAPPING 488
#define MATCH 489
#define MATERIALIZED 490
#define MAXVALUE 491
#define METHOD 492
#define MINUTE_P 493
#define MINVALUE 494
#define MODE 495
#define MONTH_P 496
#define MOVE 497
#define NAME_P 498
#define NAMES 499
#define NATIONAL 500
#define NATURAL 501
#define NCHAR 502
#define NEW 503
#define NEXT 504
#define NO 505
#define NONE 506
#define NOT 507
#define NOTHING 508
#define NOTIFY 509
#define NOTNULL 510
#define NOWAIT 511
#define NULL_P 512
#define NULLIF 513
#define NULLS_P 514
#define NUMERIC 515
#define OBJECT_P 516
#define OF 517
#define OFF 518
#define OFFSET 519
#define OIDS 520
#define OLD 521
#define ON 522
#define ONLY 523
#define OPERATOR 524
#define OPTION 525
#define OPTIONS 526
#define OR 527
#define ORDER 528
#define ORDINALITY 529
#define OUT_P 530
#define OUTER_P 531
#define OVER 532
#define OVERLAPS 533
#define OVERLAY 534
#define OVERRIDING 535
#define OWNED 536
#define OWNER 537
#define PARALLEL 538
#define PARSER 539
#define PARTIAL 540
#define PARTITION 541
#define PASSING 542
#define PASSWORD 543
#define PLACING 544
#define PLANS 545
#define POLICY 546
#define POSITION 547
#define PRAGMA_P 548
#define PRECEDING 549
#define PRECISION 550
#define PREPARE 551
#define PREPARED 552
#define PRESERVE 553
#define PRIMARY 554
#define PRIOR 555
#define PRIVILEGES 556
#define PROCEDURAL 557
#define PROCEDURE 558
#define PROGRAM 559
#define PUBLICATION 560
#define QUOTE 561
#define RANGE 562
#define READ_P 563
#define REAL 564
#define REASSIGN 565
#define RECHECK 566
#define RECURSIVE 567
#define REF 568
#define REFERENCES 569
#define REFERENCING 570
#define REFRESH 571
#define REINDEX 572
#define RELATIVE_P 573
#define RELEASE 574
#define RENAME 575
#define REPEATABLE 576
#define REPLACE 577
#define REPLICA 578
#define RESET 579
#define RESTART 580
#define RESTRICT 581
#define RETURNING 582
#define RETURNS 583
#define REVOKE 584
#define RIGHT 585
#define ROLE 586
#define ROLLBACK 587
#define ROLLUP 588
#define ROW 589
#define ROWS 590
#define RULE 591
#define SAVEPOINT 592
#define SCHEMA 593
#define SCHEMAS 594
#define SCROLL 595
#define SEARCH 596
#define SECOND_P 597
#define SECURITY 598
#define SELECT 599
#define SEQUENCE 600
#define SEQUENCES 601
#define SERIALIZABLE 602
#define SERVER 603
#define SESSION 604
#define SESSION_USER 605
#define SET 606
#define SETOF 607
#define SETS 608
#define SHARE 609
#define SHOW 610
#define SIMILAR 611
#define SIMPLE 612
#define SKIP 613
#define SMALLINT 614
#define SNAPSHOT 615
#define SOME 616
#define SQL_P 617
#define STABLE 618
#define STANDALONE_P 619
#define START 620
#define STATEMENT 621
#define STATISTICS 622
#define STDIN 623
#define STDOUT 624
#define STORAGE 625
#define STRICT_P 626
#define STRIP_P 627
#define SUBSCRIPTION 628
#define SUBSTRING 629
#define SYMMETRIC 630
#define SYSID 631
#define SYSTEM_P 632
#define TABLE 633
#define TABLES 634
#define TABLESAMPLE 635
#define TABLESPACE 636
#define TEMP 637
#define TEMPLATE 638
#define TEMPORARY 639
#define TEXT_P 640
#define THEN 641
#define TIME 642
#define TIMESTAMP 643
#define TO 644
#define TRAILING 645
#define TRANSACTION 646
#define TRANSFORM 647
#define TREAT 648
#define TRIGGER 649
#define TRIM 650
#define TRUE_P 651
#define TRUNCATE 652
#define TRUSTED 653
#define TYPE_P 654
#define TYPES_P 655
#define UNBOUNDED 656
#define UNCOMMITTED 657
#define UNENCRYPTED 658
#define UNION 659
#define UNIQUE 660
#define UNKNOWN 661
#define UNLISTEN 662
#define UNLOGGED 663
#define UNTIL 664
#define UPDATE 665
#define USER 666
#define USING 667
#define VACUUM 668
#define VALID 669
#define VALIDATE 670
#define VALIDATOR 671
#define VALUE_P 672
#define VALUES 673
#define VARCHAR 674
#define VARIADIC 675
#define VARYING 676
#define VERBOSE 677
#define VERSION_P 678
#define VIEW 679
#define VIEWS 680
#define VOLATILE 681
#define WHEN 682
#define WHERE 683
#define WHITESPACE_P 684
#define WINDOW 685
#define WITH 686
#define WITHIN 687
#define WITHOUT 688
#define WORK 689
#define WRAPPER 690
#define WRITE_P 691
#define XML_P 692
#define XMLATTRIBUTES 693
#define XMLCONCAT 694
#define XMLELEMENT 695
#define XMLEXISTS 696
#define XMLFOREST 697
#define XMLNAMESPACES 698
#define XMLPARSE 699
#define XMLPI 700
#define XMLROOT 701
#define XMLSERIALIZE 702
#define XMLTABLE 703
#define YEAR_P 704
#define YES_P 705
#define ZONE 706
#define NOT_LA 707
#define NULLS_LA 708
#define WITH_LA 709
#define POSTFIXOP 710
#define UMINUS 711




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1220 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1245 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  549
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   44903

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  475
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  343
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1559
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2604

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   711

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   463,     2,     2,
     468,   469,   461,   459,   472,   460,   470,   462,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   474,   471,
     455,   457,   456,   473,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   466,     2,   467,   464,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     458,   465
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    76,    81,
      88,    93,   100,   105,   112,   117,   124,   126,   129,   133,
     136,   138,   142,   145,   149,   151,   155,   158,   164,   168,
     175,   180,   187,   194,   201,   207,   213,   220,   230,   235,
     241,   249,   256,   261,   270,   275,   278,   283,   287,   294,
     299,   302,   305,   308,   311,   313,   316,   317,   319,   322,
     325,   328,   330,   334,   339,   342,   343,   346,   350,   353,
     357,   364,   371,   380,   387,   396,   403,   412,   419,   428,
     437,   448,   457,   468,   470,   471,   479,   481,   486,   491,
     499,   502,   504,   508,   513,   517,   518,   520,   521,   524,
     528,   534,   543,   549,   550,   556,   562,   570,   573,   574,
     576,   578,   580,   584,   587,   588,   590,   591,   593,   597,
     599,   603,   605,   609,   612,   615,   620,   626,   632,   641,
     643,   644,   648,   658,   671,   675,   676,   681,   688,   690,
     693,   695,   697,   698,   700,   703,   706,   708,   711,   714,
     716,   719,   723,   726,   729,   732,   735,   739,   743,   747,
     749,   753,   755,   756,   758,   761,   764,   767,   770,   773,
     776,   779,   782,   784,   786,   787,   797,   810,   811,   814,
     816,   818,   820,   822,   824,   826,   830,   831,   833,   836,
     838,   840,   843,   846,   850,   852,   854,   857,   860,   862,
     865,   869,   875,   878,   884,   890,   893,   897,   899,   901,
     904,   907,   908,   913,   914,   918,   923,   928,   929,   933,
     936,   937,   941,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   965,   969,   971,   974,   977,   980,   983,
     986,   989,   990,   994,   998,  1002,  1003,  1005,  1008,  1010,
    1013,  1016,  1019,  1022,  1027,  1029,  1033,  1035,  1039,  1041,
    1043,  1045,  1047,  1051,  1053,  1056,  1057,  1059,  1060,  1062,
    1066,  1067,  1070,  1071,  1075,  1079,  1081,  1087,  1091,  1093,
    1097,  1099,  1104,  1110,  1116,  1123,  1127,  1135,  1140,  1152,
    1154,  1158,  1161,  1164,  1167,  1168,  1172,  1174,  1176,  1179,
    1182,  1185,  1188,  1190,  1191,  1193,  1196,  1203,  1208,  1215,
    1220,  1227,  1236,  1238,  1240,  1242,  1245,  1247,  1250,  1252,
    1254,  1256,  1260,  1264,  1268,  1272,  1275,  1278,  1280,  1284,
    1286,  1288,  1290,  1292,  1296,  1298,  1300,  1301,  1303,  1305,
    1307,  1316,  1328,  1338,  1340,  1342,  1346,  1347,  1349,  1353,
    1355,  1356,  1358,  1359,  1361,  1362,  1364,  1368,  1370,  1372,
    1374,  1378,  1379,  1382,  1385,  1386,  1389,  1390,  1392,  1393,
    1395,  1397,  1399,  1403,  1407,  1409,  1411,  1415,  1419,  1423,
    1427,  1432,  1436,  1439,  1441,  1443,  1445,  1447,  1449,  1453,
    1455,  1457,  1461,  1465,  1467,  1470,  1475,  1480,  1483,  1487,
    1493,  1499,  1501,  1503,  1513,  1523,  1525,  1528,  1533,  1538,
    1543,  1546,  1549,  1553,  1555,  1559,  1566,  1569,  1570,  1574,
    1578,  1583,  1588,  1593,  1598,  1602,  1605,  1607,  1609,  1610,
    1612,  1614,  1615,  1617,  1623,  1625,  1626,  1628,  1629,  1633,
    1635,  1639,  1644,  1648,  1650,  1652,  1653,  1656,  1659,  1660,
    1663,  1666,  1668,  1670,  1672,  1673,  1676,  1681,  1687,  1692,
    1695,  1699,  1701,  1703,  1705,  1707,  1710,  1713,  1715,  1717,
    1719,  1721,  1723,  1725,  1729,  1730,  1732,  1736,  1738,  1740,
    1743,  1746,  1747,  1749,  1753,  1755,  1756,  1758,  1761,  1765,
    1768,  1773,  1776,  1780,  1783,  1784,  1786,  1789,  1790,  1795,
    1801,  1804,  1805,  1807,  1811,  1814,  1818,  1821,  1825,  1828,
    1832,  1834,  1839,  1843,  1848,  1854,  1859,  1865,  1870,  1876,
    1879,  1884,  1886,  1888,  1889,  1891,  1896,  1902,  1907,  1908,
    1911,  1914,  1917,  1919,  1921,  1922,  1927,  1930,  1932,  1935,
    1938,  1943,  1950,  1955,  1956,  1959,  1966,  1969,  1971,  1975,
    1980,  1981,  1984,  1985,  1988,  1989,  1991,  1995,  1999,  2002,
    2003,  2006,  2010,  2016,  2023,  2026,  2030,  2034,  2039,  2040,
    2042,  2044,  2046,  2048,  2050,  2053,  2058,  2060,  2062,  2064,
    2066,  2069,  2073,  2077,  2078,  2080,  2082,  2084,  2086,  2088,
    2091,  2094,  2097,  2100,  2103,  2105,  2109,  2110,  2112,  2114,
    2116,  2118,  2124,  2127,  2129,  2131,  2133,  2135,  2140,  2142,
    2145,  2148,  2150,  2154,  2158,  2161,  2163,  2164,  2170,  2173,
    2179,  2182,  2184,  2188,  2192,  2193,  2195,  2197,  2199,  2201,
    2203,  2205,  2209,  2213,  2217,  2221,  2225,  2229,  2233,  2234,
    2236,  2241,  2243,  2247,  2251,  2257,  2260,  2263,  2267,  2271,
    2275,  2279,  2283,  2287,  2291,  2295,  2299,  2303,  2307,  2311,
    2315,  2318,  2321,  2325,  2329,  2332,  2335,  2339,  2345,  2350,
    2357,  2361,  2367,  2372,  2379,  2384,  2391,  2397,  2405,  2409,
    2412,  2417,  2421,  2424,  2428,  2432,  2437,  2441,  2446,  2450,
    2455,  2461,  2468,  2475,  2483,  2490,  2498,  2505,  2513,  2517,
    2522,  2527,  2534,  2536,  2538,  2542,  2545,  2548,  2552,  2556,
    2560,  2564,  2568,  2572,  2576,  2580,  2584,  2588,  2592,  2596,
    2600,  2603,  2606,  2612,  2619,  2626,  2634,  2636,  2638,  2641,
    2644,  2649,  2651,  2653,  2655,  2658,  2661,  2665,  2671,  2678,
    2687,  2694,  2701,  2706,  2711,  2713,  2715,  2717,  2723,  2725,
    2727,  2732,  2734,  2739,  2741,  2746,  2748,  2753,  2755,  2757,
    2759,  2761,  2763,  2765,  2772,  2777,  2782,  2787,  2792,  2799,
    2805,  2811,  2817,  2822,  2829,  2834,  2840,  2841,  2847,  2848,
    2851,  2852,  2854,  2858,  2862,  2865,  2868,  2869,  2876,  2878,
    2879,  2883,  2884,  2887,  2890,  2891,  2893,  2898,  2901,  2904,
    2907,  2910,  2913,  2918,  2922,  2928,  2930,  2932,  2934,  2936,
    2938,  2940,  2942,  2944,  2946,  2948,  2950,  2952,  2954,  2956,
    2958,  2960,  2962,  2964,  2969,  2971,  2976,  2978,  2983,  2985,
    2988,  2990,  2993,  2995,  2999,  3001,  3005,  3007,  3011,  3013,
    3017,  3021,  3023,  3027,  3031,  3032,  3034,  3036,  3038,  3040,
    3042,  3044,  3046,  3048,  3053,  3057,  3060,  3064,  3065,  3069,
    3073,  3076,  3079,  3081,  3082,  3085,  3088,  3092,  3095,  3097,
    3099,  3103,  3109,  3111,  3114,  3119,  3122,  3123,  3125,  3126,
    3128,  3131,  3134,  3137,  3141,  3147,  3149,  3150,  3152,  3155,
    3156,  3159,  3161,  3162,  3164,  3165,  3167,  3171,  3175,  3178,
    3180,  3182,  3184,  3188,  3190,  3193,  3195,  3199,  3201,  3203,
    3205,  3208,  3210,  3212,  3214,  3216,  3218,  3221,  3228,  3231,
    3235,  3241,  3248,  3250,  3252,  3254,  3256,  3258,  3260,  3262,
    3264,  3266,  3268,  3270,  3272,  3274,  3276,  3279,  3282,  3286,
    3290,  3291,  3293,  3295,  3297,  3299,  3301,  3303,  3305,  3307,
    3313,  3317,  3318,  3320,  3322,  3324,  3326,  3331,  3339,  3342,
    3343,  3345,  3347,  3349,  3351,  3365,  3382,  3384,  3387,  3388,
    3390,  3391,  3393,  3394,  3397,  3398,  3400,  3401,  3408,  3417,
    3424,  3433,  3440,  3449,  3451,  3456,  3460,  3463,  3468,  3472,
    3478,  3480,  3481,  3483,  3485,  3486,  3488,  3490,  3492,  3494,
    3496,  3498,  3500,  3502,  3504,  3506,  3508,  3510,  3514,  3516,
    3518,  3520,  3522,  3524,  3526,  3529,  3531,  3533,  3536,  3540,
    3544,  3546,  3550,  3554,  3557,  3561,  3565,  3569,  3573,  3575,
    3577,  3579,  3581,  3585,  3591,  3593,  3595,  3597,  3599,  3603,
    3606,  3608,  3613,  3619,  3625,  3630,  3637,  3639,  3641,  3643,
    3645,  3647,  3649,  3650,  3652,  3656,  3658,  3659,  3667,  3669,
    3672,  3676,  3679,  3680,  3683,  3684,  3687,  3692,  3695,  3697,
    3699,  3701,  3704,  3708,  3711,  3715,  3720,  3723,  3725,  3727,
    3729,  3733,  3736,  3746,  3758,  3771,  3786,  3790,  3795,  3800,
    3801,  3809,  3820,  3823,  3827,  3828,  3833,  3835,  3837,  3839,
    3841,  3843,  3845,  3847,  3849,  3851,  3853,  3855,  3857,  3859,
    3861,  3863,  3865,  3867,  3869,  3871,  3873,  3875,  3877,  3879,
    3881,  3883,  3885,  3887,  3889,  3891,  3893,  3895,  3897,  3899,
    3901,  3903,  3905,  3907,  3909,  3911,  3913,  3915,  3917,  3919,
    3921,  3923,  3925,  3927,  3929,  3931,  3933,  3935,  3937,  3939,
    3941,  3943,  3945,  3947,  3949,  3951,  3953,  3955,  3957,  3959,
    3961,  3963,  3965,  3967,  3969,  3971,  3973,  3975,  3977,  3979,
    3981,  3983,  3985,  3987,  3989,  3991,  3993,  3995,  3997,  3999,
    4001,  4003,  4005,  4007,  4009,  4011,  4013,  4015,  4017,  4019,
    4021,  4023,  4025,  4027,  4029,  4031,  4033,  4035,  4037,  4039,
    4041,  4043,  4045,  4047,  4049,  4051,  4053,  4055,  4057,  4059,
    4061,  4063,  4065,  4067,  4069,  4071,  4073,  4075,  4077,  4079,
    4081,  4083,  4085,  4087,  4089,  4091,  4093,  4095,  4097,  4099,
    4101,  4103,  4105,  4107,  4109,  4111,  4113,  4115,  4117,  4119,
    4121,  4123,  4125,  4127,  4129,  4131,  4133,  4135,  4137,  4139,
    4141,  4143,  4145,  4147,  4149,  4151,  4153,  4155,  4157,  4159,
    4161,  4163,  4165,  4167,  4169,  4171,  4173,  4175,  4177,  4179,
    4181,  4183,  4185,  4187,  4189,  4191,  4193,  4195,  4197,  4199,
    4201,  4203,  4205,  4207,  4209,  4211,  4213,  4215,  4217,  4219,
    4221,  4223,  4225,  4227,  4229,  4231,  4233,  4235,  4237,  4239,
    4241,  4243,  4245,  4247,  4249,  4251,  4253,  4255,  4257,  4259,
    4261,  4263,  4265,  4267,  4269,  4271,  4273,  4275,  4277,  4279,
    4281,  4283,  4285,  4287,  4289,  4291,  4293,  4295,  4297,  4299,
    4301,  4303,  4305,  4307,  4309,  4311,  4313,  4315,  4317,  4319,
    4321,  4323,  4325,  4327,  4329,  4331,  4333,  4335,  4337,  4339,
    4341,  4343,  4345,  4347,  4349,  4351,  4353,  4355,  4357,  4359,
    4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,  4377,  4379,
    4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,  4397,  4399,
    4401,  4403,  4405,  4407,  4409,  4411,  4413,  4415,  4417,  4419,
    4421,  4423,  4425,  4427,  4429,  4431,  4433,  4435,  4437,  4439,
    4441,  4443,  4445,  4447,  4449,  4451,  4453,  4455,  4457,  4459,
    4461,  4463,  4465,  4467,  4469,  4471,  4473,  4475,  4477,  4479,
    4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,  4497,  4499,
    4501,  4503,  4505,  4507,  4509,  4511,  4513,  4515,  4517,  4519,
    4521,  4523,  4525,  4527,  4529,  4531,  4533,  4535,  4537,  4539,
    4541,  4543,  4545,  4547,  4549,  4551,  4553,  4555,  4557,  4559,
    4561,  4563,  4565,  4567,  4569,  4571,  4573,  4575,  4577,  4579,
    4581,  4583,  4585,  4587,  4589,  4591,  4593,  4595,  4597,  4599,
    4601,  4603,  4605,  4607,  4609,  4611,  4613,  4615,  4617,  4619,
    4621,  4623,  4625,  4627,  4629,  4631,  4633,  4635,  4637,  4639,
    4641,  4643,  4645,  4647,  4649,  4651,  4653,  4655,  4657,  4659,
    4661,  4663,  4665,  4667,  4669,  4671,  4673,  4675,  4677,  4679,
    4681,  4683,  4685,  4687,  4689,  4691,  4693,  4695,  4697,  4699
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     476,     0,    -1,   477,    -1,   477,   471,   478,    -1,   478,
      -1,   769,    -1,   516,    -1,   479,    -1,   801,    -1,   808,
      -1,   770,    -1,   578,    -1,   811,    -1,   759,    -1,   512,
      -1,   525,    -1,   490,    -1,   797,    -1,   571,    -1,   514,
      -1,   773,    -1,   771,    -1,   772,    -1,   762,    -1,   493,
      -1,   790,    -1,   511,    -1,   756,    -1,   491,    -1,   595,
      -1,   523,    -1,   577,    -1,   792,    -1,   802,    -1,   784,
      -1,   805,    -1,   809,    -1,    -1,    28,   378,   648,   487,
      -1,    28,   378,   181,   147,   648,   487,    -1,    28,   190,
     739,   487,    -1,    28,   190,   181,   147,   739,   487,    -1,
      28,   345,   739,   487,    -1,    28,   345,   181,   147,   739,
     487,    -1,    28,   424,   739,   487,    -1,    28,   424,   181,
     147,   739,   487,    -1,   482,    -1,   480,   482,    -1,   351,
     112,   683,    -1,   132,   112,    -1,   325,    -1,   325,   518,
     519,    -1,   351,   520,    -1,   351,   169,   570,    -1,   486,
      -1,   483,   472,   486,    -1,    22,   550,    -1,    22,   181,
     252,   147,   550,    -1,    22,    74,   550,    -1,    22,    74,
     181,   252,   147,   550,    -1,    28,   492,   747,   481,    -1,
      28,   492,   747,   132,   252,   257,    -1,    28,   492,   747,
     351,   252,   257,    -1,    28,   492,   747,   351,   367,   522,
      -1,    28,   492,   747,   351,   538,    -1,    28,   492,   747,
     324,   538,    -1,    28,   492,   747,   351,   370,   747,    -1,
      28,   492,   747,    22,   169,   570,    35,   180,   528,    -1,
      28,   492,   747,   480,    -1,    28,   492,   747,   132,   180,
      -1,    28,   492,   747,   132,   180,   181,   147,    -1,   132,
     492,   181,   147,   747,   575,    -1,   132,   492,   747,   575,
      -1,    28,   492,   747,   489,   399,   660,   659,   485,    -1,
      28,   492,   747,   488,    -1,    22,   540,    -1,    28,    84,
     741,   526,    -1,   415,    84,   741,    -1,   132,    84,   181,
     147,   741,   575,    -1,   132,    84,   741,   575,    -1,   351,
     232,    -1,   351,   408,    -1,   351,   538,    -1,   324,   538,
      -1,   488,    -1,   412,   683,    -1,    -1,   533,    -1,   351,
     533,    -1,    22,   533,    -1,   132,   548,    -1,   484,    -1,
     487,   472,   484,    -1,   271,   468,   483,   469,    -1,   351,
     105,    -1,    -1,   108,   741,    -1,   108,   296,   741,    -1,
     108,    26,    -1,   108,   296,    26,    -1,    28,   338,   741,
     320,   389,   741,    -1,    28,   378,   648,   320,   389,   741,
      -1,    28,   378,   181,   147,   648,   320,   389,   741,    -1,
      28,   345,   739,   320,   389,   741,    -1,    28,   345,   181,
     147,   739,   320,   389,   741,    -1,    28,   424,   739,   320,
     389,   741,    -1,    28,   424,   181,   147,   739,   320,   389,
     741,    -1,    28,   190,   739,   320,   389,   741,    -1,    28,
     190,   181,   147,   739,   320,   389,   741,    -1,    28,   378,
     648,   320,   492,   741,   389,   741,    -1,    28,   378,   181,
     147,   648,   320,   492,   741,   389,   741,    -1,    28,   378,
     648,   320,    84,   741,   389,   741,    -1,    28,   378,   181,
     147,   648,   320,    84,   741,   389,   741,    -1,    74,    -1,
      -1,   497,   200,   206,   495,   494,   500,   502,    -1,   595,
      -1,   280,   503,   417,   595,    -1,   468,   507,   469,   595,
      -1,   468,   507,   469,   280,   503,   417,   595,    -1,   112,
     418,    -1,   739,    -1,   739,    35,   747,    -1,   468,   509,
     469,   656,    -1,   267,    84,   741,    -1,    -1,   600,    -1,
      -1,   747,   733,    -1,   510,   457,   683,    -1,   468,   504,
     469,   457,   683,    -1,   267,    82,   496,   128,   410,   351,
     508,   656,    -1,   267,    82,   496,   128,   253,    -1,    -1,
     747,   505,   506,   613,   614,    -1,   688,   505,   506,   613,
     614,    -1,   468,   683,   469,   505,   506,   613,   614,    -1,
     327,   736,    -1,    -1,   411,    -1,   377,    -1,   510,    -1,
     504,   472,   510,    -1,    72,   750,    -1,    -1,   750,    -1,
      -1,   498,    -1,   507,   472,   498,    -1,   499,    -1,   508,
     472,   499,    -1,   501,    -1,   509,   472,   501,    -1,   747,
     733,    -1,   293,   747,    -1,   293,   747,   457,   789,    -1,
     293,   747,   468,   711,   469,    -1,    91,   569,   345,   739,
     513,    -1,    91,   569,   345,   181,   252,   147,   739,   513,
      -1,   517,    -1,    -1,   146,   741,   515,    -1,    91,   569,
     378,   813,    35,   146,   741,   515,   812,    -1,    91,   569,
     378,   181,   252,   147,   813,    35,   146,   741,   515,   812,
      -1,   468,   710,   469,    -1,    -1,    28,   345,   739,   517,
      -1,    28,   345,   181,   147,   739,   517,    -1,   520,    -1,
     517,   520,    -1,   431,    -1,   454,    -1,    -1,     4,    -1,
     459,     4,    -1,   460,     4,    -1,   522,    -1,    35,   662,
      -1,    54,   519,    -1,   104,    -1,   250,   104,    -1,   189,
     521,   519,    -1,   236,   519,    -1,   239,   519,    -1,   250,
     236,    -1,   250,   239,    -1,   281,    53,   750,    -1,   345,
     243,   750,    -1,   365,   518,   519,    -1,   325,    -1,   325,
     518,   519,    -1,    53,    -1,    -1,   745,    -1,   459,   745,
      -1,   460,   745,    -1,    18,   524,    -1,    46,   524,    -1,
     365,   524,    -1,    78,   524,    -1,   138,   524,    -1,   332,
     524,    -1,   434,    -1,   391,    -1,    -1,    91,   569,   378,
     739,   468,   557,   469,   545,   537,    -1,    91,   569,   378,
     181,   252,   147,   739,   468,   557,   469,   545,   537,    -1,
      -1,   526,   549,    -1,   564,    -1,   817,    -1,   707,    -1,
     519,    -1,   746,    -1,   251,    -1,   468,   517,   469,    -1,
      -1,   746,    -1,   250,    21,    -1,   326,    -1,    57,    -1,
     351,   257,    -1,   351,   112,    -1,    84,   741,   532,    -1,
     532,    -1,   544,    -1,    72,   750,    -1,   252,   257,    -1,
     257,    -1,   405,   556,    -1,   299,   212,   556,    -1,    66,
     468,   683,   469,   539,    -1,   112,   684,    -1,   169,   570,
      35,   180,   528,    -1,   314,   739,   559,   567,   535,    -1,
     548,   529,    -1,   267,   410,   530,    -1,   534,    -1,   561,
      -1,   534,   561,    -1,   561,   534,    -1,    -1,   271,   468,
     551,   469,    -1,    -1,   267,    78,   132,    -1,   267,    78,
     117,   335,    -1,   267,    78,   298,   335,    -1,    -1,   468,
     542,   469,    -1,   250,   192,    -1,    -1,    84,   741,   565,
      -1,   565,    -1,    77,    -1,    85,    -1,   113,    -1,   180,
      -1,   191,    -1,   367,    -1,   370,    -1,    26,    -1,   562,
      -1,   542,   472,   562,    -1,   412,   190,   553,    -1,   114,
      -1,   252,   114,    -1,   194,   115,    -1,   194,   183,    -1,
     431,   538,    -1,   431,   265,    -1,   433,   265,    -1,    -1,
     468,   552,   469,    -1,   547,   188,   541,    -1,   547,   144,
     541,    -1,    -1,   754,    -1,   252,   114,    -1,   114,    -1,
     194,   183,    -1,   194,   115,    -1,   252,   414,    -1,   250,
     192,    -1,   747,   660,   536,   560,    -1,   533,    -1,   551,
     472,   533,    -1,   555,    -1,   552,   472,   555,    -1,   747,
      -1,   550,    -1,   568,    -1,   540,    -1,   754,   457,   527,
      -1,   754,    -1,   431,   546,    -1,    -1,   566,    -1,    -1,
     747,    -1,   468,   563,   469,    -1,    -1,   560,   531,    -1,
      -1,   267,   117,   530,    -1,   754,   457,   527,    -1,   754,
      -1,   754,   470,   754,   457,   527,    -1,   754,   470,   754,
      -1,   558,    -1,   563,   472,   558,    -1,   660,    -1,   749,
     751,   463,   399,    -1,   352,   749,   751,   463,   399,    -1,
      66,   468,   683,   469,   526,    -1,   405,   468,   563,   469,
     556,   526,    -1,   405,   543,   526,    -1,   299,   212,   468,
     563,   469,   556,   526,    -1,   299,   212,   543,   526,    -1,
     162,   212,   468,   563,   469,   314,   739,   559,   567,   535,
     526,    -1,   554,    -1,   566,   472,   554,    -1,   234,   166,
      -1,   234,   285,    -1,   234,   357,    -1,    -1,   222,   739,
     547,    -1,   384,    -1,   382,    -1,   226,   384,    -1,   226,
     382,    -1,   170,   384,    -1,   170,   382,    -1,   408,    -1,
      -1,    29,    -1,    53,   112,    -1,   132,   572,   181,   147,
     574,   575,    -1,   132,   572,   574,   575,    -1,   132,   573,
     181,   147,   740,   575,    -1,   132,   573,   740,   575,    -1,
     132,   576,   741,   267,   750,   575,    -1,   132,   576,   181,
     147,   741,   267,   750,   575,    -1,   378,    -1,   345,    -1,
     424,    -1,   235,   424,    -1,   190,    -1,   162,   378,    -1,
      73,    -1,    88,    -1,   367,    -1,   385,   341,   284,    -1,
     385,   341,   124,    -1,   385,   341,   383,    -1,   385,   341,
      81,    -1,    20,   237,    -1,   141,   394,    -1,   150,    -1,
     162,   105,   435,    -1,   305,    -1,   338,    -1,   348,    -1,
     750,    -1,   574,   472,   750,    -1,    57,    -1,   326,    -1,
      -1,   291,    -1,   336,    -1,   394,    -1,   497,   410,   798,
     351,   508,   638,   799,   502,    -1,    89,   590,   739,   559,
     588,   579,   584,   593,   580,   518,   585,    -1,    89,   468,
     758,   469,   389,   584,   593,   518,   585,    -1,   165,    -1,
     389,    -1,   582,   119,   746,    -1,    -1,   592,    -1,   581,
     472,   592,    -1,   412,    -1,    -1,    35,    -1,    -1,   304,
      -1,    -1,   589,    -1,   468,   594,   469,    -1,   781,    -1,
     519,    -1,   461,    -1,   468,   581,   469,    -1,    -1,   754,
     586,    -1,   431,   265,    -1,    -1,   589,   591,    -1,    -1,
      49,    -1,    -1,    49,    -1,   265,    -1,   164,    -1,   118,
     583,   746,    -1,   257,   583,   746,    -1,    93,    -1,   177,
      -1,   306,   583,   746,    -1,   140,   583,   746,    -1,   161,
     306,   563,    -1,   161,   306,   461,    -1,   161,   252,   257,
     563,    -1,   161,   257,   563,    -1,   136,   746,    -1,   781,
      -1,   746,    -1,   368,    -1,   369,    -1,   587,    -1,   594,
     472,   587,    -1,   597,    -1,   596,    -1,   468,   597,   469,
      -1,   468,   596,   469,    -1,   599,    -1,   598,   610,    -1,
     598,   609,   630,   616,    -1,   598,   609,   615,   631,    -1,
     600,   598,    -1,   600,   598,   610,    -1,   600,   598,   609,
     630,   616,    -1,   600,   598,   609,   615,   631,    -1,   599,
      -1,   596,    -1,   344,   608,   735,   603,   638,   656,   625,
     629,   692,    -1,   344,   607,   736,   603,   638,   656,   625,
     629,   692,    -1,   637,    -1,   378,   648,    -1,   598,   404,
     606,   598,    -1,   598,   204,   606,   598,    -1,   598,   142,
     606,   598,    -1,   431,   601,    -1,   454,   601,    -1,   431,
     312,   601,    -1,   602,    -1,   601,   472,   602,    -1,   741,
     752,    35,   468,   758,   469,    -1,   206,   604,    -1,    -1,
     384,   605,   739,    -1,   382,   605,   739,    -1,   226,   384,
     605,   739,    -1,   226,   382,   605,   739,    -1,   170,   384,
     605,   739,    -1,   170,   382,   605,   739,    -1,   408,   605,
     739,    -1,   378,   739,    -1,   739,    -1,   378,    -1,    -1,
      26,    -1,   127,    -1,    -1,   127,    -1,   127,   267,   468,
     710,   469,    -1,    26,    -1,    -1,   610,    -1,    -1,   273,
      53,   611,    -1,   612,    -1,   611,   472,   612,    -1,   683,
     412,   707,   614,    -1,   683,   613,   614,    -1,    36,    -1,
     121,    -1,    -1,   453,   157,    -1,   453,   216,    -1,    -1,
     617,   618,    -1,   618,   617,    -1,   617,    -1,   618,    -1,
     615,    -1,    -1,   223,   619,    -1,   223,   619,   472,   620,
      -1,   155,   624,   621,   623,   268,    -1,   155,   624,   623,
     268,    -1,   264,   620,    -1,   264,   621,   623,    -1,   683,
      -1,    26,    -1,   683,    -1,   685,    -1,   459,   622,    -1,
     460,   622,    -1,   745,    -1,     4,    -1,   334,    -1,   335,
      -1,   157,    -1,   249,    -1,   173,    53,   626,    -1,    -1,
     627,    -1,   626,   472,   627,    -1,   683,    -1,   628,    -1,
     468,   469,    -1,   176,   683,    -1,    -1,   632,    -1,   160,
     308,   268,    -1,   630,    -1,    -1,   633,    -1,   632,   633,
      -1,   634,   635,   636,    -1,   160,   410,    -1,   160,   250,
     212,   410,    -1,   160,   354,    -1,   160,   212,   354,    -1,
     262,   738,    -1,    -1,   256,    -1,   358,   231,    -1,    -1,
     418,   468,   710,   469,    -1,   637,   472,   468,   710,   469,
      -1,   165,   639,    -1,    -1,   640,    -1,   639,   472,   640,
      -1,   648,   643,    -1,   648,   643,   649,    -1,   651,   644,
      -1,   217,   651,   644,    -1,   596,   643,    -1,   217,   596,
     643,    -1,   641,    -1,   468,   641,   469,   642,    -1,   468,
     641,   469,    -1,   640,    92,   211,   640,    -1,   640,   645,
     211,   640,   647,    -1,   640,   211,   640,   647,    -1,   640,
     246,   645,   211,   640,    -1,   640,   246,   211,   640,    -1,
      35,   747,   468,   740,   469,    -1,    35,   748,    -1,   747,
     468,   740,   469,    -1,   747,    -1,   642,    -1,    -1,   642,
      -1,    35,   468,   657,   469,    -1,    35,   747,   468,   657,
     469,    -1,   747,   468,   657,   469,    -1,    -1,   166,   646,
      -1,   220,   646,    -1,   330,   646,    -1,   196,    -1,   276,
      -1,    -1,   412,   468,   740,   469,    -1,   267,   683,    -1,
     739,    -1,   739,   461,    -1,   268,   739,    -1,   268,   468,
     739,   469,    -1,   380,   743,   468,   710,   469,   650,    -1,
     321,   468,   683,   469,    -1,    -1,   688,   655,    -1,   335,
     165,   468,   653,   469,   655,    -1,   688,   654,    -1,   652,
      -1,   653,   472,   652,    -1,    35,   468,   657,   469,    -1,
      -1,   454,   274,    -1,    -1,   428,   683,    -1,    -1,   658,
      -1,   657,   472,   658,    -1,   747,   660,   659,    -1,    72,
     750,    -1,    -1,   662,   661,    -1,   352,   662,   661,    -1,
     662,    34,   466,   745,   467,    -1,   352,   662,    34,   466,
     745,   467,    -1,   662,    34,    -1,   352,   662,    34,    -1,
     661,   466,   467,    -1,   661,   466,   745,   467,    -1,    -1,
     664,    -1,   666,    -1,   668,    -1,   672,    -1,   678,    -1,
     679,   681,    -1,   679,   468,   745,   469,    -1,   666,    -1,
     669,    -1,   673,    -1,   678,    -1,   749,   665,    -1,   749,
     751,   665,    -1,   468,   710,   469,    -1,    -1,   202,    -1,
     203,    -1,   359,    -1,    48,    -1,   309,    -1,   158,   667,
      -1,   131,   295,    -1,   110,   665,    -1,   109,   665,    -1,
     260,   665,    -1,    51,    -1,   468,   745,   469,    -1,    -1,
     670,    -1,   671,    -1,   670,    -1,   671,    -1,    50,   677,
     468,   710,   469,    -1,    50,   677,    -1,   674,    -1,   675,
      -1,   674,    -1,   675,    -1,   676,   468,   745,   469,    -1,
     676,    -1,    64,   677,    -1,    63,   677,    -1,   419,    -1,
     245,    64,   677,    -1,   245,    63,   677,    -1,   247,   677,
      -1,   421,    -1,    -1,   388,   468,   745,   469,   680,    -1,
     388,   680,    -1,   387,   468,   745,   469,   680,    -1,   387,
     680,    -1,   205,    -1,   454,   387,   451,    -1,   433,   387,
     451,    -1,    -1,   449,    -1,   241,    -1,   107,    -1,   179,
      -1,   238,    -1,   682,    -1,   449,   389,   241,    -1,   107,
     389,   179,    -1,   107,   389,   238,    -1,   107,   389,   682,
      -1,   179,   389,   238,    -1,   179,   389,   682,    -1,   238,
     389,   682,    -1,    -1,   342,    -1,   342,   468,   745,   469,
      -1,   685,    -1,   683,    11,   660,    -1,   683,    72,   750,
      -1,   683,    40,   387,   451,   683,    -1,   459,   683,    -1,
     460,   683,    -1,   683,   459,   683,    -1,   683,   460,   683,
      -1,   683,   461,   683,    -1,   683,   462,   683,    -1,   683,
     463,   683,    -1,   683,   464,   683,    -1,   683,   455,   683,
      -1,   683,   456,   683,    -1,   683,   457,   683,    -1,   683,
      15,   683,    -1,   683,    16,   683,    -1,   683,    17,   683,
      -1,   683,   706,   683,    -1,   706,   683,    -1,   683,   706,
      -1,   683,    32,   683,    -1,   683,   272,   683,    -1,   252,
     683,    -1,   452,   683,    -1,   683,   222,   683,    -1,   683,
     222,   683,   140,   683,    -1,   683,   452,   222,   683,    -1,
     683,   452,   222,   683,   140,   683,    -1,   683,   182,   683,
      -1,   683,   182,   683,   140,   683,    -1,   683,   452,   182,
     683,    -1,   683,   452,   182,   683,   140,   683,    -1,   683,
     356,   389,   683,    -1,   683,   356,   389,   683,   140,   683,
      -1,   683,   452,   356,   389,   683,    -1,   683,   452,   356,
     389,   683,   140,   683,    -1,   683,   208,   257,    -1,   683,
     209,    -1,   683,   208,   252,   257,    -1,   683,   252,   257,
      -1,   683,   255,    -1,   702,   278,   702,    -1,   683,   208,
     396,    -1,   683,   208,   252,   396,    -1,   683,   208,   153,
      -1,   683,   208,   252,   153,    -1,   683,   208,   406,    -1,
     683,   208,   252,   406,    -1,   683,   208,   127,   165,   683,
      -1,   683,   208,   252,   127,   165,   683,    -1,   683,   208,
     262,   468,   713,   469,    -1,   683,   208,   252,   262,   468,
     713,   469,    -1,   683,    47,   734,   684,    32,   683,    -1,
     683,   452,    47,   734,   684,    32,   683,    -1,   683,    47,
     375,   684,    32,   683,    -1,   683,   452,    47,   375,   684,
      32,   683,    -1,   683,   187,   723,    -1,   683,   452,   187,
     723,    -1,   683,   708,   703,   596,    -1,   683,   708,   703,
     468,   683,   469,    -1,   112,    -1,   685,    -1,   684,    11,
     660,    -1,   459,   684,    -1,   460,   684,    -1,   684,   459,
     684,    -1,   684,   460,   684,    -1,   684,   461,   684,    -1,
     684,   462,   684,    -1,   684,   463,   684,    -1,   684,   464,
     684,    -1,   684,   455,   684,    -1,   684,   456,   684,    -1,
     684,   457,   684,    -1,   684,    15,   684,    -1,   684,    16,
     684,    -1,   684,    17,   684,    -1,   684,   706,   684,    -1,
     706,   684,    -1,   684,   706,    -1,   684,   208,   127,   165,
     684,    -1,   684,   208,   252,   127,   165,   684,    -1,   684,
     208,   262,   468,   713,   469,    -1,   684,   208,   252,   262,
     468,   713,   469,    -1,   729,    -1,   744,    -1,   473,   733,
      -1,    10,   733,    -1,   468,   683,   469,   733,    -1,   724,
      -1,   687,    -1,   596,    -1,   596,   732,    -1,   147,   596,
      -1,   743,   468,   469,    -1,   743,   468,   711,   609,   469,
      -1,   743,   468,   420,   712,   609,   469,    -1,   743,   468,
     711,   472,   420,   712,   609,   469,    -1,   743,   468,    26,
     711,   609,   469,    -1,   743,   468,   127,   711,   609,   469,
      -1,   743,   468,   461,   469,    -1,   686,   690,   691,   695,
      -1,   689,    -1,   686,    -1,   689,    -1,    73,   160,   468,
     683,   469,    -1,    97,    -1,   100,    -1,   100,   468,   745,
     469,    -1,   101,    -1,   101,   468,   745,   469,    -1,   227,
      -1,   227,   468,   745,   469,    -1,   228,    -1,   228,   468,
     745,   469,    -1,    98,    -1,   102,    -1,   350,    -1,   411,
      -1,    96,    -1,    99,    -1,    60,   468,   683,    35,   660,
     469,    -1,   152,   468,   714,   469,    -1,   279,   468,   716,
     469,    -1,   292,   468,   718,   469,    -1,   374,   468,   719,
     469,    -1,   393,   468,   683,    35,   660,   469,    -1,   395,
     468,    52,   722,   469,    -1,   395,   468,   218,   722,   469,
      -1,   395,   468,   390,   722,   469,    -1,   395,   468,   722,
     469,    -1,   258,   468,   683,   472,   683,   469,    -1,    71,
     468,   710,   469,    -1,   432,   173,   468,   610,   469,    -1,
      -1,   156,   468,   428,   683,   469,    -1,    -1,   430,   693,
      -1,    -1,   694,    -1,   693,   472,   694,    -1,   747,    35,
     696,    -1,   277,   696,    -1,   277,   747,    -1,    -1,   468,
     697,   698,   609,   699,   469,    -1,   747,    -1,    -1,   286,
      53,   710,    -1,    -1,   307,   700,    -1,   335,   700,    -1,
      -1,   701,    -1,    47,   701,    32,   701,    -1,   401,   294,
      -1,   401,   159,    -1,    95,   334,    -1,   683,   294,    -1,
     683,   159,    -1,   334,   468,   710,   469,    -1,   334,   468,
     469,    -1,   468,   710,   472,   683,   469,    -1,    33,    -1,
     361,    -1,    26,    -1,     8,    -1,   705,    -1,   459,    -1,
     460,    -1,   461,    -1,   462,    -1,   463,    -1,   464,    -1,
     455,    -1,   456,    -1,   457,    -1,    15,    -1,    16,    -1,
      17,    -1,     8,    -1,   269,   468,   709,   469,    -1,   704,
      -1,   269,   468,   709,   469,    -1,   704,    -1,   269,   468,
     709,   469,    -1,   222,    -1,   452,   222,    -1,   182,    -1,
     452,   182,    -1,   704,    -1,   747,   470,   709,    -1,   683,
      -1,   710,   472,   683,    -1,   712,    -1,   711,   472,   712,
      -1,   683,    -1,   753,    13,   683,    -1,   753,    14,   683,
      -1,   660,    -1,   713,   472,   660,    -1,   715,   165,   683,
      -1,    -1,     3,    -1,   449,    -1,   241,    -1,   107,    -1,
     179,    -1,   238,    -1,   342,    -1,   746,    -1,   683,   717,
     720,   721,    -1,   683,   717,   720,    -1,   289,   683,    -1,
     684,   187,   684,    -1,    -1,   683,   720,   721,    -1,   683,
     721,   720,    -1,   683,   720,    -1,   683,   721,    -1,   710,
      -1,    -1,   165,   683,    -1,   160,   683,    -1,   683,   165,
     710,    -1,   165,   710,    -1,   710,    -1,   596,    -1,   468,
     710,   469,    -1,    59,   728,   725,   727,   138,    -1,   726,
      -1,   725,   726,    -1,   427,   683,   386,   683,    -1,   134,
     683,    -1,    -1,   683,    -1,    -1,   747,    -1,   747,   732,
      -1,   470,   742,    -1,   470,   461,    -1,   466,   683,   467,
      -1,   466,   731,   474,   731,   467,    -1,   683,    -1,    -1,
     730,    -1,   732,   730,    -1,    -1,   733,   730,    -1,    39,
      -1,    -1,   736,    -1,    -1,   737,    -1,   736,   472,   737,
      -1,   683,    35,   755,    -1,   683,     3,    -1,   683,    -1,
     461,    -1,   739,    -1,   738,   472,   739,    -1,   747,    -1,
     747,   732,    -1,   741,    -1,   740,   472,   741,    -1,   747,
      -1,   754,    -1,   749,    -1,   747,   732,    -1,   745,    -1,
       4,    -1,   746,    -1,     6,    -1,     7,    -1,   743,   746,
      -1,   743,   468,   711,   609,   469,   746,    -1,   663,   746,
      -1,   679,   746,   681,    -1,   679,   468,   745,   469,   746,
      -1,   679,   468,   473,   469,   473,   681,    -1,   396,    -1,
     153,    -1,   257,    -1,     9,    -1,     5,    -1,     3,    -1,
     814,    -1,   815,    -1,   747,    -1,     5,    -1,     3,    -1,
     814,    -1,   816,    -1,   747,    -1,   747,   751,    -1,   470,
     742,    -1,   751,   470,   742,    -1,   468,   740,   469,    -1,
      -1,   749,    -1,     3,    -1,   814,    -1,   815,    -1,   816,
      -1,   817,    -1,   754,    -1,     5,    -1,   296,   741,   757,
      35,   758,    -1,   468,   713,   469,    -1,    -1,   595,    -1,
     493,    -1,   577,    -1,   797,    -1,    91,   338,   747,   760,
      -1,    91,   338,   181,   252,   147,   747,   760,    -1,   760,
     761,    -1,    -1,   525,    -1,   762,    -1,   512,    -1,   809,
      -1,    91,   768,   190,   765,   766,   267,   739,   764,   468,
     509,   469,   767,   656,    -1,    91,   768,   190,   765,   181,
     252,   147,   553,   267,   739,   764,   468,   509,   469,   767,
     656,    -1,   747,    -1,   412,   763,    -1,    -1,    80,    -1,
      -1,   553,    -1,    -1,   431,   538,    -1,    -1,   405,    -1,
      -1,    28,   378,   648,   351,   338,   741,    -1,    28,   378,
     181,   147,   648,   351,   338,   741,    -1,    28,   345,   739,
     351,   338,   741,    -1,    28,   345,   181,   147,   739,   351,
     338,   741,    -1,    28,   424,   739,   351,   338,   741,    -1,
      28,   424,   181,   147,   739,   351,   338,   741,    -1,    67,
      -1,   149,   106,   746,   585,    -1,   186,   106,   746,    -1,
     148,   776,    -1,   148,   780,   774,   776,    -1,   148,   422,
     776,    -1,   148,   468,   779,   469,   776,    -1,   422,    -1,
      -1,   781,    -1,   519,    -1,    -1,   595,    -1,   493,    -1,
     577,    -1,   797,    -1,   811,    -1,     3,    -1,   814,    -1,
     815,    -1,   816,    -1,   777,    -1,   746,    -1,   782,    -1,
     779,   472,   782,    -1,    31,    -1,    30,    -1,   396,    -1,
     153,    -1,   267,    -1,   778,    -1,   783,   775,    -1,   777,
      -1,   780,    -1,   351,   785,    -1,   351,   226,   785,    -1,
     351,   349,   785,    -1,   786,    -1,   807,   165,    95,    -1,
     387,   451,   788,    -1,   338,   746,    -1,   807,   389,   789,
      -1,   807,   457,   789,    -1,   807,   389,   112,    -1,   807,
     457,   112,    -1,   781,    -1,   519,    -1,   746,    -1,     3,
      -1,   679,   746,   681,    -1,   679,   468,   745,   469,   746,
      -1,   519,    -1,   112,    -1,   226,    -1,   787,    -1,   789,
     472,   787,    -1,   225,   791,    -1,   746,    -1,   413,   794,
     796,   774,    -1,   413,   794,   796,   774,   739,    -1,   413,
     794,   796,   774,   801,    -1,   413,   468,   795,   469,    -1,
     413,   468,   795,   469,   739,   752,    -1,   780,    -1,   422,
      -1,   164,    -1,   166,    -1,     3,    -1,   166,    -1,    -1,
     793,    -1,   795,   472,   793,    -1,   164,    -1,    -1,   497,
     117,   165,   798,   800,   799,   502,    -1,   648,    -1,   648,
     747,    -1,   648,    35,   747,    -1,   428,   683,    -1,    -1,
     412,   639,    -1,    -1,   780,   774,    -1,   780,   774,   739,
     752,    -1,   324,   804,    -1,   807,    -1,    26,    -1,   803,
      -1,   387,   451,    -1,   391,   210,   221,    -1,   806,   807,
      -1,   806,   387,   451,    -1,   806,   391,   210,   221,    -1,
     806,    26,    -1,   355,    -1,   122,    -1,   747,    -1,   807,
     470,   747,    -1,    55,   686,    -1,    91,   569,   424,   739,
     559,   767,    35,   595,   810,    -1,    91,   272,   322,   569,
     424,   739,   559,   767,    35,   595,   810,    -1,    91,   569,
     312,   424,   739,   468,   563,   469,   767,    35,   595,   810,
      -1,    91,   272,   322,   569,   312,   424,   739,   468,   563,
     469,   767,    35,   595,   810,    -1,   431,    66,   270,    -1,
     431,    58,    66,   270,    -1,   431,   226,    66,   270,    -1,
      -1,    91,   569,   378,   813,    35,   595,   812,    -1,    91,
     569,   378,   181,   252,   147,   813,    35,   595,   812,    -1,
     431,   105,    -1,   431,   250,   105,    -1,    -1,   739,   559,
     545,   537,    -1,    18,    -1,    19,    -1,    20,    -1,    21,
      -1,    22,    -1,    23,    -1,    24,    -1,    25,    -1,    27,
      -1,    28,    -1,    29,    -1,    37,    -1,    38,    -1,    40,
      -1,    41,    -1,    42,    -1,    44,    -1,    45,    -1,    46,
      -1,    53,    -1,    54,    -1,    55,    -1,    56,    -1,    57,
      -1,    58,    -1,    61,    -1,    62,    -1,    65,    -1,    67,
      -1,    68,    -1,    69,    -1,    70,    -1,    75,    -1,    76,
      -1,    77,    -1,    78,    -1,    79,    -1,    81,    -1,    82,
      -1,    83,    -1,    85,    -1,    86,    -1,    87,    -1,    88,
      -1,    89,    -1,    90,    -1,    93,    -1,    94,    -1,    95,
      -1,   103,    -1,   104,    -1,   105,    -1,   106,    -1,   107,
      -1,   108,    -1,   111,    -1,   113,    -1,   115,    -1,   116,
      -1,   117,    -1,   118,    -1,   119,    -1,   120,    -1,   122,
      -1,   123,    -1,   124,    -1,   125,    -1,   126,    -1,   129,
      -1,   130,    -1,   131,    -1,   132,    -1,   133,    -1,   135,
      -1,   136,    -1,   137,    -1,   139,    -1,   140,    -1,   141,
      -1,   143,    -1,   144,    -1,   145,    -1,   146,    -1,   148,
      -1,   149,    -1,   150,    -1,   151,    -1,   154,    -1,   156,
      -1,   157,    -1,   159,    -1,   161,    -1,   163,    -1,   167,
      -1,   168,    -1,   169,    -1,   170,    -1,   172,    -1,   175,
      -1,   177,    -1,   178,    -1,   179,    -1,   180,    -1,   181,
      -1,   183,    -1,   184,    -1,   185,    -1,   186,    -1,   188,
      -1,   189,    -1,   190,    -1,   191,    -1,   192,    -1,   193,
      -1,   195,    -1,   198,    -1,   199,    -1,   200,    -1,   201,
      -1,   207,    -1,   210,    -1,   212,    -1,   213,    -1,   214,
      -1,   215,    -1,   216,    -1,   219,    -1,   221,    -1,   224,
      -1,   225,    -1,   226,    -1,   229,    -1,   230,    -1,   231,
      -1,   232,    -1,   233,    -1,   234,    -1,   235,    -1,   236,
      -1,   237,    -1,   238,    -1,   239,    -1,   240,    -1,   241,
      -1,   242,    -1,   243,    -1,   244,    -1,   248,    -1,   249,
      -1,   250,    -1,   253,    -1,   254,    -1,   256,    -1,   259,
      -1,   261,    -1,   262,    -1,   263,    -1,   265,    -1,   266,
      -1,   269,    -1,   270,    -1,   271,    -1,   274,    -1,   277,
      -1,   280,    -1,   281,    -1,   282,    -1,   283,    -1,   284,
      -1,   285,    -1,   286,    -1,   287,    -1,   288,    -1,   290,
      -1,   291,    -1,   293,    -1,   294,    -1,   296,    -1,   297,
      -1,   298,    -1,   300,    -1,   301,    -1,   302,    -1,   303,
      -1,   304,    -1,   305,    -1,   306,    -1,   307,    -1,   308,
      -1,   310,    -1,   311,    -1,   312,    -1,   313,    -1,   315,
      -1,   316,    -1,   317,    -1,   318,    -1,   319,    -1,   320,
      -1,   321,    -1,   322,    -1,   323,    -1,   324,    -1,   325,
      -1,   326,    -1,   328,    -1,   329,    -1,   331,    -1,   332,
      -1,   333,    -1,   335,    -1,   336,    -1,   337,    -1,   338,
      -1,   339,    -1,   340,    -1,   341,    -1,   342,    -1,   343,
      -1,   345,    -1,   346,    -1,   347,    -1,   348,    -1,   349,
      -1,   351,    -1,   353,    -1,   354,    -1,   355,    -1,   357,
      -1,   358,    -1,   360,    -1,   362,    -1,   363,    -1,   364,
      -1,   365,    -1,   366,    -1,   367,    -1,   368,    -1,   369,
      -1,   370,    -1,   371,    -1,   372,    -1,   373,    -1,   376,
      -1,   377,    -1,   379,    -1,   381,    -1,   382,    -1,   383,
      -1,   384,    -1,   385,    -1,   391,    -1,   392,    -1,   394,
      -1,   397,    -1,   398,    -1,   399,    -1,   400,    -1,   401,
      -1,   402,    -1,   403,    -1,   406,    -1,   407,    -1,   408,
      -1,   409,    -1,   410,    -1,   413,    -1,   414,    -1,   415,
      -1,   416,    -1,   417,    -1,   421,    -1,   423,    -1,   424,
      -1,   425,    -1,   426,    -1,   429,    -1,   432,    -1,   433,
      -1,   434,    -1,   435,    -1,   436,    -1,   437,    -1,   449,
      -1,   450,    -1,   451,    -1,    47,    -1,    48,    -1,    50,
      -1,    51,    -1,    63,    -1,    64,    -1,    71,    -1,   109,
      -1,   110,    -1,   147,    -1,   152,    -1,   158,    -1,   174,
      -1,   197,    -1,   202,    -1,   203,    -1,   205,    -1,   245,
      -1,   247,    -1,   251,    -1,   258,    -1,   260,    -1,   275,
      -1,   279,    -1,   292,    -1,   295,    -1,   309,    -1,   334,
      -1,   352,    -1,   359,    -1,   374,    -1,   387,    -1,   388,
      -1,   393,    -1,   395,    -1,   418,    -1,   419,    -1,   438,
      -1,   439,    -1,   440,    -1,   441,    -1,   442,    -1,   443,
      -1,   444,    -1,   445,    -1,   446,    -1,   447,    -1,   448,
      -1,    43,    -1,    49,    -1,    73,    -1,    80,    -1,    92,
      -1,    99,    -1,   164,    -1,   166,    -1,   182,    -1,   196,
      -1,   208,    -1,   209,    -1,   211,    -1,   220,    -1,   222,
      -1,   246,    -1,   255,    -1,   276,    -1,   278,    -1,   330,
      -1,   356,    -1,   380,    -1,   422,    -1,    26,    -1,    30,
      -1,    31,    -1,    32,    -1,    33,    -1,    34,    -1,    35,
      -1,    36,    -1,    39,    -1,    52,    -1,    59,    -1,    60,
      -1,    66,    -1,    72,    -1,    74,    -1,    84,    -1,    91,
      -1,    96,    -1,    97,    -1,    98,    -1,   100,    -1,   101,
      -1,   102,    -1,   112,    -1,   114,    -1,   121,    -1,   127,
      -1,   128,    -1,   134,    -1,   138,    -1,   142,    -1,   153,
      -1,   155,    -1,   160,    -1,   162,    -1,   165,    -1,   171,
      -1,   173,    -1,   176,    -1,   187,    -1,   194,    -1,   204,
      -1,   206,    -1,   217,    -1,   218,    -1,   223,    -1,   227,
      -1,   228,    -1,   252,    -1,   257,    -1,   264,    -1,   267,
      -1,   268,    -1,   272,    -1,   273,    -1,   289,    -1,   299,
      -1,   314,    -1,   327,    -1,   344,    -1,   350,    -1,   361,
      -1,   375,    -1,   378,    -1,   386,    -1,   389,    -1,   390,
      -1,   396,    -1,   404,    -1,   405,    -1,   411,    -1,   412,
      -1,   420,    -1,   427,    -1,   428,    -1,   430,    -1,   431,
      -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   452,   452,   468,   480,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   522,     9,    18,
      27,    36,    45,    54,    63,    72,    85,    87,    93,    94,
      99,   103,   107,   118,   126,   130,   139,   148,   157,   166,
     175,   184,   192,   200,   209,   218,   227,   236,   253,   262,
     271,   280,   290,   303,   318,   327,   335,   350,   358,   368,
     378,   385,   392,   400,   407,   418,   419,   424,   428,   433,
     438,   446,   447,   452,   456,   457,     7,    13,    19,    25,
       6,    15,    25,    35,    45,    55,    65,    75,    85,    95,
     106,   117,   127,   140,   141,     8,    21,    27,    34,    40,
      47,    57,    61,    70,    79,    88,    95,    96,   101,   113,
     118,   143,   153,   163,   169,   180,   191,   206,   207,   213,
     214,   219,   220,   226,   227,   231,   232,   237,   239,   245,
     246,   250,   251,   256,     7,    14,    22,     9,    19,    32,
      33,     7,    14,    31,    51,    52,     9,    17,    29,    30,
      34,    35,    36,    41,    42,    43,    48,    52,    56,    60,
      64,    68,    72,    76,    80,    84,    88,    92,    97,   101,
     105,   112,   113,   117,   118,   119,     2,     9,    15,    21,
      28,    35,    45,    46,    47,     7,    21,    41,    42,    69,
      70,    71,    72,    73,    74,    78,    79,    84,    89,    90,
      91,    92,    93,    98,   105,   106,   107,   124,   131,   138,
     148,   158,   170,   179,   188,   207,   214,   219,   221,   223,
     225,   228,   233,   234,   238,   239,   240,   241,   246,   250,
     251,   256,   263,   268,   269,   270,   271,   272,   273,   274,
     275,   281,   282,   286,   291,   298,   305,   312,   324,   325,
     326,   327,   331,   336,   337,   338,   343,   348,   349,   350,
     351,   352,   353,   358,   381,   385,   392,   393,   397,   401,
     402,   403,   407,   411,   419,   420,   425,   426,   430,   438,
     439,   444,   445,   449,   454,   458,   462,   467,   475,   476,
     480,   481,   487,   498,   511,   525,   539,   553,   567,   590,
     594,   601,   605,   613,   618,   625,   635,   636,   637,   638,
     639,   646,   653,   654,   659,   660,     9,    19,    29,    39,
      49,    59,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    90,    91,    92,    93,    94,
      95,    96,   101,   102,   107,   108,   109,   114,   115,   116,
       7,     1,    30,    53,    54,    59,    63,    68,    72,    80,
      81,    85,    86,    91,    92,    96,    97,   102,   103,   104,
     105,   106,   111,   119,   123,   128,   129,   134,   138,   143,
     147,   151,   155,   159,   163,   167,   171,   175,   179,   183,
     187,   191,   195,   203,   209,   210,   211,   216,   220,    47,
      48,    52,    53,    68,    69,    76,    84,    92,   100,   108,
     116,   127,   128,   155,   169,   184,   185,   204,   208,   212,
     229,   236,   243,   253,   254,   257,   269,   280,   288,   293,
     298,   303,   308,   316,   324,   329,   334,   341,   342,   346,
     347,   348,   355,   356,   360,   361,   365,   366,   370,   374,
     375,   378,   387,   398,   399,   400,   403,   404,   405,   409,
     410,   411,   412,   416,   417,   421,   423,   439,   441,   446,
     449,   454,   455,   463,   483,   484,   486,   491,   492,   496,
     497,   500,   501,   526,   527,   531,   532,   536,   537,   541,
     554,   555,   559,   560,   564,   565,   569,   570,   574,   585,
     586,   587,   588,   592,   593,   598,   599,   600,   609,   615,
     633,   634,   638,   639,   645,   650,   658,   665,   673,   708,
     733,   737,   763,   767,   779,   792,   806,   817,   832,   838,
     843,   849,   856,   857,   865,   869,   873,   879,   886,   891,
     892,   893,   894,   898,   899,   911,   912,   917,   924,   931,
     938,   961,   974,   975,   990,  1000,  1012,  1017,  1018,  1021,
    1022,  1025,  1026,  1031,  1032,  1037,  1041,  1047,  1068,  1076,
    1088,  1093,  1100,  1105,  1111,  1116,  1125,  1127,  1130,  1134,
    1135,  1136,  1137,  1138,  1139,  1144,  1164,  1165,  1166,  1167,
    1178,  1184,  1192,  1193,  1199,  1204,  1209,  1214,  1219,  1224,
    1229,  1234,  1240,  1246,  1252,  1259,  1281,  1290,  1294,  1302,
    1306,  1314,  1326,  1347,  1351,  1357,  1361,  1374,  1382,  1392,
    1394,  1396,  1398,  1400,  1402,  1407,  1408,  1415,  1424,  1432,
    1441,  1452,  1460,  1461,  1462,  1466,  1468,  1470,  1472,  1474,
    1476,  1478,  1483,  1488,  1494,  1502,  1507,  1514,  1521,  1525,
    1529,  1565,  1566,  1568,  1576,  1591,  1593,  1595,  1597,  1599,
    1601,  1603,  1605,  1607,  1609,  1611,  1613,  1615,  1617,  1620,
    1622,  1624,  1627,  1629,  1631,  1633,  1636,  1641,  1648,  1653,
    1660,  1665,  1673,  1678,  1687,  1695,  1703,  1711,  1729,  1737,
    1745,  1753,  1761,  1769,  1785,  1793,  1801,  1809,  1817,  1825,
    1833,  1837,  1841,  1845,  1849,  1857,  1865,  1873,  1881,  1901,
    1923,  1934,  1941,  1966,  1968,  1970,  1972,  1974,  1976,  1978,
    1980,  1982,  1984,  1986,  1988,  1990,  1992,  1994,  1996,  1998,
    2000,  2002,  2004,  2008,  2012,  2016,  2030,  2031,  2032,  2044,
    2059,  2071,  2073,  2075,  2086,  2110,  2123,  2127,  2133,  2140,
    2147,  2157,  2164,  2192,  2227,  2238,  2239,  2246,  2252,  2256,
    2260,  2264,  2268,  2272,  2276,  2280,  2284,  2288,  2292,  2296,
    2300,  2304,  2308,  2312,  2314,  2318,  2327,  2332,  2339,  2354,
    2361,  2365,  2369,  2373,  2377,  2391,  2392,  2396,  2397,  2405,
    2406,  2410,  2411,  2416,  2424,  2426,  2440,  2443,  2470,  2471,
    2474,  2475,  2486,  2504,  2511,  2520,  2537,  2582,  2590,  2598,
    2606,  2614,  2635,  2636,  2637,  2640,  2641,  2642,  2645,  2646,
    2649,  2650,  2651,  2652,  2653,  2654,  2655,  2656,  2657,  2658,
    2659,  2660,  2663,  2665,  2670,  2672,  2677,  2679,  2681,  2683,
    2685,  2687,  2701,  2703,  2707,  2711,  2718,  2722,  2728,  2732,
    2741,  2752,  2753,  2757,  2761,  2768,  2769,  2770,  2771,  2772,
    2773,  2774,  2775,  2785,  2789,  2796,  2803,  2804,  2820,  2824,
    2829,  2833,  2848,  2853,  2857,  2860,  2863,  2864,  2865,  2868,
    2875,  2885,  2899,  2900,  2904,  2915,  2916,  2919,  2920,  2923,
    2927,  2934,  2938,  2942,  2950,  2961,  2962,  2966,  2967,  2971,
    2972,  2975,  2976,  2986,  2987,  2991,  2992,  2995,  3011,  3019,
    3027,  3049,  3050,  3061,  3065,  3092,  3094,  3099,  3101,  3111,
    3113,  3124,  3128,  3132,  3136,  3140,  3149,  3156,  3188,  3192,
    3198,  3206,  3218,  3222,  3226,  3232,  3233,  3249,  3250,  3251,
    3254,  3255,  3260,  3261,  3262,  3265,  3266,  3269,  3271,  3276,
    3277,  3280,  3288,  3289,  3290,  3291,  3292,  3295,  3296,     7,
      18,    19,    23,    24,    25,    26,     7,    16,    34,    41,
      46,    47,    48,    49,     8,    33,    62,    66,    67,    72,
      73,    78,    79,    83,    84,    89,    90,     7,    16,    25,
      34,    43,    52,     5,     7,    20,     9,    16,    26,    33,
      44,    45,    50,    51,    52,    57,    58,    59,    60,    61,
      65,    66,    67,    68,    73,    74,    79,    83,    91,    92,
      97,    98,    99,   105,   110,   118,   119,    10,    16,    22,
      32,    33,    41,    52,    64,    72,    80,    87,    97,    99,
     105,   109,   113,   128,   135,   136,   137,   141,   142,     7,
      16,     8,    22,    36,    48,    56,    70,    71,    72,    73,
      74,    87,    88,    93,    94,    98,    99,     7,    21,    25,
      32,    43,    44,    50,    51,     9,    19,     2,     7,    14,
      24,    25,    32,     3,     9,    15,    21,    29,    29,    31,
      32,     6,     8,    21,    34,    52,    74,    75,    76,    77,
      11,    24,    41,    42,    43,    48,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE", "CASCADED", "CASE",
  "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT",
  "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE",
  "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MINUTE_P", "MINVALUE", "MODE",
  "MONTH_P", "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR",
  "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL",
  "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF",
  "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION",
  "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER",
  "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER", "PARALLEL",
  "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD", "PLACING",
  "PLANS", "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION",
  "PREPARE", "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES",
  "PROCEDURAL", "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE",
  "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF",
  "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE",
  "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAVEPOINT", "SCHEMA",
  "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P",
  "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN",
  "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM",
  "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
  "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS",
  "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN",
  "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES",
  "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES",
  "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "UpdateStmt", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "tablesample_clause", "opt_repeatable_clause",
  "func_table", "rowsfrom_item", "rowsfrom_list", "opt_col_def_list",
  "opt_ordinality", "where_clause", "TableFuncElementList",
  "TableFuncElement", "opt_collate_clause", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "opt_interval", "interval_second",
  "a_expr", "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,    60,    62,    61,   710,    43,
      45,    42,    47,    37,    94,   711,    91,    93,    40,    41,
      46,    59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   475,   476,   477,   477,   478,   478,   478,   478,   478,
     478,   478,   478,   478,   478,   478,   478,   478,   478,   478,
     478,   478,   478,   478,   478,   478,   478,   478,   478,   478,
     478,   478,   478,   478,   478,   478,   478,   478,   479,   479,
     479,   479,   479,   479,   479,   479,   480,   480,   481,   481,
     482,   482,   482,   482,   483,   483,   484,   484,   484,   484,
     484,   484,   484,   484,   484,   484,   484,   484,   484,   484,
     484,   484,   484,   484,   484,   484,   484,   484,   484,   484,
     484,   484,   484,   484,   484,   485,   485,   486,   486,   486,
     486,   487,   487,   488,   489,   489,   490,   490,   490,   490,
     491,   491,   491,   491,   491,   491,   491,   491,   491,   491,
     491,   491,   491,   492,   492,   493,   494,   494,   494,   494,
     494,   495,   495,   496,   496,   496,   497,   497,   498,   499,
     499,   500,   500,   500,   501,   501,   501,   502,   502,   503,
     503,   504,   504,   505,   505,   506,   506,   507,   507,   508,
     508,   509,   509,   510,   511,   511,   511,   512,   512,   513,
     513,   514,   514,   514,   515,   515,   516,   516,   517,   517,
     518,   518,   518,   519,   519,   519,   519,   520,   520,   520,
     520,   520,   520,   520,   520,   520,   520,   520,   520,   520,
     520,   521,   521,   522,   522,   522,   523,   523,   523,   523,
     523,   523,   524,   524,   524,   525,   525,   526,   526,   527,
     527,   527,   527,   527,   527,   528,   528,   529,   530,   530,
     530,   530,   530,   531,   531,   531,   531,   532,   532,   532,
     532,   532,   532,   532,   532,   533,   534,   535,   535,   535,
     535,   535,   536,   536,   537,   537,   537,   537,   538,   539,
     539,   540,   540,   541,   541,   541,   541,   541,   541,   541,
     541,   542,   542,   543,   544,   544,   544,   544,   545,   545,
     545,   545,   546,   547,   547,   547,   548,   549,   549,   549,
     549,   549,   549,   550,   551,   551,   552,   552,   553,   554,
     554,   554,   555,   555,   556,   556,   557,   557,   558,   559,
     559,   560,   560,   561,   562,   562,   562,   562,   563,   563,
     564,   564,   564,   565,   565,   565,   565,   565,   565,   566,
     566,   567,   567,   567,   567,   568,   569,   569,   569,   569,
     569,   569,   569,   569,   570,   570,   571,   571,   571,   571,
     571,   571,   572,   572,   572,   572,   572,   572,   572,   572,
     572,   572,   572,   572,   572,   573,   573,   573,   573,   573,
     573,   573,   574,   574,   575,   575,   575,   576,   576,   576,
     577,   578,   578,   579,   579,   580,   580,   581,   581,   582,
     582,   583,   583,   584,   584,   585,   585,   586,   586,   586,
     586,   586,   587,   588,   588,   589,   589,   590,   590,   591,
     591,   591,   591,   591,   591,   591,   591,   591,   591,   591,
     591,   591,   591,   592,   593,   593,   593,   594,   594,   595,
     595,   596,   596,   597,   597,   597,   597,   597,   597,   597,
     597,   598,   598,   599,   599,   599,   599,   599,   599,   599,
     600,   600,   600,   601,   601,   602,   603,   603,   604,   604,
     604,   604,   604,   604,   604,   604,   604,   605,   605,   606,
     606,   606,   607,   607,   608,   608,   609,   609,   610,   611,
     611,   612,   612,   613,   613,   613,   614,   614,   614,   615,
     615,   615,   615,   616,   616,   617,   617,   617,   617,   618,
     618,   619,   619,   620,   621,   621,   621,   622,   622,   623,
     623,   624,   624,   625,   625,   626,   626,   627,   627,   628,
     629,   629,   630,   630,   631,   631,   632,   632,   633,   634,
     634,   634,   634,   635,   635,   636,   636,   636,   637,   637,
     638,   638,   639,   639,   640,   640,   640,   640,   640,   640,
     640,   640,   641,   641,   641,   641,   641,   641,   642,   642,
     642,   642,   643,   643,   644,   644,   644,   644,   644,   645,
     645,   645,   645,   646,   646,   647,   647,   648,   648,   648,
     648,   649,   650,   650,   651,   651,   652,   653,   653,   654,
     654,   655,   655,   656,   656,   657,   657,   658,   659,   659,
     660,   660,   660,   660,   660,   660,   661,   661,   661,   662,
     662,   662,   662,   662,   662,   662,   663,   663,   663,   663,
     664,   664,   665,   665,   666,   666,   666,   666,   666,   666,
     666,   666,   666,   666,   666,   667,   667,   668,   668,   669,
     669,   670,   671,   672,   672,   673,   673,   674,   675,   676,
     676,   676,   676,   676,   676,   677,   677,   678,   678,   678,
     678,   679,   680,   680,   680,   681,   681,   681,   681,   681,
     681,   681,   681,   681,   681,   681,   681,   681,   681,   682,
     682,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   684,   684,   684,   684,   684,   684,   684,
     684,   684,   684,   684,   684,   684,   684,   684,   684,   684,
     684,   684,   684,   684,   684,   684,   685,   685,   685,   685,
     685,   685,   685,   685,   685,   685,   686,   686,   686,   686,
     686,   686,   686,   687,   687,   688,   688,   689,   689,   689,
     689,   689,   689,   689,   689,   689,   689,   689,   689,   689,
     689,   689,   689,   689,   689,   689,   689,   689,   689,   689,
     689,   689,   689,   689,   689,   690,   690,   691,   691,   692,
     692,   693,   693,   694,   695,   695,   695,   696,   697,   697,
     698,   698,   699,   699,   699,   700,   700,   701,   701,   701,
     701,   701,   702,   702,   702,   703,   703,   703,   704,   704,
     705,   705,   705,   705,   705,   705,   705,   705,   705,   705,
     705,   705,   706,   706,   707,   707,   708,   708,   708,   708,
     708,   708,   709,   709,   710,   710,   711,   711,   712,   712,
     712,   713,   713,   714,   714,   715,   715,   715,   715,   715,
     715,   715,   715,   716,   716,   717,   718,   718,   719,   719,
     719,   719,   719,   719,   720,   721,   722,   722,   722,   723,
     723,   724,   725,   725,   726,   727,   727,   728,   728,   729,
     729,   730,   730,   730,   730,   731,   731,   732,   732,   733,
     733,   734,   734,   735,   735,   736,   736,   737,   737,   737,
     737,   738,   738,   739,   739,   740,   740,   741,   742,   743,
     743,   744,   744,   744,   744,   744,   744,   744,   744,   744,
     744,   744,   744,   744,   744,   745,   746,   747,   747,   747,
     748,   748,   749,   749,   749,   750,   750,   751,   751,   752,
     752,   753,   754,   754,   754,   754,   754,   755,   755,   756,
     757,   757,   758,   758,   758,   758,   759,   759,   760,   760,
     761,   761,   761,   761,   762,   762,   763,   764,   764,   765,
     765,   766,   766,   767,   767,   768,   768,   769,   769,   769,
     769,   769,   769,   770,   771,   772,   773,   773,   773,   773,
     774,   774,   775,   775,   775,   776,   776,   776,   776,   776,
     777,   777,   777,   777,   778,   778,   779,   779,   780,   780,
     781,   781,   781,   781,   782,   783,   783,   784,   784,   784,
     785,   785,   785,   785,   786,   786,   786,   786,   787,   787,
     788,   788,   788,   788,   788,   788,   788,   789,   789,   790,
     791,   792,   792,   792,   792,   792,   793,   793,   793,   793,
     793,   794,   794,   795,   795,   796,   796,   797,   798,   798,
     798,   799,   799,   800,   800,   801,   801,   802,   803,   803,
     804,   804,   804,   805,   805,   805,   805,   806,   806,   807,
     807,   808,   809,   809,   809,   809,   810,   810,   810,   810,
     811,   811,   812,   812,   812,   813,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     4,     6,
       4,     6,     4,     6,     4,     6,     1,     2,     3,     2,
       1,     3,     2,     3,     1,     3,     2,     5,     3,     6,
       4,     6,     6,     6,     5,     5,     6,     9,     4,     5,
       7,     6,     4,     8,     4,     2,     4,     3,     6,     4,
       2,     2,     2,     2,     1,     2,     0,     1,     2,     2,
       2,     1,     3,     4,     2,     0,     2,     3,     2,     3,
       6,     6,     8,     6,     8,     6,     8,     6,     8,     8,
      10,     8,    10,     1,     0,     7,     1,     4,     4,     7,
       2,     1,     3,     4,     3,     0,     1,     0,     2,     3,
       5,     8,     5,     0,     5,     5,     7,     2,     0,     1,
       1,     1,     3,     2,     0,     1,     0,     1,     3,     1,
       3,     1,     3,     2,     2,     4,     5,     5,     8,     1,
       0,     3,     9,    12,     3,     0,     4,     6,     1,     2,
       1,     1,     0,     1,     2,     2,     1,     2,     2,     1,
       2,     3,     2,     2,     2,     2,     3,     3,     3,     1,
       3,     1,     0,     1,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     0,     9,    12,     0,     2,     1,
       1,     1,     1,     1,     1,     3,     0,     1,     2,     1,
       1,     2,     2,     3,     1,     1,     2,     2,     1,     2,
       3,     5,     2,     5,     5,     2,     3,     1,     1,     2,
       2,     0,     4,     0,     3,     4,     4,     0,     3,     2,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     1,     2,     2,     2,     2,     2,
       2,     0,     3,     3,     3,     0,     1,     2,     1,     2,
       2,     2,     2,     4,     1,     3,     1,     3,     1,     1,
       1,     1,     3,     1,     2,     0,     1,     0,     1,     3,
       0,     2,     0,     3,     3,     1,     5,     3,     1,     3,
       1,     4,     5,     5,     6,     3,     7,     4,    11,     1,
       3,     2,     2,     2,     0,     3,     1,     1,     2,     2,
       2,     2,     1,     0,     1,     2,     6,     4,     6,     4,
       6,     8,     1,     1,     1,     2,     1,     2,     1,     1,
       1,     3,     3,     3,     3,     2,     2,     1,     3,     1,
       1,     1,     1,     3,     1,     1,     0,     1,     1,     1,
       8,    11,     9,     1,     1,     3,     0,     1,     3,     1,
       0,     1,     0,     1,     0,     1,     3,     1,     1,     1,
       3,     0,     2,     2,     0,     2,     0,     1,     0,     1,
       1,     1,     3,     3,     1,     1,     3,     3,     3,     3,
       4,     3,     2,     1,     1,     1,     1,     1,     3,     1,
       1,     3,     3,     1,     2,     4,     4,     2,     3,     5,
       5,     1,     1,     9,     9,     1,     2,     4,     4,     4,
       2,     2,     3,     1,     3,     6,     2,     0,     3,     3,
       4,     4,     4,     4,     3,     2,     1,     1,     0,     1,
       1,     0,     1,     5,     1,     0,     1,     0,     3,     1,
       3,     4,     3,     1,     1,     0,     2,     2,     0,     2,
       2,     1,     1,     1,     0,     2,     4,     5,     4,     2,
       3,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     3,     0,     1,     3,     1,     1,     2,
       2,     0,     1,     3,     1,     0,     1,     2,     3,     2,
       4,     2,     3,     2,     0,     1,     2,     0,     4,     5,
       2,     0,     1,     3,     2,     3,     2,     3,     2,     3,
       1,     4,     3,     4,     5,     4,     5,     4,     5,     2,
       4,     1,     1,     0,     1,     4,     5,     4,     0,     2,
       2,     2,     1,     1,     0,     4,     2,     1,     2,     2,
       4,     6,     4,     0,     2,     6,     2,     1,     3,     4,
       0,     2,     0,     2,     0,     1,     3,     3,     2,     0,
       2,     3,     5,     6,     2,     3,     3,     4,     0,     1,
       1,     1,     1,     1,     2,     4,     1,     1,     1,     1,
       2,     3,     3,     0,     1,     1,     1,     1,     1,     2,
       2,     2,     2,     2,     1,     3,     0,     1,     1,     1,
       1,     5,     2,     1,     1,     1,     1,     4,     1,     2,
       2,     1,     3,     3,     2,     1,     0,     5,     2,     5,
       2,     1,     3,     3,     0,     1,     1,     1,     1,     1,
       1,     3,     3,     3,     3,     3,     3,     3,     0,     1,
       4,     1,     3,     3,     5,     2,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     2,     3,     3,     2,     2,     3,     5,     4,     6,
       3,     5,     4,     6,     4,     6,     5,     7,     3,     2,
       4,     3,     2,     3,     3,     4,     3,     4,     3,     4,
       5,     6,     6,     7,     6,     7,     6,     7,     3,     4,
       4,     6,     1,     1,     3,     2,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     2,     5,     6,     6,     7,     1,     1,     2,     2,
       4,     1,     1,     1,     2,     2,     3,     5,     6,     8,
       6,     6,     4,     4,     1,     1,     1,     5,     1,     1,
       4,     1,     4,     1,     4,     1,     4,     1,     1,     1,
       1,     1,     1,     6,     4,     4,     4,     4,     6,     5,
       5,     5,     4,     6,     4,     5,     0,     5,     0,     2,
       0,     1,     3,     3,     2,     2,     0,     6,     1,     0,
       3,     0,     2,     2,     0,     1,     4,     2,     2,     2,
       2,     2,     4,     3,     5,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     4,     1,     4,     1,     4,     1,     2,
       1,     2,     1,     3,     1,     3,     1,     3,     1,     3,
       3,     1,     3,     3,     0,     1,     1,     1,     1,     1,
       1,     1,     1,     4,     3,     2,     3,     0,     3,     3,
       2,     2,     1,     0,     2,     2,     3,     2,     1,     1,
       3,     5,     1,     2,     4,     2,     0,     1,     0,     1,
       2,     2,     2,     3,     5,     1,     0,     1,     2,     0,
       2,     1,     0,     1,     0,     1,     3,     3,     2,     1,
       1,     1,     3,     1,     2,     1,     3,     1,     1,     1,
       2,     1,     1,     1,     1,     1,     2,     6,     2,     3,
       5,     6,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     3,     3,
       0,     1,     1,     1,     1,     1,     1,     1,     1,     5,
       3,     0,     1,     1,     1,     1,     4,     7,     2,     0,
       1,     1,     1,     1,    13,    16,     1,     2,     0,     1,
       0,     1,     0,     2,     0,     1,     0,     6,     8,     6,
       8,     6,     8,     1,     4,     3,     2,     4,     3,     5,
       1,     0,     1,     1,     0,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     3,     3,
       1,     3,     3,     2,     3,     3,     3,     3,     1,     1,
       1,     1,     3,     5,     1,     1,     1,     1,     3,     2,
       1,     4,     5,     5,     4,     6,     1,     1,     1,     1,
       1,     1,     0,     1,     3,     1,     0,     7,     1,     2,
       3,     2,     0,     2,     0,     2,     4,     2,     1,     1,
       1,     2,     3,     2,     3,     4,     2,     1,     1,     1,
       3,     2,     9,    11,    12,    14,     3,     4,     4,     0,
       7,    10,     2,     3,     0,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     127,   204,     0,  1039,  1038,   204,     0,  1013,   204,   398,
     333,     0,  1108,     0,   204,     0,   127,     0,     0,     0,
       0,     0,     0,   204,   465,     0,  1107,   204,     0,  1082,
       0,     0,     0,     0,     0,     2,     4,     7,    16,    28,
      24,     0,    26,    14,    19,     6,    30,    15,    18,    31,
      11,    29,   432,   419,   467,   431,   126,   435,    27,    13,
      23,     5,    10,    21,    22,    20,  1021,    34,    25,    32,
      17,     8,    33,    35,     0,     9,    36,    12,   203,   202,
     196,     0,     0,     0,     0,     0,   197,   957,  1126,  1127,
    1128,  1129,  1130,  1131,  1132,  1133,  1134,  1135,  1136,  1137,
    1138,  1139,  1140,  1141,  1460,  1142,  1143,  1144,  1412,  1413,
    1461,  1414,  1415,  1145,  1146,  1147,  1148,  1149,  1150,  1151,
    1152,  1416,  1417,  1153,  1154,  1155,  1156,  1157,  1418,  1462,
    1158,  1159,  1160,  1161,  1162,  1463,  1163,  1164,  1165,  1166,
    1167,  1168,  1169,  1170,  1171,  1464,  1172,  1173,  1174,  1465,
    1175,  1176,  1177,  1178,  1179,  1180,  1419,  1420,  1181,  1182,
    1183,  1184,  1185,  1186,  1187,  1188,  1189,  1190,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,  1199,  1200,  1201,  1202,
    1203,  1204,  1205,  1206,  1207,  1208,  1421,  1209,  1210,  1211,
    1212,  1422,  1213,  1214,  1215,  1423,  1216,  1217,  1218,  1466,
    1467,  1219,  1220,  1221,  1222,  1223,  1424,  1224,  1225,  1226,
    1227,  1228,  1229,  1468,  1230,  1231,  1232,  1233,  1234,  1235,
    1236,  1237,  1238,  1239,  1240,  1469,  1425,  1241,  1242,  1243,
    1244,  1426,  1427,  1428,  1245,  1470,  1471,  1246,  1472,  1247,
    1248,  1249,  1250,  1251,  1252,  1473,  1253,  1474,  1254,  1255,
    1256,  1257,  1258,  1259,  1260,  1261,  1262,  1263,  1264,  1265,
    1266,  1267,  1268,  1269,  1270,  1271,  1272,  1429,  1475,  1430,
    1273,  1274,  1275,  1431,  1276,  1277,  1476,  1278,  1432,  1279,
    1433,  1280,  1281,  1282,  1283,  1284,  1285,  1286,  1287,  1288,
    1434,  1477,  1289,  1478,  1435,  1290,  1291,  1292,  1293,  1294,
    1295,  1296,  1297,  1298,  1299,  1300,  1436,  1301,  1302,  1437,
    1303,  1304,  1305,  1306,  1307,  1308,  1309,  1310,  1311,  1312,
    1313,  1314,  1438,  1315,  1316,  1317,  1318,  1319,  1320,  1321,
    1322,  1323,  1324,  1325,  1326,  1327,  1328,  1329,  1330,  1331,
    1332,  1479,  1333,  1334,  1335,  1439,  1336,  1337,  1338,  1339,
    1340,  1341,  1342,  1343,  1344,  1345,  1346,  1347,  1348,  1349,
    1350,  1440,  1351,  1352,  1353,  1480,  1354,  1355,  1441,  1356,
    1357,  1358,  1359,  1360,  1361,  1362,  1363,  1364,  1365,  1366,
    1367,  1368,  1442,  1369,  1370,  1371,  1481,  1372,  1373,  1374,
    1375,  1376,  1443,  1444,  1377,  1378,  1445,  1379,  1446,  1380,
    1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,
    1391,  1392,  1393,  1394,  1395,  1396,  1447,  1448,  1397,  1482,
    1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,  1406,  1407,
    1408,  1449,  1450,  1451,  1452,  1453,  1454,  1455,  1456,  1457,
    1458,  1459,  1409,  1410,  1411,  1111,     0,     0,   939,   958,
     959,   964,   199,   397,   127,     0,     0,     0,     0,     0,
     327,   326,  1005,   332,     0,     0,   957,    98,  1303,    96,
     937,   958,     0,   348,   349,     0,   357,     0,   346,     0,
     367,   359,   368,   360,   343,   361,   350,   342,     0,   369,
     344,     0,     0,     0,   200,   165,   333,   127,     0,  1026,
    1027,  1025,  1016,  1021,  1028,  1029,     0,     0,   956,  1070,
    1069,   154,   981,  1099,  1443,  1377,  1109,  1100,  1097,  1098,
     201,   464,   462,     0,   924,  1256,  1339,  1349,  1443,  1047,
    1050,     0,   198,     0,   436,   567,   933,  1081,     0,  1086,
       0,  1317,   440,   443,   970,   441,   432,     0,     0,     1,
     127,     0,     0,     0,   461,   461,     0,   461,     0,   424,
     432,   427,   431,     0,  1020,  1095,  1106,  1443,  1377,  1103,
    1229,     0,     0,  1229,     0,  1229,     0,  1229,     0,     0,
     916,     0,   917,   940,   983,   984,   982,     0,   985,   300,
     331,   330,   329,   328,   333,  1229,   989,     0,     0,     0,
       0,  1000,    99,    97,   355,   356,     0,   347,   345,     0,
    1229,   366,   965,   362,  1229,   366,   935,  1229,     0,     0,
     161,     0,  1018,  1030,  1447,  1045,     0,  1046,  1036,  1024,
    1031,  1032,  1033,   127,   396,  1015,     0,     0,     0,     0,
    1101,     0,     0,     0,   942,   944,   945,   852,   955,   919,
    1413,  1414,  1415,   908,     0,  1416,  1417,  1418,  1462,   791,
     778,   787,   792,   779,   781,   788,  1419,  1420,   732,  1196,
    1421,  1422,   953,  1423,  1426,  1427,  1428,   783,   785,  1429,
    1430,     0,   954,  1432,  1433,  1285,  1435,  1436,  1438,  1439,
     789,  1441,  1442,  1443,  1444,  1445,  1446,   952,   790,  1448,
       0,     0,     0,   930,     0,   919,   763,     0,   606,   607,
     629,   630,   608,   635,   636,   638,   609,     0,   929,   671,
     806,   762,   774,     0,     0,   761,   756,   447,   925,     0,
     757,   941,   943,   909,   447,   923,  1048,  1053,  1049,     0,
       0,     0,     0,     0,   569,   568,   934,  1080,  1078,  1079,
    1077,  1076,  1083,     0,  1085,  1021,   864,     0,   442,     0,
       0,     0,   422,   421,     3,     0,     0,  1088,     0,   459,
     460,     0,     0,     0,     0,     0,     0,     0,     0,   515,
     481,   482,   484,   512,   516,   524,     0,   428,     0,   970,
    1104,     0,     0,     0,   114,   114,     0,     0,     0,     0,
       0,    91,    40,    84,     0,     0,     0,     0,   179,   192,
       0,     0,     0,     0,     0,   189,     0,     0,   172,    42,
     166,   168,     0,   114,     0,    38,     0,     0,     0,    44,
       0,     0,     0,     0,   766,   868,   467,   866,   939,     0,
     915,     0,   972,  1483,  1484,  1485,  1486,  1487,  1488,  1489,
    1490,  1491,  1492,  1493,  1494,  1495,  1496,  1497,  1498,  1499,
    1500,  1501,  1502,  1503,  1504,  1505,  1506,  1507,  1508,  1509,
    1510,  1511,  1512,  1513,  1514,  1515,  1516,  1517,  1518,  1519,
    1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,
    1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,
    1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,  1548,  1549,
    1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,
     912,   911,   938,   973,   974,   975,   976,   918,     0,     0,
     394,     0,     0,   986,     0,  1229,   160,  1229,   300,     0,
     300,   999,  1002,   358,   354,   352,   351,   353,     0,   364,
     365,     0,   337,     0,   966,     0,     0,   339,     0,     0,
       0,     0,   127,     0,   173,  1041,  1042,  1040,     0,     0,
    1023,   176,   193,  1035,  1044,  1034,  1043,  1022,  1017,     0,
    1014,   385,  1059,  1058,  1067,   155,     0,   962,   617,   646,
     624,   646,   646,   613,   613,   626,   614,   615,   651,     0,
     646,   613,   618,     0,   616,   654,   654,   641,   871,   598,
     599,   600,   601,   627,   628,   602,   633,   634,   603,   668,
       0,   613,   963,   127,  1102,  1110,     0,   759,   645,   632,
     907,     0,     0,   640,   639,     0,     0,     0,     0,     0,
     622,   621,   620,   765,   874,     0,   619,     0,     0,   646,
     646,   644,   694,     0,   623,     0,     0,   887,     0,   893,
       0,     0,     0,   650,     0,   648,     0,     0,   695,   675,
     676,   763,   864,     0,   758,   764,   948,     0,     0,   668,
     928,   852,     0,   849,   850,   851,     0,     0,     0,   922,
       0,   860,     0,     0,   709,   858,     0,   712,     0,     0,
       0,     0,   846,   847,   848,   840,   841,   842,   843,   844,
     845,   856,   839,   691,     0,     0,   808,     0,   690,     0,
       0,   531,     0,   946,   910,   531,  1061,  1065,  1066,  1064,
       0,  1060,  1052,  1051,  1056,  1054,  1057,  1055,     0,  1074,
       0,  1071,   528,     0,   444,     0,     0,  1094,     0,   121,
       0,  1089,     0,   439,   438,   468,   469,   475,   437,   501,
     502,     0,     0,     0,     0,   521,   519,   492,   485,   491,
       0,     0,   489,     0,   493,   671,   514,   426,   479,   480,
     483,   425,     0,   517,     0,   527,   515,   484,     0,  1096,
    1105,     0,     0,     0,     0,     0,  1229,     0,     0,    75,
      56,   252,     0,   113,     0,     0,     0,     0,     0,     0,
       0,    83,    80,    81,    82,     0,     0,     0,     0,   177,
     178,   191,     0,   182,   183,   180,   184,   185,     0,     0,
     170,   171,     0,     0,     0,     0,   169,     0,     0,     0,
       0,     0,     0,     0,     0,   467,   467,   467,   772,     0,
       0,   466,     0,     0,   913,   916,   384,   308,     0,   298,
       0,     0,     0,     0,     0,   333,   992,   990,   988,   991,
     993,     0,     0,   157,   159,     0,   297,   271,     0,  1004,
    1229,  1001,   288,     0,   366,   363,   967,     0,   366,   936,
       0,   366,   164,  1229,   300,     0,  1019,  1037,   174,   194,
     175,   195,   417,     0,   391,   399,   404,   382,     0,   382,
       0,   401,   405,   382,   400,   382,   395,     0,   156,     0,
     598,   594,   590,   657,   658,   659,   656,   669,   655,     0,
     604,   660,   980,     0,   610,   613,   979,     0,   920,     0,
       0,   906,   902,     0,     0,     0,     0,     0,     0,   875,
     878,   879,   880,   877,   881,   876,     0,     0,   882,     0,
       0,     0,   643,   642,     0,   838,   849,   850,   851,   846,
     847,   848,   840,   841,   842,   843,   844,   845,   862,     0,
       0,     0,     0,     0,     0,     0,     0,   733,     0,     0,
     833,     0,   864,   892,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   864,   898,     0,   919,     0,     0,
       0,     0,   949,   672,   686,   687,   688,   692,   978,   977,
     927,     0,   921,     0,     0,   673,   700,     0,   899,   728,
       0,   716,     0,   708,     0,   714,   718,   696,   711,     0,
     693,     0,   922,   861,     0,   859,     0,   683,   684,   685,
     677,   678,   679,   680,   681,   682,   689,   837,   835,   836,
       0,     0,     0,   816,     0,     0,   713,  1222,  1256,     0,
     458,   458,   458,   446,   456,   926,     0,   584,   467,   584,
       0,   668,   570,   970,  1084,  1072,  1073,   865,   969,   127,
       0,  1092,     0,     0,     0,   133,   116,     0,  1090,     0,
     149,   531,     0,   919,     0,   473,   474,     0,   478,  1439,
    1336,     0,     0,     0,     0,   494,   522,     0,   513,     0,
     942,   495,   941,   496,   499,   500,   490,   523,   931,   525,
       0,   518,   430,   429,   529,     0,    41,     0,  1229,    58,
       0,     0,     0,     0,     0,     0,   207,   243,   207,    95,
    1229,   366,  1229,   366,  1130,  1197,  1350,     0,    54,    87,
       0,   276,   107,     0,   261,   305,    77,    92,   100,     0,
       0,    43,   167,   181,   186,   103,   190,   187,  1009,   188,
     114,     0,    39,     0,   101,     0,  1007,     0,     0,    45,
     105,  1011,     0,     0,     0,     0,   867,   767,   869,   870,
     915,     0,   383,     0,   299,     0,   393,   373,   374,   384,
       0,   300,   989,     0,     0,     0,     0,     0,   291,   289,
     319,     0,   296,   290,   298,     0,     0,   247,     0,  1124,
       0,     0,     0,     0,   336,   968,   338,     0,   340,     0,
       0,   386,     0,   389,     0,   388,   392,   387,   381,     0,
     412,     0,     0,     0,     0,     0,     0,  1068,   595,   591,
       0,     0,     0,     0,     0,     0,     0,     0,   872,   611,
     463,     0,     0,     0,   903,     0,     0,   804,     0,   780,
     782,   612,   794,     0,   625,   784,   786,     0,   853,     0,
       0,     0,   795,   735,   736,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   751,   750,   796,   832,     0,     0,   890,   891,
     797,   653,   652,   654,   654,     0,     0,   897,     0,     0,
       0,   802,   760,   865,   637,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   717,   710,     0,   715,   719,     0,
       0,     0,   704,     0,     0,   702,   729,   698,     0,     0,
     730,     0,     0,     0,   773,   458,   458,   458,   458,   455,
     457,     0,     0,     0,     0,  1336,     0,   553,   530,   532,
     540,   553,   558,   775,   582,   776,   933,     0,   504,     0,
     504,     0,  1062,  1075,     0,  1093,     0,   138,   120,   140,
     139,     0,   147,     0,   919,     0,   138,   122,     0,   141,
       0,  1092,     0,   153,   470,     0,   854,   478,     0,   472,
     498,   497,     0,   488,   520,   486,     0,   526,     0,     0,
       0,   251,     0,     0,     0,   207,     0,     0,   315,     0,
     302,    76,     0,     0,     0,    50,     0,    68,    60,    46,
      74,     0,     0,    79,     0,    72,    89,    90,    88,    93,
       0,   235,   217,   248,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   770,   771,   768,
     467,   914,   415,   416,   172,   414,   309,     0,     0,  1004,
     987,     0,     0,   160,   300,     0,   275,   271,     0,   269,
     268,   270,     0,  1125,   165,     0,  1120,  1003,     0,     0,
     998,   366,     0,   418,     0,   377,   413,   402,   407,     0,
     411,   409,   408,   403,   406,     0,     0,   596,     0,   662,
     663,   664,   665,   666,   667,     0,   661,   605,   631,     0,
     905,   901,     0,   777,   873,     0,   863,   885,   884,   734,
     746,   747,   748,   886,     0,     0,     0,   743,   744,   745,
     737,   738,   739,   740,   741,   742,   749,   895,   894,   888,
     889,   649,   647,     0,   799,   800,   801,   896,   834,   668,
     950,   674,     0,     0,   701,   900,   720,     0,     0,     0,
     697,   853,     0,     0,     0,     0,     0,   706,     0,     0,
       0,   819,   814,   815,     0,     0,     0,     0,   449,   448,
     454,   553,   558,     0,   432,     0,   540,     0,   552,   538,
     551,     0,     0,   564,   562,     0,   564,     0,   564,     0,
     534,     0,   554,   536,   551,     0,   574,   934,   583,     0,
     511,   767,   511,     0,   445,  1091,     0,  1087,     0,     0,
       0,   128,   125,   115,     0,     0,   150,   138,   129,     0,
     471,   476,   477,   487,   932,   108,   207,     0,     0,    57,
       0,   317,   263,   295,   278,     0,     0,     0,   208,     0,
     283,     0,    49,    69,     0,    65,     0,    94,     0,     0,
       0,     0,     0,    52,    64,     0,    47,     0,   366,   366,
      55,   262,   214,  1285,     0,   840,   841,   212,   304,   209,
     310,   211,   213,   613,   210,   307,   104,  1010,     0,   102,
       0,  1008,   111,   109,   106,  1012,     0,   396,   376,     0,
       0,  1229,     0,  1004,   158,   297,     0,   325,   247,   320,
       0,  1124,  1122,     0,  1119,     0,     0,     0,   341,     0,
     390,     0,   410,     0,   592,   597,   670,   904,   793,   803,
     883,     0,     0,     0,     0,   798,   951,   726,   724,   721,
       0,   722,   705,     0,     0,   703,   699,     0,   731,   805,
       0,   821,   818,   453,   452,   451,   450,   539,   537,     0,
     542,   961,   960,   549,     0,   533,     0,   563,   559,     0,
     560,     0,     0,   561,     0,     0,   535,     0,   960,     0,
     581,     0,     0,   810,   947,   810,  1063,   137,   117,     0,
     118,   148,     0,     0,     0,     0,   142,   370,     0,   313,
      59,     0,   295,     0,   207,   280,   279,   282,   277,   281,
     284,     0,     0,     0,     0,     0,   264,     0,     0,     0,
     228,     0,     0,   295,   301,   224,   225,   334,     0,     0,
       0,    61,    51,    48,    53,    62,     0,     0,    63,    66,
     589,    78,    71,   613,   613,     0,     0,     0,   769,   372,
     379,   172,     0,     0,     0,     0,   297,     0,     0,     0,
    1124,     0,     0,   205,     0,   244,     0,   162,  1123,     0,
    1112,     0,   996,   997,     0,     0,   378,   593,   752,     0,
       0,     0,   723,   727,   725,   707,   807,     0,   467,   577,
       0,   580,   541,     0,     0,   543,     0,     0,   545,   547,
       0,     0,     0,     0,   585,     0,     0,     0,   937,     0,
     503,   505,   508,   507,   510,     0,   434,   433,     0,     0,
       0,   151,     0,   144,   144,     0,   130,   855,     0,   207,
       0,   294,   314,   242,     0,     0,   226,     0,   232,     0,
     266,   267,   265,   227,   295,   300,   229,   335,     0,    70,
       0,    86,   613,     0,   306,   112,   110,   396,     0,  1004,
    1119,     0,     0,   271,   165,  1121,   260,   253,   254,   255,
     256,   257,   258,   259,   274,   273,   245,   246,     0,     0,
       0,   998,     0,   753,     0,   754,     0,   824,   582,     0,
       0,   576,     0,   550,   566,     0,   546,   544,     0,   555,
       0,   589,     0,   557,   509,     0,   809,   811,     0,     0,
     124,     0,   584,     0,     0,   146,   146,   132,     0,   300,
     316,     0,   286,   293,   285,     0,     0,   223,     0,   230,
     324,   216,   588,     0,    73,     0,   311,   371,   375,     0,
    1113,     0,  1119,   247,  1124,     0,  1116,     0,     0,  1004,
     755,   820,     0,     0,     0,   575,   578,     0,   548,     0,
       0,   586,   587,   556,   506,     0,     0,   119,   144,   123,
     152,   143,   475,   145,   475,     0,   324,   272,     0,     0,
     250,   216,     0,   241,     0,    67,    85,   312,     0,   297,
    1114,   206,   163,  1117,  1118,     0,   584,  1412,  1174,  1384,
       0,   822,   825,   823,   817,     0,   565,   573,   812,   813,
     146,   478,   478,   584,   241,   287,   292,     0,   231,   233,
     321,   322,   323,     0,   237,   234,   238,     0,  1119,     0,
     994,     0,   829,   828,   827,   831,   830,   579,     0,   571,
     475,   135,   134,   131,   207,   249,     0,     0,     0,   239,
       0,   240,   215,  1115,  1004,     0,     0,   478,   318,   220,
       0,   219,     0,   303,   236,   584,   826,     0,   136,   218,
     222,   221,   995,   572
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    34,    35,    36,    37,  1847,  1848,  1849,  1557,   801,
    2464,  1558,   802,   803,  1851,    38,    39,  1205,   499,  1495,
    1148,  2224,    41,  1802,  1500,  1806,  2351,  2047,  1801,  1808,
    2445,  2502,  1803,  1501,  2352,  1502,    42,    43,  1273,    44,
     620,    45,  1274,  1232,   982,   821,  1222,   971,    46,    80,
      47,  1838,  2108,  2515,  1861,  2593,  2254,  2255,  1559,  2554,
    2555,  1840,  1903,  1214,  2548,  1618,  2404,  1563,  1546,  2256,
    1627,  2361,  2137,  1560,  2078,  1619,  2241,  2451,  1281,  1620,
    2452,  2234,  1621,  1257,  1277,  2080,  2556,  1564,  1258,  2109,
    1201,  1622,  2513,  1623,   464,  2259,    48,   491,   492,   611,
     952,   493,   500,    50,  1609,  2281,  1914,  2282,  1649,  1603,
     980,  1646,  1302,  1261,   981,   455,  1316,  1915,  1884,  1303,
     501,   706,    53,    54,    55,   548,   542,   543,  1121,  1473,
    1771,   771,   523,   524,   558,  1251,  1155,  1156,  1508,  1819,
    1180,  1181,   780,   781,  1168,  1172,  1173,  1521,  1514,  1161,
    2040,  2340,  2341,  2342,  2213,  1176,  1177,   783,   784,   785,
    1185,  1531,    57,  1477,  1778,  1779,  1780,  2018,  2019,  2033,
    2029,  2198,  2328,  1781,  2206,  2569,  1782,  2319,  2320,  2421,
    2036,  1788,  2333,  2334,  2381,  1008,  1322,  1009,   707,  1010,
    1334,   708,  1046,  1012,   709,   710,   711,  1015,   712,   713,
     714,   715,  1029,   716,   717,  1063,  1330,  1331,   756,  1386,
     719,   720,   721,  1784,   722,  1116,  1463,  2346,  2436,  2437,
    1764,  2002,  2181,  2318,  2484,  2531,  2532,   723,  1460,  1111,
    1112,   724,  2111,  1114,  1379,  1405,   836,   837,  1020,  1356,
    1357,  1382,  1691,  1389,  1394,  1718,  1719,  1406,  1429,   725,
    1341,  1342,  1675,  1031,   726,   582,   841,   583,  1027,  1424,
     734,   727,   728,  1527,   535,  2324,   616,   921,   729,   730,
     731,   732,   733,  2193,   448,  2503,   954,   761,   839,  1561,
    1420,    58,   639,   587,    59,   933,  1268,    60,  2303,  2147,
     942,  1283,  1631,   465,    61,    62,    63,    64,    65,   565,
     974,   502,   975,   976,   626,    66,   983,   628,   629,    67,
     529,   530,   984,  1132,   985,    68,   510,    69,   752,   539,
     753,   755,   504,   768,  1797,  1491,    71,    72,   517,   518,
      73,    74,   531,    75,    76,  2300,   505,  1906,   939,   471,
     450,   451,   926
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2291
static const int yypact[] =
{
    4164,   398,   431, -2291, -2291,   398, 28302, -2291,   398,    54,
    2158, 30098, -2291,  3791,   398, 34588,   888,   166,   419,   639,
   34588, 34588, 30547,   398,   195, 35037, -2291,   398, 30996,   -44,
     196, 35486, 34588,  1490,   668,   280, -2291, -2291, -2291, -2291,
   -2291,    23, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291,   124, -2291,   122,   134,   376,   307, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291,   377, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, 31445, -2291, -2291, -2291, -2291, -2291,
   -2291, 35935, 34588, 36384, 31894, 36833, -2291,    71, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291,   203,  -163, -2291,    76,
   -2291, -2291, -2291, -2291,  1490, 34588,   531,   571,   580, 37282,
   -2291, -2291, -2291, -2291,   -45,   724, -2291, -2291, 32343, -2291,
   -2291, -2291,   683, -2291, -2291,   560, -2291,    31, -2291,   508,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,   623, -2291,
   -2291, 37731, 38180, 38629, -2291,   500,   -10,   359, 17650, -2291,
   -2291, -2291, -2291,   377, -2291, -2291,   639,   639, -2291, -2291,
   -2291,   208,   509, -2291,   520,   781, -2291, -2291, -2291,   532,
   -2291, -2291,   743,  7430,  7430, 39078,   639, 39078,   573, -2291,
   -2291,   257, -2291, 19005, -2291,   579,  -163, -2291,    80,   877,
    9785, 34588,   576, -2291,   600,   576,   618,   619,   376, -2291,
    4164,   904,   907, 30996,   226,   226,  1064,   226,   751,   967,
   -2291,  1416, -2291,   705, -2291, 34588, -2291,   680,   926,   532,
    1004,   820,   864,  1036, 21816,  1041,   857,  1046,  1152,  5546,
    9785, 22281, -2291,  -163, -2291, -2291, -2291,   738, -2291,   760,
   -2291, -2291, -2291, -2291,   -10,   959, -2291,   809, 39527, 39976,
   34588,  1158, -2291, -2291, -2291, -2291,   815, -2291, -2291,   207,
    1109,    41,   794, -2291,  1116,   139, -2291,  1121,  1012,  9785,
   -2291,   910, -2291, -2291,   196, -2291,   157, -2291, -2291, 24077,
   -2291, -2291, -2291,   359,   849, -2291, 24077,  9785, 44017,  1254,
   -2291,  1071, 34588,   858, -2291, -2291, -2291, -2291, -2291, -2291,
    1303,    91,  1316,  9785,   868,    91,    91,   883,  1172, -2291,
   -2291, -2291,    81,   894,   901, -2291,    82,    82, -2291,  1062,
     908,   912, -2291,    83,  1376,  1381,    99,   919,   921,   659,
      91,  9785, -2291,   923,    82,   924,   925,   930,  1394,   947,
   -2291,  1414,   957,    77,   130,   958,   960, -2291, -2291,   110,
    9785,  9785,  9785, -2291,  6488, -2291,  -163,   639, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291,   961, -2291,   111,  4628, -2291,
     998, -2291, -2291,  1153,  9785, -2291, -2291,   -67, -2291,   112,
   -2291, -2291, -2291,  -163,  1226,   964, -2291, -2291, -2291,   147,
    1338, 23179, 23628, 34588, -2291, -2291,  -163, -2291, -2291, -2291,
   -2291, -2291, -2291,   365, -2291,   377, 25111,   491,   576, 34588,
   34588,  1403, -2291, -2291, -2291, 30996, 34588, 40425,  1090, -2291,
   -2291,   376,   376,  9785,   376,   453,   -39,  7901, 10256,  1282,
    1179,   113,    87,  1284, -2291,  1183,   751,   967,  9785,   600,
   -2291,  1225, 34588, 28751,   807,   812,   979,  1059,   981,   -64,
    1369, -2291,   982, -2291,  1068, 34588, 44452,   129, -2291,  1407,
     129,   129,   565,  1410,  1075,   165,  1230,   284,   324,   982,
    1883, -2291, 30996,   104,   502,   982, 34588,  1085,   536,   982,
    9785,  9785,  9785,  1006, -2291, 25111,  -108, -2291,   717,   745,
   21831,  1005, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,  1089, 34588,
    1049,   -84,  1334,  1391, 34588,  1236,  1883,  1237,  1024,  1460,
     760, -2291, 40874, -2291, -2291, -2291, -2291, -2291, 34588, -2291,
   -2291, 34588, -2291, 26057,  1026, 34588, 34588, -2291, 34588, 34588,
     503, 41323,   359, 27853, -2291, -2291, -2291, -2291,   297,   806,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, 26057,
   -2291,  2334, -2291, -2291, -2291,  1025,   540, -2291, -2291,  1078,
   -2291,  1078,  1078,  1033,  1033,  1038, -2291, -2291, -2291,   659,
    1078,  1033, -2291, 44452, -2291,   402,   429, -2291, -2291,  1473,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,     0,
     549,   624, -2291,  1490, -2291, -2291,  9785,  -163, -2291,  1043,
   25111,  1088,  9785, -2291, -2291,  9785,  1050,  1511,  1511,  9785,
   -2291, -2291, -2291, -2291,   696,  1511, -2291,  1511,  1511,  1078,
    1078, -2291, 21764,  9785, -2291, 20811,  9785, 12611,  8372,  9785,
    1134,  1138,  1511, -2291,  1511, -2291,  9785,  6959, 21764,  1516,
    1516,  1719,  2691,  1061,  -163,  -163, -2291,  1511,    59,    51,
   -2291,    94, 44017,  9785,  9785,  9785,  9785, 25608,  1149,    52,
   34588,  9785,  1069,   863, -2291,  9785,  1283, -2291,  1073,  9785,
    1156,    74,  9785,  9785,  9785,  9785,  9785,  9785,  9785,  9785,
    9785, -2291, -2291, 14484,   144,  1374,  1386,  -102,   199, 32792,
    7430,  1390,  5546, -2291,    72,  1390, -2291, -2291, -2291, -2291,
     118, -2291, -2291, -2291, -2291,  1025, -2291,  1025,  1082, 34588,
      80, 29649, -2291,  9785, -2291,   577,  1093,  1144,   538,  1522,
   34588, -2291, 19456,  1358, -2291,  1091, -2291, 24523,  1358, -2291,
   -2291, 13071,  1212,  1357,  1304, -2291, -2291, -2291,  1101, 25111,
   10727, 10727, -2291,   611, 25111,   728, -2291, -2291, -2291, -2291,
   -2291, -2291,   467, -2291, 34588,   361,  1282,    87,   663, -2291,
   -2291,  1163,  1106, 41772, 34588,  1363,  1325,  1368,  -136, -2291,
   -2291, -2291, 44017, -2291, 34588, 34588, 42221, 42670, 26506, 34588,
   26057, -2291, -2291, -2291, -2291, 34588,   819, 34588, 21846, -2291,
   -2291, -2291,   129, -2291, -2291, -2291, -2291, -2291, 34588, 34588,
   -2291, -2291,   129, 34588, 34588,   129, -2291,  1214, 34588, 34588,
   34588, 34588,  1362, 34588, 34588,   347,   347,  1308, -2291,  8843,
    1114, -2291,  9785,  9785, -2291,  9785,  1286, -2291,   669, -2291,
    1328,    55,  1170, 34588, 34588,  1609, -2291, -2291, -2291, -2291,
   -2291,  1127,  1452, -2291,  1883,  1453, 29200,   768,   641,  1174,
    1351, -2291, -2291,  1339,    41, -2291, -2291, 26057,   139, -2291,
    1342,   100, -2291,  1359,   760,  1575, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291,   677, 17199, -2291, -2291,  1578,   639,  1578,
     505, -2291, -2291,  1578, -2291,  1578, -2291, 24077, -2291,  9785,
    1581,  1150,  1155,  1235,  1238,  1242, -2291,  1164,  1245,  1511,
   -2291, -2291, -2291, 44017, -2291,   656, -2291,   681, -2291,  9785,
    9785,     7, -2291, 24594,   688,  9785,  1157,  1171,   690, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291,  1176,  1478, -2291,  1184,
    1185,  1193, -2291, -2291,  4570, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,  1196,
    1198, 24635,  1200, 12611, 12611,  6488,  2403, -2291, 12611,  1202,
   -2291,   706, 24541,  1201,  1203,  1223,  1224,  1216,  1218, 24653,
    9314,  9785,  9314,  9314, 24898,  1201,  1243, -2291,  9785,  1248,
    1249,  1251, -2291, -2291,  3016,  3016,  3016, 21764, -2291, -2291,
   -2291,  1228, -2291, 12611, 12611, -2291,  2505,  6488, -2291, -2291,
    1518, -2291,    22, -2291,  1246, -2291, -2291,  4334, -2291, 20811,
   25160,  9785,    89,  9785,  1069,  9785,  1333,  3016,  3016,  3016,
     178,   178,   136,   136,   136,   730,   199, -2291, -2291, -2291,
    1255,  1257,  1258,  1461,   947,  9785, -2291,   836,   855, 34588,
    2836,  3743,  3870, -2291, -2291, -2291, 15846,  1301,  -108,  1301,
    1511,    51, -2291,   600, -2291, -2291, -2291, 25111, -2291,  1490,
   15846,  1302,  1319,   -99, 18102,  1472, -2291, 34588, -2291, 34588,
   -2291,   -51,  1285, -2291,  9785, -2291, -2291,  1944,  1287,  1477,
    1481,   895,   895,   611,  1483, -2291, -2291,  1331, -2291,  9785,
     771, -2291,   834, -2291, -2291, -2291, -2291,  1289, -2291, -2291,
    1525, -2291, -2291, -2291, -2291,  1370,   982,  9785,  1505, -2291,
     101,  1290,  1616,   281,  1577, 34588, -2291,  1495, -2291,   862,
    1622,   100,  1624,   100, 26057, 26057, 26057,   710, -2291, -2291,
     639, -2291, -2291,   720, -2291,   293, -2291, -2291, -2291,  1383,
     662,   982,  1883, -2291, -2291, -2291, -2291, -2291, -2291, -2291,
     119,   746,   982,  1384, -2291,  1385, -2291,  1387,   748,   982,
   -2291, -2291,  1309,  1311,  1314,  9785, -2291, -2291, 25111, 25111,
   25111,  1317, -2291,   127, -2291, 34588, -2291, -2291, -2291,  1286,
   34588,   760, -2291,   485, 34588, 34588, 34588, 34588, -2291, -2291,
   -2291,  1318,  1313, -2291, 44017,  -112,  1521,  1524, 34588,  1361,
     981,  1758,  1647, 34588, -2291, -2291, -2291, 34588, -2291,  1657,
    1490, -2291, 26057, -2291, 27404, -2291, -2291, -2291, -2291,   639,
   -2291,   639,  1538, 34588, 22730,   639,   639, -2291,  1341,  1155,
    1511,   109,   449,   -24,  1463,  1511,  1567,  1340, -2291, -2291,
   -2291,   725, 25028,  9785, -2291,  1673, 44017, -2291,  4856, -2291,
   -2291, -2291, -2291,  9785, -2291, -2291, -2291,  9785, -2291, 20811,
    9785,  1649, -2291,  1802,  1802,  2691, 44017, 12611, 12611, 12611,
   12611,   481,   924, 12611, 12611, 12611, 12611, 12611, 12611, 12611,
   12611, 12611, 13542,   249, -2291, -2291,  9785,  9785,  1655,  1649,
   -2291, -2291, -2291,  -143,  -143, 44017,  1347,  1201,  1348,  1349,
    9785, -2291,  -163,  5029, -2291,  1346,   639,  9785,  2424,  3515,
    9785,   734,  9785,  1656, -2291, -2291,  1354, -2291, -2291, 44017,
    9785,  1356,  4694, 12611, 12611,  4806, -2291,  5066,  9785,  6488,
   -2291,  1308,  1398, 19907, -2291,  1450,  1450,  1450,  1450, -2291,
   -2291, 34588, 34588, 34588, 16297,  1664, 15394, 33241,  1360,   692,
   -2291, 33241, 33690, -2291,  1382, -2291,  -163,  9785,  1665,  1371,
    1665,  1372, -2291, -2291,  1377,  1360,  9785,  1503, -2291, -2291,
   -2291,  1422, -2291,   753, -2291,  1763,  1503, -2291,   754, -2291,
   19456,  1302,  9785,  -163, -2291,  1379, -2291,  1287,   499, -2291,
   -2291, -2291,  1580, -2291, -2291, -2291, 34588, -2291, 34588, 21268,
    1705, -2291, 34588, 34588, 34588, -2291, 34588,   758,   678,  1389,
   -2291,   678,  1693,    85,   981,   165,  4493,   -31, -2291, -2291,
   -2291,  1454, 34588, -2291, 34588, -2291, -2291, -2291, -2291, -2291,
   26506, -2291, -2291, -2291, 26057, 20361, 26057, 34588, 34588, 34588,
   34588, 34588, 34588, 34588, 34588, 34588, 34588, -2291, -2291, -2291,
    1308, -2291, -2291, -2291,   324, -2291, -2291,   127,  1396,  1174,
    1391, 43119,   779,  1883,  1399,  1834, -2291,   768, 29200, -2291,
   -2291, -2291,  1792, -2291,   500,    97, -2291, -2291,  1490, 34588,
    1464,   100, 34588, -2291,   783, -2291, -2291, -2291, -2291, 34588,
    1400, -2291,  1400, -2291, -2291,  1511,  1411, -2291,  1413, -2291,
   -2291, -2291, -2291, -2291, -2291,  1408, -2291, -2291, -2291,  9785,
   25111, -2291,  1418, -2291, 25111, 21286, -2291, 25111,  1655, -2291,
    2477,  2477,  2477,   950,  1718,   181,  1417,  2477,  2477,  2477,
     173,   173,   135,   135,   135,  1802,   249, 25111, 25111, -2291,
   -2291, -2291, -2291,  1419, -2291, -2291, -2291,  1201, -2291,    51,
   -2291,   693,  9785,  9785,   405, -2291,  4098,  9785, 44017,   788,
     405,   221,  9785,  4890,  4932,  9785,  9785, 25000, 21305,  1421,
    9785, 43568, -2291, -2291, 34588, 34588, 34588, 34588, -2291, -2291,
   -2291, 33241, 33690,  1424, 14942,   692,  1425, 34139, -2291, -2291,
    1427, 15846,  1685,  1621, -2291, 15846,  1621,    38,  1621,  1688,
    1520, 18554, -2291, -2291,  1434,  1629, -2291,   533, 25111,  1852,
    1731,   639,  1731,   639, -2291, 25111,  7430, -2291,  1490,  1210,
   34588,  -163,  -105, -2291,  1456, 34588, -2291,  1503, 25111, 20811,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, 34588,   789, -2291,
     793,   678, -2291,  1480, -2291,   489,  1717,    11, -2291, 26057,
    1271,   252, -2291,  1734,  1660, -2291,   129, -2291,  9785,   252,
    1662,    88, 34588, -2291, -2291,  1219, -2291, 44017,   100,   100,
   -2291, -2291, -2291,  1379, 44452,   297,   806, -2291, -2291, -2291,
   -2291, -2291, -2291,   624, -2291,  1467, -2291, -2291,  1541, -2291,
    1542, -2291, -2291, -2291, -2291, -2291,  1465,   849,    45, 34588,
    1900,  1686,  1475,  1174, -2291, 29200,  1278,   126,  1524, -2291,
     116,  1361, -2291,  1840,  1515,  1681, 34588,  1482, -2291,  1916,
   -2291, 27404,  1400,  1487, -2291, -2291, -2291, 25111, -2291, -2291,
   -2291, 12611,  1791,  1489, 44017, -2291, -2291,   405,   405,  4098,
     814, -2291,   405,  9785,  9785,   405,   405,  9785, -2291, -2291,
   21339,  1676, -2291, -2291, -2291, -2291, -2291, -2291, -2291, 26955,
   33241, -2291,  1496, -2291, 34588,   692, 15846, -2291, -2291,  1074,
   -2291, 15846,  1752, -2291, 15846, 28302, -2291, 34588,  1497, 34588,
   -2291, 11198,  9785,  1536, -2291,  1536, -2291,   964, -2291,   -99,
   -2291, -2291,  1884, 16748,  1839,  9785, -2291, -2291,  1500,   678,
   -2291,  1658,  1480,  1502, -2291, -2291, -2291, -2291, -2291, -2291,
   -2291,   821,  1506, 34588, 34588, 12611, -2291,   252,   590,    98,
   -2291,  1759, 34588,  1480, -2291, -2291, -2291, -2291,  1861,  1940,
    1832, -2291, -2291, 25111, -2291, -2291,  1511,  1511, -2291, -2291,
    1908, -2291, -2291,   624,   463, 20361, 34588, 34588, -2291, -2291,
   -2291,   324,  1865,   827,  1490,  1838, 29200,  1960,  1527, 34588,
    1361,    86,    86, -2291,  1663, -2291,  1666, -2291, -2291,   143,
   -2291, 34588, -2291, -2291, 16748,  1490, -2291, -2291,  3111, 12611,
   44017,   828, -2291,   405,   405,   405, -2291,  1946,  1308, -2291,
     832,  1962, -2291, 34588,   840, -2291,  9785,  1532, -2291, -2291,
   15846,  1074,  1534,   846, -2291, 44017, 34588,   853, 44017,  6017,
    1531, -2291, -2291, 25111, 25111, 34588, -2291, -2291,  1588, 34588,
    9785, -2291,   859,  1934,    57,   -53, 25111, -2291, 34588, -2291,
   26057, -2291,   678, -2291, 26057,  9785, -2291,    93,   950,  1973,
   -2291, -2291, -2291, -2291,  1480,   760, -2291, -2291,  1829, -2291,
   34588,  1598,   480,  1612, -2291, -2291, -2291,   849,   639,  1174,
    1515, 34588,  1490,   768,   500, -2291, -2291, -2291, -2291, -2291,
   -2291, -2291, -2291, -2291, -2291, -2291, -2291, -2291,  1952,  1742,
    1954,  1464,   866,  3111,   875, -2291,  9785,   -16,  1382, 26955,
    1553, -2291,   876, -2291, 25111, 34588, -2291, -2291,  9785, -2291,
   34588,  1908,   880, -2291, -2291, 11198,  1550, -2291,  1988,  1490,
   -2291, 21357,  1301, 16748, 34588, 34588, 34588, -2291,  1678,   760,
     678,   881, -2291,  1573, -2291, 21398,  1767, -2291,  1853, -2291,
    1798,  1566, -2291,  9785, -2291,  1638, -2291, -2291, -2291,  2003,
   -2291,  1574,  1515,  1524,  1361,  1771, -2291,  1773,  1582,  1174,
   -2291,  1201, 11669, 11669,  1579, -2291, -2291, 34588, -2291,   889,
     891, -2291, -2291, -2291, -2291, 34588,  1586, -2291,  1934, -2291,
   -2291, -2291,   561, -2291,   561, 19456,  1798, -2291, 26057, 20361,
    1795,  1566,    58,  1779,  1883, -2291, 25111, -2291,  1490, 29200,
   -2291, -2291, -2291, -2291, -2291, 16748,  1301, 14013,  1715,    67,
   24560, -2291, -2291, -2291, -2291,   898, -2291,  1735, -2291, -2291,
   34588,  1287,  1287,  -155,  1779, -2291, -2291,  1863, -2291, -2291,
   -2291, -2291, -2291,   114,  1793, -2291,  1796,  1789,  1515,   899,
   -2291,  2026, -2291, -2291, -2291, -2291, -2291, -2291,  1591, -2291,
     561, -2291, -2291, -2291, -2291, -2291,   160,   160,  1945, -2291,
    1661, -2291, -2291, -2291,  1174, 12140,  9785,  1287,   678, -2291,
    2045, -2291,   123, -2291, -2291,  1301, -2291, 21432, -2291, -2291,
   -2291, -2291, -2291, -2291
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2291, -2291, -2291,  1526, -2291, -2291, -2291,   227, -2291,   861,
   -2291,   215,  -521,   530, -2291, -2291, -2291,  -749,    20, -2291,
   -2291, -2291, -2291,    30,   271, -2291,  -360, -1658,  -135, -2291,
   -2061, -2206, -2291,  -419, -1934, -1439, -2291,  -914,   192, -2291,
   -1837, -2291,  -573,  -810,  -620,  -792, -2291,    -3, -2291,  1009,
    -897, -1510, -2144,  -422, -2291,  -487, -2291,  -275, -1511,  -463,
    -450, -2291, -2032,  -771, -2291,  1306,  -197, -2291,   553, -2291,
   -1832, -2291, -2291,   542, -2291,  -776, -2291, -2291, -1600,   206,
    -403, -2026, -2036,   506,  -586, -2291,  -447,   246, -1472, -2291,
     572, -2291,  -393, -2291,  -449, -1906, -2291, -2291, -2291,  1167,
    -546, -2291,    21, -2291, -2291, -2291, -2291, -2291,  -501,   507,
   -1984, -2291,   478, -2291, -2291, -2291, -2291,   -30,   238, -2291,
       4,   438,   -26,    14,    24,    33,    40,  1367,  1393, -2291,
   -1113,   606, -2291, -2291,  -556,   -40, -2291,   626, -2249, -1767,
    -313,   941,  1350,  1352, -2291,   616,   976, -1066, -1065, -2291,
     348, -2291,  -296, -2291,   102,  -307,   956, -2291,  1364, -2291,
   -2291, -2291, -2291, -1016,   658, -1697,   370, -1689, -1615,   137,
     125,  -752,  -181,    16, -2291, -2291,   382,  -268, -2291, -2291,
    -259, -1461, -2079,  -270,  -269, -1058,   841,  -790, -2291, -2291,
    -655,  -322, -2291, -2291, -2291,  -157,    39, -2291, -2291,   824,
     922, -2291,  -244,  1648,  -409,  -657, -1039,  -812,  2588, -1322,
    1684,    36, -2291, -1406, -1296, -2291, -2291,   -52, -2291,  -330,
   -2291,  -327, -2291, -2291, -2291,  -317, -2290,  1053, -2291, -1004,
   -2291,  3015,   665, -2291, -1376,  -506,  -545,  -773, -1701, -2291,
   -2291, -2291, -2291, -2291, -2291, -1392, -1546,  -513,   729, -2291,
   -2291,   838, -2291, -2291, -2291,  -560,   927,  -511,  -675,   735,
   -2291,  -514,  1060, -2291,  1790,  -486,   408,  -827,    26, -2291,
    2017,   200,  1576, -2291,  1888,  -489,  -995,  -737, -2291,  -559,
   -2291, -2291, -2291,  -948, -2291,   574, -2291,  -894, -2291,  -227,
   -2291, -2291, -1831, -2291, -2291, -2291, -2291, -2291, -2291,  -349,
   -2291,  -426,  -420, -2291, -2291,    -1,  -616,  1229, -2291, -2291,
     848, -2291,   874, -2291,   289, -2291, -2291, -2291,  1054, -2291,
   -2291, -2291,    35,  1428,   385, -2291,  1063, -2291, -2291, -2291,
   -2291, -2291,   261, -2291,  -892, -2229,    64, -1986,  -930,    -6,
    -444,   242, -1809
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1466
static const yytype_int16 yytable[] =
{
     449,   820,   613,   930,    51,   786,   615,   547,  1235,   970,
     735,  1040,  1041,   977,   559,   503,  1219,  1200,  1790,  1266,
      40,    49,   922,   927,  1413,   746,  1335,  1211,  1236,  1054,
    1074,  1295,   446,    56,   757,    70,  1267,  1065,  1841,  1269,
    1412,  1270,   445,  1856,   534,  1858,  1207,   621,  1989,    56,
    2060,  1378,  1189,   819,   631,   825,  2114,   829,  2130,  1247,
    1809,  1693,  1694,  1751,    77,  2138,  1713,  2141,   648,   957,
     561,   622,   545,  1837,  1240,  1336,  -962,  -940,   625,  2015,
     562,  -963,  -654,   747,  -962,  -962, -1465,  -613,  -626,  -963,
    -963,  1422,   986,  2032, -1465, -1465,  -646,   648,   949,  2288,
     576,  1738,  1739,   453,  -651,  1523,  2293,  1323,  1526,  1479,
       3,     4,  2396,   960,  1476,  -641,   508,   508,   648,  1129,
    -838,  1442,   537,   508,  -420,  2238,  1286,  -838,  1422,  2444,
    2337,  2384,   508,   964,  -423,  -654,   606,   924,   648,  1119,
     551,  1673,  1892,  2279,  1547,   931,  1696,  1082,  2053,  1743,
    1126,   964,   508,  1899,   633,  2297,   648,   949,  1323,  2242,
     456,  2470,  2222,  2397,  -380,   556,  2030,  1192,  1212,  -172,
    1457,  2398,  1969,  1162,  -172,  1744,  1088,  1458,  1203,  1324,
    1785,  1920,  1922,  2264,  1696,   631,   927,  1220,  1238,  1082,
    1223,  1224,   631,  1203,  1785,  1075,   949,  2082,  1073,  2399,
    2447,  2408,  2142,  1869,  2023,  2245,  2359,   978,  1090,  2409,
    1082,  1163,  2372,  1320,  1932,  -420,   457,  2589,  1088,   509,
    1607,   521,  1124,   552,  2550,  -423,  2563,  2376,  1262,  1019,
    1324,  2576,  1464,  2294,  2024,  2600,  2072,  2561,  1325,  1088,
    2504,  1326,   775,  2520,   748,   779,   749,  -857,  2295,  2201,
    1090,   782,   769,  2541,  -857,  2542,  1443,  2432,  2026,  1127,
    1696,  1444,  2247,  1195,   554,  2083,  2400,   597,   775,  1164,
    2291,  1090,   506,  1787,  1145,  1668,  1544,  2401,  1799,  1745,
    1250,  2257,  1188,   519,  1746,  1245,  1246,  2170,   944,  1325,
    1060,  2482,  1326,  2446,  1845,  2596,  1445,   631,   631,  1948,
     598,  1298,  2287,   580,  2395,  2258,   648,   581,  2162,  2145,
     777,  1061,  1800,  1946,  2292,  1165,  1011,  1810,  1327,  2483,
    2095,  2587,   522,  2032,  2195,  2071,   555,  1970,  2199,  2583,
    1130,   945,  1545,   599,  2570,   569,   777,  2084,  1040,  1041,
    1263,  2369,  1327,  2551,  1213,  2456,  1054,  2143,  2459,  1065,
    2250,   778,   998,   770,  1279,  2373,  1210,  2448,  1772,  1773,
    2068,  2564,  2070,  2223,  1249,  2546,  1465,   950,  2028,  2410,
    2412,  1166,   460,  1128,   461,  1950,  1951,  1952,  1953,   600,
    2601,  1957,  1958,  1959,  1960,  1961,  1962,  1963,  1964,  1965,
    1966,  -420,  2251,  1327,   922,   556,  2187,  1019,   463,  2227,
    1197,  -423,  2160,  2467,  1210,  1120,  1141,  2252,  2535,   607,
    2590,  1033,  1034,  1081,  2296,  2552,  1082,  1539,  1747,   469,
    1304,  1810,   740,   495,   538,  2239,   950,  1423,  1748,   512,
    1446,  1993,  1994,   553,  1340,  1378,  1051,  2540,    52,   544,
     544,  2521,  1792,  2163,  1608,  1088,  1523,  2152,  1822,  1328,
     496,  -420, -1466,  2402,    52,  -838,  2403,  2280,   586,   613,
    1635,  -423,  1285,  2311,  1753,   950,  2114,  1338,  1329,  1288,
    1291,   546,   547,  1186,   584,   585,  1596,  1090,  1785,  1187,
    1785,  1013,  1236,  2288,  1011,  1811,  2591,    56,  2522,   588,
     572,   946,   630,  1239,   560,  1882,  1883,   627,  2253,  2325,
    1328,  2322,   750,  1816,  2329,  1459,  1198,  2331,  1870,   924,
    1060,  2592,  1028,   951,  1338,   927,  1212,   449,   449,   631,
    1337,   787,   454,   580,  2577,   507,   557,   581,  1419,  1344,
      56,  1061,  1410,  1348,   449,   924,  1296,   751,   580,  -962,
    -940,  1794,   581,   625,  -963,  1062,  1596,  2266,  2267, -1465,
    1039,  1045,  1391,  1393,    51,  -420,  2229,  2474,  2469,  -646,
    1075,  2473,   561,  1060,   927,  -423,  1547,  -651,  2240,   767,
      40,    49,   562,   449,   449,   923,  1927,  1478,  -641,  1078,
    1122,   758,  -857,    56,  1061,    70,  1480, -1466,   968,   969,
     947,  2559, -1466,  -420,  1019,  -420,  1230,  1505,  1064,  1711,
    1110,  1425,  1573,  -423,  2235,  -423,   968,   969,  1954,  2414,
    1159,   956,  1576,   449,    77,  1579,  2226,  1529,  1942,  1231,
     556,    81,  1234,   630,  -172,  -172,   962, -1466,  1929,   963,
     630,   449,  1022,  2426,  1708,  1709,  1710,  1711,  1949,  1107,
    1108,  1109,  1110,   924,   508,  1572,   741,   449,  2526,  1013,
    1492,  1565,  2004,  2005,  2006,  2007,  2061,  2283,  1105,  1106,
    1107,  1108,  1109,  1110,   540,   636,    56,  1973,   549,  1225,
    1536,   579,  2236,  1019,  1098,   449,   637,  1014,   547,  1162,
    1669,  1011,  1506,  2228,  1645,  1378,  1895,  1930,  1647,  1592,
    1593,  1594,  1213,  1544,   449,   449,   449,  1571,   449,  1349,
    2114,   508,  1160,    24,  1082,  2370,   634,   635,  1706,  1707,
    1708,  1709,  1710,  1711,   742,  2062,  1582,  1163,   449,  1530,
      24,  1589,  1049,  1050,  2362,  1785,   737,   642,   922,  1785,
    -971,  -971,  1732,  1955,  1212,   630,   630,    28,  1634,  1574,
     632,  1082,  1636,  1956,  1577,  1638,  1793,  1033,  1034,  1834,
    1865,   550,  1210,  2595,    28,  1230,  1051,  1652,  1252,  1253,
    1011, -1466,  1653,  1866,   924,  1090,   924,   449,  1212,    82,
    1088,   449,   449,  2371,  2571,  2572,    83,    30,  1231,   563,
    1236,   767,   449,  2321,  2022,  1153,  1154,  1628,  1158,    78,
      31,  1327,  2074,  1019,    30,   562,   562,   597,   562,   564,
    1022,  1226,  1090,  1350,  1227,  1362,  1363,  2110,  1651,    84,
    1300,  1654,  1655,    32,  1656,   648,  1613,  2353,  1493,  1319,
    2598,  1165,  1880,   925,   449,   449,   449,    33,  1813,   973,
     598,  1871,    79,  1671,  1139,  1060,   973,  1140,  1237,  2308,
    1241,   793,   793,   924,    33,  1014,  1013,   794,   794,  2450,
    1931,  1933,  1934,  2454,  1900,    85,  1061, -1466,  2023,  1907,
     631,  1816,  1060,  1891,  1105,  1106,  1107,  1108,  1109,  1110,
    1062,   632,  2075,   631,  1244,  1351,   603,  1166,   632,   793,
    1011,  1203,    24,  1061,  1842,   794,  1203,  1726,  2024,  1728,
    1729,  1204,    52,  1785,  1212,  1727,  1206,  1064,  2353,  1820,
    1785,   618,   594,  2025,   648,  1785,   775,  1076,  1785,   600,
    1213,   776,  2026,   590,   601,   591,    28,  1079,     3,     4,
     604,  1741,  1789,  2368,  1019,  1013,  2383,  1785,  2076,  1123,
    2077,  1039,   608,  1287,  1352,    52,   546,  1353,  2027,  1131,
    2166,   973,   973,  2465,  1213,  1524,  1525,   923,  1039,   544,
    1287,   795,   795,   592,   605,   593,    30,   630,   647,  1073,
    1142,  1696,   627,  1143,   609,  1697,  1698,  1699,   619,    31,
    1210,   640,  1292,   923,   777,  1143,  1266,   638,  1212,   496,
    1212,  2499,  2149,   632,   632,    24,   560,  2413,    52,   795,
    1430,   641,    32,  1267,  1843,    56,  1269,  1022,  1270,   580,
    1868,  -940,   642,   581,  1210,  1853,  1494,  1855,  1785,  1318,
     643,  1011,  1319,  2321,    86,   778,  1431,   452,  1332,    28,
     449,  1333,  2028,   494,   739,  1889,   449,   586,  1916,   449,
    1135,  1137,   520,   449,  1785,  2086,   532,  2353,  1354,  2270,
     745,   754,  1014,   584,   585,  1013,  1488,   449,   759,   956,
     449,   449,   449,   449,  2093,  1378,    56,  2069,   588,    30,
     449,   449,  -494,  -494,  2588,  2560,  1971,  1972,   760,   765,
    1213,    52,    31,  2085,  2127,  2094,  1022,   449,   449,   449,
     449,   923,  2573,  1304,  1872,   449,  1876,   762,   763,   449,
     796,   796,  1039,   449,   953,    32,   449,   449,   449,   449,
     449,   449,   449,   449,   449,  -498,  -498,   449,  1043,    33,
     924,   924,   924,   766,   449,  1432,   449,   773,  2274,  2353,
    1433,  1014,  -466,  1785,  1039,  1434,  1287,  -466,   796,  2051,
    1210,   790,  1534,   796,  2602,  1143,   791,   449,  1604,   751,
     797,  1605,  1071,   798,   798,  1355,  1641,  1785,  1911,  1642,
    1670,   792,  1496,  1143,  1213,   449,  1213,  1677,  1701,  1681,
    1143,   772,  1143,   774,   449,   449,  2022,   544,  -497,  -497,
     799,   799,  1338,   788,   793,  1715,  1013,   823,  1143,  1859,
     794,   798,  1860,   805,   804,   793,  1844,  1845,   822,  1863,
    -466,   794,  1864,   826,  1938,   925,  1022,  1143,   924,  1625,
     631,  1626,   923,  1985,   923,   632,  1143,   928,   824,   560,
     560,   932,   560,  1846,  1210,  1019,  1210,  2110,  1765,  1702,
    1766,   925,  2049,  2054,  1977,  2050,  2055,  2073,   929,  1785,
    1605,  -466,    24,   934,   800,   800,   793,  1767,   941,  1768,
    2023,  1014,   794,   449,  1358,  2107,   449,   449,  2133,   449,
     943,  1605,  2150,  1338,   806,  2151,   948,  2171,  2231,  1435,
    1333,  1605,  2232,   955,   953,  1605,    28,  1019,   958,  1436,
    2024,  1816,   800,   807,  2200,  2037,  2203,  2431,  2382,   959,
    2431,   923,  1629,  2312,   795,  2025,  1333,  1019,   961,  1023,
    2363,  2230,  1024,  2364,  2026,   795,  2389,  2415,   630,  1605,
    1333,  2418,  1011,  2093,  2419,  1565,    30,  2115,  -617,  2423,
     497,   630,   956,   449,  1320,  2429,  1019,   979,  2430,    31,
    2027,  -624,  2433,   808,  2126,  2430,  1026,  1022,  2442,   925,
    1481,  2443,  1036,   449,   449,  2479,  1032,  2242,  2443,   449,
    1019,  2326,    32,  2243,  2480,  2488,   795,  1333,   956,  2493,
    2507,  1035,  2430,  2508,  1011,  2244,   498,  1042,  2536,   547,
    2537,   956,  1037,  1143,  1289,  2148,  1290,  2567,  2584,  1038,
    2430,  2443,  1014,   736,  1011,   738,    33,   449,   449,   449,
    1044,  -614,   449,  2245,   793,  2246,  -615,  1047,  2089,  1048,
     794,  1053,  1055,  1056,   449,   449,   449,   449,  1057,  -618,
      52,   547,   449,  1011,  2028,  1703,  1704,  1705,   809,  1706,
    1707,  1708,  1709,  1710,  1711,  1058,   924,   449,   449,  -616,
     924,   449,   924,   796,  2289,  1059,  1066,  1011,  1067,  1077,
    1115,  1117,  1119,  1133,   796,   449,  1120,   449,  1146,   449,
    2247,  1152,   776,   778,  1182,  1184,  1190,  1208,  1209,  1210,
     925,  2110,   925,  1215,  1216,   810,  1019,  1217,   811,   449,
    1221,    52,  1016,  1228,  1229,  2248,  2262,  1013,   547,   812,
     449,  2387,   827,  1233,  1243,  1248,   798,   927,  1256,  1255,
    1260,  1264,  1265,  1535,   449,   796,  2327,   798,  1272,  1275,
    2219,  1338,  1276,   586,   795,  1278,  1287,  1317,   449,  1028,
     813,  1039,   446,   828,   973,  1816,  1045,  1321,  1650,   584,
     585,  1339,  1783,   449,   799,  1340,   446,   973,  1345,  1013,
     648,  1395,    56,  2249,   588,  1396,  1783,  1082,  2250,   925,
    1428,   449,  2217,  1408,  1580,  1916,  1421,  1427,   798,  1013,
    1438,  1439,  1462,  1011,   815,  1441,   632,  1461,   923,   923,
     923,  1482,  2271,  2272,    24,  1476,  1490,  1497,   554,   632,
    1017,  1489,   555,  1504,   816,  1581,  1516,   800,  1013,  1517,
    2251,  -467,  1518,  1519,  1537,  1541,  -467,  1542,   800,  1019,
    1543,   556,   447,  1597,   818,  2252,    52,   470,    28,   449,
    1602,   470,  1013,  1606,  1610,  1614,   511,   470,   516,  1615,
    1616,   516,  1540,  1632,   536,  1630,  1633,   470,   470,  1637,
    1640,  1639,  1548,  1648,  1551,  1658,  1660,  1562,  1022,  1669,
     555,  1661,    24,  1566,  1662,  1568,  1679,  1663,    30,   800,
    1016,  1664,  1665,   796,  1666,   924,   923,  1575,   630,  -467,
    1680,    31,  1578,  1683,  1629,  1682,  1583,  1584,  1585,  1586,
     516,  1590,  1591,  1684,  1685,  2107,    28,   536,   470,   536,
     536,   536,  1686,  1014,    32,  1688,  1011,   449,  1689,  1692,
    1022,  1714,  1720,  1143,  1721,  1722,  2253,   449,    33,  1737,
    -467,   449,  1587,  1742,   449,  1723,   798,  1724,  1019,   556,
    1022,   449,   449,   449,   449,  1019,    30,   449,   449,   449,
     449,   449,   449,   449,   449,   449,   449,   631,  1013,    31,
     449,   449,  1731,  1588,  1749,  1014,    52,  1734,  1735,  1022,
    1736,  1999,  1758,  1759,   449,  1761,  1762,  1669,  1017,  1787,
    1796,   449,    32,   547,   449,  1014,   449,  1798,  1763,  1805,
    1818,  1824,  1812,  1022,   449,  -499,    33,   449,   449,  -500,
     547,  1823,   449,   449,  2366,  1019,  1827,  1830,  1832,  1828,
    1862,  1826,  2417,  1833,  1014,  1236,  1839,  1836,   449,  1852,
     449,  1854,  1867,  1873,  1874,  1011,  1875,   800,  1877,   456,
    1878,   449,  1011,  1879,  1881,  1898,  1901,  1897,  1014,  2460,
     449,  1902,  1905,  1908,  1909,  1919,   925,   925,   925, -1006,
     446,  2453,   446,  1885,  1912,  1327,   449,  1925,  1936,  1937,
    1783,  1941,  1783,  1696,  1717,  1716,  1974,  1975,  1976,  1979,
     557,  1987,  1988,  1071,   806,  1991,  2000,  1016,  1770,  2013,
    2046,  1013,  2021,  1073,    24,   457,  2035,  2422,  2039,  2048,
    2041,  2043,  1011,   807,   973,  2052,  2044,  2059,  2063,  1917,
    2422,  1918,  2067,  2097,   923,  1923,  1924,  2079,   923,  1022,
     923,  -432,  2081,  2506,  2129,  1071,  1019,  2135,    28,  2136,
    2140,   571,  1605,   574,  -432,   578,  2146,  2156,  2154,  -432,
    2155,   458,  1428,  2161,   925,  2164,   632,  2158,  2165,  2107,
    2179,  2462,  2189,   808,  2190,  2194,  2196,  2197,  1760,  2204,
    2205,  1019,  2209,  2210,  1014,  2211,  1016,  2212,    30,  2237,
    2481,  2233,  2144,  2225,  1777,  2260,   924,  2261,   806,  2265,
     924,    31,  2490,  -432,  2275,  1017,  1019,    52,  1777,  1019,
    2276,  2277,   546,   449,  2278,  2284,  1980,   807,  2285,  2489,
    1013,  2557,  -432,  2286,    32,  2298,  2299,  1013,  2301,  2453,
    2304,  2305,  1365,  1011,  2307,  2501,  2309,  2310,    33,  1366,
    1367,  1368,  2317,  2330,  2323,  2336,  2345,  2355,  2349,  2357,
    2360,  2374,  2358,  2377,  2365,  2378,   449,   449,   809,  2379,
    2380,   449,  1022,  -432,  2388,  2391,   449,   808,  1011,   449,
     449,   460,  -432,   461,   449,  2392,  2393,  2420,  2406,  2416,
    2425,  2407,  2428,  2435,  1017,  2439,  2444,  1013,  2458,  2461,
    2463,  2466,  2476,  1011,   462,   449,  1011,   463,  2475,   449,
    2477,  2487,  2495,  2496,  2373,   810,  1016,  1014,   811,  2505,
    2509,   536,  2512,  2511,  2514,   596,  1904,  2517,  2518,   812,
     449,  2523,  2519,  2524,   470,  2547,  2553,   446,  2534,  2562,
    2525,   446,  2218,  2220,  2001,  2575,  2568,  1783,  2585,  2586,
    2578,  1783,  2576,  2580,   924,  2112,  2599,   612,   470,   470,
     813,  2577,   809,   923,  2096,  2100,   764,  1567,    52,  1850,
    2221,  2056,   449,  2500,  2348,  2134,  2543,  1885,  2268,  2549,
    2594,  1022,  2457,  2581,  2574,  2405,  1835,  1857,  1022,  1199,
    1019,   516,   925,   516,  2139,  2545,   925,  2579,   925,   536,
    2101,  1886,  1831,  2544,   815,  1284,  1887,   470,  1013,   810,
    1913,  2306,   811,  -432,  1017,  2128,  1144,  1125,  1533,   536,
    1814,  1179,  1178,   812,   816,  1825,  1014,  1513,  2042,  2494,
    2290,   536,  1532,  1014,  2215,   630,  2016,  1183,  1795,  2188,
    2427,  2486,  2202,  1013,   818,   449,  2012,  1016,  1022,  2485,
    2491,  1659,  2492,  2347,   813,  2538,  2533,   449,   449,  2539,
    1466,   449,  1817,  1756,   536,   536,   536,  1754,  1013,  1674,
    1475,  1013,  1601,   449,  2478,   580,  1890,  1011,   762,   581,
     449,  1657,  1297,  1147,  1484,   449,  2057,  1071,   449,   449,
       0,     0,     0,  1014,  1486,   449,   449,     0,   815,     0,
       0,     0,  2011,  1815,  2014,   446,     0,   449,  1025,   449,
       0,     0,   446,     0,     0,  1783,     0,   446,   816,     0,
     446,  2332,  1783,     0,     0,     0,  2065,  1783,     0,   449,
    1783,  2214,     0,  2216,     0,   589,     0,     0,   818,   446,
       0,     0,     0,     0,     0,  1017,     0,     0,  2582,  1783,
    2098,     0,     0,     0,     0,     0,     0,     0,     0,  1022,
       0,     0,     0,     0,     0,  2116,  2117,  2118,  2119,  2120,
    2121,  2122,  2123,  2124,  2125,     0,  1018,     0,  2390,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   449,     0,
       0,     0,     0,   449,  1022,     0,     0,     0,     0,  2290,
       0,     0,     0,   547,  1014,     0,     0,     0,     0,   536,
     449,   925,     0,   744,   449,     0,     0,     0,   456,  1022,
     446,     0,  1022,   449,     0,   470,   470,     0,     0,     0,
    1783,   536,   536,  1151,   449,     0,    52,     0, -1006,  1014,
       0,   973,  1013,     0,   923,   789,   446,     0,   923,   449,
       0,     0,     0,     0,     0,     0,  1783,     0,   536,  1202,
       0,     0,     0,     0,  1014,     0,     0,  1014,     0,     0,
       0,   536,     0,  1305,   457,     0,     0,     0,   936,   938,
     940,     0,     0,   632,     0,     0,  2472,     0,   536,  1369,
    1370,  1371,   536,  1372,  1373,  1374,  1375,  1376,  1377,     0,
     449,   647,     0,   449,  1696,     0,     0,     0,  1697,  1698,
    1699,     0,   449,     0,     0,     0,     0,  1306,     0,   449,
     458,     0,   647,     0,     0,  1696,     0,   449,     0,  1697,
    1698,  1699,     0,  2497,     0,   446,     0,     0,  1016,     0,
       0,     0,  1307,     0,  1018,  1783,  1982,   449,     0,  1777,
       0,     0,  1175,  1777,     0,     0,     0,   838,     0,   446,
    1308,     0,     0,     0,  1309,  2112,   449,   449,     0,  1783,
       0,     0,     0,     0,     0,   647,    52,    52,  1696,     0,
       0,     0, -1466, -1466, -1466,  1310,   459,     0,  1311,     0,
    1016,     0,   923,  1022,     0,  1259,     0,     0,     0,     0,
     536,  1312,     0,  1081,     0,     0,  1082,     0,  1282,   449,
    1016,   449,  2558,     0,   612,   838,  1021,   612,     0,     0,
       0,   470,   470,  1138,   470,   612,     0,   536,     0,     0,
     460,     0,   461,     0,     0,  1088,  1017,     0,  1014,  1016,
       0,   446, -1466,     0,     0,     0,  1149,     0,     0,     0,
       0,  1783,     0,   462,     0,     0,   463,     0,     0,     0,
       0,     0,     0,  1016,    52,     0,     0,  1090,     0,   449,
     449,     0,  1191,     0,     0,     0,     0,     0,  2468,     0,
    1700,  1313,     0,     0,     0,  1218,     0,     0,  1017,  1314,
       0,     0,   925,     0,     0,     0,   925,     0,     0,     0,
       0,  1701,     0,     0,     0,     0,  1242,     0,  1017,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1380,  1701,     0,  1777,     0,     0,     0,     0,  1777,
    1315,     0,  1777,     0,     0,  1740,   972,  1017,     0,     0,
       0,  1018,  2367,   972,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   612,     0,     0,     0,
       0,  1017,  1702,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2385,  2386,     0, -1466,     0,  1016,
       0,     0, -1466,  1702,  1021,   536,     0,  2394,     0,  1081,
       0,     0,  1082,     0,     0,     0,  1083,  1084,  1085,  2112,
       0,     0,     0,     0,     0,   536,     0,   536,   838,   838,
     838,     0,    52,  1086,  1271,     0,  1498, -1466,  1503,     0,
    1018,  1088,     0,     0,     0,     0,     0,     0,  1089,     0,
       0,  1387,     0,    52,     0,     0,  1702,     0,     0,     0,
     925,  1294,     0,     0,     0,     0,   972,  2440,   972,   972,
     536,     0,     0,  1090,     0,     0,     0,     0,  1777,  1202,
     470,     0,     0,     0,  1098,     0,     0,  1071,     0,     0,
     470,  1549,   470,  1553,     0,   470,     0,  1017,     0,     0,
       0,   470,     0,   470,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   612,   470,     0,     0,     0,   612,
     470,     0,  1016,     0,   470,   470,   470,   470,     0,   470,
     470,     0,     0,     0,   972,     0,     0,   972,   972,     0,
      52,     0,     0,     0,     0,     0, -1373,     0,     0,   536,
    1612,     0,     0,     0,     0,  1515,     0,     0,     0,     0,
    1018,     0,  1624,     0,     0,     0,     0,     0,  1703,  1704,
    1705, -1466,  1706,  1707,  1708,  1709,  1710,  1711,     0,     0,
       0,     0,     0,  1091,     0,     0,     0,    52,  1092,  1703,
    1704,  1705,     0,  1706,  1707,  1708,  1709,  1710,  1711,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,  1093,
    1094,     0,     0,     0,     0,     0,     0,     0,     0,  1474,
    1017,     0,     0,  1095,     0,     0,     0,     0,     0,     0,
       0,  1016,     0,     0,     0,     0,     0, -1373,  1016,  1483,
       0,  1485, -1466, -1466, -1466,     0,  1706,  1707,  1708,  1709,
    1710,  1711,     0,  1096,     0,     0,  1097,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52, -1466,     0,     0,
    1098,     0,     0,  1099,  1105,  1106,  1107,  1108,  1109,  1110,
    1021,     0,     0,     0,  1528,     0,     0,     0, -1373,     0,
       0,  1018,     0,     0,     0,  1299,  1301,     0,  1016,     0,
       0, -1373,     0,     0,     0,     0, -1373,     0,     0,     0,
       0, -1373,     0,     0,     0,     0,     0,     0,     0, -1373,
     838,     0, -1373,     0,     0,  1380,     0,     0,     0,  1017,
       0,     0,     0,     0,  1081,     0,  1017,  1082,     0,     0,
       0, -1466, -1466, -1466,     0,     0,     0,     0,     0,     0,
   -1373,     0,     0,     0,     0,   536,     0,  1100,     0,     0,
       0,     0,  1786,  1611,  1346,  1347,  1088,     0,     0, -1373,
       0,     0,  1359,  1089,  1360,  1361,  1786,  1387,  1387,     0,
    1804,     0,  1387,  1807,     0,  1503,     0,     0,     0,  1397,
       0,  1398,     0,     0,     0,     0,  1017,     0,  1090,     0,
    1021,     0,     0,     0,  1409,  1411,     0,     0,     0,  1016,
   -1373,     0,     0, -1373,     0,     0,     0,  1387,  1387, -1373,
       0,   718,   718,     0,     0,     0,     0,     0,     0,   647,
       0,  1259,  1696,     0,     0,     0,  1697,  1698,  1699,     0,
       0,     0,     0,     0,  1016,     0,     0,   838,     0,     0,
       0,     0,     0,  1101,     0,     0,  1102,  1103,  1104,     0,
    1105,  1106,  1107,  1108,  1109,  1110,     0,     0,     0,  1016,
    1407,     0,  1016, -1373,     0,     0,     0,   835,   840,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1259,     0,     0,     0,     0,   536,  1522,  1522,     0,
    1259,   536,   536,   536,     0,     0,     0,  1017,  1091,     0,
       0,     0,     0,  1092,   470,     0,     0,   838,     0,   536,
       0,     0,     0,   612,  1770,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,   835,     0,     0,     0,  1259,
    1259,     0,  1017,     0,     0,     0,     0,     0,  1095,   972,
   -1373,  1030,     0,     0,     0,     0,     0,     0,     0,   972,
       0,     0,   972,     0,     0,     0,     0,  1017,     0,  1769,
    1017,     0,     0,     0, -1373,  1380, -1373, -1373,     0,  1052,
       0,     0,  1018,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1098,     0,     0,  1068,  1069,
    1070,     0,  1072,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1373,     0,     0, -1373, -1373, -1373,     0,     0,
       0,     0,  1118,     0,     0,     0,     0,     0,     0, -1466,
       0,   972,     0,     0,  1018,     0,     0,     0,     0,     0,
       0,     0,     0,  1016,   972,     0,     0,     0,     0,  2003,
       0,     0,     0,     0,  1018,     0,  1667,   536,   536,   536,
     447,     0,  1786,  2020,     0,     0,     0,  2020,  2034,     0,
       0,  1157,     0,     0,     0,  1169,  1174,     0,     0,     0,
       0,     0,  1100,  1018,     0,     0,     0,     0,     0,     0,
    1702,  1387,  1387,  1387,  1387,     0,  1503,  1387,  1387,  1387,
    1387,  1387,  1387,  1387,  1387,  1387,  1387,  1018,     0,     0,
    1888,     0,   536,     0,   470,  1893,  1894,  1896,  1259,  1202,
    1259,     0,  1282,     0,     0,     0,     0,     0,   835,   835,
     835,     0,     0,  1910,     0,     0,     0,     0,   470,     0,
    2099,  1017,     0,     0,     0,     0,     0,  1387,  1387,     0,
       0,     0,     0,   470,   470,   470,   470,   470,   470,   470,
     470,   470,   470,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   536,  1101,     0,
       0, -1466, -1466, -1466,  1202,  1105,  1106,  1107,  1108,  1109,
    1110,     0,     0,   838,     0,  1282,     0,     0,   536,     0,
       0,     0,     0,     0,     0,  1259,     0,  1791,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1021,  1018,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   647,     0,     0,  1696,     0,  1821,  1821,
    1697,  1698,  1699,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1983,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2008,  2009,  2010,  1021,     0,  1703,  1704,  1705,     0,
    1706,  1707,  1708,  1709,  1710,  1711,     0,  2182,     0,     0,
     536,   536,   536,   536,  1021,     0,     0,  2020,  2034,     0,
    2020,     0,     0,  2192,     0,     0,     0,  1786,     0,     0,
       0,  1786,     0,     0,     0,     0,     0,  2208,     0,     0,
       0,     0,     0,  1021,     0,     0,  2064,     0,     0,     0,
    1343,     0,     0,     0,     0,     0,  1804,     0,     0,     0,
       0,  1503,     0,     0,     0,  1380,  1018,  1021,     0,     0,
       0,  1364,     0,  1202,  1381,     0,     0,  1392,     0,     0,
       0,     0,     0,     0,  1399,  1404,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2269,     0,
       0,  1414,  1415,  1416,  1417,     0,     0,  1926,  1928,  1426,
       0,  2132,  1935,  1437,     0,     0,     0,  1440,     0,     0,
    1447,  1448,  1449,  1450,  1451,  1452,  1453,  1454,  1455,     0,
       0,  1456,  1294,     0,     0,  1259,     0,     0,   718,     0,
     835,  1624,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2302,  1701,     0,     0,     0,     0,     0,     0,
       0,  1487,     0,  1113,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1375,     0,  1018,     0,     0,     0,     0,
       0,     0,  1018,  2113,     0,     0,     0,     0,  1069,  1070,
       0,     0,     0,     0,     0,   447,  2020,     0,     0,     0,
     470,  1113,  1786,     0,     0,     0,     0,  1786,     0,     0,
    1786,   447,     0,  2335,  1702,  2338,     0,     0,     0,     0,
       0,     0,     0,     0,  2183,  2184,  2185,  2186,     0,  2354,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   472,  1018,     0,     0,     0,     0,     0,     0,   612,
     470,     0,     0,     0,     0,     0,     0,     0,   536,     0,
       0,     0,     0,     0, -1375,     0,     0,   835,     0,     0,
    1598,  1599,     0,  1600,     0,  1387,     0,     0,     0,     0,
    1113,     0,   470,   470,     0,  1113,     0,     0,     0,     0,
       0,     0,  1202,     0,   473,   470,     0,     0,     0,     0,
   -1389,     0,     0,     0,     0,     0,  1021,   536,     0,   474,
    2354,     0,   972,     0,     0, -1375,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1375,   470,
       0,     0,     0, -1375,     0,     0,  1786,   835, -1375,     0,
       0,     0,  2338,     0,     0,     0, -1375,     0,     0, -1375,
       0,  2438,     0,  1018,     0,   470,     0,     0,  1672,  1387,
       0,     0,   475,  1678,   536,     0,     0,     0,     0,     0,
       0,   476,  2153,     0,     0,     0,     0, -1375,     0,     0,
       0,     0,     0,   477,     0,     0,   612,     0,  1018,     0,
       0, -1389,     0,     0,     0,     0, -1375,   536,     0,     0,
    1703,  1704,  1705,  1695,  1706,  1707,  1708,  1709,  1710,  1711,
       0,   478,     0,  1018,     0,  1021,  1018,     0,  1404,     0,
    1404,  1404,  2273,  1387,     0,   447,  1733,     0,     0,     0,
       0,   470,     0,     0,     0,     0,  2335, -1375,     0,     0,
   -1375,     0, -1389,     0,     0,     0, -1375,     0,     0,  2354,
     612,   612,   612,     0,     0, -1389,   479,     0,     0,  1752,
   -1389,  1755,     0,  1757,     0, -1389,     0,     0,     0,     0,
       0,     0,  2375, -1389,     0,  1113, -1389,     0,     0,     0,
       0,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2335,     0,     0,     0,  1113,     0,     0,
   -1375,  2438,  1388,     0, -1389,     0,     0,     0,     0,     0,
       0,  1503,   480,  1113,  1113,  1113,     0,  1113,     0,     0,
       0,  2411,  1157, -1389,     0,  1202,   481,     0,     0,     0,
       0,  2354,     0,   972,     0,     0,  1081,  1174,   972,  1082,
       0,     0,     0,  1083,  1084,  1085,   612,     0,     0,     0,
       0,  1770,  1299,  1301,     0,  1829,     0,   482,     0,   483,
       0,     0,     0,  1113, -1389,     0,   484, -1389,  1088,   485,
       0,     0,     0, -1389,     0,  1089,     0, -1375,  2449,     0,
       0,     0,     0,     0,     0,     0,     0,  1018,   486,     0,
       0,     0,     0,  2113,   -37,     0,     0,     0,     0,   487,
    1090, -1375,  1113, -1375, -1375,     0,   488,     0,     0,     0,
       0,  2471,     1,   835,  1113,   489,     0,     0,     0,  1113,
       0,     0,     2,     0,     3,     4,     0, -1389,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1375,
       5,     0, -1375, -1375, -1375,   490,     0,     0,     0,     6,
       0,     0,     0,  1021,     0,     0,  1021,     0,     0,     0,
       0,     7,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     8,     0,     0,     0,     0,     0,  1770,     0,
       0,     0,     0,     9,     0,    10,     0,     0,     0,     0,
       0,  1940,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1944,    11,     0, -1389,  1945,     0,     0,  1947,     0,
    1091,     0,     0,  1299,  1301,  1092,    12,     0,     0,     0,
       0,     0,   972,     0,     0,     0,    13,     0, -1389,     0,
   -1389, -1389,    14,     0,  1967,  1968, -1466, -1466,     0,     0,
      15,     0,    16,    17,     0,     0,     0,     0,     0,     0,
    1095,     0,     0,     0,     0,  1981,     0,     0,  1984,     0,
    1986,     0,     0,     0,     0,     0, -1389,     0,  1990, -1389,
   -1389, -1389,  1081,     0,     0,  1082,  1997,  1998,     0,     0,
      18,     0,     0, -1466,     0,     0,     0,     0,  1113,     0,
       0,     0,     0,     0,     0,     0,     0,  1098,     0,     0,
       0,     0,     0,     0,  1088,  2038,     0,     0,     0,  1113,
       0, -1466,     0,     0,  2045,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,  1113,  2113,  1388,  1388,
    2058,  1712,     0,  1388,     0,     0,  1090,  1113,     0,     0,
       0,     0,     0,     0,  1113,     0,     0,     0,     0,  1113,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1113,
    1113,  1113,  1113,     0,     0,     0,     0,     0,  1388,  1388,
       0,  1113,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1113,     0,  1100,  1113,     0,    20,     0,     0,
      21,     0,  1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,
    1113,  1113,     0,     0,  1750,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,    23,     0,     0,     0,
       0,     0,  1113,     0,     0,     0,     0,     0,    24,     0,
       0,     0,     0,     0,     0,    25, -1466,     0,     0,    26,
       0, -1466,     0,     0,     0,     0,   972,  2157,   806,    27,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,   807,     0,     0,
    1101,     0,     0,  1102,  1103,  1104, -1466,  1105,  1106,  1107,
    1108,  1109,  1110,     0,     0,     0,     0,     0,     0,     0,
    2167,  2168,     0,     0,     0,  2169,     0,    29,  1081,     0,
    2172,  1082,    30,  2175,  2176,  1083,  1084,  1085,  2180,     0,
       0,     0,     0,     0,     0,    31,     0,   808,  2087,     0,
       0,     0,  1086,  1098,     0,  2088,     0,     0,     0,     0,
    1088,     0,     0,  1113,  1113,  1113,     0,  1089,    32,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1080,    33,     0,   718,   -37,  1081,     0,     0,  1082,
       0,     0,  1090,  1083,  1084,  1085,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1086,     0,  2089,  1087,     0,     0,     0,     0,  1088,     0,
       0,     0,     0,     0,     0,  1089,  2263,     0,     0,     0,
       0,     0,   809,     0,     0,     0,     0,  1113,     0,     0,
   -1466,     0,     0,  1113,     0,     0,     0,     0,     0,     0,
    1090,     0,  1081,     0,     0,  1082,     0,     0,  1712,  1712,
    1113,     0,  1388,  1388,  1388,  1388,     0,     0,  1388,  1388,
    1388,  1388,  1388,  1388,  1388,  1388,  1388,  1388,  1712,   810,
       0,     0,   811,     0,  1088,     0,     0,     0,     0,     0,
       0, -1466,     0,   812,     0,  2090,     0,     0,  1113,     0,
       0,     0,  1091,  1712,  1712,     0,     0,  1092,     0,     0,
       0,  2313,  2314,     0,     0,  2315,  1090,  1113,  1388,  1388,
    1113,     0,  1113,     0,   813,     0,     0,     0,  1093,  1094,
       0,     0,     0,     0,     0,     0, -1466,     0,     0,     0,
       0,     0,  1095,  1105,  1106,  1107,  1108,  1109,  1110,  2343,
    2344,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1091,     0,     0,  2356,  1081,  1092,     0,  1082,   815,     0,
       0,     0,  1096,     0,     0,  1097,     0,     0,     0,     0,
       0,     0,     0,     0,  1992,     0,  1093,  1094,   816,  1098,
       0,     0,  1099,     0,  1113,     0,  1088,     0,     0,     0,
    1095,     0,     0, -1466,     0,     0,     0,     0,   818,     0,
    2091,     0,     0,  2092,  1081,     0,     0,  1082,     0,     0,
       0,  1083,  1084,  1085,     0,     0, -1466,     0,  1090,     0,
    1096, -1466,     0,  1097,     0,     0,     0,     0,  1086,     0,
       0,     0,     0,     0,     0,     0,  1088,  1098,   647,     0,
    1099,  1696,     0,  1089,     0,  1697,  1698,  1699,     0,     0,
       0,     0,     0,     0,  2424,     0, -1466,     0,     0,     0,
       0,     0,  2173,     0,     0,     0,  1100,  1072,  1090,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2441,     0,
     647,     0,     0,  1696,     0,     0,  1995,  1697,  1698,  1699,
       0,     0,     0,  2455,     0,  1113,     0,     0,     0,  1113,
    1113,  1210,  1113,  1098,  2174,  1712,  1712,  1712,  1712,     0,
       0,     0,  1712,  1712,  1712,  1712,  1712,  1712,  1712,  1712,
    1712,  1712,  1113,  1113,  1100,     0,     0,     0, -1466,     0,
       0,     0,     0, -1466,     0,     0,  1113,     0,     0,  1113,
       0,  1113,     0,     0,     0,  1113,     0,     0,  1712,  1712,
       0,     0,  1113,  1113,     0,     0,     0,     0,     0,     0,
       0,     0,  1101,  2343,     0,  1102,  1103,  1104, -1466,  1105,
    1106,  1107,  1108,  1109,  1110,     0,     0,  1081,  1091,     0,
    1082,     0,  1687,  1092,  1083,  1084,  1085,     0,     0,     0,
   -1466,  2516,     0,  1113,     0,     0,     0,     0,     0,     0,
    1113,  1086,     0,     0,  1093,  1094,     0,     0,     0,  1088,
    2530,  2530,     0,  1113,  1081,  1098,  1089,  1082,  1095,     0,
    1101,     0,     0,  1102,  1103,  1104,     0,  1105,  1106,  1107,
    1108,  1109,  1110,     0,     0,     0,     0,     0,  1701,     0,
       0,  1090,     0,     0,     0,     0,  1088,     0,  1096,     0,
       0,  1097,     0, -1466,     0,  2530,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1098,     0,     0,  1099,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1090,     0,
    1701,     0,     0,     0,     0,     0, -1466,     0,     0,     0,
       0,     0,     0,  1105,  1106,  1107,  1108,  1109,  1110,  1702,
       0,     0, -1466,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1113,  2530,  2597,     0,  1388,     0,     0,     0,
       0,     0,  1113,  1113,  1113,     0,     0,  1113,     0,     0,
    1113,  1113,     0,     0,     0,  1113,     0,     0,     0,     0,
       0,  1702,     0,     0,     0,     0,  1996,     0,     0,     0,
       0,  1091,  1100,     0,     0,     0,  1092,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1093,  1094,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1466,     0,
       0,  1095,     0, -1466,     0,     0,     0,     0, -1466,     0,
    1388,     0,     0,     0,     0,  1105,  1106,  1107,  1108,  1109,
    1110,     0,     0,     0,     0,     0,     0,     0,  1113,     0,
       0,  1096,     0,     0,  1097,     0,     0,     0, -1466,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1098,     0,
       0,  1099,     0,     0,     0,     0,     0,     0,  1101,     0,
       0,  1102,  1103,  1104,     0,  1105,  1106,  1107,  1108,  1109,
    1110,     0,     0,  1712,  1388,  1943,     0,     0,  1113,  1113,
    1113,     0,     0,     0,     0,  1098,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1703,  1704,  1705,     0,  1706,
    1707,  1708,  1709,  1710,  1711,     0,     0,     0,  1113,  1113,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1113,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1712,     0,  1100,     0,  1703,  1704,  1705,
       0,  1706,  1707,  1708,  1709,  1710,  1711,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1466,     0,     0,     0,     0,     0,  1712,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1113,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1113,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1113,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1101,     0,     0,  1102,  1103,  1104,     0,  1105,  1106,
    1107,  1108,  1109,  1110,     0,     0,     0,     0,  1978,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1466,     0,
       0,     0,     0,     0,     0,  1105,  1106,  1107,  1108,  1109,
    1110,  1113,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1113,     0,     0,     0,    87,
     644,   508,   645,   646,   647,   648,   649,     0,     0,     0,
       0,     0,     0,     0,    88,    89,    90,    91,    92,    93,
      94,    95,   830,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,   104,
     105,   106,   107,   108,   650,   110,   651,   652,     0,   113,
     114,   115,   116,   117,   118,   653,   654,   119,   120,   655,
     656,   123,  1113,   124,   125,   126,   127,   657,     0,   658,
       0,   130,   131,   132,   133,   134,   135,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   659,   660,   661,   662,   663,   664,   665,   150,
     151,   152,   153,   154,   155,   666,   667,   158,   668,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,   831,     0,   171,   172,   669,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   670,   187,   188,   189,   190,   671,   672,
     192,     0,   193,   194,   673,   196,     0,   197,     0,   198,
     199,     0,   200,   201,   202,   203,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,   230,   674,   675,
       0,   676,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,     0,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   677,   678,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   679,   268,   680,   270,   271,   272,   273,   681,   274,
     275,   276,   277,   682,   683,   279,   684,   281,   282,   283,
       0,   284,   285,     0,     0,   685,   287,   288,     0,     0,
     289,   290,   291,   292,   293,   686,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   687,   307,
     308,   309,   310,   311,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   688,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     689,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   690,   360,   361,   362,
     363,   364,   365,   366,   367,   691,   369,     0,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     692,     0,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,     0,   693,   694,     0,     0,   394,   395,   695,
     397,   696,   697,   399,   400,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   698,     0,   411,
     412,   413,   414,   415,   416,   699,   832,   418,   419,   420,
     421,   422,   423,     0,     0,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   700,     0,
       0,     0,     0,     0,     0,   701,   702,   833,     0,     0,
       0,     0,     0,     0,   704,   834,     0,     0,     0,   705,
      87,   644,   508,   645,   646,   647,   648,   649,     0,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
     104,   105,   106,   107,   108,   650,   110,   651,   652,     0,
     113,   114,   115,   116,   117,   118,   653,   654,   119,   120,
     655,   656,   123,     0,   124,   125,   126,   127,   657,     0,
     658,     0,   130,   131,   132,   133,   134,   135,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   659,   660,   661,   662,   663,   664,   665,
     150,   151,   152,   153,   154,   155,   666,   667,   158,   668,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   669,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   670,   187,   188,   189,   190,   671,
     672,   192,     0,   193,   194,   673,   196,     0,   197,     0,
     198,   199,     0,   200,   201,   202,   203,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,   230,   674,
     675,     0,   676,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,     0,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   677,   678,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   679,   268,   680,   270,   271,   272,   273,   681,
     274,   275,   276,   277,   682,   683,   279,   684,   281,   282,
     283,     0,   284,   285,     0,     0,   685,   287,   288,     0,
       0,   289,   290,   291,   292,   293,   686,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   687,
     307,   308,   309,   310,   311,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   688,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   689,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    24,   355,   356,   357,   358,   359,   690,   360,   361,
     362,   363,   364,   365,   366,   367,   691,   369,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   692,     0,   383,   384,    28,   385,   386,   387,   388,
     389,   390,   391,     0,   693,   694,     0,     0,   394,   395,
     695,   397,   696,   697,   399,   400,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,   698,     0,
     411,   412,   413,   414,   415,   624,   699,     0,   418,   419,
     420,   421,   422,   423,     0,     0,   424,     0,    31,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   700,
       0,    32,     0,     0,     0,     0,   701,   702,     0,     0,
       0,     0,     0,     0,     0,   704,  2434,     0,     0,     0,
     705,    87,   644,   508,   645,   646,   647,   648,   649,     0,
       0,     0,     0,     0,     0,     0,    88,    89,    90,    91,
      92,    93,    94,    95,     0,    96,    97,    98,     0,     0,
       0,     0,     0,     0,     0,    99,   100,     0,   101,   102,
     103,   104,   105,   106,   107,   108,   650,   110,   651,   652,
       0,   113,   114,   115,   116,   117,   118,   653,   654,   119,
     120,   655,   656,   123,     0,   124,   125,   126,   127,   657,
       0,   658,     0,   130,   131,   132,   133,   134,   135,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   659,   660,   661,   662,   663,   664,
     665,   150,   151,   152,   153,   154,   155,   666,   667,   158,
     668,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,   170,     0,     0,   171,   172,   669,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,   185,   670,   187,   188,   189,   190,
     671,   672,   192,     0,   193,   194,   673,   196,     0,   197,
       0,   198,   199,     0,   200,   201,   202,   203,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,   230,
     674,   675,     0,   676,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,     0,     0,   244,   245,   246,
     247,     0,   248,   249,   250,   677,   678,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   679,   268,   680,   270,   271,   272,   273,
     681,   274,   275,   276,   277,   682,   683,   279,   684,   281,
     282,   283,     0,   284,   285,     0,     0,   685,   287,   288,
       0,     0,   289,   290,   291,   292,   293,   686,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     687,   307,   308,   309,   310,   311,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   688,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   689,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    24,   355,   356,   357,   358,   359,   690,   360,
     361,   362,   363,   364,   365,   366,   367,   691,   369,     0,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   692,     0,   383,   384,    28,   385,   386,   387,
     388,   389,   390,   391,     0,   693,   694,     0,     0,   394,
     395,   695,   397,   696,   697,   399,   400,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   698,
       0,   411,   412,   413,   414,   415,   624,   699,     0,   418,
     419,   420,   421,   422,   423,     0,     0,   424,     0,    31,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     700,     0,    32,     0,     0,     0,     0,   701,   702,     0,
       0,     0,     0,     0,     0,     0,   704,     0,     0,     0,
       0,   705,    87,   644,   508,   645,   646,   647,   648,   649,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,   108,   650,   110,   651,
     652,  1400,   113,   114,   115,   116,   117,   118,   653,   654,
     119,   120,   655,   656,   123,     0,   124,   125,   126,   127,
     657,     0,   658,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   659,   660,   661,   662,   663,
     664,   665,   150,   151,   152,   153,   154,   155,   666,   667,
     158,   668,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     669,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   670,   187,   188,   189,
     190,   671,   672,   192,     0,   193,   194,   673,   196,     0,
     197,     0,   198,   199,  1401,   200,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
     230,   674,   675,     0,   676,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,     0,  1402,   244,   245,
     246,   247,     0,   248,   249,   250,   677,   678,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   679,   268,   680,   270,   271,   272,
     273,   681,   274,   275,   276,   277,   682,   683,   279,   684,
     281,   282,   283,     0,   284,   285,     0,     0,   685,   287,
     288,     0,     0,   289,   290,   291,   292,   293,   686,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   687,   307,   308,   309,   310,   311,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   688,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   689,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   690,
     360,   361,   362,   363,   364,   365,   366,   367,   691,   369,
       0,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   692,     0,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,     0,   693,   694,     0,  1403,
     394,   395,   695,   397,   696,   697,   399,   400,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
     698,     0,   411,   412,   413,   414,   415,   416,   699,     0,
     418,   419,   420,   421,   422,   423,     0,     0,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   700,     0,     0,     0,     0,     0,     0,   701,   702,
       0,     0,     0,     0,     0,     0,     0,   704,     0,     0,
       0,     0,   705,    87,   644,   508,   645,   646,   647,   648,
     649,     0,     0,     0,     0,     0,     0,     0,    88,    89,
      90,    91,    92,    93,    94,    95,     0,    96,    97,    98,
       0,     0,     0,     0,     0,     0,     0,    99,   100,     0,
     101,   102,   103,   104,   105,   106,   107,   108,   650,   110,
     651,   652,     0,   113,   114,   115,   116,   117,   118,   653,
     654,   119,   120,   655,   656,   123,     0,   124,   125,   126,
     127,   657,     0,   658,     0,   130,   131,   132,   133,   134,
     135,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   659,   660,   661,   662,
     663,   664,   665,   150,   151,   152,   153,   154,   155,   666,
     667,   158,   668,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,   170,     0,     0,   171,
     172,   669,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,   185,   670,   187,   188,
     189,   190,   671,   672,   192,     0,   193,   194,   673,   196,
       0,   197,     0,   198,   199,     0,   200,   201,   202,   203,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,   230,   674,   675,     0,   676,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,     0,     0,   244,
     245,   246,   247,     0,   248,   249,   250,   677,   678,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   679,   268,   680,   270,   271,
     272,   273,   681,   274,   275,   276,   277,   682,   683,   279,
     684,   281,   282,   283,     0,   284,   285,     0,     0,   685,
     287,   288,     0,     0,   289,   290,   291,   292,   293,   686,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   687,   307,   308,   309,   310,   311,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   688,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   689,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     690,   360,   361,   362,   363,   364,   365,   366,   367,   691,
     369,     0,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   692,     0,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,     0,   693,   694,     0,
       0,   394,   395,   695,   397,   696,   697,   399,   400,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   698,     0,   411,   412,   413,   414,   415,   416,   699,
       0,   418,   419,   420,   421,   422,   423,     0,     0,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   700,     0,     0,     0,     0,     0,     0,   701,
     702,   703,     0,     0,     0,     0,     0,     0,   704,     0,
       0,     0,     0,   705,    87,   644,   508,   645,   646,   647,
     648,   649,     0,     0,     0,     0,     0,     0,     0,    88,
      89,    90,    91,    92,    93,    94,    95,  1167,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,   104,   105,   106,   107,   108,   650,
     110,   651,   652,     0,   113,   114,   115,   116,   117,   118,
     653,   654,   119,   120,   655,   656,   123,     0,   124,   125,
     126,   127,   657,     0,   658,     0,   130,   131,   132,   133,
     134,   135,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   659,   660,   661,
     662,   663,   664,   665,   150,   151,   152,   153,   154,   155,
     666,   667,   158,   668,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   669,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   670,   187,
     188,   189,   190,   671,   672,   192,     0,   193,   194,   673,
     196,     0,   197,     0,   198,   199,     0,   200,   201,   202,
     203,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,   230,   674,   675,     0,   676,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,     0,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   677,   678,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   679,   268,   680,   270,
     271,   272,   273,   681,   274,   275,   276,   277,   682,   683,
     279,   684,   281,   282,   283,     0,   284,   285,     0,     0,
     685,   287,   288,     0,     0,   289,   290,   291,   292,   293,
     686,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   687,   307,   308,   309,   310,   311,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     688,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   689,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   690,   360,   361,   362,   363,   364,   365,   366,   367,
     691,   369,     0,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   692,     0,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,     0,   693,   694,
       0,     0,   394,   395,   695,   397,   696,   697,   399,   400,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,   698,     0,   411,   412,   413,   414,   415,   416,
     699,     0,   418,   419,   420,   421,   422,   423,     0,     0,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   700,     0,     0,     0,     0,     0,     0,
     701,   702,     0,     0,     0,     0,     0,     0,     0,   704,
       0,     0,     0,     0,   705,    87,   644,   508,   645,   646,
     647,   648,   649,     0,     0,     0,     0,     0,     0,     0,
      88,    89,    90,    91,    92,    93,    94,    95,     0,    96,
      97,    98,     0,     0,     0,     0,     0,     0,     0,    99,
     100,     0,   101,   102,   103,   104,   105,   106,   107,   108,
     650,   110,   651,   652,     0,   113,   114,   115,   116,   117,
     118,   653,   654,   119,   120,   655,   656,   123,     0,   124,
     125,   126,   127,   657,     0,   658,     0,   130,   131,   132,
     133,   134,   135,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   659,   660,
     661,   662,   663,   664,   665,   150,   151,   152,   153,   154,
     155,   666,   667,   158,   668,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,   170,     0,
       0,   171,   172,   669,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,   185,   670,
     187,   188,   189,   190,   671,   672,   192,     0,   193,   194,
     673,   196,     0,   197,     0,   198,   199,     0,   200,   201,
     202,   203,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,   230,   674,   675,     0,   676,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,     0,
       0,   244,   245,   246,   247,     0,   248,   249,   250,   677,
     678,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   679,   268,   680,
     270,   271,   272,   273,   681,   274,   275,   276,   277,   682,
     683,   279,   684,   281,   282,   283,     0,   284,   285,     0,
       0,   685,   287,   288,     0,     0,   289,   290,   291,   292,
     293,   686,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   687,   307,   308,   309,   310,   311,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   688,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   689,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   690,   360,   361,   362,   363,   364,   365,   366,
     367,   691,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   692,     0,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,     0,   693,
     694,     0,     0,   394,   395,   695,   397,   696,   697,   399,
     400,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,   698,     0,   411,   412,   413,   414,   415,
     416,   699,     0,   418,   419,   420,   421,   422,   423,     0,
       0,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   700,     0,     0,     0,     0,     0,
       0,   701,   702,     0,     0,     0,     0,     0,     0,     0,
     704,  1390,     0,     0,     0,   705,    87,   644,   508,   645,
     646,   647,   648,   649,     0,     0,     0,     0,     0,     0,
       0,    88,    89,    90,    91,    92,    93,    94,    95,     0,
      96,    97,    98,     0,     0,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,   104,   105,   106,   107,
     108,   650,   110,   651,   652,     0,   113,   114,   115,   116,
     117,   118,   653,   654,   119,   120,   655,   656,   123,     0,
     124,   125,   126,   127,   657,     0,   658,     0,   130,   131,
     132,   133,   134,   135,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   659,
     660,   661,   662,   663,   664,   665,   150,   151,   152,   153,
     154,   155,   666,   667,   158,   668,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   669,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     670,   187,   188,   189,   190,   671,   672,   192,     0,   193,
     194,   673,   196,     0,   197,     0,   198,   199,     0,   200,
     201,   202,   203,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,   230,   674,   675,     0,   676,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
       0,     0,   244,   245,   246,   247,     0,   248,   249,   250,
     677,   678,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   679,   268,
     680,   270,   271,   272,   273,   681,   274,   275,   276,   277,
     682,   683,   279,   684,   281,   282,   283,     0,   284,   285,
       0,     0,   685,   287,   288,     0,     0,   289,   290,   291,
     292,   293,   686,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   687,   307,   308,   309,   310,
     311,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   688,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   689,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   690,   360,   361,   362,   363,   364,   365,
     366,   367,   691,   369,     0,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   692,     0,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,     0,
     693,   694,     0,     0,   394,   395,   695,   397,   696,   697,
     399,   400,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,   698,     0,   411,   412,   413,   414,
     415,   416,   699,  1595,   418,   419,   420,   421,   422,   423,
       0,     0,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   700,     0,     0,     0,     0,
       0,     0,   701,   702,     0,     0,     0,     0,     0,     0,
       0,   704,     0,     0,     0,     0,   705,    87,   644,   508,
     645,   646,   647,   648,   649,     0,     0,     0,     0,     0,
       0,     0,    88,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,     0,     0,     0,     0,     0,     0,
       0,    99,   100,     0,   101,   102,   103,   104,   105,   106,
     107,   108,   650,   110,   651,   652,     0,   113,   114,   115,
     116,   117,   118,   653,   654,   119,   120,   655,   656,   123,
       0,   124,   125,   126,   127,   657,     0,   658,     0,   130,
     131,   132,   133,   134,   135,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     659,   660,   661,   662,   663,   664,   665,   150,   151,   152,
     153,   154,   155,   666,   667,   158,   668,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
     170,     0,     0,   171,   172,   669,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
     185,   670,   187,   188,   189,   190,   671,   672,   192,     0,
     193,   194,   673,   196,     0,   197,     0,   198,   199,  1401,
     200,   201,   202,   203,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,   230,   674,   675,     0,   676,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,     0,     0,   244,   245,   246,   247,     0,   248,   249,
     250,   677,   678,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   679,
     268,   680,   270,   271,   272,   273,   681,   274,   275,   276,
     277,   682,   683,   279,   684,   281,   282,   283,     0,   284,
     285,     0,     0,   685,   287,   288,     0,     0,   289,   290,
     291,   292,   293,   686,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   687,   307,   308,   309,
     310,   311,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   688,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   689,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   690,   360,   361,   362,   363,   364,
     365,   366,   367,   691,   369,     0,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   692,     0,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
       0,   693,   694,     0,     0,   394,   395,   695,   397,   696,
     697,   399,   400,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   698,     0,   411,   412,   413,
     414,   415,   416,   699,     0,   418,   419,   420,   421,   422,
     423,     0,     0,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   700,     0,     0,     0,
       0,     0,     0,   701,   702,     0,     0,     0,     0,     0,
       0,     0,   704,     0,     0,     0,     0,   705,    87,   644,
     508,   645,   646,   647,   648,   649,     0,     0,     0,     0,
       0,     0,     0,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,   104,   105,
     106,   107,   108,   650,   110,   651,   652,     0,   113,   114,
     115,   116,   117,   118,   653,   654,   119,   120,   655,   656,
     123,     0,   124,   125,   126,   127,   657,     0,   658,     0,
     130,   131,   132,   133,   134,   135,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   659,   660,   661,   662,   663,   664,   665,   150,   151,
     152,   153,   154,   155,   666,   667,   158,   668,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   669,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   670,   187,   188,   189,   190,   671,   672,   192,
       0,   193,   194,   673,   196,     0,   197,     0,   198,   199,
       0,   200,   201,   202,   203,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,   230,   674,   675,     0,
     676,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,     0,     0,   244,   245,   246,   247,     0,   248,
     249,   250,   677,   678,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     679,   268,   680,   270,   271,   272,   273,   681,   274,   275,
     276,   277,   682,   683,   279,   684,   281,   282,   283,     0,
     284,   285,     0,     0,   685,   287,   288,     0,     0,   289,
     290,   291,   292,   293,   686,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   687,   307,   308,
     309,   310,   311,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   688,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   689,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   690,   360,   361,   362,   363,
     364,   365,   366,   367,   691,   369,     0,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   692,
       0,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,     0,   693,   694,     0,     0,   394,   395,   695,   397,
     696,   697,   399,   400,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,   698,     0,   411,   412,
     413,   414,   415,   416,   699,     0,   418,   419,   420,   421,
     422,   423,     0,     0,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   700,     0,     0,
       0,     0,     0,     0,   701,   702,     0,     0,     0,     0,
       0,     0,     0,   704,     0,     0,     0,     0,   705,    87,
     644,   508,   645,   646,   647,   648,   649,     0,     0,     0,
       0,     0,     0,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,   104,
     105,   106,   107,   108,   650,   110,   651,   652,     0,   113,
     114,   115,   116,   117,   118,   653,   654,   119,   120,   655,
     656,   123,     0,   124,   125,   126,   127,   657,     0,   658,
       0,   130,   131,   132,   133,   134,   135,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   659,   660,   661,   662,   663,   664,   665,   150,
     151,   152,   153,   154,   155,   666,   667,   158,   668,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   669,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   670,   187,   188,   189,   190,   671,   672,
     192,     0,   193,   194,   673,   196,     0,   197,     0,   198,
     199,     0,   200,   201,   202,   203,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,   230,   674,   675,
       0,   676,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,     0,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   677,   678,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   679,   268,   680,   270,   271,   272,   273,   681,   274,
     275,   276,   277,   682,   683,   279,   684,   281,   282,   283,
       0,   284,   285,     0,     0,   685,   287,   288,     0,     0,
     289,   290,   291,   292,   293,   686,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   687,   307,
     308,   309,   310,   311,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   688,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     689,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   690,   360,   361,   362,
     363,   364,   365,   366,   367,   691,   369,     0,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     692,     0,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,     0,   693,   694,     0,     0,   394,   395,   695,
     397,   696,   697,   399,   400,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   698,     0,   411,
     412,   413,   414,   415,   416,   699,     0,   418,   419,   420,
     421,   422,   423,     0,     0,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   700,     0,
       0,     0,     0,     0,     0,  1170,  1171,     0,     0,     0,
       0,     0,     0,     0,   704,     0,     0,     0,     0,   705,
      87,  1520,   508,   645,   646,   647,   648,   649,     0,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
     104,   105,   106,   107,   108,   650,   110,   651,   652,     0,
     113,   114,   115,   116,   117,   118,   653,   654,   119,   120,
     655,   656,   123,     0,   124,   125,   126,   127,   657,     0,
     658,     0,   130,   131,   132,   133,   134,   135,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   659,   660,   661,   662,   663,   664,   665,
     150,   151,   152,   153,   154,   155,   666,   667,   158,   668,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   669,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   670,   187,   188,   189,   190,   671,
     672,   192,     0,   193,   194,   673,   196,     0,   197,     0,
     198,   199,     0,   200,   201,   202,   203,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,   230,   674,
     675,     0,   676,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,     0,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   677,   678,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   679,   268,   680,   270,   271,   272,   273,   681,
     274,   275,   276,   277,   682,   683,   279,   684,   281,   282,
     283,     0,   284,   285,     0,     0,   685,   287,   288,     0,
       0,   289,   290,   291,   292,   293,   686,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   687,
     307,   308,   309,   310,   311,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   688,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   689,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   690,   360,   361,
     362,   363,   364,   365,   366,   367,   691,   369,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   692,     0,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,     0,   693,   694,     0,     0,   394,   395,
     695,   397,   696,   697,   399,   400,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,   698,     0,
     411,   412,   413,   414,   415,   416,   699,     0,   418,   419,
     420,   421,   422,   423,     0,     0,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   700,
       0,     0,     0,     0,     0,     0,   701,   702,     0,     0,
       0,     0,     0,     0,     0,   704,     0,     0,     0,     0,
     705,    87,   644,   508,   645,   646,   647,   648,   649,     0,
       0,     0,     0,     0,     0,     0,    88,    89,    90,    91,
      92,    93,    94,    95,     0,    96,    97,    98,     0,     0,
       0,     0,     0,     0,     0,    99,   100,     0,   101,   102,
     103,   104,   105,   106,   107,   108,   650,   110,   651,   652,
       0,   113,   114,   115,   116,   117,   118,   653,   654,   119,
     120,   655,   656,   123,     0,   124,   125,   126,   127,   657,
       0,   658,     0,   130,   131,   132,   133,   134,   135,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   659,   660,   661,   662,   663,   664,
     665,   150,   151,   152,   153,   154,   155,   666,   667,   158,
     668,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,   170,     0,     0,   171,   172,   669,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,   185,   670,   187,   188,   189,   190,
     671,   672,   192,     0,   193,   194,   673,   196,     0,   197,
       0,   198,   199,     0,   200,   201,   202,   203,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,   230,
     674,   675,     0,   676,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,     0,     0,   244,   245,   246,
     247,     0,   248,   249,   250,   677,   678,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   679,   268,   680,   270,   271,   272,   273,
     681,   274,   275,   276,   277,   682,   683,   279,   684,   281,
     282,   283,     0,   284,   285,     0,     0,   685,   287,   288,
       0,     0,   289,   290,   291,   292,   293,   686,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     687,   307,   308,   309,   310,   311,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   688,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   689,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   690,   360,
     361,   362,   363,   364,   365,   366,   367,   691,   369,     0,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   692,     0,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,     0,   693,   694,     0,     0,   394,
     395,   695,   397,   696,   697,   399,   400,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   698,
       0,   411,   412,   413,   414,   415,   416,   699,     0,   418,
     419,   420,   421,   422,   423,     0,     0,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     700,     0,     0,     0,     0,     0,     0,   701,   702,     0,
       0,     0,     0,     0,     0,     0,  2339,     0,     0,     0,
       0,   705,    87,   644,   508,   645,   646,   647,   648,   649,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,  2527,   650,   110,   651,
     652,     0,   113,   114,   115,   116,   117,   118,   653,   654,
     119,   120,   655,   656,   123,     0,   124,   125,   126,   127,
     657,     0,   658,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,  2528,   659,   660,   661,   662,   663,
     664,   665,   150,   151,   152,   153,   154,   155,   666,   667,
     158,   668,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     669,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   670,   187,   188,   189,
     190,   671,   672,   192,     0,   193,   194,   673,   196,     0,
     197,     0,   198,   199,     0,   200,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
     230,   674,   675,     0,   676,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,     0,     0,   244,   245,
     246,   247,     0,   248,   249,   250,   677,   678,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   679,   268,   680,   270,   271,   272,
     273,   681,   274,   275,   276,   277,   682,   683,   279,   684,
     281,   282,   283,     0,   284,   285,     0,     0,   685,   287,
     288,     0,     0,   289,   290,   291,   292,   293,   686,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   687,   307,   308,   309,   310,   311,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   688,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   689,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   690,
     360,   361,   362,   363,   364,   365,   366,   367,   691,   369,
       0,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   692,     0,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,     0,   693,   694,     0,     0,
     394,   395,   695,   397,   696,   697,   399,   400,   401,   402,
    2529,   404,   405,     0,     0,   406,   407,   408,   409,   410,
     698,     0,   411,   412,   413,   414,   415,   416,   699,     0,
     418,   419,   420,   421,   422,   423,     0,     0,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   700,     0,     0,     0,     0,     0,     0,   701,   702,
       0,     0,     0,     0,     0,     0,     0,   704,     0,     0,
       0,     0,   705,    87,   644,   508,   645,   646,   647,   648,
     649,     0,     0,     0,     0,     0,     0,     0,    88,    89,
      90,    91,    92,    93,    94,    95,     0,    96,    97,    98,
       0,     0,     0,     0,     0,     0,     0,    99,   100,     0,
     101,   102,   103,   104,   105,   106,   107,   108,   650,   110,
     651,   652,     0,   113,   114,   115,   116,   117,   118,   653,
     654,   119,   120,   655,   656,   123,     0,   124,   125,   126,
     127,   657,     0,   658,     0,   130,   131,   132,   133,   134,
     135,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,  2528,   659,   660,   661,   662,
     663,   664,   665,   150,   151,   152,   153,   154,   155,   666,
     667,   158,   668,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,   170,     0,     0,   171,
     172,   669,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,   185,   670,   187,   188,
     189,   190,   671,   672,   192,     0,   193,   194,   673,   196,
       0,   197,     0,   198,   199,     0,   200,   201,   202,   203,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,   230,   674,   675,     0,   676,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,     0,     0,   244,
     245,   246,   247,     0,   248,   249,   250,   677,   678,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   679,   268,   680,   270,   271,
     272,   273,   681,   274,   275,   276,   277,   682,   683,   279,
     684,   281,   282,   283,     0,   284,   285,     0,     0,   685,
     287,   288,     0,     0,   289,   290,   291,   292,   293,   686,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   687,   307,   308,   309,   310,   311,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   688,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   689,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     690,   360,   361,   362,   363,   364,   365,   366,   367,   691,
     369,     0,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   692,     0,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,     0,   693,   694,     0,
       0,   394,   395,   695,   397,   696,   697,   399,   400,   401,
     402,  2529,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   698,     0,   411,   412,   413,   414,   415,   416,   699,
       0,   418,   419,   420,   421,   422,   423,     0,     0,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   700,     0,     0,     0,     0,     0,     0,   701,
     702,     0,     0,     0,     0,     0,     0,     0,   704,     0,
       0,     0,     0,   705,    87,   644,   508,   645,   646,   647,
     648,   649,     0,     0,     0,     0,     0,     0,     0,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,   104,   105,   106,   107,   108,   650,
     110,   651,   652,     0,   113,   114,   115,   116,   117,   118,
     653,   654,   119,   120,   655,   656,   123,     0,   124,   125,
     126,   127,   657,     0,   658,     0,   130,   131,   132,   133,
     134,   135,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   659,   660,   661,
     662,   663,   664,   665,   150,   151,   152,   153,   154,   155,
     666,   667,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   669,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   670,   187,
     188,   189,   190,   671,   672,   192,     0,   193,   194,   673,
     196,     0,   197,     0,   198,   199,     0,   200,   201,   202,
     203,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,   230,   674,   675,     0,   676,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,     0,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   677,   678,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   679,   268,   680,   270,
     271,   272,   273,     0,   274,   275,   276,   277,   682,   683,
     279,   684,   281,   282,   283,     0,   284,   285,     0,     0,
     685,   287,   288,     0,     0,   289,   290,   291,   292,   293,
     686,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   687,   307,   308,   309,   310,   311,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     688,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   690,   360,   361,   362,   363,   364,   365,   366,   367,
     691,   369,     0,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   692,     0,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,     0,   693,   694,
       0,     0,   394,   395,   695,   397,   696,   697,   399,   400,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,   698,     0,   411,   412,   413,   414,   415,   416,
     699,     0,   418,   419,   420,   421,   422,   423,     0,     0,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,     0,     0,     0,     0,     0,     0,     0,
    1383,  1384,     0,     0,    87,   644,   508,   645,   646,  1385,
     648,   649,     0,     0,   705,     0,     0,     0,     0,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,   104,   105,   106,   107,   108,   650,
     110,   651,   652,     0,   113,   114,   115,   116,   117,   118,
     653,   654,   119,   120,   655,   656,   123,     0,   124,   125,
     126,   127,   657,     0,   658,     0,   130,   131,   132,   133,
     134,   135,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   659,   660,   661,
     662,   663,   664,   665,   150,   151,   152,   153,   154,   155,
     666,   667,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   669,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   670,   187,
     188,   189,   190,   671,   672,   192,     0,   193,   194,   673,
     196,     0,   197,     0,   198,   199,     0,   200,   201,   202,
     203,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,   230,   674,   675,     0,   676,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,     0,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   677,   678,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   679,   268,   680,   270,
     271,   272,   273,     0,   274,   275,   276,   277,   682,   683,
     279,   684,   281,   282,   283,     0,   284,   285,     0,     0,
     286,   287,   288,     0,     0,   289,   290,   291,   292,   293,
     686,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   687,   307,   308,   309,   310,   311,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     688,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,  1509,  1510,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   690,   360,   361,   362,   363,   364,   365,   366,   367,
     691,   369,     0,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   692,     0,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,     0,   693,   694,
       0,     0,   394,   395,   695,   397,   696,   697,   399,   400,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,   698,     0,   411,   412,   413,   414,   415,   416,
     699,     0,   418,   419,   420,   421,   422,   423,     0,     0,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,     0,     0,     0,     0,     0,     0,     0,
    1511,  1512,     0,     0,     0,     0,     0,     0,     0,  1385,
       0,     0,     0,     0,   705,    87,   644,   508,   645,   646,
     647,   648,   649,     0,     0,     0,     0,     0,     0,     0,
      88,    89,    90,    91,    92,    93,    94,    95,     0,    96,
      97,    98,     0,     0,     0,     0,     0,     0,     0,    99,
     100,     0,   101,   102,   103,   104,   105,   106,   107,   108,
     650,   110,   651,   652,     0,   113,   114,   115,   116,   117,
     118,   653,   654,   119,   120,   655,   656,   123,     0,   124,
     125,   126,   127,   657,     0,   658,     0,   130,   131,   132,
     133,   134,   135,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   659,   660,
     661,   662,   663,   664,   665,   150,   151,   152,   153,   154,
     155,   666,   667,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,   170,     0,
       0,   171,   172,   669,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,   185,   670,
     187,   188,   189,   190,   671,   672,   192,     0,   193,   194,
     673,   196,     0,   197,     0,   198,   199,     0,   200,   201,
     202,   203,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,   230,   674,   675,     0,   676,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,   243,     0,
       0,   244,   245,   246,   247,     0,   248,   249,   250,   677,
     678,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   679,   268,   680,
     270,   271,   272,   273,     0,   274,   275,   276,   277,   682,
     683,   279,   684,   281,   282,   283,     0,   284,   285,     0,
       0,   685,   287,   288,     0,     0,   289,   290,   291,   292,
     293,   686,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   687,   307,   308,   309,   310,   311,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   688,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   690,   360,   361,   362,   363,   364,   365,   366,
     367,   691,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   692,     0,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,     0,   693,
     694,     0,     0,   394,   395,   695,   397,   696,   697,   399,
     400,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,   698,     0,   411,   412,   413,   414,   415,
     416,   699,     0,   418,   419,   420,   421,   422,   423,     0,
       0,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,     0,     0,     0,     0,     0,     0,
       0,  1383,  1384,     0,     0,     0,     0,     0,     0,     0,
    1385,     0,     0,     0,     0,   705,    87,   644,   508,   645,
     646,   647,   648,   649,     0,     0,     0,     0,     0,     0,
       0,    88,    89,    90,    91,    92,    93,    94,    95,     0,
      96,    97,    98,     0,     0,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,   104,   105,   106,   107,
   -1466,   650,   110,   651,   652,     0,   113,   114,   115,   116,
     117,   118,   653,   654,   119,   120,   655,   656,   123,     0,
     124,   125,   126,   127,   657,     0,   658,     0,   130,   131,
     132,   133,   134,   135,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,  2528,   659,
     660,   661,   662,   663,   664,   665,   150,   151,   152,   153,
     154,   155,   666,   667,   158,   668,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   669,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     670,   187,   188,   189,   190,   671,   672,   192,     0,   193,
     194,   673,   196,     0,   197,     0,   198,   199,     0,   200,
     201,   202,   203,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212, -1466,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,   230,   674,   675,     0,   676,     0,
     234,     0,     0,   237,   238,   239,   240,   241,   242,   243,
       0,     0,   244,   245,   246, -1466,     0,   248,   249,   250,
     677,   678,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   679,   268,
     680,   270,   271,   272,   273,     0,   274,   275,     0,   277,
     682,   683,   279,   684,   281,   282,   283,     0,   284,   285,
       0,     0,   685,   287,   288,     0,     0,   289,   290,   291,
     292,   293,   686,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   687,   307,   308,   309,   310,
     311,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   688,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   689,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   690,   360,   361,   362,   363,   364, -1466,
     366,   367,   691,   369,     0,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   692,     0,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,     0,
     693,   694,     0,     0,   394,   395,   695,   397,   696,   697,
     399,   400,   401,   402,  2529,   404,   405,     0,     0,   406,
     407,   408,   409,   410,   698,     0,   411,   412,   413,   414,
     415,   416,   699,     0,   418,   419,   420,   421,   422,   423,
       0,     0,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444, -1466,     0,     0,     0,     0,
       0,     0,   701,   702,     0,     0,     0,     0,     0,     0,
       0,   704,     0,     0,     0,     0,   705,    87,   644,   508,
     645,   646,   647,   648,   649,     0,     0,     0,     0,     0,
       0,     0,    88,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,     0,     0,     0,     0,     0,     0,
       0,    99,   100,     0,   101,   102,   103,   104,   105,   106,
     107,     0,   650,   110,   651,   652,     0,   113,   114,   115,
     116,   117,   118,   653,   654,   119,   120,   655,   656,   123,
       0,   124,   125,   126,   127,   657,     0,   658,     0,   130,
     131,   132,   133,   134,   135,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     659,   660,   661,   662,   663,   664,   665,   150,   151,   152,
     153,   154,   155,   666,   667,   158,   668,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
     170,     0,     0,   171,   172,   669,   174,   175,     0,   176,
     177,   178,     0,   179,     0,   181,     0,   182,   183,   184,
     185,   670,   187,   188,   189,   190,   671,   672,   192,     0,
     193,   194,   673,   196,     0,   197,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,   212,     0,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,   230,   674,   675,     0,   676,
       0,   234,     0,     0,   237,   238,   239,   240,   241,   242,
     243,     0,     0,   244,   245,   246,     0,     0,   248,   249,
     250,   677,   678,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   679,
     268,   680,   270,   271,   272,   273,     0,   274,   275,     0,
     277,   682,   683,   279,   684,   281,   282,   283,     0,   284,
     285,     0,     0,   685,   287,   288,     0,     0,   289,   290,
     291,   292,   293,   686,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   687,   307,   308,   309,
     310,   311,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   688,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   689,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   690,   360,   361,   362,   363,   364,
       0,   366,   367,   691,   369,     0,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   692,     0,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
       0,   693,   694,     0,     0,   394,   395,   695,   397,   696,
     697,   399,   400,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   698,     0,   411,   412,   413,
     414,   415,   416,   699,     0,   418,   419,   420,   421,   422,
     423,     0,     0,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,     0,     0,     0,     0,
       0,     0,     0,   701,   702,   466,     0,     0,     0,     0,
       0,     0,   704,     0,     0,     0,     0,   705,     0,     0,
      88,    89,    90,    91,    92,    93,    94,    95,     0,    96,
      97,    98,     0,     0,     0,     0,     0,  2017,     0,    99,
     100,     0,   101,   102,   103,     0,   105,   106,   107,   108,
     109,     0,   111,   112,     0,   113,   114,   115,   116,   117,
     118,     0,     0,   119,   120,   121,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,     0,   130,   131,   132,
     133,   134,     0,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,  -553,   146,   147,   148,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,   170,     0,
       0,   171,   172,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,     0,   192,     0,   193,   194,
     195,   196,     0,   197,     0,   198,     0,     0,  -553,   201,
     202,   203,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,     0,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,  -553,   226,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   234,
       0,     0,   237,  -553,   239,   240,   241,   242,   243,     0,
       0,   244,  -553,   246,     0,     0,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,  -553,   269,
     270,   271,   272,   273,     0,   274,   275,     0,   277,     0,
     278,   279,   280,   281,   282,   283,     0,   284,   285,     0,
       0,   286,   287,   288,     0,     0,   289,   290,     0,   292,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,   311,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,  -553,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,     0,   360,   361,   362,   363,   364,     0,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
       0,   385,     0,   387,   388,   389,   390,   391,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,     0,     0,   411,   412,   413,   414,   415,
     416,   417,     0,   418,     0,   420,   421,   422,   423,     0,
       0,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,     0,     0,     0,    87,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   762,    88,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,     0,     0,     0,     0,     0,     0,
       0,    99,   100,     0,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,     0,   113,   114,   115,
     116,   117,   118,     0,   654,   119,   120,   121,   122,   123,
       0,   124,   125,   126,   127,   657,     0,   658,     0,   130,
     131,   132,   133,   134,   135,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     659,   660,   661,   662,   663,   664,   665,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
     170,     0,     0,   171,   172,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   671,     0,   192,     0,
     193,   194,   195,   196,     0,   197,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,  1774,     0,   244,   245,   246,   247,     0,   248,   249,
     250,   677,   678,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,     0,   274,   275,   276,
     277,     0,   683,   279,   280,   281,   282,   283,     0,   284,
     285,     0,   533,   286,   287,   288,     0,     0,   289,   290,
     291,   292,   293,   686,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   687,   307,   308,   309,
     310,   311,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,  1775,
     347,   348,   349,   350,   351,   352,   353,   354,    24,   355,
     356,   357,   358,   359,   690,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   692,     0,
     383,   384,    28,   385,   386,   387,   388,   389,   390,   391,
       0,   392,   393,     0,     0,   394,   395,   695,   397,   696,
       0,   399,   400,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   698,     0,   411,   412,   413,
     414,   415,   624,   417,     0,   418,   419,   420,   421,   422,
     423,     0,     0,   424,     0,    31,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,     0,     0,    32,    87,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1776,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,     0,   113,
     114,   115,   116,   117,   118,     0,   654,   119,   120,   121,
     122,   123,     0,   124,   125,   126,   127,   657,     0,   658,
       0,   130,   131,   132,   133,   134,   135,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   659,   660,   661,   662,   663,   664,   665,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   671,     0,
     192,     0,   193,   194,   195,   196,     0,   197,     0,   198,
     199,     0,   200,   201,   202,   203,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,  1774,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   677,   678,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,     0,   274,
     275,   276,   277,     0,   683,   279,   280,   281,   282,   283,
       0,   284,   285,     0,   533,   286,   287,   288,     0,     0,
     289,   290,   291,   292,   293,   686,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   687,   307,
     308,   309,   310,   311,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,  1775,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   690,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     692,     0,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,     0,   392,   393,     0,     0,   394,   395,   695,
     397,   696,     0,   399,   400,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   698,     0,   411,
     412,   413,   414,   415,   416,   417,     0,   418,   419,   420,
     421,   422,   423,     0,     0,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,     0,     0,
      87,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1776,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,     0,
     113,   114,   115,   116,   117,   118,     0,   654,   119,   120,
     121,   122,   123,     0,   124,   125,   126,   127,   657,     0,
     658,     0,   130,   131,   132,   133,   134,   135,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   659,   660,   661,   662,   663,   664,   665,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   671,
       0,   192,     0,   193,   194,   195,   196,     0,   197,     0,
     198,   199,     0,   200,   201,   202,   203,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,     0,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   677,   678,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,     0,
     274,   275,   276,   277,     0,   683,   279,   280,   281,   282,
     283,     0,   284,   285,     0,     0,   286,   287,   288,     0,
       0,   289,   290,   291,   292,   293,   686,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   687,
     307,   308,   309,   310,   311,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,  1775,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   690,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   692,     0,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,     0,   392,   393,     0,     0,   394,   395,
     695,   397,   696,     0,   399,   400,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,   698,     0,
     411,   412,   413,   414,   415,   416,   417,     0,   418,   419,
     420,   421,   422,   423,     0,     0,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,     0,
       0,    87,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,    88,    89,    90,    91,
      92,    93,    94,    95,     0,    96,    97,    98,     0,     0,
       0,     0,     0,     0,     0,    99,   100,     0,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
       0,   113,   114,   115,   116,   117,   118,     0,   654,   119,
     120,   121,   122,   123,     0,   124,   125,   126,   127,   657,
       0,   658,     0,   130,   131,   132,   133,   134,   135,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   659,   660,   661,   662,   663,   664,
     665,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,   170,     0,     0,   171,   172,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     671,     0,   192,     0,   193,   194,   195,   196,     0,   197,
       0,   198,   199,     0,   200,   201,   202,   203,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,     0,     0,   244,   245,   246,
     247,     0,   248,   249,   250,   677,   678,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
       0,   274,   275,   276,   277,     0,   683,   279,   280,   281,
     282,   283,     0,   284,   285,     0,     0,   286,   287,   288,
       0,     0,   289,   290,   291,   292,   293,   686,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     687,   307,   308,   309,   310,   311,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   690,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   692,     0,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,     0,   392,   393,     0,     0,   394,
     395,   695,   397,   696,     0,   399,   400,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   698,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   418,
     419,   420,   421,   422,   423,     0,     0,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
       0,     0,   623,   964,   508,     0,     0,     0,   648,     0,
       0,     0,     0,     0,     0,     0,  2350,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,   129,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,     0,     0,     0,   149,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   965,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,   199,     0,   200,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,     0,     0,   244,   245,
     246,   247,     0,   248,   249,   250,     0,     0,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,     0,   274,   275,   276,   277,     0,   278,   279,   280,
     281,   282,   283,     0,   284,   285,   966,     0,   286,   287,
     288,     0,     0,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,   311,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,   967,   399,   400,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,     0,   411,   412,   413,   414,   415,   416,   417,     0,
     418,   419,   420,   421,   422,   423,     0,     0,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,     0,     0,   623,     0,     0,     0,     0,   968,   969,
    1643,     0,     0,     0,     0,     0,     0,  1644,    88,    89,
      90,    91,    92,    93,    94,    95,     0,    96,    97,    98,
       3,     4,     0,     0,     0,     0,     0,    99,   100,     0,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,     0,   113,   114,   115,   116,   117,   118,     0,
       0,   119,   120,   121,   122,   123,     0,   124,   125,   126,
     127,   128,     0,   129,     0,   130,   131,   132,   133,   134,
     135,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,     0,     0,     0,   149,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,   170,     0,     0,   171,
     172,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,     0,   192,     0,   193,   194,   195,   196,
       0,   197,     0,   198,   199,     0,   200,   201,   202,   203,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,     0,     0,   244,
     245,   246,   247,     0,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,     0,   274,   275,   276,   277,     0,   278,   279,
     280,   281,   282,   283,     0,   284,   285,     0,     0,   286,
     287,   288,     0,     0,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,   311,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    24,   355,   356,   357,   358,   359,
       0,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,    28,   385,
     386,   387,   388,   389,   390,   391,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,     0,     0,   411,   412,   413,   414,   415,   624,   417,
       0,   418,   419,   420,   421,   422,   423,     0,     0,   424,
       0,    31,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,     0,     0,    32,   466,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
      88,    89,    90,    91,    92,    93,    94,    95,     0,    96,
      97,    98,     0,     0,     0,     0,     0,     0,     0,    99,
     100,     0,   101,   102,   103,     0,   105,   106,   107,   108,
     109,     0,   111,   112,     0,   113,   114,   115,   116,   117,
     118,     0,     0,   119,   120,   121,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,     0,   130,   131,   132,
     133,   134,     0,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,     0,   146,   147,   148,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,   170,     0,
       0,   171,   172,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,     0,   192,     0,   193,   194,
     195,   196,     0,   197,     0,   198,     0,     0,     0,   201,
     202,   203,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,     0,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,     0,   226,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   234,
       0,     0,   237,     0,   239,   240,   241,   242,   243,     0,
       0,   244,     0,   246,     0,     0,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,     0,   269,
     270,   271,   272,   273,     0,   274,   275,     0,   277,     0,
     278,   279,   280,   281,   282,   283,     0,   284,   285,     0,
       0,   286,   287,   288,     0,     0,   289,   290,     0,   292,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,   311,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    24,   355,   356,   357,
     358,   359,     0,   360,   361,   362,   363,   364,     0,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
      28,   385,     0,   387,   388,   389,   390,   391,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,     0,     0,   411,   412,   413,   414,   415,
     624,   417,     0,   418,     0,   420,   421,   422,   423,     0,
       0,   424,     0,    31,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,     0,     0,    32,   466,     0,  2191,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,    88,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,     0,     0,     0,     0,     0,     0,
       0,    99,   100,     0,   101,   102,   103,     0,   105,   106,
     107,   108,   109,     0,   111,   112,     0,   113,   114,   115,
     116,   117,   118,     0,     0,   119,   120,   121,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,     0,   130,
     131,   132,   133,   134,     0,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,     0,   146,   147,   148,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
     170,     0,     0,   171,   172,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,     0,   192,     0,
     193,   194,   195,   196,     0,   197,     0,   198,     0,     0,
       0,   201,   202,   203,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,   212,     0,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
       0,   226,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   234,     0,     0,   237,     0,   239,   240,   241,   242,
     243,     0,     0,   244,     0,   246,     0,     0,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
       0,   269,   270,   271,   272,   273,     0,   274,   275,     0,
     277,     0,   278,   279,   280,   281,   282,   283,     0,   284,
     285,     0,     0,   286,   287,   288,     0,     0,   289,   290,
       0,   292,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   306,   307,   308,   309,
     310,   311,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,     0,   360,   361,   362,   363,   364,
       0,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,     0,   385,     0,   387,   388,   389,   390,   391,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,     0,     0,   411,   412,   413,
     414,   415,   416,   417,     0,   418,     0,   420,   421,   422,
     423,     0,     0,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,     0,     0,   466,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2207,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,     0,   105,
     106,   107,   108,   109,     0,   111,   112,     0,   113,   114,
     115,   116,   117,   118,     0,     0,   119,   120,   121,   122,
     123,     0,   124,   125,   126,   127,   128,     0,     0,     0,
     130,   131,   132,   133,   134,     0,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,     0,   146,   147,
     148,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,     0,   192,
       0,   193,   194,   195,   196,     0,   197,     0,   198,     0,
       0,     0,   201,   202,   203,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   226,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   234,     0,     0,   237,     0,   239,   240,   241,
     242,   243,     0,     0,   244,     0,   246,     0,     0,   248,
     249,   250,     0,     0,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,     0,   269,   270,   271,   272,   273,     0,   274,   275,
       0,   277,     0,   278,   279,   280,   281,   282,   283,     0,
     284,   285,     0,     0,   286,   287,   288,     0,     0,   289,
     290,     0,   292,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,   311,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   360,   361,   362,   363,
     364,     0,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,     0,   385,     0,   387,   388,   389,   390,
     391,     0,   392,   393,     0,     0,   394,   395,   396,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,     0,   411,   412,
     413,   414,   415,   416,   417,     0,   418,     0,   420,   421,
     422,   423,     0,     0,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,     0,     0,   466,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   743,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,     0,
     105,   106,   107,   108,   109,     0,   111,   112,     0,   113,
     114,   115,   116,   117,   118,     0,     0,   119,   120,   121,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
       0,   130,   131,   132,   133,   134,     0,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,     0,   146,
     147,   148,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,     0,
     192,     0,   193,   194,   195,   196,     0,   197,     0,   198,
       0,     0,     0,   201,   202,   203,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,     0,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,     0,   226,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   234,     0,     0,   237,     0,   239,   240,
     241,   242,   243,     0,     0,   244,     0,   246,     0,     0,
     248,   249,   250,     0,     0,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,     0,   269,   270,   271,   272,   273,     0,   274,
     275,     0,   277,     0,   278,   279,   280,   281,   282,   283,
       0,   284,   285,     0,     0,   286,   287,   288,     0,     0,
     289,   290,     0,   292,     0,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,     0,   360,   361,   362,
     363,   364,     0,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,     0,   385,     0,   387,   388,   389,
     390,   391,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,     0,     0,   411,
     412,   413,   414,   415,   416,   417,     0,   418,     0,   420,
     421,   422,   423,     0,     0,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,     0,     0,
     466,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1499,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
       0,   105,   106,   107,   108,   109,     0,   111,   112,     0,
     113,   114,   115,   116,   117,   118,     0,     0,   119,   120,
     121,   122,   123,     0,   124,   125,   126,   127,   128,     0,
       0,     0,   130,   131,   132,   133,   134,     0,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,     0,
     146,   147,   148,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
       0,   192,     0,   193,   194,   195,   196,     0,   197,     0,
     198,     0,     0,     0,   201,   202,   203,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   226,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   234,     0,     0,   237,     0,   239,
     240,   241,   242,   243,     0,     0,   244,     0,   246,     0,
       0,   248,   249,   250,     0,     0,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,     0,   269,   270,   271,   272,   273,     0,
     274,   275,     0,   277,     0,   278,   279,   280,   281,   282,
     283,     0,   284,   285,     0,     0,   286,   287,   288,     0,
       0,   289,   290,     0,   292,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,   311,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   360,   361,
     362,   363,   364,     0,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,     0,   385,     0,   387,   388,
     389,   390,   391,     0,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,   399,   400,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,     0,
     411,   412,   413,   414,   415,   416,   417,     0,   418,     0,
     420,   421,   422,   423,     0,     0,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,     0,
       0,     0,     0,     0,   987,   964,   508,     0,     0,  1365,
     648,     0,     0,     0,     0,  2001,  1366,  1367,  1368,    88,
      89,    90,    91,    92,    93,    94,    95,   843,    96,    97,
      98,   844,   845,   846,   847,   848,   849,   850,    99,   100,
     851,   101,   102,   103,   104,   105,   106,   107,     0,   988,
     110,   989,   990,   852,   113,   114,   115,   116,   117,   118,
     853,   854,   119,   120,   991,   992,   123,   855,   124,   125,
     126,   127,     0,   856,   129,   857,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   858,   139,   140,   141,   142,
     143,   144,   859,   145,   146,   147,   148,   860,   861,   862,
     149,   863,   864,   865,   150,   151,   152,   153,   154,   155,
     993,   994,   158,   866,   159,   867,   160,   161,   162,   163,
     164,   165,   868,   166,   167,   168,   169,   170,   869,   870,
     171,   172,   669,   174,   175,   871,   176,   177,   178,   872,
     179,   180,   181,   873,   182,   183,   184,   185,     0,   187,
     188,   189,   190,     0,   874,   192,   875,   193,   194,   995,
     196,   876,   197,   877,   198,   199,   878,   200,   201,   202,
     203,   204,   879,   205,   880,     0,   207,   881,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   882,   218,
     219,   220,   221,   222,   223,   883,   224,   225,     0,   227,
     228,   229,   230,   996,   997,   884,   998,   885,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   886,   887,
     244,   245,   246,   247,   888,   248,   249,   250,   889,   890,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   999,   268,  1000,   270,
     271,   272,  2102,   891,   274,   275,   276,   277,   892,     0,
     279,  1001,   281,   282,   283,   893,   284,   285,   894,   895,
    2103,   287,   288,   896,   897,   289,     0,   291,   292,   293,
       0,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     898,   304,   305,     0,   307,   308,     0,   310,   311,   312,
     899,   313,   314,   315,   316,   317,   318,   319,   320,   321,
    1002,   323,   324,   325,   326,   900,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   901,   339,
     340,   341,   342,   343,   344,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   902,   355,   356,   357,   358,
     359,   903,   360,  2104,   362,   363,   364,   365,   366,   367,
    1004,   369,   904,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   905,   383,   384,   906,
     385,   386,   387,   388,   389,   390,   391,   907,  1005,  1006,
     908,   909,   394,   395,     0,   397,     0,   910,   399,   400,
     401,   402,   403,   404,   405,   911,   912,   406,   407,   408,
     409,   410,   913,   914,   411,   412,   413,   414,   415,     0,
    1007,   915,   418,   419,   420,   421,   422,   423,   916,   917,
     424,   918,   919,   425,   426,   427,   428,   429,   430,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     442,   443,   444,     0,   466,     0,  1369,  1370,  1371,  1365,
    2105,  2106,  1374,  1375,  1376,  1377,  1366,  1367,  1368,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,     0,   105,   106,   107,   108,   109,
       0,   111,   112,     0,   113,   114,   115,   116,   117,   118,
       0,     0,   119,   120,   121,   122,   123,     0,   124,   125,
     126,   127,   128,     0,     0,     0,   130,   131,   132,   133,
     134,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,     0,   146,   147,   148,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,     0,   192,     0,   193,   194,   195,
     196,     0,   197,     0,   198,     0,     0,     0,   201,   202,
     203,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   226,   227,
     228,   229,   230,   231,   232,     0,   233,     0,   234,     0,
       0,   237,     0,   239,   240,   241,   242,   243,     0,     0,
     244,     0,   246,     0,     0,   248,   249,   250,     0,     0,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,     0,   269,   270,
     271,   272,   273,     0,   274,   275,     0,   277,     0,   278,
     279,   280,   281,   282,   283,     0,   284,   285,     0,     0,
     286,   287,   288,     0,     0,   289,   290,     0,   292,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   360,   361,   362,   363,   364,     0,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,     0,
     385,     0,   387,   388,   389,   390,   391,     0,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,     0,   411,   412,   413,   414,   415,   416,
     417,     0,   418,     0,   420,   421,   422,   423,     0,     0,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,     0,     0,     0,  1369,  1370,  1371,     0,
    1372,  1373,  1374,  1375,  1376,  1377,  1081,     0,     0,  1082,
       0,     0,     0,  1083,  1084,  1085,     0,     0,     0,     0,
       0,     0,     0,     0,  1081,     0,     0,  1082,     0,     0,
    1086,  1083,  1084,  1085,     0,     0,     0,     0,  1088,     0,
       0,     0,     0,  1081,     0,  1089,  1082,     0,  1086,     0,
    1083,  1084,  1085,     0,     0,     0,  1088,     0,     0,     0,
       0,     0,     0,  1089,     0,     0,     0,  1086,     0,     0,
    1090,     0,     0,     0,     0,  1088,     0,  1081,     0,     0,
    1082,     0,  1089,     0,  1083,  1084,  1085,     0,  1090,     0,
       0,     0,     0,     0,     0,  1081,     0,     0,  1082,     0,
       0,  1086,  1083,  1084,  1085,     0,     0,  1090,     0,  1088,
       0,     0,     0,     0,     0,     0,  1089,     0,     0,  1086,
       0,     0,     0,     0,     0,     0,     0,  1088,     0,     0,
       0,     0,     0,     0,  1089,     0,  1081,     0,     0,  1082,
       0,  1090,     0,  1083,  1084,  1085,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1090,
    1086,     0,     0,     0,     0,     0,     0,     0,  1088,     0,
    1081,     0,     0,  1082,     0,  1089,     0,  1083,  1084,  1085,
    1091,     0,     0,     0,     0,  1092,     0,     0,     0,     0,
       0,     0,     0,     0,  1086,     0,     0,     0,  1091,     0,
    1090,     0,  1088,  1092,     0,     0,  1093,  1094,     0,  1089,
       0,     0,     0,     0,     0,     0,     0,  1091,     0,     0,
    1095,     0,  1092,     0,  1093,  1094,     0,     0,     0,     0,
       0,     0,     0,     0,  1090,     0,     0,     0,  1095,     0,
       0,     0,     0,  1093,  1094,     0,     0,     0,     0,     0,
    1096,  1091,     0,  1097,     0,     0,  1092,  1095,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1098,  1096,  1091,
    1099,  1097,     0,     0,  1092,     0,     0,  1093,  1094,     0,
       0,     0,     0,     0,     0,  1098,     0,  1096,  1099,     0,
    1097,  1095,     0,     0,     0,  1093,  1094,     0,     0,     0,
       0,     0,     0,     0,  1098,     0,     0,  1099,     0,  1095,
    1091,     0,     0,     0,     0,  1092,     0,     0,     0,     0,
       0,  1096,     0,     0,  1097,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1093,  1094,  1098,  1096,
       0,  1099,  1097,     0,  1091,     0,     0,     0,     0,  1092,
    1095,     0,     0,     0,  1100,     0,  1098,     0,     0,  1099,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1093,  1094,  1100,     0,     0,     0,     0,     0,     0,     0,
    1096,     0,     0,  1097,  1095,     0,     0,     0,     0,     0,
       0,  1100,     0,     0,     0,     0,     0,  1098,     0,     0,
    1099,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1096,     0,     0,  1097,     0,     0,
       0,     0,     0,     0,     0,  1100,     0,     0,     0,     0,
       0,  1098,     0,     0,  1099,     0,     0,     0,     0,     0,
       0,     0,     0,  1100,     0,     0,     0,     0,     0,     0,
    1101,     0,     0,  1102,  1103,  1104,     0,  1105,  1106,  1107,
    1108,  1109,  1110,     0,     0,     0,     0,  2066,  1101,     0,
       0,  1102,  1103,  1104,     0,  1105,  1106,  1107,  1108,  1109,
    1110,     0,     0,     0,  1100,  2159,     0,  1101,     0,     0,
    1102,  1103,  1104,     0,  1105,  1106,  1107,  1108,  1109,  1110,
       0,     0,  1081,     0,  2178,  1082,     0,     0,     0,  1083,
    1084,  1085,     0,     0,     0,     0,     0,     0,  1100,     0,
       0,  1101,     0,     0,  1102,  1103,  1104,     0,  1105,  1106,
    1107,  1108,  1109,  1110,  1088,     0,     0,     0,  2316,  1101,
       0,  1089,  1102,  1103,  1104,     0,  1105,  1106,  1107,  1108,
    1109,  1110,     0,     0,     0,     0,  2498,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1090,     0,   793,  1081,
       0,     0,  1082,     0,   794,     0,  1083,  1084,  1085,     0,
    1101,   806,     0,  1102,  1103,  1104,     0,  1105,  1106,  1107,
    1108,  1109,  1110,  1086,     0,     0,     0,  2510,   793,     0,
     807,  1088,     0,     0,   794,     0,     0,     0,  1089,     0,
       0,   806,     0,     0,  1101,     0,     0,  1102,  1103,  1104,
       0,  1105,  1106,  1107,  1108,  1109,  1110,     0,     0,     0,
     807,  2603,     0,  1090,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     808,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1091,     0,   795,     0,
     808,  1092,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1093,  1094,     0,     0,     0,     0,   795,     0,
       0,     0,     0,     0,     0,     0,  1095,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   809,     0,     0,     0,     0,
       0,     0,     0,  1091,     0,     0,  1096,     0,  1092,  1097,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1098,     0,   809,     0,     0,     0,  1093,
    1094,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   810,  1095,     0,   811,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   812,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   810,  1096,     0,   811,  1097,   796,     0,     0,
       0,     0,     0,     0,     0,     0,   812,   813,     0,     0,
    1098,     0,     0,  1099,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   796,     0,     0,
    1100,     0,     0,     0,     0,     0,     0,   813,     0,     0,
       0,     0,     0,     0,     0,     0,   814,     0,     0,     0,
     798,   815,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   816,     0,     0,     0,     0,  1569,   817,     0,     0,
     798,   815,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   818,     0,     0,     0,     0,     0,  1100,     0,     0,
       0,   816,     0,     0,     0,     0,     0,  1570,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   818,     0,     0,     0,     0,  1101,     0,     0,  1102,
    1103,  1104,     0,  1105,  1106,  1107,  1108,  1109,  1110,     0,
       0,   800,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   800,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1101,   842,     0,  1102,  1103,  1104,     0,
    1105,  1106,  1107,  1108,  1109,  1110,     0,     0,  1254,    88,
      89,    90,    91,    92,    93,    94,    95,   843,    96,    97,
      98,   844,   845,   846,   847,   848,   849,   850,    99,   100,
     851,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   852,   113,   114,   115,   116,   117,   118,
     853,   854,   119,   120,   121,   122,   123,   855,   124,   125,
     126,   127,   128,   856,   129,   857,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   858,   139,   140,   141,   142,
     143,   144,   859,   145,   146,   147,   148,   860,   861,   862,
     149,   863,   864,   865,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   866,   159,   867,   160,   161,   162,   163,
     164,   165,   868,   166,   167,   168,   169,   170,   869,   870,
     171,   172,   173,   174,   175,   871,   176,   177,   178,   872,
     179,   180,   181,   873,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   874,   192,   875,   193,   194,   195,
     196,   876,   197,   877,   198,   199,   878,   200,   201,   202,
     203,   204,   879,   205,   880,   206,   207,   881,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   882,   218,
     219,   220,   221,   222,   223,   883,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   884,   233,   885,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   886,   887,
     244,   245,   246,   247,   888,   248,   249,   250,   889,   890,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   891,   274,   275,   276,   277,   892,   278,
     279,   280,   281,   282,   283,   893,   284,   285,   894,   895,
     286,   287,   288,   896,   897,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     898,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     899,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   900,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   901,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   902,   355,   356,   357,   358,
     359,   903,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   904,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   905,   383,   384,   906,
     385,   386,   387,   388,   389,   390,   391,   907,   392,   393,
     908,   909,   394,   395,   396,   397,   398,   910,   399,   400,
     401,   402,   403,   404,   405,   911,   912,   406,   407,   408,
     409,   410,   913,   914,   411,   412,   413,   414,   415,   416,
     417,   915,   418,   419,   420,   421,   422,   423,   916,   917,
     424,   918,   919,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   466,     0,     0,     0,     0,     0,     0,
       0,     0,   920,     0,     0,     0,     0,     0,    88,    89,
      90,    91,    92,    93,    94,    95,     0,    96,    97,    98,
       0,     0,     0,     0,     0,     0,     0,    99,   100,     0,
     101,   102,   103,     0,   105,   106,   107,   108,   109,     0,
     111,   112,     0,   113,   114,   115,   116,   117,   118,     0,
       0,   119,   120,   121,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,     0,   130,   131,   132,   133,   134,
       0,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,     0,   146,   147,   148,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,   170,     0,     0,   171,
     172,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,     0,   192,     0,   193,   194,   195,   196,
       0,   197,     0,   198,     0,     0,     0,   201,   202,   203,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   212,     0,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,     0,   226,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   234,     0,     0,
     237,     0,   239,   240,   241,   242,   243,     0,     0,   244,
       0,   246,     0,     0,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,     0,   269,   270,   271,
     272,   273,     0,   274,   275,     0,   277,     0,   278,   279,
     280,   281,   282,   283,     0,   284,   285,     0,     0,   286,
     287,   288,     0,     0,   289,   290,     0,   292,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,   311,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
       0,   360,   361,   362,   363,   364,     0,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,     0,   385,
       0,   387,   388,   389,   390,   391,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,     0,     0,   411,   412,   413,   414,   415,   416,   417,
       0,   418,     0,   420,   421,   422,   423,     0,     0,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   623,   964,   508,     0,     0,     0,   648,     0,
       0,  1921,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,   129,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,     0,     0,     0,   149,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,  1134,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   965,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,   199,     0,   200,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,     0,     0,   244,   245,
     246,   247,     0,   248,   249,   250,     0,     0,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,     0,   274,   275,   276,   277,     0,   278,   279,   280,
     281,   282,   283,     0,   284,   285,   966,     0,   286,   287,
     288,     0,     0,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,   311,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,   967,   399,   400,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,     0,   411,   412,   413,   414,   415,   416,   417,     0,
     418,   419,   420,   421,   422,   423,     0,     0,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   623,   964,   508,     0,     0,     0,   648,   968,   969,
       0,     0,     0,     0,     0,     0,    88,    89,    90,    91,
      92,    93,    94,    95,     0,    96,    97,    98,     0,     0,
       0,     0,     0,     0,     0,    99,   100,     0,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
       0,   113,   114,   115,   116,   117,   118,     0,     0,   119,
     120,   121,   122,   123,     0,   124,   125,   126,   127,   128,
       0,   129,     0,   130,   131,   132,   133,   134,   135,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,     0,     0,     0,   149,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
    1136,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,   170,     0,     0,   171,   172,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   965,   192,     0,   193,   194,   195,   196,     0,   197,
       0,   198,   199,     0,   200,   201,   202,   203,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,     0,     0,   244,   245,   246,
     247,     0,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
       0,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,     0,   284,   285,   966,     0,   286,   287,   288,
       0,     0,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     306,   307,   308,   309,   310,   311,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,     0,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,   967,   399,   400,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,     0,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   418,
     419,   420,   421,   422,   423,     0,     0,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     623,   964,   508,     0,     0,     0,   648,   968,   969,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,     0,
     113,   114,   115,   116,   117,   118,     0,     0,   119,   120,
     121,   122,   123,     0,   124,   125,   126,   127,   128,     0,
     129,     0,   130,   131,   132,   133,   134,   135,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,     0,     0,     0,   149,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     965,   192,     0,   193,   194,   195,   196,     0,   197,     0,
     198,   199,     0,   200,   201,   202,   203,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,     0,     0,   244,   245,   246,   247,
       0,   248,   249,   250,     0,     0,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,     0,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,     0,   284,   285,   966,     0,   286,   287,   288,     0,
       0,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,   311,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,     0,   392,   393,     0,     0,   394,   395,
     396,   397,   398,   967,   399,   400,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,     0,
     411,   412,   413,   414,   415,   416,   417,     0,   418,   419,
     420,   421,   422,   423,     0,     0,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,     0,
       0,  1081,     0,     0,  1082,     0,   968,   969,  1083,  1084,
    1085,     0,     0,     0,     0,     0,     0,     0,     0,  1081,
       0,     0,  1082,     0,     0,  1086,  1083,  1084,  1085,  1505,
       0,     0,     0,  1088,     0,     0,     0,     0,  1081,     0,
    1089,  1082,     0,  1086,     0,  1083,  1084,  1085,     0,     0,
       0,  1088,     0,     0,     0,     0,     0,     0,  1089,     0,
       0,     0,  1086,     0,     0,  1090,     0,     0,     0,     0,
    1088,     0,  1081,     0,     0,  1082,     0,  1089,     0,  1083,
    1084,  1085,     0,  1090,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1086,     0,     0,  1676,
       0,     0,  1090,     0,  1088,     0,     0,     0,     0,     0,
       0,  1089,     0,  1081,  1506,     0,  1082,     0,     0,     0,
    1083,  1084,  1085,     0,     0,     0,     0,     0,     0,     0,
       0,  1081,     0,     0,  1082,     0,  1090,  1086,  1083,  1084,
    1085,     0,     0,     0,     0,  1088,     0,     0,     0,     0,
       0,     0,  1089,     0,     0,  1086,     0,     0,  1725,     0,
       0,     0,     0,  1088,     0,     0,     0,     0,     0,     0,
    1089,  1716,     0,     0,     0,  1091,  1717,  1090,     0,     0,
    1092,     0,     0,     0,     0,     0,     0,     0,     0,  2565,
       0,     0,     0,  1091,     0,  1090,     0,     0,  1092,     0,
       0,  1093,  1094,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1091,     0,     0,  1095,     0,  1092,     0,  1093,
    1094,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1095,     0,     0,     0,     0,  1093,  1094,
       0,     0,     0,     0,     0,  1096,  1091,     0,  1097,     0,
       0,  1092,  1095,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1098,  1096,     0,  1099,  1097,     0,     0,     0,
       0,     0,  1093,  1094,     0,     0,     0,     0,     0,     0,
    1098,     0,  1096,  1099,     0,  1097,  1095,  1091,     0,     0,
       0,     0,  1092,     0,     0,     0,     0,     0,     0,  1098,
       0,     0,  1099,     0,     0,  1091,     0,     0,     0,     0,
    1092,     0,     0,  1093,  1094,     0,  1096,     0,     0,  1097,
       0,     0,     0,     0,  2566,     0,     0,  1095,     0,     0,
       0,  1093,  1094,  1098,     0,     0,  1099,     0,     0,     0,
       0,     0,     0,     0,     0,  1095,     0,     0,     0,  1100,
       0,     0,     0,     0,     0,     0,     0,  1096,     0,     0,
    1097,     0,     0,     0,     0,     0,     0,  1100,     0,     0,
       0,     0,     0,     0,  1098,  1096,  1081,  1099,  1097,  1082,
       0,     0,     0,  1083,  1084,  1085,  1100,     0,     0,     0,
       0,     0,  1098,     0,  1690,  1099,     0,     0,     0,     0,
    1086,     0,     0,     0,     0,  1507,     0,     0,  1088,     0,
       0,     0,     0,     0,     0,  1089,     0,     0,     0,     0,
    1100,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1090,     0,     0,     0,     0,  1101,     0,     0,  1102,  1103,
    1104,     0,  1105,  1106,  1107,  1108,  1109,  1110,     0,     0,
       0,  1100,     0,  1101,     0,     0,  1102,  1103,  1104,     0,
    1105,  1106,  1107,  1108,  1109,  1110,     0,     0,  1081,  1100,
       0,  1082,  1101,     0,     0,  1102,  1103,  1104,     0,  1105,
    1106,  1107,  1108,  1109,  1110,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1081,     0,     0,  1082,
    1088,     0,     0,  1083,  1084,  1085,  1101, -1466,     0,  1102,
    1103,  1104,     0,  1105,  1106,  1107,  1108,  1109,  1110,     0,
    1086,     0,     0,  1730,     0,     0,     0,     0,  1088,     0,
       0,     0,  1090,     0,     0,  1089,     0,     0,     0,     0,
    1091,     0,     0,     0,     0,  1092,     0,  1101,     0,     0,
    1102,  1103,  1104,     0,  1105,  1106,  1107,  1108,  1109,  1110,
    1090,     0,     0,     0,     0,  1101,  1093,  1094,  1102,  1103,
    1104,     0,  1105,  1106,  1107,  1108,  1109,  1110,     0,  1081,
    1095,     0,  1082,     0,     0,     0,  1083,  1084,  1085,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2177,     0,     0,  1086,     0,     0,     0,     0,     0,     0,
    1096,  1088,     0,  1097,     0,     0,     0,     0,  1089,     0,
       0,     0,     0,     0,     0,     0,     0,  1098,  1081,     0,
    1099,  1082,     0,     0,     0,  1083,  1084,  1085,     0,     0,
       0,     0, -1466,  1090,     0,     0,     0, -1466,     0,     0,
       0,     0,  1086,     0,     0,     0,     0,     0,     0,     0,
    1088,     0,     0,     0,     0,     0,     0,  1089,     0,     0,
    1091,     0,     0,     0,     0,  1092,     0,     0,     0,     0,
       0,     0, -1466,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1090,     0,     0,     0,  1093,  1094,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1095,     0,     0,     0,  1100,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1098,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1096,     0,     0,  1097,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1091,     0,     0,     0,  1098,  1092,     0,
    1099,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1093,
    1094,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1095,     0,     0,     0,     0,     0,     0,
       0,     0,  1091,     0,     0,     0,     0,  1092,     0,     0,
    1101,     0,     0,  1102,  1103,  1104, -1466,  1105,  1106,  1107,
    1108,  1109,  1110,  1096,     0,     0,  1097,     0,  1093,  1094,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1098,     0,  1095,  1099,  1100,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1096,     0,  1939,  1097,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1098,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1466,     0,     0,     0,     0,     0,     0,  1105,
    1106,  1107,  1108,  1109,  1110,     0,     0,  1100,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1101,     0,     0,  1102,  1103,  1104,     0,  1105,  1106,  1107,
    1108,  1109,  1110,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1100,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1101,     0,     0,  1102,  1103,  1104,     0,
    1105,  1106,  1107,  1108,  1109,  1110,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   842,  1101,  1418,     0,  1102,  1103,  1104,     0,  1105,
    1106,  1107,  1108,  1109,  1110,     0,    88,    89,    90,    91,
      92,    93,    94,    95,   843,    96,    97,    98,   844,   845,
     846,   847,   848,   849,   850,    99,   100,   851,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     852,   113,   114,   115,   116,   117,   118,   853,   854,   119,
     120,   121,   122,   123,   855,   124,   125,   126,   127,   128,
     856,   129,   857,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   858,   139,   140,   141,   142,   143,   144,   859,
     145,   146,   147,   148,   860,   861,   862,   149,   863,   864,
     865,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     866,   159,   867,   160,   161,   162,   163,   164,   165,   868,
     166,   167,   168,   169,   170,   869,   870,   171,   172,   173,
     174,   175,   871,   176,   177,   178,   872,   179,   180,   181,
     873,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   874,   192,   875,   193,   194,   195,   196,   876,   197,
     877,   198,   199,   878,   200,   201,   202,   203,   204,   879,
     205,   880,   206,   207,   881,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   882,   218,   219,   220,   221,
     222,   223,   883,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   884,   233,   885,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   886,   887,   244,   245,   246,
     247,   888,   248,   249,   250,   889,   890,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     891,   274,   275,   276,   277,   892,   278,   279,   280,   281,
     282,   283,   893,   284,   285,   894,   895,   286,   287,   288,
     896,   897,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   898,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   899,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   900,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   901,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   902,   355,   356,   357,   358,   359,   903,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   904,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   905,   383,   384,   906,   385,   386,   387,
     388,   389,   390,   391,   907,   392,   393,   908,   909,   394,
     395,   396,   397,   398,   910,   399,   400,   401,   402,   403,
     404,   405,   911,   912,   406,   407,   408,   409,   410,   913,
     914,   411,   412,   413,   414,   415,   416,   417,   915,   418,
     419,   420,   421,   422,   423,   916,   917,   424,   918,   919,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     842,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,   843,    96,    97,    98,   844,   845,   846,
     847,   848,   849,   850,    99,   100,   851,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   852,
     113,   114,   115,   116,   117,   118,   853,   854,   119,   120,
     121,   122,   123,   855,   124,   125,   126,   127,   128,   856,
     129,   857,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   858,   139,   140,   141,   142,   143,   144,   859,   145,
     146,   147,   148,   860,   861,   862,   149,   863,   864,   865,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   866,
     159,   867,   160,   161,   162,   163,   164,   165,   868,   166,
     167,   168,   169,   170,   869,   870,   171,   172,   173,   174,
     175,   871,   176,   177,   178,   872,   179,   180,   181,   873,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     874,   192,   875,   193,   194,   195,   196,   876,   197,   877,
     198,   199,   878,   200,   201,   202,   203,   204,   879,   205,
     880,   206,   207,   881,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   882,   218,   219,   220,   221,   222,
     223,   883,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   884,   233,   885,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   886,   887,   244,   245,   246,   247,
     888,   248,   249,   250,   889,   890,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   891,
     274,   275,   276,   277,   892,   278,   279,   280,   281,   282,
     283,   893,   284,   285,   894,   895,   286,   287,   288,   896,
     897,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   898,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   899,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   900,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   901,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   902,   355,   356,   357,   358,   359,   903,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   904,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   905,   383,   384,   906,   385,   386,   387,   388,
     389,   390,   391,   907,   392,   393,   908,   909,   394,   395,
     396,   397,   398,   910,   399,   400,   401,   402,   403,   404,
     405,   911,   912,   406,   407,   408,   409,   410,   913,   914,
     411,   412,   413,   414,   415,   416,   417,   915,   418,   419,
     420,   421,   422,   423,   916,   917,   424,   918,   919,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   842,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    88,    89,    90,    91,  1554,    93,
      94,    95,   843,    96,    97,    98,   844,   845,   846,   847,
     848,   849,   850,    99,   100,   851,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   852,   113,
     114,   115,   116,   117,   118,   853,   854,   119,   120,   121,
     122,   123,   855,   124,   125,   126,   127,   128,   856,   129,
     857,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     858,   139,   140,   141,   142,   143,   144,   859,   145,   146,
     147,   148,   860,   861,   862,   149,   863,   864,   865,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   866,   159,
     867,   160,   161,   162,   163,   164,   165,   868,   166,   167,
     168,   169,   170,   869,   870,   171,   172,   173,  1555,   175,
     871,   176,   177,   178,   872,   179,   180,   181,   873,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   874,
     192,   875,   193,   194,   195,   196,   876,   197,   877,   198,
     199,   878,   200,   201,   202,   203,   204,   879,   205,   880,
     206,   207,   881,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   882,   218,   219,   220,   221,   222,   223,
     883,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     884,   233,   885,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   886,   887,   244,   245,   246,   247,   888,
     248,   249,   250,   889,   890,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   891,   274,
     275,   276,   277,   892,   278,   279,   280,   281,   282,   283,
     893,   284,   285,   894,   895,   286,   287,   288,   896,   897,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   898,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   899,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     900,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   901,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     902,   355,   356,   357,   358,   359,   903,  1556,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   904,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   905,   383,   384,   906,   385,   386,   387,   388,   389,
     390,   391,   907,   392,   393,   908,   909,   394,   395,   396,
     397,   398,   910,   399,   400,   401,   402,   403,   404,   405,
     911,   912,   406,   407,   408,   409,   410,   913,   914,   411,
     412,   413,   414,   415,   416,   417,   915,   418,   419,   420,
     421,   422,   423,   916,   917,   424,   918,   919,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,    87,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,     0,   113,   114,
     115,   116,   117,   118,     0,   654,   119,   120,   121,   122,
     123,     0,   124,   125,   126,   127,   657,     0,   658,     0,
     130,   131,   132,   133,   134,   135,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   659,   660,   661,   662,   663,   664,   665,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   671,     0,   192,
       0,   193,   194,   195,   196,     0,   197,     0,   198,   199,
       0,   200,   201,   202,   203,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,     0,     0,   244,   245,   246,   247,     0,   248,
     249,   250,   677,   678,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,   274,   275,
     276,   277,     0,   683,   279,   280,   281,   282,   283,     0,
     284,   285,     0,     0,   286,   287,   288,     0,     0,   289,
     290,   291,   292,   293,   686,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   687,   307,   308,
     309,   310,   311,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   690,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   692,
       0,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,     0,   392,   393,     0,     0,   394,   395,   695,   397,
     696,     0,   399,   400,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,   698,     0,   411,   412,
     413,   414,   415,   416,   417,     0,   418,   419,   420,   421,
     422,   423,     0,     0,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   623,     0,   508,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    88,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,     0,     0,     0,     0,     0,     0,
       0,    99,   100,     0,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,     0,   113,   114,   115,
     116,   117,   118,     0,     0,   119,   120,   121,   122,   123,
       0,   124,   125,   126,   127,   128,     0,   129,     0,   130,
     131,   132,   133,   134,   135,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
       0,     0,     0,   149,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
     170,     0,     0,   171,   172,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   965,   192,     0,
     193,   194,   195,   196,     0,   197,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,     0,     0,   244,   245,   246,   247,     0,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,     0,   274,   275,   276,
     277,     0,   278,   279,   280,   281,   282,   283,     0,   284,
     285,   966,     0,   286,   287,   288,     0,     0,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   306,   307,   308,   309,
     310,   311,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
     967,   399,   400,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,     0,     0,   411,   412,   413,
     414,   415,   416,   417,     0,   418,   419,   420,   421,   422,
     423,     0,     0,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   623,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    88,    89,    90,    91,    92,    93,    94,    95,     0,
      96,    97,    98,     3,     4,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,     0,   113,   114,   115,   116,
     117,   118,     0,     0,   119,   120,   121,   122,   123,     0,
     124,   125,   126,   127,   128,     0,   129,     0,   130,   131,
     132,   133,   134,   135,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,     0,
       0,     0,   149,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,     0,   192,     0,   193,
     194,   195,   196,     0,   197,     0,   198,   199,     0,   200,
     201,   202,   203,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,   230,   231,   232,     0,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
       0,     0,   244,   245,   246,   247,     0,   248,   249,   250,
       0,     0,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,     0,   274,   275,   276,   277,
       0,   278,   279,   280,   281,   282,   283,     0,   284,   285,
       0,     0,   286,   287,   288,     0,     0,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
     311,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,     0,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,     0,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
     399,   400,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,     0,   411,   412,   413,   414,
     415,   416,   417,     0,   418,   419,   420,   421,   422,   423,
       0,     0,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,    87,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      88,    89,    90,    91,    92,    93,    94,    95,     0,    96,
      97,    98,     0,     0,     0,     0,     0,     0,     0,    99,
     100,     0,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,     0,   113,   114,   115,   116,   117,
     118,     0,     0,   119,   120,   121,   122,   123,     0,   124,
     125,   126,   127,   128,     0,   129,     0,   130,   131,   132,
     133,   134,   135,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,     0,     0,
       0,   149,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,   170,     0,
       0,   171,   172,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,     0,   192,     0,   193,   194,
     195,   196,     0,   197,     0,   198,   199,     0,   200,   201,
     202,   203,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,     0,
       0,   244,   245,   246,   247,     0,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,     0,   274,   275,   276,   277,     0,
     278,   279,   280,   281,   282,   283,     0,   284,   285,     0,
       0,   286,   287,   288,     0,     0,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,   311,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,     0,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,     0,     0,   411,   412,   413,   414,   415,
     416,   417,     0,   418,   419,   420,   421,   422,   423,     0,
       0,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   466,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,     0,   105,   106,   107,   108,   109,
       0,   111,   112,     0,   113,   114,   115,   116,   117,   118,
       0,     0,   119,   120,   121,   122,   123,  1192,   124,   125,
     126,   127,   128,     0,     0,  1193,   130,   131,   132,   133,
     134,     0,   136,   137,   138,  1194,   139,   140,   141,   142,
     143,   144,     0,     0,   146,   147,   148,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,     0,   192,     0,   193,   194,   195,
     196,     0,   197,  1195,   198,     0,     0,     0,   201,   202,
     203,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,  1196,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   226,   227,
     228,   229,   230,   231,   232,     0,   233,     0,   234,     0,
       0,   237,     0,   239,   240,   241,   242,   243,     0,     0,
     244,     0,   246,     0,     0,   248,   249,   250,     0,     0,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,     0,   269,   270,
     271,   272,   273,     0,   274,   275,     0,   277,     0,   278,
     279,   280,   281,   282,   283,     0,   284,   285,     0,     0,
     286,   287,   288,     0,     0,   289,   290,     0,   292,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
    1197,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   360,   361,   362,   363,   364,     0,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,     0,
     385,     0,   387,   388,   389,   390,   391,     0,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,   404,   405,     0,  1198,   406,   407,   408,
     409,   410,     0,     0,   411,   412,   413,   414,   415,   416,
     417,     0,   418,     0,   420,   421,   422,   423,     0,     0,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   466,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    88,    89,
      90,    91,    92,    93,    94,    95,     0,    96,    97,    98,
       0,     0,     0,     0,     0,     0,     0,    99,   100,     0,
     101,   102,   103,     0,   105,   106,   107,   108,   109,     0,
     111,   112,     0,   113,   114,   115,   116,   117,   118,     0,
       0,   119,   120,   121,   122,   123,  1192,   124,   125,   126,
     127,   128,     0,     0,     0,   130,   131,   132,   133,   134,
       0,   136,   137,   138,  1194,   139,   140,   141,   142,   143,
     144,     0,     0,   146,   147,   148,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,   170,     0,     0,   171,
     172,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,     0,   192,     0,   193,   194,   195,   196,
       0,   197,  1195,   198,     0,     0,     0,   201,   202,   203,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   212,     0,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,     0,   226,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   234,     0,     0,
     237,     0,   239,   240,   241,   242,   243,     0,     0,   244,
       0,   246,  1617,     0,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,     0,   269,   270,   271,
     272,   273,     0,   274,   275,     0,   277,     0,   278,   279,
     280,   281,   282,   283,     0,   284,   285,     0,     0,   286,
     287,   288,     0,     0,   289,   290,     0,   292,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,   311,   312,  1197,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
       0,   360,   361,   362,   363,   364,     0,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,     0,   385,
       0,   387,   388,   389,   390,   391,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,  1198,   406,   407,   408,   409,
     410,     0,     0,   411,   412,   413,   414,   415,   416,   417,
       0,   418,     0,   420,   421,   422,   423,     0,     0,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   466,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     3,
       4,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   226,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   234,     0,     0,   237,
       0,   239,   240,   241,   242,   243,     0,     0,   244,     0,
     246,     0,     0,   248,   249,   250,     0,     0,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,     0,   269,   270,   271,   272,
     273,     0,   274,   275,     0,   277,     0,   278,   279,   280,
     281,   282,   283,     0,   284,   285,     0,     0,   286,   287,
     288,     0,     0,   289,   290,     0,   292,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,   311,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     360,   361,   362,   363,   364,     0,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,     0,   385,     0,
     387,   388,   389,   390,   391,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,   399,   400,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,     0,   411,   412,   413,   414,   415,   416,   417,     0,
     418,     0,   420,   421,   422,   423,     0,     0,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   466,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    88,    89,    90,    91,
      92,    93,    94,    95,   467,    96,    97,    98,     0,     0,
       0,     0,     0,     0,     0,    99,   100,     0,   101,   102,
     103,     0,   105,   106,   107,   108,   109,     0,   111,   112,
       0,   113,   114,   115,   116,   117,   118,     0,     0,   119,
     120,   121,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,     0,   130,   131,   132,   133,   134,     0,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
       0,   146,   147,   148,     0,     0,     0,     0,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,   170,     0,     0,   171,   172,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,     0,   192,     0,   193,   194,   195,   196,     0,   197,
       0,   198,     0,     0,     0,   201,   202,   203,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
       0,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,     0,   226,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   234,     0,     0,   237,     0,
     239,   240,   241,   242,   243,     0,     0,   244,     0,   246,
       0,     0,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,     0,   269,   270,   271,   272,   273,
       0,   274,   275,     0,   277,     0,   278,   279,   280,   281,
     282,   283,     0,   284,   285,     0,     0,   286,   287,   288,
       0,     0,   289,   290,     0,   292,     0,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     306,   307,   308,   309,   468,   311,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,     0,   360,
     361,   362,   363,   364,     0,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,     0,   385,     0,   387,
     388,   389,   390,   391,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,     0,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   418,
       0,   420,   421,   422,   423,     0,     0,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     466,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,   513,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
       0,   105,   106,   107,   108,   109,     0,   111,   112,     0,
     113,   114,   115,   116,   117,   118,     0,     0,   119,   120,
     121,   122,   123,     0,   124,   125,   126,   127,   128,     0,
       0,     0,   130,   131,   132,   133,   134,     0,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,     0,
     146,   147,   148,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
       0,   192,     0,   193,   194,   195,   196,     0,   197,     0,
     198,     0,     0,     0,   201,   202,   203,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   226,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   234,     0,     0,   237,     0,   239,
     240,   241,   242,   243,     0,     0,   244,     0,   246,     0,
       0,   248,   249,   250,     0,     0,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,     0,   269,   270,   271,   272,   273,     0,
     274,   275,     0,   277,     0,   278,   279,   280,   281,   282,
     283,     0,   284,   285,     0,     0,   286,   287,   288,     0,
       0,   289,   290,     0,   292,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,   311,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   360,   361,
     362,   363,   364,     0,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,     0,   385,     0,   387,   388,
     389,   390,   391,     0,   514,   393,     0,     0,   515,   395,
     396,   397,   398,     0,   399,   400,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,     0,
     411,   412,   413,   414,   415,   416,   417,     0,   418,     0,
     420,   421,   422,   423,     0,     0,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   466,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,     0,
     105,   106,   107,   108,   109,     0,   111,   112,     0,   113,
     114,   115,   116,   117,   118,     0,     0,   119,   120,   121,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
       0,   130,   131,   132,   133,   134,     0,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,     0,   146,
     147,   148,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,     0,
     192,     0,   193,   194,   195,   196,     0,   197,     0,   198,
       0,     0,     0,   201,   202,   203,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,     0,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,     0,   226,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   234,     0,     0,   237,     0,   239,   240,
     241,   242,   243,     0,     0,   244,     0,   246,     0,     0,
     248,   249,   250,     0,     0,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,     0,   269,   270,   271,   272,   273,     0,   274,
     275,     0,   277,     0,   278,   279,   280,   281,   282,   283,
       0,   284,   285,     0,   533,   286,   287,   288,     0,     0,
     289,   290,     0,   292,     0,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,     0,   360,   361,   362,
     363,   364,     0,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,     0,   385,     0,   387,   388,   389,
     390,   391,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,     0,     0,   411,
     412,   413,   414,   415,   416,   417,     0,   418,     0,   420,
     421,   422,   423,     0,     0,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   466,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    88,    89,    90,    91,    92,    93,    94,
      95,   566,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,     0,   105,
     106,   107,   108,   109,     0,   111,   112,     0,   113,   114,
     115,   116,   117,   118,     0,     0,   119,   120,   121,   122,
     123,     0,   124,   125,   126,   127,   128,     0,     0,     0,
     130,   131,   132,   133,   134,     0,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,     0,   146,   147,
     148,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,     0,   192,
       0,   193,   194,   195,   196,     0,   197,     0,   198,     0,
       0,     0,   201,   202,   203,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   226,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   234,     0,     0,   237,     0,   239,   240,   241,
     242,   243,     0,     0,   244,     0,   246,     0,     0,   248,
     249,   250,     0,     0,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,     0,   269,   270,   271,   272,   273,     0,   274,   275,
       0,   277,     0,   278,   279,   280,   281,   282,   283,     0,
     284,   285,     0,     0,   286,   287,   288,     0,     0,   289,
     290,     0,   292,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,   311,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   360,   361,   362,   363,
     364,     0,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,     0,   385,     0,   387,   388,   389,   390,
     391,     0,   567,   393,     0,     0,   568,   395,   396,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,     0,   411,   412,
     413,   414,   415,   416,   417,     0,   418,     0,   420,   421,
     422,   423,     0,     0,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   466,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    88,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,     0,     0,     0,     0,     0,     0,
       0,    99,   100,     0,   101,   102,   103,     0,   105,   106,
     107,   108,   109,     0,   111,   112,     0,   113,   114,   115,
     116,   117,   118,     0,     0,   119,   120,   121,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,     0,   130,
     131,   132,   133,   134,     0,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,     0,   146,   147,   148,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
     170,     0,     0,   171,   172,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,     0,   192,     0,
     193,   194,   195,   196,     0,   197,     0,   198,     0,     0,
       0,   201,   202,   203,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,   575,     0,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
       0,   226,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   234,     0,     0,   237,     0,   239,   240,   241,   242,
     243,     0,     0,   244,     0,   246,     0,     0,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
       0,   269,   270,   271,   272,   273,     0,   274,   275,     0,
     277,     0,   278,   279,   280,   281,   282,   283,     0,   284,
     285,     0,   533,   286,   287,   288,     0,     0,   289,   290,
       0,   292,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   306,   307,   308,   309,
     310,   311,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,     0,   360,   361,   362,   363,   364,
       0,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,     0,   385,     0,   387,   388,   389,   390,   391,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,     0,     0,   411,   412,   413,
     414,   415,   416,   417,     0,   418,     0,   420,   421,   422,
     423,     0,     0,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   466,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    88,    89,    90,    91,    92,    93,    94,    95,   602,
      96,    97,    98,     0,     0,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,     0,   105,   106,   107,
     108,   109,     0,   111,   112,     0,   113,   114,   115,   116,
     117,   118,     0,     0,   119,   120,   121,   122,   123,     0,
     124,   125,   126,   127,   128,     0,     0,     0,   130,   131,
     132,   133,   134,     0,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,     0,   146,   147,   148,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,     0,   192,     0,   193,
     194,   195,   196,     0,   197,     0,   198,     0,     0,     0,
     201,   202,   203,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,     0,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,     0,
     226,   227,   228,   229,   230,   231,   232,     0,   233,     0,
     234,     0,     0,   237,     0,   239,   240,   241,   242,   243,
       0,     0,   244,     0,   246,     0,     0,   248,   249,   250,
       0,     0,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,     0,
     269,   270,   271,   272,   273,     0,   274,   275,     0,   277,
       0,   278,   279,   280,   281,   282,   283,     0,   284,   285,
       0,     0,   286,   287,   288,     0,     0,   289,   290,     0,
     292,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
     311,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,     0,   360,   361,   362,   363,   364,     0,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,     0,   385,     0,   387,   388,   389,   390,   391,     0,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
     399,   400,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,     0,   411,   412,   413,   414,
     415,   416,   417,     0,   418,     0,   420,   421,   422,   423,
       0,     0,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   466,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      88,    89,    90,    91,    92,    93,    94,    95,     0,    96,
      97,    98,     0,     0,     0,     0,     0,     0,     0,    99,
     100,     0,   101,   102,   103,     0,   105,   106,   107,   108,
     109,     0,   111,   112,     0,   113,   114,   115,   116,   117,
     118,     0,     0,   119,   120,   121,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,     0,   130,   131,   132,
     133,   134,     0,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,     0,   146,   147,   148,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,   170,     0,
       0,   171,   172,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,     0,   192,     0,   193,   194,
     195,   196,     0,   197,     0,   198,     0,     0,     0,   201,
     202,   203,  1467,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,     0,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,     0,   226,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   234,
       0,     0,   237,     0,   239,   240,   241,   242,   243,     0,
       0,   244,     0,   246,     0,     0,   248,   249,  1468,     0,
       0,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,     0,   269,
     270,   271,   272,   273,     0,   274,   275,     0,   277,     0,
     278,   279,   280,   281,   282,   283,     0,   284,   285,     0,
       0,   286,   287,   288,     0,     0,   289,   290,     0,   292,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,   311,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,     0,   360,   361,   362,   363,   364,     0,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
    1469,   385,     0,   387,  1470,   389,  1471,   391,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,   401,   402,   403,   404,   405,     0,     0,   406,   407,
    1472,   409,   410,     0,     0,   411,   412,   413,   414,   415,
     416,   417,     0,   418,     0,   420,   421,   422,   423,     0,
       0,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   466,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,  2017,     0,    99,   100,
       0,   101,   102,   103,     0,   105,   106,   107,   108,   109,
       0,   111,   112,     0,   113,   114,   115,   116,   117,   118,
       0,     0,   119,   120,   121,   122,   123,     0,   124,   125,
     126,   127,   128,     0,     0,     0,   130,   131,   132,   133,
     134,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,     0,   146,   147,   148,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,     0,   192,     0,   193,   194,   195,
     196,     0,   197,     0,   198,     0,     0,     0,   201,   202,
     203,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   226,   227,
     228,   229,   230,   231,   232,     0,   233,     0,   234,     0,
       0,   237,     0,   239,   240,   241,   242,   243,     0,     0,
     244,     0,   246,     0,     0,   248,   249,   250,     0,     0,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,     0,   269,   270,
     271,   272,   273,     0,   274,   275,     0,   277,     0,   278,
     279,   280,   281,   282,   283,     0,   284,   285,     0,     0,
     286,   287,   288,     0,     0,   289,   290,     0,   292,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   360,   361,   362,   363,   364,     0,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,     0,
     385,     0,   387,   388,   389,   390,   391,     0,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,     0,   411,   412,   413,   414,   415,   416,
     417,     0,   418,     0,   420,   421,   422,   423,     0,     0,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   466,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    88,    89,
      90,    91,    92,    93,    94,    95,     0,    96,    97,    98,
       0,     0,     0,     0,     0,  2031,     0,    99,   100,     0,
     101,   102,   103,     0,   105,   106,   107,   108,   109,     0,
     111,   112,     0,   113,   114,   115,   116,   117,   118,     0,
       0,   119,   120,   121,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,     0,   130,   131,   132,   133,   134,
       0,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,     0,   146,   147,   148,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,   170,     0,     0,   171,
     172,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,     0,   192,     0,   193,   194,   195,   196,
       0,   197,     0,   198,     0,     0,     0,   201,   202,   203,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   212,     0,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,     0,   226,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   234,     0,     0,
     237,     0,   239,   240,   241,   242,   243,     0,     0,   244,
       0,   246,     0,     0,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,     0,   269,   270,   271,
     272,   273,     0,   274,   275,     0,   277,     0,   278,   279,
     280,   281,   282,   283,     0,   284,   285,     0,     0,   286,
     287,   288,     0,     0,   289,   290,     0,   292,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,   311,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
       0,   360,   361,   362,   363,   364,     0,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,     0,   385,
       0,   387,   388,   389,   390,   391,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,     0,     0,   411,   412,   413,   414,   415,   416,   417,
       0,   418,     0,   420,   421,   422,   423,     0,     0,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   466,     0,  2191,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   226,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   234,     0,     0,   237,
       0,   239,   240,   241,   242,   243,     0,     0,   244,     0,
     246,     0,     0,   248,   249,   250,     0,     0,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,     0,   269,   270,   271,   272,
     273,     0,   274,   275,     0,   277,     0,   278,   279,   280,
     281,   282,   283,     0,   284,   285,     0,     0,   286,   287,
     288,     0,     0,   289,   290,     0,   292,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,   311,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     360,   361,   362,   363,   364,     0,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,     0,   385,     0,
     387,   388,   389,   390,   391,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,   399,   400,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,     0,   411,   412,   413,   414,   415,   416,   417,     0,
     418,     0,   420,   421,   422,   423,     0,     0,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   466,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    88,    89,    90,    91,
      92,    93,    94,    95,     0,    96,    97,    98,     0,     0,
       0,     0,     0,     0,     0,    99,   100,     0,   101,   102,
     103,     0,   105,   106,   107,   108,   109,     0,   111,   112,
       0,   113,   114,   115,   116,   117,   118,     0,     0,   119,
     120,   121,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,     0,   130,   131,   132,   133,   134,     0,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
       0,   146,   147,   148,     0,     0,     0,     0,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,   170,     0,     0,   171,   172,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,     0,   192,     0,   193,   194,   195,   196,     0,   197,
       0,   198,     0,     0,     0,   201,   202,   203,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
       0,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,     0,   226,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   234,     0,     0,   237,     0,
     239,   240,   241,   242,   243,     0,     0,   244,     0,   246,
       0,     0,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,     0,   269,   270,   271,   272,   273,
       0,   274,   275,     0,   277,     0,   278,   279,   280,   281,
     282,   283,     0,   284,   285,     0,     0,   286,   287,   288,
       0,     0,   289,   290,     0,   292,     0,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     306,   307,   308,   309,   310,   311,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,     0,   360,
     361,   362,   363,   364,     0,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,     0,   385,     0,   387,
     388,   389,   390,   391,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,     0,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   418,
       0,   420,   421,   422,   423,     0,     0,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     466,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
       0,   105,   106,   107,   108,   109,     0,   111,   112,     0,
     113,   114,   115,   116,   117,   118,     0,     0,   119,   120,
     121,   122,   123,     0,   124,   125,   126,   127,   128,     0,
       0,     0,   130,   131,   132,   133,   134,     0,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,     0,
     146,   147,   148,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
       0,   192,     0,   193,   194,   195,   196,     0,   197,     0,
     198,     0,     0,     0,   201,   202,   203,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   226,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   234,     0,     0,   237,     0,   239,
     240,   241,   242,   243,     0,     0,   244,     0,   246,     0,
       0,   248,   249,   525,     0,     0,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,     0,   269,   270,   271,   272,   273,     0,
     274,   275,     0,   277,     0,   278,   279,   280,   281,   282,
     283,     0,   284,   285,     0,     0,   286,   287,   288,     0,
       0,   289,   290,     0,   292,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,   311,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,     0,   342,   343,
     344,   345,   346,   347,   348,   526,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   527,     0,   360,   361,
     362,   363,   364,     0,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,     0,   385,     0,   387,   388,
     389,   390,   391,     0,   528,   393,     0,     0,   394,   395,
     396,   397,   398,     0,   399,   400,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,     0,
     411,   412,   413,   414,   415,   416,   417,     0,   418,     0,
     420,   421,   422,   423,     0,     0,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   466,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,     0,
     105,   106,   107,   108,   109,     0,   111,   112,     0,   113,
     114,   115,   116,   117,   118,     0,     0,   119,   120,   121,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
       0,   130,   131,   132,   133,   134,     0,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,     0,   146,
     147,   148,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,     0,
     192,     0,   193,   194,   195,   196,     0,   197,     0,   198,
       0,     0,     0,   201,   202,   203,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,     0,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,     0,   226,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   234,     0,     0,   237,     0,   239,   240,
     241,   242,   243,     0,     0,   244,     0,   246,     0,     0,
     248,   249,   250,     0,     0,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,     0,   269,   270,   271,   272,   273,     0,   274,
     275,     0,   277,     0,   278,   279,   280,   281,   282,   283,
       0,   284,   285,     0,     0,   286,   287,   288,     0,     0,
     289,   290,     0,   292,     0,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   541,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,     0,   360,   361,   362,
     363,   364,     0,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,     0,   385,     0,   387,   388,   389,
     390,   391,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,     0,     0,   411,
     412,   413,   414,   415,   416,   417,     0,   418,     0,   420,
     421,   422,   423,     0,     0,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   466,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,     0,   105,
     106,   107,   108,   109,     0,   111,   112,     0,   113,   114,
     115,   116,   117,   118,     0,     0,   119,   120,   121,   122,
     123,     0,   124,   125,   126,   127,   128,     0,     0,     0,
     130,   131,   132,   133,   134,     0,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,     0,   146,   147,
     148,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,     0,   192,
       0,   193,   194,   195,   196,     0,   197,     0,   198,     0,
       0,     0,   201,   202,   203,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   570,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   226,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   234,     0,     0,   237,     0,   239,   240,   241,
     242,   243,     0,     0,   244,     0,   246,     0,     0,   248,
     249,   250,     0,     0,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,     0,   269,   270,   271,   272,   273,     0,   274,   275,
       0,   277,     0,   278,   279,   280,   281,   282,   283,     0,
     284,   285,     0,     0,   286,   287,   288,     0,     0,   289,
     290,     0,   292,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,   311,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   360,   361,   362,   363,
     364,     0,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,     0,   385,     0,   387,   388,   389,   390,
     391,     0,   392,   393,     0,     0,   394,   395,   396,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,     0,   411,   412,
     413,   414,   415,   416,   417,     0,   418,     0,   420,   421,
     422,   423,     0,     0,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   466,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    88,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,     0,     0,     0,     0,     0,     0,
       0,    99,   100,     0,   101,   102,   103,     0,   105,   106,
     107,   108,   109,     0,   111,   112,     0,   113,   114,   115,
     116,   117,   118,     0,     0,   119,   120,   121,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,     0,   130,
     131,   132,   133,   134,     0,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,     0,   146,   147,   148,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
     170,     0,     0,   171,   172,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,     0,   192,     0,
     193,   194,   195,   196,     0,   197,     0,   198,     0,     0,
       0,   201,   202,   203,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,   573,     0,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
       0,   226,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   234,     0,     0,   237,     0,   239,   240,   241,   242,
     243,     0,     0,   244,     0,   246,     0,     0,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
       0,   269,   270,   271,   272,   273,     0,   274,   275,     0,
     277,     0,   278,   279,   280,   281,   282,   283,     0,   284,
     285,     0,     0,   286,   287,   288,     0,     0,   289,   290,
       0,   292,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   306,   307,   308,   309,
     310,   311,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,     0,   360,   361,   362,   363,   364,
       0,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,     0,   385,     0,   387,   388,   389,   390,   391,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,     0,     0,   411,   412,   413,
     414,   415,   416,   417,     0,   418,     0,   420,   421,   422,
     423,     0,     0,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   466,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    88,    89,    90,    91,    92,    93,    94,    95,     0,
      96,    97,    98,     0,     0,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,     0,   105,   106,   107,
     108,   109,     0,   111,   112,     0,   113,   114,   115,   116,
     117,   118,     0,     0,   119,   120,   121,   122,   123,     0,
     124,   125,   126,   127,   128,     0,     0,     0,   130,   131,
     132,   133,   134,     0,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,     0,   146,   147,   148,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,     0,   192,     0,   193,
     194,   195,   196,     0,   197,     0,   198,     0,     0,     0,
     201,   202,   203,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   577,     0,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,     0,
     226,   227,   228,   229,   230,   231,   232,     0,   233,     0,
     234,     0,     0,   237,     0,   239,   240,   241,   242,   243,
       0,     0,   244,     0,   246,     0,     0,   248,   249,   250,
       0,     0,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,     0,
     269,   270,   271,   272,   273,     0,   274,   275,     0,   277,
       0,   278,   279,   280,   281,   282,   283,     0,   284,   285,
       0,     0,   286,   287,   288,     0,     0,   289,   290,     0,
     292,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
     311,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,     0,   360,   361,   362,   363,   364,     0,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,     0,   385,     0,   387,   388,   389,   390,   391,     0,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
     399,   400,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,     0,   411,   412,   413,   414,
     415,   416,   417,     0,   418,     0,   420,   421,   422,   423,
       0,     0,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   466,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      88,    89,    90,    91,    92,    93,    94,    95,     0,    96,
      97,    98,     0,     0,     0,     0,     0,     0,     0,    99,
     100,     0,   101,   102,   103,     0,   105,   106,   107,   108,
     109,     0,   111,   112,     0,   113,   114,   115,   116,   117,
     118,     0,     0,   119,   120,   121,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,     0,   130,   131,   132,
     133,   134,     0,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,     0,   146,   147,   148,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,   170,     0,
       0,   171,   172,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,     0,   192,     0,   193,   194,
     195,   196,     0,   197,     0,   198,     0,     0,     0,   201,
     202,   203,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   595,     0,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,     0,   226,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   234,
       0,     0,   237,     0,   239,   240,   241,   242,   243,     0,
       0,   244,     0,   246,     0,     0,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,     0,   269,
     270,   271,   272,   273,     0,   274,   275,     0,   277,     0,
     278,   279,   280,   281,   282,   283,     0,   284,   285,     0,
       0,   286,   287,   288,     0,     0,   289,   290,     0,   292,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,   311,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,     0,   360,   361,   362,   363,   364,     0,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
       0,   385,     0,   387,   388,   389,   390,   391,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,     0,     0,   411,   412,   413,   414,   415,
     416,   417,     0,   418,     0,   420,   421,   422,   423,     0,
       0,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   466,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,     0,   105,   106,   107,   108,   109,
       0,   111,   112,     0,   113,   114,   115,   116,   117,   118,
       0,     0,   119,   120,   121,   122,   123,     0,   124,   125,
     126,   127,   128,     0,     0,     0,   130,   131,   132,   133,
     134,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,     0,   146,   147,   148,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,     0,   192,     0,   193,   194,   195,
     196,     0,   197,     0,   198,     0,     0,     0,   201,   202,
     203,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   610,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   226,   227,
     228,   229,   230,   231,   232,     0,   233,     0,   234,     0,
       0,   237,     0,   239,   240,   241,   242,   243,     0,     0,
     244,     0,   246,     0,     0,   248,   249,   250,     0,     0,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,     0,   269,   270,
     271,   272,   273,     0,   274,   275,     0,   277,     0,   278,
     279,   280,   281,   282,   283,     0,   284,   285,     0,     0,
     286,   287,   288,     0,     0,   289,   290,     0,   292,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   360,   361,   362,   363,   364,     0,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,     0,
     385,     0,   387,   388,   389,   390,   391,     0,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,     0,   411,   412,   413,   414,   415,   416,
     417,     0,   418,     0,   420,   421,   422,   423,     0,     0,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   466,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    88,    89,
      90,    91,    92,    93,    94,    95,     0,    96,    97,    98,
       0,     0,     0,     0,     0,     0,     0,    99,   100,     0,
     101,   102,   103,     0,   105,   106,   107,   108,   109,     0,
     111,   112,     0,   113,   114,   115,   116,   117,   118,     0,
       0,   119,   120,   121,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,     0,   130,   131,   132,   133,   134,
       0,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,     0,   146,   147,   148,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,   170,     0,     0,   171,
     172,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,     0,   192,     0,   193,   194,   195,   196,
       0,   197,     0,   198,     0,     0,     0,   201,   202,   203,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   614,     0,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,     0,   226,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   234,     0,     0,
     237,     0,   239,   240,   241,   242,   243,     0,     0,   244,
       0,   246,     0,     0,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,     0,   269,   270,   271,
     272,   273,     0,   274,   275,     0,   277,     0,   278,   279,
     280,   281,   282,   283,     0,   284,   285,     0,     0,   286,
     287,   288,     0,     0,   289,   290,     0,   292,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,   311,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
       0,   360,   361,   362,   363,   364,     0,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,     0,   385,
       0,   387,   388,   389,   390,   391,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,     0,     0,   411,   412,   413,   414,   415,   416,   417,
       0,   418,     0,   420,   421,   422,   423,     0,     0,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   466,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     617,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   226,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   234,     0,     0,   237,
       0,   239,   240,   241,   242,   243,     0,     0,   244,     0,
     246,     0,     0,   248,   249,   250,     0,     0,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,     0,   269,   270,   271,   272,
     273,     0,   274,   275,     0,   277,     0,   278,   279,   280,
     281,   282,   283,     0,   284,   285,     0,     0,   286,   287,
     288,     0,     0,   289,   290,     0,   292,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,   311,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     360,   361,   362,   363,   364,     0,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,     0,   385,     0,
     387,   388,   389,   390,   391,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,   399,   400,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,     0,   411,   412,   413,   414,   415,   416,   417,     0,
     418,     0,   420,   421,   422,   423,     0,     0,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   466,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    88,    89,    90,    91,
      92,    93,    94,    95,     0,    96,    97,    98,     0,     0,
       0,     0,     0,     0,     0,    99,   100,     0,   101,   102,
     103,     0,   105,   106,   107,   108,   109,     0,   111,   112,
       0,   113,   114,   115,   116,   117,   118,     0,     0,   119,
     120,   121,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,     0,   130,   131,   132,   133,   134,     0,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
       0,   146,   147,   148,     0,     0,     0,     0,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,   170,     0,     0,   171,   172,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,     0,   192,     0,   193,   194,   195,   196,     0,   197,
       0,   198,     0,     0,     0,   201,   202,   203,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
       0,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,     0,   226,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   234,     0,     0,   237,     0,
     239,   240,   241,   242,   243,     0,     0,   244,     0,   246,
       0,     0,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,     0,   269,   270,   271,   272,   273,
       0,   274,   275,     0,   277,     0,   278,   279,   280,   281,
     282,   283,     0,   284,   285,     0,     0,   286,   287,   288,
       0,     0,   289,   290,     0,   292,     0,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,     0,   304,   305,
     306,   307,   308,   309,   310,   311,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,   342,
     343,   344,   345,   346,   347,   348,   526,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,     0,   360,
     361,   362,   363,   364,     0,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,     0,   385,     0,   387,
     388,   389,   390,   391,     0,   528,   393,     0,     0,   394,
     395,   396,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,     0,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   418,
       0,   420,   421,   422,   423,     0,     0,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     466,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
       0,   105,   106,   107,   108,   109,     0,   111,   112,     0,
     113,   114,   115,   116,   117,   118,     0,     0,   119,   120,
     121,   122,   123,     0,   124,   125,   126,   127,   128,     0,
       0,     0,   130,   131,   132,   133,   134,     0,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,     0,
     146,   147,   148,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
       0,   192,     0,   193,   194,   195,   196,     0,   197,     0,
     198,     0,     0,     0,   201,   202,   203,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   935,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   226,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   234,     0,     0,   237,     0,   239,
     240,   241,   242,   243,     0,     0,   244,     0,   246,     0,
       0,   248,   249,   250,     0,     0,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,     0,   269,   270,   271,   272,   273,     0,
     274,   275,     0,   277,     0,   278,   279,   280,   281,   282,
     283,     0,   284,   285,     0,     0,   286,   287,   288,     0,
       0,   289,   290,     0,   292,     0,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,   311,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   360,   361,
     362,   363,   364,     0,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,     0,   385,     0,   387,   388,
     389,   390,   391,     0,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,   399,   400,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,     0,
     411,   412,   413,   414,   415,   416,   417,     0,   418,     0,
     420,   421,   422,   423,     0,     0,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   466,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,     0,
     105,   106,   107,   108,   109,     0,   111,   112,     0,   113,
     114,   115,   116,   117,   118,     0,     0,   119,   120,   121,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
       0,   130,   131,   132,   133,   134,     0,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,     0,   146,
     147,   148,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,     0,
     192,     0,   193,   194,   195,   196,     0,   197,     0,   198,
       0,     0,     0,   201,   202,   203,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   937,     0,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,     0,   226,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   234,     0,     0,   237,     0,   239,   240,
     241,   242,   243,     0,     0,   244,     0,   246,     0,     0,
     248,   249,   250,     0,     0,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,     0,   269,   270,   271,   272,   273,     0,   274,
     275,     0,   277,     0,   278,   279,   280,   281,   282,   283,
       0,   284,   285,     0,     0,   286,   287,   288,     0,     0,
     289,   290,     0,   292,     0,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,     0,   360,   361,   362,
     363,   364,     0,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,     0,   385,     0,   387,   388,   389,
     390,   391,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,     0,     0,   411,
     412,   413,   414,   415,   416,   417,     0,   418,     0,   420,
     421,   422,   423,     0,     0,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   466,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
    1150,     0,    99,   100,     0,   101,   102,   103,     0,   105,
     106,   107,   108,   109,     0,   111,   112,     0,   113,   114,
     115,   116,   117,   118,     0,     0,   119,   120,   121,   122,
     123,     0,   124,   125,   126,   127,   128,     0,     0,     0,
     130,   131,   132,   133,   134,     0,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,     0,   146,   147,
     148,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,     0,   192,
       0,   193,   194,   195,   196,     0,   197,     0,   198,     0,
       0,     0,   201,   202,   203,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   226,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   234,     0,     0,   237,     0,   239,   240,   241,
     242,   243,     0,     0,   244,     0,   246,     0,     0,   248,
     249,   250,     0,     0,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,     0,   269,   270,   271,   272,   273,     0,   274,   275,
       0,   277,     0,   278,   279,   280,   281,   282,   283,     0,
     284,   285,     0,     0,   286,   287,   288,     0,     0,   289,
     290,     0,   292,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,   311,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,     0,   361,   362,   363,
     364,     0,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,     0,   385,     0,   387,   388,   389,   390,
     391,     0,   392,   393,     0,     0,   394,   395,   396,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,     0,   411,   412,
     413,   414,   415,   416,   417,     0,   418,     0,   420,   421,
     422,   423,     0,     0,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   466,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    88,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,     0,     0,     0,     0,     0,     0,
       0,    99,   100,     0,   101,   102,   103,     0,   105,   106,
     107,   108,   109,     0,   111,   112,     0,   113,   114,   115,
     116,   117,   118,     0,     0,   119,   120,   121,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,     0,   130,
     131,   132,   133,   134,     0,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,     0,   146,   147,   148,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
     170,     0,     0,   171,   172,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,     0,   192,     0,
     193,   194,   195,   196,     0,   197,     0,   198,     0,     0,
       0,   201,   202,   203,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,  1280,     0,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
       0,   226,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   234,     0,     0,   237,     0,   239,   240,   241,   242,
     243,     0,     0,   244,     0,   246,     0,     0,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
       0,   269,   270,   271,   272,   273,     0,   274,   275,     0,
     277,     0,   278,   279,   280,   281,   282,   283,     0,   284,
     285,     0,     0,   286,   287,   288,     0,     0,   289,   290,
       0,   292,     0,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,     0,   304,   305,   306,   307,   308,   309,
     310,   311,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,     0,   360,   361,   362,   363,   364,
       0,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,     0,   385,     0,   387,   388,   389,   390,   391,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,     0,     0,   411,   412,   413,
     414,   415,   416,   417,     0,   418,     0,   420,   421,   422,
     423,     0,     0,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   466,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    88,    89,    90,    91,    92,    93,    94,    95,     0,
      96,    97,    98,     0,     0,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,     0,   105,   106,   107,
     108,   109,     0,   111,   112,     0,   113,   114,   115,   116,
     117,   118,     0,     0,   119,   120,   121,   122,   123,     0,
     124,   125,   126,   127,   128,     0,     0,     0,   130,   131,
     132,   133,   134,     0,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,     0,   146,   147,   148,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,     0,   192,     0,   193,
     194,   195,   196,     0,   197,     0,   198,     0,     0,     0,
     201,   202,   203,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,  1293,     0,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,     0,
     226,   227,   228,   229,   230,   231,   232,     0,   233,     0,
     234,     0,     0,   237,     0,   239,   240,   241,   242,   243,
       0,     0,   244,     0,   246,     0,     0,   248,   249,   250,
       0,     0,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,     0,
     269,   270,   271,   272,   273,     0,   274,   275,     0,   277,
       0,   278,   279,   280,   281,   282,   283,     0,   284,   285,
       0,     0,   286,   287,   288,     0,     0,   289,   290,     0,
     292,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
     311,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,     0,   360,   361,   362,   363,   364,     0,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,     0,   385,     0,   387,   388,   389,   390,   391,     0,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
     399,   400,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,     0,   411,   412,   413,   414,
     415,   416,   417,     0,   418,     0,   420,   421,   422,   423,
       0,     0,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   466,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      88,    89,    90,    91,    92,    93,    94,    95,     0,    96,
      97,    98,     0,     0,     0,     0,     0,     0,     0,    99,
     100,     0,   101,   102,   103,     0,   105,   106,   107,   108,
     109,     0,   111,   112,     0,   113,   114,   115,   116,   117,
     118,     0,     0,   119,   120,   121,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,     0,   130,   131,   132,
     133,   134,     0,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,     0,   146,   147,   148,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,   170,     0,
       0,   171,   172,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,     0,   192,     0,   193,   194,
     195,   196,     0,   197,     0,   198,     0,     0,     0,   201,
     202,   203,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,  1538,     0,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,     0,   226,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   234,
       0,     0,   237,     0,   239,   240,   241,   242,   243,     0,
       0,   244,     0,   246,     0,     0,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,     0,   269,
     270,   271,   272,   273,     0,   274,   275,     0,   277,     0,
     278,   279,   280,   281,   282,   283,     0,   284,   285,     0,
       0,   286,   287,   288,     0,     0,   289,   290,     0,   292,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,   311,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,     0,   360,   361,   362,   363,   364,     0,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
       0,   385,     0,   387,   388,   389,   390,   391,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,     0,     0,   411,   412,   413,   414,   415,
     416,   417,     0,   418,     0,   420,   421,   422,   423,     0,
       0,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   466,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,     0,   105,   106,   107,   108,   109,
       0,   111,   112,     0,   113,   114,   115,   116,   117,   118,
       0,     0,   119,   120,   121,   122,   123,     0,   124,   125,
     126,   127,   128,     0,     0,     0,   130,   131,   132,   133,
     134,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,     0,   146,   147,   148,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,     0,   192,     0,   193,   194,   195,
     196,     0,   197,     0,   198,     0,     0,     0,   201,   202,
     203,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,  1550,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   226,   227,
     228,   229,   230,   231,   232,     0,   233,     0,   234,     0,
       0,   237,     0,   239,   240,   241,   242,   243,     0,     0,
     244,     0,   246,     0,     0,   248,   249,   250,     0,     0,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,     0,   269,   270,
     271,   272,   273,     0,   274,   275,     0,   277,     0,   278,
     279,   280,   281,   282,   283,     0,   284,   285,     0,     0,
     286,   287,   288,     0,     0,   289,   290,     0,   292,     0,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   360,   361,   362,   363,   364,     0,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,     0,
     385,     0,   387,   388,   389,   390,   391,     0,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,     0,   411,   412,   413,   414,   415,   416,
     417,     0,   418,     0,   420,   421,   422,   423,     0,     0,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   466,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    88,    89,
      90,    91,    92,    93,    94,    95,     0,    96,    97,    98,
       0,     0,     0,     0,     0,     0,     0,    99,   100,     0,
     101,   102,   103,     0,   105,   106,   107,   108,   109,     0,
     111,   112,     0,   113,   114,   115,   116,   117,   118,     0,
       0,   119,   120,   121,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,     0,   130,   131,   132,   133,   134,
       0,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,     0,   146,   147,   148,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,   170,     0,     0,   171,
     172,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,     0,   192,     0,   193,   194,   195,   196,
       0,   197,     0,   198,     0,     0,     0,   201,   202,   203,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,  1552,     0,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,     0,   226,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   234,     0,     0,
     237,     0,   239,   240,   241,   242,   243,     0,     0,   244,
       0,   246,     0,     0,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,     0,   269,   270,   271,
     272,   273,     0,   274,   275,     0,   277,     0,   278,   279,
     280,   281,   282,   283,     0,   284,   285,     0,     0,   286,
     287,   288,     0,     0,   289,   290,     0,   292,     0,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,   311,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
       0,   360,   361,   362,   363,   364,     0,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,     0,   385,
       0,   387,   388,   389,   390,   391,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,     0,     0,   411,   412,   413,   414,   415,   416,   417,
       0,   418,     0,   420,   421,   422,   423,     0,     0,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   466,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
    2131,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   226,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   234,     0,     0,   237,
       0,   239,   240,   241,   242,   243,     0,     0,   244,     0,
     246,     0,     0,   248,   249,   250,     0,     0,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,     0,   269,   270,   271,   272,
     273,     0,   274,   275,     0,   277,     0,   278,   279,   280,
     281,   282,   283,     0,   284,   285,     0,     0,   286,   287,
     288,     0,     0,   289,   290,     0,   292,     0,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,   311,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     360,   361,   362,   363,   364,     0,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,     0,   385,     0,
     387,   388,   389,   390,   391,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,   399,   400,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,     0,   411,   412,   413,   414,   415,   416,   417,     0,
     418,     0,   420,   421,   422,   423,     0,     0,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   466,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    88,    89,    90,    91,
      92,    93,    94,    95,     0,    96,    97,    98,     0,     0,
       0,     0,     0,     0,     0,    99,   100,     0,   101,   102,
     103,     0,   105,   106,   107,   108,   109,     0,   111,   112,
       0,   113,   114,   115,   116,   117,   118,     0,     0,   119,
     120,   121,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,     0,   130,   131,   132,   133,   134,     0,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
       0,   146,   147,   148,     0,     0,     0,     0,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,   170,     0,     0,   171,   172,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,     0,   192,     0,   193,   194,   195,   196,     0,   197,
       0,   198,     0,     0,     0,   201,   202,   203,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
       0,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,     0,   226,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   234,     0,     0,   237,     0,
     239,   240,   241,   242,   243,     0,     0,   244,     0,   246,
       0,     0,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,     0,   269,   270,   271,   272,   273,
       0,   274,   275,     0,   277,     0,   278,   279,   280,   281,
     282,   283,     0,   284,   285,     0,     0,   286,   287,   288,
       0,     0,   289,   290,     0,   292,     0,   294,   295,   296,
     297,   298,   299,   300,     0,   302,   303,     0,   304,   305,
     306,   307,   308,   309,   310,   311,   312,     0,   313,   314,
     315,   316,   317,   318,   319,     0,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,   342,
     343,   344,   345,     0,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,     0,   360,
     361,   362,   363,   364,     0,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,     0,   385,     0,   387,
     388,   389,   390,   391,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,     0,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   418,
       0,   420,   421,   422,   423,     0,     0,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     987,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
     104,   105,   106,   107,     0,   988,   110,   989,   990,     0,
     113,   114,   115,   116,   117,   118,     0,     0,   119,   120,
     991,   992,   123,     0,   124,   125,   126,   127,     0,     0,
     129,     0,   130,   131,   132,   133,   134,   135,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,     0,     0,     0,   149,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   993,   994,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   669,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,     0,   187,   188,   189,   190,     0,
       0,   192,     0,   193,   194,   995,   196,     0,   197,     0,
     198,   199,     0,   200,   201,   202,   203,   204,     0,   205,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,   225,     0,   227,   228,   229,   230,   996,
     997,     0,   998,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,     0,     0,   244,   245,   246,   247,
       0,   248,   249,   250,     0,     0,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   999,   268,  1000,   270,   271,   272,     0,     0,
     274,   275,   276,   277,     0,     0,   279,  1001,   281,   282,
     283,     0,   284,   285,     0,     0,   286,   287,   288,     0,
       0,   289,     0,   291,   292,   293,     0,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,     0,
     307,   308,     0,   310,   311,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,  1002,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   360,  1003,
     362,   363,   364,   365,   366,   367,  1004,   369,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,     0,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,     0,  1005,  1006,     0,     0,   394,   395,
       0,   397,     0,     0,   399,   400,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,     0,
     411,   412,   413,   414,   415,     0,  1007,     0,   418,   419,
     420,   421,   422,   423,     0,     0,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   987,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   442,   443,   444,     0,
      88,    89,    90,    91,    92,    93,    94,    95,     0,    96,
      97,    98,     0,     0,     0,     0,     0,     0,     0,    99,
     100,     0,   101,   102,   103,   104,   105,   106,   107,     0,
     988,   110,   989,   990,     0,   113,   114,   115,   116,   117,
     118,     0,     0,   119,   120,   991,   992,   123,     0,   124,
     125,   126,   127,     0,     0,   129,     0,   130,   131,   132,
     133,   134,   135,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,     0,     0,
       0,   149,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   993,   994,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,   170,     0,
       0,   171,   172,   669,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,   185,     0,
     187,   188,   189,   190,     0,     0,   192,     0,   193,   194,
     995,   196,     0,   197,     0,   198,   199,     0,   200,   201,
     202,   203,   204,     0,   205,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,   225,     0,
     227,   228,   229,   230,   996,   997,     0,   998,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,     0,
       0,   244,   245,   246,   247,     0,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   999,   268,  1000,
     270,   271,   272,     0,     0,   274,   275,   276,   277,     0,
       0,   279,  1001,   281,   282,   283,     0,   284,   285,     0,
       0,   286,   287,   288,     0,     0,   289,     0,   291,   292,
     293,     0,   295,   296,   297,   298,   299,   300,   301,   302,
     303,     0,   304,   305,     0,   307,   308,     0,   310,   311,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,  1002,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,     0,   360,     0,   362,   363,   364,   365,   366,
     367,  1004,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,     0,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,     0,  1005,
    1006,     0,     0,   394,   395,     0,   397,     0,     0,   399,
     400,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,     0,     0,   411,   412,   413,   414,   415,
       0,  1007,     0,   418,   419,   420,   421,   422,   423,     0,
       0,   424,     0,     0,   425,   426,   427,   428,   429,   430,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   442,   443,   444
};

static const yytype_int16 yycheck[] =
{
       6,   574,   491,   589,     0,   561,   492,    33,   818,   629,
     524,   666,   667,   629,    54,    16,   806,   793,  1479,   933,
       0,     0,   581,   583,  1082,   536,  1021,   798,   820,   684,
     705,   961,     6,     0,   540,     0,   933,   694,  1548,   933,
    1079,   933,     6,  1554,    28,  1556,   795,   496,  1749,    16,
    1817,  1055,   789,   574,   498,   576,  1865,   578,  1889,   832,
    1499,  1383,  1384,  1439,     0,  1897,  1388,  1904,     9,   615,
      56,   497,    32,  1545,   823,  1023,     5,     5,   498,  1776,
      56,     5,     5,     3,    13,    14,     5,     5,     5,    13,
      14,    39,   637,  1782,    13,    14,     5,     9,    57,  2135,
      84,  1423,  1424,    49,     5,  1171,  2138,   107,  1173,  1125,
      30,    31,    26,   619,   165,     5,     5,     5,     9,   739,
      26,    47,   166,     5,     0,   114,   953,    33,    39,    72,
    2209,  2275,     5,     4,     0,     5,   105,   581,     9,   206,
     117,   134,  1614,  2127,  1202,   594,    11,    11,  1806,   127,
       3,     4,     5,   265,   503,  2141,     9,    57,   107,    66,
     170,  2390,   267,    77,   119,   273,  1781,    66,   232,     4,
      26,    85,  1718,   212,     9,   153,    40,    33,    74,   179,
    1476,  1653,  1654,  2089,    11,   629,   746,   807,    84,    11,
     810,   811,   636,    74,  1490,   706,    57,   112,   704,   113,
     253,    58,   105,    84,   166,   112,  2232,   633,    72,    66,
      11,   250,   114,  1003,   238,    91,   226,    57,    40,    19,
     165,    26,   733,   200,   166,    91,   159,  2253,   312,   638,
     179,   117,   334,   117,   196,   112,  1836,  2527,   238,    40,
    2446,   241,   155,  2472,   164,   558,   166,    26,   132,   211,
      72,   558,    26,  2502,    33,  2504,   182,  2336,   220,   112,
      11,   187,   169,   162,   142,   180,   180,   312,   155,   308,
     144,    72,   106,   428,   760,  1333,   412,   191,   377,   257,
     836,    29,   788,    22,   262,   830,   831,  1988,    81,   238,
     433,   307,   241,  2354,   325,  2585,   222,   741,   742,  1691,
     345,     4,  2133,   466,  2290,    53,     9,   470,   127,  1909,
     223,   454,   411,  1689,   188,   354,   638,   472,   342,   335,
     351,  2570,   127,  2012,  2021,  1835,   204,  1719,  2025,  2558,
     739,   124,   468,   378,  2540,    74,   223,   252,   993,   994,
     424,  2247,   342,   285,   408,   252,  1001,   250,  2374,  1006,
     257,   264,   205,   127,   940,   257,   468,   410,  1471,  1472,
    1832,   294,  1834,   468,   472,  2509,   468,   326,   330,   226,
    2304,   410,   382,   226,   384,  1697,  1698,  1699,  1700,   424,
     257,  1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,
    1712,   267,   299,   342,   953,   273,  2011,   806,   408,  2057,
     299,   267,  1948,  2387,   468,   472,   755,   314,  2487,   378,
     250,   655,   656,     8,   298,   357,    11,  1193,   396,    11,
     979,   472,   165,    15,   468,   414,   326,   375,   406,    21,
     356,  1753,  1754,   410,   427,  1439,   680,  2498,     0,    31,
      32,  2473,  1481,   262,   389,    40,  1512,  1919,  1513,   449,
      91,   327,    47,   367,    16,   361,   370,   412,   454,   948,
    1287,   327,   951,  2164,   375,   326,  2275,  1027,   468,   955,
     959,    33,   498,   786,   454,   454,  1249,    72,  1774,   786,
    1776,   638,  1274,  2519,   806,  1501,   326,   454,  2474,   454,
      82,   284,   498,   389,    56,   368,   369,   498,   405,  2196,
     449,  2190,   422,  1507,  2201,   361,   405,  2204,   389,   953,
     433,   351,   421,   472,  1074,  1075,   232,   523,   524,   963,
    1026,   561,   468,   466,   410,   106,   404,   470,  1087,  1035,
     497,   454,   473,  1039,   540,   979,   962,   538,   466,   468,
     468,  1489,   470,   963,   468,   468,  1319,   459,   460,   468,
     468,   468,  1058,  1059,   550,   431,  2066,  2394,  2389,   468,
    1071,  2393,   548,   433,  1124,   431,  1624,   468,  2079,   553,
     550,   550,   548,   579,   580,   581,   467,  1122,   468,   468,
     468,   541,   361,   550,   454,   550,   468,   182,   459,   460,
     383,  2525,   187,   469,  1003,   471,   431,    36,   468,   464,
     464,  1090,  1222,   469,   115,   471,   459,   460,   127,  2310,
     157,   472,  1232,   619,   550,  1235,  2055,   256,  1676,   454,
     273,   190,   338,   629,   459,   460,   469,   222,   179,   472,
     636,   637,   638,  2330,   461,   462,   463,   464,  1696,   461,
     462,   463,   464,  1087,     5,  1218,   389,   653,  2479,   806,
     112,  1210,  1765,  1766,  1767,  1768,   157,  2129,   459,   460,
     461,   462,   463,   464,   468,   457,   633,  1725,     0,   104,
    1191,   468,   183,  1082,   269,   681,   468,   638,   704,   212,
    1335,  1003,   121,  2059,  1304,  1689,  1616,   238,  1304,  1245,
    1246,  1247,   408,   412,   700,   701,   702,  1218,   704,     3,
    2509,     5,   249,   344,    11,   115,   506,   507,   459,   460,
     461,   462,   463,   464,   457,   216,  1237,   250,   724,   358,
     344,  1242,    63,    64,  2234,  2021,   526,   470,  1287,  2025,
      13,    14,  1407,   252,   232,   741,   742,   378,  1284,  1228,
     498,    11,  1288,   262,  1233,  1291,  1483,   991,   992,   468,
     457,   471,   468,  2584,   378,   431,  1000,   252,    13,    14,
    1082,   356,   257,   470,  1208,    72,  1210,   773,   232,   338,
      40,   777,   778,   183,  2541,  2542,   345,   418,   454,   472,
    1572,   765,   788,  2189,    92,   771,   772,   146,   774,   391,
     431,   342,   114,  1202,   418,   771,   772,   312,   774,   422,
     806,   236,    72,   107,   239,  1049,  1050,  1865,  1309,   378,
       4,   306,  1313,   454,  1315,     9,  1265,  2223,   280,   472,
    2587,   354,  1595,   581,   830,   831,   832,   468,  1503,   629,
     345,  1580,   434,  1339,   469,   433,   636,   472,   822,  2161,
     338,    22,    22,  1287,   468,   806,  1003,    28,    28,  2359,
    1662,  1663,  1664,  2364,  1625,   424,   454,   452,   166,  1630,
    1304,  1865,   433,   378,   459,   460,   461,   462,   463,   464,
     468,   629,   194,  1317,   338,   179,   468,   410,   636,    22,
    1202,    74,   344,   454,    22,    28,    74,  1400,   196,  1402,
    1403,    84,   454,  2189,   232,  1401,    84,   468,  2304,     4,
    2196,   493,   322,   211,     9,  2201,   155,   707,  2204,   424,
     408,   160,   220,   382,   190,   384,   378,   717,    30,    31,
     237,  1427,  1478,  2245,  1333,  1082,   463,  2223,   250,   729,
     252,   468,   424,   470,   238,   497,   498,   241,   246,   739,
    1979,   741,   742,   463,   408,   334,   335,   953,   468,   541,
     470,   132,   132,   382,   394,   384,   418,   963,     8,  1465,
     469,    11,   963,   472,   341,    15,    16,    17,   468,   431,
     468,   451,   469,   979,   223,   472,  1890,   468,   232,    91,
     232,  2442,  1912,   741,   742,   344,   548,  2309,   550,   132,
     127,   210,   454,  1890,   132,   962,  1890,  1003,  1890,   466,
     338,   468,   470,   470,   468,  1551,   468,  1553,  2304,   469,
     267,  1333,   472,  2419,     5,   264,   153,     8,   469,   378,
    1026,   472,   330,    14,   451,  1611,  1032,  1023,  1644,  1035,
     741,   742,    23,  1039,  2330,  1845,    27,  2443,   342,  2097,
     461,   164,  1003,  1023,  1023,  1202,   469,  1053,   472,   472,
    1056,  1057,  1058,  1059,  1846,  2059,  1023,  1833,  1023,   418,
    1066,  1067,   334,   335,  2574,  2526,  1723,  1724,   468,   165,
     408,   633,   431,  1844,  1884,  1846,  1082,  1083,  1084,  1085,
    1086,  1087,  2543,  1642,   338,  1091,   338,   469,   469,  1095,
     271,   271,   468,  1099,   470,   454,  1102,  1103,  1104,  1105,
    1106,  1107,  1108,  1109,  1110,   334,   335,  1113,   670,   468,
    1554,  1555,  1556,   206,  1120,   252,  1122,    53,  2113,  2525,
     257,  1082,   155,  2419,   468,   262,   470,   160,   271,  1804,
     468,   451,   469,   271,  2595,   472,   210,  1143,   469,  1140,
     320,   472,   704,   324,   324,   449,   469,  2443,  1637,   472,
     469,   147,  1148,   472,   408,  1161,   408,   469,   208,   469,
     472,   555,   472,   557,  1170,  1171,    92,   759,   334,   335,
     351,   351,  1732,   468,    22,   469,  1333,   320,   472,   469,
      28,   324,   472,   147,   320,    22,   324,   325,   147,   469,
     223,    28,   472,   147,   469,   953,  1202,   472,  1642,   431,
    1644,   433,  1208,   469,  1210,   963,   472,   469,   351,   771,
     772,   252,   774,   351,   468,  1624,   468,  2275,   382,   269,
     384,   979,   469,   469,  1730,   472,   472,   469,   468,  2525,
     472,   264,   344,   424,   415,   415,    22,   382,    80,   384,
     166,  1202,    28,  1249,  1044,  1865,  1252,  1253,   469,  1255,
     435,   472,   469,  1813,    35,   472,   147,   469,   469,   396,
     472,   472,   469,   147,   470,   472,   378,  1676,   147,   406,
     196,  2275,   415,    54,  2026,  1786,  2028,  2335,  2273,   267,
    2338,  1287,  1278,   469,   132,   211,   472,  1696,   378,    35,
     469,  2067,   221,   472,   220,   132,   469,   469,  1304,   472,
     472,   469,  1624,  2095,   472,  1864,   418,  1866,     5,   469,
     422,  1317,   472,  1319,  2104,   469,  1725,   468,   472,   431,
     246,     5,   469,   104,  1880,   472,   468,  1333,   469,  1087,
    1130,   472,   160,  1339,  1340,   469,   468,    66,   472,  1345,
    1749,   267,   454,    72,   469,   469,   132,   472,   472,   469,
     469,   468,   472,   472,  1676,    84,   468,   295,   469,  1385,
     469,   472,   468,   472,   956,  1911,   958,   469,   469,   468,
     472,   472,  1333,   525,  1696,   527,   468,  1383,  1384,  1385,
     468,     5,  1388,   112,    22,   114,     5,   468,   169,   468,
      28,   468,   468,   468,  1400,  1401,  1402,  1403,   468,     5,
     962,  1427,  1408,  1725,   330,   455,   456,   457,   189,   459,
     460,   461,   462,   463,   464,   468,  1860,  1423,  1424,     5,
    1864,  1427,  1866,   271,   146,   468,   468,  1749,   468,   468,
     432,   278,   206,    95,   271,  1441,   472,  1443,    35,  1445,
     169,   351,   160,   264,   160,   262,   221,   468,   389,   468,
    1208,  2509,  1210,    84,   472,   236,  1865,   389,   239,  1465,
      53,  1023,   638,    53,   389,   194,  2086,  1624,  1494,   250,
    1476,  2281,   320,   243,   389,   469,   324,  2037,   389,   474,
     431,   147,    91,   320,  1490,   271,   412,   324,   252,   252,
     280,  2051,   468,  1489,   132,    35,   470,   472,  1504,   421,
     281,   468,  1476,   351,  1304,  2509,   468,    34,  1308,  1489,
    1489,   468,  1476,  1519,   351,   427,  1490,  1317,   468,  1676,
       9,   387,  1489,   252,  1489,   387,  1490,    11,   257,  1287,
    1092,  1537,  2046,   472,   320,  2151,   387,   468,   324,  1696,
     257,   468,   156,  1865,   325,   389,  1304,   173,  1554,  1555,
    1556,   469,  2098,  2099,   344,   165,   412,    35,   142,  1317,
     638,   468,   204,   472,   345,   351,   354,   415,  1725,   212,
     299,   155,   268,   472,   468,   212,   160,   252,   415,  1988,
     212,   273,     6,   469,   365,   314,  1148,    11,   378,  1595,
     304,    15,  1749,   265,   424,   468,    20,    21,    22,   147,
     147,    25,  1194,   252,    28,   431,   267,    31,    32,   267,
      35,   252,  1204,    35,  1206,    34,   466,  1209,  1624,  2274,
     204,   466,   344,  1215,   389,  1217,   469,   389,   418,   415,
     806,   389,   468,   271,   389,  2079,  1642,  1229,  1644,   223,
     469,   431,  1234,   165,  1640,   469,  1238,  1239,  1240,  1241,
      74,  1243,  1244,   469,   469,  2275,   378,    81,    82,    83,
      84,    85,   469,  1624,   454,   469,  1988,  1673,   470,   469,
    1676,   469,   469,   472,   451,   451,   405,  1683,   468,   451,
     264,  1687,   320,   165,  1690,   469,   324,   469,  2097,   273,
    1696,  1697,  1698,  1699,  1700,  2104,   418,  1703,  1704,  1705,
    1706,  1707,  1708,  1709,  1710,  1711,  1712,  2151,  1865,   431,
    1716,  1717,   469,   351,   468,  1676,  1278,   469,   469,  1725,
     469,  1761,   389,   468,  1730,   468,   468,  2382,   806,   428,
     428,  1737,   454,  1759,  1740,  1696,  1742,   418,   277,   267,
     453,   410,   457,  1749,  1750,   268,   468,  1753,  1754,   268,
    1776,   268,  1758,  1759,  2243,  2164,   231,   252,   468,   389,
    1560,   472,  2318,   147,  1725,  2557,   271,   190,  1774,   147,
    1776,   147,   389,   389,   389,  2097,   389,   415,   469,   170,
     469,  1787,  2104,   469,   467,   472,   265,   469,  1749,  2375,
    1796,   267,   431,    35,   147,   257,  1554,  1555,  1556,   190,
    1774,  2360,  1776,  1603,   147,   342,  1812,   466,   241,   469,
    1774,   138,  1776,    11,   165,   160,   469,   469,   469,   473,
     404,   165,   468,  1385,    35,   469,   428,  1003,   378,   165,
     327,  1988,   472,  2339,   344,   226,   454,  2323,   173,   417,
     469,   469,  2164,    54,  1644,    82,   469,   468,   268,  1649,
    2336,  1651,   147,   399,  1860,  1655,  1656,   468,  1864,  1865,
    1866,   142,   169,  2449,   468,  1427,  2275,   468,   378,    35,
      78,    81,   472,    83,   155,    85,   412,   469,   467,   160,
     467,   272,  1444,   165,  1642,   468,  1644,   469,   469,  2509,
     469,  2380,   468,   104,   469,   468,   211,   276,  1460,   211,
     380,  2310,   468,   274,  1865,    53,  1082,   176,   418,   192,
    2416,   431,  1908,   457,  1476,   181,  2360,   257,    35,   257,
    2364,   431,  2428,   204,   457,  1003,  2335,  1489,  1490,  2338,
     389,   389,  1494,  1939,   469,    35,  1736,    54,   252,  2425,
    2097,  2514,   223,   468,   454,   105,   431,  2104,   267,  2508,
     468,    35,     8,  2275,   467,  2444,   165,   468,   468,    15,
      16,    17,   286,   211,   468,   468,   430,   128,    84,   469,
     468,   212,   314,   112,   468,    35,  1982,  1983,   189,   147,
      72,  1987,  1988,   264,   119,   147,  1992,   104,  2310,  1995,
    1996,   382,   273,   384,  2000,    35,   469,    35,   335,    53,
     468,   335,   468,   472,  1082,   417,    72,  2164,    35,   180,
     412,   399,   270,  2335,   405,  2021,  2338,   408,    66,  2025,
      66,   468,   472,    35,   257,   236,  1202,  1988,   239,   351,
     457,   455,   234,   180,   468,   459,  1628,   399,    35,   250,
    2046,   270,   468,   270,   468,   250,   267,  2021,   469,   334,
     468,  2025,  2048,  2049,   468,   192,   321,  2021,    32,   468,
     267,  2025,   117,   267,  2508,  1865,    21,   491,   492,   493,
     281,   410,   189,  2079,  1847,  1860,   550,  1216,  1640,  1549,
    2050,  1810,  2088,  2443,  2219,  1893,  2505,  1887,  2091,  2511,
    2577,  2097,  2367,  2556,  2544,  2292,  1543,  1555,  2104,   793,
    2509,   525,  1860,   527,  1898,  2508,  1864,  2554,  1866,   533,
    1864,  1605,  1540,  2506,   325,   948,  1609,   541,  2275,   236,
    1642,  2151,   239,   404,  1202,  1887,   759,   734,  1187,   553,
    1504,   781,   780,   250,   345,  1519,  2097,  1161,  1790,  2435,
    2136,   565,  1186,  2104,  2042,  2151,  1776,   783,  1490,  2012,
    2331,  2419,  2027,  2310,   365,  2161,  1774,  1333,  2164,  2418,
    2430,  1320,  2431,  2215,   281,  2495,  2483,  2173,  2174,  2496,
    1117,  2177,  1507,  1444,   598,   599,   600,  1442,  2335,  1341,
    1120,  2338,  1255,  2189,  2411,   466,  1612,  2509,   469,   470,
    2196,  1317,   963,   765,  1140,  2201,  1811,  1759,  2204,  2205,
      -1,    -1,    -1,  2164,  1141,  2211,  2212,    -1,   325,    -1,
      -1,    -1,  1774,   269,  1776,  2189,    -1,  2223,   642,  2225,
      -1,    -1,  2196,    -1,    -1,  2189,    -1,  2201,   345,    -1,
    2204,  2205,  2196,    -1,    -1,    -1,  1828,  2201,    -1,  2245,
    2204,  2041,    -1,  2043,    -1,   455,    -1,    -1,   365,  2223,
      -1,    -1,    -1,    -1,    -1,  1333,    -1,    -1,   469,  2223,
    1852,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2275,
      -1,    -1,    -1,    -1,    -1,  1867,  1868,  1869,  1870,  1871,
    1872,  1873,  1874,  1875,  1876,    -1,   638,    -1,  2284,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2304,    -1,
      -1,    -1,    -1,  2309,  2310,    -1,    -1,    -1,    -1,  2305,
      -1,    -1,    -1,  2339,  2275,    -1,    -1,    -1,    -1,   743,
    2326,  2079,    -1,   533,  2330,    -1,    -1,    -1,   170,  2335,
    2304,    -1,  2338,  2339,    -1,   759,   760,    -1,    -1,    -1,
    2304,   765,   766,   767,  2350,    -1,  1908,    -1,   190,  2310,
      -1,  2151,  2509,    -1,  2360,   565,  2330,    -1,  2364,  2365,
      -1,    -1,    -1,    -1,    -1,    -1,  2330,    -1,   792,   793,
      -1,    -1,    -1,    -1,  2335,    -1,    -1,  2338,    -1,    -1,
      -1,   805,    -1,    49,   226,    -1,    -1,    -1,   598,   599,
     600,    -1,    -1,  2151,    -1,    -1,  2392,    -1,   822,   455,
     456,   457,   826,   459,   460,   461,   462,   463,   464,    -1,
    2416,     8,    -1,  2419,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,  2428,    -1,    -1,    -1,    -1,    93,    -1,  2435,
     272,    -1,     8,    -1,    -1,    11,    -1,  2443,    -1,    15,
      16,    17,    -1,  2439,    -1,  2419,    -1,    -1,  1624,    -1,
      -1,    -1,   118,    -1,   806,  2419,    32,  2463,    -1,  2021,
      -1,    -1,   778,  2025,    -1,    -1,    -1,   579,    -1,  2443,
     136,    -1,    -1,    -1,   140,  2275,  2482,  2483,    -1,  2443,
      -1,    -1,    -1,    -1,    -1,     8,  2048,  2049,    11,    -1,
      -1,    -1,    15,    16,    17,   161,   338,    -1,   164,    -1,
    1676,    -1,  2508,  2509,    -1,   929,    -1,    -1,    -1,    -1,
     934,   177,    -1,     8,    -1,    -1,    11,    -1,   942,  2525,
    1696,  2527,  2518,    -1,   948,   637,   638,   951,    -1,    -1,
      -1,   955,   956,   743,   958,   959,    -1,   961,    -1,    -1,
     382,    -1,   384,    -1,    -1,    40,  1624,    -1,  2509,  1725,
      -1,  2525,    47,    -1,    -1,    -1,   766,    -1,    -1,    -1,
      -1,  2525,    -1,   405,    -1,    -1,   408,    -1,    -1,    -1,
      -1,    -1,    -1,  1749,  2136,    -1,    -1,    72,    -1,  2585,
    2586,    -1,   792,    -1,    -1,    -1,    -1,    -1,  2388,    -1,
     187,   257,    -1,    -1,    -1,   805,    -1,    -1,  1676,   265,
      -1,    -1,  2360,    -1,    -1,    -1,  2364,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,   826,    -1,  1696,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1055,   208,    -1,  2196,    -1,    -1,    -1,    -1,  2201,
     306,    -1,  2204,    -1,    -1,   140,   629,  1725,    -1,    -1,
      -1,  1003,  2244,   636,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1090,    -1,    -1,    -1,
      -1,  1749,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2276,  2277,    -1,   182,    -1,  1865,
      -1,    -1,   187,   269,   806,  1119,    -1,  2289,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,  2509,
      -1,    -1,    -1,    -1,    -1,  1139,    -1,  1141,   830,   831,
     832,    -1,  2284,    32,   934,    -1,  1150,   222,  1152,    -1,
    1082,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,  1057,    -1,  2305,    -1,    -1,   269,    -1,    -1,    -1,
    2508,   961,    -1,    -1,    -1,    -1,   739,  2349,   741,   742,
    1184,    -1,    -1,    72,    -1,    -1,    -1,    -1,  2330,  1193,
    1194,    -1,    -1,    -1,   269,    -1,    -1,  2339,    -1,    -1,
    1204,  1205,  1206,  1207,    -1,  1209,    -1,  1865,    -1,    -1,
      -1,  1215,    -1,  1217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1228,  1229,    -1,    -1,    -1,  1233,
    1234,    -1,  1988,    -1,  1238,  1239,  1240,  1241,    -1,  1243,
    1244,    -1,    -1,    -1,   807,    -1,    -1,   810,   811,    -1,
    2392,    -1,    -1,    -1,    -1,    -1,     0,    -1,    -1,  1263,
    1264,    -1,    -1,    -1,    -1,  1161,    -1,    -1,    -1,    -1,
    1202,    -1,  1276,    -1,    -1,    -1,    -1,    -1,   455,   456,
     457,   356,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,    -1,    -1,   182,    -1,    -1,    -1,  2439,   187,   455,
     456,   457,    -1,   459,   460,   461,   462,   463,   464,    -1,
      -1,  1003,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
     209,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1119,
    1988,    -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2097,    -1,    -1,    -1,    -1,    -1,    91,  2104,  1139,
      -1,  1141,   455,   456,   457,    -1,   459,   460,   461,   462,
     463,   464,    -1,   252,    -1,    -1,   255,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2518,   452,    -1,    -1,
     269,    -1,    -1,   272,   459,   460,   461,   462,   463,   464,
    1082,    -1,    -1,    -1,  1184,    -1,    -1,    -1,   142,    -1,
      -1,  1333,    -1,    -1,    -1,   968,   969,    -1,  2164,    -1,
      -1,   155,    -1,    -1,    -1,    -1,   160,    -1,    -1,    -1,
      -1,   165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,
    1122,    -1,   176,    -1,    -1,  1439,    -1,    -1,    -1,  2097,
      -1,    -1,    -1,    -1,     8,    -1,  2104,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
     204,    -1,    -1,    -1,    -1,  1469,    -1,   356,    -1,    -1,
      -1,    -1,  1476,  1263,  1037,  1038,    40,    -1,    -1,   223,
      -1,    -1,  1045,    47,  1047,  1048,  1490,  1383,  1384,    -1,
    1494,    -1,  1388,  1497,    -1,  1499,    -1,    -1,    -1,  1062,
      -1,  1064,    -1,    -1,    -1,    -1,  2164,    -1,    72,    -1,
    1202,    -1,    -1,    -1,  1077,  1078,    -1,    -1,    -1,  2275,
     264,    -1,    -1,   267,    -1,    -1,    -1,  1423,  1424,   273,
      -1,   523,   524,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,  1545,    11,    -1,    -1,    -1,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,  2310,    -1,    -1,  1249,    -1,    -1,
      -1,    -1,    -1,   452,    -1,    -1,   455,   456,   457,    -1,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,  2335,
     469,    -1,  2338,   327,    -1,    -1,    -1,   579,   580,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1605,    -1,    -1,    -1,    -1,  1610,  1170,  1171,    -1,
    1614,  1615,  1616,  1617,    -1,    -1,    -1,  2275,   182,    -1,
      -1,    -1,    -1,   187,  1628,    -1,    -1,  1319,    -1,  1633,
      -1,    -1,    -1,  1637,   378,    -1,    -1,    -1,    -1,    -1,
      -1,  1333,    -1,    -1,    -1,   637,    -1,    -1,    -1,  1653,
    1654,    -1,  2310,    -1,    -1,    -1,    -1,    -1,   222,  1222,
     404,   653,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1232,
      -1,    -1,  1235,    -1,    -1,    -1,    -1,  2335,    -1,  1469,
    2338,    -1,    -1,    -1,   428,  1689,   430,   431,    -1,   681,
      -1,    -1,  1624,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,   700,   701,
     702,    -1,   704,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,    -1,    -1,   469,   470,   471,    -1,    -1,
      -1,    -1,   724,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,  1304,    -1,    -1,  1676,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2509,  1317,    -1,    -1,    -1,    -1,  1763,
      -1,    -1,    -1,    -1,  1696,    -1,  1329,  1771,  1772,  1773,
    1774,    -1,  1776,  1777,    -1,    -1,    -1,  1781,  1782,    -1,
      -1,   773,    -1,    -1,    -1,   777,   778,    -1,    -1,    -1,
      -1,    -1,   356,  1725,    -1,    -1,    -1,    -1,    -1,    -1,
     269,  1697,  1698,  1699,  1700,    -1,  1810,  1703,  1704,  1705,
    1706,  1707,  1708,  1709,  1710,  1711,  1712,  1749,    -1,    -1,
    1610,    -1,  1826,    -1,  1828,  1615,  1616,  1617,  1832,  1833,
    1834,    -1,  1836,    -1,    -1,    -1,    -1,    -1,   830,   831,
     832,    -1,    -1,  1633,    -1,    -1,    -1,    -1,  1852,    -1,
    1854,  2509,    -1,    -1,    -1,    -1,    -1,  1753,  1754,    -1,
      -1,    -1,    -1,  1867,  1868,  1869,  1870,  1871,  1872,  1873,
    1874,  1875,  1876,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1891,   452,    -1,
      -1,   455,   456,   457,  1898,   459,   460,   461,   462,   463,
     464,    -1,    -1,  1595,    -1,  1909,    -1,    -1,  1912,    -1,
      -1,    -1,    -1,    -1,    -1,  1919,    -1,  1480,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1624,  1865,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,  1511,  1512,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1771,  1772,  1773,  1676,    -1,   455,   456,   457,    -1,
     459,   460,   461,   462,   463,   464,    -1,  2001,    -1,    -1,
    2004,  2005,  2006,  2007,  1696,    -1,    -1,  2011,  2012,    -1,
    2014,    -1,    -1,  2017,    -1,    -1,    -1,  2021,    -1,    -1,
      -1,  2025,    -1,    -1,    -1,    -1,    -1,  2031,    -1,    -1,
      -1,    -1,    -1,  1725,    -1,    -1,  1826,    -1,    -1,    -1,
    1032,    -1,    -1,    -1,    -1,    -1,  2050,    -1,    -1,    -1,
      -1,  2055,    -1,    -1,    -1,  2059,  1988,  1749,    -1,    -1,
      -1,  1053,    -1,  2067,  1056,    -1,    -1,  1059,    -1,    -1,
      -1,    -1,    -1,    -1,  1066,  1067,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2092,    -1,
      -1,  1083,  1084,  1085,  1086,    -1,    -1,  1660,  1661,  1091,
      -1,  1891,  1665,  1095,    -1,    -1,    -1,  1099,    -1,    -1,
    1102,  1103,  1104,  1105,  1106,  1107,  1108,  1109,  1110,    -1,
      -1,  1113,  1912,    -1,    -1,  2129,    -1,    -1,  1120,    -1,
    1122,  2135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2146,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1143,    -1,   718,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     0,    -1,  2097,    -1,    -1,    -1,    -1,
      -1,    -1,  2104,  1865,    -1,    -1,    -1,    -1,  1170,  1171,
      -1,    -1,    -1,    -1,    -1,  2189,  2190,    -1,    -1,    -1,
    2194,   756,  2196,    -1,    -1,    -1,    -1,  2201,    -1,    -1,
    2204,  2205,    -1,  2207,   269,  2209,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2004,  2005,  2006,  2007,    -1,  2223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,  2164,    -1,    -1,    -1,    -1,    -1,    -1,  2243,
    2244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2252,    -1,
      -1,    -1,    -1,    -1,    91,    -1,    -1,  1249,    -1,    -1,
    1252,  1253,    -1,  1255,    -1,  2161,    -1,    -1,    -1,    -1,
     835,    -1,  2276,  2277,    -1,   840,    -1,    -1,    -1,    -1,
      -1,    -1,  2286,    -1,    73,  2289,    -1,    -1,    -1,    -1,
       0,    -1,    -1,    -1,    -1,    -1,  1988,  2301,    -1,    88,
    2304,    -1,  1865,    -1,    -1,   142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   155,  2323,
      -1,    -1,    -1,   160,    -1,    -1,  2330,  1319,   165,    -1,
      -1,    -1,  2336,    -1,    -1,    -1,   173,    -1,    -1,   176,
      -1,  2345,    -1,  2275,    -1,  2349,    -1,    -1,  1340,  2245,
      -1,    -1,   141,  1345,  2358,    -1,    -1,    -1,    -1,    -1,
      -1,   150,  1925,    -1,    -1,    -1,    -1,   204,    -1,    -1,
      -1,    -1,    -1,   162,    -1,    -1,  2380,    -1,  2310,    -1,
      -1,    91,    -1,    -1,    -1,    -1,   223,  2391,    -1,    -1,
     455,   456,   457,  1385,   459,   460,   461,   462,   463,   464,
      -1,   190,    -1,  2335,    -1,  2097,  2338,    -1,  1400,    -1,
    1402,  1403,  2104,  2309,    -1,  2419,  1408,    -1,    -1,    -1,
      -1,  2425,    -1,    -1,    -1,    -1,  2430,   264,    -1,    -1,
     267,    -1,   142,    -1,    -1,    -1,   273,    -1,    -1,  2443,
    2444,  2445,  2446,    -1,    -1,   155,   235,    -1,    -1,  1441,
     160,  1443,    -1,  1445,    -1,   165,    -1,    -1,    -1,    -1,
      -1,    -1,  2252,   173,    -1,  1030,   176,    -1,    -1,    -1,
      -1,    -1,  2164,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2487,    -1,    -1,    -1,  1052,    -1,    -1,
     327,  2495,  1057,    -1,   204,    -1,    -1,    -1,    -1,    -1,
      -1,  2505,   291,  1068,  1069,  1070,    -1,  1072,    -1,    -1,
      -1,  2301,  1504,   223,    -1,  2519,   305,    -1,    -1,    -1,
      -1,  2525,    -1,  2086,    -1,    -1,     8,  1519,  2091,    11,
      -1,    -1,    -1,    15,    16,    17,  2540,    -1,    -1,    -1,
      -1,   378,  2105,  2106,    -1,  1537,    -1,   336,    -1,   338,
      -1,    -1,    -1,  1118,   264,    -1,   345,   267,    40,   348,
      -1,    -1,    -1,   273,    -1,    47,    -1,   404,  2358,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2509,   367,    -1,
      -1,    -1,    -1,  2275,     0,    -1,    -1,    -1,    -1,   378,
      72,   428,  1157,   430,   431,    -1,   385,    -1,    -1,    -1,
      -1,  2391,    18,  1595,  1169,   394,    -1,    -1,    -1,  1174,
      -1,    -1,    28,    -1,    30,    31,    -1,   327,  2310,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
      46,    -1,   469,   470,   471,   424,    -1,    -1,    -1,    55,
      -1,    -1,    -1,  2335,    -1,    -1,  2338,    -1,    -1,    -1,
      -1,    67,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    78,    -1,    -1,    -1,    -1,    -1,   378,    -1,
      -1,    -1,    -1,    89,    -1,    91,    -1,    -1,    -1,    -1,
      -1,  1673,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1683,   108,    -1,   404,  1687,    -1,    -1,  1690,    -1,
     182,    -1,    -1,  2266,  2267,   187,   122,    -1,    -1,    -1,
      -1,    -1,  2275,    -1,    -1,    -1,   132,    -1,   428,    -1,
     430,   431,   138,    -1,  1716,  1717,   208,   209,    -1,    -1,
     146,    -1,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,    -1,  1737,    -1,    -1,  1740,    -1,
    1742,    -1,    -1,    -1,    -1,    -1,   466,    -1,  1750,   469,
     470,   471,     8,    -1,    -1,    11,  1758,  1759,    -1,    -1,
     186,    -1,    -1,   255,    -1,    -1,    -1,    -1,  1343,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,
      -1,    -1,    -1,    -1,    40,  1787,    -1,    -1,    -1,  1364,
      -1,    47,    -1,    -1,  1796,    -1,    -1,    -1,    -1,   225,
      -1,    -1,    -1,    -1,    -1,    -1,  1381,  2509,  1383,  1384,
    1812,  1386,    -1,  1388,    -1,    -1,    72,  1392,    -1,    -1,
      -1,    -1,    -1,    -1,  1399,    -1,    -1,    -1,    -1,  1404,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1414,
    1415,  1416,  1417,    -1,    -1,    -1,    -1,    -1,  1423,  1424,
      -1,  1426,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1437,    -1,   356,  1440,    -1,   293,    -1,    -1,
     296,    -1,  1447,  1448,  1449,  1450,  1451,  1452,  1453,  1454,
    1455,  1456,    -1,    -1,   140,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   324,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   332,    -1,    -1,    -1,
      -1,    -1,  1487,    -1,    -1,    -1,    -1,    -1,   344,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   182,    -1,    -1,   355,
      -1,   187,    -1,    -1,    -1,    -1,  2509,  1939,    35,   365,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   378,    -1,    -1,    -1,    -1,    54,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   222,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1982,  1983,    -1,    -1,    -1,  1987,    -1,   413,     8,    -1,
    1992,    11,   418,  1995,  1996,    15,    16,    17,  2000,    -1,
      -1,    -1,    -1,    -1,    -1,   431,    -1,   104,   105,    -1,
      -1,    -1,    32,   269,    -1,   112,    -1,    -1,    -1,    -1,
      40,    -1,    -1,  1598,  1599,  1600,    -1,    47,   454,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,   468,    -1,  2046,   471,     8,    -1,    -1,    11,
      -1,    -1,    72,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      32,    -1,   169,    35,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,  2088,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,  1672,    -1,    -1,
     356,    -1,    -1,  1678,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    -1,     8,    -1,    -1,    11,    -1,    -1,  1693,  1694,
    1695,    -1,  1697,  1698,  1699,  1700,    -1,    -1,  1703,  1704,
    1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,   236,
      -1,    -1,   239,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,   250,    -1,   252,    -1,    -1,  1733,    -1,
      -1,    -1,   182,  1738,  1739,    -1,    -1,   187,    -1,    -1,
      -1,  2173,  2174,    -1,    -1,  2177,    72,  1752,  1753,  1754,
    1755,    -1,  1757,    -1,   281,    -1,    -1,    -1,   208,   209,
      -1,    -1,    -1,    -1,    -1,    -1,   452,    -1,    -1,    -1,
      -1,    -1,   222,   459,   460,   461,   462,   463,   464,  2211,
    2212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     182,    -1,    -1,  2225,     8,   187,    -1,    11,   325,    -1,
      -1,    -1,   252,    -1,    -1,   255,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   140,    -1,   208,   209,   345,   269,
      -1,    -1,   272,    -1,  1829,    -1,    40,    -1,    -1,    -1,
     222,    -1,    -1,    47,    -1,    -1,    -1,    -1,   365,    -1,
     367,    -1,    -1,   370,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,   182,    -1,    72,    -1,
     252,   187,    -1,   255,    -1,    -1,    -1,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,   269,     8,    -1,
     272,    11,    -1,    47,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,  2326,    -1,   222,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,   356,  2339,    72,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2350,    -1,
       8,    -1,    -1,    11,    -1,    -1,   140,    15,    16,    17,
      -1,    -1,    -1,  2365,    -1,  1940,    -1,    -1,    -1,  1944,
    1945,   468,  1947,   269,    32,  1950,  1951,  1952,  1953,    -1,
      -1,    -1,  1957,  1958,  1959,  1960,  1961,  1962,  1963,  1964,
    1965,  1966,  1967,  1968,   356,    -1,    -1,    -1,   182,    -1,
      -1,    -1,    -1,   187,    -1,    -1,  1981,    -1,    -1,  1984,
      -1,  1986,    -1,    -1,    -1,  1990,    -1,    -1,  1993,  1994,
      -1,    -1,  1997,  1998,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   452,  2435,    -1,   455,   456,   457,   222,   459,
     460,   461,   462,   463,   464,    -1,    -1,     8,   182,    -1,
      11,    -1,   472,   187,    15,    16,    17,    -1,    -1,    -1,
     356,  2463,    -1,  2038,    -1,    -1,    -1,    -1,    -1,    -1,
    2045,    32,    -1,    -1,   208,   209,    -1,    -1,    -1,    40,
    2482,  2483,    -1,  2058,     8,   269,    47,    11,   222,    -1,
     452,    -1,    -1,   455,   456,   457,    -1,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    72,    -1,    -1,    -1,    -1,    40,    -1,   252,    -1,
      -1,   255,    -1,    47,    -1,  2527,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,   272,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
     208,    -1,    -1,    -1,    -1,    -1,   452,    -1,    -1,    -1,
      -1,    -1,    -1,   459,   460,   461,   462,   463,   464,   269,
      -1,    -1,   356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2157,  2585,  2586,    -1,  2161,    -1,    -1,    -1,
      -1,    -1,  2167,  2168,  2169,    -1,    -1,  2172,    -1,    -1,
    2175,  2176,    -1,    -1,    -1,  2180,    -1,    -1,    -1,    -1,
      -1,   269,    -1,    -1,    -1,    -1,   140,    -1,    -1,    -1,
      -1,   182,   356,    -1,    -1,    -1,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,   209,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   182,    -1,
      -1,   222,    -1,   187,    -1,    -1,    -1,    -1,   452,    -1,
    2245,    -1,    -1,    -1,    -1,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2263,    -1,
      -1,   252,    -1,    -1,   255,    -1,    -1,    -1,   222,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   269,    -1,
      -1,   272,    -1,    -1,    -1,    -1,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,    -1,   459,   460,   461,   462,   463,
     464,    -1,    -1,  2308,  2309,   469,    -1,    -1,  2313,  2314,
    2315,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   455,   456,   457,    -1,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,  2343,  2344,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2368,    -1,   356,    -1,   455,   456,   457,
      -1,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   356,    -1,    -1,    -1,    -1,    -1,  2413,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2424,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2441,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2455,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,    -1,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,    -1,   469,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   452,    -1,
      -1,    -1,    -1,    -1,    -1,   459,   460,   461,   462,   463,
     464,  2516,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2530,    -1,    -1,    -1,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,  2597,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,   127,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
     164,    -1,   166,   167,   168,   169,   170,    -1,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,   222,    -1,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
      -1,    -1,    -1,    -1,    -1,   459,   460,   461,    -1,    -1,
      -1,    -1,    -1,    -1,   468,   469,    -1,    -1,    -1,   473,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,   164,    -1,   166,   167,   168,   169,   170,    -1,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
      -1,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,    -1,    -1,    -1,    -1,   459,   460,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   468,   469,    -1,    -1,    -1,
     473,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,   157,   158,   159,    -1,   161,
      -1,   163,   164,    -1,   166,   167,   168,   169,   170,    -1,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
     222,    -1,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,    -1,   269,   270,   271,
      -1,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,    -1,    -1,    -1,    -1,   459,   460,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   468,    -1,    -1,    -1,
      -1,   473,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,   165,   166,   167,   168,   169,   170,
      -1,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,    -1,   218,   219,   220,
     221,   222,    -1,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,    -1,   269,   270,
     271,    -1,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,    -1,    -1,
      -1,    -1,   473,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,   157,   158,   159,
      -1,   161,    -1,   163,   164,    -1,   166,   167,   168,   169,
     170,    -1,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,    -1,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,    -1,   269,
     270,   271,    -1,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,    -1,    -1,    -1,    -1,    -1,   459,
     460,   461,    -1,    -1,    -1,    -1,    -1,    -1,   468,    -1,
      -1,    -1,    -1,   473,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,   164,    -1,   166,   167,   168,
     169,   170,    -1,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,    -1,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,    -1,
     269,   270,   271,    -1,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,    -1,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,    -1,    -1,    -1,    -1,    -1,
     459,   460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,
      -1,    -1,    -1,    -1,   473,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,   157,
     158,   159,    -1,   161,    -1,   163,   164,    -1,   166,   167,
     168,   169,   170,    -1,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,    -1,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
      -1,   269,   270,   271,    -1,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,    -1,    -1,    -1,    -1,
      -1,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     468,   469,    -1,    -1,    -1,   473,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,   164,    -1,   166,
     167,   168,   169,   170,    -1,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,    -1,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,    -1,    -1,    -1,
      -1,    -1,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   468,    -1,    -1,    -1,    -1,   473,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,   157,   158,   159,    -1,   161,    -1,   163,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,   222,    -1,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,    -1,    -1,
      -1,    -1,    -1,   459,   460,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   468,    -1,    -1,    -1,    -1,   473,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
      -1,   166,   167,   168,   169,   170,    -1,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,    -1,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,    -1,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,    -1,
      -1,    -1,    -1,    -1,   459,   460,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   468,    -1,    -1,    -1,    -1,   473,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
     164,    -1,   166,   167,   168,   169,   170,    -1,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,   222,    -1,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
      -1,    -1,    -1,    -1,    -1,   459,   460,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   468,    -1,    -1,    -1,    -1,   473,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,   164,    -1,   166,   167,   168,   169,   170,    -1,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
      -1,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,    -1,    -1,    -1,    -1,    -1,   459,   460,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   468,    -1,    -1,    -1,    -1,
     473,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,   157,   158,   159,    -1,   161,
      -1,   163,   164,    -1,   166,   167,   168,   169,   170,    -1,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
     222,    -1,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,    -1,   269,   270,   271,
      -1,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   468,    -1,    -1,    -1,
      -1,   473,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,    -1,   166,   167,   168,   169,   170,
      -1,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,    -1,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,    -1,   269,   270,
     271,    -1,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,    -1,    -1,
      -1,    -1,   473,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,   157,   158,   159,
      -1,   161,    -1,   163,   164,    -1,   166,   167,   168,   169,
     170,    -1,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,    -1,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,    -1,   269,
     270,   271,    -1,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,    -1,    -1,    -1,    -1,    -1,   459,
     460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,    -1,
      -1,    -1,    -1,   473,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,   164,    -1,   166,   167,   168,
     169,   170,    -1,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,    -1,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,    -1,
     269,   270,   271,    -1,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,    -1,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     459,   460,    -1,    -1,     3,     4,     5,     6,     7,   468,
       9,    10,    -1,    -1,   473,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,   164,    -1,   166,   167,   168,
     169,   170,    -1,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,    -1,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,    -1,
     269,   270,   271,    -1,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,    -1,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     459,   460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,
      -1,    -1,    -1,    -1,   473,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,   157,
     158,   159,    -1,   161,    -1,   163,   164,    -1,   166,   167,
     168,   169,   170,    -1,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
      -1,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,    -1,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
      -1,   269,   270,   271,    -1,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     468,    -1,    -1,    -1,    -1,   473,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,   164,    -1,   166,
     167,   168,   169,   170,    -1,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,   211,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,    -1,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,    -1,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,    -1,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,    -1,    -1,    -1,
      -1,    -1,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   468,    -1,    -1,    -1,    -1,   473,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,    -1,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,   157,   158,   159,    -1,   161,    -1,   163,   164,    -1,
     166,   167,   168,   169,   170,    -1,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,    -1,    -1,   210,   211,   212,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,    -1,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   459,   460,     3,    -1,    -1,    -1,    -1,
      -1,    -1,   468,    -1,    -1,    -1,    -1,   473,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,    -1,   154,    -1,   156,   157,
     158,   159,    -1,   161,    -1,   163,    -1,    -1,   166,   167,
     168,   169,   170,    -1,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
      -1,    -1,   210,   211,   212,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,    -1,    -1,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,    -1,   256,    -1,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
      -1,   269,   270,   271,    -1,    -1,   274,   275,    -1,   277,
      -1,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,   379,    -1,   381,   382,   383,   384,   385,    -1,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,   400,   401,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,   421,    -1,   423,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   469,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,    -1,   154,    -1,
     156,   157,   158,   159,    -1,   161,    -1,   163,   164,    -1,
     166,   167,   168,   169,   170,    -1,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,    -1,   219,   220,   221,   222,    -1,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,   255,
     256,    -1,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,   269,   270,   271,    -1,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,    -1,   454,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   468,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,    -1,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
     164,    -1,   166,   167,   168,   169,   170,    -1,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,    -1,   219,   220,   221,   222,    -1,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,    -1,   253,
     254,   255,   256,    -1,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,   269,   270,   271,    -1,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,   400,   401,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   468,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,    -1,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
      -1,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,   164,    -1,   166,   167,   168,   169,   170,    -1,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
      -1,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,   400,   401,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   468,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,    -1,   154,    -1,   156,   157,   158,   159,    -1,   161,
      -1,   163,   164,    -1,   166,   167,   168,   169,   170,    -1,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
     222,    -1,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
      -1,   253,   254,   255,   256,    -1,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,    -1,   269,   270,   271,
      -1,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,   400,   401,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,    -1,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   468,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,    -1,   166,   167,   168,   169,   170,
      -1,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,    -1,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,    -1,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,    -1,   269,   270,
     271,    -1,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,    -1,     3,    -1,    -1,    -1,    -1,   459,   460,
     461,    -1,    -1,    -1,    -1,    -1,    -1,   468,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,    -1,   156,   157,   158,   159,
      -1,   161,    -1,   163,   164,    -1,   166,   167,   168,   169,
     170,    -1,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,    -1,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,    -1,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,    -1,   269,
     270,   271,    -1,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,    -1,    -1,   454,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,    -1,   154,    -1,   156,   157,
     158,   159,    -1,   161,    -1,   163,    -1,    -1,    -1,   167,
     168,   169,   170,    -1,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,    -1,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
      -1,    -1,   210,    -1,   212,   213,   214,   215,   216,    -1,
      -1,   219,    -1,   221,    -1,    -1,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,    -1,   247,
     248,   249,   250,   251,    -1,   253,   254,    -1,   256,    -1,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
      -1,   269,   270,   271,    -1,    -1,   274,   275,    -1,   277,
      -1,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,    -1,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,   400,   401,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,   421,    -1,   423,   424,   425,   426,    -1,
      -1,   429,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,   454,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     468,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,    -1,   154,    -1,
     156,   157,   158,   159,    -1,   161,    -1,   163,    -1,    -1,
      -1,   167,   168,   169,   170,    -1,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
      -1,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,   215,
     216,    -1,    -1,   219,    -1,   221,    -1,    -1,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
      -1,   247,   248,   249,   250,   251,    -1,   253,   254,    -1,
     256,    -1,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,
      -1,   277,    -1,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,    -1,   381,   382,   383,   384,   385,
      -1,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,   421,    -1,   423,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   468,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,    -1,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,    -1,
      -1,    -1,   167,   168,   169,   170,    -1,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,    -1,   221,    -1,    -1,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,    -1,   253,   254,
      -1,   256,    -1,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,
     275,    -1,   277,    -1,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,    -1,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,    -1,   381,   382,   383,   384,
     385,    -1,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,   400,   401,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,   419,    -1,   421,    -1,   423,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   468,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,    -1,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
      -1,    -1,    -1,   167,   168,   169,   170,    -1,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,    -1,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,
     214,   215,   216,    -1,    -1,   219,    -1,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,    -1,   247,   248,   249,   250,   251,    -1,   253,
     254,    -1,   256,    -1,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,
     274,   275,    -1,   277,    -1,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,    -1,   381,   382,   383,
     384,   385,    -1,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,   400,   401,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,   421,    -1,   423,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   468,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,    -1,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
      -1,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,    -1,    -1,    -1,   167,   168,   169,   170,    -1,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,    -1,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,    -1,
     253,   254,    -1,   256,    -1,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,
      -1,   274,   275,    -1,   277,    -1,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,    -1,   381,   382,
     383,   384,   385,    -1,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,   400,   401,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,   421,    -1,
     423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,     8,
       9,    -1,    -1,    -1,    -1,   468,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,    -1,   148,
     149,   150,   151,    -1,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,    -1,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,    -1,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     449,   450,   451,    -1,     3,    -1,   455,   456,   457,     8,
     459,   460,   461,   462,   463,   464,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,    -1,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,    -1,    -1,    -1,   167,   168,
     169,   170,    -1,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,    -1,   221,    -1,    -1,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,    -1,   253,   254,    -1,   256,    -1,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,    -1,
     269,   270,   271,    -1,    -1,   274,   275,    -1,   277,    -1,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,    -1,   381,   382,   383,   384,   385,    -1,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,   400,   401,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,   418,
     419,    -1,   421,    -1,   423,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,    -1,    -1,   455,   456,   457,    -1,
     459,   460,   461,   462,   463,   464,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      32,    15,    16,    17,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,     8,    -1,    47,    11,    -1,    32,    -1,
      15,    16,    17,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    32,    -1,    -1,
      72,    -1,    -1,    -1,    -1,    40,    -1,     8,    -1,    -1,
      11,    -1,    47,    -1,    15,    16,    17,    -1,    72,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    32,    15,    16,    17,    -1,    -1,    72,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,     8,    -1,    -1,    11,
      -1,    72,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,
       8,    -1,    -1,    11,    -1,    47,    -1,    15,    16,    17,
     182,    -1,    -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,   182,    -1,
      72,    -1,    40,   187,    -1,    -1,   208,   209,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   182,    -1,    -1,
     222,    -1,   187,    -1,   208,   209,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    72,    -1,    -1,    -1,   222,    -1,
      -1,    -1,    -1,   208,   209,    -1,    -1,    -1,    -1,    -1,
     252,   182,    -1,   255,    -1,    -1,   187,   222,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   269,   252,   182,
     272,   255,    -1,    -1,   187,    -1,    -1,   208,   209,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,   252,   272,    -1,
     255,   222,    -1,    -1,    -1,   208,   209,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   269,    -1,    -1,   272,    -1,   222,
     182,    -1,    -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,
      -1,   252,    -1,    -1,   255,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,   209,   269,   252,
      -1,   272,   255,    -1,   182,    -1,    -1,    -1,    -1,   187,
     222,    -1,    -1,    -1,   356,    -1,   269,    -1,    -1,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,   209,   356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     252,    -1,    -1,   255,   222,    -1,    -1,    -1,    -1,    -1,
      -1,   356,    -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   252,    -1,    -1,   255,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   356,    -1,    -1,    -1,    -1,
      -1,   269,    -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   356,    -1,    -1,    -1,    -1,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,    -1,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,    -1,   469,   452,    -1,
      -1,   455,   456,   457,    -1,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   356,   469,    -1,   452,    -1,    -1,
     455,   456,   457,    -1,   459,   460,   461,   462,   463,   464,
      -1,    -1,     8,    -1,   469,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,   356,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,    -1,   459,   460,
     461,   462,   463,   464,    40,    -1,    -1,    -1,   469,   452,
      -1,    47,   455,   456,   457,    -1,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,    -1,   469,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,    22,     8,
      -1,    -1,    11,    -1,    28,    -1,    15,    16,    17,    -1,
     452,    35,    -1,   455,   456,   457,    -1,   459,   460,   461,
     462,   463,   464,    32,    -1,    -1,    -1,   469,    22,    -1,
      54,    40,    -1,    -1,    28,    -1,    -1,    -1,    47,    -1,
      -1,    35,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
      -1,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
      54,   469,    -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   182,    -1,   132,    -1,
     104,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,   209,    -1,    -1,    -1,    -1,   132,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   182,    -1,    -1,   252,    -1,   187,   255,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   269,    -1,   189,    -1,    -1,    -1,   208,
     209,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   236,   222,    -1,   239,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   236,   252,    -1,   239,   255,   271,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   281,    -1,    -1,
     269,    -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,    -1,    -1,
     356,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,    -1,    -1,    -1,
     324,   325,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   345,    -1,    -1,    -1,    -1,   320,   351,    -1,    -1,
     324,   325,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   365,    -1,    -1,    -1,    -1,    -1,   356,    -1,    -1,
      -1,   345,    -1,    -1,    -1,    -1,    -1,   351,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   365,    -1,    -1,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,    -1,   459,   460,   461,   462,   463,   464,    -1,
      -1,   415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   452,     3,    -1,   455,   456,   457,    -1,
     459,   460,   461,   462,   463,   464,    -1,    -1,   467,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   461,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,    -1,   156,   157,   158,   159,
      -1,   161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,
     170,    -1,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,    -1,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,
     210,    -1,   212,   213,   214,   215,   216,    -1,    -1,   219,
      -1,   221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,    -1,   247,   248,   249,
     250,   251,    -1,   253,   254,    -1,   256,    -1,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,    -1,   269,
     270,   271,    -1,    -1,   274,   275,    -1,   277,    -1,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
      -1,   381,   382,   383,   384,   385,    -1,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,   421,    -1,   423,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
      -1,   461,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,    -1,   166,   167,   168,   169,   170,
      -1,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,    -1,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,    -1,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,    -1,   269,   270,
     271,    -1,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     3,     4,     5,    -1,    -1,    -1,     9,   459,   460,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,   157,   158,   159,    -1,   161,
      -1,   163,   164,    -1,   166,   167,   168,   169,   170,    -1,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
     222,    -1,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
      -1,   253,   254,   255,   256,    -1,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,    -1,   269,   270,   271,
      -1,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       3,     4,     5,    -1,    -1,    -1,     9,   459,   460,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,    -1,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,   164,    -1,   166,   167,   168,   169,   170,    -1,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
      -1,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,    -1,   269,   270,   271,    -1,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,     8,    -1,    -1,    11,    -1,   459,   460,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    32,    15,    16,    17,    36,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,     8,    -1,
      47,    11,    -1,    32,    -1,    15,    16,    17,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    32,    -1,    -1,    72,    -1,    -1,    -1,    -1,
      40,    -1,     8,    -1,    -1,    11,    -1,    47,    -1,    15,
      16,    17,    -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    35,
      -1,    -1,    72,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,     8,   121,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    72,    32,    15,    16,
      17,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    32,    -1,    -1,    35,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,   160,    -1,    -1,    -1,   182,   165,    72,    -1,    -1,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   159,
      -1,    -1,    -1,   182,    -1,    72,    -1,    -1,   187,    -1,
      -1,   208,   209,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   182,    -1,    -1,   222,    -1,   187,    -1,   208,
     209,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   222,    -1,    -1,    -1,    -1,   208,   209,
      -1,    -1,    -1,    -1,    -1,   252,   182,    -1,   255,    -1,
      -1,   187,   222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   269,   252,    -1,   272,   255,    -1,    -1,    -1,
      -1,    -1,   208,   209,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,   252,   272,    -1,   255,   222,   182,    -1,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,    -1,    -1,   269,
      -1,    -1,   272,    -1,    -1,   182,    -1,    -1,    -1,    -1,
     187,    -1,    -1,   208,   209,    -1,   252,    -1,    -1,   255,
      -1,    -1,    -1,    -1,   294,    -1,    -1,   222,    -1,    -1,
      -1,   208,   209,   269,    -1,    -1,   272,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   356,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   252,    -1,    -1,
     255,    -1,    -1,    -1,    -1,    -1,    -1,   356,    -1,    -1,
      -1,    -1,    -1,    -1,   269,   252,     8,   272,   255,    11,
      -1,    -1,    -1,    15,    16,    17,   356,    -1,    -1,    -1,
      -1,    -1,   269,    -1,   289,   272,    -1,    -1,    -1,    -1,
      32,    -1,    -1,    -1,    -1,   412,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,
     356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    -1,    -1,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,    -1,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   356,    -1,   452,    -1,    -1,   455,   456,   457,    -1,
     459,   460,   461,   462,   463,   464,    -1,    -1,     8,   356,
      -1,    11,   452,    -1,    -1,   455,   456,   457,    -1,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      40,    -1,    -1,    15,    16,    17,   452,    47,    -1,   455,
     456,   457,    -1,   459,   460,   461,   462,   463,   464,    -1,
      32,    -1,    -1,   165,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    72,    -1,    -1,    47,    -1,    -1,    -1,    -1,
     182,    -1,    -1,    -1,    -1,   187,    -1,   452,    -1,    -1,
     455,   456,   457,    -1,   459,   460,   461,   462,   463,   464,
      72,    -1,    -1,    -1,    -1,   452,   208,   209,   455,   456,
     457,    -1,   459,   460,   461,   462,   463,   464,    -1,     8,
     222,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     140,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
     252,    40,    -1,   255,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   269,     8,    -1,
     272,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,   182,    72,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
     182,    -1,    -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    72,    -1,    -1,    -1,   208,   209,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,   356,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   269,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     252,    -1,    -1,   255,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   182,    -1,    -1,    -1,   269,   187,    -1,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
     209,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   182,    -1,    -1,    -1,    -1,   187,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   356,   459,   460,   461,
     462,   463,   464,   252,    -1,    -1,   255,    -1,   208,   209,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,   222,   272,   356,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   252,    -1,   386,   255,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   269,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   452,    -1,    -1,    -1,    -1,    -1,    -1,   459,
     460,   461,   462,   463,   464,    -1,    -1,   356,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,    -1,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   356,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   452,    -1,    -1,   455,   456,   457,    -1,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,   452,     5,    -1,   455,   456,   457,    -1,   459,
     460,   461,   462,   463,   464,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,    -1,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
      -1,   166,   167,   168,   169,   170,    -1,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,    -1,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,    -1,   253,   254,
     255,   256,    -1,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,   400,   401,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,    -1,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      -1,    -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,   157,   158,   159,    -1,   161,    -1,   163,   164,    -1,
     166,   167,   168,   169,   170,    -1,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,   222,    -1,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,   255,
     256,    -1,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,    -1,   269,   270,   271,    -1,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,    -1,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,   164,    -1,   166,
     167,   168,   169,   170,    -1,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,    -1,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,   255,   256,
      -1,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,   400,   401,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,   418,   419,    -1,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    -1,    -1,
      -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,    -1,   154,    -1,   156,   157,
     158,   159,    -1,   161,    -1,   163,   164,    -1,   166,   167,
     168,   169,   170,    -1,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,    -1,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
      -1,   269,   270,   271,    -1,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,   400,   401,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    -1,    -1,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,    -1,   154,    -1,   156,   157,   158,
     159,    -1,   161,   162,   163,    -1,    -1,    -1,   167,   168,
     169,   170,    -1,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,    -1,   221,    -1,    -1,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,    -1,   253,   254,    -1,   256,    -1,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,    -1,
     269,   270,   271,    -1,    -1,   274,   275,    -1,   277,    -1,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,    -1,   381,   382,   383,   384,   385,    -1,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,   418,
     419,    -1,   421,    -1,   423,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    84,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,    -1,   156,   157,   158,   159,
      -1,   161,   162,   163,    -1,    -1,    -1,   167,   168,   169,
     170,    -1,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,    -1,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,
     210,    -1,   212,   213,   214,   215,   216,    -1,    -1,   219,
      -1,   221,   222,    -1,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,    -1,   247,   248,   249,
     250,   251,    -1,   253,   254,    -1,   256,    -1,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,    -1,   269,
     270,   271,    -1,    -1,   274,   275,    -1,   277,    -1,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
      -1,   381,   382,   383,   384,   385,    -1,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,   421,    -1,   423,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,   170,
      -1,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,    -1,
     221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,    -1,   253,   254,    -1,   256,    -1,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,    -1,   269,   270,
     271,    -1,    -1,   274,   275,    -1,   277,    -1,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,    -1,
     381,   382,   383,   384,   385,    -1,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,   400,
     401,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
     421,    -1,   423,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,    -1,   154,    -1,   156,   157,   158,   159,    -1,   161,
      -1,   163,    -1,    -1,    -1,   167,   168,   169,   170,    -1,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,    -1,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,
     212,   213,   214,   215,   216,    -1,    -1,   219,    -1,   221,
      -1,    -1,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,    -1,   247,   248,   249,   250,   251,
      -1,   253,   254,    -1,   256,    -1,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,    -1,   269,   270,   271,
      -1,    -1,   274,   275,    -1,   277,    -1,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,    -1,   381,
     382,   383,   384,   385,    -1,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,   400,   401,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
      -1,   423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,    -1,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
      -1,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,    -1,    -1,    -1,   167,   168,   169,   170,    -1,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,    -1,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,    -1,
     253,   254,    -1,   256,    -1,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,
      -1,   274,   275,    -1,   277,    -1,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,    -1,   381,   382,
     383,   384,   385,    -1,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,   400,   401,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,   421,    -1,
     423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,    -1,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
      -1,    -1,    -1,   167,   168,   169,   170,    -1,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,    -1,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,
     214,   215,   216,    -1,    -1,   219,    -1,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,    -1,   247,   248,   249,   250,   251,    -1,   253,
     254,    -1,   256,    -1,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,   269,   270,   271,    -1,    -1,
     274,   275,    -1,   277,    -1,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,    -1,   381,   382,   383,
     384,   385,    -1,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,   400,   401,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,   421,    -1,   423,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,    -1,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,    -1,
      -1,    -1,   167,   168,   169,   170,    -1,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,    -1,   221,    -1,    -1,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,    -1,   253,   254,
      -1,   256,    -1,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,
     275,    -1,   277,    -1,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,    -1,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,    -1,   381,   382,   383,   384,
     385,    -1,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,   400,   401,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,   419,    -1,   421,    -1,   423,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,    -1,   154,    -1,
     156,   157,   158,   159,    -1,   161,    -1,   163,    -1,    -1,
      -1,   167,   168,   169,   170,    -1,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
      -1,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,   215,
     216,    -1,    -1,   219,    -1,   221,    -1,    -1,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
      -1,   247,   248,   249,   250,   251,    -1,   253,   254,    -1,
     256,    -1,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,   269,   270,   271,    -1,    -1,   274,   275,
      -1,   277,    -1,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,    -1,   381,   382,   383,   384,   385,
      -1,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,   421,    -1,   423,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,    -1,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,    -1,    -1,    -1,
     167,   168,   169,   170,    -1,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,    -1,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,    -1,   212,   213,   214,   215,   216,
      -1,    -1,   219,    -1,   221,    -1,    -1,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,    -1,   253,   254,    -1,   256,
      -1,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,    -1,
     277,    -1,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,    -1,   381,   382,   383,   384,   385,    -1,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,   400,   401,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,   418,   419,    -1,   421,    -1,   423,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,    -1,   154,    -1,   156,   157,
     158,   159,    -1,   161,    -1,   163,    -1,    -1,    -1,   167,
     168,   169,   170,    -1,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,    -1,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
      -1,    -1,   210,    -1,   212,   213,   214,   215,   216,    -1,
      -1,   219,    -1,   221,    -1,    -1,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,    -1,   247,
     248,   249,   250,   251,    -1,   253,   254,    -1,   256,    -1,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
      -1,   269,   270,   271,    -1,    -1,   274,   275,    -1,   277,
      -1,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,    -1,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,   400,   401,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,   421,    -1,   423,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,    -1,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,    -1,    -1,    -1,   167,   168,
     169,   170,    -1,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,    -1,   221,    -1,    -1,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,    -1,   253,   254,    -1,   256,    -1,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,    -1,
     269,   270,   271,    -1,    -1,   274,   275,    -1,   277,    -1,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,    -1,   381,   382,   383,   384,   385,    -1,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,   400,   401,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,   418,
     419,    -1,   421,    -1,   423,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,    -1,   156,   157,   158,   159,
      -1,   161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,
     170,    -1,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,    -1,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,
     210,    -1,   212,   213,   214,   215,   216,    -1,    -1,   219,
      -1,   221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,    -1,   247,   248,   249,
     250,   251,    -1,   253,   254,    -1,   256,    -1,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,    -1,   269,
     270,   271,    -1,    -1,   274,   275,    -1,   277,    -1,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
      -1,   381,   382,   383,   384,   385,    -1,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,   421,    -1,   423,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,   170,
      -1,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,    -1,
     221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,    -1,   253,   254,    -1,   256,    -1,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,    -1,   269,   270,
     271,    -1,    -1,   274,   275,    -1,   277,    -1,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,    -1,
     381,   382,   383,   384,   385,    -1,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,   400,
     401,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
     421,    -1,   423,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,    -1,   154,    -1,   156,   157,   158,   159,    -1,   161,
      -1,   163,    -1,    -1,    -1,   167,   168,   169,   170,    -1,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,    -1,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,
     212,   213,   214,   215,   216,    -1,    -1,   219,    -1,   221,
      -1,    -1,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,    -1,   247,   248,   249,   250,   251,
      -1,   253,   254,    -1,   256,    -1,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,    -1,   269,   270,   271,
      -1,    -1,   274,   275,    -1,   277,    -1,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,    -1,   381,
     382,   383,   384,   385,    -1,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,   400,   401,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
      -1,   423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,    -1,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
      -1,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,    -1,    -1,    -1,   167,   168,   169,   170,    -1,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,    -1,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,    -1,
     253,   254,    -1,   256,    -1,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,
      -1,   274,   275,    -1,   277,    -1,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,    -1,   381,   382,
     383,   384,   385,    -1,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,   400,   401,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,   421,    -1,
     423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,    -1,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
      -1,    -1,    -1,   167,   168,   169,   170,    -1,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,    -1,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,
     214,   215,   216,    -1,    -1,   219,    -1,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,    -1,   247,   248,   249,   250,   251,    -1,   253,
     254,    -1,   256,    -1,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,
     274,   275,    -1,   277,    -1,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,    -1,   381,   382,   383,
     384,   385,    -1,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,   400,   401,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,   421,    -1,   423,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,    -1,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,    -1,
      -1,    -1,   167,   168,   169,   170,    -1,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,    -1,   221,    -1,    -1,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,    -1,   253,   254,
      -1,   256,    -1,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,
     275,    -1,   277,    -1,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,    -1,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,    -1,   381,   382,   383,   384,
     385,    -1,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,   400,   401,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,   419,    -1,   421,    -1,   423,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,    -1,   154,    -1,
     156,   157,   158,   159,    -1,   161,    -1,   163,    -1,    -1,
      -1,   167,   168,   169,   170,    -1,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
      -1,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,   215,
     216,    -1,    -1,   219,    -1,   221,    -1,    -1,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
      -1,   247,   248,   249,   250,   251,    -1,   253,   254,    -1,
     256,    -1,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,
      -1,   277,    -1,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,    -1,   381,   382,   383,   384,   385,
      -1,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,   421,    -1,   423,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,    -1,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,    -1,    -1,    -1,
     167,   168,   169,   170,    -1,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,    -1,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,    -1,   212,   213,   214,   215,   216,
      -1,    -1,   219,    -1,   221,    -1,    -1,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,    -1,   253,   254,    -1,   256,
      -1,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,    -1,
     277,    -1,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,    -1,   381,   382,   383,   384,   385,    -1,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,   400,   401,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,   418,   419,    -1,   421,    -1,   423,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,    -1,   154,    -1,   156,   157,
     158,   159,    -1,   161,    -1,   163,    -1,    -1,    -1,   167,
     168,   169,   170,    -1,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,    -1,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
      -1,    -1,   210,    -1,   212,   213,   214,   215,   216,    -1,
      -1,   219,    -1,   221,    -1,    -1,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,    -1,   247,
     248,   249,   250,   251,    -1,   253,   254,    -1,   256,    -1,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
      -1,   269,   270,   271,    -1,    -1,   274,   275,    -1,   277,
      -1,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,   379,    -1,   381,   382,   383,   384,   385,    -1,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,   400,   401,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,   421,    -1,   423,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,    -1,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,    -1,    -1,    -1,   167,   168,
     169,   170,    -1,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,    -1,   221,    -1,    -1,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,    -1,   253,   254,    -1,   256,    -1,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,    -1,
     269,   270,   271,    -1,    -1,   274,   275,    -1,   277,    -1,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,    -1,   381,   382,   383,   384,   385,    -1,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,   400,   401,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,   418,
     419,    -1,   421,    -1,   423,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,    -1,   156,   157,   158,   159,
      -1,   161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,
     170,    -1,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,    -1,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,
     210,    -1,   212,   213,   214,   215,   216,    -1,    -1,   219,
      -1,   221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,    -1,   247,   248,   249,
     250,   251,    -1,   253,   254,    -1,   256,    -1,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,    -1,   269,
     270,   271,    -1,    -1,   274,   275,    -1,   277,    -1,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
      -1,   381,   382,   383,   384,   385,    -1,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,   421,    -1,   423,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,   170,
      -1,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,    -1,
     221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,    -1,   253,   254,    -1,   256,    -1,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,    -1,   269,   270,
     271,    -1,    -1,   274,   275,    -1,   277,    -1,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,    -1,
     381,   382,   383,   384,   385,    -1,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,   400,
     401,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
     421,    -1,   423,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,    -1,   154,    -1,   156,   157,   158,   159,    -1,   161,
      -1,   163,    -1,    -1,    -1,   167,   168,   169,   170,    -1,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,    -1,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,
     212,   213,   214,   215,   216,    -1,    -1,   219,    -1,   221,
      -1,    -1,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,    -1,   247,   248,   249,   250,   251,
      -1,   253,   254,    -1,   256,    -1,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,    -1,   269,   270,   271,
      -1,    -1,   274,   275,    -1,   277,    -1,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,    -1,   381,
     382,   383,   384,   385,    -1,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,   400,   401,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
      -1,   423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,    -1,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
      -1,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,    -1,    -1,    -1,   167,   168,   169,   170,    -1,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,    -1,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,    -1,
     253,   254,    -1,   256,    -1,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,
      -1,   274,   275,    -1,   277,    -1,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,    -1,   381,   382,
     383,   384,   385,    -1,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,   400,   401,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,   421,    -1,
     423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,    -1,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
      -1,    -1,    -1,   167,   168,   169,   170,    -1,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,    -1,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,
     214,   215,   216,    -1,    -1,   219,    -1,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,    -1,   247,   248,   249,   250,   251,    -1,   253,
     254,    -1,   256,    -1,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,
     274,   275,    -1,   277,    -1,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,    -1,   381,   382,   383,
     384,   385,    -1,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,   400,   401,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,   421,    -1,   423,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      35,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,    -1,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,    -1,
      -1,    -1,   167,   168,   169,   170,    -1,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,    -1,   221,    -1,    -1,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,    -1,   253,   254,
      -1,   256,    -1,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,
     275,    -1,   277,    -1,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,    -1,    -1,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,    -1,   381,   382,   383,   384,
     385,    -1,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,   400,   401,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,   419,    -1,   421,    -1,   423,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,    -1,   154,    -1,
     156,   157,   158,   159,    -1,   161,    -1,   163,    -1,    -1,
      -1,   167,   168,   169,   170,    -1,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
      -1,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,   215,
     216,    -1,    -1,   219,    -1,   221,    -1,    -1,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
      -1,   247,   248,   249,   250,   251,    -1,   253,   254,    -1,
     256,    -1,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,
      -1,   277,    -1,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,    -1,   381,   382,   383,   384,   385,
      -1,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,   421,    -1,   423,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,    -1,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,    -1,    -1,    -1,
     167,   168,   169,   170,    -1,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,    -1,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,    -1,   212,   213,   214,   215,   216,
      -1,    -1,   219,    -1,   221,    -1,    -1,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,    -1,   253,   254,    -1,   256,
      -1,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,    -1,   269,   270,   271,    -1,    -1,   274,   275,    -1,
     277,    -1,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,    -1,   381,   382,   383,   384,   385,    -1,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,   400,   401,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,   418,   419,    -1,   421,    -1,   423,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,    -1,   154,    -1,   156,   157,
     158,   159,    -1,   161,    -1,   163,    -1,    -1,    -1,   167,
     168,   169,   170,    -1,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,    -1,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
      -1,    -1,   210,    -1,   212,   213,   214,   215,   216,    -1,
      -1,   219,    -1,   221,    -1,    -1,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,    -1,   247,
     248,   249,   250,   251,    -1,   253,   254,    -1,   256,    -1,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
      -1,   269,   270,   271,    -1,    -1,   274,   275,    -1,   277,
      -1,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,   379,    -1,   381,   382,   383,   384,   385,    -1,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,   400,   401,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,   421,    -1,   423,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,    -1,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,    -1,    -1,    -1,   167,   168,
     169,   170,    -1,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,    -1,   221,    -1,    -1,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,    -1,   253,   254,    -1,   256,    -1,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,    -1,
     269,   270,   271,    -1,    -1,   274,   275,    -1,   277,    -1,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,    -1,   381,   382,   383,   384,   385,    -1,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,   400,   401,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,   418,
     419,    -1,   421,    -1,   423,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,    -1,   156,   157,   158,   159,
      -1,   161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,
     170,    -1,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,    -1,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,
     210,    -1,   212,   213,   214,   215,   216,    -1,    -1,   219,
      -1,   221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,    -1,   247,   248,   249,
     250,   251,    -1,   253,   254,    -1,   256,    -1,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,    -1,   269,
     270,   271,    -1,    -1,   274,   275,    -1,   277,    -1,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
      -1,   381,   382,   383,   384,   385,    -1,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,   421,    -1,   423,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,   170,
      -1,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,    -1,
     221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,    -1,   253,   254,    -1,   256,    -1,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,    -1,   269,   270,
     271,    -1,    -1,   274,   275,    -1,   277,    -1,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,    -1,
     381,   382,   383,   384,   385,    -1,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,   400,
     401,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
     421,    -1,   423,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,    -1,   154,    -1,   156,   157,   158,   159,    -1,   161,
      -1,   163,    -1,    -1,    -1,   167,   168,   169,   170,    -1,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,    -1,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,
     212,   213,   214,   215,   216,    -1,    -1,   219,    -1,   221,
      -1,    -1,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,    -1,   247,   248,   249,   250,   251,
      -1,   253,   254,    -1,   256,    -1,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,    -1,   269,   270,   271,
      -1,    -1,   274,   275,    -1,   277,    -1,   279,   280,   281,
     282,   283,   284,   285,    -1,   287,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,    -1,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,    -1,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,    -1,   381,
     382,   383,   384,   385,    -1,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,   400,   401,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
      -1,   423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    -1,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,    -1,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,    -1,   148,   149,   150,   151,    -1,
      -1,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,   164,    -1,   166,   167,   168,   169,   170,    -1,   172,
      -1,    -1,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
      -1,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,    -1,    -1,
     253,   254,   255,   256,    -1,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,    -1,   269,   270,   271,    -1,
      -1,   274,    -1,   276,   277,   278,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,    -1,   290,   291,    -1,
     293,   294,    -1,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,    -1,    -1,   391,   392,
      -1,   394,    -1,    -1,   397,   398,   399,   400,   401,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   449,   450,   451,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    -1,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    -1,    -1,
      -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,    -1,
     148,   149,   150,   151,    -1,    -1,   154,    -1,   156,   157,
     158,   159,    -1,   161,    -1,   163,   164,    -1,   166,   167,
     168,   169,   170,    -1,   172,    -1,    -1,   175,    -1,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,    -1,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,    -1,   253,   254,   255,   256,    -1,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
      -1,   269,   270,   271,    -1,    -1,   274,    -1,   276,   277,
     278,    -1,   280,   281,   282,   283,   284,   285,   286,   287,
     288,    -1,   290,   291,    -1,   293,   294,    -1,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,    -1,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,    -1,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,    -1,    -1,   391,   392,    -1,   394,    -1,    -1,   397,
     398,   399,   400,   401,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   449,   450,   451
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    55,    67,    78,    89,
      91,   108,   122,   132,   138,   146,   148,   149,   186,   225,
     293,   296,   324,   332,   344,   351,   355,   365,   378,   413,
     418,   431,   454,   468,   476,   477,   478,   479,   490,   491,
     493,   497,   511,   512,   514,   516,   523,   525,   571,   577,
     578,   595,   596,   597,   598,   599,   600,   637,   756,   759,
     762,   769,   770,   771,   772,   773,   780,   784,   790,   792,
     797,   801,   802,   805,   806,   808,   809,   811,   391,   434,
     524,   190,   338,   345,   378,   424,   524,     3,    18,    19,
      20,    21,    22,    23,    24,    25,    27,    28,    29,    37,
      38,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    53,    54,    55,    56,    57,    58,    61,
      62,    63,    64,    65,    67,    68,    69,    70,    71,    73,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    85,
      86,    87,    88,    89,    90,    92,    93,    94,    95,    99,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   113,
     115,   116,   117,   118,   119,   120,   122,   123,   124,   125,
     126,   129,   130,   131,   132,   133,   135,   136,   137,   139,
     140,   141,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   154,   156,   157,   158,   159,   161,   163,   164,
     166,   167,   168,   169,   170,   172,   174,   175,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   188,   189,
     190,   191,   192,   193,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   205,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   219,   220,   221,   222,   224,   225,
     226,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   253,   254,   255,   256,   258,   259,
     260,   261,   262,   263,   265,   266,   269,   270,   271,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   345,   346,   347,   348,   349,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   376,   377,   379,   380,   381,   382,   383,
     384,   385,   387,   388,   391,   392,   393,   394,   395,   397,
     398,   399,   400,   401,   402,   403,   406,   407,   408,   409,
     410,   413,   414,   415,   416,   417,   418,   419,   421,   422,
     423,   424,   425,   426,   429,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   686,   743,   747,   749,   814,
     815,   816,   524,    49,   468,   590,   170,   226,   272,   338,
     382,   384,   405,   408,   569,   768,     3,    26,   296,   741,
     747,   814,    20,    73,    88,   141,   150,   162,   190,   235,
     291,   305,   336,   338,   345,   348,   367,   378,   385,   394,
     424,   572,   573,   576,   524,   741,    91,   422,   468,   493,
     577,   595,   776,   780,   797,   811,   106,   106,     5,   746,
     791,   747,   741,    26,   387,   391,   747,   803,   804,   807,
     524,    26,   127,   607,   608,   226,   338,   349,   387,   785,
     786,   807,   524,   268,   648,   739,   747,   166,   468,   794,
     468,   312,   601,   602,   741,   601,   596,   597,   600,     0,
     471,   117,   200,   410,   142,   204,   273,   404,   609,   610,
     596,   598,   599,   472,   422,   774,    26,   387,   391,   807,
     181,   739,   741,   181,   739,   181,   648,   181,   739,   468,
     466,   470,   730,   732,   493,   577,   595,   758,   797,   739,
     382,   384,   382,   384,   322,   181,   747,   312,   345,   378,
     424,   190,    26,   741,   237,   394,   105,   378,   424,   341,
     181,   574,   747,   750,   181,   740,   741,   181,   741,   468,
     515,   569,   776,     3,   418,   777,   779,   780,   782,   783,
     814,   815,   816,   774,   746,   746,   457,   468,   468,   757,
     451,   210,   470,   267,     4,     6,     7,     8,     9,    10,
      48,    50,    51,    59,    60,    63,    64,    71,    73,    96,
      97,    98,    99,   100,   101,   102,   109,   110,   112,   131,
     147,   152,   153,   158,   202,   203,   205,   227,   228,   245,
     247,   252,   257,   258,   260,   269,   279,   292,   309,   334,
     350,   359,   374,   387,   388,   393,   395,   396,   411,   419,
     452,   459,   460,   461,   468,   473,   596,   663,   666,   669,
     670,   671,   673,   674,   675,   676,   678,   679,   683,   685,
     686,   687,   689,   702,   706,   724,   729,   736,   737,   743,
     744,   745,   746,   747,   735,   736,   785,   746,   785,   451,
     165,   389,   457,   468,   739,   461,   732,     3,   164,   166,
     422,   780,   793,   795,   164,   796,   683,   710,   601,   472,
     468,   752,   469,   469,   478,   165,   206,   648,   798,    26,
     127,   606,   606,    53,   606,   155,   160,   223,   264,   615,
     617,   618,   630,   632,   633,   634,   609,   610,   468,   739,
     451,   210,   147,    22,    28,   132,   271,   320,   324,   351,
     415,   484,   487,   488,   320,   147,    35,    54,   104,   189,
     236,   239,   250,   281,   320,   325,   345,   351,   365,   487,
     517,   520,   147,   320,   351,   487,   147,   320,   351,   487,
      26,   127,   420,   461,   469,   683,   711,   712,   749,   753,
     683,   731,     3,    26,    30,    31,    32,    33,    34,    35,
      36,    39,    52,    59,    60,    66,    72,    74,    84,    91,
      96,    97,    98,   100,   101,   102,   112,   114,   121,   127,
     128,   134,   138,   142,   153,   155,   160,   162,   165,   171,
     173,   176,   187,   194,   204,   206,   217,   218,   223,   227,
     228,   252,   257,   264,   267,   268,   272,   273,   289,   299,
     314,   327,   344,   350,   361,   375,   378,   386,   389,   390,
     396,   404,   405,   411,   412,   420,   427,   428,   430,   431,
     461,   742,   754,   814,   815,   816,   817,   730,   469,   468,
     559,   569,   252,   760,   424,   181,   739,   181,   739,   813,
     739,    80,   765,   435,    81,   124,   284,   383,   147,    57,
     326,   472,   575,   470,   751,   147,   472,   575,   147,   267,
     710,   378,   469,   472,     4,   153,   267,   396,   459,   460,
     519,   522,   745,   746,   775,   777,   778,   781,   776,   468,
     585,   589,   519,   781,   787,   789,   711,     3,    48,    50,
      51,    63,    64,   109,   110,   158,   202,   203,   205,   245,
     247,   260,   309,   352,   359,   387,   388,   419,   660,   662,
     664,   666,   668,   670,   671,   672,   674,   675,   678,   679,
     713,   749,   814,    35,   221,   747,   468,   733,   421,   677,
     683,   728,   468,   677,   677,   468,   160,   468,   468,   468,
     665,   665,   295,   596,   468,   468,   667,   468,   468,    63,
      64,   677,   683,   468,   665,   468,   468,   468,   468,   468,
     433,   454,   468,   680,   468,   680,   468,   468,   683,   683,
     683,   596,   683,   710,   733,   732,   746,   468,   468,   746,
       3,     8,    11,    15,    16,    17,    32,    35,    40,    47,
      72,   182,   187,   208,   209,   222,   252,   255,   269,   272,
     356,   452,   455,   456,   457,   459,   460,   461,   462,   463,
     464,   704,   705,   706,   708,   432,   690,   278,   683,   206,
     472,   603,   468,   746,   732,   603,     3,   112,   226,   519,
     679,   746,   788,    95,   112,   789,   112,   789,   739,   469,
     472,   774,   469,   472,   602,   740,    35,   798,   495,   739,
      35,   747,   351,   598,   598,   611,   612,   683,   598,   157,
     249,   624,   212,   250,   308,   354,   410,    26,   619,   683,
     459,   460,   620,   621,   683,   685,   630,   631,   618,   617,
     615,   616,   160,   633,   262,   635,   615,   630,   710,   752,
     221,   739,    66,    74,    84,   162,   181,   299,   405,   540,
     550,   565,   747,    74,    84,   492,    84,   492,   468,   389,
     468,   538,   232,   408,   538,    84,   472,   389,   739,   662,
     519,    53,   521,   519,   519,   104,   236,   239,    53,   389,
     431,   454,   518,   243,   338,   518,   520,   648,    84,   389,
     492,   338,   739,   389,   338,   711,   711,   712,   469,   472,
     609,   610,    13,    14,   467,   474,   389,   558,   563,   747,
     431,   588,   312,   424,   147,    91,   512,   525,   761,   762,
     809,   739,   252,   513,   517,   252,   468,   559,    35,   559,
     181,   553,   747,   766,   574,   750,   742,   470,   740,   741,
     741,   750,   469,   181,   739,   813,   776,   782,     4,   745,
       4,   745,   587,   594,   754,    49,    93,   118,   136,   140,
     161,   164,   177,   257,   265,   306,   591,   472,   469,   472,
     662,    34,   661,   107,   179,   238,   241,   342,   449,   468,
     681,   682,   469,   472,   665,   751,   758,   710,   730,   468,
     427,   725,   726,   683,   710,   468,   745,   745,   710,     3,
     107,   179,   238,   241,   342,   449,   714,   715,   746,   745,
     745,   745,   677,   677,   683,     8,    15,    16,    17,   455,
     456,   457,   459,   460,   461,   462,   463,   464,   704,   709,
     747,   683,   716,   459,   460,   468,   684,   685,   706,   718,
     469,   710,   683,   710,   719,   387,   387,   745,   745,   683,
      52,   165,   218,   390,   683,   710,   722,   469,   472,   745,
     473,   745,   681,   660,   683,   683,   683,   683,     5,   754,
     755,   387,    39,   375,   734,   750,   683,   468,   596,   723,
     127,   153,   252,   257,   262,   396,   406,   683,   257,   468,
     683,   389,    47,   182,   187,   222,   356,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   683,    26,    33,   361,
     703,   173,   156,   691,   334,   468,   702,   170,   226,   378,
     382,   384,   408,   604,   739,   737,   165,   638,   711,   638,
     468,   746,   469,   739,   793,   739,   801,   683,   469,   468,
     412,   800,   112,   280,   468,   494,   595,    35,   747,   468,
     499,   508,   510,   747,   472,    36,   121,   412,   613,   334,
     335,   459,   460,   621,   623,   685,   354,   212,   268,   472,
       4,   622,   745,   622,   334,   335,   623,   738,   739,   256,
     358,   636,   631,   616,   469,   320,   487,   468,   181,   550,
     741,   212,   252,   212,   412,   468,   543,   660,   741,   747,
     181,   741,   181,   747,    22,   132,   351,   483,   486,   533,
     548,   754,   741,   542,   562,   754,   741,   484,   741,   320,
     351,   487,   517,   519,   750,   741,   519,   750,   741,   519,
     320,   351,   487,   741,   741,   741,   741,   320,   351,   487,
     741,   741,   609,   609,   609,   420,   712,   469,   683,   683,
     683,   731,   304,   584,   469,   472,   265,   165,   389,   579,
     424,   739,   747,   569,   468,   147,   147,   222,   540,   550,
     554,   557,   566,   568,   747,   431,   433,   545,   146,   595,
     431,   767,   252,   267,   575,   742,   575,   267,   575,   252,
      35,   469,   472,   461,   468,   519,   586,   781,    35,   583,
     746,   583,   252,   257,   306,   583,   583,   787,    34,   661,
     466,   466,   389,   389,   389,   468,   389,   745,   660,   665,
     469,   710,   683,   134,   726,   727,    35,   469,   683,   469,
     469,   469,   469,   165,   469,   469,   469,   472,   469,   470,
     289,   717,   469,   684,   684,   683,    11,    15,    16,    17,
     187,   208,   269,   455,   456,   457,   459,   460,   461,   462,
     463,   464,   706,   684,   469,   469,   160,   165,   720,   721,
     469,   451,   451,   469,   469,    35,   722,   710,   722,   722,
     165,   469,   733,   683,   469,   469,   469,   451,   684,   684,
     140,   710,   165,   127,   153,   257,   262,   396,   406,   468,
     140,   709,   683,   375,   734,   683,   723,   683,   389,   468,
     596,   468,   468,   277,   695,   382,   384,   382,   384,   739,
     378,   605,   605,   605,   217,   335,   468,   596,   639,   640,
     641,   648,   651,   686,   688,   689,   747,   428,   656,   609,
     656,   745,   681,   752,   758,   639,   428,   799,   418,   377,
     411,   503,   498,   507,   747,   267,   500,   747,   504,   510,
     472,   638,   457,   733,   612,   269,   704,   707,   453,   614,
       4,   745,   623,   268,   410,   620,   472,   231,   389,   683,
     252,   565,   468,   147,   468,   543,   190,   563,   526,   271,
     536,   526,    22,   132,   324,   325,   351,   480,   481,   482,
     488,   489,   147,   575,   147,   575,   533,   548,   533,   469,
     472,   529,   746,   469,   472,   457,   470,   389,   338,    84,
     389,   492,   338,   389,   389,   389,   338,   469,   469,   469,
     712,   467,   368,   369,   593,   746,   558,   584,   739,   559,
     760,   378,   563,   739,   739,   813,   739,   469,   472,   265,
     538,   265,   267,   537,   741,   431,   812,   538,    35,   147,
     739,   750,   147,   587,   581,   592,   781,   746,   746,   257,
     563,   461,   563,   746,   746,   466,   745,   467,   745,   179,
     238,   682,   238,   682,   682,   745,   241,   469,   469,   386,
     683,   138,   660,   469,   683,   683,   709,   683,   720,   660,
     684,   684,   684,   684,   127,   252,   262,   684,   684,   684,
     684,   684,   684,   684,   684,   684,   684,   683,   683,   721,
     720,   680,   680,   660,   469,   469,   469,   710,   469,   473,
     746,   683,    32,    32,   683,   469,   683,   165,   468,   713,
     683,   469,   140,   684,   684,   140,   140,   683,   683,   610,
     428,   468,   696,   747,   605,   605,   605,   605,   739,   739,
     739,   596,   651,   165,   596,   640,   641,    35,   642,   643,
     747,   472,    92,   166,   196,   211,   220,   246,   330,   645,
     643,    35,   642,   644,   747,   454,   655,   732,   683,   173,
     625,   469,   625,   469,   469,   683,   327,   502,   417,   469,
     472,   733,    82,   502,   469,   472,   499,   799,   683,   468,
     614,   157,   216,   268,   739,   741,   469,   147,   563,   550,
     563,   526,   553,   469,   114,   194,   250,   252,   549,   468,
     560,   169,   112,   180,   252,   538,   518,   105,   112,   169,
     252,   367,   370,   520,   538,   351,   482,   399,   741,   747,
     486,   562,   251,   269,   352,   459,   460,   519,   527,   564,
     660,   707,   746,   749,   817,   754,   741,   741,   741,   741,
     741,   741,   741,   741,   741,   741,   609,   518,   593,   468,
     767,   181,   739,   469,   513,   468,    35,   547,   545,   554,
      78,   515,   105,   250,   595,   553,   412,   764,   575,   813,
     469,   472,   563,   745,   467,   467,   469,   683,   469,   469,
     721,   165,   127,   262,   468,   469,   681,   683,   683,   683,
     713,   469,   683,    32,    32,   683,   683,   140,   469,   469,
     683,   697,   747,   739,   739,   739,   739,   643,   644,   468,
     469,     5,   747,   748,   468,   640,   211,   276,   646,   640,
     646,   211,   645,   646,   211,   380,   649,   468,   747,   468,
     274,    53,   176,   629,   746,   629,   746,   736,   595,   280,
     595,   498,   267,   468,   496,   457,   510,   502,   709,   526,
     550,   469,   469,   431,   556,   115,   183,   192,   114,   414,
     533,   551,    66,    72,    84,   112,   114,   169,   194,   252,
     257,   299,   314,   405,   531,   532,   544,    29,    53,   570,
     181,   257,   519,   683,   570,   257,   459,   460,   522,   747,
     660,   575,   575,   749,   751,   457,   389,   389,   469,   585,
     412,   580,   582,   563,    35,   252,   468,   767,   557,   146,
     595,   144,   188,   537,   117,   132,   298,   812,   105,   431,
     810,   267,   747,   763,   468,    35,   592,   467,   684,   165,
     468,   713,   469,   683,   683,   683,   469,   286,   698,   652,
     653,   688,   642,   468,   740,   640,   267,   412,   647,   640,
     211,   640,   743,   657,   658,   747,   468,   657,   747,   468,
     626,   627,   628,   683,   683,   430,   692,   692,   503,    84,
     468,   501,   509,   688,   747,   128,   683,   469,   314,   556,
     468,   546,   526,   469,   472,   468,   750,   741,   684,   570,
     115,   183,   114,   257,   212,   739,   556,   112,    35,   147,
      72,   659,   751,   463,   527,   741,   741,   518,   119,   469,
     595,   147,    35,   469,   741,   812,    26,    77,    85,   113,
     180,   191,   367,   370,   541,   541,   335,   335,    58,    66,
     226,   739,   509,   684,   713,   469,    53,   609,   469,   472,
      35,   654,   740,   469,   683,   468,   640,   647,   468,   469,
     472,   660,   657,   469,   469,   472,   693,   694,   747,   417,
     741,   683,   469,   472,    72,   505,   505,   253,   410,   739,
     526,   552,   555,   754,   533,   683,   252,   532,    35,   556,
     559,   180,   750,   412,   485,   463,   399,   585,   746,   767,
     810,   739,   595,   545,   515,    66,   270,    66,   764,   469,
     469,   710,   307,   335,   699,   655,   652,   468,   469,   740,
     710,   658,   659,   469,   627,   472,    35,   595,   469,   656,
     501,   750,   506,   750,   506,   351,   559,   469,   472,   457,
     469,   180,   234,   567,   468,   528,   683,   399,    35,   468,
     810,   537,   812,   270,   270,   468,   767,    47,    95,   401,
     683,   700,   701,   700,   469,   657,   469,   469,   694,   696,
     505,   613,   613,   508,   567,   555,   527,   250,   539,   528,
     166,   285,   357,   267,   534,   535,   561,   517,   595,   509,
     656,   701,   334,   159,   294,   159,   294,   469,   321,   650,
     506,   614,   614,   656,   535,   192,   117,   410,   267,   561,
     267,   534,   469,   810,   469,    32,   468,   613,   526,    57,
     250,   326,   351,   530,   530,   767,   701,   683,   614,    21,
     112,   257,   656,   469
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 453 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 469 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 481 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 37:
#line 522 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 38:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 39:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 47:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 48:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 49:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 50:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 51:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 52:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 53:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 55:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 56:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 57:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 85:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 86:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 87:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 88:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 89:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 90:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 91:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 92:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 93:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 94:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 95:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 96:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 97:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 114:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 115:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 116:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 117:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 118:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 120:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 121:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 122:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 123:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 124:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 125:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 126:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 127:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 128:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 129:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 130:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 131:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 132:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 133:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 134:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 135:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 137:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 138:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 139:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 140:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 141:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 142:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 143:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 144:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 145:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 146:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 147:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 148:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 149:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 150:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 151:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 152:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 153:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 154:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 155:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 160:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 161:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 162:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 163:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 165:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 166:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 169:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 170:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 171:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 174:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 175:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 176:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 177:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 178:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 180:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 181:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 182:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 183:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 187:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 190:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 191:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 192:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 194:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 195:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 197:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 203:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 206:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 208:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 209:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 210:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 211:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 212:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 213:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 214:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 215:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 216:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 217:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 218:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 219:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 220:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 221:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 222:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 223:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 224:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 225:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 227:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 228:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 236:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 237:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 238:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 239:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 240:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 242:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 243:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 244:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 245:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 246:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 247:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 248:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 249:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 250:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 251:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 252:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 253:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 254:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 255:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 256:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 257:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 258:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 259:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 260:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 261:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 262:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 263:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 264:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 265:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 269:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 270:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 272:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 273:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 274:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 276:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 277:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 278:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 279:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 280:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 281:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 282:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 283:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 284:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 285:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 286:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 287:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 288:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 289:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 290:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 293:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 294:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 295:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 296:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 297:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 298:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 299:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 300:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 301:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 302:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 303:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 304:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 305:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 306:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 307:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 308:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 309:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 310:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 311:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 312:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 313:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 314:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 320:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 321:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 322:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 323:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 324:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 326:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 327:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 331:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 333:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 334:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 335:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 336:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 337:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 341:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 343:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 344:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 345:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 346:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 347:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 348:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 349:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 350:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 351:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 352:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 353:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 354:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 355:
#line 90 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 356:
#line 91 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 357:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 358:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 359:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 360:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 361:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 362:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 363:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 364:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 365:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 366:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 367:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 368:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 369:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 370:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 371:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 372:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 373:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 374:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 375:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 376:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 377:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 378:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 379:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 380:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 381:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 382:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 383:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 384:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 385:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 386:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 387:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 388:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 389:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 390:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 391:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 392:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 393:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 394:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 395:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 396:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 397:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 398:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 399:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 400:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 401:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 402:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 403:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 404:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 405:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 407:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 408:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 409:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 410:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 411:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 413:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 414:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 415:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 416:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 417:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 418:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 421:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 422:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 423:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 424:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 425:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 426:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 427:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 428:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 429:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 430:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 431:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 433:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 434:
#line 172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (9)].list);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 435:
#line 184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 436:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 437:
#line 205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 438:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 439:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 440:
#line 230 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 441:
#line 237 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 442:
#line 244 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 443:
#line 253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 444:
#line 254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 445:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 446:
#line 270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 447:
#line 280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 448:
#line 289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 449:
#line 294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 450:
#line 299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 451:
#line 304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 452:
#line 309 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 453:
#line 317 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 454:
#line 325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 455:
#line 330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 456:
#line 335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 457:
#line 341 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 458:
#line 342 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 459:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 460:
#line 347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 461:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 462:
#line 355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 463:
#line 356 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 464:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 465:
#line 361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 466:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 467:
#line 366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 468:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 469:
#line 374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 470:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 471:
#line 379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 472:
#line 388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 473:
#line 398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 474:
#line 399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 475:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 476:
#line 403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 477:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 478:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 479:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 480:
#line 410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 481:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 482:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 483:
#line 416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 484:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 485:
#line 422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 486:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 487:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 488:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 489:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 490:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 491:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 492:
#line 456 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 493:
#line 463 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 494:
#line 483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 495:
#line 485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 496:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 497:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 498:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 499:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 500:
#line 497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 501:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 502:
#line 501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 503:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 504:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 505:
#line 531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 506:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 507:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 508:
#line 537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 509:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 510:
#line 554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 511:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 512:
#line 559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 513:
#line 560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 514:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 515:
#line 565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 516:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 517:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 518:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 519:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 520:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 521:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 522:
#line 588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 523:
#line 592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 524:
#line 593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 525:
#line 598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 526:
#line 599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 527:
#line 600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 528:
#line 610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 529:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 530:
#line 633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 531:
#line 634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 532:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 533:
#line 639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 534:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].range);
				;}
    break;

  case 535:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = (PGRangeTableSample *) (yyvsp[(3) - (3)].node);
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					/* relation_expr goes inside the PGRangeTableSample node */
					n->relation = (PGNode *) (yyvsp[(1) - (3)].range);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 536:
#line 659 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (2)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (2)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (2)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 537:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 538:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (2)].node);
					n->alias = (yyvsp[(2) - (2)].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (2)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (2)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (2)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 539:
#line 709 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 540:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 541:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 542:
#line 764 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 543:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					(yyval.jexpr) = n;
				;}
    break;

  case 544:
#line 780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 545:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 546:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 547:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 548:
#line 833 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 549:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 550:
#line 844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 551:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 552:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 553:
#line 857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 554:
#line 866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 555:
#line 870 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 556:
#line 874 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 557:
#line 880 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 558:
#line 886 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 559:
#line 891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 560:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 561:
#line 893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 562:
#line 894 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 563:
#line 898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 564:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 565:
#line 911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 566:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 567:
#line 918 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 568:
#line 925 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 569:
#line 932 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 570:
#line 939 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 571:
#line 962 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = makeNode(PGRangeTableSample);
					/* n->relation will be filled in later */
					n->method = (yyvsp[(2) - (6)].list);
					n->args = (yyvsp[(4) - (6)].list);
					n->repeatable = (yyvsp[(6) - (6)].node);
					n->location = (yylsp[(2) - (6)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 572:
#line 974 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].node); ;}
    break;

  case 573:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 574:
#line 991 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 575:
#line 1001 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 576:
#line 1013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 577:
#line 1017 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 578:
#line 1018 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 579:
#line 1021 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 580:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 581:
#line 1025 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 582:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 583:
#line 1031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 584:
#line 1032 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 585:
#line 1038 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 586:
#line 1042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 587:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 588:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 589:
#line 1076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 590:
#line 1089 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 591:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 592:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 593:
#line 1106 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 594:
#line 1112 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 595:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 596:
#line 1126 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 597:
#line 1128 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 598:
#line 1130 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 599:
#line 1134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 600:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 601:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 602:
#line 1137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 603:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 604:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 605:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 606:
#line 1164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 607:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 608:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 609:
#line 1167 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 610:
#line 1179 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 611:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 612:
#line 1192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 613:
#line 1193 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 614:
#line 1200 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 615:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 616:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 617:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 618:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 619:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 620:
#line 1230 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 621:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 622:
#line 1241 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 623:
#line 1247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 624:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 625:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 626:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 627:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 628:
#line 1295 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 629:
#line 1303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 630:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 631:
#line 1315 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 632:
#line 1327 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 633:
#line 1348 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 634:
#line 1352 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 635:
#line 1358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 636:
#line 1362 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 637:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 638:
#line 1383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 639:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 640:
#line 1395 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 641:
#line 1397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 642:
#line 1399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 643:
#line 1401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 644:
#line 1403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 645:
#line 1407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 646:
#line 1408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 647:
#line 1416 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 648:
#line 1425 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 649:
#line 1433 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 650:
#line 1442 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 651:
#line 1453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 652:
#line 1460 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 653:
#line 1461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 654:
#line 1462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 655:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 656:
#line 1469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 657:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 658:
#line 1473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 659:
#line 1475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 660:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 661:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 662:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 663:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 664:
#line 1495 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 665:
#line 1503 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 666:
#line 1508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 667:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 668:
#line 1521 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 669:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 670:
#line 1530 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 671:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 672:
#line 1567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 673:
#line 1569 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 674:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 675:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 676:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 677:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 678:
#line 1598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 679:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 680:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 681:
#line 1604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 682:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 683:
#line 1608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 684:
#line 1610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 685:
#line 1612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 686:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 687:
#line 1616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 688:
#line 1618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 689:
#line 1621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 690:
#line 1623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 691:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 692:
#line 1628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 693:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 694:
#line 1632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 695:
#line 1634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 696:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 697:
#line 1642 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 698:
#line 1649 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 699:
#line 1654 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 700:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 701:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 702:
#line 1674 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 703:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 704:
#line 1688 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 705:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 706:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 707:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 708:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 709:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 710:
#line 1746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 711:
#line 1754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 712:
#line 1762 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 713:
#line 1770 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 714:
#line 1786 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 715:
#line 1794 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 716:
#line 1802 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 717:
#line 1810 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 718:
#line 1818 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 719:
#line 1826 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 720:
#line 1834 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 721:
#line 1838 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 722:
#line 1842 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 723:
#line 1846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 724:
#line 1850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 725:
#line 1858 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 726:
#line 1866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 727:
#line 1874 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 728:
#line 1882 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 729:
#line 1902 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 730:
#line 1924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 731:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 732:
#line 1942 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 733:
#line 1967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 734:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 735:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 736:
#line 1973 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 737:
#line 1975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 1981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 1983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 742:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 748:
#line 1997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 749:
#line 1999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 750:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 751:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 752:
#line 2005 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 753:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 754:
#line 2013 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 755:
#line 2017 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 756:
#line 2030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 757:
#line 2031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 758:
#line 2033 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 759:
#line 2045 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 760:
#line 2060 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 761:
#line 2072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 762:
#line 2074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 763:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 764:
#line 2087 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 765:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 766:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 767:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 768:
#line 2134 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 769:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 770:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 771:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 772:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 773:
#line 2193 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 774:
#line 2228 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 775:
#line 2238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 776:
#line 2239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 777:
#line 2247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 778:
#line 2253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 779:
#line 2257 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 780:
#line 2261 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 781:
#line 2265 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 782:
#line 2269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 783:
#line 2273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 784:
#line 2277 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 785:
#line 2281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 786:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 787:
#line 2289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 788:
#line 2293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 789:
#line 2297 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 790:
#line 2301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 791:
#line 2305 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 792:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 793:
#line 2313 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 794:
#line 2315 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 795:
#line 2319 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 796:
#line 2328 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 797:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 798:
#line 2340 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 799:
#line 2355 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 800:
#line 2362 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 801:
#line 2366 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 802:
#line 2370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 803:
#line 2374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 804:
#line 2378 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 805:
#line 2391 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 806:
#line 2392 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 807:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 808:
#line 2397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 809:
#line 2405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 810:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 811:
#line 2410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 812:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 813:
#line 2417 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 814:
#line 2425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 815:
#line 2427 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 816:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 817:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 818:
#line 2470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 819:
#line 2471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 820:
#line 2474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 821:
#line 2475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 822:
#line 2487 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 823:
#line 2505 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 824:
#line 2511 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 825:
#line 2521 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 826:
#line 2538 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 827:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 828:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 829:
#line 2599 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 830:
#line 2607 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 831:
#line 2615 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 832:
#line 2635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 833:
#line 2636 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 834:
#line 2637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 835:
#line 2640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 836:
#line 2641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 837:
#line 2642 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 838:
#line 2645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 839:
#line 2646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 840:
#line 2649 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 841:
#line 2650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 842:
#line 2651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 843:
#line 2652 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 844:
#line 2653 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 845:
#line 2654 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 846:
#line 2655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 847:
#line 2656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 848:
#line 2657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 849:
#line 2658 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 850:
#line 2659 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 851:
#line 2660 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 852:
#line 2664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 853:
#line 2666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 854:
#line 2671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 855:
#line 2673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 856:
#line 2678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 857:
#line 2680 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 858:
#line 2682 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 859:
#line 2684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 860:
#line 2686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 861:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 862:
#line 2702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 863:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 864:
#line 2708 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 865:
#line 2712 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 866:
#line 2719 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 867:
#line 2723 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 868:
#line 2729 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 869:
#line 2733 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 870:
#line 2742 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 871:
#line 2752 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 872:
#line 2753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 873:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 874:
#line 2761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 875:
#line 2768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 876:
#line 2769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 877:
#line 2770 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 878:
#line 2771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 879:
#line 2772 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 880:
#line 2773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 881:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 882:
#line 2775 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 883:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 884:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 885:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 886:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 887:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 888:
#line 2821 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 889:
#line 2825 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 890:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 891:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 892:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 893:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 894:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 895:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 896:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 897:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 898:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 899:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 900:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 901:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 902:
#line 2899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 903:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 904:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 905:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 906:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 907:
#line 2919 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 908:
#line 2920 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 909:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 910:
#line 2928 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 911:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 912:
#line 2939 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 913:
#line 2943 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 914:
#line 2951 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 915:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 916:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 917:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 918:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 919:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 920:
#line 2972 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 923:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 924:
#line 2987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 925:
#line 2991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 926:
#line 2992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 927:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 928:
#line 3012 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 929:
#line 3020 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 930:
#line 3028 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 931:
#line 3049 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 932:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 933:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 934:
#line 3066 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 935:
#line 3093 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 936:
#line 3095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 937:
#line 3099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 938:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 939:
#line 3112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 940:
#line 3114 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 941:
#line 3125 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 942:
#line 3129 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 943:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 944:
#line 3137 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 945:
#line 3141 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 946:
#line 3150 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 947:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 948:
#line 3189 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 949:
#line 3193 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 950:
#line 3199 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 951:
#line 3207 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (6)].typnam);
					if ((yyvsp[(6) - (6)].list) != NIL)
					{
						t->typmods = lappend((yyvsp[(6) - (6)].list), makeParamRef(0, (yylsp[(3) - (6)])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeParamRef(0, (yylsp[(3) - (6)])));
					(yyval.node) = makeParamRefCast(0, (yylsp[(5) - (6)]), t);
				;}
    break;

  case 952:
#line 3219 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 953:
#line 3223 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 954:
#line 3227 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 955:
#line 3232 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 956:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 957:
#line 3249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 958:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 959:
#line 3251 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 960:
#line 3254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 961:
#line 3255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 962:
#line 3260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 963:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 964:
#line 3262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 965:
#line 3265 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 966:
#line 3266 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 967:
#line 3270 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 968:
#line 3272 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 969:
#line 3276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 970:
#line 3277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 972:
#line 3288 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 973:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 974:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 975:
#line 3291 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 976:
#line 3292 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 977:
#line 3295 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 978:
#line 3296 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 979:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 980:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 981:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 986:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 987:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 988:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 989:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 994:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 995:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 996:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 997:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 998:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 999:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1000:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1001:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1002:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1003:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1004:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1005:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1006:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1007:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1008:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1009:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1010:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1011:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1012:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1013:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1014:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1015:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1016:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1017:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1018:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1019:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1020:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1021:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1022:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1023:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1024:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1030:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1031:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1032:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1033:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1034:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1035:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1036:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1037:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1038:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1039:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1040:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1041:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1042:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1043:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1044:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1045:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1046:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1047:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1048:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1049:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1050:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1051:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1052:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1053:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1054:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1055:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1056:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1057:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1058:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1059:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1060:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1061:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1062:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1063:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1064:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1065:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1066:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1067:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1068:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1069:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1070:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1071:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1072:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1073:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1074:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1075:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1076:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1077:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1078:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1079:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1080:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1081:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1082:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1083:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1084:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1085:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1086:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1087:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1088:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1089:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1090:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1091:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1092:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1093:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1094:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1095:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1096:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1097:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1098:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1099:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1100:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1101:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1102:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1103:
#line 4 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1104:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1105:
#line 16 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1106:
#line 22 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1109:
#line 31 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1110:
#line 33 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1111:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1112:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1113:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1114:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1115:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1116:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1117:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1118:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1119:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1120:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1121:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1122:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1123:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1124:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1125:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22023 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}
} // namespace duckdb_libpgquery
