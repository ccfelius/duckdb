/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     COMPRESSION = 336,
     CONCURRENTLY = 337,
     CONFIGURATION = 338,
     CONFLICT = 339,
     CONNECTION = 340,
     CONSTRAINT = 341,
     CONSTRAINTS = 342,
     CONTENT_P = 343,
     CONTINUE_P = 344,
     CONVERSION_P = 345,
     COPY = 346,
     COST = 347,
     CREATE_P = 348,
     CROSS = 349,
     CSV = 350,
     CUBE = 351,
     CURRENT_P = 352,
     CURRENT_CATALOG = 353,
     CURRENT_DATE = 354,
     CURRENT_ROLE = 355,
     CURRENT_SCHEMA = 356,
     CURRENT_TIME = 357,
     CURRENT_TIMESTAMP = 358,
     CURRENT_USER = 359,
     CURSOR = 360,
     CYCLE = 361,
     DATA_P = 362,
     DATABASE = 363,
     DAY_P = 364,
     DAYS_P = 365,
     DEALLOCATE = 366,
     DEC = 367,
     DECIMAL_P = 368,
     DECLARE = 369,
     DEFAULT = 370,
     DEFAULTS = 371,
     DEFERRABLE = 372,
     DEFERRED = 373,
     DEFINER = 374,
     DELETE_P = 375,
     DELIMITER = 376,
     DELIMITERS = 377,
     DEPENDS = 378,
     DESC_P = 379,
     DESCRIBE = 380,
     DETACH = 381,
     DICTIONARY = 382,
     DISABLE_P = 383,
     DISCARD = 384,
     DISTINCT = 385,
     DO = 386,
     DOCUMENT_P = 387,
     DOMAIN_P = 388,
     DOUBLE_P = 389,
     DROP = 390,
     EACH = 391,
     ELSE = 392,
     ENABLE_P = 393,
     ENCODING = 394,
     ENCRYPTED = 395,
     END_P = 396,
     ENUM_P = 397,
     ESCAPE = 398,
     EVENT = 399,
     EXCEPT = 400,
     EXCLUDE = 401,
     EXCLUDING = 402,
     EXCLUSIVE = 403,
     EXECUTE = 404,
     EXISTS = 405,
     EXPLAIN = 406,
     EXPORT_P = 407,
     EXTENSION = 408,
     EXTERNAL = 409,
     EXTRACT = 410,
     FALSE_P = 411,
     FAMILY = 412,
     FETCH = 413,
     FILTER = 414,
     FIRST_P = 415,
     FLOAT_P = 416,
     FOLLOWING = 417,
     FOR = 418,
     FORCE = 419,
     FOREIGN = 420,
     FORWARD = 421,
     FREEZE = 422,
     FROM = 423,
     FULL = 424,
     FUNCTION = 425,
     FUNCTIONS = 426,
     GENERATED = 427,
     GLOB = 428,
     GLOBAL = 429,
     GRANT = 430,
     GRANTED = 431,
     GROUP_P = 432,
     GROUPING = 433,
     GROUPING_ID = 434,
     HANDLER = 435,
     HAVING = 436,
     HEADER_P = 437,
     HOLD = 438,
     HOUR_P = 439,
     HOURS_P = 440,
     IDENTITY_P = 441,
     IF_P = 442,
     IGNORE = 443,
     ILIKE = 444,
     IMMEDIATE = 445,
     IMMUTABLE = 446,
     IMPLICIT_P = 447,
     IMPORT_P = 448,
     IN_P = 449,
     INCLUDING = 450,
     INCREMENT = 451,
     INDEX = 452,
     INDEXES = 453,
     INHERIT = 454,
     INHERITS = 455,
     INITIALLY = 456,
     INLINE_P = 457,
     INNER_P = 458,
     INOUT = 459,
     INPUT_P = 460,
     INSENSITIVE = 461,
     INSERT = 462,
     INSTEAD = 463,
     INT_P = 464,
     INTEGER = 465,
     INTERSECT = 466,
     INTERVAL = 467,
     INTO = 468,
     INVOKER = 469,
     IS = 470,
     ISNULL = 471,
     ISOLATION = 472,
     JOIN = 473,
     KEY = 474,
     LABEL = 475,
     LANGUAGE = 476,
     LARGE_P = 477,
     LAST_P = 478,
     LATERAL_P = 479,
     LEADING = 480,
     LEAKPROOF = 481,
     LEFT = 482,
     LEVEL = 483,
     LIKE = 484,
     LIMIT = 485,
     LISTEN = 486,
     LOAD = 487,
     LOCAL = 488,
     LOCALTIME = 489,
     LOCALTIMESTAMP = 490,
     LOCATION = 491,
     LOCK_P = 492,
     LOCKED = 493,
     LOGGED = 494,
     MACRO = 495,
     MAP = 496,
     MAPPING = 497,
     MATCH = 498,
     MATERIALIZED = 499,
     MAXVALUE = 500,
     METHOD = 501,
     MICROSECOND_P = 502,
     MICROSECONDS_P = 503,
     MILLISECOND_P = 504,
     MILLISECONDS_P = 505,
     MINUTE_P = 506,
     MINUTES_P = 507,
     MINVALUE = 508,
     MODE = 509,
     MONTH_P = 510,
     MONTHS_P = 511,
     MOVE = 512,
     NAME_P = 513,
     NAMES = 514,
     NATIONAL = 515,
     NATURAL = 516,
     NCHAR = 517,
     NEW = 518,
     NEXT = 519,
     NO = 520,
     NONE = 521,
     NOT = 522,
     NOTHING = 523,
     NOTIFY = 524,
     NOTNULL = 525,
     NOWAIT = 526,
     NULL_P = 527,
     NULLIF = 528,
     NULLS_P = 529,
     NUMERIC = 530,
     OBJECT_P = 531,
     OF = 532,
     OFF = 533,
     OFFSET = 534,
     OIDS = 535,
     OLD = 536,
     ON = 537,
     ONLY = 538,
     OPERATOR = 539,
     OPTION = 540,
     OPTIONS = 541,
     OR = 542,
     ORDER = 543,
     ORDINALITY = 544,
     OUT_P = 545,
     OUTER_P = 546,
     OVER = 547,
     OVERLAPS = 548,
     OVERLAY = 549,
     OVERRIDING = 550,
     OWNED = 551,
     OWNER = 552,
     PARALLEL = 553,
     PARSER = 554,
     PARTIAL = 555,
     PARTITION = 556,
     PASSING = 557,
     PASSWORD = 558,
     PERCENT = 559,
     PLACING = 560,
     PLANS = 561,
     POLICY = 562,
     POSITION = 563,
     PRAGMA_P = 564,
     PRECEDING = 565,
     PRECISION = 566,
     PREPARE = 567,
     PREPARED = 568,
     PRESERVE = 569,
     PRIMARY = 570,
     PRIOR = 571,
     PRIVILEGES = 572,
     PROCEDURAL = 573,
     PROCEDURE = 574,
     PROGRAM = 575,
     PUBLICATION = 576,
     QUOTE = 577,
     RANGE = 578,
     READ_P = 579,
     REAL = 580,
     REASSIGN = 581,
     RECHECK = 582,
     RECURSIVE = 583,
     REF = 584,
     REFERENCES = 585,
     REFERENCING = 586,
     REFRESH = 587,
     REINDEX = 588,
     RELATIVE_P = 589,
     RELEASE = 590,
     RENAME = 591,
     REPEATABLE = 592,
     REPLACE = 593,
     REPLICA = 594,
     RESET = 595,
     RESTART = 596,
     RESTRICT = 597,
     RETURNING = 598,
     RETURNS = 599,
     REVOKE = 600,
     RIGHT = 601,
     ROLE = 602,
     ROLLBACK = 603,
     ROLLUP = 604,
     ROW = 605,
     ROWS = 606,
     RULE = 607,
     SAMPLE = 608,
     SAVEPOINT = 609,
     SCHEMA = 610,
     SCHEMAS = 611,
     SCROLL = 612,
     SEARCH = 613,
     SECOND_P = 614,
     SECONDS_P = 615,
     SECURITY = 616,
     SELECT = 617,
     SEQUENCE = 618,
     SEQUENCES = 619,
     SERIALIZABLE = 620,
     SERVER = 621,
     SESSION = 622,
     SESSION_USER = 623,
     SET = 624,
     SETOF = 625,
     SETS = 626,
     SHARE = 627,
     SHOW = 628,
     SIMILAR = 629,
     SIMPLE = 630,
     SKIP = 631,
     SMALLINT = 632,
     SNAPSHOT = 633,
     SOME = 634,
     SQL_P = 635,
     STABLE = 636,
     STANDALONE_P = 637,
     START = 638,
     STATEMENT = 639,
     STATISTICS = 640,
     STDIN = 641,
     STDOUT = 642,
     STORAGE = 643,
     STRICT_P = 644,
     STRIP_P = 645,
     STRUCT = 646,
     SUBSCRIPTION = 647,
     SUBSTRING = 648,
     SUMMARIZE = 649,
     SYMMETRIC = 650,
     SYSID = 651,
     SYSTEM_P = 652,
     TABLE = 653,
     TABLES = 654,
     TABLESAMPLE = 655,
     TABLESPACE = 656,
     TEMP = 657,
     TEMPLATE = 658,
     TEMPORARY = 659,
     TEXT_P = 660,
     THEN = 661,
     TIME = 662,
     TIMESTAMP = 663,
     TO = 664,
     TRAILING = 665,
     TRANSACTION = 666,
     TRANSFORM = 667,
     TREAT = 668,
     TRIGGER = 669,
     TRIM = 670,
     TRUE_P = 671,
     TRUNCATE = 672,
     TRUSTED = 673,
     TRY_CAST = 674,
     TYPE_P = 675,
     TYPES_P = 676,
     UNBOUNDED = 677,
     UNCOMMITTED = 678,
     UNENCRYPTED = 679,
     UNION = 680,
     UNIQUE = 681,
     UNKNOWN = 682,
     UNLISTEN = 683,
     UNLOGGED = 684,
     UNTIL = 685,
     UPDATE = 686,
     USER = 687,
     USING = 688,
     VACUUM = 689,
     VALID = 690,
     VALIDATE = 691,
     VALIDATOR = 692,
     VALUE_P = 693,
     VALUES = 694,
     VARCHAR = 695,
     VARIADIC = 696,
     VARYING = 697,
     VERBOSE = 698,
     VERSION_P = 699,
     VIEW = 700,
     VIEWS = 701,
     VOLATILE = 702,
     WHEN = 703,
     WHERE = 704,
     WHITESPACE_P = 705,
     WINDOW = 706,
     WITH = 707,
     WITHIN = 708,
     WITHOUT = 709,
     WORK = 710,
     WRAPPER = 711,
     WRITE_P = 712,
     XML_P = 713,
     XMLATTRIBUTES = 714,
     XMLCONCAT = 715,
     XMLELEMENT = 716,
     XMLEXISTS = 717,
     XMLFOREST = 718,
     XMLNAMESPACES = 719,
     XMLPARSE = 720,
     XMLPI = 721,
     XMLROOT = 722,
     XMLSERIALIZE = 723,
     XMLTABLE = 724,
     YEAR_P = 725,
     YEARS_P = 726,
     YES_P = 727,
     ZONE = 728,
     NOT_LA = 729,
     NULLS_LA = 730,
     WITH_LA = 731,
     POSTFIXOP = 732,
     UMINUS = 733
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define COMPRESSION 336
#define CONCURRENTLY 337
#define CONFIGURATION 338
#define CONFLICT 339
#define CONNECTION 340
#define CONSTRAINT 341
#define CONSTRAINTS 342
#define CONTENT_P 343
#define CONTINUE_P 344
#define CONVERSION_P 345
#define COPY 346
#define COST 347
#define CREATE_P 348
#define CROSS 349
#define CSV 350
#define CUBE 351
#define CURRENT_P 352
#define CURRENT_CATALOG 353
#define CURRENT_DATE 354
#define CURRENT_ROLE 355
#define CURRENT_SCHEMA 356
#define CURRENT_TIME 357
#define CURRENT_TIMESTAMP 358
#define CURRENT_USER 359
#define CURSOR 360
#define CYCLE 361
#define DATA_P 362
#define DATABASE 363
#define DAY_P 364
#define DAYS_P 365
#define DEALLOCATE 366
#define DEC 367
#define DECIMAL_P 368
#define DECLARE 369
#define DEFAULT 370
#define DEFAULTS 371
#define DEFERRABLE 372
#define DEFERRED 373
#define DEFINER 374
#define DELETE_P 375
#define DELIMITER 376
#define DELIMITERS 377
#define DEPENDS 378
#define DESC_P 379
#define DESCRIBE 380
#define DETACH 381
#define DICTIONARY 382
#define DISABLE_P 383
#define DISCARD 384
#define DISTINCT 385
#define DO 386
#define DOCUMENT_P 387
#define DOMAIN_P 388
#define DOUBLE_P 389
#define DROP 390
#define EACH 391
#define ELSE 392
#define ENABLE_P 393
#define ENCODING 394
#define ENCRYPTED 395
#define END_P 396
#define ENUM_P 397
#define ESCAPE 398
#define EVENT 399
#define EXCEPT 400
#define EXCLUDE 401
#define EXCLUDING 402
#define EXCLUSIVE 403
#define EXECUTE 404
#define EXISTS 405
#define EXPLAIN 406
#define EXPORT_P 407
#define EXTENSION 408
#define EXTERNAL 409
#define EXTRACT 410
#define FALSE_P 411
#define FAMILY 412
#define FETCH 413
#define FILTER 414
#define FIRST_P 415
#define FLOAT_P 416
#define FOLLOWING 417
#define FOR 418
#define FORCE 419
#define FOREIGN 420
#define FORWARD 421
#define FREEZE 422
#define FROM 423
#define FULL 424
#define FUNCTION 425
#define FUNCTIONS 426
#define GENERATED 427
#define GLOB 428
#define GLOBAL 429
#define GRANT 430
#define GRANTED 431
#define GROUP_P 432
#define GROUPING 433
#define GROUPING_ID 434
#define HANDLER 435
#define HAVING 436
#define HEADER_P 437
#define HOLD 438
#define HOUR_P 439
#define HOURS_P 440
#define IDENTITY_P 441
#define IF_P 442
#define IGNORE 443
#define ILIKE 444
#define IMMEDIATE 445
#define IMMUTABLE 446
#define IMPLICIT_P 447
#define IMPORT_P 448
#define IN_P 449
#define INCLUDING 450
#define INCREMENT 451
#define INDEX 452
#define INDEXES 453
#define INHERIT 454
#define INHERITS 455
#define INITIALLY 456
#define INLINE_P 457
#define INNER_P 458
#define INOUT 459
#define INPUT_P 460
#define INSENSITIVE 461
#define INSERT 462
#define INSTEAD 463
#define INT_P 464
#define INTEGER 465
#define INTERSECT 466
#define INTERVAL 467
#define INTO 468
#define INVOKER 469
#define IS 470
#define ISNULL 471
#define ISOLATION 472
#define JOIN 473
#define KEY 474
#define LABEL 475
#define LANGUAGE 476
#define LARGE_P 477
#define LAST_P 478
#define LATERAL_P 479
#define LEADING 480
#define LEAKPROOF 481
#define LEFT 482
#define LEVEL 483
#define LIKE 484
#define LIMIT 485
#define LISTEN 486
#define LOAD 487
#define LOCAL 488
#define LOCALTIME 489
#define LOCALTIMESTAMP 490
#define LOCATION 491
#define LOCK_P 492
#define LOCKED 493
#define LOGGED 494
#define MACRO 495
#define MAP 496
#define MAPPING 497
#define MATCH 498
#define MATERIALIZED 499
#define MAXVALUE 500
#define METHOD 501
#define MICROSECOND_P 502
#define MICROSECONDS_P 503
#define MILLISECOND_P 504
#define MILLISECONDS_P 505
#define MINUTE_P 506
#define MINUTES_P 507
#define MINVALUE 508
#define MODE 509
#define MONTH_P 510
#define MONTHS_P 511
#define MOVE 512
#define NAME_P 513
#define NAMES 514
#define NATIONAL 515
#define NATURAL 516
#define NCHAR 517
#define NEW 518
#define NEXT 519
#define NO 520
#define NONE 521
#define NOT 522
#define NOTHING 523
#define NOTIFY 524
#define NOTNULL 525
#define NOWAIT 526
#define NULL_P 527
#define NULLIF 528
#define NULLS_P 529
#define NUMERIC 530
#define OBJECT_P 531
#define OF 532
#define OFF 533
#define OFFSET 534
#define OIDS 535
#define OLD 536
#define ON 537
#define ONLY 538
#define OPERATOR 539
#define OPTION 540
#define OPTIONS 541
#define OR 542
#define ORDER 543
#define ORDINALITY 544
#define OUT_P 545
#define OUTER_P 546
#define OVER 547
#define OVERLAPS 548
#define OVERLAY 549
#define OVERRIDING 550
#define OWNED 551
#define OWNER 552
#define PARALLEL 553
#define PARSER 554
#define PARTIAL 555
#define PARTITION 556
#define PASSING 557
#define PASSWORD 558
#define PERCENT 559
#define PLACING 560
#define PLANS 561
#define POLICY 562
#define POSITION 563
#define PRAGMA_P 564
#define PRECEDING 565
#define PRECISION 566
#define PREPARE 567
#define PREPARED 568
#define PRESERVE 569
#define PRIMARY 570
#define PRIOR 571
#define PRIVILEGES 572
#define PROCEDURAL 573
#define PROCEDURE 574
#define PROGRAM 575
#define PUBLICATION 576
#define QUOTE 577
#define RANGE 578
#define READ_P 579
#define REAL 580
#define REASSIGN 581
#define RECHECK 582
#define RECURSIVE 583
#define REF 584
#define REFERENCES 585
#define REFERENCING 586
#define REFRESH 587
#define REINDEX 588
#define RELATIVE_P 589
#define RELEASE 590
#define RENAME 591
#define REPEATABLE 592
#define REPLACE 593
#define REPLICA 594
#define RESET 595
#define RESTART 596
#define RESTRICT 597
#define RETURNING 598
#define RETURNS 599
#define REVOKE 600
#define RIGHT 601
#define ROLE 602
#define ROLLBACK 603
#define ROLLUP 604
#define ROW 605
#define ROWS 606
#define RULE 607
#define SAMPLE 608
#define SAVEPOINT 609
#define SCHEMA 610
#define SCHEMAS 611
#define SCROLL 612
#define SEARCH 613
#define SECOND_P 614
#define SECONDS_P 615
#define SECURITY 616
#define SELECT 617
#define SEQUENCE 618
#define SEQUENCES 619
#define SERIALIZABLE 620
#define SERVER 621
#define SESSION 622
#define SESSION_USER 623
#define SET 624
#define SETOF 625
#define SETS 626
#define SHARE 627
#define SHOW 628
#define SIMILAR 629
#define SIMPLE 630
#define SKIP 631
#define SMALLINT 632
#define SNAPSHOT 633
#define SOME 634
#define SQL_P 635
#define STABLE 636
#define STANDALONE_P 637
#define START 638
#define STATEMENT 639
#define STATISTICS 640
#define STDIN 641
#define STDOUT 642
#define STORAGE 643
#define STRICT_P 644
#define STRIP_P 645
#define STRUCT 646
#define SUBSCRIPTION 647
#define SUBSTRING 648
#define SUMMARIZE 649
#define SYMMETRIC 650
#define SYSID 651
#define SYSTEM_P 652
#define TABLE 653
#define TABLES 654
#define TABLESAMPLE 655
#define TABLESPACE 656
#define TEMP 657
#define TEMPLATE 658
#define TEMPORARY 659
#define TEXT_P 660
#define THEN 661
#define TIME 662
#define TIMESTAMP 663
#define TO 664
#define TRAILING 665
#define TRANSACTION 666
#define TRANSFORM 667
#define TREAT 668
#define TRIGGER 669
#define TRIM 670
#define TRUE_P 671
#define TRUNCATE 672
#define TRUSTED 673
#define TRY_CAST 674
#define TYPE_P 675
#define TYPES_P 676
#define UNBOUNDED 677
#define UNCOMMITTED 678
#define UNENCRYPTED 679
#define UNION 680
#define UNIQUE 681
#define UNKNOWN 682
#define UNLISTEN 683
#define UNLOGGED 684
#define UNTIL 685
#define UPDATE 686
#define USER 687
#define USING 688
#define VACUUM 689
#define VALID 690
#define VALIDATE 691
#define VALIDATOR 692
#define VALUE_P 693
#define VALUES 694
#define VARCHAR 695
#define VARIADIC 696
#define VARYING 697
#define VERBOSE 698
#define VERSION_P 699
#define VIEW 700
#define VIEWS 701
#define VOLATILE 702
#define WHEN 703
#define WHERE 704
#define WHITESPACE_P 705
#define WINDOW 706
#define WITH 707
#define WITHIN 708
#define WITHOUT 709
#define WORK 710
#define WRAPPER 711
#define WRITE_P 712
#define XML_P 713
#define XMLATTRIBUTES 714
#define XMLCONCAT 715
#define XMLELEMENT 716
#define XMLEXISTS 717
#define XMLFOREST 718
#define XMLNAMESPACES 719
#define XMLPARSE 720
#define XMLPI 721
#define XMLROOT 722
#define XMLSERIALIZE 723
#define XMLTABLE 724
#define YEAR_P 725
#define YEARS_P 726
#define YES_P 727
#define ZONE 728
#define NOT_LA 729
#define NULLS_LA 730
#define WITH_LA 731
#define POSTFIXOP 732
#define UMINUS 733




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1269 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1294 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  589
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   51147

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  500
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  383
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1792
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2964

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   733

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   497,     2,   485,     2,     2,
     490,   491,   483,   481,   494,   482,   492,   484,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   499,   493,
     477,   479,   478,   498,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   488,     2,   489,   486,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   495,     2,   496,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   480,   487
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     352,   356,   359,   363,   372,   374,   375,   377,   381,   388,
     395,   404,   411,   420,   427,   436,   443,   452,   461,   472,
     481,   492,   494,   495,   503,   505,   510,   515,   523,   526,
     528,   532,   537,   541,   542,   544,   545,   548,   552,   558,
     567,   573,   574,   580,   586,   594,   597,   598,   600,   602,
     604,   608,   611,   612,   614,   615,   617,   621,   623,   627,
     629,   633,   636,   639,   644,   650,   656,   665,   667,   668,
     672,   682,   695,   699,   700,   705,   712,   714,   717,   719,
     721,   722,   724,   727,   730,   732,   735,   738,   740,   743,
     747,   750,   753,   756,   759,   763,   767,   771,   773,   777,
     779,   780,   782,   785,   788,   791,   794,   797,   800,   803,
     806,   808,   810,   811,   821,   834,   846,   847,   850,   852,
     854,   856,   858,   860,   862,   866,   867,   869,   872,   874,
     876,   879,   882,   886,   888,   890,   893,   896,   898,   901,
     905,   911,   915,   918,   924,   930,   933,   937,   939,   941,
     944,   947,   948,   953,   954,   958,   963,   968,   969,   973,
     976,   977,   981,   983,   985,   987,   989,   991,   993,   995,
     997,   999,  1001,  1005,  1009,  1011,  1014,  1017,  1020,  1023,
    1026,  1029,  1030,  1034,  1038,  1042,  1043,  1045,  1048,  1050,
    1053,  1056,  1059,  1062,  1067,  1069,  1073,  1075,  1079,  1081,
    1083,  1085,  1087,  1091,  1093,  1096,  1097,  1099,  1100,  1102,
    1106,  1107,  1110,  1111,  1115,  1119,  1121,  1127,  1131,  1133,
    1137,  1139,  1144,  1150,  1156,  1163,  1167,  1175,  1180,  1192,
    1194,  1198,  1201,  1204,  1207,  1208,  1212,  1214,  1216,  1219,
    1222,  1225,  1228,  1230,  1231,  1233,  1236,  1243,  1248,  1255,
    1260,  1267,  1276,  1281,  1288,  1290,  1292,  1294,  1296,  1298,
    1301,  1303,  1306,  1308,  1310,  1312,  1316,  1320,  1324,  1328,
    1331,  1334,  1336,  1340,  1342,  1344,  1346,  1348,  1352,  1354,
    1356,  1357,  1359,  1361,  1363,  1365,  1369,  1376,  1378,  1380,
    1383,  1387,  1396,  1408,  1418,  1420,  1422,  1426,  1427,  1429,
    1433,  1435,  1436,  1438,  1439,  1441,  1442,  1444,  1448,  1450,
    1452,  1454,  1458,  1459,  1462,  1465,  1466,  1469,  1470,  1472,
    1473,  1475,  1477,  1479,  1483,  1487,  1489,  1491,  1495,  1499,
    1503,  1507,  1512,  1516,  1519,  1521,  1523,  1525,  1527,  1529,
    1533,  1535,  1537,  1541,  1545,  1547,  1550,  1555,  1560,  1563,
    1567,  1573,  1579,  1581,  1583,  1594,  1605,  1607,  1610,  1615,
    1620,  1625,  1628,  1631,  1635,  1637,  1641,  1648,  1651,  1652,
    1656,  1660,  1665,  1670,  1675,  1680,  1684,  1687,  1689,  1691,
    1692,  1694,  1696,  1697,  1699,  1705,  1707,  1708,  1711,  1712,
    1714,  1715,  1719,  1721,  1725,  1730,  1734,  1736,  1738,  1739,
    1742,  1745,  1746,  1749,  1752,  1754,  1756,  1758,  1759,  1762,
    1767,  1773,  1778,  1781,  1785,  1788,  1791,  1794,  1797,  1799,
    1802,  1806,  1807,  1809,  1810,  1816,  1818,  1823,  1830,  1833,
    1835,  1836,  1841,  1842,  1844,  1846,  1848,  1850,  1853,  1856,
    1858,  1860,  1862,  1864,  1866,  1868,  1872,  1873,  1875,  1879,
    1881,  1883,  1885,  1887,  1889,  1892,  1897,  1902,  1908,  1910,
    1912,  1915,  1916,  1918,  1922,  1924,  1925,  1927,  1930,  1934,
    1937,  1942,  1945,  1949,  1952,  1953,  1955,  1958,  1959,  1964,
    1970,  1973,  1974,  1976,  1980,  1984,  1988,  1992,  1996,  2000,
    2002,  2007,  2011,  2016,  2022,  2027,  2033,  2038,  2044,  2047,
    2052,  2054,  2056,  2057,  2059,  2064,  2070,  2075,  2076,  2079,
    2082,  2085,  2087,  2089,  2090,  2095,  2098,  2100,  2103,  2106,
    2111,  2114,  2121,  2124,  2126,  2130,  2135,  2136,  2139,  2140,
    2143,  2144,  2146,  2150,  2154,  2157,  2158,  2161,  2166,  2168,
    2170,  2173,  2177,  2183,  2190,  2193,  2197,  2203,  2209,  2213,
    2218,  2219,  2221,  2223,  2225,  2227,  2229,  2232,  2237,  2239,
    2241,  2243,  2245,  2248,  2252,  2253,  2255,  2257,  2259,  2261,
    2263,  2266,  2269,  2272,  2275,  2278,  2280,  2284,  2285,  2287,
    2289,  2291,  2293,  2299,  2302,  2304,  2306,  2308,  2310,  2315,
    2317,  2320,  2323,  2325,  2329,  2333,  2336,  2338,  2339,  2345,
    2348,  2354,  2357,  2359,  2363,  2367,  2368,  2370,  2372,  2374,
    2376,  2378,  2380,  2382,  2384,  2386,  2388,  2390,  2392,  2394,
    2396,  2398,  2400,  2402,  2404,  2406,  2408,  2410,  2412,  2414,
    2416,  2420,  2424,  2428,  2432,  2436,  2440,  2444,  2445,  2447,
    2451,  2455,  2461,  2464,  2467,  2471,  2475,  2479,  2483,  2487,
    2491,  2495,  2499,  2503,  2507,  2511,  2515,  2519,  2522,  2525,
    2529,  2533,  2536,  2539,  2543,  2547,  2553,  2558,  2565,  2569,
    2575,  2580,  2587,  2592,  2599,  2605,  2613,  2617,  2620,  2625,
    2629,  2632,  2634,  2638,  2642,  2646,  2650,  2654,  2658,  2663,
    2667,  2672,  2676,  2681,  2687,  2694,  2701,  2709,  2716,  2724,
    2731,  2739,  2743,  2748,  2753,  2760,  2762,  2767,  2769,  2773,
    2776,  2779,  2783,  2787,  2791,  2795,  2799,  2803,  2807,  2811,
    2815,  2819,  2823,  2827,  2831,  2834,  2837,  2843,  2850,  2857,
    2865,  2867,  2869,  2872,  2875,  2878,  2883,  2885,  2888,  2890,
    2893,  2896,  2901,  2905,  2912,  2920,  2930,  2938,  2946,  2951,
    2956,  2958,  2960,  2962,  2968,  2970,  2972,  2977,  2979,  2984,
    2986,  2991,  2993,  2998,  3000,  3002,  3004,  3006,  3008,  3010,
    3017,  3024,  3029,  3034,  3039,  3044,  3051,  3057,  3063,  3069,
    3074,  3081,  3086,  3092,  3093,  3099,  3100,  3103,  3104,  3106,
    3110,  3114,  3117,  3120,  3121,  3128,  3130,  3131,  3135,  3136,
    3139,  3142,  3143,  3145,  3150,  3153,  3156,  3159,  3162,  3165,
    3170,  3174,  3176,  3182,  3186,  3188,  3192,  3194,  3196,  3198,
    3200,  3202,  3204,  3206,  3208,  3210,  3212,  3214,  3216,  3218,
    3220,  3222,  3224,  3226,  3228,  3233,  3235,  3240,  3242,  3247,
    3249,  3252,  3254,  3257,  3259,  3262,  3264,  3268,  3270,  3274,
    3276,  3277,  3279,  3283,  3285,  3289,  3293,  3295,  3299,  3303,
    3304,  3306,  3308,  3310,  3312,  3314,  3316,  3318,  3320,  3322,
    3324,  3329,  3333,  3336,  3340,  3341,  3345,  3349,  3352,  3355,
    3357,  3358,  3361,  3364,  3368,  3371,  3373,  3375,  3379,  3385,
    3387,  3390,  3395,  3398,  3399,  3401,  3402,  3404,  3407,  3410,
    3414,  3420,  3422,  3423,  3425,  3428,  3429,  3432,  3434,  3435,
    3437,  3438,  3440,  3444,  3448,  3451,  3453,  3457,  3463,  3468,
    3471,  3473,  3474,  3478,  3480,  3484,  3489,  3492,  3493,  3495,
    3499,  3501,  3504,  3506,  3510,  3512,  3514,  3516,  3519,  3521,
    3523,  3526,  3528,  3530,  3533,  3541,  3544,  3550,  3554,  3558,
    3560,  3562,  3564,  3566,  3568,  3570,  3572,  3574,  3576,  3578,
    3580,  3582,  3584,  3586,  3588,  3590,  3592,  3594,  3596,  3598,
    3601,  3604,  3608,  3612,  3613,  3615,  3617,  3619,  3621,  3623,
    3625,  3627,  3633,  3637,  3638,  3640,  3642,  3644,  3646,  3651,
    3659,  3662,  3663,  3665,  3667,  3669,  3671,  3685,  3702,  3704,
    3707,  3708,  3710,  3711,  3713,  3714,  3717,  3718,  3720,  3721,
    3728,  3737,  3744,  3753,  3760,  3769,  3772,  3774,  3779,  3783,
    3786,  3791,  3795,  3801,  3803,  3804,  3806,  3808,  3809,  3811,
    3813,  3815,  3817,  3819,  3821,  3823,  3825,  3827,  3829,  3831,
    3835,  3837,  3839,  3841,  3843,  3845,  3847,  3850,  3852,  3854,
    3857,  3861,  3865,  3869,  3871,  3875,  3879,  3882,  3886,  3890,
    3894,  3898,  3900,  3902,  3904,  3906,  3910,  3916,  3918,  3920,
    3922,  3924,  3928,  3931,  3933,  3938,  3944,  3950,  3955,  3962,
    3964,  3966,  3968,  3970,  3972,  3974,  3975,  3977,  3981,  3983,
    3984,  3992,  3994,  3997,  4001,  4004,  4005,  4008,  4009,  4012,
    4017,  4020,  4022,  4024,  4026,  4029,  4033,  4036,  4039,  4042,
    4045,  4049,  4054,  4057,  4059,  4061,  4063,  4067,  4070,  4080,
    4092,  4105,  4120,  4124,  4129,  4134,  4135,  4143,  4154,  4157,
    4161,  4162,  4167,  4169,  4171,  4173,  4175,  4177,  4179,  4181,
    4183,  4185,  4187,  4189,  4191,  4193,  4195,  4197,  4199,  4201,
    4203,  4205,  4207,  4209,  4211,  4213,  4215,  4217,  4219,  4221,
    4223,  4225,  4227,  4229,  4231,  4233,  4235,  4237,  4239,  4241,
    4243,  4245,  4247,  4249,  4251,  4253,  4255,  4257,  4259,  4261,
    4263,  4265,  4267,  4269,  4271,  4273,  4275,  4277,  4279,  4281,
    4283,  4285,  4287,  4289,  4291,  4293,  4295,  4297,  4299,  4301,
    4303,  4305,  4307,  4309,  4311,  4313,  4315,  4317,  4319,  4321,
    4323,  4325,  4327,  4329,  4331,  4333,  4335,  4337,  4339,  4341,
    4343,  4345,  4347,  4349,  4351,  4353,  4355,  4357,  4359,  4361,
    4363,  4365,  4367,  4369,  4371,  4373,  4375,  4377,  4379,  4381,
    4383,  4385,  4387,  4389,  4391,  4393,  4395,  4397,  4399,  4401,
    4403,  4405,  4407,  4409,  4411,  4413,  4415,  4417,  4419,  4421,
    4423,  4425,  4427,  4429,  4431,  4433,  4435,  4437,  4439,  4441,
    4443,  4445,  4447,  4449,  4451,  4453,  4455,  4457,  4459,  4461,
    4463,  4465,  4467,  4469,  4471,  4473,  4475,  4477,  4479,  4481,
    4483,  4485,  4487,  4489,  4491,  4493,  4495,  4497,  4499,  4501,
    4503,  4505,  4507,  4509,  4511,  4513,  4515,  4517,  4519,  4521,
    4523,  4525,  4527,  4529,  4531,  4533,  4535,  4537,  4539,  4541,
    4543,  4545,  4547,  4549,  4551,  4553,  4555,  4557,  4559,  4561,
    4563,  4565,  4567,  4569,  4571,  4573,  4575,  4577,  4579,  4581,
    4583,  4585,  4587,  4589,  4591,  4593,  4595,  4597,  4599,  4601,
    4603,  4605,  4607,  4609,  4611,  4613,  4615,  4617,  4619,  4621,
    4623,  4625,  4627,  4629,  4631,  4633,  4635,  4637,  4639,  4641,
    4643,  4645,  4647,  4649,  4651,  4653,  4655,  4657,  4659,  4661,
    4663,  4665,  4667,  4669,  4671,  4673,  4675,  4677,  4679,  4681,
    4683,  4685,  4687,  4689,  4691,  4693,  4695,  4697,  4699,  4701,
    4703,  4705,  4707,  4709,  4711,  4713,  4715,  4717,  4719,  4721,
    4723,  4725,  4727,  4729,  4731,  4733,  4735,  4737,  4739,  4741,
    4743,  4745,  4747,  4749,  4751,  4753,  4755,  4757,  4759,  4761,
    4763,  4765,  4767,  4769,  4771,  4773,  4775,  4777,  4779,  4781,
    4783,  4785,  4787,  4789,  4791,  4793,  4795,  4797,  4799,  4801,
    4803,  4805,  4807,  4809,  4811,  4813,  4815,  4817,  4819,  4821,
    4823,  4825,  4827,  4829,  4831,  4833,  4835,  4837,  4839,  4841,
    4843,  4845,  4847,  4849,  4851,  4853,  4855,  4857,  4859,  4861,
    4863,  4865,  4867,  4869,  4871,  4873,  4875,  4877,  4879,  4881,
    4883,  4885,  4887,  4889,  4891,  4893,  4895,  4897,  4899,  4901,
    4903,  4905,  4907,  4909,  4911,  4913,  4915,  4917,  4919,  4921,
    4923,  4925,  4927,  4929,  4931,  4933,  4935,  4937,  4939,  4941,
    4943,  4945,  4947,  4949,  4951,  4953,  4955,  4957,  4959,  4961,
    4963,  4965,  4967,  4969,  4971,  4973,  4975,  4977,  4979,  4981,
    4983,  4985,  4987,  4989,  4991,  4993,  4995,  4997,  4999,  5001,
    5003,  5005,  5007,  5009,  5011,  5013,  5015,  5017,  5019,  5021,
    5023,  5025,  5027,  5029,  5031,  5033,  5035,  5037,  5039,  5041,
    5043,  5045,  5047,  5049,  5051,  5053,  5055,  5057,  5059,  5061,
    5063,  5065,  5067,  5069,  5071,  5073,  5075,  5077,  5079,  5081,
    5083,  5085,  5087,  5089,  5091,  5093,  5095,  5097,  5099,  5101,
    5103,  5105,  5107,  5109,  5111,  5113,  5115,  5117,  5119,  5121,
    5123,  5125,  5127,  5129,  5131,  5133,  5135,  5137,  5139,  5141,
    5143,  5145,  5147,  5149,  5151,  5153,  5155,  5157,  5159,  5161,
    5163,  5165,  5167,  5169,  5171,  5173,  5175,  5177,  5179,  5181,
    5183,  5185,  5187,  5189,  5191,  5193,  5195,  5197,  5199,  5201,
    5203,  5205,  5207,  5209,  5211,  5213,  5215,  5217,  5219,  5221,
    5223,  5225,  5227,  5229,  5231,  5233,  5235,  5237,  5239,  5241,
    5243,  5245,  5247,  5249,  5251,  5253,  5255,  5257,  5259,  5261,
    5263,  5265,  5267,  5269,  5271,  5273,  5275,  5277,  5279,  5281,
    5283,  5285,  5287
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     501,     0,    -1,   502,    -1,   502,   493,   503,    -1,   503,
      -1,   831,    -1,   544,    -1,   504,    -1,   863,    -1,   870,
      -1,   832,    -1,   610,    -1,   873,    -1,   516,    -1,   606,
      -1,   821,    -1,   540,    -1,   553,    -1,   515,    -1,   859,
      -1,   599,    -1,   542,    -1,   835,    -1,   833,    -1,   834,
      -1,   824,    -1,   521,    -1,   852,    -1,   539,    -1,   818,
      -1,   519,    -1,   627,    -1,   551,    -1,   609,    -1,   854,
      -1,   864,    -1,   846,    -1,   867,    -1,   871,    -1,    -1,
      29,   398,   692,   512,    -1,    29,   398,   187,   150,   692,
     512,    -1,    29,   197,   799,   512,    -1,    29,   197,   187,
     150,   799,   512,    -1,    29,   363,   799,   512,    -1,    29,
     363,   187,   150,   799,   512,    -1,    29,   445,   799,   512,
      -1,    29,   445,   187,   150,   799,   512,    -1,   507,    -1,
     505,   507,    -1,   369,   115,   734,    -1,   135,   115,    -1,
     341,    -1,   341,   546,   547,    -1,   369,   548,    -1,   369,
     172,   598,    -1,   511,    -1,   508,   494,   511,    -1,    23,
     578,    -1,    23,   187,   267,   150,   578,    -1,    23,    75,
     578,    -1,    23,    75,   187,   267,   150,   578,    -1,    29,
     520,   807,   506,    -1,    29,   520,   807,   135,   267,   272,
      -1,    29,   520,   807,   369,   267,   272,    -1,    29,   520,
     807,   369,   385,   550,    -1,    29,   520,   807,   369,   566,
      -1,    29,   520,   807,   340,   566,    -1,    29,   520,   807,
     369,   388,   807,    -1,    29,   520,   807,    23,   172,   598,
      36,   186,   556,    -1,    29,   520,   807,   505,    -1,    29,
     520,   807,   135,   186,    -1,    29,   520,   807,   135,   186,
     187,   150,    -1,   135,   520,   187,   150,   807,   603,    -1,
     135,   520,   807,   603,    -1,    29,   520,   807,   514,   420,
     704,   701,   510,    -1,    29,   520,   807,   513,    -1,    23,
     568,    -1,    29,    86,   801,   554,    -1,   436,    86,   801,
      -1,   135,    86,   187,   150,   801,   603,    -1,   135,    86,
     801,   603,    -1,   369,   239,    -1,   369,   429,    -1,   369,
     566,    -1,   340,   566,    -1,   513,    -1,   433,   734,    -1,
      -1,   561,    -1,   369,   561,    -1,    23,   561,    -1,   135,
     576,    -1,   509,    -1,   512,   494,   509,    -1,   286,   490,
     508,   491,    -1,   369,   107,    -1,   369,    -1,    -1,   111,
     801,    -1,   111,   312,   801,    -1,   111,    27,    -1,   111,
     312,    27,    -1,    93,   420,   812,    36,   142,   490,   517,
     491,    -1,   518,    -1,    -1,   806,    -1,   518,   494,   806,
      -1,    29,   355,   801,   336,   409,   801,    -1,    29,   398,
     692,   336,   409,   801,    -1,    29,   398,   187,   150,   692,
     336,   409,   801,    -1,    29,   363,   799,   336,   409,   801,
      -1,    29,   363,   187,   150,   799,   336,   409,   801,    -1,
      29,   445,   799,   336,   409,   801,    -1,    29,   445,   187,
     150,   799,   336,   409,   801,    -1,    29,   197,   799,   336,
     409,   801,    -1,    29,   197,   187,   150,   799,   336,   409,
     801,    -1,    29,   398,   692,   336,   520,   801,   409,   801,
      -1,    29,   398,   187,   150,   692,   336,   520,   801,   409,
     801,    -1,    29,   398,   692,   336,    86,   801,   409,   801,
      -1,    29,   398,   187,   150,   692,   336,    86,   801,   409,
     801,    -1,    75,    -1,    -1,   525,   207,   213,   523,   522,
     528,   530,    -1,   627,    -1,   295,   531,   438,   627,    -1,
     490,   535,   491,   627,    -1,   490,   535,   491,   295,   531,
     438,   627,    -1,   115,   439,    -1,   799,    -1,   799,    36,
     807,    -1,   490,   537,   491,   698,    -1,   282,    86,   801,
      -1,    -1,   632,    -1,    -1,   807,   788,    -1,   538,   479,
     734,    -1,   490,   532,   491,   479,   734,    -1,   282,    84,
     524,   131,   431,   369,   536,   698,    -1,   282,    84,   524,
     131,   268,    -1,    -1,   807,   533,   534,   646,   647,    -1,
     739,   533,   534,   646,   647,    -1,   490,   734,   491,   533,
     534,   646,   647,    -1,   343,   791,    -1,    -1,   432,    -1,
     397,    -1,   538,    -1,   532,   494,   538,    -1,    73,   812,
      -1,    -1,   812,    -1,    -1,   526,    -1,   535,   494,   526,
      -1,   527,    -1,   536,   494,   527,    -1,   529,    -1,   537,
     494,   529,    -1,   807,   788,    -1,   309,   807,    -1,   309,
     807,   479,   851,    -1,   309,   807,   490,   766,   491,    -1,
      93,   597,   363,   799,   541,    -1,    93,   597,   363,   187,
     267,   150,   799,   541,    -1,   545,    -1,    -1,   149,   801,
     543,    -1,    93,   597,   398,   875,    36,   149,   801,   543,
     874,    -1,    93,   597,   398,   187,   267,   150,   875,    36,
     149,   801,   543,   874,    -1,   490,   764,   491,    -1,    -1,
      29,   363,   799,   545,    -1,    29,   363,   187,   150,   799,
     545,    -1,   548,    -1,   545,   548,    -1,   452,    -1,   476,
      -1,    -1,     4,    -1,   481,     4,    -1,   482,     4,    -1,
     550,    -1,    36,   706,    -1,    55,   547,    -1,   106,    -1,
     265,   106,    -1,   196,   549,   547,    -1,   245,   547,    -1,
     253,   547,    -1,   265,   245,    -1,   265,   253,    -1,   296,
      54,   812,    -1,   363,   258,   812,    -1,   383,   546,   547,
      -1,   341,    -1,   341,   546,   547,    -1,    54,    -1,    -1,
     805,    -1,   481,   805,    -1,   482,   805,    -1,    19,   552,
      -1,    47,   552,    -1,   383,   552,    -1,    79,   552,    -1,
     141,   552,    -1,   348,   552,    -1,   455,    -1,   411,    -1,
      -1,    93,   597,   398,   799,   490,   585,   491,   573,   565,
      -1,    93,   597,   398,   187,   267,   150,   799,   490,   585,
     491,   573,   565,    -1,    93,   287,   338,   597,   398,   799,
     490,   585,   491,   573,   565,    -1,    -1,   554,   577,    -1,
     592,    -1,   882,    -1,   761,    -1,   547,    -1,   806,    -1,
     266,    -1,   490,   545,   491,    -1,    -1,   806,    -1,   265,
      22,    -1,   342,    -1,    58,    -1,   369,   272,    -1,   369,
     115,    -1,    86,   801,   560,    -1,   560,    -1,   572,    -1,
      73,   812,    -1,   267,   272,    -1,   272,    -1,   426,   584,
      -1,   315,   219,   584,    -1,    67,   490,   734,   491,   567,
      -1,   433,    81,   801,    -1,   115,   735,    -1,   172,   598,
      36,   186,   556,    -1,   330,   799,   587,   595,   563,    -1,
     576,   557,    -1,   282,   431,   558,    -1,   562,    -1,   589,
      -1,   562,   589,    -1,   589,   562,    -1,    -1,   286,   490,
     579,   491,    -1,    -1,   282,    79,   135,    -1,   282,    79,
     120,   351,    -1,   282,    79,   314,   351,    -1,    -1,   490,
     570,   491,    -1,   265,   199,    -1,    -1,    86,   801,   593,
      -1,   593,    -1,    78,    -1,    87,    -1,   116,    -1,   186,
      -1,   198,    -1,   385,    -1,   388,    -1,    27,    -1,   590,
      -1,   570,   494,   590,    -1,   433,   197,   581,    -1,   117,
      -1,   267,   117,    -1,   201,   118,    -1,   201,   190,    -1,
     452,   566,    -1,   452,   280,    -1,   454,   280,    -1,    -1,
     490,   580,   491,    -1,   575,   195,   569,    -1,   575,   147,
     569,    -1,    -1,   816,    -1,   267,   117,    -1,   117,    -1,
     201,   190,    -1,   201,   118,    -1,   267,   435,    -1,   265,
     199,    -1,   807,   704,   564,   588,    -1,   561,    -1,   579,
     494,   561,    -1,   583,    -1,   580,   494,   583,    -1,   807,
      -1,   578,    -1,   596,    -1,   568,    -1,   816,   479,   555,
      -1,   816,    -1,   452,   574,    -1,    -1,   594,    -1,    -1,
     807,    -1,   490,   591,   491,    -1,    -1,   588,   559,    -1,
      -1,   282,   120,   558,    -1,   816,   479,   555,    -1,   816,
      -1,   816,   492,   816,   479,   555,    -1,   816,   492,   816,
      -1,   586,    -1,   591,   494,   586,    -1,   704,    -1,   809,
     813,   485,   420,    -1,   370,   809,   813,   485,   420,    -1,
      67,   490,   734,   491,   554,    -1,   426,   490,   591,   491,
     584,   554,    -1,   426,   571,   554,    -1,   315,   219,   490,
     591,   491,   584,   554,    -1,   315,   219,   571,   554,    -1,
     165,   219,   490,   591,   491,   330,   799,   587,   595,   563,
     554,    -1,   582,    -1,   594,   494,   582,    -1,   243,   169,
      -1,   243,   300,    -1,   243,   375,    -1,    -1,   229,   799,
     575,    -1,   404,    -1,   402,    -1,   233,   404,    -1,   233,
     402,    -1,   174,   404,    -1,   174,   402,    -1,   429,    -1,
      -1,    30,    -1,    54,   115,    -1,   135,   600,   187,   150,
     602,   603,    -1,   135,   600,   602,   603,    -1,   135,   601,
     187,   150,   800,   603,    -1,   135,   601,   800,   603,    -1,
     135,   604,   801,   282,   812,   603,    -1,   135,   604,   187,
     150,   801,   282,   812,   603,    -1,   135,   420,   605,   603,
      -1,   135,   420,   187,   150,   605,   603,    -1,   398,    -1,
     363,    -1,   170,    -1,   240,    -1,   445,    -1,   244,   445,
      -1,   197,    -1,   165,   398,    -1,    74,    -1,    90,    -1,
     385,    -1,   405,   358,   299,    -1,   405,   358,   127,    -1,
     405,   358,   403,    -1,   405,   358,    83,    -1,    21,   246,
      -1,   144,   414,    -1,   153,    -1,   165,   107,   456,    -1,
     321,    -1,   355,    -1,   366,    -1,   812,    -1,   602,   494,
     812,    -1,    58,    -1,   342,    -1,    -1,   307,    -1,   352,
      -1,   414,    -1,   704,    -1,   605,   494,   704,    -1,    93,
     607,   799,   608,    36,   734,    -1,   170,    -1,   240,    -1,
     490,   491,    -1,   490,   766,   491,    -1,   525,   431,   860,
     369,   536,   682,   861,   530,    -1,    91,   622,   799,   587,
     620,   611,   616,   625,   612,   546,   617,    -1,    91,   490,
     820,   491,   409,   616,   625,   546,   617,    -1,   168,    -1,
     409,    -1,   614,   122,   806,    -1,    -1,   624,    -1,   613,
     494,   624,    -1,   433,    -1,    -1,    36,    -1,    -1,   320,
      -1,    -1,   621,    -1,   490,   626,   491,    -1,   843,    -1,
     547,    -1,   483,    -1,   490,   613,   491,    -1,    -1,   816,
     618,    -1,   452,   280,    -1,    -1,   621,   623,    -1,    -1,
      50,    -1,    -1,    50,    -1,   280,    -1,   167,    -1,   121,
     615,   806,    -1,   272,   615,   806,    -1,    95,    -1,   182,
      -1,   322,   615,   806,    -1,   143,   615,   806,    -1,   164,
     322,   591,    -1,   164,   322,   483,    -1,   164,   267,   272,
     591,    -1,   164,   272,   591,    -1,   139,   806,    -1,   843,
      -1,   806,    -1,   386,    -1,   387,    -1,   619,    -1,   626,
     494,   619,    -1,   629,    -1,   628,    -1,   490,   629,   491,
      -1,   490,   628,   491,    -1,   631,    -1,   630,   643,    -1,
     630,   642,   674,   649,    -1,   630,   642,   648,   675,    -1,
     632,   630,    -1,   632,   630,   643,    -1,   632,   630,   642,
     674,   649,    -1,   632,   630,   642,   648,   675,    -1,   631,
      -1,   628,    -1,   362,   640,   790,   635,   682,   698,   665,
     673,   743,   653,    -1,   362,   639,   791,   635,   682,   698,
     665,   673,   743,   653,    -1,   681,    -1,   398,   692,    -1,
     630,   425,   638,   630,    -1,   630,   211,   638,   630,    -1,
     630,   145,   638,   630,    -1,   452,   633,    -1,   476,   633,
      -1,   452,   328,   633,    -1,   634,    -1,   633,   494,   634,
      -1,   801,   814,    36,   490,   820,   491,    -1,   213,   636,
      -1,    -1,   404,   637,   799,    -1,   402,   637,   799,    -1,
     233,   404,   637,   799,    -1,   233,   402,   637,   799,    -1,
     174,   404,   637,   799,    -1,   174,   402,   637,   799,    -1,
     429,   637,   799,    -1,   398,   799,    -1,   799,    -1,   398,
      -1,    -1,    27,    -1,   130,    -1,    -1,   130,    -1,   130,
     282,   490,   764,   491,    -1,    27,    -1,    -1,   188,   274,
      -1,    -1,   643,    -1,    -1,   288,    54,   644,    -1,   645,
      -1,   644,   494,   645,    -1,   734,   433,   761,   647,    -1,
     734,   646,   647,    -1,    37,    -1,   124,    -1,    -1,   475,
     160,    -1,   475,   223,    -1,    -1,   650,   651,    -1,   651,
     650,    -1,   650,    -1,   651,    -1,   648,    -1,    -1,   230,
     659,    -1,   230,   659,   494,   660,    -1,   158,   664,   661,
     663,   283,    -1,   158,   664,   663,   283,    -1,   279,   660,
      -1,   279,   661,   663,    -1,     4,   485,    -1,     9,   485,
      -1,     4,   304,    -1,     9,   304,    -1,     9,    -1,     9,
     351,    -1,   433,   353,   655,    -1,    -1,   807,    -1,    -1,
     654,   490,   652,   491,   658,    -1,   652,    -1,   652,   490,
     807,   491,    -1,   652,   490,   807,   494,     9,   491,    -1,
     400,   655,    -1,   656,    -1,    -1,   337,   490,     9,   491,
      -1,    -1,   734,    -1,    27,    -1,   734,    -1,   736,    -1,
     481,   662,    -1,   482,   662,    -1,   805,    -1,     4,    -1,
     350,    -1,   351,    -1,   160,    -1,   264,    -1,   177,    54,
     666,    -1,    -1,   667,    -1,   666,   494,   667,    -1,   734,
      -1,   668,    -1,   670,    -1,   669,    -1,   671,    -1,   490,
     491,    -1,   349,   490,   764,   491,    -1,    96,   490,   764,
     491,    -1,   178,   371,   490,   666,   491,    -1,   178,    -1,
     179,    -1,   181,   734,    -1,    -1,   676,    -1,   163,   324,
     283,    -1,   674,    -1,    -1,   677,    -1,   676,   677,    -1,
     678,   679,   680,    -1,   163,   431,    -1,   163,   265,   219,
     431,    -1,   163,   372,    -1,   163,   219,   372,    -1,   277,
     798,    -1,    -1,   271,    -1,   376,   238,    -1,    -1,   439,
     490,   764,   491,    -1,   681,   494,   490,   764,   491,    -1,
     168,   683,    -1,    -1,   684,    -1,   683,   494,   684,    -1,
     692,   687,   657,    -1,   693,   688,   657,    -1,   224,   693,
     688,    -1,   628,   687,   657,    -1,   224,   628,   687,    -1,
     685,    -1,   490,   685,   491,   686,    -1,   490,   685,   491,
      -1,   684,    94,   218,   684,    -1,   684,   689,   218,   684,
     691,    -1,   684,   218,   684,   691,    -1,   684,   261,   689,
     218,   684,    -1,   684,   261,   218,   684,    -1,    36,   807,
     490,   800,   491,    -1,    36,   808,    -1,   807,   490,   800,
     491,    -1,   807,    -1,   686,    -1,    -1,   686,    -1,    36,
     490,   699,   491,    -1,    36,   807,   490,   699,   491,    -1,
     807,   490,   699,   491,    -1,    -1,   169,   690,    -1,   227,
     690,    -1,   346,   690,    -1,   203,    -1,   291,    -1,    -1,
     433,   490,   800,   491,    -1,   282,   734,    -1,   799,    -1,
     799,   483,    -1,   283,   799,    -1,   283,   490,   799,   491,
      -1,   739,   697,    -1,   351,   168,   490,   695,   491,   697,
      -1,   739,   696,    -1,   694,    -1,   695,   494,   694,    -1,
      36,   490,   699,   491,    -1,    -1,   476,   289,    -1,    -1,
     449,   734,    -1,    -1,   700,    -1,   699,   494,   700,    -1,
     807,   704,   701,    -1,    73,   812,    -1,    -1,   807,   704,
      -1,   702,   494,   807,   704,    -1,   350,    -1,   391,    -1,
     706,   705,    -1,   370,   706,   705,    -1,   706,    35,   488,
     805,   489,    -1,   370,   706,    35,   488,   805,   489,    -1,
     706,    35,    -1,   370,   706,    35,    -1,   703,   490,   702,
     491,   705,    -1,   241,   490,   768,   491,   705,    -1,   705,
     488,   489,    -1,   705,   488,   805,   489,    -1,    -1,   708,
      -1,   710,    -1,   712,    -1,   716,    -1,   722,    -1,   723,
     733,    -1,   723,   490,   805,   491,    -1,   710,    -1,   713,
      -1,   717,    -1,   722,    -1,   811,   709,    -1,   490,   764,
     491,    -1,    -1,   209,    -1,   210,    -1,   377,    -1,    49,
      -1,   325,    -1,   161,   711,    -1,   134,   311,    -1,   113,
     709,    -1,   112,   709,    -1,   275,   709,    -1,    52,    -1,
     490,   805,   491,    -1,    -1,   714,    -1,   715,    -1,   714,
      -1,   715,    -1,    51,   721,   490,   764,   491,    -1,    51,
     721,    -1,   718,    -1,   719,    -1,   718,    -1,   719,    -1,
     720,   490,   805,   491,    -1,   720,    -1,    65,   721,    -1,
      64,   721,    -1,   440,    -1,   260,    65,   721,    -1,   260,
      64,   721,    -1,   262,   721,    -1,   442,    -1,    -1,   408,
     490,   805,   491,   724,    -1,   408,   724,    -1,   407,   490,
     805,   491,   724,    -1,   407,   724,    -1,   212,    -1,   476,
     407,   473,    -1,   454,   407,   473,    -1,    -1,   470,    -1,
     471,    -1,   255,    -1,   256,    -1,   109,    -1,   110,    -1,
     184,    -1,   185,    -1,   251,    -1,   252,    -1,   359,    -1,
     360,    -1,   249,    -1,   250,    -1,   247,    -1,   248,    -1,
     725,    -1,   726,    -1,   727,    -1,   728,    -1,   729,    -1,
     730,    -1,   731,    -1,   732,    -1,   725,   409,   726,    -1,
     727,   409,   728,    -1,   727,   409,   729,    -1,   727,   409,
     730,    -1,   728,   409,   729,    -1,   728,   409,   730,    -1,
     729,   409,   730,    -1,    -1,   736,    -1,   734,    11,   704,
      -1,   734,    73,   812,    -1,   734,    41,   407,   473,   734,
      -1,   481,   734,    -1,   482,   734,    -1,   734,   481,   734,
      -1,   734,   482,   734,    -1,   734,   483,   734,    -1,   734,
     484,   734,    -1,   734,   485,   734,    -1,   734,   486,   734,
      -1,   734,   477,   734,    -1,   734,   478,   734,    -1,   734,
     479,   734,    -1,   734,    16,   734,    -1,   734,    17,   734,
      -1,   734,    18,   734,    -1,   734,   760,   734,    -1,   760,
     734,    -1,   734,   760,    -1,   734,    33,   734,    -1,   734,
     287,   734,    -1,   267,   734,    -1,   474,   734,    -1,   734,
     173,   734,    -1,   734,   229,   734,    -1,   734,   229,   734,
     143,   734,    -1,   734,   474,   229,   734,    -1,   734,   474,
     229,   734,   143,   734,    -1,   734,   189,   734,    -1,   734,
     189,   734,   143,   734,    -1,   734,   474,   189,   734,    -1,
     734,   474,   189,   734,   143,   734,    -1,   734,   374,   409,
     734,    -1,   734,   374,   409,   734,   143,   734,    -1,   734,
     474,   374,   409,   734,    -1,   734,   474,   374,   409,   734,
     143,   734,    -1,   734,   215,   272,    -1,   734,   216,    -1,
     734,   215,   267,   272,    -1,   734,   267,   272,    -1,   734,
     270,    -1,   754,    -1,   495,   756,   496,    -1,   488,   765,
     489,    -1,   754,    15,   734,    -1,   784,    15,   734,    -1,
     754,   293,   754,    -1,   734,   215,   416,    -1,   734,   215,
     267,   416,    -1,   734,   215,   156,    -1,   734,   215,   267,
     156,    -1,   734,   215,   427,    -1,   734,   215,   267,   427,
      -1,   734,   215,   130,   168,   734,    -1,   734,   215,   267,
     130,   168,   734,    -1,   734,   215,   277,   490,   768,   491,
      -1,   734,   215,   267,   277,   490,   768,   491,    -1,   734,
      48,   789,   735,    33,   734,    -1,   734,   474,    48,   789,
     735,    33,   734,    -1,   734,    48,   395,   735,    33,   734,
      -1,   734,   474,    48,   395,   735,    33,   734,    -1,   734,
     194,   778,    -1,   734,   474,   194,   778,    -1,   734,   762,
     757,   628,    -1,   734,   762,   757,   490,   734,   491,    -1,
     115,    -1,    35,   488,   765,   489,    -1,   736,    -1,   735,
      11,   704,    -1,   481,   735,    -1,   482,   735,    -1,   735,
     481,   735,    -1,   735,   482,   735,    -1,   735,   483,   735,
      -1,   735,   484,   735,    -1,   735,   485,   735,    -1,   735,
     486,   735,    -1,   735,   477,   735,    -1,   735,   478,   735,
      -1,   735,   479,   735,    -1,   735,    16,   735,    -1,   735,
      17,   735,    -1,   735,    18,   735,    -1,   735,   760,   735,
      -1,   760,   735,    -1,   735,   760,    -1,   735,   215,   130,
     168,   735,    -1,   735,   215,   267,   130,   168,   735,    -1,
     735,   215,   277,   490,   768,   491,    -1,   735,   215,   267,
     277,   490,   768,   491,    -1,   784,    -1,   804,    -1,   497,
       9,    -1,   498,   788,    -1,    10,   788,    -1,   490,   734,
     491,   788,    -1,   779,    -1,   738,   788,    -1,   628,    -1,
     628,   787,    -1,   150,   628,    -1,   672,   490,   764,   491,
      -1,   803,   490,   491,    -1,   803,   490,   766,   642,   641,
     491,    -1,   803,   490,   441,   767,   642,   641,   491,    -1,
     803,   490,   766,   494,   441,   767,   642,   641,   491,    -1,
     803,   490,    27,   766,   642,   641,   491,    -1,   803,   490,
     130,   766,   642,   641,   491,    -1,   803,   490,   483,   491,
      -1,   737,   741,   742,   746,    -1,   740,    -1,   737,    -1,
     740,    -1,    74,   163,   490,   734,   491,    -1,    99,    -1,
     102,    -1,   102,   490,   805,   491,    -1,   103,    -1,   103,
     490,   805,   491,    -1,   234,    -1,   234,   490,   805,   491,
      -1,   235,    -1,   235,   490,   805,   491,    -1,   100,    -1,
     104,    -1,   368,    -1,   432,    -1,    98,    -1,   101,    -1,
      61,   490,   734,    36,   704,   491,    -1,   419,   490,   734,
      36,   704,   491,    -1,   155,   490,   769,   491,    -1,   294,
     490,   771,   491,    -1,   308,   490,   773,   491,    -1,   393,
     490,   774,   491,    -1,   413,   490,   734,    36,   704,   491,
      -1,   415,   490,    53,   777,   491,    -1,   415,   490,   225,
     777,   491,    -1,   415,   490,   410,   777,   491,    -1,   415,
     490,   777,   491,    -1,   273,   490,   734,   494,   734,   491,
      -1,    72,   490,   764,   491,    -1,   453,   177,   490,   643,
     491,    -1,    -1,   159,   490,   449,   734,   491,    -1,    -1,
     451,   744,    -1,    -1,   745,    -1,   744,   494,   745,    -1,
     807,    36,   747,    -1,   292,   747,    -1,   292,   807,    -1,
      -1,   490,   748,   749,   642,   750,   491,    -1,   807,    -1,
      -1,   301,    54,   764,    -1,    -1,   323,   751,    -1,   351,
     751,    -1,    -1,   752,    -1,    48,   752,    33,   752,    -1,
     422,   310,    -1,   422,   162,    -1,    97,   350,    -1,   734,
     310,    -1,   734,   162,    -1,   350,   490,   764,   491,    -1,
     350,   490,   491,    -1,   753,    -1,   490,   764,   494,   734,
     491,    -1,   808,   499,   734,    -1,   755,    -1,   756,   494,
     755,    -1,    34,    -1,   379,    -1,    27,    -1,     8,    -1,
     759,    -1,   481,    -1,   482,    -1,   483,    -1,   484,    -1,
     485,    -1,   486,    -1,   477,    -1,   478,    -1,   479,    -1,
      16,    -1,    17,    -1,    18,    -1,     8,    -1,   284,   490,
     763,   491,    -1,   758,    -1,   284,   490,   763,   491,    -1,
     758,    -1,   284,   490,   763,   491,    -1,   229,    -1,   474,
     229,    -1,   173,    -1,   474,   173,    -1,   189,    -1,   474,
     189,    -1,   758,    -1,   807,   492,   763,    -1,   734,    -1,
     764,   494,   734,    -1,   764,    -1,    -1,   767,    -1,   766,
     494,   767,    -1,   734,    -1,   815,    13,   734,    -1,   815,
      14,   734,    -1,   704,    -1,   768,   494,   704,    -1,   770,
     168,   734,    -1,    -1,     3,    -1,   725,    -1,   726,    -1,
     727,    -1,   728,    -1,   729,    -1,   730,    -1,   731,    -1,
     732,    -1,   806,    -1,   734,   772,   775,   776,    -1,   734,
     772,   775,    -1,   305,   734,    -1,   735,   194,   735,    -1,
      -1,   734,   775,   776,    -1,   734,   776,   775,    -1,   734,
     775,    -1,   734,   776,    -1,   764,    -1,    -1,   168,   734,
      -1,   163,   734,    -1,   734,   168,   764,    -1,   168,   764,
      -1,   764,    -1,   628,    -1,   490,   764,   491,    -1,    60,
     783,   780,   782,   141,    -1,   781,    -1,   780,   781,    -1,
     448,   734,   406,   734,    -1,   137,   734,    -1,    -1,   734,
      -1,    -1,   807,    -1,   807,   787,    -1,   492,   802,    -1,
     488,   734,   489,    -1,   488,   786,   499,   786,   489,    -1,
     734,    -1,    -1,   785,    -1,   787,   785,    -1,    -1,   788,
     785,    -1,    40,    -1,    -1,   791,    -1,    -1,   792,    -1,
     791,   494,   792,    -1,   734,    36,   817,    -1,   734,     3,
      -1,   734,    -1,   483,   794,   797,    -1,   807,   492,   483,
     794,   797,    -1,   146,   490,   800,   491,    -1,   146,   807,
      -1,   793,    -1,    -1,   734,    36,   807,    -1,   795,    -1,
     796,   494,   795,    -1,   338,   490,   796,   491,    -1,   338,
     795,    -1,    -1,   799,    -1,   798,   494,   799,    -1,   808,
      -1,   807,   787,    -1,   801,    -1,   800,   494,   801,    -1,
     807,    -1,   816,    -1,   810,    -1,   807,   787,    -1,   805,
      -1,     4,    -1,   806,   788,    -1,     6,    -1,     7,    -1,
     803,   806,    -1,   803,   490,   766,   642,   641,   491,   806,
      -1,   707,   806,    -1,   723,   490,   734,   491,   733,    -1,
     723,   805,   733,    -1,   723,   806,   733,    -1,   416,    -1,
     156,    -1,   272,    -1,     9,    -1,     5,    -1,     3,    -1,
     876,    -1,   877,    -1,   807,    -1,     5,    -1,     3,    -1,
     876,    -1,   881,    -1,     3,    -1,   876,    -1,   878,    -1,
       3,    -1,   876,    -1,   879,    -1,   807,    -1,   807,   813,
      -1,   492,   802,    -1,   813,   492,   802,    -1,   490,   800,
     491,    -1,    -1,   809,    -1,     3,    -1,   880,    -1,   876,
      -1,   882,    -1,   816,    -1,     5,    -1,   312,   801,   819,
      36,   820,    -1,   490,   768,   491,    -1,    -1,   627,    -1,
     521,    -1,   609,    -1,   859,    -1,    93,   355,   807,   822,
      -1,    93,   355,   187,   267,   150,   807,   822,    -1,   822,
     823,    -1,    -1,   553,    -1,   824,    -1,   540,    -1,   871,
      -1,    93,   830,   197,   827,   828,   282,   799,   826,   490,
     537,   491,   829,   698,    -1,    93,   830,   197,   827,   187,
     267,   150,   581,   282,   799,   826,   490,   537,   491,   829,
     698,    -1,   807,    -1,   433,   825,    -1,    -1,    82,    -1,
      -1,   581,    -1,    -1,   452,   566,    -1,    -1,   426,    -1,
      -1,    29,   398,   692,   369,   355,   801,    -1,    29,   398,
     187,   150,   692,   369,   355,   801,    -1,    29,   363,   799,
     369,   355,   801,    -1,    29,   363,   187,   150,   799,   369,
     355,   801,    -1,    29,   445,   799,   369,   355,   801,    -1,
      29,   445,   187,   150,   799,   369,   355,   801,    -1,   164,
      68,    -1,    68,    -1,   152,   108,   806,   617,    -1,   193,
     108,   806,    -1,   151,   838,    -1,   151,   842,   836,   838,
      -1,   151,   443,   838,    -1,   151,   490,   841,   491,   838,
      -1,   443,    -1,    -1,   843,    -1,   547,    -1,    -1,   627,
      -1,   521,    -1,   609,    -1,   859,    -1,   873,    -1,     3,
      -1,   876,    -1,   880,    -1,   839,    -1,   806,    -1,   844,
      -1,   841,   494,   844,    -1,    32,    -1,    31,    -1,   416,
      -1,   156,    -1,   282,    -1,   840,    -1,   845,   837,    -1,
     839,    -1,   842,    -1,   369,   847,    -1,   369,   233,   847,
      -1,   369,   367,   847,    -1,   369,   174,   847,    -1,   848,
      -1,   869,   168,    97,    -1,   407,   473,   850,    -1,   355,
     806,    -1,   869,   409,   851,    -1,   869,   479,   851,    -1,
     869,   409,   115,    -1,   869,   479,   115,    -1,   843,    -1,
     547,    -1,   806,    -1,     3,    -1,   723,   806,   733,    -1,
     723,   490,   805,   491,   806,    -1,   547,    -1,   115,    -1,
     233,    -1,   849,    -1,   851,   494,   849,    -1,   232,   853,
      -1,   806,    -1,   434,   856,   858,   836,    -1,   434,   856,
     858,   836,   799,    -1,   434,   856,   858,   836,   863,    -1,
     434,   490,   857,   491,    -1,   434,   490,   857,   491,   799,
     814,    -1,   842,    -1,   443,    -1,   167,    -1,   169,    -1,
       3,    -1,   169,    -1,    -1,   855,    -1,   857,   494,   855,
      -1,   167,    -1,    -1,   525,   120,   168,   860,   862,   861,
     530,    -1,   692,    -1,   692,   807,    -1,   692,    36,   807,
      -1,   449,   734,    -1,    -1,   433,   683,    -1,    -1,   842,
     836,    -1,   842,   836,   799,   814,    -1,   340,   866,    -1,
     869,    -1,    27,    -1,   865,    -1,   407,   473,    -1,   411,
     217,   228,    -1,   868,   627,    -1,   394,   627,    -1,   394,
     869,    -1,   868,   869,    -1,   868,   407,   473,    -1,   868,
     411,   217,   228,    -1,   868,    27,    -1,   373,    -1,   125,
      -1,   807,    -1,   869,   492,   807,    -1,    56,   737,    -1,
      93,   597,   445,   799,   587,   829,    36,   627,   872,    -1,
      93,   287,   338,   597,   445,   799,   587,   829,    36,   627,
     872,    -1,    93,   597,   328,   445,   799,   490,   591,   491,
     829,    36,   627,   872,    -1,    93,   287,   338,   597,   328,
     445,   799,   490,   591,   491,   829,    36,   627,   872,    -1,
     452,    67,   285,    -1,   452,    59,    67,   285,    -1,   452,
     233,    67,   285,    -1,    -1,    93,   597,   398,   875,    36,
     627,   874,    -1,    93,   597,   398,   187,   267,   150,   875,
      36,   627,   874,    -1,   452,   107,    -1,   452,   265,   107,
      -1,    -1,   799,   587,   573,   565,    -1,    19,    -1,    20,
      -1,    21,    -1,    22,    -1,    23,    -1,    24,    -1,    25,
      -1,    26,    -1,    28,    -1,    29,    -1,    30,    -1,    38,
      -1,    39,    -1,    41,    -1,    42,    -1,    43,    -1,    45,
      -1,    46,    -1,    47,    -1,    54,    -1,    55,    -1,    56,
      -1,    57,    -1,    58,    -1,    59,    -1,    62,    -1,    63,
      -1,    66,    -1,    68,    -1,    69,    -1,    70,    -1,    71,
      -1,    76,    -1,    77,    -1,    78,    -1,    79,    -1,    80,
      -1,    81,    -1,    83,    -1,    84,    -1,    85,    -1,    87,
      -1,    88,    -1,    89,    -1,    90,    -1,    91,    -1,    92,
      -1,    95,    -1,    96,    -1,    97,    -1,   105,    -1,   106,
      -1,   107,    -1,   108,    -1,   109,    -1,   110,    -1,   111,
      -1,   114,    -1,   116,    -1,   118,    -1,   119,    -1,   120,
      -1,   121,    -1,   122,    -1,   123,    -1,   125,    -1,   126,
      -1,   127,    -1,   128,    -1,   129,    -1,   132,    -1,   133,
      -1,   134,    -1,   135,    -1,   136,    -1,   138,    -1,   139,
      -1,   140,    -1,   142,    -1,   143,    -1,   144,    -1,   146,
      -1,   147,    -1,   148,    -1,   149,    -1,   151,    -1,   152,
      -1,   153,    -1,   154,    -1,   157,    -1,   159,    -1,   160,
      -1,   162,    -1,   164,    -1,   166,    -1,   170,    -1,   171,
      -1,   172,    -1,   174,    -1,   176,    -1,   180,    -1,   182,
      -1,   183,    -1,   184,    -1,   185,    -1,   186,    -1,   187,
      -1,   190,    -1,   191,    -1,   192,    -1,   193,    -1,   195,
      -1,   196,    -1,   197,    -1,   198,    -1,   199,    -1,   200,
      -1,   202,    -1,   205,    -1,   206,    -1,   207,    -1,   208,
      -1,   214,    -1,   217,    -1,   219,    -1,   220,    -1,   221,
      -1,   222,    -1,   223,    -1,   226,    -1,   228,    -1,   231,
      -1,   232,    -1,   233,    -1,   236,    -1,   237,    -1,   238,
      -1,   239,    -1,   240,    -1,   242,    -1,   243,    -1,   244,
      -1,   245,    -1,   246,    -1,   247,    -1,   248,    -1,   249,
      -1,   250,    -1,   251,    -1,   252,    -1,   253,    -1,   254,
      -1,   255,    -1,   256,    -1,   257,    -1,   258,    -1,   259,
      -1,   263,    -1,   264,    -1,   265,    -1,   268,    -1,   269,
      -1,   271,    -1,   274,    -1,   276,    -1,   277,    -1,   278,
      -1,   280,    -1,   281,    -1,   284,    -1,   285,    -1,   286,
      -1,   289,    -1,   292,    -1,   295,    -1,   296,    -1,   297,
      -1,   298,    -1,   299,    -1,   300,    -1,   301,    -1,   302,
      -1,   303,    -1,   304,    -1,   306,    -1,   307,    -1,   309,
      -1,   310,    -1,   312,    -1,   313,    -1,   314,    -1,   316,
      -1,   317,    -1,   318,    -1,   319,    -1,   320,    -1,   321,
      -1,   322,    -1,   323,    -1,   324,    -1,   326,    -1,   327,
      -1,   328,    -1,   329,    -1,   331,    -1,   332,    -1,   333,
      -1,   334,    -1,   335,    -1,   336,    -1,   337,    -1,   338,
      -1,   339,    -1,   340,    -1,   341,    -1,   342,    -1,   344,
      -1,   345,    -1,   347,    -1,   348,    -1,   349,    -1,   351,
      -1,   352,    -1,   353,    -1,   354,    -1,   355,    -1,   356,
      -1,   357,    -1,   358,    -1,   359,    -1,   360,    -1,   361,
      -1,   363,    -1,   364,    -1,   365,    -1,   366,    -1,   367,
      -1,   369,    -1,   371,    -1,   372,    -1,   373,    -1,   375,
      -1,   376,    -1,   378,    -1,   380,    -1,   381,    -1,   382,
      -1,   383,    -1,   384,    -1,   385,    -1,   386,    -1,   387,
      -1,   388,    -1,   389,    -1,   390,    -1,   392,    -1,   394,
      -1,   396,    -1,   397,    -1,   399,    -1,   401,    -1,   402,
      -1,   403,    -1,   404,    -1,   405,    -1,   411,    -1,   412,
      -1,   414,    -1,   417,    -1,   418,    -1,   420,    -1,   421,
      -1,   422,    -1,   423,    -1,   424,    -1,   427,    -1,   428,
      -1,   429,    -1,   430,    -1,   431,    -1,   434,    -1,   435,
      -1,   436,    -1,   437,    -1,   438,    -1,   442,    -1,   444,
      -1,   445,    -1,   446,    -1,   447,    -1,   450,    -1,   453,
      -1,   454,    -1,   455,    -1,   456,    -1,   457,    -1,   458,
      -1,   470,    -1,   471,    -1,   472,    -1,   473,    -1,    48,
      -1,    49,    -1,    51,    -1,    52,    -1,    64,    -1,    65,
      -1,    72,    -1,   112,    -1,   113,    -1,   150,    -1,   155,
      -1,   161,    -1,   178,    -1,   179,    -1,   204,    -1,   209,
      -1,   210,    -1,   212,    -1,   241,    -1,   260,    -1,   262,
      -1,   266,    -1,   273,    -1,   275,    -1,   290,    -1,   294,
      -1,   308,    -1,   311,    -1,   325,    -1,   350,    -1,   370,
      -1,   377,    -1,   391,    -1,   393,    -1,   407,    -1,   408,
      -1,   413,    -1,   415,    -1,   419,    -1,   439,    -1,   440,
      -1,   459,    -1,   460,    -1,   461,    -1,   462,    -1,   463,
      -1,   464,    -1,   465,    -1,   466,    -1,   467,    -1,   468,
      -1,   469,    -1,    44,    -1,    50,    -1,    74,    -1,    82,
      -1,    94,    -1,   101,    -1,   167,    -1,   169,    -1,   173,
      -1,   189,    -1,   203,    -1,   215,    -1,   216,    -1,   218,
      -1,   227,    -1,   229,    -1,   241,    -1,   261,    -1,   270,
      -1,   291,    -1,   293,    -1,   346,    -1,   374,    -1,   391,
      -1,   400,    -1,   443,    -1,    44,    -1,    50,    -1,    74,
      -1,    82,    -1,    94,    -1,   101,    -1,   167,    -1,   169,
      -1,   173,    -1,   189,    -1,   203,    -1,   215,    -1,   216,
      -1,   218,    -1,   227,    -1,   229,    -1,   261,    -1,   270,
      -1,   291,    -1,   293,    -1,   346,    -1,   374,    -1,   400,
      -1,   419,    -1,   443,    -1,    48,    -1,    49,    -1,    51,
      -1,    52,    -1,    65,    -1,    64,    -1,    72,    -1,   112,
      -1,   113,    -1,   150,    -1,   155,    -1,   161,    -1,   178,
      -1,   179,    -1,   204,    -1,   210,    -1,   212,    -1,   209,
      -1,   241,    -1,   260,    -1,   262,    -1,   266,    -1,   273,
      -1,   275,    -1,   290,    -1,   294,    -1,   308,    -1,   311,
      -1,   325,    -1,   350,    -1,   370,    -1,   377,    -1,   391,
      -1,   393,    -1,   407,    -1,   408,    -1,   413,    -1,   415,
      -1,   419,    -1,   439,    -1,   440,    -1,   459,    -1,   460,
      -1,   461,    -1,   462,    -1,   463,    -1,   464,    -1,   465,
      -1,   466,    -1,   467,    -1,   468,    -1,   469,    -1,    44,
      -1,    50,    -1,    74,    -1,    82,    -1,    94,    -1,   101,
      -1,   167,    -1,   169,    -1,   173,    -1,   189,    -1,   203,
      -1,   215,    -1,   216,    -1,   218,    -1,   227,    -1,   229,
      -1,   241,    -1,   261,    -1,   270,    -1,   291,    -1,   293,
      -1,   346,    -1,   374,    -1,   391,    -1,   400,    -1,   419,
      -1,   443,    -1,    27,    -1,    31,    -1,    32,    -1,    33,
      -1,    34,    -1,    35,    -1,    36,    -1,    37,    -1,    40,
      -1,    53,    -1,    60,    -1,    61,    -1,    67,    -1,    73,
      -1,    75,    -1,    86,    -1,    93,    -1,    98,    -1,    99,
      -1,   100,    -1,   102,    -1,   103,    -1,   104,    -1,   115,
      -1,   117,    -1,   124,    -1,   130,    -1,   131,    -1,   137,
      -1,   141,    -1,   145,    -1,   156,    -1,   158,    -1,   163,
      -1,   165,    -1,   168,    -1,   175,    -1,   177,    -1,   181,
      -1,   188,    -1,   194,    -1,   201,    -1,   211,    -1,   213,
      -1,   224,    -1,   225,    -1,   230,    -1,   234,    -1,   235,
      -1,   267,    -1,   272,    -1,   279,    -1,   282,    -1,   283,
      -1,   287,    -1,   288,    -1,   305,    -1,   315,    -1,   330,
      -1,   343,    -1,   362,    -1,   368,    -1,   379,    -1,   395,
      -1,   398,    -1,   406,    -1,   409,    -1,   410,    -1,   416,
      -1,   425,    -1,   426,    -1,   432,    -1,   433,    -1,   441,
      -1,   448,    -1,   449,    -1,   451,    -1,   452,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   465,   465,   481,   493,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   537,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      13,    19,    25,     7,    17,    18,    21,    23,     6,    15,
      25,    35,    45,    55,    65,    75,    85,    95,   106,   117,
     127,   140,   141,     8,    21,    27,    34,    40,    47,    57,
      61,    70,    79,    88,    95,    96,   101,   113,   118,   143,
     153,   163,   169,   180,   191,   206,   207,   213,   214,   219,
     220,   226,   227,   231,   232,   237,   239,   245,   246,   250,
     251,   256,     7,    14,    22,     9,    19,    32,    33,     7,
      14,    31,    51,    52,     9,    17,    29,    30,    34,    35,
      36,    41,    42,    43,    48,    52,    56,    60,    64,    68,
      72,    76,    80,    84,    88,    92,    97,   101,   105,   112,
     113,   117,   118,   119,     2,     9,    15,    21,    28,    35,
      45,    46,    47,     7,    21,    36,    56,    57,    84,    85,
      86,    87,    88,    89,    93,    94,    99,   104,   105,   106,
     107,   108,   113,   120,   121,   122,   139,   146,   153,   163,
     173,   185,   193,   202,   211,   230,   237,   242,   244,   246,
     248,   251,   256,   257,   261,   262,   263,   264,   269,   273,
     274,   279,   286,   291,   292,   293,   294,   295,   296,   297,
     298,   304,   305,   309,   314,   321,   328,   335,   347,   348,
     349,   350,   354,   359,   360,   361,   366,   371,   372,   373,
     374,   375,   376,   381,   404,   408,   415,   416,   420,   424,
     425,   426,   430,   434,   442,   443,   448,   449,   453,   461,
     462,   467,   468,   472,   477,   481,   485,   490,   498,   499,
     503,   504,   510,   521,   534,   548,   562,   576,   590,   613,
     617,   624,   628,   636,   641,   648,   658,   659,   660,   661,
     662,   669,   676,   677,   682,   683,     9,    19,    29,    39,
      49,    59,    69,    79,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   112,
     113,   114,   115,   116,   117,   118,   123,   124,   129,   130,
     131,   136,   137,   138,   141,   142,     7,    18,    19,    23,
      27,     7,     1,    30,    53,    54,    59,    63,    68,    72,
      80,    81,    85,    86,    91,    92,    96,    97,   102,   103,
     104,   105,   106,   111,   119,   123,   128,   129,   134,   138,
     143,   147,   151,   155,   159,   163,   167,   171,   175,   179,
     183,   187,   191,   195,   203,   209,   210,   211,   216,   220,
      47,    48,    52,    53,    68,    69,    76,    84,    92,   100,
     108,   116,   127,   128,   155,   170,   186,   187,   206,   210,
     214,   231,   238,   245,   255,   256,   259,   271,   282,   290,
     295,   300,   305,   310,   318,   326,   331,   336,   343,   344,
     348,   349,   350,   357,   358,   362,   363,   367,   368,   372,
     373,   377,   381,   382,   385,   394,   405,   406,   407,   410,
     411,   412,   416,   417,   418,   419,   423,   424,   428,   430,
     446,   448,   453,   456,   464,   468,   472,   476,   480,   484,
     491,   496,   503,   504,   508,   512,   516,   520,   527,   534,
     535,   540,   541,   545,   546,   554,   574,   575,   577,   582,
     583,   587,   588,   591,   592,   617,   618,   622,   623,   627,
     628,   629,   630,   631,   635,   648,   655,   662,   669,   670,
     674,   675,   679,   680,   684,   685,   689,   690,   694,   705,
     706,   707,   708,   712,   713,   718,   719,   720,   729,   735,
     753,   754,   758,   759,   765,   771,   779,   787,   796,   805,
     809,   835,   839,   852,   866,   881,   893,   909,   915,   920,
     926,   933,   934,   942,   946,   950,   956,   963,   968,   969,
     970,   971,   975,   976,   988,   989,   994,  1001,  1008,  1015,
    1047,  1058,  1071,  1076,  1077,  1080,  1081,  1084,  1085,  1090,
    1091,  1096,  1100,  1106,  1127,  1135,  1148,  1151,  1155,  1155,
    1157,  1162,  1169,  1174,  1180,  1185,  1191,  1197,  1206,  1208,
    1211,  1215,  1216,  1217,  1218,  1219,  1220,  1225,  1245,  1246,
    1247,  1248,  1259,  1273,  1274,  1280,  1285,  1290,  1295,  1300,
    1305,  1310,  1315,  1321,  1327,  1333,  1340,  1362,  1371,  1375,
    1383,  1387,  1395,  1407,  1428,  1432,  1438,  1442,  1455,  1463,
    1473,  1475,  1477,  1479,  1481,  1483,  1488,  1489,  1496,  1505,
    1513,  1522,  1533,  1541,  1542,  1543,  1547,  1547,  1550,  1550,
    1553,  1553,  1556,  1556,  1559,  1559,  1562,  1562,  1565,  1565,
    1568,  1568,  1571,  1573,  1575,  1577,  1579,  1581,  1583,  1585,
    1587,  1592,  1597,  1603,  1610,  1615,  1621,  1627,  1658,  1660,
    1662,  1670,  1685,  1687,  1689,  1691,  1693,  1695,  1697,  1699,
    1701,  1703,  1705,  1707,  1709,  1711,  1714,  1716,  1718,  1721,
    1723,  1725,  1727,  1730,  1735,  1740,  1747,  1752,  1759,  1764,
    1772,  1777,  1786,  1794,  1802,  1810,  1828,  1836,  1844,  1852,
    1860,  1868,  1872,  1876,  1880,  1888,  1896,  1912,  1920,  1928,
    1936,  1944,  1952,  1960,  1964,  1968,  1972,  1976,  1984,  1992,
    2000,  2008,  2028,  2050,  2061,  2068,  2082,  2098,  2100,  2102,
    2104,  2106,  2108,  2110,  2112,  2114,  2116,  2118,  2120,  2122,
    2124,  2126,  2128,  2130,  2132,  2134,  2136,  2140,  2144,  2148,
    2162,  2163,  2164,  2171,  2183,  2198,  2210,  2212,  2224,  2235,
    2259,  2270,  2279,  2283,  2290,  2298,  2306,  2317,  2325,  2353,
    2388,  2399,  2400,  2407,  2413,  2417,  2421,  2425,  2429,  2433,
    2437,  2441,  2445,  2449,  2453,  2457,  2461,  2465,  2469,  2473,
    2475,  2477,  2481,  2490,  2495,  2502,  2517,  2524,  2528,  2532,
    2536,  2540,  2554,  2555,  2559,  2560,  2568,  2569,  2573,  2574,
    2579,  2587,  2589,  2603,  2606,  2633,  2634,  2637,  2638,  2649,
    2655,  2662,  2671,  2688,  2733,  2741,  2749,  2757,  2765,  2786,
    2787,  2790,  2791,  2795,  2805,  2806,  2808,  2809,  2810,  2813,
    2814,  2817,  2818,  2819,  2820,  2821,  2822,  2823,  2824,  2825,
    2826,  2827,  2828,  2831,  2833,  2838,  2840,  2845,  2847,  2849,
    2851,  2853,  2855,  2857,  2859,  2873,  2875,  2879,  2883,  2890,
    2895,  2902,  2906,  2912,  2916,  2925,  2936,  2937,  2941,  2945,
    2952,  2953,  2954,  2955,  2956,  2957,  2958,  2959,  2960,  2961,
    2971,  2975,  2982,  2989,  2990,  3006,  3010,  3015,  3019,  3034,
    3039,  3043,  3046,  3049,  3050,  3051,  3054,  3061,  3071,  3085,
    3086,  3090,  3101,  3102,  3105,  3106,  3109,  3113,  3120,  3124,
    3132,  3143,  3144,  3148,  3149,  3153,  3154,  3157,  3158,  3168,
    3169,  3173,  3174,  3177,  3193,  3201,  3209,  3224,  3242,  3243,
    3246,  3247,  3250,  3254,  3255,  3258,  3259,  3260,  3270,  3271,
    3282,  3286,  3313,  3315,  3320,  3322,  3332,  3335,  3346,  3350,
    3354,  3366,  3370,  3379,  3386,  3424,  3428,  3432,  3436,  3440,
    3444,  3448,  3454,  3455,  3471,  3472,  3473,  3476,  3477,  3483,
    3484,  3485,  3488,  3489,  3490,  3493,  3494,  3495,  3498,  3499,
    3502,  3504,  3509,  3510,  3513,  3521,  3522,  3523,  3524,  3527,
    3528,     7,    18,    19,    23,    24,    25,    26,     7,    16,
      34,    41,    46,    47,    48,    49,     8,    33,    62,    66,
      67,    72,    73,    78,    79,    83,    84,    89,    90,     7,
      16,    25,    34,    43,    52,     5,    11,     7,    20,     9,
      16,    26,    33,    44,    45,    50,    51,    52,    57,    58,
      59,    60,    61,    65,    66,    67,    72,    73,    78,    82,
      90,    91,    96,    97,    98,   104,   109,   117,   118,    10,
      16,    22,    28,    38,    39,    47,    58,    70,    78,    86,
      93,   103,   105,   111,   115,   119,   134,   141,   142,   143,
     147,   148,     7,    16,     8,    22,    36,    48,    56,    70,
      71,    72,    73,    74,    87,    88,    93,    94,    98,    99,
       7,    21,    25,    32,    43,    44,    50,    51,     9,    19,
       2,     7,    14,    24,    25,    32,     3,    10,    17,    24,
      31,    38,    45,    55,    55,    57,    58,     6,     8,    21,
      34,    52,    74,    75,    76,    77,    11,    24,    41,    42,
      43,    48,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION", "CONCURRENTLY",
  "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS",
  "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P",
  "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE",
  "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP",
  "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P",
  "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P", "DECLARE", "DEFAULT",
  "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER",
  "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY",
  "DISABLE_P", "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P",
  "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED",
  "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING",
  "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION",
  "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P",
  "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE",
  "FROM", "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL",
  "GRANT", "GRANTED", "GROUP_P", "GROUPING", "GROUPING_ID", "HANDLER",
  "HAVING", "HEADER_P", "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P",
  "IGNORE", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P",
  "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT",
  "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P",
  "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER", "INTERSECT",
  "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN",
  "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P", "LEADING",
  "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL",
  "LOCALTIME", "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "LOCKED", "LOGGED",
  "MACRO", "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
  "MICROSECOND_P", "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P",
  "MINUTE_P", "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P",
  "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT",
  "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P",
  "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES",
  "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME",
  "REPEATABLE", "REPLACE", "REPLICA", "RESET", "RESTART", "RESTRICT",
  "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP",
  "ROW", "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS",
  "SCROLL", "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
  "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
  "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'{'", "'}'", "'#'", "'?'",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "CreateEnumStmt", "opt_enum_val_list", "enum_val_list",
  "RenameStmt", "opt_column", "InsertStmt", "insert_rest", "insert_target",
  "opt_conf_expr", "opt_with_clause", "insert_column_item", "set_clause",
  "opt_on_conflict", "index_elem", "returning_clause", "override_kind",
  "set_target_list", "opt_collate", "opt_class", "insert_column_list",
  "set_clause_list", "index_params", "set_target", "PragmaStmt",
  "CreateSeqStmt", "OptSeqOptList", "ExecuteStmt", "execute_param_clause",
  "AlterSeqStmt", "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem",
  "opt_by", "SignedIconst", "TransactionStmt", "opt_transaction",
  "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "type_name_list", "CreateFunctionStmt",
  "macro_alias", "param_list", "UpdateStmt", "CopyStmt", "copy_from",
  "copy_delimiter", "copy_generic_opt_arg_list", "opt_using", "opt_as",
  "opt_program", "copy_options", "copy_generic_opt_arg",
  "copy_generic_opt_elem", "opt_oids", "copy_opt_list", "opt_binary",
  "copy_opt_item", "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_item", "empty_grouping_set", "rollup_clause",
  "cube_clause", "grouping_sets_clause", "grouping_or_grouping_id",
  "having_clause", "for_locking_clause", "opt_for_locking_clause",
  "for_locking_items", "for_locking_item", "for_locking_strength",
  "locked_rels_list", "opt_nowait_or_skip", "values_clause", "from_clause",
  "from_list", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "sub_type", "all_Op", "MathOp", "qual_Op", "qual_all_Op", "subquery_Op",
  "any_operator", "expr_list", "opt_expr_list", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list", "target_list",
  "target_el", "except_list", "opt_except_list", "replace_list_el",
  "replace_list", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name", "attr_name", "func_name",
  "AexprConst", "Iconst", "Sconst", "ColId", "ColIdOrString",
  "type_function_name", "function_name_token", "type_name_token",
  "any_name", "attrs", "opt_name_list", "param_name", "ColLabel",
  "ColLabelOrString", "PrepareStmt", "prep_type_clause", "PreparableStmt",
  "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt", "IndexStmt",
  "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,    60,    62,    61,
     732,    43,    45,    42,    47,    37,    94,   733,    91,    93,
      40,    41,    46,    59,    44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   500,   501,   502,   502,   503,   503,   503,   503,   503,
     503,   503,   503,   503,   503,   503,   503,   503,   503,   503,
     503,   503,   503,   503,   503,   503,   503,   503,   503,   503,
     503,   503,   503,   503,   503,   503,   503,   503,   503,   503,
     504,   504,   504,   504,   504,   504,   504,   504,   505,   505,
     506,   506,   507,   507,   507,   507,   508,   508,   509,   509,
     509,   509,   509,   509,   509,   509,   509,   509,   509,   509,
     509,   509,   509,   509,   509,   509,   509,   509,   509,   509,
     509,   509,   509,   509,   509,   509,   509,   510,   510,   511,
     511,   511,   511,   512,   512,   513,   514,   514,   514,   515,
     515,   515,   515,   516,   517,   517,   518,   518,   519,   519,
     519,   519,   519,   519,   519,   519,   519,   519,   519,   519,
     519,   520,   520,   521,   522,   522,   522,   522,   522,   523,
     523,   524,   524,   524,   525,   525,   526,   527,   527,   528,
     528,   528,   529,   529,   529,   530,   530,   531,   531,   532,
     532,   533,   533,   534,   534,   535,   535,   536,   536,   537,
     537,   538,   539,   539,   539,   540,   540,   541,   541,   542,
     542,   542,   543,   543,   544,   544,   545,   545,   546,   546,
     546,   547,   547,   547,   547,   548,   548,   548,   548,   548,
     548,   548,   548,   548,   548,   548,   548,   548,   548,   549,
     549,   550,   550,   550,   551,   551,   551,   551,   551,   551,
     552,   552,   552,   553,   553,   553,   554,   554,   555,   555,
     555,   555,   555,   555,   556,   556,   557,   558,   558,   558,
     558,   558,   559,   559,   559,   559,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   561,   562,   563,   563,   563,
     563,   563,   564,   564,   565,   565,   565,   565,   566,   567,
     567,   568,   568,   569,   569,   569,   569,   569,   569,   569,
     569,   570,   570,   571,   572,   572,   572,   572,   573,   573,
     573,   573,   574,   575,   575,   575,   576,   577,   577,   577,
     577,   577,   577,   578,   579,   579,   580,   580,   581,   582,
     582,   582,   583,   583,   584,   584,   585,   585,   586,   587,
     587,   588,   588,   589,   590,   590,   590,   590,   591,   591,
     592,   592,   592,   593,   593,   593,   593,   593,   593,   594,
     594,   595,   595,   595,   595,   596,   597,   597,   597,   597,
     597,   597,   597,   597,   598,   598,   599,   599,   599,   599,
     599,   599,   599,   599,   600,   600,   600,   600,   600,   600,
     600,   600,   600,   600,   600,   600,   600,   600,   600,   601,
     601,   601,   601,   601,   601,   601,   602,   602,   603,   603,
     603,   604,   604,   604,   605,   605,   606,   607,   607,   608,
     608,   609,   610,   610,   611,   611,   612,   612,   613,   613,
     614,   614,   615,   615,   616,   616,   617,   617,   618,   618,
     618,   618,   618,   619,   620,   620,   621,   621,   622,   622,
     623,   623,   623,   623,   623,   623,   623,   623,   623,   623,
     623,   623,   623,   623,   624,   625,   625,   625,   626,   626,
     627,   627,   628,   628,   629,   629,   629,   629,   629,   629,
     629,   629,   630,   630,   631,   631,   631,   631,   631,   631,
     631,   632,   632,   632,   633,   633,   634,   635,   635,   636,
     636,   636,   636,   636,   636,   636,   636,   636,   637,   637,
     638,   638,   638,   639,   639,   640,   640,   641,   641,   642,
     642,   643,   644,   644,   645,   645,   646,   646,   646,   647,
     647,   647,   648,   648,   648,   648,   649,   649,   650,   650,
     650,   650,   651,   651,   652,   652,   652,   652,   652,   652,
     653,   653,   654,   654,   655,   655,   655,   655,   656,   657,
     657,   658,   658,   659,   659,   660,   661,   661,   661,   662,
     662,   663,   663,   664,   664,   665,   665,   666,   666,   667,
     667,   667,   667,   667,   668,   669,   670,   671,   672,   672,
     673,   673,   674,   674,   675,   675,   676,   676,   677,   678,
     678,   678,   678,   679,   679,   680,   680,   680,   681,   681,
     682,   682,   683,   683,   684,   684,   684,   684,   684,   684,
     684,   685,   685,   685,   685,   685,   685,   686,   686,   686,
     686,   687,   687,   688,   688,   688,   688,   688,   689,   689,
     689,   689,   690,   690,   691,   691,   692,   692,   692,   692,
     693,   693,   694,   695,   695,   696,   696,   697,   697,   698,
     698,   699,   699,   700,   701,   701,   702,   702,   703,   703,
     704,   704,   704,   704,   704,   704,   704,   704,   705,   705,
     705,   706,   706,   706,   706,   706,   706,   706,   707,   707,
     707,   707,   708,   709,   709,   710,   710,   710,   710,   710,
     710,   710,   710,   710,   710,   710,   711,   711,   712,   712,
     713,   713,   714,   715,   716,   716,   717,   717,   718,   719,
     720,   720,   720,   720,   720,   720,   721,   721,   722,   722,
     722,   722,   723,   724,   724,   724,   725,   725,   726,   726,
     727,   727,   728,   728,   729,   729,   730,   730,   731,   731,
     732,   732,   733,   733,   733,   733,   733,   733,   733,   733,
     733,   733,   733,   733,   733,   733,   733,   733,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   735,   735,   735,
     735,   735,   735,   735,   735,   735,   735,   735,   735,   735,
     735,   735,   735,   735,   735,   735,   735,   735,   735,   735,
     736,   736,   736,   736,   736,   736,   736,   736,   736,   736,
     736,   736,   737,   737,   737,   737,   737,   737,   737,   738,
     738,   739,   739,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   741,   741,   742,   742,   743,   743,   744,   744,
     745,   746,   746,   746,   747,   748,   748,   749,   749,   750,
     750,   750,   751,   751,   752,   752,   752,   752,   752,   753,
     753,   754,   754,   755,   756,   756,   757,   757,   757,   758,
     758,   759,   759,   759,   759,   759,   759,   759,   759,   759,
     759,   759,   759,   760,   760,   761,   761,   762,   762,   762,
     762,   762,   762,   762,   762,   763,   763,   764,   764,   765,
     765,   766,   766,   767,   767,   767,   768,   768,   769,   769,
     770,   770,   770,   770,   770,   770,   770,   770,   770,   770,
     771,   771,   772,   773,   773,   774,   774,   774,   774,   774,
     774,   775,   776,   777,   777,   777,   778,   778,   779,   780,
     780,   781,   782,   782,   783,   783,   784,   784,   785,   785,
     785,   786,   786,   787,   787,   788,   788,   789,   789,   790,
     790,   791,   791,   792,   792,   792,   792,   792,   793,   793,
     794,   794,   795,   796,   796,   797,   797,   797,   798,   798,
     799,   799,   800,   800,   801,   802,   803,   803,   804,   804,
     804,   804,   804,   804,   804,   804,   804,   804,   804,   804,
     804,   804,   805,   806,   807,   807,   807,   808,   808,   809,
     809,   809,   810,   810,   810,   811,   811,   811,   812,   812,
     813,   813,   814,   814,   815,   816,   816,   816,   816,   817,
     817,   818,   819,   819,   820,   820,   820,   820,   821,   821,
     822,   822,   823,   823,   823,   823,   824,   824,   825,   826,
     826,   827,   827,   828,   828,   829,   829,   830,   830,   831,
     831,   831,   831,   831,   831,   832,   832,   833,   834,   835,
     835,   835,   835,   836,   836,   837,   837,   837,   838,   838,
     838,   838,   838,   839,   839,   839,   840,   840,   841,   841,
     842,   842,   843,   843,   843,   843,   844,   845,   845,   846,
     846,   846,   846,   847,   847,   847,   847,   848,   848,   848,
     848,   849,   849,   850,   850,   850,   850,   850,   850,   850,
     851,   851,   852,   853,   854,   854,   854,   854,   854,   855,
     855,   855,   855,   855,   856,   856,   857,   857,   858,   858,
     859,   860,   860,   860,   861,   861,   862,   862,   863,   863,
     864,   865,   865,   866,   866,   866,   867,   867,   867,   867,
     867,   867,   867,   868,   868,   869,   869,   870,   871,   871,
     871,   871,   872,   872,   872,   872,   873,   873,   874,   874,
     874,   875,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     2,
       3,     2,     3,     8,     1,     0,     1,     3,     6,     6,
       8,     6,     8,     6,     8,     6,     8,     8,    10,     8,
      10,     1,     0,     7,     1,     4,     4,     7,     2,     1,
       3,     4,     3,     0,     1,     0,     2,     3,     5,     8,
       5,     0,     5,     5,     7,     2,     0,     1,     1,     1,
       3,     2,     0,     1,     0,     1,     3,     1,     3,     1,
       3,     2,     2,     4,     5,     5,     8,     1,     0,     3,
       9,    12,     3,     0,     4,     6,     1,     2,     1,     1,
       0,     1,     2,     2,     1,     2,     2,     1,     2,     3,
       2,     2,     2,     2,     3,     3,     3,     1,     3,     1,
       0,     1,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     0,     9,    12,    11,     0,     2,     1,     1,
       1,     1,     1,     1,     3,     0,     1,     2,     1,     1,
       2,     2,     3,     1,     1,     2,     2,     1,     2,     3,
       5,     3,     2,     5,     5,     2,     3,     1,     1,     2,
       2,     0,     4,     0,     3,     4,     4,     0,     3,     2,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     1,     2,     2,     2,     2,     2,
       2,     0,     3,     3,     3,     0,     1,     2,     1,     2,
       2,     2,     2,     4,     1,     3,     1,     3,     1,     1,
       1,     1,     3,     1,     2,     0,     1,     0,     1,     3,
       0,     2,     0,     3,     3,     1,     5,     3,     1,     3,
       1,     4,     5,     5,     6,     3,     7,     4,    11,     1,
       3,     2,     2,     2,     0,     3,     1,     1,     2,     2,
       2,     2,     1,     0,     1,     2,     6,     4,     6,     4,
       6,     8,     4,     6,     1,     1,     1,     1,     1,     2,
       1,     2,     1,     1,     1,     3,     3,     3,     3,     2,
       2,     1,     3,     1,     1,     1,     1,     3,     1,     1,
       0,     1,     1,     1,     1,     3,     6,     1,     1,     2,
       3,     8,    11,     9,     1,     1,     3,     0,     1,     3,
       1,     0,     1,     0,     1,     0,     1,     3,     1,     1,
       1,     3,     0,     2,     2,     0,     2,     0,     1,     0,
       1,     1,     1,     3,     3,     1,     1,     3,     3,     3,
       3,     4,     3,     2,     1,     1,     1,     1,     1,     3,
       1,     1,     3,     3,     1,     2,     4,     4,     2,     3,
       5,     5,     1,     1,    10,    10,     1,     2,     4,     4,
       4,     2,     2,     3,     1,     3,     6,     2,     0,     3,
       3,     4,     4,     4,     4,     3,     2,     1,     1,     0,
       1,     1,     0,     1,     5,     1,     0,     2,     0,     1,
       0,     3,     1,     3,     4,     3,     1,     1,     0,     2,
       2,     0,     2,     2,     1,     1,     1,     0,     2,     4,
       5,     4,     2,     3,     2,     2,     2,     2,     1,     2,
       3,     0,     1,     0,     5,     1,     4,     6,     2,     1,
       0,     4,     0,     1,     1,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     1,     3,     0,     1,     3,     1,
       1,     1,     1,     1,     2,     4,     4,     5,     1,     1,
       2,     0,     1,     3,     1,     0,     1,     2,     3,     2,
       4,     2,     3,     2,     0,     1,     2,     0,     4,     5,
       2,     0,     1,     3,     3,     3,     3,     3,     3,     1,
       4,     3,     4,     5,     4,     5,     4,     5,     2,     4,
       1,     1,     0,     1,     4,     5,     4,     0,     2,     2,
       2,     1,     1,     0,     4,     2,     1,     2,     2,     4,
       2,     6,     2,     1,     3,     4,     0,     2,     0,     2,
       0,     1,     3,     3,     2,     0,     2,     4,     1,     1,
       2,     3,     5,     6,     2,     3,     5,     5,     3,     4,
       0,     1,     1,     1,     1,     1,     2,     4,     1,     1,
       1,     1,     2,     3,     0,     1,     1,     1,     1,     1,
       2,     2,     2,     2,     2,     1,     3,     0,     1,     1,
       1,     1,     5,     2,     1,     1,     1,     1,     4,     1,
       2,     2,     1,     3,     3,     2,     1,     0,     5,     2,
       5,     2,     1,     3,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     3,     3,     3,     3,     3,     3,     0,     1,     3,
       3,     5,     2,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     3,
       3,     2,     2,     3,     3,     5,     4,     6,     3,     5,
       4,     6,     4,     6,     5,     7,     3,     2,     4,     3,
       2,     1,     3,     3,     3,     3,     3,     3,     4,     3,
       4,     3,     4,     5,     6,     6,     7,     6,     7,     6,
       7,     3,     4,     4,     6,     1,     4,     1,     3,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     2,     5,     6,     6,     7,
       1,     1,     2,     2,     2,     4,     1,     2,     1,     2,
       2,     4,     3,     6,     7,     9,     7,     7,     4,     4,
       1,     1,     1,     5,     1,     1,     4,     1,     4,     1,
       4,     1,     4,     1,     1,     1,     1,     1,     1,     6,
       6,     4,     4,     4,     4,     6,     5,     5,     5,     4,
       6,     4,     5,     0,     5,     0,     2,     0,     1,     3,
       3,     2,     2,     0,     6,     1,     0,     3,     0,     2,
       2,     0,     1,     4,     2,     2,     2,     2,     2,     4,
       3,     1,     5,     3,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     1,     4,     1,     4,     1,
       2,     1,     2,     1,     2,     1,     3,     1,     3,     1,
       0,     1,     3,     1,     3,     3,     1,     3,     3,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       4,     3,     2,     3,     0,     3,     3,     2,     2,     1,
       0,     2,     2,     3,     2,     1,     1,     3,     5,     1,
       2,     4,     2,     0,     1,     0,     1,     2,     2,     3,
       5,     1,     0,     1,     2,     0,     2,     1,     0,     1,
       0,     1,     3,     3,     2,     1,     3,     5,     4,     2,
       1,     0,     3,     1,     3,     4,     2,     0,     1,     3,
       1,     2,     1,     3,     1,     1,     1,     2,     1,     1,
       2,     1,     1,     2,     7,     2,     5,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     5,     3,     0,     1,     1,     1,     1,     4,     7,
       2,     0,     1,     1,     1,     1,    13,    16,     1,     2,
       0,     1,     0,     1,     0,     2,     0,     1,     0,     6,
       8,     6,     8,     6,     8,     2,     1,     4,     3,     2,
       4,     3,     5,     1,     0,     1,     1,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     3,     1,     3,     3,     2,     3,     3,     3,
       3,     1,     1,     1,     1,     3,     5,     1,     1,     1,
       1,     3,     2,     1,     4,     5,     5,     4,     6,     1,
       1,     1,     1,     1,     1,     0,     1,     3,     1,     0,
       7,     1,     2,     3,     2,     0,     2,     0,     2,     4,
       2,     1,     1,     1,     2,     3,     2,     2,     2,     2,
       3,     4,     2,     1,     1,     1,     3,     2,     9,    11,
      12,    14,     3,     4,     4,     0,     7,    10,     2,     3,
       0,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     135,   212,     0,  1141,  1140,   212,     0,  1116,   212,   419,
     343,     0,  1214,     0,   212,     0,   135,     0,     0,     0,
       0,     0,     0,     0,   212,   486,     0,  1213,   212,     0,
       0,  1185,     0,     0,     0,     0,     0,     2,     4,     7,
      18,    13,    30,    26,     0,    28,    16,    21,     6,    32,
      17,    20,    14,    33,    11,    31,   453,   440,   490,   452,
     134,   456,    29,    15,    25,     5,    10,    23,    24,    22,
    1124,    36,    27,    34,    19,     8,    35,    37,     0,     9,
      38,    12,   211,   210,   204,     0,     0,     0,     0,     0,
     205,  1054,  1232,  1233,  1234,  1235,  1236,  1237,  1238,  1239,
    1240,  1241,  1242,  1243,  1244,  1245,  1246,  1247,  1585,  1248,
    1249,  1250,  1533,  1534,  1586,  1535,  1536,  1251,  1252,  1253,
    1254,  1255,  1256,  1257,  1258,  1537,  1538,  1259,  1260,  1261,
    1262,  1263,  1539,  1587,  1264,  1265,  1266,  1267,  1268,  1269,
    1588,  1270,  1271,  1272,  1273,  1274,  1275,  1276,  1277,  1278,
    1589,  1279,  1280,  1281,  1590,  1282,  1283,  1284,  1285,  1286,
    1287,  1288,  1540,  1541,  1289,  1290,  1291,  1292,  1293,  1294,
    1295,  1296,  1297,  1298,  1299,  1300,  1301,  1302,  1303,  1304,
    1305,  1306,  1307,  1308,  1309,  1310,  1311,  1312,  1313,  1314,
    1315,  1316,  1542,  1317,  1318,  1319,  1320,  1543,  1321,  1322,
    1323,  1544,  1324,  1325,  1326,  1591,  1592,  1327,  1328,  1329,
    1593,  1330,  1331,  1545,  1546,  1332,  1333,  1334,  1335,  1336,
    1337,  1338,  1594,  1339,  1340,  1341,  1342,  1343,  1344,  1345,
    1346,  1347,  1348,  1349,  1595,  1547,  1350,  1351,  1352,  1353,
    1548,  1549,  1550,  1354,  1596,  1597,  1355,  1598,  1356,  1357,
    1358,  1359,  1360,  1361,  1599,  1362,  1600,  1363,  1364,  1365,
    1366,  1367,  1368,  1369,  1370,  1551,  1371,  1372,  1373,  1374,
    1375,  1376,  1377,  1378,  1379,  1380,  1381,  1382,  1383,  1384,
    1385,  1386,  1387,  1388,  1552,  1602,  1553,  1389,  1390,  1391,
    1554,  1392,  1393,  1603,  1394,  1555,  1395,  1556,  1396,  1397,
    1398,  1399,  1400,  1401,  1402,  1403,  1404,  1557,  1604,  1405,
    1605,  1558,  1406,  1407,  1408,  1409,  1410,  1411,  1412,  1413,
    1414,  1415,  1416,  1417,  1559,  1418,  1419,  1560,  1420,  1421,
    1422,  1423,  1424,  1425,  1426,  1427,  1428,  1429,  1430,  1431,
    1561,  1432,  1433,  1434,  1435,  1436,  1437,  1438,  1439,  1440,
    1441,  1442,  1443,  1444,  1445,  1446,  1447,  1448,  1449,  1606,
    1450,  1451,  1452,  1562,  1453,  1454,  1455,  1456,  1457,  1458,
    1459,  1460,  1461,  1462,  1463,  1464,  1465,  1466,  1467,  1468,
    1469,  1563,  1470,  1471,  1472,  1607,  1473,  1474,  1564,  1475,
    1476,  1477,  1478,  1479,  1480,  1481,  1482,  1483,  1484,  1485,
    1486,  1565,  1487,  1566,  1488,  1489,  1490,  1491,  1609,  1492,
    1493,  1494,  1495,  1496,  1567,  1568,  1497,  1498,  1569,  1499,
    1570,  1500,  1501,  1571,  1502,  1503,  1504,  1505,  1506,  1507,
    1508,  1509,  1510,  1511,  1512,  1513,  1514,  1515,  1516,  1572,
    1573,  1517,  1610,  1518,  1519,  1520,  1521,  1522,  1523,  1524,
    1525,  1526,  1527,  1528,  1574,  1575,  1576,  1577,  1578,  1579,
    1580,  1581,  1582,  1583,  1584,  1529,  1530,  1531,  1532,  1217,
       0,     0,  1036,  1055,  1056,  1064,   207,   418,   135,     0,
     387,     0,     0,   388,     0,     0,   337,   336,     0,  1107,
     342,     0,     0,     0,  1054,   101,  1551,  1420,  1565,    99,
    1034,  1055,     0,   362,   363,     0,   371,     0,   356,   360,
     357,     0,   381,   373,   382,   374,   355,   375,   364,   354,
       0,   383,     0,   358,     0,     0,     0,   208,   173,   343,
     135,     0,  1129,  1130,  1128,  1119,  1124,  1131,  1132,     0,
    1115,     0,  1053,  1173,  1172,   162,  1083,  1202,  1567,  1497,
    1215,  1203,  1200,  1201,   209,   485,   483,     0,  1010,  1330,
    1365,  1457,  1468,  1567,  1149,  1153,     0,   206,  1572,  1207,
       0,  1208,  1058,     0,   457,   616,  1057,  1030,  1184,     0,
    1189,     0,  1434,   461,   464,  1073,   462,   453,     0,     1,
     135,     0,     0,     0,   482,   482,     0,   482,     0,   445,
     453,   448,   452,     0,  1123,  1198,  1212,  1567,  1497,  1206,
    1209,  1338,     0,     0,  1338,     0,  1338,     0,  1338,     0,
       0,  1002,     0,  1003,  1037,  1085,  1086,  1084,     0,  1087,
     310,   341,   340,   339,   338,   343,  1338,  1091,  1068,     0,
       0,     0,     0,     0,     0,  1102,   102,   100,   369,   370,
       0,   361,   359,     0,  1065,  1611,   668,  1612,   697,   675,
     697,   697,  1613,  1614,  1615,  1616,   664,   664,  1304,   677,
    1617,  1618,  1619,  1338,  1620,  1621,   665,   666,   702,  1622,
    1623,  1624,  1625,  1626,     0,     0,  1627,   697,  1628,   664,
    1629,  1630,   669,  1631,   638,     0,  1632,   667,   639,  1633,
     705,   705,  1634,   692,  1635,   380,     0,   384,   650,   651,
     652,   653,   678,   679,   654,   684,   685,   689,   655,   737,
     664,  1066,  1067,  1338,   380,   376,  1338,   380,  1032,  1338,
       0,     0,   169,     0,  1121,  1133,  1636,  1637,  1638,  1639,
    1641,  1640,  1642,  1643,  1644,  1645,  1646,  1647,  1648,  1649,
    1650,  1653,  1651,  1652,  1654,  1655,  1656,  1657,  1658,  1659,
    1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,  1668,  1669,
    1670,  1671,  1672,  1673,  1674,  1675,  1676,  1677,  1678,  1679,
    1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,  1147,     0,
    1148,  1138,  1127,  1134,  1135,   135,   417,  1118,     0,     0,
       0,     0,  1204,     0,     0,     0,  1039,  1041,  1042,   933,
    1052,  1005,     0,  1534,  1535,  1536,   995,     0,  1537,  1538,
    1539,  1587,   867,   854,   863,   868,   855,   857,   864,  1540,
    1541,   805,  1542,  1543,  1050,  1544,  1545,  1546,  1548,  1549,
    1550,   859,   861,  1552,  1553,     0,  1051,  1555,  1556,  1401,
    1558,  1559,  1561,  1562,   865,  1564,  1566,  1567,  1568,  1569,
    1570,  1049,  1571,   866,  1573,     0,     0,     0,  1021,   950,
       0,     0,     0,  1005,   838,     0,     0,   658,   659,   680,
     681,   660,   686,   687,   661,     0,  1015,   738,   883,  1005,
     850,   911,   781,     0,   836,   830,   468,  1011,     0,   831,
    1038,  1005,   996,   468,  1009,  1152,  1150,  1156,  1151,     0,
       0,     0,     0,     0,   618,   617,  1031,  1183,  1181,  1182,
    1180,  1179,  1186,     0,  1188,  1124,   947,     0,   996,   463,
       0,     0,     0,   443,   442,     3,     0,     0,  1191,     0,
     480,   481,     0,     0,     0,     0,     0,     0,     0,     0,
     565,   504,   505,   507,   562,   566,   574,     0,   449,     0,
    1073,  1210,     0,     0,     0,   122,   122,     0,     0,     0,
       0,     0,    93,    42,    86,     0,     0,     0,     0,   187,
     200,     0,     0,     0,     0,     0,   197,     0,     0,   180,
      44,   174,   176,     0,   122,     0,    40,     0,     0,     0,
      46,  1054,     0,  1585,  1586,  1587,  1588,  1589,   868,     0,
    1591,  1592,  1593,  1594,  1595,  1596,  1597,  1598,  1599,  1600,
    1551,  1602,  1603,  1604,  1605,  1606,  1607,  1565,  1609,  1571,
       0,  1610,     0,   842,   953,   490,   951,  1074,     0,  1055,
    1061,  1001,     0,  1075,  1715,  1716,  1717,  1718,  1719,  1720,
    1721,  1722,  1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,
    1731,  1732,  1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,
    1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,
    1751,  1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,  1760,
    1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,
    1771,  1772,  1773,  1774,  1775,  1776,  1777,  1778,  1779,  1780,
    1781,  1782,  1783,  1784,  1785,  1786,  1787,  1675,  1788,  1789,
    1790,  1791,  1792,   998,  1035,  1077,  1076,  1078,  1004,     0,
       0,   415,     0,     0,  1088,     0,  1069,     0,     0,  1338,
     168,  1338,   310,     0,   310,     0,     0,  1101,  1104,   372,
     368,   366,   365,   367,   696,   683,   691,   690,     0,   673,
     672,   671,     0,   670,     0,     0,   697,   697,   695,   674,
     650,     0,     0,     0,   701,     0,   699,   378,   379,     0,
     352,     0,   644,   640,     0,   710,   711,   712,   713,   720,
     721,   718,   719,   714,   715,   708,   709,   716,   717,   706,
     707,     0,   722,   723,   724,   725,   726,   727,   728,   729,
     656,   662,     0,     0,   347,     0,     0,   349,     0,     0,
       0,     0,   135,     0,   181,  1143,  1144,  1142,     0,     0,
    1126,   184,   201,  1137,  1146,  1136,  1145,  1125,  1120,     0,
    1117,   406,  1162,  1161,  1170,   163,     0,   956,     0,   135,
    1205,  1216,     0,   834,   950,   994,     0,     0,     0,     0,
       0,     0,   840,   959,     0,     0,   761,     0,     0,     0,
     974,     0,   980,     0,     0,     0,   762,   742,   743,     0,
    1020,  1027,   949,     0,   838,   947,     0,   914,     0,  1057,
       0,   832,   833,   839,     0,  1045,     0,   737,   737,  1014,
     933,     0,   930,   931,   932,     0,     0,     0,  1008,     0,
     941,   943,     0,     0,   777,   939,     0,   780,     0,     0,
       0,     0,   927,   928,   929,   921,   922,   923,   924,   925,
     926,   937,   920,   758,     0,     0,   885,   837,     0,     0,
     757,     0,     0,     0,   581,     0,  1043,  1040,     0,   997,
     581,  1164,  1168,  1169,  1167,     0,  1163,  1155,  1154,  1159,
    1157,  1160,  1158,     0,  1177,     0,  1174,   578,     0,   465,
       0,     0,  1197,     0,   129,     0,  1192,     0,   460,   459,
     491,   492,   498,   458,   543,   544,     0,     0,     0,     0,
     571,   569,   534,   508,   533,     0,     0,   512,     0,   535,
     738,   564,   447,   502,   503,   506,   446,     0,   567,     0,
     577,   565,   507,     0,  1199,  1211,     0,     0,     0,     0,
       0,  1338,     0,     0,    77,    58,   262,     0,   121,     0,
       0,     0,     0,     0,     0,     0,    85,    82,    83,    84,
       0,     0,     0,     0,   185,   186,   199,     0,   190,   191,
     188,   192,   193,     0,     0,   178,   179,     0,     0,     0,
       0,   177,     0,     0,     0,     0,     0,     0,     0,     0,
     490,   490,   490,   848,     0,   488,   489,     0,     0,   999,
    1002,   405,   318,     0,   308,     0,     0,     0,     0,     0,
       0,   343,  1094,  1092,  1090,  1093,  1095,  1070,     0,     0,
       0,     0,   165,   167,     0,   307,   281,     0,  1106,   389,
       0,     0,  1338,  1103,   298,     0,     0,     0,     0,   380,
       0,   694,   693,   645,   641,     0,     0,     0,     0,   385,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     380,   377,   380,  1033,     0,   380,   172,  1338,   310,     0,
    1122,  1139,   182,   202,   183,   203,   438,     0,   412,   420,
     425,   403,     0,   403,     0,   422,   426,   403,   421,   403,
     416,     0,   164,     0,  1082,     0,  1081,     0,  1006,     0,
       0,   993,   989,     0,     0,     0,     0,     0,   960,   961,
     962,   963,   964,   965,   966,   967,   968,     0,     0,   969,
       0,     0,     0,   919,   930,   931,   932,   927,   928,   929,
     921,   922,   923,   924,   925,   926,   945,     0,     0,     0,
       0,     0,     0,     0,     0,   807,     0,     0,   830,   910,
       0,   947,   979,     0,     0,     0,     0,     0,     0,   947,
     985,     0,     0,     0,  1019,     0,  1016,   783,  1005,     0,
       0,   782,     0,     0,     0,  1047,  1048,   739,   753,   754,
     755,   759,  1080,  1079,  1013,     0,  1007,     0,     0,   740,
     763,   768,     0,   986,   801,     0,   789,     0,   776,     0,
     787,   791,   764,   779,     0,   760,     0,  1008,   942,   944,
       0,   940,     0,   750,   751,   752,   744,   745,   746,   747,
     748,   749,   756,   918,   916,   917,     0,     0,     0,   893,
     784,     0,     0,   786,   785,  1330,  1365,     0,   479,   479,
     479,   467,   477,  1012,     0,   630,   490,  1021,   630,     0,
     737,   619,  1073,  1187,  1175,  1176,   948,  1072,   135,     0,
    1195,     0,     0,     0,   141,   124,     0,  1193,     0,   157,
     581,     0,  1005,     0,   496,   497,     0,   501,  1562,  1453,
       0,     0,     0,     0,   536,   572,     0,   563,     0,  1039,
     537,  1038,   538,   541,   542,   513,   573,  1028,   575,     0,
     568,   451,   450,   579,     0,    43,     0,  1338,    60,     0,
       0,     0,     0,     0,     0,   216,   253,   216,    98,  1338,
     380,  1338,   380,  1236,  1305,  1469,     0,    56,    89,     0,
     286,   115,     0,   271,   315,    79,    94,   108,     0,     0,
      45,   175,   189,   194,   111,   198,   195,  1111,   196,   122,
       0,    41,     0,   109,     0,  1109,     0,     0,    47,   113,
    1113,   488,   488,   488,     0,   952,     0,     0,   954,   955,
    1001,     0,   404,     0,   309,     0,   414,   394,   395,   405,
       0,     0,   310,  1091,     0,  1071,   105,     0,     0,     0,
       0,   301,   299,   329,     0,   306,   300,   308,     0,     0,
     257,     0,  1230,     0,     0,   390,   386,     0,     0,     0,
     663,   676,   353,   650,     0,   704,   703,   705,   705,   650,
       0,   636,     0,   648,     0,   688,   657,   730,   731,   732,
     733,   734,   735,   736,   346,   348,     0,   350,     0,     0,
     407,     0,   410,     0,   409,   413,   408,   402,     0,   433,
       0,     0,     0,     0,     0,     0,  1171,   957,   484,   806,
       0,     0,   990,     0,     0,   881,     0,   856,   858,   871,
       0,   860,   862,     0,   934,     0,     0,     0,   872,   809,
     810,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   825,   824,
     873,   909,     0,     0,   977,   978,   874,     0,     0,   984,
       0,     0,     0,   879,     0,     0,     0,     0,  1026,   835,
     948,   915,   913,   841,   737,     0,     0,     0,     0,     0,
       0,     0,   790,   778,     0,   788,   792,     0,     0,     0,
     772,     0,     0,   770,   802,   766,     0,     0,   803,     0,
       0,     0,   849,   479,   479,   479,   479,   476,   478,     0,
       0,     0,     0,  1453,     0,   602,   580,   582,   589,   602,
     607,   851,   628,   852,  1057,     0,   546,   488,  1027,   546,
       0,  1165,  1178,     0,  1196,     0,   146,   128,   148,   147,
       0,   155,     0,  1005,     0,   146,   130,     0,   149,     0,
    1195,     0,   161,   493,     0,   935,   501,     0,   495,   540,
     539,     0,   511,   570,   509,     0,   576,     0,     0,     0,
     261,     0,     0,     0,   216,     0,     0,   325,     0,   312,
      78,     0,     0,     0,    52,    97,    70,    62,    48,    76,
       0,     0,    81,     0,    74,    91,    92,    90,    95,     0,
     245,   226,   258,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   490,
     487,   843,  1000,   436,   437,   180,   435,   319,     0,     0,
     307,  1106,  1089,     0,     0,   104,   106,     0,   168,   310,
       0,   285,   281,     0,   279,   278,   280,     0,  1231,   173,
       0,  1226,  1105,     0,     0,  1100,   682,   647,     0,   700,
     698,   646,     0,   642,   649,   380,     0,   439,     0,   398,
     434,   423,   428,     0,   432,   430,   429,   424,   427,     0,
     992,   988,     0,   853,   958,     0,   946,   972,   971,   808,
     820,   821,   822,   973,     0,     0,     0,   817,   818,   819,
     811,   812,   813,   814,   815,   816,   823,   982,   981,   975,
     976,     0,   876,   877,   878,   983,     0,  1018,   947,  1023,
       0,     0,   912,  1046,   741,     0,     0,   769,   987,   793,
       0,     0,     0,   765,   934,     0,     0,     0,     0,     0,
     774,     0,     0,     0,   896,   891,   892,     0,     0,     0,
       0,   470,   469,   475,   602,   607,     0,   453,     0,   589,
       0,   601,   530,   600,     0,     0,   613,   611,     0,   613,
       0,   613,     0,   530,     0,   603,   530,   600,     0,   620,
    1031,   629,     0,   561,     0,  1017,   561,     0,   466,  1194,
       0,  1190,     0,     0,     0,   136,   133,   123,     0,     0,
     158,   146,   137,     0,   494,   499,   500,   510,  1029,   116,
     216,     0,     0,    59,     0,   327,   273,   305,   288,     0,
       0,     0,   217,     0,   293,     0,    51,    71,     0,    67,
       0,    96,     0,     0,     0,     0,     0,    54,    66,     0,
      49,     0,   380,   380,    57,   272,  1065,  1611,  1612,  1613,
    1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,
    1624,  1625,  1626,  1704,  1627,   223,  1628,  1401,  1629,  1630,
    1631,     0,  1632,   639,  1633,  1634,  1635,   921,   922,   221,
     314,   218,   320,   220,   222,     0,  1066,   219,   317,   112,
    1112,     0,   110,     0,  1110,   119,   117,   114,  1114,   846,
     847,   844,   488,   417,   397,     0,     0,     0,  1338,     0,
     103,     0,  1106,   166,   307,     0,   335,   257,   330,     0,
    1230,  1228,     0,  1225,     0,     0,     0,   643,   637,   351,
       0,   411,     0,   431,   991,   869,   880,   970,     0,     0,
       0,     0,   875,   870,  1025,     0,  1022,   799,   797,   794,
       0,   795,   773,     0,     0,   771,   767,     0,   804,   882,
       0,   898,   895,   474,   473,   472,   471,   588,   586,     0,
     591,  1057,   598,   523,   529,   587,     0,   583,     0,   612,
     608,     0,   609,     0,     0,   610,     0,   584,     0,  1057,
     585,     0,   627,     0,     0,   887,   843,   887,  1166,   145,
     125,     0,   126,   156,     0,     0,     0,     0,   150,   391,
       0,   323,    61,     0,   305,     0,   216,   290,   289,   292,
     287,   291,   294,     0,     0,     0,     0,     0,   274,     0,
       0,     0,   237,     0,     0,   305,     0,   311,   233,   234,
     344,     0,     0,     0,    63,    53,    50,    55,    64,     0,
       0,    65,    68,   635,    80,    73,  1704,  1711,     0,     0,
       0,     0,     0,     0,   393,   400,   180,     0,     0,   281,
       0,     0,   307,   107,     0,     0,     0,  1230,     0,     0,
     213,     0,   254,     0,   170,  1229,     0,  1218,     0,  1098,
    1099,     0,     0,   399,   826,     0,     0,     0,  1024,   796,
     800,   798,   775,   884,     0,   490,   623,     0,   626,   590,
       0,     0,   518,   525,     0,   528,   522,     0,   592,     0,
       0,   594,   596,     0,     0,     0,   631,     0,     0,     0,
    1034,  1280,  1545,  1452,     0,   545,   547,   550,   552,   551,
     553,   549,   560,     0,   521,  1044,   521,     0,     0,     0,
     159,     0,   152,   152,     0,   138,   936,     0,   216,     0,
     304,   324,   252,     0,     0,   235,     0,   242,     0,   276,
     277,   275,   236,   305,   310,   238,     0,   345,     0,    72,
       0,    88,     0,     0,   316,   120,   118,   845,   417,     0,
    1106,   257,  1225,     0,     0,   281,   173,  1227,   270,   263,
     264,   265,   266,   267,   268,   269,   284,   283,   255,   256,
       0,     0,     0,  1100,     0,   827,     0,   828,     0,   901,
     628,     0,     0,   622,     0,   516,   514,   517,   519,   515,
       0,     0,   599,   615,     0,   595,   593,   604,     0,   635,
       0,   606,     0,     0,     0,   554,     0,   886,   888,     0,
       0,   455,   454,     0,   132,     0,   630,     0,     0,   154,
     154,   140,     0,   310,   326,     0,   296,   303,   295,     0,
       0,   232,     0,   239,   334,   241,   225,   634,     0,    75,
       0,   321,   392,   396,     0,   215,  1219,     0,  1225,   257,
    1230,     0,  1222,     0,     0,  1106,   829,   897,     0,     0,
       0,   621,   624,     0,   597,     0,     0,     0,   632,   633,
     605,     0,     0,     0,   548,     0,     0,   523,   127,   152,
     131,   160,   151,   498,   153,   498,     0,   334,   282,     0,
       0,   260,   225,     0,   251,     0,    69,    87,   322,     0,
     307,  1220,   214,   171,  1223,  1224,     0,   630,  1533,  1281,
    1504,     0,   899,   902,   900,   894,     0,   526,     0,   532,
     614,   556,     0,   555,   889,   890,   520,   154,   501,   501,
     630,   251,   297,   302,     0,   240,   243,   331,   332,   333,
       0,   247,   244,   248,     0,  1225,     0,  1096,     0,   906,
     905,   904,   908,   907,   625,     0,     0,   524,   557,   498,
     143,   142,   139,   216,   259,     0,     0,     0,   249,     0,
     250,   224,  1221,  1106,     0,   527,     0,   501,   328,   229,
       0,   228,     0,   313,   246,   630,   903,     0,   144,   227,
     231,   230,  1097,   531
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    36,    37,    38,    39,  2116,  2117,  2118,  1806,   972,
    2809,  1807,   973,   974,  2120,    40,    41,  2164,  2165,    42,
    1430,   532,  1744,  1373,  2536,    44,  2071,  1749,  2075,  2680,
    2321,  2070,  2077,  2789,  2853,  2072,  1750,  2681,  1751,    45,
      46,  1502,    47,   732,    48,  1503,  1457,  1242,   992,  1447,
    1231,    49,    84,    50,  2107,  2410,  2866,  2130,  2953,  2567,
    2568,  1808,  2911,  2912,  2109,  2178,  1439,  2905,  1871,  2736,
    1812,  1795,  2569,  1880,  2690,  2446,  1809,  2352,  1872,  2553,
    2795,  1513,  1873,  2796,  2546,  1874,  1482,  1506,  2354,  2913,
    1813,  1483,  2411,  1426,  1875,  2864,  1876,   491,  2572,    51,
     524,   525,   724,  1180,   526,   705,    52,   492,  1146,   533,
      54,  1859,  2596,  2198,  2597,  1928,  1853,  1240,  1925,  1556,
    1486,  1241,   479,  1570,  2199,  2155,  1557,   534,   874,    57,
      58,    59,   570,   583,   584,  1344,  1721,  2039,   942,   557,
     558,  1847,   598,  1476,  1380,  1381,  1757,  2088,  1405,  1406,
     951,   952,  2643,  2781,  2644,  2645,  2504,  2505,  2927,  1393,
    1397,  1398,  1770,  1763,  1386,  2313,  2665,  2666,  2667,  2668,
    2669,  2670,   875,  2525,  1401,  1402,   954,   955,   956,  1410,
    1780,    61,  1725,  2046,  2047,  2048,  2291,  2292,  2306,  2302,
    2510,  2651,  2049,  2050,  2636,  2637,  2753,  2309,  2056,  2655,
    2656,  2711,  1530,   706,  1247,  1183,   708,   876,   709,  1159,
     877,  1163,   711,   878,   879,   880,   714,   881,   882,   883,
     717,  1155,   884,   885,  1174,  1202,  1203,  1204,  1205,  1206,
    1207,  1208,  1209,  1210,   926,  1624,   887,   888,   889,  2052,
     890,  1336,  1709,  2674,  2777,  2778,  2032,  2275,  2491,  2635,
    2830,  2882,  2883,   891,   892,  1287,  1288,  1706,  1331,  1332,
     893,  2413,  1334,  1617,  1286,  1283,  1035,  1036,  1248,  1597,
    1598,  1620,  1957,  1627,  1633,  1984,  1985,  1641,  1674,   894,
    1581,  1582,  1943,  1256,   895,   623,  1042,   624,  1253,  1668,
     903,   896,   897,  1280,  1281,  1998,  2250,  1646,  1776,   575,
    2647,   728,  1123,   898,   899,   900,   901,   928,   577,  1037,
     472,   720,  2854,  1136,   932,  1038,  1810,  1664,    62,   801,
     628,    63,  1134,  1494,    64,  2620,  2456,  1148,  1515,  1884,
     493,    65,    66,    67,    68,    69,   605,  1234,   535,  1235,
    1236,   789,    70,  1243,   791,   792,    71,   564,   565,  1244,
    1357,  1245,    72,   544,    73,   922,   580,   923,   925,   537,
     939,  2066,  1740,    75,    76,   551,   552,    77,    78,   566,
      79,    80,  2617,   538,  2181,  1143,   501,   474,   475,   722,
    1126,  1040,  1127
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2616
static const int yypact[] =
{
    2811,  -117,   692, -2616, -2616,  -117, 31879, -2616,  -117,    48,
    2647, 36589, -2616, 25682,  -117, 42712,  1119,   158,   217,   196,
     309, 42712, 42712, 37060,  -117,   350, 43183, -2616,  -117, 21603,
   34234,    -7,    67, 43654, 42712,  1043,   373,   143, -2616, -2616,
   -2616, -2616, -2616, -2616,    62, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616,   128, -2616,    60,   144,
     -65,   155, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
     242, -2616, -2616, -2616, -2616, -2616, -2616, -2616, 21131, -2616,
   -2616, -2616, -2616, -2616, -2616, 37531, 42712, 38002, 34705, 38473,
   -2616,   100, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616,   102, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616,   114, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
     211,   422, -2616,   119, -2616, -2616, -2616, -2616,  1043, 38944,
   -2616,   490,   709, -2616,   374, 44125, -2616, -2616, 42712, -2616,
   -2616,   503, 38944,   535, -2616, -2616, -2616, 39415, -2616, -2616,
   -2616, -2616,   509, -2616, -2616,   347, -2616,    58, -2616, -2616,
   -2616,   379, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
     472, -2616, 49306, -2616, 44596, 45067, 45538, -2616,   384,   253,
     633, 20659, -2616, -2616, -2616, -2616,   242, -2616, -2616,   309,
   -2616,   309, -2616, -2616, -2616,  -127,   396, -2616,   487,   774,
   -2616, -2616, -2616,   475, -2616, -2616,   760,  8432,  8432, 46009,
   46009,   309, 46009,   532, -2616, -2616,    51, -2616,    67, -2616,
     -65,   475, -2616, 22075, -2616,   536,   422, -2616, -2616,   139,
     882, 11408, 42712,   559, -2616,   584,   559,   590,   600, -2616,
    2811,   944,   913, 34234,   529,   529,  1076,   529,    83,   579,
   -2616,  1315, -2616,   648, -2616, 38944, -2616,   673,   980, -2616,
     475,  1011,   699,   842,  1037,  4739,  1063,   934,  1084,   998,
    6448, 11408, 30466, -2616,   422, -2616, -2616, -2616,   749, -2616,
     770, -2616, -2616, -2616, -2616,   253,  1020, -2616,   788,  1297,
     902, 39886, 40357, 38944,   869,  1281, -2616, -2616, -2616, -2616,
     925, -2616, -2616,   145, -2616, -2616, -2616, -2616,   949, -2616,
     949,   949, -2616, -2616, -2616, -2616,   883,   883,  1085,   922,
   -2616, -2616, -2616,  1298, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616,   940,   909, -2616,   949, -2616,   883,
   -2616, -2616, -2616, -2616, -2616, 50674, -2616, -2616, -2616, -2616,
     381,   393, -2616, -2616, -2616,    37,   947, -2616,  1440, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616,   990, -2616,  2315,
     883, -2616, -2616,  1334,   149, -2616,  1348,   153, -2616,  1353,
    1208, 11408, -2616,  1116, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616,    67, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,   327,
   -2616, -2616, 28309, -2616, -2616,   633,  1032, -2616, 28309, 11904,
   49762,  1488, -2616,  1306, 42712,  1046, -2616, -2616, -2616, -2616,
   -2616, -2616,  1051,  1556,    97,  1563, 11408,  1080,    97,    97,
    1096,  1412, -2616, -2616, -2616,   120,  1098,  1100, -2616,   136,
     136, -2616,  1110,  1112, -2616,   148,  1120,  1122,  1616,  1635,
     117,  1152,  1159,   909,    97, 11408, -2616,  1162,   136,  1165,
    1167,  1170,  1654,  1174, -2616,  1663,  1179,    95,   108,  1180,
    1181, -2616,  1182, -2616,   150, 11408, 11408, 11408,  1527, 11408,
    7440, 38944,  1669, -2616,   422,  1189,   309, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616,   142,  5186, -2616,  1228, -2616,
   -2616, -2616,   175, 11408, -2616,  1667,   -27, -2616,   151, -2616,
   -2616, -2616,   459,  1471,  1193, -2616, -2616, -2616, -2616,   172,
    1592, 27367, 27838, 38944, -2616, -2616,   422, -2616, -2616, -2616,
   -2616, -2616, -2616,   413, -2616,   242, 29499,   464,   422,   559,
   42712, 42712,  1652, -2616, -2616, -2616, 34234, 38944, 46480,  1321,
   -2616, -2616,   -65,   -65, 11408,   -65,   181,   899,  8928, 12400,
    1528,  1413,   123,   431,  1530, -2616,  1417,    83,   579, 11408,
     584, -2616,  1467, 38944, 32350,   588,   731,  1210,  1293,  1213,
     -16,  1618, -2616,  1214, -2616,  1300, 38944, 50674,   164, -2616,
    1653,   164,   164,   542,  1656,  1303,    85,  1456,   426,   -93,
    1214,  2364, -2616, 34234,   156,   433,  1214, 38944,  1307,   599,
    1214,    96, 11904,  1023,  1092,   691,  1140,  1169,    98, 11904,
    1280,  1288,  1373,  1514,  1516,  1518,  1533,  1535,  1537,  1540,
     101,  1542,  1546,  1550,  1559,  1579,  1584,   116,  1591,   118,
   11904,  1594,  1224, -2616, 29499,   -66, -2616, -2616,  1605,   132,
   -2616, 25953,  1220, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,  1317,
   42712,  1272,   407,  1577,  1638, 30466,  1236,  1595, 38944,  1472,
    2364,  1475,  1253,  1708,   770,  9424,  1710, -2616, 46951, -2616,
   -2616, -2616, -2616, -2616, -2616,  1259, -2616, -2616, 11408, -2616,
   -2616, -2616,  1743, -2616, 49762, 49762,   949,   949, -2616, -2616,
    1718,  1347,  1350,  1743, -2616,  1743, -2616, -2616, -2616, 49762,
   -2616, 42712,  1267,  1276,  1743, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616,  1743,  1349, -2616,  1356,  1358,  1360, -2616, -2616, -2616,
   -2616, -2616, 42712, 42712, -2616, 42712, 42712, -2616, 42712, 42712,
     510, 40828,   633, 35176, -2616, -2616, -2616, -2616,   864,   891,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, 30466,
   -2616,  2011, -2616, -2616, -2616,  1279,   515, -2616,   538,  1043,
   -2616, -2616, 11408,   422, 11408, 29499,  1326, 11408, 11408,  1285,
    1743,  1743, -2616,  1538,  1743,  1743, 29527, 11408, 24910, 11408,
   15872,  9920, 11408, 11408,  7936, 11408, 29527,  1765,  1765, 23019,
   -2616,  1439,  1301,  1289,  1783,  5505,  1302, -2616,   674, -2616,
    1282, -2616,   422,   422, 11408, -2616, 11408,  3029,  3029, -2616,
     157, 49762, 11408, 11408, 11408, 11408, 29995,  1372,    99, 42712,
   11408, 11408,  1292,  1069, -2616, 11408,  1520, -2616,  1312, 11408,
    1394,   126, 11408, 11408, 11408, 11408, 11408, 11408, 11408, 11408,
   11408, -2616, -2616, 17346,   174,  1628,  1647,   422, 11408,  -105,
     264, 11408, 35647,  8432,  1640,  6448, -2616,   422, 26425,    82,
    1640, -2616, -2616, -2616, -2616,   152, -2616, -2616, -2616, -2616,
    1279, -2616,  1279,  1318, 38944,   139, 33763, -2616, 11408, -2616,
     592,  1320,  1378,   558,  1777, 42712, -2616, 23491,  1606, -2616,
    1324, -2616, 28776,  1606, -2616, -2616, 16354,  1447,  1607,  1545,
   -2616, -2616, -2616,  1331, 29499, 12896, 12896, -2616,  1104, 29499,
    1273, -2616, -2616, -2616, -2616, -2616, -2616,   626, -2616, 38944,
     -15,  1528,   431,   608, -2616, -2616,  1327,  1339, 47422, 42712,
    1613,  1569,  1621,  -165, -2616, -2616, -2616, 49762, -2616, 42712,
   42712, 47893, 48364, 30937, 42712, 30466, -2616, -2616, -2616, -2616,
   42712,   917, 42712,  5442, -2616, -2616, -2616,   164, -2616, -2616,
   -2616, -2616, -2616, 42712, 42712, -2616, -2616,   164, 42712, 42712,
     164, -2616,  1365, 42712, 42712, 42712, 42712,  1464, 42712, 42712,
     -62,   -62,  1549, -2616, 10416,  1657, -2616, 11408, 11408, -2616,
   11408,  1521, -2616,   654, -2616,  1562,    56,  1399, 38944, 38944,
   42712,  1309, -2616, -2616, -2616, -2616, -2616, -2616, 30466,  1357,
    1359,  1698, -2616,  2364,  1700, 32821,   795,   602,  1401, -2616,
     678, 11408,  1587, -2616, -2616,  1573, 11408,   683,  1366,    37,
     694, -2616, -2616,  1363,  1276,  1383,  1385,  1368,  1369, -2616,
     695, 49762,  1743,    75,  1375,  1376,  1370,    59,    -3,  1268,
     149, -2616,   153, -2616,  1582,   131, -2616,  1614,   770,  1825,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616,   700, 20187, -2616,
   -2616,  1844,   309,  1844,   574, -2616, -2616,  1844, -2616,  1844,
   -2616, 28309, -2616, 11904, -2616, 49762, -2616,   720, -2616,  1393,
   11408,    57, -2616, 28840,   727, 11408,  1392,  1402, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616,  1403,  1716, -2616,
    1404,  1405,  4662, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616,  1408,  1400, 28900,
    1410, 15872, 15872,  7440,   961, -2616, 15872,  1411, -2616, -2616,
     728, 28794,  1301,  1414, 29140, 10912, 11408, 10912, 10912, 29174,
    1301,  1415, 29380, 42712, -2616, 13392, -2616, -2616, -2616, 11408,
   38944, -2616, 11408,   735,  5743, -2616, -2616, -2616,  5960,  5960,
    5960, 29527, -2616, -2616, -2616,  1430, -2616, 15872, 15872, -2616,
    2504,  2410,  7440, -2616, -2616,  1717, -2616,   966, -2616,  1418,
   -2616, -2616,  4154, -2616, 24910,  2108, 11408,   147, -2616, 11408,
    1292, 11408,  1495,  5960,  5960,  5960,   184,   184,   125,   125,
     125,   808,   264, -2616, -2616, -2616,  1419,  1421,  1422,  1622,
   29499,  1174, 11408, -2616, 29499,   852,   975, 38944,  3153,  3275,
    4047, -2616, -2616, -2616, 18771,  1480,   -66,  1527,  1480,  1743,
    3029, -2616,   584, -2616, -2616, -2616, 29499, -2616,  1043, 18771,
    1483,  1474,   311, 21603,  1634, -2616, 42712, -2616, 42712, -2616,
      -4,  1442, -2616, 11408, -2616, -2616,  2432,  1458,  1651,  1659,
     928,   928,  1104,  1660, -2616, -2616,  1505, -2616, 11408,  1284,
   -2616,  1287, -2616, -2616, -2616, -2616,  1445, -2616, -2616,  1702,
   -2616, -2616, -2616, -2616,  1536,  1214, 11408,  1681, -2616,    94,
    1461,  1802,   290,  1756, 42712, -2616,  1668, -2616,   135,  1805,
     131,  1812,   131, 30466, 30466, 30466,   737, -2616, -2616,   309,
   -2616, -2616,   748, -2616,    68, -2616, -2616, -2616,  1564,   659,
    1214,  2364, -2616, -2616, -2616, -2616, -2616, -2616, -2616,   190,
     690,  1214,  1566, -2616,  1570, -2616,  1574,   801,  1214, -2616,
   -2616,  1657,  1657,  1657, 11904, -2616,  1704,  1493, 29499, 29499,
   29499,  1496, -2616,   112, -2616, 42712, -2616, -2616, -2616,  1521,
   38944,  1497,   770, -2616,   765, -2616,   309, 42712, 38944, 38944,
   38944, -2616, -2616, -2616,  1500,  1498, -2616, 49762,   -78,  1713,
    1714, 42712,  1543,  1213,  1961, -2616, 29499,  1848, 38944,   750,
   -2616, -2616, -2616, -2616,  1743, -2616, -2616,  -132,  -132, -2616,
   42712, -2616,  1511, -2616,  1512, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, 42712, -2616,  1853,  1043,
   -2616, 30466, -2616, 33292, -2616, -2616, -2616, -2616,   309, -2616,
     309,  1734, 42712, 26896,   309,   309, -2616, -2616, -2616, -2616,
   29414, 11408, -2616,  1866, 49762, -2616,  5878, -2616, -2616, -2616,
   11408, -2616, -2616, 11408, -2616, 24910, 11408,  1842, -2616,  2003,
    2003,  5505, 49762, 15872, 15872, 15872, 15872,   566,  1165, 15872,
   15872, 15872, 15872, 15872, 15872, 15872, 15872, 15872, 16850,   317,
   -2616, -2616, 11408, 11408,  1854,  1842, -2616, 49762,  1532,  1301,
    1534,  1539, 11408, -2616, 49762,   764,  7440, 29460, -2616,   422,
   25389, -2616, 29499, -2616,  3029, 11408,  1099,  1391, 11408,   781,
   11408,  1850, -2616, -2616,  1529, -2616, -2616, 49762, 11408,  1541,
    4242, 15872, 15872,  4698, -2616,  4825, 11408,  7440, -2616,  1549,
    1575, 23963, -2616,  1631,  1631,  1631,  1631, -2616, -2616, 38944,
   38944, 38944, 19243,  1858, 18299, 41299,  1552,   790, -2616, 41299,
   41770, -2616,  1555, -2616,   422, 11408,  1856,  1657,  1439,  1856,
    1553, -2616, -2616,  1561,  1552, 11408,  1694, -2616, -2616, -2616,
    1602, -2616,   782, -2616,  1963,  1694, -2616,   787, -2616, 23491,
    1483, 11408,   422, -2616,  1565, -2616,  1458,   322, -2616, -2616,
   -2616,  1770, -2616, -2616, -2616, 38944, -2616, 42712, 25407,  1907,
   -2616, 42712, 42712, 42712, -2616, 42712,   798,   810,  1576, -2616,
     810,  1888,   618,  1213,    85,  4378,   -48, -2616, -2616, -2616,
    1644, 42712, -2616, 42712, -2616, -2616, -2616, -2616, -2616, 30937,
   -2616, -2616, -2616, 30466, 24438, 30466, 42712, 42712, 42712, 42712,
   42712, 42712, 42712, 42712, 42712, 42712,  1572,  1578,  1583,  1549,
   -2616, -2616, -2616, -2616, -2616,   -93, -2616, -2616,   112,  1580,
   32821,  1401,  1638, 42241,  1585,  1571, -2616,   816,  2364,  1588,
    2031, -2616,   795, 32821, -2616, -2616, -2616,  1989, -2616,   384,
     183, -2616, -2616,  1043, 42712,  1646, -2616,  1276,  1597, -2616,
   -2616,  1276, 49762, -2616, -2616,   131, 38944, -2616,   817, -2616,
   -2616, -2616, -2616, 42712,  1589, -2616,  1589, -2616, -2616, 11408,
   29499, -2616,  1590, -2616, 29499, 25425, -2616, 29499,  1854, -2616,
     723,   723,   723,  1441,  1905,   104,  1598,   723,   723,   723,
     328,   328,   107,   107,   107,  2003,   317, 29499, 29499, -2616,
   -2616,  1596, -2616, -2616, -2616,  1301,  1601, -2616,  5355, -2616,
     821, 42712, -2616, -2616,   292, 11408, 11408,  2504, -2616,  4585,
   11408, 49762,   849,  2504,   176, 11408,  3129,  3576, 11408, 11408,
    5842, 25453,  1604, 11408, 48835, -2616, -2616, 38944, 38944, 38944,
   38944, -2616, -2616, -2616, 41299, 41770,  1599, 17826,   790,  1608,
   38944, -2616,  1693,  1611, 18771,  1878,  1807, -2616, 18771,  1807,
     109,  1807,  1884,  1693, 22547, -2616,  1693,  1615,  1814, -2616,
     502, 29499,  2050,  1926,  1619, -2616,  1926,   309, -2616, 29499,
    8432, -2616,  1043,   604, 42712,   422,   -67, -2616,  1630, 42712,
   -2616,  1694, 29499, 24910, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, 42712,   861, -2616,   866,   810, -2616,  1661, -2616,   159,
    1912,    46, -2616, 30466,  2349,   684, -2616,  1925,  1843, -2616,
     164, -2616, 11408,   684,  1846,   169, 42712, -2616, -2616,  1855,
   -2616, 49762,   131,   131, -2616, -2616,  1629,  1639,  1641,  1645,
    1650,  1666,  1670,  1671,  1673,  1678,  1680,  1682,  1684,  1685,
    1687,  1690,  1691,   940,  1692, -2616,  1695,  1565,  1696,  1697,
    1699, 50218,  1707,  1709,  1715,  1722,  1725,   864,   891, -2616,
   -2616, -2616, -2616, -2616, -2616,   788,  1727, -2616,  1664, -2616,
   -2616,  1705, -2616,  1721, -2616, -2616, -2616, -2616, -2616, -2616,
   -2616, -2616,  1657,  1032,   111, 42712,  1648,  2086,  1869,  1655,
   -2616,   309,  1401, -2616, 32821,   624,   177,  1714, -2616,   115,
    1543, -2616,  2037,  1686,  1864, 42712,  1658, -2616, -2616, -2616,
    2116, -2616, 33292,  1589, 29499, -2616, -2616, -2616, 15872,  1985,
    1665, 49762, -2616, -2616, -2616, 11408, -2616,  2504,  2504,  4585,
     867, -2616,  2504, 11408, 11408,  2504,  2504, 11408, -2616, -2616,
   25471,  1859, -2616, -2616, -2616, -2616, -2616, -2616, -2616, 31408,
   41299,  1683, -2616, 36118, -2616, -2616, 42712,   790, 18771, -2616,
   -2616,   762, -2616, 18771,  1941, -2616, 18771, -2616, 42712,  1712,
   -2616, 42712, -2616, 13888, 11408,  1739,   309,  1739, -2616,  1193,
   -2616,   311, -2616, -2616,  2075, 19715,  2061, 11408, -2616, -2616,
    1703,   810, -2616,  1870,  1661,  1720, -2616, -2616, -2616, -2616,
   -2616, -2616, -2616,   880,  1730, 42712, 42712, 15872, -2616,   684,
     170,   178, -2616,  1986, 38944,  1661,  2140, -2616, -2616, -2616,
   -2616,  2107,  2187,  2076, -2616, -2616, 29499, -2616, -2616,  1743,
    1743, -2616, -2616,  2158, -2616, -2616, -2616, -2616,   788,   195,
   24438, 42712, 42712,  1741, -2616, -2616,   -93,  2111,   884,   795,
    1043,  2084, 32821, -2616,  2199,  1745, 42712,  1543,   291,   291,
   -2616,  1886, -2616,  1891, -2616, -2616,   173, -2616, 38944, -2616,
   -2616, 19715,  1043, -2616,  3087, 15872, 49762,   901, -2616, -2616,
    2504,  2504,  2504, -2616,  2185,  1549, -2616,   906,  2209, -2616,
   42712,   -68,   -44,  1757,  1758, -2616, -2616,   919, -2616, 11408,
    1762, -2616, -2616, 18771,   762,   920, -2616, 49762, 42712,   926,
   49762,  1763,  -110,  1766,  6944,  1752, -2616, -2616, -2616, -2616,
   -2616, 29499, 29499, 42712,  1824, -2616,  1824,  1822, 42712, 11408,
   -2616,   931,  2188,    26,    11, 29499, -2616, 38944, -2616, 30466,
   -2616,   810, -2616, 30466, 11408, -2616,  1913,  1441,  2229, -2616,
   -2616, -2616, -2616,  1661,   770, -2616, 42712, -2616,  2080, -2616,
   42712,  1836,   405,  1862, -2616, -2616, -2616, -2616,  1032,   309,
    1401,  1714,  1686, 38944,  1043,   795,   384, -2616, -2616, -2616,
   -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616, -2616,
    2203,  1991,  2211,  1646,   937,  3087,   941, -2616, 11408,   339,
    1555, 31408,  1789, -2616,   962, -2616, -2616, -2616, -2616, -2616,
   42712,   932, -2616, 29499, 42712, -2616, -2616, -2616, 42712,  2158,
     970, -2616, 11408,  1794, 11408, -2616, 13888,  1791, -2616,  2251,
    1937, -2616, -2616,  1043, -2616, 25538,  1480, 19715, 42712, 42712,
   42712, -2616,  1927,   770,   810,   976, -2616,  1815, -2616, 25769,
    2023, -2616,  2113, -2616,  2058, -2616,  1813, -2616, 11408, -2616,
    1887, -2616, -2616, -2616,  2272, -2616, -2616,  1819,  1686,  1714,
    1543,  2026, -2616,  2027,  1823,  1401, -2616,  1301, 14384, 14384,
    1827, -2616, -2616, 42712, -2616,   997,  1828,  1008, -2616, -2616,
   -2616,  1013, 13888,  1017, -2616, 42712,  1826, 36118, -2616,  2188,
   -2616, -2616, -2616,   192, -2616,   192, 23491,  2058, -2616, 30466,
   24438,  2055,  1813,    47,  2039,  2364, -2616, 29499, -2616,  1043,
   32821, -2616, -2616, -2616, -2616, -2616, 19715,  1480, 15376,  1972,
      65, 28812, -2616, -2616, -2616, -2616,  1018, -2616,  2319,  1992,
   -2616, -2616,  1022, -2616, -2616, -2616, -2616, 42712,  1458,  1458,
    -163,  2039, -2616, -2616,  2131, -2616, -2616, -2616, -2616, -2616,
      84,  2049, -2616,  2052,  1270,  1686,  1027, -2616,  2299, -2616,
   -2616, -2616, -2616, -2616, -2616,  1845,  1851, -2616, -2616,   192,
   -2616, -2616, -2616, -2616, -2616,   127,   127,  2215, -2616,  1909,
   -2616, -2616, -2616,  1401, 14880, -2616,  2329,  1458,   810, -2616,
    2320, -2616,   167, -2616, -2616,  1480, -2616,  1857, -2616, -2616,
   -2616, -2616, -2616, -2616
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2616, -2616, -2616,  1753, -2616, -2616, -2616,   228, -2616,   904,
   -2616,   220,  -534,   552, -2616, -2616, -2616, -2616, -2616, -2616,
    -916,    10, -2616, -2616, -2616, -2616,    27,   275, -2616,  -432,
   -1879,  -174, -2616, -2419, -2551, -2616,  -494, -2404, -1671, -2616,
   -1096,   200, -2616, -2097, -2616,  -614,  -974,  -769,  -984, -2616,
      -1, -2616,  1340, -1095, -1762, -2397,  -491, -2616,  -567, -2616,
    -326, -1748,  -541,  -528, -2616, -2297,  -948, -2616,  1416,  -233,
   -2616,   585, -2616, -2092, -2616, -2616,   575, -2616,  -940, -2616,
   -2616, -1854,   208,  -477, -1913, -2094,   530,  -627, -2616,  -527,
     255, -1733, -2616,   597, -2616,  -468, -2616,  -492, -2145, -2616,
   -2616, -2616,  1178,  -675, -2616,  1227, -2616, -2616, -2616,    33,
   -2616, -2616, -2616, -2616, -2616,  -466,   537, -2254, -2616,   476,
   -2616, -2616, -2616, -2616,   -69,   240, -2616,    30,   534,   -22,
     -24,     7,    28,    45,  1469,  1499, -2616,  -892,   868, -2616,
   -2616, -1768,  -592,   -47, -2616,   650, -2553, -2023,  -431,   989,
    1452,  1454,  -354,  -268, -2616,  -438, -2616,  -880, -2616, -2616,
     642,  1025, -1258, -1249, -2616,   353,  -428,  -363, -2616, -2616,
   -2616, -2616, -2616,   110,  -429,  1006, -2616,  1466, -2616, -2616,
   -2616, -2616, -1191,   688, -1940,   385, -1959, -1835,   146,   130,
    -883,  -226,    32,   390,  -318, -2616, -2616,  -316, -1702, -2349,
    -332,  -331, -2616, -2616,  -493, -1114,  -681, -2616, -2616,  -437,
    1065, -2616, -2616, -2616,  1517,  2004, -2616, -2616,  2226,  2316,
   -2616,  -564,  2655,  -203,  -661,  1183, -1057,  1184, -1071, -1005,
   -1080,  1192,  1196, -1229,  3480, -1575,  1852,     6, -2616, -2347,
   -1591, -2616, -2616,   -90, -2616,  -404, -2616,  -394, -2616, -2616,
   -2616,  -384, -2615, -2616,  1121,   811, -2616, -2616, -1246, -2616,
    3634,   707, -2616, -1612,  -577,  1217,  -711,  -972, -1140, -2616,
   -2616, -2616, -2616, -2616, -2616, -1233, -1764,  -654,   777, -2616,
   -2616,   887, -2616, -2616, -1206,  -593,   992,  -557,  -841,   786,
   -2616,  -550,  1133, -2616,   752, -1880, -2616,   427, -2616,  1995,
    -523,  1643,  -975,    12, -2616,  -545,   281,  1801,  -854, -2069,
   -2616, -2616,  -483, -2153,  -907, -2616,  -595, -2616, -2616, -2616,
   -1159, -2616,   617, -2616, -1092, -2616,  -259, -2616, -2616, -2107,
   -2616, -2616, -2616, -2616, -2616, -2616,  -401, -2616,  -444,  -461,
   -2616, -2616,     4,  -776,  1263, -2616, -2616,   456, -2616,   918,
   -2616,   733, -2616, -2616, -2616,  1123, -2616, -2616, -2616,    34,
    1554,   411, -2616,  1129, -2616, -2616, -2616, -2616, -2616,   754,
   -2616, -1091, -2484,    76, -2323, -1176,    -6, -2616, -2616, -2616,
    -525, -2616, -2063
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1715
static const yytype_int16 yytable[] =
{
     473,   991,   727,  1131,   927,   639,   794,  1461,   904,   957,
      43,   599,   469,   588,  1170,  1460,  1237,  1290,   470,   916,
     536,  1436,  1616,  1230,  1425,  1520,  2059,  1124,    60,   707,
      55,  1128,  1292,    53,    74,  2110,   601,   733,  1492,  1493,
    1176,   725,  1495,  1496,    60,  1549,  1959,  1960,  1337,  1214,
    1432,  1979,  1217,  1414,  2437,  2125,  1524,  2127,  1472,   569,
    1347,  2106,   574,  2334,  1628,  2415,  2436,   602,  1655,  1656,
     788,  2417,  2019,  2146,  2147,  2148,    81,  2078,  1465,   586,
    2447,   990,  2450,   996,   810,  1000,   734, -1037,  1246,  -180,
    1576,  2305,  2006,  2007,  -180,  1177,  1156,  1157,   477,  2788,
    -705, -1062,  -697, -1590,  2288, -1062, -1601, -1601,   609, -1059,
   -1059, -1693, -1693,  -705, -1704, -1704,  2249,   542,  1962, -1608,
     617, -1608,  -702,  1168, -1063, -1590,  -702,  2614,  -441, -1711,
   -1711, -1713, -1713,  2053,  2167,   795,  1301, -1063,  1772,  1666,
    1354,  -664,   917,  1132,  -444, -1060, -1060,   542,  2053,  1775,
    2610,   810,  2638,  -677,  1220,  -692,   542,   542,  2111,  1728,
    1497,  1417,   578,  2550,  1724,   650,  1307,   950,  1224,   953,
       3,     4,  2659,   810,  1687,  1351,  1224,   542,   810,  2594,
    1628,   810,   591,  1594,  -919,  2949,  1342,  1666,  2682,  1177,
    1338,  -919,  1592,  2714,  1941,  1301,  2327,  1176,  1309,  2204,
    2206,  1703,  2174,  -938,  2935,   594,  1590,  1177,  1704,  1445,
    -938,  1177,  1448,  1449,  2303,  2534,  2907,  2744,  2577,   910,
    2239,  -441,   596,  1437,  1857,  1307,   596,  2920,  1150,  1754,
    1160,  1428,  2740,  -401,  2469,  2611,  2755,  -444,  2816,  2855,
    2741,   946,  1463,  1187,  1188,  1711,   947,  1232,  1193,  1194,
    2612,  2346,  1169,  1232,  1156,  1157,  1778,  1309,  1593,  1420,
    2757,  2773,  2589,  2918,  2790,  1428,   539,   794,  1793,   592,
    2112,   595,  1151,   794,  2682,  1301,  2138,  2547,  2296,  2791,
    1168,   946,  2960,  1211,  2727,   540,  2055,  1352,  2699,  2314,
    2451,  1470,  1282,  2114,    82,  2701,  1444,    25,  1471,  1688,
    2898,   543,  2899,  1301,   541,  1307,   918,  2758,   919,  2770,
    1193,  1194,  2297,   948,   542,  1689,  1755,  1293,  2728,   719,
    1690,  2369,  1171,  1128,  2608,  1794,  2305,  2513,  1962,  2956,
    2454,  2079,  2588,    30,  2871,  2604,  2299,  1309,    83,  1962,
    1297,  1384,  2345,  2216,  1172,  1349,  2929,  2908,   596,  2548,
    2605,  1238,   798,   948,  2507,  1691,  1197,  1198,  2511,  1455,
    2700,  1779,   949,   799,  1232,  1309,  1232,  1232,  2342,  2729,
    2344,  1349,  2609,   589,    32,  2921,  2947,   555,  2730,  1178,
    -558,  2470,  1413,  1456,   678,  1712,   794,   794,  2220,  2221,
    2222,  2223,  2950,  1160,  2227,  2228,  2229,  2230,  2231,  2232,
    2233,  2234,  2235,  2236,  2638,  1353,  2742,  2731,  1370,  1422,
    -441,  1169,  1435,  1438,  2698,  1628,  1628,  2756,  1197,  1198,
    1628,   967,  2909,  2535,  2815,    35,  -444,   481,  1474,  2613,
    2897,  2942,  1573,  1232,  1510,  2712,  1232,  1232,  1616,  2961,
    2682,  2759,  2792,  1475,  1152,  1385,  2266,  2267,  2452,  2497,
    2702,  2053,  2539,  2053,  2467,  2301,   651,  1910,  1912,  1913,
     911,  1628,  1628,  2903,  2812,  1858,  1908,  1343,  1339,  2951,
    2463,  -441,  2916,  1178,  1435,  2113,  2114,  2732,  1788,  1907,
     556,  2551,  2335,   579,  2886,   597,   482,  -444,   625,  2733,
    2079,  1178,   719,   593,  1667,  1178,  2952,  2873,  2153,  2154,
    1692,  2061,  1845,  1772,  2115,  1580,    60,  2721,   627,   588,
    2085,   626,   629,  2091,   621,  2936,   721,  1508,   622,  1461,
    1423,  2415,  2872,  1865,  1366,   793,  1411,  2417,  1412,  2682,
     912,  1179,  1909,  1911,    56,   790,  -919,  1455,   478,  1154,
    1124,  2639,  2021,   804,  2595,  2336,   601,  2134,  1153,  1171,
      56,   473,   473,  1705,   958,  -938,   940,   581,    60,  2080,
    2135,  1456,  1171,    56,  1903,  1464,  -180,  -180,  2648,   587,
     621,  1172, -1037,  2652,   622,   473,  2654,   602,  2541,  2063,
    -441,  1517,   920,   921,  1172,  1173, -1062,  -697, -1590,   946,
   -1062, -1601, -1601,  1977,   600,  2628,  -444,   719,  1175,  2139,
      43,  1845,  1521,  1522, -1608,  2552, -1608,  -702,  1275, -1063,
   -1590,  1330,    56,  2814,  1039,   473,  1125,  1518,    60,  -441,
      55,  -441, -1063,    53,    74,   938,  1158,   929,  1527,  2820,
    1528,  2688,  1296,  2819,  1726,  -444,   590,  -444,  1162,  1534,
    -692,  1345,  1729,  1213,  1558,  1228,  1229,  1216,  1450,   603,
    2579,  2580,  2705,  1228,  1229,   486,  1535,   487,  2538,   941,
    1578,   948,  2828,  1428,  2593,  1437,    81,  1327,  1328,  1329,
    1330,   707,  1437,  1741,  1429,  1577,  2734,  1282,  1822,  2735,
    2713,  1584,   490,  1553,  1555,   604,  1529,  1498,  1825,   721,
    2829,  1828,  1542,  2170,  1630,  1632,  2224,  1640,   794,  1578,
    1128,   620,  2598,  2053, -1690, -1690,  1355,  2053,  2068,  1616,
     949,  1663,   635,  2765,  2570,  1586,  1587,  1653,  2877,  1600,
    1601,  2540,   964,  1793,  2218,   473,   529,  1293,   965,   725,
    1541,   809,   645,  2356,  1962,  1487,  1545,  -489,  2571, -1715,
   -1715, -1715,  -489,  2069,  1578,  1325,  1326,  1327,  1328,  1329,
    1330,  1881,  2240,  1124,  1578,   648,  1128,  1628,  1628,  1628,
    1628,   649,   788,  1628,  1628,  1628,  1628,  1628,  1628,  1628,
    1628,  1628,  1628,  2606,   719,  2253,  2605,   553,  1550,  2187,
    2103,  1459,  1926,   571,  2691,  2191,   793,  1451,  1466,  1924,
    2803,  2415,   793,  1039,   721,  1452,  1290,  2417,  1972,  1973,
    1974,  1975,  1976,  1977,  2357,  1488,  1428,  1999,  1657,  -489,
     473,  1974,  1975,  1976,  1977,  1628,  1628,  1431,  1222,  1301,
     796,  1223,   797,    60,   652,  2062,  1669,  2040,  2041,  1821,
     653,   640,   610,  2225,   966,  1171,  2955,  1461,  1437,   473,
    1814,  1931,   907,  2226,  1892,  1387,  1932,  1171,   588,  1307,
    1771,  1771,  1489,  1742,  1259,  1438,  2295,  1172,  -489,   473,
     473,   473,  1438,   473,   473,  1914,   641,  1915,  1552,  1172,
    1917,  1173,  2149,   810,   731,  2930,  2931,  2262,  1841,  1842,
    1843,  1309,  1785,  1175,  2295,  2358,   800,   473,  2085,    85,
    2810,  1388,   631,  2624,   632,  1554,  1933,  1498,  1437,  2531,
     810,   642,  1232,  1124,  1364,   793,   793,  1365,  2053,  1820,
     621,  2082,  1232,  2140,   622,  1232,  1435,  2053,  1378,  1379,
      25,  1383,  2053,  1435,  2958,  2053,  2794,  2348,  1831,  1437,
    2175,  2296,  2089,  1838,  1796,  2182,  2641,   810,   473,  1889,
     964,  2642,   473,   473,  2053,  2798,   965,   621,   643,   602,
     602,  1348,   602,   473,  1469,  1367,    30,   964,  1368,  2296,
     802,   719,   719,   965,    25,  2297,    25,   804,   938,   809,
    1823,   721,  1962,  1166,  1167,  1826,   719,  1963,  1964,  1965,
    2298,  1988,  2697,  1990,  1991,   967,    25,  1902,  1904,  2299,
     621,   803, -1037,  2297,   622,    25,  1039,    32,  1390,  1864,
      30,  1546,    30,  1039,  1368,   909,  1572,  1968,  2298,  1573,
      33,  2349,    56,  1232,  2137,   905,   906,  2299,   908,   915,
    2460,   964,    30,  2300,  1039,  1462,  1232,   965,  1438,  1574,
    2053,    30,  1575,   794,    34,   968, -1688, -1688,  1901,   969,
    1437,    32,   805,    32,  2649,  2141,   794,    86,  1743,   924,
    2745,  2300,   966,   930,    33,    87,    33,  1391,  1640,  1989,
    1640,  1640,  2053,    32,    56,   587,  1492,  1493,   970,   966,
    1495,  1496,    32,  1233,   931,  2350,    33,  2351,    34,  1233,
      34,   933,  1937,  1737,  2850,    33,  1216,  1616,  1438,  1435,
      88,   934,    35,   640,    35,  2009,  2011,  1930,   719,  1783,
      34,  1934,  1368,  1935,   600, -1689, -1689,   809,  2301,    34,
    1962,   633,   936,   634,    35,  1963,  1964,  1965,  1387,  1438,
    1995,  2480,  2012,    35,    56,  2122,   937,  2124,   641,  1125,
     944,  2367,  2255,   966,  2057,   971,  2301,    89,   959,  1039,
    2360,  2277,  2278,  2279,  2280,  1854,   961,  2200,  1855,  1435,
       3,     4,   473, -1691, -1691,  1966,  2145,  1295,   721,   721,
    2053,   963,  2343,  2163,  1388,  2359,  1298,  2368,  1650,  1885,
    1651,  2948,  1573,   721,  1890,  2917,  1967,  1368,   975,  1346,
    1435,  2433, -1692, -1692,  2060,  1893,  1899,   976,  1575,  1900,
    1356,  1920,  1233,  1233,  1921,  2650,  2053,   962,  2932,  1675,
   -1715, -1715, -1715,   967,  1972,  1973,  1974,  1975,  1976,  1977,
     643,  1938,   529,   993,  1368,  2090,  2090,   793,  1945,  1981,
     967,  1368,  1368,  1389,   719,  1676,  2003,   790,  2128,  1368,
    1438,  2129,  2325,  1125,   997,  2161,  2189,  2190,  2013,  2132,
    1129,  2186,  2133,  2014,  1368,  1968,   473,  1878,   473,  1879,
      60,   473,   473,  2962,  2033,  2247,  2034,   969,  1216,   625,
    1130,   473,  1628,   473,   473,   473,   473,   473,   473,   473,
     994,  1390,  2258,  2323,   969,  1368,  2324,    60,  2328,   627,
    1135,  2329,   626,   629,   967,  2053,   970,  1133,   473,  2347,
     473,  1435,  1855, -1694, -1694,   721,   473,   473,   473,   473,
    1125, -1695, -1695,   995,   473,   473,   977,  2442,  2461,   473,
    1855,  2462,  2474,   473,  1967,  2475,   473,   473,   473,   473,
     473,   473,   473,   473,   473,   978,  1558,   473,   719,    56,
    1391,  2627,   473,  1137,   998,   473,  1677,   473,   969,  1039,
    2481,  1678,  1125,  1575,  2085,    90,  1679,  1138,   476,  2188,
     964,  1628,  2543,   971,   527,  1855,   965,  2544,  2629,  1145,
    1855,  1575,   473,  1147,   554,  2409,  1262,   999,   567,   921,
     971,  2692,   719,  1158,  2693,  2720,   979,  2035,  1855,  2036,
     473,  1149,  2015,  1968,  1796,  2367, -1696, -1696,   964,   473,
     473,  1154,  2747,  2016,   965,  1575,  1161,  2750,   794,   809,
    2751,  2542,  1962,  1745,  1284,    25,  1578,  1963,  1964,  1965,
    2762,  2767,  1162,  1216,  2768,  2245,  2512,  2771,  2515,  1628,
    2768,   721,  2786,  2517,  2256,  2787,  2520,  1125,  2825,  1125,
    1165,  2787,  2826,  2195,   971,  1575,  2502,  1181,  1969,  1970,
    1971,    30,  1972,  1973,  1974,  1975,  1976,  1977,  1164,   809,
    2502,  2212,  1962,  2834,  1773,  1774,  1216,  1963,  1964,  1965,
     594,  2840,   966,   943,  2768,   945,   980,  2858,  1039,  2219,
    2859,   473,   473,  -490,   473,  1182,   600,   600,  -490,   600,
    1184,    25,    32,   481,  1212,  1680,  2746,   964,  2887,  1578,
    1219,  2888,  1125,   965,  2241,    33,  1681,  2310,  1215,  2890,
     966,  2246,  1216,  1218,  2891,   473, -1108,  1368,  2893,  2924,
     473,  1368,  2768,  2928,  1221,   981,  2776,    30,  2943,    34,
    2459,  2787,  1239,   982,  1249,   721,   595, -1697, -1697, -1698,
   -1698, -1699, -1699,    35,  1250,   983,  1252,  1882,  1814,  1254,
    2418,  1588,   482,   542,  1599,  -490, -1700, -1700, -1701, -1701,
   -1702, -1702,   793, -1703, -1703, -1705, -1705,  2432,    32, -1706,
   -1706,  -668,   530, -1707, -1707,   793,   984,  1039,  -675,   721,
    1257,    33, -1708, -1708,   473,  1259,  1969,  1970,  1971,   473,
    1972,  1973,  1974,  1975,  1976,  1977,  1258,   710,  1260,  1232,
    1261,  2575, -1709, -1709,  -490,    34,   484, -1710, -1710,   966,
      35,   588,  1263,   596, -1712, -1712,  1967, -1714, -1714,   531,
    -558,   986,  -559,   967,  2085,   473,   473,   473,  1477,  1478,
     473,  -665,  2718,  -536,  -536,  1195,  1196,  1197,  1198,   473,
     473,   473,   473,   987,  -540,  -540,  1730,  -539,  -539,   473,
    -666,  2412,  1264,   473,  1360,  1362,   473,  1185,  1186,  1265,
     588,   967,  1267,   989,   499,  1268,  1967,  1269,   528,  -669,
    1270,   473,   473,  1784,  1271,   546,   473,   969,  -667,  1272,
    1273,  1274,  1275,  1279,   719,  1968,   585,   585,  1291,  1294,
     473,  1335,  1341,   473,  1342,   473,  2200,  1343,  1371,  1358,
    1377,   947,   949,  1407,  1409,  1415,   970,  2584,  2585,  2458,
    1433,  1829,  1434,  1435,  1440,   969,   473,  1446,  1441,  1442,
    1453,   486,  1454,   487,  1458,  1473,  1468,  1128,   473,  1480,
    1170,   588,  1187,  1188,  1485,  1968,  1481,  1490,  1498,   613,
    2051,  1491,  1578,   473,  1830,   489,   470,  1499,   490,  1501,
     597,   719,  1504,  1505,  1507,  2051,  1511,   473,   625,  1516,
     967,   470,   810,  1523,  1525,  1532,    56,  1526,  1536,   719,
     710,  2941,   473,   971,  1533,  1537,    60,  1538,   627,  1539,
    2529,   626,   629,  1571,  1580,  1585,  1301,  1645,  1647,  1665,
     473,  1652,  1672,    56,   719,  1189,  1190,  1191,  1192,  1193,
    1194,   719,  1683,  1195,  1196,  1368,  1649,  1125,  1125,  1125,
    1836,   971,  1684,  1686,   969,  1707,  1708,   471,  1724,  1731,
    1738,  1739,   500,  1746,   719,  1232,   500,   595,  1753,  1765,
    1232,  2409,   545,   500,   550,  1768,  1766,   550,  1767,  1786,
     550,   576,  1790,  1837,   500,   500,  1791,   596,  1039,  1233,
    1792,  1852,  1856,  1929,  1860,  1846,  1673,  1866,  1868,  1867,
    1869,  1894,  1233,  1883,  1887,  1888,  1895,  1891,  1896,  1897,
    1898,  1919,  1553,  1555,  1916,   710,  1905,  1906,  1969,  1970,
    1971,   721,  1972,  1973,  1974,  1975,  1976,  1977,  2583,   550,
    1927,  1918,  1939,  1947,  1950,  2010,   576,   500,   576,   576,
     576,   977,  1955,  1948,  1949,  1951,  1952,  1197,  1198,  1954,
     971,  1958,  1980,  2005,  2026,  1986,  1993,    56,  2017,  2027,
     978,  2029,  2030,  2067,  2031,  1125,  2074,   793,  1969,  1970,
    1971,  2081,  1972,  1973,  1974,  1975,  1976,  1977,  -453,  2055,
    1461,   719,  2065,  2087,  -541,   473,  2093,   794,   721,  2095,
    2096,  -453,  -542,  2092,   473,  2097,  -453,   473,  2099,  1882,
     473,  2101,  2102,  2105,  2108,  2121,   721,   473,   473,   473,
     473,   979,  2123,   473,   473,   473,   473,   473,   473,   473,
     473,   473,   473,  2136,   588,  2142,   473,   473,  2150,  2143,
    2554,   721,  2272,  2144,  2151,  2152,   473,  2160,   721,   719,
     473,  2172,  2173,  2176,  -453,  2180,  2177,  2183,  2184,   473,
    2193,  2194,   473,  2196,   473,   588,  2203,  2211,  1199,  1200,
    1983,   721,   473,  -453,  1962,   473,   473,  1982,  2260,  2261,
     473,   473,   588,  2242,  2273,  2243,  2286,  2363,  2557,  2038,
    2244,  2308,  2264,  2312,  1553,  1555,   473,  2320,   473,   712,
    2322,    56,   710,  2749,  2317,  1232,  2294,  2326,  2051,   473,
    2051,   980,  2318,  2337,   470,  2333,   470,  2341,   719,   473,
    2355,  1559,  -453,  2429,  2371,  2441,  2353,  2445,  2449,  2430,
    2435,  -453,  2695,  2468,  2431,   473,  2440,  2804,  2444,  2455,
     612,  2465,   615,  1855,   619,  2559,  2457,  2472,  2471,  2499,
    2131,  2409,  2473,  2503,  2797,  2489,  2508,  2412,  2509,  2500,
     981,  2506,  2516,  2522,  2523,  2521,  1560,  2524,   982,  2537,
    2526,  2549,  2573,  2545,  2591,  2574,  1300,  2754,  2578,  1301,
     983, -1059,  2600,  1125,  1302,  1303,  1304,  1125,  2416,  1125,
    2592, -1688,  1561, -1689,  2156,  2754,  2601, -1690,  2616,  2599,
     647,  1305, -1691,  2590,  2615,  2602,  2618,  2166,  2621,  1307,
    1562,   984,  2622,  2625,  1563,  2626,  1308,  1284, -1692,  2653,
    2634,  2678, -1693, -1694,  2769, -1695,  2857,  2769,   719,   730,
   -1696,  2827, -1697,  2640, -1698,  1564, -1699, -1700,  1565, -1701,
    2800,  1309, -1702, -1703, -1705,  2562,   721, -1706, -1707, -1708,
    2673, -1709,  2684,  1566,  2686,  2841,   986,  2843,   719, -1710,
    2687, -1711,  2658,   473,  1233,  2703,  1284, -1712,  -453,  2201,
    2689,  2202,   712,  2453, -1713,  2207,  2208, -1714,   987, -1060,
    2694,  2706,  2707,  2708,  1673,   585,  2709,  2807,  2563,   710,
     710,  2710,  2717,  2719,  2723,  2724,  2725,  2738,   989,  2748,
    2028,  2837,  2739,  2564,   710,  2752,  2776,  2760,  2761,   473,
     473,  2914,  2764,  2772,   473,   721,  2774,  2780,  2045,   473,
    2783,  2788,   473,   473,  2797,  2802,  2806,   473,   719,  2808,
    2821,   621,    56,  2045,   933,   622,  2822,   587,  2823,  2833,
     576,  1310,  2811,  1567,  2842,  2845,   637,  2846,   473,   638,
    2847,  1568,   473,   576,  2860,  2702,  2856,  1311,   500,  2862,
    2051,  2863,  1312,  2865,  2051,  2852,   470,  2868,  2869,  2870,
     470,  2874,  2875,  2876,   473,  1232,  2274,   712,  2885,  2889,
    2904,  2910,  2919,  1313,  1314,   638,   500,   500,  2925,  2926,
    2934,  2937,  2944,  1569,  2939,  2935,  2945,  1315,  2957,  2565,
    2936,  2946,  2959,   935,  2370,  1816,  2566,  1125,  2963,  2374,
    2119,  2533,  2530,  2532,  2330,  2851,   473,  2677,   902,   902,
     550,   550,  2900,   550,  2581,   721,   710,  2412,  2443,  2954,
    2801,  2906,  2940,  2933,   576,  1316,  2737,  2104,  1317,  2126,
    1424,  2448,  2902,   500,  2938,  2157,  2100,   719,  2375,  2901,
    1540,  1519,  1318,  2623,   576,  2416,  2158,  2197,  2434,  1369,
     977,  1782,  1350,  2083,  1404,  1403,   576,  2836,  2782,  2896,
    2094,  1762,  2316,  2844,  2892,  2414,  2554,  1781,  1300,   978,
    1408,  1301,  2555,   719,  1185,  1186,  2527,  2064,  2766,  2289,
    2514,  2498,  2285,  2832,  2831,  2556,  2838,  2676,  2839,  2156,
    1603,  2894,   576,   576,   576,  2884,  1589,  1591,  1604,  1605,
    1606,  1307,  2895,    56,   719,  1595,   793,   719, -1715,  1596,
    1713,  2001,   473,  2086,  2557,   721,  2558,  2024,  1942,   473,
     979,  1579,  1851,  2022,   630,  2607,  1723,   473,   473,  2058,
    2162,   473,  1320,  1309,  2824,  2315,  1551,   644,  1733,  1936,
    1372,  2331,   710,   473,   712,  1735,     0,     0,     0,  1187,
    1188,     0,   473,     0,     0,  2051,     0,   473,     0,     0,
     473,   470,  1300,     0,  2051,  1301,     0,   473,   473,  2051,
     470,  2559,  2051,     0,     0,   470,   713,     0,   470,   473,
    1284,   473,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2051,     0,     0,     0,  1307,     0,   470,     0,     0,
    2560,   473, -1715,  2008,     0,     0,     0,     0,     0,     0,
     980,  1284,  1189,  1190,  1191,  1192,  1193,  1194,   914,     0,
    1195,  1196,     0,   585,     0,     0,  2284,  1309,  2287,     0,
       0,     0,  1321, -1715,  2416,  1322,  1323,  1324,     0,  1325,
    1326,  1327,  1328,  1329,  1330,     0,   710,     0,  2528, -1715,
     960,     0,     0,     0, -1715,  1251,     0,     0,     0,   981,
       0,     0,     0,     0,     0,   473,  2561,   982,     0,   473,
     721,  2562,     0,     0,     0,     0,     0,  2051,     0,   983,
    2722,     0,     0,   470,     0,     0,  1140,  1142,  1144, -1715,
     710,     0,   588,   473,     0,     0,     0,   473,     0,     0,
       0,   721,  2607,     0,   721,     0,     0,   719,   473,  2051,
     984,     0,     0,     0,  2563,   470,     0,     0,     0,     0,
       0,     0,  1289,   473,  1197,  1198,     0, -1715,     0,  2564,
       0,   712,   712,  1125,     0,     0,     0,  1125,   473,     0,
       0,     0,     0, -1715,  1318,     0,   712,     0, -1715,   713,
       0,     0,     0,     0,     0,   986,     0,     0,     0,     0,
       0,     0,     0,     0,   576,     0,  2084,    56,     0,     0,
       0,     0,  2603,     0,     0,     0,     0,   987,     0,     0,
       0,   500,   500, -1715,     0,     0,     0,   576,   576,  1376,
       0,     0,   473,  1233,     0,   473,     0,   989,   715,     0,
       0,     0,     0,     0,  2818,     0,     0,  2051,     0,     0,
       0,     0,     0,   470,   576,  1427,   473,     0,   473,     0,
     473,     0,     0,     0,     0,  2565,     0,   576,     0,     0,
       0,   473,  2566,     0, -1715,  1199,  1200,     0,  1318,     0,
       0,     0,     0,  2051,   576,     0,     0,     0,   576,   470,
       0,  1400,   473,     0,   713,  1201,     0,  2675,     0,     0,
       0,   -39,     0,  2848,     0,     0,     0,   480,   712,     0,
       0,   481,   473,   473,     0,     0,     0,     0,  2045,     0,
       1,     0,  2045,     0,     0,     0,   473,     0,   716,     0,
       2,     0,     3,     4, -1108,     0,     0,     0,     0,     0,
       0,     0,     0,  1125,  2416,     0,    56,    56,     5,  1543,
       0,  1544,     0,     0,     0,     0,     0,     6,     0,     0,
     473,  2414,   473,     0,     0,     0,     0,     0, -1715,     7,
     482,     0,  2051,     0, -1715,     0,     0,   483,   470,     0,
       8,  1325,  1326,  1327,  1328,  1329,  1330,     0,     0,  2915,
       0,     0,     9,     0,    10,     0,     0,     0,  1363,  1607,
    1608,  1609,     0,  1610,  1611,  1612,  1613,  1614,  1615,     0,
       0,   715,    11,     0,     0,     0,     0,     0,     0,     0,
       0,  1484,  1374,     0,   484,     0,    12,     0,   473,   576,
       0,     0,   710,     0,   712,     0,    13,     0,     0,  1514,
       0,     0,    14,     0,     0,     0,     0,     0,  1416,     0,
      15,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,  1443,     0,     0,     0,    18,     0,     0, -1715,    56,
       0,   713,  1531,     0,     0,  1325,  1326,  1327,  1328,  1329,
    1330,     0,  1467,     0,     0,     0,     0,     0,     0,     0,
    2813,     0,   485,     0,    19,     0,     0,     0,     0,   710,
       0,   716,     0,   638,   638,     0,   500,   500,     0,   500,
     638,     0,   576,     0,     0,     0,   715,   710,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2045,    20,     0,     0,     0,  2045,   712,   486,
    2045,   487,   710,     0,     0,     0,     0,     0,     0,   710,
       0,     0,  1789,     0,     0,     0,     0,   488,     0,  1618,
       0,     0,  1797,   489,  1800,     0,   490,  1811,     0,     0,
    1644,     0,   710,  1815,     0,  1817,     0,     0,     0,     0,
       0,     0,   712,     0,     0,   809,     0,  1824,  1962,     0,
       0,     0,  1827,  1963,  1964,  1965,  1832,  1833,  1834,  1835,
     638,  1839,  1840,     0,     0,     0,   716,     0,     0,     0,
      21,     0,  1625,    22,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1500,    56,     0,     0,   809,  1185,  1186,
    1962,  2414,     0,   576,   902,  1963,  1964,  1965,     0,     0,
       0,    23,     0, -1493,     0,     0,    56,     0,     0,    24,
       0,     0,  2483,     0,     0,   576,     0,   576,   713,   713,
       0,     0,     0,    25,     0,     0,  1747,   718,  1752,     0,
      26,     0,     0,   713,    27,     0,     0,  2045,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,  1284,   710,
       0,     0,     0,   715,     0,    29,     0,     0,     0,    30,
     576,     0,     0,  1187,  1188,     0,  1548,     0,     0,  1427,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     500,  1798,   500,  1802,     0,   500,     0,     0,  1764,     0,
       0,   500,     0,   500,     0,    31, -1493,     0,     0,     0,
      32,     0,     0,     0,   638,   500,     0,   710,    56,   638,
     500,     0,     0,    33,   500,   500,   500,   500,     0,   500,
     500,     0,     0,     0,     0, -1495,  1189,  1190,  1191,  1192,
    1193,  1194,     0,     0,  1195,  1196,     0,    34,     0,   576,
     576,  1863,     0,   716,     0,     0,     0,     0, -1493,     0,
       0,    35, -1715,     0,   -39,   713,  1877,     0,     0,     0,
       0, -1493,     0,     0,     0,     0, -1493,    56,     0,     0,
       0, -1493,     0,     0,     0,     0,   710,     0,     0,     0,
   -1493,     0,     0,     0, -1493,     0,     0,  1722,     0,     0,
       0,     0,     0,     0,  1967,     0,     0,     0,     0,     0,
     718,     0,     0,     0,     0,     0,     0,     0,     0,  1732,
       0,  1734,     0,     0, -1493,     0,     0,     0, -1495,     0,
       0,  1968,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1493,     0,     0,     0,     0,  1197,  1198,
     715,   715,     0,     0,   712,     0,     0,     0,     0,     0,
       0,     0,     0,    56,  1777,   715,     0,     0,     0,     0,
       0,     0,     0,  1968,     0,     0,     0,     0,     0,     0,
   -1495,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   713, -1493, -1495,     0, -1493,   710,     0, -1495,     0,
       0, -1493,     0, -1495,   500,     0,     0,     0,     0,     0,
       0,  1289, -1495,     0,     0,   718, -1495,     0,     0,     0,
       0,   712,     0,     0,     0,     0,   710,     0,     0,     0,
       0,     0,     0,  1625,  1625,     0,     0,     0,  1625,   712,
     716,   716,     0,  1861,  1862,  1618, -1495,     0,     0,     0,
       0,     0,     0,     0,     0,   716, -1493,     0,     0,  1199,
    1200,     0,     0,     0,   712, -1495,     0,     0,     0,     0,
       0,   712,     0,     0,     0,     0,     0,     0,   576,  1625,
    1625,     0,     0,     0,  2179,  2054,     0,   715,     0,     0,
       0,     0,     0,     0,   712,   713,   710,     0,     0,     0,
    2054,     0,     0,     0,  2073,     0,     0,  2076,     0,  1752,
       0,  2038,     0,     0, -1495,     0,     0, -1495,     0,     0,
       0,     0,     0, -1495,  1969,  1970,  1971,     0,  1972,  1973,
    1974,  1975,  1976,  1977,     0,     0,     0,     0, -1493,   713,
       0,     0,     0,     0,   809,     0, -1493,  1962,     0,     0,
       0,     0,  1963,  1964,  1965,  1484,     0,     0,     0,     0,
       0,     0, -1493,     0, -1493, -1493,  1969,  1970,  1971,  2484,
    1972,  1973,  1974,  1975,  1976,  1977,     0,   716, -1495,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   718,     0,     0,     0,     0,     0,     0,     0,
       0, -1493,     0,     0, -1493, -1493, -1493,     0,     0,     0,
       0,   712,     0,   715,     0,   710,  1484,     0,     0,     0,
       0,   576,     0,     0,     0,     0,     0,     0,  1484,   576,
     576,   576,     0,  2038,     0,     0,     0,     0,     0,     0,
       0,     0,   500,     0,     0,     0,     0,     0,     0,   576,
       0,   710,     0,     0,     0,     0,     0,     0,     0,     0,
   -1495,  2192,     0,     0,     0,     0,     0,     0, -1495,   712,
       0,     0,  2037,     0,     0,     0,     0,   638,     0,     0,
       0,     0,   710,     0, -1495,   710, -1495, -1495,     0,     0,
       0,     0,     0,  1484,  1484,     0,     0,     0,     0,     0,
    2339,     0,     0,   716,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1618,   715,     0,     0,
       0,     0,     0, -1495,  2372,     0, -1495, -1495, -1495,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   712,  2419,
    2420,  2421,  2422,  2423,  2424,  2425,  2426,  2427,  2428,     0,
       0,  1967,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   715,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1625,  1625,  1625,  1625,   718,
     718,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,
    1625,     0,  2276,     0,   718,     0,     0,     0,     0,     0,
     576,   576,   576,   471,     0,  2054,  2293,   716,     0,     0,
    2293,  2307,     0,     0,     0,  2159,     0,     0,     0,     0,
    1968,     0,     0,  2168,  2169,  2171,     0,     0,     0,     0,
       0,     0,     0,  1625,  1625,     0,     0,     0,     0,     0,
    1752,   713,     0,  2185,     0,     0,     0,     0,   712,     0,
       0,   716,     0,     0,     0,     0,   576,     0,   500,     0,
       0,     0,  1484,  1427,  1484,     0,  1514,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   712,     0,
       0,     0,   500,     0,  2373,   710,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   500,   500,   500,
     500,   500,   500,   500,   500,   500,   500,     0,   713,     0,
       0,     0,     0,     0,     0,     0,   718,     0,     0,     0,
       0,  1427,     0,     0,   576,     0,   713,     0,     0,     0,
       0,     0,     0,     0,  1427,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1514,     0,     0,   712,     0,
       0,   713,     0,     0,     0,     0,     0,   576,   713,     0,
       0,     0,     0,     0,  1484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   713,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2281,  2282,  2283,   886,   886,     0,
       0,     0,     0,     0,     0,     0,     0, -1509,     0,     0,
       0,     0,  2476,  1969,  1970,  1971,     0,  1972,  1973,  1974,
    1975,  1976,  1977,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2492,     0,     0,   576,   576,
     576,   576,   718,     0,     0,  2293,  2307,     0,  2293,     0,
    2338,  2501,     0,     0,     0,  2054,     0,     0,     0,  2054,
    1034,  1041,     0,   715,     0,  2519,     0,   712,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   902,     0,     0,     0,  2073,     0,     0,     0,     0,
    1752,     0,     0,     0,  1618,     0,     0,     0,   713,     0,
   -1509,     0,  1427,   712,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2439,     0,
       0,     0,  1300,     0,     0,  1301,     0,  2582,     0,     0,
     715,     0,     0,     0,   712,     0,     0,   712,     0,     0,
       0,     0,     0,     0,     0,     0,   718,     0,   715,     0,
       0,  1548, -1509,   716,     0,  1307,   713,     0,     0,  2696,
       0,     0, -1715,     0,     0, -1509,     0,     0,     0,     0,
   -1509,     0,     0,   715,     0, -1509,     0,     0,     0,     0,
     715,     0,     0,     0, -1509,     0,     0,  1309, -1509,     0,
     718,     0,     0,     0,  2715,  2716,  1484,     0,     0,     0,
       0,     0,     0,   715,     0,  1877,     0,     0,     0,  2726,
    1300,     0,     0,  1301,     0,     0,  2619,     0, -1509,     0,
     716,     0,     0,     0,     0,   713,     0,     0,     0,     0,
       0,     0,  2493,  2494,  2495,  2496,     0, -1509,   716,  1034,
       0,     0,     0,  1307,     0,     0,     0,     0,     0,     0,
   -1715,     0,     0,     0,     0,     0,  1255,  2018,     0,     0,
     471,  2293,     0,   716,  2646,     0,     0,   500,     0,  2054,
     716,     0,     0,     0,  2054,  1309,     0,  2054,     0,  2657,
    1625,  2784,  2660,     0,     0,  1266, -1509, -1715,     0, -1509,
       0,     0,     0,   716,     0, -1509,  2683,     0,     0,     0,
       0,     0,     0, -1715,     0,  1276,  1277,  1278, -1715,  2805,
    1285,     0,     0,     0,     0,     0,   638,   500,     0,     0,
     715,     0,     0,     0,     0,   576,     0,     0,     0,     0,
       0,     0,     0,  1340,     0,   713,     0,   712,     0,     0,
       0,     0,     0, -1715,     0,  2265,     0,     0,     0,     0,
   -1509,     0,   500,   500,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1427,     0,   713,     0,   500,     0,  1625,
       0,     0,     0,     0,   977, -1715,     0,     0,   715,   576,
       0,     0,  2683,     0,  1382,     0,     0,     0,  1394,  1399,
       0, -1715,     0,   978,     0,     0, -1715,     0,  1318,     0,
       0,   500,     0,     0,     0,  2038,     0,     0,     0,     0,
     716,     0,     0,     0,  2054,     0,     0,     0,     0,  2660,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1715, -1509,     0,  2779,   713,     0,  1625,     0,   500,
   -1509,     0,  1034,     0,   979,  2361,     0,   715,   576,  1034,
       0,     0,     0,  2362,     0,     0, -1509,     0, -1509, -1509,
       0,     0,     0,     0,     0,     0,     0,   500,   716,     0,
    1034,   638,     0,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,     0,   576,     0,  1318,     0, -1715,     0,
       0,     0,   718,     0,     0, -1509,     0,     0, -1509, -1509,
   -1509,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2363,     0,   471,     0,     0,     0,     0,     0,     0,  2704,
    1333,  2835,     0,     0,     0,   500,     0,     0,     0,  2657,
       0,     0,     0,     0,   980,     0,     0,   716,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2683,   638,
     638,   638,     0,  1300,   713,     0,  1301,   715,     0,   718,
       0,  1302,  1303,  1304,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2743,     0,     0, -1715,   718,     0,     0,
       0,     0,     0,   981,     0,  1034,  1307,   715, -1715,     0,
     713,   982,     0,  1308,  2657,  1325,  1326,  1327,  1328,  1329,
    1330,     0,   718,   983,     0,  2364,  2779,     0,  2646,   718,
       0,     0,     0,     0,     0,     0,     0,  1752,  1309,     0,
       0,   713,     0,     0,   713,     0,     0,     0,  1333,     0,
    1300,  1427,   718,  1301,   984,  1333,     0,  2683,  1302,  1303,
    1304,     0,  2793,     0,     0,     0,     0,   716,     0,     0,
       0,     0,     0,     0,     0,  1305,     0,   715,   638,     0,
       0,     0,     0,  1307,     0,     0,  1300,     0,     0,  1301,
    1308,     0,     0,     0,     0,     0, -1715,   716,  2817,   986,
       0,     0,     0,  1325,  1326,  1327,  1328,  1329,  1330,     0,
       0,     0,     0,     0,     0,  1309,     0,  1583,     0,  1307,
       0,   987,     0,     0,     0,     0, -1715,  1602,     0,  1619,
       0,     0,  1631,  1634,  1639,  1642,     0,     0,  1310,     0,
       0,   989,   964,  2365,     0,     0,  2366,     0,   965,     0,
       0,  1309,     0,     0,  1311,   977,  1654,     0,     0,  1312,
       0,     0,  1658,  1659,  1660,  1661,     0,   716,     0,   718,
    1670,  1671,     0,     0,   978,  1682,     0,     0,     0,  1685,
   -1715, -1715,  1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,
    1701,     0,     0,  1702,  1315,     0,   715,     0,  1710,     0,
       0,  1714,     0,   886,     0,  1034,     0,     0,     0,     0,
       0,     0,     0,  1300,     0,  1310,  1301,     0,     0,     0,
       0,  2268,     0,     0,     0,   979,     0,   718,  1736,     0,
       0,  1311,   715,     0,     0, -1715,  1312,     0,     0,     0,
       0,     0,     0,     0,   713,     0,  1307,     0,  1435,  1318,
       0, -1715,     0, -1715,   966,  1277,  1278,  1313,  1314,     0,
       0,     0,     0,   715,     0,     0,   715, -1715,     0,  1333,
       0,  1315, -1715,     0,     0,     0,     0,     0,  1309,     0,
    1333,     0,     0,     0,  1626,     0,   716,     0,     0,     0,
    1333,  1333,  1333,     0,     0,     0,   718,     0,     0,  1333,
       0,     0,     0,     0,     0,     0,     0, -1715,     0,  1316,
       0,     0,  1317,     0,     0,   980,     0,     0,     0,     0,
       0,     0,   716,     0,     0,     0,  1318,     0,     0,  1319,
       0,     0,     0,     0,  1034,     0,     0,  1848,  1849,  1320,
    1850,     0,     0,     0,     0,     0,     0,     0,  2269,     0,
       0,     0,     0,   716,  1333,     0,   716,     0,     0,     0,
       0,     0,  1318,     0,   981,     0,     0,     0,     0,     0,
       0,  1886,   982,     0,     0,     0,     0,     0, -1715,     0,
       0,     0,     0,     0,   983,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1715,     0,  1333,     0,     0, -1715,
       0,     0,     0,     0,     0,   967,   718,     0,  1333,     0,
       0,     0,     0,  1333,     0,   984,  1320,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1034, -1715,     0,   718,     0,     0,  1321,
    1940,     0,  1322,  1323,  1324,  1946,  1325,  1326,  1327,  1328,
    1329,  1330, -1715,     0,     0,   985,     0,     0,     0,   969,
     986,     0,     0,     0,     0,     0,   715,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   987,  1961,     0,     0,     0,     0,   988,  1318,
       0,     0,     0,     0,     0,  1639,     0,  1639,  1639,     0,
       0,     0,   989,     0,     0,  1997,   718,     0,     0,  2000,
       0,     0,  2002,     0,     0,     0,  1321,     0,     0,  1322,
    1323,  1324,     0,  1325,  1326,  1327,  1328,  1329,  1330,     0,
       0,     0,     0,     0,     0,     0,  1953,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2020,     0,     0,  2023,
       0,  2025, -1715,     0,     0,   971,   716,     0,     0,  1325,
    1326,  1327,  1328,  1329,  1330,     0,     0,     0,     0,  1299,
       0,     0,     0,     0,  1300,     0,     0,  1301,     0, -1715,
       0,     0,  1302,  1303,  1304,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1333,     0,  1305,
       0,     0,  1306,     0,     0,     0,     0,  1307,     0,     0,
       0,     0,     0,  1382,  1308,     0,  1333,     0,     0,     0,
       0,     0,     0,     0,     0,   718,     0,     0,  1399,     0,
       0,     0,     0,  1333,     0,  1626,  1626,     0,  1978,  1309,
    1626,     0,     0,     0,     0,  1333,  2098,     0,  1333,     0,
       0,     0,     0,  1333,     0,     0,  1333,     0,     0,     0,
       0,   718,     0,     0,     0,     0,     0,     0,  1333,     0,
       0,     0,  1333,  1333,  1333,  1333,     0,     0,     0, -1715,
       0,  1626,  1626,     0,  1333,  1333,  1325,  1326,  1327,  1328,
    1329,  1330,   718,     0,     0,   718,  1333,     0,     0,  1333,
       0,     0,     0,     0,  1034,     0,     0,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,     0,     0,     0,
       0,     0,     0,     0,  1333,     0,     0,     0,  1333,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1310,
       0,     0,     0,  1300,     0,     0,  1301,     0,     0,     0,
    1333,  1302,  1303,  1304,     0,  1311,     0,     0,     0,     0,
    1312,     0,     0,     0,     0,     0,     0,     0,  1305,     0,
       0,  2251,     0,     0,     0,     0,  1307,     0,     0,     0,
       0,  1313,  1314,  1308,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1315,     0,     0,     0,     0,
       0,  2210,     0,     0,     0,     0,     0,     0,  1309,     0,
    2214,     0,     0,  2215,     0,     0,  2217,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1316,     0,     0,  1317,     0,     0,     0,
       0,     0,  2237,  2238,     0,   964,     0,     0,     0,     0,
    1318,   965,     0,  1319,     0,     0,  2248,     0,   977,     0,
       0,     0,  1333,  1333,  1333,  2254,     0,     0,  2257,     0,
    2259,     0,     0,     0,     0,     0,     0,   978,  2263,     0,
       0,     0,     0,     0,     0,     0,  2270,  2271,     0,     0,
       0,     0,     0,  1300,     0,   718,  1301,     0,     0,     0,
    1333,  1302,  1303,  1304,     0,     0,     0,     0,  1310,     0,
       0,     0,     0,     0,     0,  2311,     0,     0,  1305,     0,
       0,     0,     0,     0,  1311,  2319,  1307,     0,   979,  1312,
       0,     0,     0,  1308,     0,     0,     0,     0,     0,     0,
    1320,  2332,     0,     0,     0,     0,     0,     0,     0,     0,
    1313,  1314,     0,     0,  1333,     0,     0,   966,  1309,     0,
    1333,     0,     0,     0,  1315,     0,     0,     0,     0,     0,
       0,     0,     0,  1978,  1978,  1333,     0,  1626,  1626,  1626,
    1626,     0,     0,  1626,  1626,  1626,  1626,  1626,  1626,  1626,
    1626,  1626,  1626,  1978,     0,     0,     0,     0,     0,     0,
       0,     0,  1316,     0,     0,  1317,     0,     0,     0,     0,
       0,  1333,     0,     0,  1333,     0,  1333,     0,   980,  1318,
    1978,  1978,  1319,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1333,  1626,  1626,  1333,     0,  1333,
    1321,     0,     0,  1322,  1323,  1324,     0,  1325,  1326,  1327,
    1328,  1329,  1330,     0,     0,     0,     0,     0,  1310,     0,
       0,     0,     0,     0,     0,     0,     0,   981,     0,  2464,
       0,     0,     0,     0,  1311,   982,     0,     0,     0,  1312,
       0,     0,     0,     0,     0,     0,     0,   983,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1313,  1314,     0,     0,     0,     0,     0,     0,   967,  1320,
       0,     0,  1333,     0,  1315,  2477,  2478,     0,   984,     0,
    2479,     0,     0,     0,     0,  2482,     0,     0,  2485,  2486,
       0,  1300,     0,  2490,  1301,     0,     0,     0,     0,  1302,
    1303,  1304,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1316,     0,     0,  1317,  1305,     0,  1818,     0,
       0,     0,   969,   986,  1307,     0,     0,     0,     0,  1318,
       0,  1308,  1319,     0,     0,     0,     0,     0,     0,     0,
     886,     0,     0,     0,     0,   987,     0,     0,     0,     0,
       0,  1819,     0,     0,     0,     0,  1309,     0,     0,     0,
       0,     0,     0,     0,     0,   989,     0,     0,     0,  1321,
       0,     0,  1322,  1323,  1324,     0,  1325,  1326,  1327,  1328,
    1329,  1330,  2576,     0,  1333,     0,  1648,     0,  1333,  1333,
    1300,  1333,     0,  1301,  1978,  1978,  1978,  1978,     0,     0,
       0,  1978,  1978,  1978,  1978,  1978,  1978,  1978,  1978,  1978,
    1978,  1333,  1333,     0,     0,     0,     0,     0,   971,  1320,
       0,     0,  1333,  1307,     0,     0,  1300,     0,  1333,  1301,
   -1715,  1333,     0,  1333,  1302,  1303,  1304,  1333,     0,     0,
    1978,  1978,     0,     0,  1333,  1333,     0,     0,     0,     0,
       0,  1305,     0,     0,     0,  1309,  1310,     0,     0,  1307,
       0,     0,     0,     0,     0,     0,  1308,     0,     0,     0,
       0,     0,  1311,     0,     0,     0,     0,  1312,     0,     0,
       0,     0,     0,     0,     0,  1333,     0,     0,     0,     0,
       0,  1309,     0,  1333,     0,  1997,     0,     0,  1313,  1314,
       0,     0,     0,  2630,  2631,     0,  1333,  2632,  1300,     0,
       0,  1301,  1315,     0,     0,     0, -1715, -1715, -1715,  1321,
       0,     0,  1322,  1323,  1324,  2487,  1325,  1326,  1327,  1328,
    1329,  1330,     0,     0,     0,     0,  1648,     0,     0,     0,
       0,  1307,     0,  2671,  2672,     0,     0,     0,  1308,     0,
    1316,     0,     0,  1317,     0, -1715,     0,  2685,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1318,     0,     0,
    1319, -1715,     0,  1309,     0,     0, -1715,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1310,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1311,     0,     0,
       0, -1715,  1312,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1313,  1314,     0,     0,     0,  1333,     0,
       0,     0,  1626,     0,     0,     0,     0,  1315,     0,     0,
       0,  1333,  1333,  1333,     0,     0,  1333,  1320,     0,  1333,
    1333,     0,     0,     0,  1333,     0,  1318,     0,     0,  2763,
       0,     0,     0,  1310,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1285,  1316,     0,     0,  1317,  1311,
       0,     0,     0,     0,  1312,     0,     0,     0,     0,  2785,
       0,     0,  1318,     0,     0,  1319,     0,     0,     0,     0,
       0,     0,     0,     0,  2799,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1315,
       0,  1626,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,     0,     0,     0, -1715,  1321,     0,     0,
    1322,  1323,  1324,     0,  1325,  1326,  1327,  1328,  1329,  1330,
       0,     0,     0,     0,  2004,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1318,     0,     0,     0,     0,     0,
       0,     0,  1320,     0,     0,     0,  2671,     0,  1978,  1626,
       0,     0,     0,     0,  1333,  1333,  1333,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2867,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1333,  1333,     0,  2881,  2881,
       0,     0,     0,     0,     0,     0, -1715,     0,     0,  1333,
       0,     0,  2671,  1325,  1326,  1327,  1328,  1329,  1330,     0,
       0,  1978,     0,     0,  1320,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1321,     0,     0,  1322,  1323,  1324,  2881,  1325,
    1326,  1327,  1328,  1329,  1330,     0,     0,     0,     0,  2213,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1978,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1333,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1333,
       0,     0,     0,     0,  2881,     0,     0,     0,     0,     0,
       0,     0,     0,  1333,  1321,     0,     0, -1715, -1715, -1715,
       0,  1325,  1326,  1327,  1328,  1329,  1330,     0,     0,     0,
       0,  1001,   806,   542,   807,   808,   809,   810,   811,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,  1002,   100,   101,   102,     0,
       0,     0,     0,   812,     0,     0,   103,   104,     0,   105,
     106,   107,  1003,   109,   110,   111,   112,   813,  1004,   814,
     815,  1333,   117,   118,   119,   120,   121,   122,   816,   817,
     123,   124,   818,   819,   127,  1333,   128,   129,   130,   131,
     820,     0,  1005,     0,   134,   135,   136,   137,   138,   139,
    1006,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,  1007,   151,   152,   153,   822,   823,   824,  1008,
     826,   827,   828,   155,   156,   157,   158,   159,   160,   161,
     829,   830,   164,   831,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,  1009,     0,
     177,   178,   668,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   832,   193,
     194,   195,   196,   833,   834,   198,     0,   199,   200,   835,
     202,     0,   203,     0,   204,  1010,     0,  1011,   207,   208,
     209,  1012,   211,     0,   212,     0,   836,   837,   215,     0,
     216,   217,   218,   219,   220,   221,     0,  1013,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,  1014,   235,   236,   237,   238,   239,   838,   839,     0,
     840,     0,   243,  1015,  1016,   246,  1017,   248,   249,   250,
     251,   252,     0,     0,   253,  1018,   255,  1019,     0,   257,
     258,   259,   841,   842,   260,   261,   262,   263,   264,  1020,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   843,  1021,
     844,   287,   288,   289,   290,   845,   291,   292,  1022,   294,
     846,   847,   296,   848,   298,   299,   300,     0,   301,   302,
       0,     0,   849,   304,   305,     0,     0,   306,   307,  1023,
     309,  1024,   850,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   851,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   852,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,  1025,   360,   361,   362,   853,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,   854,   380,   381,   382,
     383,   384,  1026,   386,   387,   855,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,  1027,
     402,   856,   404,     0,   405,   406,     0,   407,  1028,   409,
     410,   411,   412,   413,     0,   857,   858,     0,     0,   416,
     417,   859,   419,   860,   861,   421,   422,  1029,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     863,     0,   434,   435,   436,   437,   438,   439,   864,  1030,
     441,  1031,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   865,     0,     0,     0,     0,     0,     0,   866,
     867,  1032,     0,     0,     0,     0,   869,     0,   870,  1033,
       0,     0,     0,   871,     0,   872,   873,    91,   806,   542,
     807,   808,   809,   810,   811,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   812,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   813,   114,   814,   815,     0,   117,   118,
     119,   120,   121,   122,   816,   817,   123,   124,   818,   819,
     127,     0,   128,   129,   130,   131,   820,     0,   821,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,   153,   822,   823,   824,   825,   826,   827,   828,   155,
     156,   157,   158,   159,   160,   161,   829,   830,   164,   831,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   668,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   832,   193,   194,   195,   196,   833,
     834,   198,     0,   199,   200,   835,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209,   210,   211,     0,
     212,     0,   836,   837,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,   234,   235,   236,
     237,   238,   239,   838,   839,     0,   840,     0,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,     0,
     253,   254,   255,   256,     0,   257,   258,   259,   841,   842,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   843,   285,   844,   287,   288,   289,
     290,   845,   291,   292,   293,   294,   846,   847,   296,   848,
     298,   299,   300,     0,   301,   302,     0,     0,   849,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   850,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   851,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   852,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,   361,   362,   853,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    25,   375,   376,   377,
     378,   379,   854,   380,   381,   382,   383,   384,   385,   386,
     387,   855,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   856,   404,     0,
     405,   406,    30,   407,   408,   409,   410,   411,   412,   413,
       0,   857,   858,     0,     0,   416,   417,   859,   419,   860,
     861,   421,   422,   862,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   863,     0,   434,   435,
     436,   437,   438,   568,   864,     0,   441,   442,   443,   444,
     445,   446,     0,     0,   447,     0,    33,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   865,     0,
      34,     0,     0,     0,     0,   866,   867,     0,     0,     0,
       0,     0,   869,     0,   870,  2775,     0,     0,     0,   871,
       0,   872,   873,    91,   806,   542,   807,   808,   809,   810,
     811,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,   812,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   813,
     114,   814,   815,     0,   117,   118,   119,   120,   121,   122,
     816,   817,   123,   124,   818,   819,   127,     0,   128,   129,
     130,   131,   820,     0,   821,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,   152,   153,   822,   823,
     824,   825,   826,   827,   828,   155,   156,   157,   158,   159,
     160,   161,   829,   830,   164,   831,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   668,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     832,   193,   194,   195,   196,   833,   834,   198,     0,   199,
     200,   835,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,   836,   837,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,   234,   235,   236,   237,   238,   239,   838,
     839,     0,   840,     0,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,     0,   253,   254,   255,   256,
       0,   257,   258,   259,   841,   842,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     843,   285,   844,   287,   288,   289,   290,   845,   291,   292,
     293,   294,   846,   847,   296,   848,   298,   299,   300,     0,
     301,   302,     0,     0,   849,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   850,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   851,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   852,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,   361,   362,
     853,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    25,   375,   376,   377,   378,   379,   854,   380,
     381,   382,   383,   384,   385,   386,   387,   855,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   856,   404,     0,   405,   406,    30,   407,
     408,   409,   410,   411,   412,   413,     0,   857,   858,     0,
       0,   416,   417,   859,   419,   860,   861,   421,   422,   862,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   863,     0,   434,   435,   436,   437,   438,   568,
     864,     0,   441,   442,   443,   444,   445,   446,     0,     0,
     447,     0,    33,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   865,     0,    34,     0,     0,     0,
       0,   866,   867,     0,     0,     0,     0,     0,   869,     0,
     870,     0,     0,     0,     0,   871,     0,   872,   873,    91,
     806,   542,   807,   808,   809,   810,   811,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   812,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   813,   114,   814,   815,  1635,
     117,   118,   119,   120,   121,   122,   816,   817,   123,   124,
     818,   819,   127,     0,   128,   129,   130,   131,   820,     0,
     821,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   822,   823,   824,   825,   826,   827,
     828,   155,   156,   157,   158,   159,   160,   161,   829,   830,
     164,   831,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     668,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   832,   193,   194,   195,
     196,   833,   834,   198,     0,   199,   200,   835,   202,     0,
     203,     0,   204,   205,  1636,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   836,   837,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,  1637,   253,   254,   255,   256,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,   845,   291,   292,   293,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
     385,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,  1638,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,   234,   235,   236,   237,   238,
     239,   838,   839,     0,   840,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,     0,   253,   254,
     255,   256,     0,   257,   258,   259,   841,   842,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   843,   285,   844,   287,   288,   289,   290,   845,
     291,   292,   293,   294,   846,   847,   296,   848,   298,   299,
     300,     0,   301,   302,     0,     0,   849,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   850,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     851,   325,   326,   327,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   852,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
     361,   362,   853,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
     854,   380,   381,   382,   383,   384,   385,   386,   387,   855,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   856,   404,     0,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,   857,
     858,     0,     0,   416,   417,   859,   419,   860,   861,   421,
     422,   862,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   863,     0,   434,   435,   436,   437,
     438,   439,   864,     0,   441,   442,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   865,     0,     0,     0,
       0,     0,     0,   866,   867,   868,     0,     0,     0,     0,
     869,     0,   870,     0,     0,     0,     0,   871,     0,   872,
     873,    91,   806,   542,   807,   808,   809,   810,   811,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,  1392,   100,   101,   102,     0,
       0,     0,     0,   812,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   813,   114,   814,
     815,     0,   117,   118,   119,   120,   121,   122,   816,   817,
     123,   124,   818,   819,   127,     0,   128,   129,   130,   131,
     820,     0,   821,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,   151,   152,   153,   822,   823,   824,   825,
     826,   827,   828,   155,   156,   157,   158,   159,   160,   161,
     829,   830,   164,   831,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   668,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   832,   193,
     194,   195,   196,   833,   834,   198,     0,   199,   200,   835,
     202,     0,   203,     0,   204,   205,     0,   206,   207,   208,
     209,   210,   211,     0,   212,     0,   836,   837,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,   234,   235,   236,   237,   238,   239,   838,   839,     0,
     840,     0,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,     0,   253,   254,   255,   256,     0,   257,
     258,   259,   841,   842,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   843,   285,
     844,   287,   288,   289,   290,   845,   291,   292,   293,   294,
     846,   847,   296,   848,   298,   299,   300,     0,   301,   302,
       0,     0,   849,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   850,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   851,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   852,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,   361,   362,   853,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,   854,   380,   381,   382,
     383,   384,   385,   386,   387,   855,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   856,   404,     0,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,   857,   858,     0,     0,   416,
     417,   859,   419,   860,   861,   421,   422,   862,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     863,     0,   434,   435,   436,   437,   438,   439,   864,     0,
     441,   442,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   865,     0,     0,     0,     0,     0,     0,   866,
     867,     0,     0,     0,     0,     0,   869,     0,   870,     0,
       0,     0,     0,   871,     0,   872,   873,  1001,   806,   542,
     807,   808,   809,   810,   811,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   812,
       0,     0,   103,   104,     0,   105,   106,   107,  1003,   109,
     110,   111,   112,   813,  1004,   814,   815,     0,   117,   118,
     119,   120,   121,   122,   816,   817,   123,   124,   818,   819,
     127,     0,   128,   129,   130,   131,   820,     0,  1005,     0,
     134,   135,   136,   137,   138,   139,  1006,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,  1007,   151,
     152,   153,   822,   823,   824,  1008,   826,   827,   828,   155,
     156,   157,   158,   159,   160,   161,   829,   830,   164,   831,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   668,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   832,   193,   194,   195,   196,   833,
     834,   198,     0,   199,   200,   835,   202,     0,   203,     0,
     204,  1010,     0,  1011,   207,   208,   209,  1012,   211,     0,
     212,     0,   836,   837,   215,     0,   216,   217,   218,   219,
     220,   221,     0,  1013,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,  1014,   235,   236,
     237,   238,   239,   838,   839,     0,   840,     0,   243,  1015,
    1016,   246,  1017,   248,   249,   250,   251,   252,     0,     0,
     253,  1018,   255,  1019,     0,   257,   258,   259,   841,   842,
     260,   261,   262,   263,   264,  1020,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   843,  1021,   844,   287,   288,   289,
     290,   845,   291,   292,  1022,   294,   846,   847,   296,   848,
     298,   299,   300,     0,   301,   302,     0,     0,   849,   304,
     305,     0,     0,   306,   307,  1023,   309,  1024,   850,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   851,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   852,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
    1025,   360,   361,   362,   853,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,   854,   380,   381,   382,   383,   384,  1026,   386,
     387,   855,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,  1027,   402,   856,   404,     0,
     405,   406,     0,   407,  1028,   409,   410,   411,   412,   413,
       0,   857,   858,     0,     0,   416,   417,   859,   419,   860,
     861,   421,   422,  1029,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   863,     0,   434,   435,
     436,   437,   438,   439,   864,     0,   441,  1031,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   865,     0,
       0,     0,     0,     0,     0,   866,   867,     0,     0,     0,
       0,     0,   869,     0,   870,  1509,     0,     0,     0,   871,
       0,   872,   873,    91,   806,   542,   807,   808,   809,   810,
     811,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,   812,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   813,
     114,   814,   815,     0,   117,   118,   119,   120,   121,   122,
     816,   817,   123,   124,   818,   819,   127,     0,   128,   129,
     130,   131,   820,     0,   821,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,   152,   153,   822,   823,
     824,   825,   826,   827,   828,   155,   156,   157,   158,   159,
     160,   161,   829,   830,   164,   831,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   668,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     832,   193,   194,   195,   196,   833,   834,   198,     0,   199,
     200,   835,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,   836,   837,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,   234,   235,   236,   237,   238,   239,   838,
     839,     0,   840,     0,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,     0,   253,   254,   255,   256,
       0,   257,   258,   259,   841,   842,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     843,   285,   844,   287,   288,   289,   290,   845,   291,   292,
     293,   294,   846,   847,   296,   848,   298,   299,   300,     0,
     301,   302,     0,     0,   849,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   850,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   851,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   852,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,   361,   362,
     853,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,   854,   380,
     381,   382,   383,   384,   385,   386,   387,   855,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   856,   404,     0,   405,   406,     0,   407,
     408,   409,   410,   411,   412,   413,     0,   857,   858,     0,
       0,   416,   417,   859,   419,   860,   861,   421,   422,   862,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   863,     0,   434,   435,   436,   437,   438,   439,
     864,     0,   441,   442,   443,   444,   445,   446,     0,     0,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   865,     0,     0,     0,     0,     0,
       0,   866,   867,     0,     0,     0,     0,     0,   869,     0,
     870,  1629,     0,     0,     0,   871,     0,   872,   873,  1001,
     806,   542,   807,   808,   809,   810,   811,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   812,     0,     0,   103,   104,     0,   105,   106,   107,
    1003,   109,   110,   111,   112,   813,  1004,   814,   815,     0,
     117,   118,   119,   120,   121,   122,   816,   817,   123,   124,
     818,   819,   127,     0,   128,   129,   130,   131,   820,     0,
    1005,     0,   134,   135,   136,   137,   138,   139,  1006,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
    1007,   151,   152,   153,   822,   823,   824,  1008,   826,   827,
     828,   155,   156,   157,   158,   159,   160,   161,   829,   830,
     164,   831,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     668,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   832,   193,   194,   195,
     196,   833,   834,   198,     0,   199,   200,   835,   202,     0,
     203,     0,   204,  1010,     0,  1011,   207,   208,   209,  1012,
     211,     0,   212,     0,   836,   837,   215,     0,   216,   217,
     218,   219,   220,   221,     0,  1013,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,  1014,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,  1015,  1016,   246,  1017,   248,   249,   250,   251,   252,
       0,     0,   253,  1018,   255,  1019,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,  1020,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,  1021,   844,   287,
     288,   289,   290,   845,   291,   292,  1022,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,  1023,   309,  1024,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,  1025,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
    1026,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,  1027,   402,   856,
     404,     0,   405,   406,     0,   407,  1028,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,  1029,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,  1844,   441,  1031,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
    1636,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,   234,   235,   236,   237,   238,
     239,   838,   839,     0,   840,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,     0,   253,   254,
     255,   256,     0,   257,   258,   259,   841,   842,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   843,   285,   844,   287,   288,   289,   290,   845,
     291,   292,   293,   294,   846,   847,   296,   848,   298,   299,
     300,     0,   301,   302,     0,     0,   849,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   850,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     851,   325,   326,   327,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   852,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
     361,   362,   853,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
     854,   380,   381,   382,   383,   384,   385,   386,   387,   855,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   856,   404,     0,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,   857,
     858,     0,     0,   416,   417,   859,   419,   860,   861,   421,
     422,   862,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   863,     0,   434,   435,   436,   437,
     438,   439,   864,     0,   441,   442,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   865,     0,     0,     0,
       0,     0,     0,   866,   867,     0,     0,     0,     0,     0,
     869,     0,   870,     0,     0,     0,     0,   871,     0,   872,
     873,    91,   806,   542,   807,   808,   809,   810,   811,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,   812,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   813,   114,   814,
     815,     0,   117,   118,   119,   120,   121,   122,   816,   817,
     123,   124,   818,   819,   127,     0,   128,   129,   130,   131,
     820,     0,   821,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,   151,   152,   153,   822,   823,   824,   825,
     826,   827,   828,   155,   156,   157,   158,   159,   160,   161,
     829,   830,   164,   831,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   668,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   832,   193,
     194,   195,   196,   833,   834,   198,     0,   199,   200,   835,
     202,     0,   203,     0,   204,   205,     0,   206,   207,   208,
     209,   210,   211,     0,   212,     0,   836,   837,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,   234,   235,   236,   237,   238,   239,   838,   839,     0,
     840,     0,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,     0,   253,   254,   255,   256,     0,   257,
     258,   259,   841,   842,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   843,   285,
     844,   287,   288,   289,   290,   845,   291,   292,   293,   294,
     846,   847,   296,   848,   298,   299,   300,     0,   301,   302,
       0,     0,   849,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   850,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   851,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   852,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,   361,   362,   853,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,   854,   380,   381,   382,
     383,   384,   385,   386,   387,   855,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   856,   404,     0,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,   857,   858,     0,     0,   416,
     417,   859,   419,   860,   861,   421,   422,   862,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     863,     0,   434,   435,   436,   437,   438,   439,   864,     0,
     441,   442,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   865,     0,     0,     0,     0,     0,     0,   866,
     867,     0,     0,     0,     0,     0,   869,     0,   870,     0,
       0,     0,     0,   871,     0,   872,   873,  1001,   806,   542,
     807,   808,   809,   810,   811,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   812,
       0,     0,   103,   104,     0,   105,   106,   107,  1003,   109,
     110,   111,   112,   813,  1004,   814,   815,     0,   117,   118,
     119,   120,   121,   122,   816,   817,   123,   124,   818,   819,
     127,     0,   128,   129,   130,   131,   820,     0,  1005,     0,
     134,   135,   136,   137,   138,   139,  1006,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,  1007,   151,
     152,   153,   822,   823,   824,  1008,   826,   827,   828,   155,
     156,   157,   158,   159,   160,   161,   829,   830,   164,   831,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   668,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   832,   193,   194,   195,   196,   833,
     834,   198,     0,   199,   200,   835,   202,     0,   203,     0,
     204,  1010,     0,  1011,   207,   208,   209,  1012,   211,     0,
     212,     0,   836,   837,   215,     0,   216,   217,   218,   219,
     220,   221,     0,  1013,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,  1014,   235,   236,
     237,   238,   239,   838,   839,     0,   840,     0,   243,  1015,
    1016,   246,  1017,   248,   249,   250,   251,   252,     0,     0,
     253,  1018,   255,  1019,     0,   257,   258,   259,   841,   842,
     260,   261,   262,   263,   264,  1020,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   843,  1021,   844,   287,   288,   289,
     290,   845,   291,   292,  1022,   294,   846,   847,   296,   848,
     298,   299,   300,     0,   301,   302,     0,     0,   849,   304,
     305,     0,     0,   306,   307,  1023,   309,  1024,   850,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   851,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   852,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
    1025,   360,   361,   362,   853,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,   854,   380,   381,   382,   383,   384,  1026,   386,
     387,   855,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,  1027,   402,   856,   404,     0,
     405,   406,     0,   407,  1028,   409,   410,   411,   412,   413,
       0,   857,   858,     0,     0,   416,   417,   859,   419,   860,
     861,   421,   422,  1029,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   863,     0,   434,   435,
     436,   437,   438,   439,   864,     0,   441,  1031,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   865,     0,
       0,     0,     0,     0,     0,   866,   867,     0,     0,     0,
       0,     0,   869,     0,   870,     0,     0,     0,     0,   871,
       0,   872,   873,    91,   806,   542,   807,   808,   809,   810,
     811,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,   812,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   813,
     114,   814,   815,     0,   117,   118,   119,   120,   121,   122,
     816,   817,   123,   124,   818,   819,   127,     0,   128,   129,
     130,   131,   820,     0,   821,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,   152,   153,   822,   823,
     824,   825,   826,   827,   828,   155,   156,   157,   158,   159,
     160,   161,   829,   830,   164,   831,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   668,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     832,   193,   194,   195,   196,   833,   834,   198,     0,   199,
     200,   835,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,   836,   837,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,   234,   235,   236,   237,   238,   239,   838,
     839,     0,   840,     0,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,     0,   253,   254,   255,   256,
       0,   257,   258,   259,   841,   842,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     843,   285,   844,   287,   288,   289,   290,   845,   291,   292,
     293,   294,   846,   847,   296,   848,   298,   299,   300,     0,
     301,   302,     0,     0,   849,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   850,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   851,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   852,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,   361,   362,
     853,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,   854,   380,
     381,   382,   383,   384,   385,   386,   387,   855,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   856,   404,     0,   405,   406,     0,   407,
     408,   409,   410,   411,   412,   413,     0,   857,   858,     0,
       0,   416,   417,   859,   419,   860,   861,   421,   422,   862,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   863,     0,   434,   435,   436,   437,   438,   439,
     864,     0,   441,   442,   443,   444,   445,   446,     0,     0,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   865,     0,     0,     0,     0,     0,
       0,  1395,  1396,     0,     0,     0,     0,     0,   869,     0,
     870,     0,     0,     0,     0,   871,     0,   872,   873,    91,
    1769,   542,   807,   808,   809,   810,   811,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   812,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   813,   114,   814,   815,     0,
     117,   118,   119,   120,   121,   122,   816,   817,   123,   124,
     818,   819,   127,     0,   128,   129,   130,   131,   820,     0,
     821,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   822,   823,   824,   825,   826,   827,
     828,   155,   156,   157,   158,   159,   160,   161,   829,   830,
     164,   831,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     668,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   832,   193,   194,   195,
     196,   833,   834,   198,     0,   199,   200,   835,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   836,   837,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255,   256,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,   845,   291,   292,   293,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
     385,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,   234,   235,   236,   237,   238,
     239,   838,   839,     0,   840,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,     0,   253,   254,
     255,   256,     0,   257,   258,   259,   841,   842,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   843,   285,   844,   287,   288,   289,   290,   845,
     291,   292,   293,   294,   846,   847,   296,   848,   298,   299,
     300,     0,   301,   302,     0,     0,   849,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   850,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     851,   325,   326,   327,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   852,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
     361,   362,   853,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
     854,   380,   381,   382,   383,   384,   385,   386,   387,   855,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   856,   404,     0,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,   857,
     858,     0,     0,   416,   417,   859,   419,   860,   861,   421,
     422,   862,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   863,     0,   434,   435,   436,   437,
     438,   439,   864,     0,   441,   442,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   865,     0,     0,     0,
       0,     0,     0,   866,   867,     0,     0,     0,     0,     0,
     869,     0,  1996,     0,     0,     0,     0,   871,     0,   872,
     873,    91,   806,   542,   807,   808,   809,   810,   811,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,   812,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   813,   114,   814,
     815,     0,   117,   118,   119,   120,   121,   122,   816,   817,
     123,   124,   818,   819,   127,     0,   128,   129,   130,   131,
     820,     0,   821,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,   151,  2661,   153,   822,   823,   824,   825,
     826,   827,   828,   155,   156,   157,   158,   159,   160,   161,
     829,   830,   164,   831,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   668,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   832,   193,
     194,   195,   196,   833,   834,   198,     0,   199,   200,   835,
     202,     0,   203,     0,   204,   205,     0,   206,   207,   208,
     209,   210,   211,     0,   212,     0,  2662,   837,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,   234,   235,   236,   237,   238,   239,   838,   839,     0,
     840,     0,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,     0,   253,   254,   255,   256,     0,   257,
     258,   259,   841,   842,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   843,   285,
     844,   287,   288,   289,   290,   845,   291,   292,   293,   294,
     846,   847,   296,   848,   298,   299,   300,     0,   301,   302,
       0,     0,   849,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   850,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   851,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   852,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,   361,  2663,   853,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,   854,   380,   381,   382,
     383,   384,   385,   386,   387,   855,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   856,   404,     0,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,   857,   858,     0,     0,   416,
     417,   859,   419,   860,   861,   421,   422,   862,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     863,     0,   434,   435,   436,   437,   438,   439,   864,     0,
     441,   442,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   865,     0,     0,     0,     0,     0,     0,   866,
     867,     0,     0,     0,     0,     0,   869,     0,  2664,     0,
       0,     0,     0,   871,     0,   872,   873,    91,   806,   542,
     807,   808,   809,   810,   811,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   812,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,  2878,   813,   114,   814,   815,     0,   117,   118,
     119,   120,   121,   122,   816,   817,   123,   124,   818,   819,
     127,     0,   128,   129,   130,   131,   820,     0,   821,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,  2879,   822,   823,   824,   825,   826,   827,   828,   155,
     156,   157,   158,   159,   160,   161,   829,   830,   164,   831,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   668,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   832,   193,   194,   195,   196,   833,
     834,   198,     0,   199,   200,   835,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209,   210,   211,     0,
     212,     0,   836,   837,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,   234,   235,   236,
     237,   238,   239,   838,   839,     0,   840,     0,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,     0,
     253,   254,   255,   256,     0,   257,   258,   259,   841,   842,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   843,   285,   844,   287,   288,   289,
     290,   845,   291,   292,   293,   294,   846,   847,   296,   848,
     298,   299,   300,     0,   301,   302,     0,     0,   849,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   850,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   851,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   852,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,   361,   362,   853,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,   854,   380,   381,   382,   383,   384,   385,   386,
     387,   855,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   856,   404,     0,
     405,   406,     0,   407,   408,   409,   410,   411,   412,   413,
       0,   857,   858,     0,     0,   416,   417,   859,   419,   860,
     861,   421,   422,   862,   424,   425,  2880,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   863,     0,   434,   435,
     436,   437,   438,   439,   864,     0,   441,   442,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   865,     0,
       0,     0,     0,     0,     0,   866,   867,     0,     0,     0,
       0,     0,   869,     0,   870,     0,     0,     0,     0,   871,
       0,   872,   873,    91,   806,   542,   807,   808,   809,   810,
     811,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,   812,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   813,
     114,   814,   815,     0,   117,   118,   119,   120,   121,   122,
     816,   817,   123,   124,   818,   819,   127,     0,   128,   129,
     130,   131,   820,     0,   821,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,   152,  2879,   822,   823,
     824,   825,   826,   827,   828,   155,   156,   157,   158,   159,
     160,   161,   829,   830,   164,   831,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   668,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     832,   193,   194,   195,   196,   833,   834,   198,     0,   199,
     200,   835,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,   836,   837,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,   234,   235,   236,   237,   238,   239,   838,
     839,     0,   840,     0,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,     0,     0,   253,   254,   255,   256,
       0,   257,   258,   259,   841,   842,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     843,   285,   844,   287,   288,   289,   290,   845,   291,   292,
     293,   294,   846,   847,   296,   848,   298,   299,   300,     0,
     301,   302,     0,     0,   849,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   850,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   851,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   852,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,   361,   362,
     853,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,   854,   380,
     381,   382,   383,   384,   385,   386,   387,   855,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   856,   404,     0,   405,   406,     0,   407,
     408,   409,   410,   411,   412,   413,     0,   857,   858,     0,
       0,   416,   417,   859,   419,   860,   861,   421,   422,   862,
     424,   425,  2880,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   863,     0,   434,   435,   436,   437,   438,   439,
     864,     0,   441,   442,   443,   444,   445,   446,     0,     0,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   865,     0,     0,     0,     0,     0,
       0,   866,   867,     0,     0,     0,     0,     0,   869,     0,
     870,     0,     0,     0,     0,   871,     0,   872,   873,    91,
     806,   542,   807,   808,   809,   810,   811,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   812,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111, -1715,   813,   114,   814,   815,     0,
     117,   118,   119,   120,   121,   122,   816,   817,   123,   124,
     818,   819,   127,     0,   128,   129,   130,   131,   820,     0,
     821,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,  2879,   822,   823,   824,   825,   826,   827,
     828,   155,   156,   157,   158,   159,   160,   161,   829,   830,
     164,   831,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     668,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   832,   193,   194,   195,
     196,   833,   834,   198,     0,   199,   200,   835,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209, -1715,
     211,     0,   212,     0,   836,   837,   215,     0,   216,   217,
     218,   219,   220,   221,     0, -1715,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,     0,     0,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255, -1715,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,     0,   291,   292,     0,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
   -1715,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,  2880,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
   -1715,     0,     0,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,   234,   235,   236,   237,   238,
     239,   838,   839,     0,   840,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,     0,   253,   254,
     255,   256,     0,   257,   258,   259,   841,   842,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   843,   285,   844,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   846,   847,   296,   848,   298,   299,
     300,     0,   301,   302,     0,     0,   849,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   850,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     851,   325,   326,   327,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   852,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
     854,   380,   381,   382,   383,   384,   385,   386,   387,   855,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   856,   404,     0,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,   857,
     858,     0,     0,   416,   417,   859,   419,   860,   861,   421,
     422,   862,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   863,     0,   434,   435,   436,   437,
     438,   439,   864,     0,   441,   442,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,     0,     0,     0,     0,
       0,     0,     0,  1621,  1622,     0,     0,    91,   806,   542,
     807,   808,  1623,   810,   811,     0,     0,     0,     0,   872,
     873,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   813,   114,   814,   815,     0,   117,   118,
     119,   120,   121,   122,   816,   817,   123,   124,   818,   819,
     127,     0,   128,   129,   130,   131,   820,     0,   821,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,   153,   822,   823,   824,   825,   826,   827,   828,   155,
     156,   157,   158,   159,   160,   161,   829,   830,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   668,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   832,   193,   194,   195,   196,   833,
     834,   198,     0,   199,   200,   835,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209,   210,   211,     0,
     212,     0,   836,   837,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,   234,   235,   236,
     237,   238,   239,   838,   839,     0,   840,     0,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,     0,     0,
     253,   254,   255,   256,     0,   257,   258,   259,   841,   842,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   843,   285,   844,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   846,   847,   296,   848,
     298,   299,   300,     0,   301,   302,     0,     0,   303,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   850,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   851,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   852,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,   361,   362,  1758,  1759,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,   854,   380,   381,   382,   383,   384,   385,   386,
     387,   855,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   856,   404,     0,
     405,   406,     0,   407,   408,   409,   410,   411,   412,   413,
       0,   857,   858,     0,     0,   416,   417,   859,   419,   860,
     861,   421,   422,   862,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   863,     0,   434,   435,
     436,   437,   438,   439,   864,     0,   441,   442,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,     0,     0,
       0,     0,     0,     0,     0,  1760,  1761,     0,     0,     0,
       0,     0,     0,     0,  1623,     0,     0,     0,     0,     0,
       0,   872,   873,    91,   806,   542,   807,   808,   809,   810,
     811,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   813,
     114,   814,   815,     0,   117,   118,   119,   120,   121,   122,
     816,   817,   123,   124,   818,   819,   127,     0,   128,   129,
     130,   131,   820,     0,   821,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,   152,   153,   822,   823,
     824,   825,   826,   827,   828,   155,   156,   157,   158,   159,
     160,   161,   829,   830,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   668,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     832,   193,   194,   195,   196,   833,   834,   198,     0,   199,
     200,   835,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,   836,   837,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,   234,   235,   236,   237,   238,   239,   838,
     839,     0,   840,     0,   243,     0,   245,   246,   247,   248,
     249,   250,   251,   252,     0,     0,   253,   254,   255,   256,
       0,   257,   258,   259,   841,   842,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     843,   285,   844,   287,   288,   289,   290,     0,   291,   292,
     293,   294,   846,   847,   296,   848,   298,   299,   300,     0,
     301,   302,     0,     0,   849,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   850,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   851,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   852,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,   854,   380,
     381,   382,   383,   384,   385,   386,   387,   855,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   856,   404,     0,   405,   406,     0,   407,
     408,   409,   410,   411,   412,   413,     0,   857,   858,     0,
       0,   416,   417,   859,   419,   860,   861,   421,   422,   862,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   863,     0,   434,   435,   436,   437,   438,   439,
     864,     0,   441,   442,   443,   444,   445,   446,     0,     0,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,     0,     0,     0,     0,     0,     0,
       0,  1621,  1622,     0,     0,     0,     0,     0,     0,     0,
    1623,     0,     0,     0,     0,     0,     0,   872,   873,    91,
     806,   542,   807,   808,   809,   810,   811,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   812,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,     0,   813,   114,   814,   815,     0,
     117,   118,   119,   120,   121,   122,   816,   817,   123,   124,
     818,   819,   127,     0,   128,   129,   130,   131,   820,     0,
     821,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   822,   823,   824,   825,   826,   827,
     828,   155,   156,   157,   158,   159,   160,   161,   829,   830,
     164,   831,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     668,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     187,     0,   188,   189,   190,   191,   832,   193,   194,   195,
     196,   833,   834,   198,     0,   199,   200,   835,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209,     0,
     211,     0,   212,     0,   836,   837,   215,     0,   216,   217,
     218,   219,   220,   221,     0,     0,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,     0,     0,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255,     0,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,     0,   291,   292,     0,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
       0,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
       0,     0,     0,     0,     0,     0,     0,   866,   867,   494,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,  2290,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
    -602,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,  -602,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,     0,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,  -602,
     235,   236,   237,   238,   239,   240,   241,     0,   242,     0,
     243,     0,     0,   246,  -602,   248,   249,   250,   251,   252,
       0,     0,   253,  -602,   255,     0,     0,   257,   258,   259,
       0,     0,   260,   261,   262,   263,   264,   496,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,  -602,   286,   287,
     288,   289,   290,     0,   291,   292,     0,   294,     0,   295,
     296,   297,   298,   299,   300,     0,   301,   302,     0,     0,
     303,   304,   305,     0,     0,   306,   307,     0,   309,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,  -602,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   498,   402,   403,
     404,     0,   405,   406,     0,   407,  -602,   409,   410,   411,
     412,   413,     0,   414,   415,     0,     0,   416,   417,   418,
     419,   420,     0,   421,   422,   423,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,   438,   439,   440,     0,   441,     0,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
       0,     0,    91,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   933,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
     817,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   820,     0,   821,     0,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,   151,   152,   153,   822,   823,   824,
     825,   826,   827,   828,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   833,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,   205,     0,   206,   207,
     208,   209,   210,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,   228,   229,   230,   231,   232,
       0,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,     0,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,  2042,     0,   253,   254,   255,   256,     0,
     257,   258,   259,   841,   842,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,     0,   847,   296,   297,   298,   299,   300,     0,   301,
     302,     0,   573,   303,   304,   305,     0,     0,   306,   307,
     308,   309,   310,   850,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,   322,   323,   851,   325,   326,
     327,   328,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,     0,   357,   358,   359,   360,   361,   362,   363,
    2043,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    25,   375,   376,   377,   378,   379,   854,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   856,   404,     0,   405,   406,    30,   407,   408,
     409,   410,   411,   412,   413,     0,   414,   415,     0,     0,
     416,   417,   859,   419,   860,     0,   421,   422,   862,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,   863,     0,   434,   435,   436,   437,   438,   568,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,   447,
       0,    33,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     0,    91,    34,   572,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2044,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,   817,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   820,     0,   821,     0,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   150,   151,   152,   153,   822,
     823,   824,   825,   826,   827,   828,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   833,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,   205,     0,
     206,   207,   208,   209,   210,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,  2042,     0,   253,   254,   255,
     256,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,     0,   847,   296,   297,   298,   299,   300,
       0,   301,   302,     0,   573,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,   361,
     362,   363,  2043,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   856,   404,     0,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,   414,   415,
       0,     0,   416,   417,   859,   419,   860,     0,   421,   422,
     862,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     439,   440,     0,   441,   442,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     0,    91,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2044,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,   817,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   820,     0,   821,     0,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   150,   151,   152,
     153,   822,   823,   824,   825,   826,   827,   828,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   833,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
     205,     0,   206,   207,   208,   209,   210,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,     0,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,     0,     0,   253,
     254,   255,   256,     0,   257,   258,   259,   841,   842,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,     0,   847,   296,   297,   298,
     299,   300,     0,   301,   302,     0,     0,   303,   304,   305,
       0,     0,   306,   307,   308,   309,   310,   850,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   851,   325,   326,   327,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,   359,
     360,   361,   362,   363,  2043,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,   854,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   856,   404,     0,   405,
     406,     0,   407,   408,   409,   410,   411,   412,   413,     0,
     414,   415,     0,     0,   416,   417,   859,   419,   860,     0,
     421,   422,   862,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   863,     0,   434,   435,   436,
     437,   438,   439,   440,     0,   441,   442,   443,   444,   445,
     446,     0,     0,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     0,    91,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    35,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,   817,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   820,     0,   821,
       0,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   150,
     151,   152,   153,   822,   823,   824,   825,   826,   827,   828,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     833,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,   205,     0,   206,   207,   208,   209,   210,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,     0,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
       0,   253,   254,   255,   256,     0,   257,   258,   259,   841,
     842,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,     0,   847,   296,
     297,   298,   299,   300,     0,   301,   302,     0,     0,   303,
     304,   305,     0,     0,   306,   307,   308,   309,   310,   850,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   851,   325,   326,   327,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,   854,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   856,   404,
       0,   405,   406,     0,   407,   408,   409,   410,   411,   412,
     413,     0,   414,   415,     0,     0,   416,   417,   859,   419,
     860,     0,   421,   422,   862,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   863,     0,   434,
     435,   436,   437,   438,   439,   440,     0,   441,   442,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     0,
     735,  1224,   542,     0,     0,     0,   810,     0,     0,     0,
       0,     0,     0,     0,     0,  2679,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   736,   737,     0,   738,   739,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   740,   741,   127,     0,   128,   129,   130,   131,   742,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   743,
     744,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   745,   193,   194,
     195,   196,   746,  1225,   198,     0,   199,   200,   747,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   748,   749,   215,     0,   216,
     217,   218,   219,   220,   221,     0,     0,   223,   224,   225,
     226,     0,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   750,   236,   237,   238,   239,   751,   752,     0,   753,
       0,   243,     0,     0,   246,     0,   248,   249,   250,   251,
     252,     0,     0,   253,     0,   255,     0,     0,   257,   258,
     259,     0,     0,   260,   261,   262,   263,   264,   754,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   755,     0,   756,
     287,   288,   289,   757,     0,   291,   292,     0,   294,     0,
     758,   296,   759,   298,   299,   300,     0,   301,   302,  1226,
       0,   303,   304,   305,     0,     0,   306,   760,     0,   309,
       0,   761,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,   322,   323,   762,   325,   326,   763,   328,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   764,   341,   342,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   360,   361,   362,   765,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   766,   382,   383,
     384,     0,   386,   387,   767,   389,     0,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   768,   402,
     769,   404,     0,   405,   406,     0,   407,     0,   409,   410,
     411,   412,   413,     0,   770,   771,     0,     0,   416,   417,
     772,   419,   773,  1227,   421,   422,   774,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,   438,  1117,   776,     0,   441,
       0,   443,   444,   445,   446,     0,     0,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   465,   466,   467,
     468,     0,   735,     0,     0,     0,     0,     0,  1228,  1229,
    1922,     0,     0,     0,     0,     0,     0,  1923,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       3,     4,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   736,   737,     0,
     738,   739,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   740,   741,   127,     0,   128,   129,   130,
     131,   742,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   743,   744,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   745,
     193,   194,   195,   196,   746,     0,   198,     0,   199,   200,
     747,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   748,   749,   215,
       0,   216,   217,   218,   219,   220,   221,     0,     0,   223,
     224,   225,   226,     0,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   750,   236,   237,   238,   239,   751,   752,
       0,   753,     0,   243,     0,     0,   246,     0,   248,   249,
     250,   251,   252,     0,     0,   253,     0,   255,     0,     0,
     257,   258,   259,     0,     0,   260,   261,   262,   263,   264,
     754,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   755,
       0,   756,   287,   288,   289,   757,     0,   291,   292,     0,
     294,     0,   758,   296,   759,   298,   299,   300,     0,   301,
     302,     0,     0,   303,   304,   305,     0,     0,   306,   760,
       0,   309,     0,   761,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,   322,   323,   762,   325,   326,
     763,   328,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   764,   341,   342,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   360,   361,   362,   765,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    25,   375,   376,   377,   378,   379,     0,   380,   766,
     382,   383,   384,     0,   386,   387,   767,   389,     0,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     768,   402,   769,   404,     0,   405,   406,    30,   407,     0,
     409,   410,   411,   412,   413,     0,   770,   771,     0,     0,
     416,   417,   772,   419,   773,     0,   421,   422,   774,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,   438,   775,   776,
       0,   441,     0,   443,   444,   445,   446,     0,     0,   447,
       0,    33,   448,   449,   450,   451,   452,   453,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   465,
     466,   467,   468,     0,   494,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
      92,    93,    94,    95,    96,    97,    98,    99,   606,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
       0,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   235,   236,   237,   238,   239,
     240,   241,     0,   242,     0,   243,     0,     0,   246,     0,
     248,   249,   250,   251,   252,     0,     0,   253,     0,   255,
       0,     0,   257,   258,   259,     0,     0,   260,   261,   262,
     263,   264,   496,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   286,   287,   288,   289,   290,     0,   291,
     292,     0,   294,     0,   295,   296,   297,   298,   299,   300,
       0,   301,   302,     0,     0,   303,   304,   305,     0,     0,
     306,   307,     0,   309,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    25,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   498,   402,   403,   404,     0,   405,   406,    30,
     407,     0,   409,   410,   411,   412,   413,     0,   607,   415,
       0,     0,   608,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,   438,
     568,   440,     0,   441,     0,   443,   444,   445,   446,     0,
       0,   447,     0,    33,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     0,   494,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    35,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,     0,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   235,   236,   237,
     238,   239,   240,   241,     0,   242,     0,   243,     0,     0,
     246,     0,   248,   249,   250,   251,   252,     0,     0,   253,
       0,   255,     0,     0,   257,   258,   259,     0,     0,   260,
     261,   262,   263,   264,   496,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   286,   287,   288,   289,   290,
       0,   291,   292,     0,   294,     0,   295,   296,   297,   298,
     299,   300,     0,   301,   302,     0,     0,   303,   304,   305,
       0,     0,   306,   307,     0,   309,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    25,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   498,   402,   403,   404,     0,   405,
     406,    30,   407,     0,   409,   410,   411,   412,   413,     0,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,   438,   568,   440,     0,   441,     0,   443,   444,   445,
     446,     0,     0,   447,     0,    33,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     0,   494,    34,
     572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    35,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,     0,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   235,
     236,   237,   238,   239,   240,   241,     0,   242,     0,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,     0,
       0,   253,     0,   255,     0,     0,   257,   258,   259,     0,
       0,   260,   261,   262,   263,   264,   496,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   286,   287,   288,
     289,   290,     0,   291,   292,     0,   294,     0,   295,   296,
     297,   298,   299,   300,     0,   301,   302,     0,     0,   303,
     304,   305,     0,     0,   306,   307,     0,   309,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   498,   402,   403,   404,
       0,   405,   406,     0,   407,     0,   409,   410,   411,   412,
     413,     0,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,   441,     0,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     0,
     494,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   913,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,     0,     0,   223,   224,   225,
     226,     0,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   235,   236,   237,   238,   239,   240,   241,     0,   242,
       0,   243,     0,     0,   246,     0,   248,   249,   250,   251,
     252,     0,     0,   253,     0,   255,     0,     0,   257,   258,
     259,     0,     0,   260,   261,   262,   263,   264,   496,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   286,
     287,   288,   289,   290,     0,   291,   292,     0,   294,     0,
     295,   296,   297,   298,   299,   300,     0,   301,   302,     0,
       0,   303,   304,   305,     0,     0,   306,   307,     0,   309,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,   322,   323,   324,   325,   326,   327,   328,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,     0,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   498,   402,
     403,   404,     0,   405,   406,     0,   407,     0,   409,   410,
     411,   412,   413,     0,   414,   415,     0,     0,   416,   417,
     418,   419,   420,     0,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,   441,
       0,   443,   444,   445,   446,     0,     0,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,     0,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2518,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,     0,   223,
     224,   225,   226,     0,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   235,   236,   237,   238,   239,   240,   241,
       0,   242,     0,   243,     0,     0,   246,     0,   248,   249,
     250,   251,   252,     0,     0,   253,     0,   255,     0,     0,
     257,   258,   259,     0,     0,   260,   261,   262,   263,   264,
     496,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   286,   287,   288,   289,   290,     0,   291,   292,     0,
     294,     0,   295,   296,   297,   298,   299,   300,     0,   301,
     302,     0,     0,   303,   304,   305,     0,     0,   306,   307,
       0,   309,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     498,   402,   403,   404,     0,   405,   406,     0,   407,     0,
     409,   410,   411,   412,   413,     0,   414,   415,     0,     0,
     416,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,   441,     0,   443,   444,   445,   446,     0,     0,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     0,   494,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1643,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
       0,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   235,   236,   237,   238,   239,
     240,   241,     0,   242,     0,   243,     0,     0,   246,     0,
     248,   249,   250,   251,   252,     0,     0,   253,     0,   255,
       0,     0,   257,   258,   259,     0,     0,   260,   261,   262,
     263,   264,   496,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   286,   287,   288,   289,   290,     0,   291,
     292,     0,   294,     0,   295,   296,   297,   298,   299,   300,
       0,   301,   302,     0,     0,   303,   304,   305,     0,     0,
     306,   307,     0,   309,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   498,   402,   403,   404,     0,   405,   406,     0,
     407,     0,   409,   410,   411,   412,   413,     0,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,   441,     0,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     0,   494,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1748,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,     0,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   235,   236,   237,
     238,   239,   240,   241,     0,   242,     0,   243,     0,     0,
     246,     0,   248,   249,   250,   251,   252,     0,     0,   253,
       0,   255,     0,     0,   257,   258,   259,     0,     0,   260,
     261,   262,   263,   264,   496,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   286,   287,   288,   289,   290,
       0,   291,   292,     0,   294,     0,   295,   296,   297,   298,
     299,   300,     0,   301,   302,     0,     0,   303,   304,   305,
       0,     0,   306,   307,     0,   309,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   498,   402,   403,   404,     0,   405,
     406,     0,   407,     0,   409,   410,   411,   412,   413,     0,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,   441,     0,   443,   444,   445,
     446,     0,     0,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     0,     0,     0,
       0,  2376,  1224,   542,     0,     0,  1603,   810,     0,     0,
       0,     0,     0,  2274,  1604,  1605,  1606,    92,    93,    94,
      95,    96,    97,    98,    99,  1044,   100,   101,   102,  1045,
    1046,  1047,  1048,  1049,  1050,  1051,   103,   104,  1052,   105,
     106,   107,  2377,   109,   110,   111,     0,   656,  2378,   658,
     659,  1053,   117,   118,   119,   120,   121,   122,  1054,  1055,
     123,   124,   660,   661,   127,  1056,   128,   129,   130,   131,
       0,  1057,  2379,  1058,   134,   135,   136,   137,   138,   139,
    2380,   141,   142,   143,  1059,   144,   145,   146,   147,   148,
     149,  1060,  2381,   151,   152,   153,  1061,  1062,  1063,  2382,
    1064,  1065,  1066,   155,   156,   157,   158,   159,   160,   161,
     666,   667,   164,  1067,   165,  1068,   166,   167,   168,   169,
     170,   171,  1069,   172,   173,   174,   175,   176,  1070,  1071,
     177,   178,   668,   180,   181,  1072,   182,   183,   184,  1073,
     185,   186,   187,  1074,   188,   189,   190,   191,     0,   193,
     194,   195,   196,     0,  1075,   198,  1076,   199,   200,   669,
     202,  1077,   203,  1078,   204,  2383,  1079,  2384,   207,   208,
     209,  2385,   211,  1080,   212,  1081,     0,     0,   215,  1082,
     216,   217,   218,   219,   220,   221,  1083,  2386,   223,   224,
     225,   226,  1084,   227,   228,   229,   230,   231,   232,  1085,
     233,  2387,     0,   236,   237,   238,   239,   676,   677,  1086,
     678,  1087,   243,  2388,  2389,   246,  2390,   248,   249,   250,
     251,   252,  1088,  1089,   253,  2391,   255,  2392,  1090,   257,
     258,   259,  1091,  1092,   260,   261,   262,   263,   264,  2393,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   685,  2394,
     687,   287,   288,   289,  2395,  1093,   291,   292,  2396,   294,
    1094,     0,   296,   689,   298,   299,   300,  1095,   301,   302,
    1096,  1097,  2397,   304,   305,  1098,  1099,   306,     0,  2398,
     309,  2399,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,  1100,   322,   323,     0,   325,   326,     0,
     328,   329,   330,  1101,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   692,   341,   342,   343,   344,  1102,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,  1103,   357,   358,  2400,   360,   361,   362,   694,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
    1104,   375,   376,   377,   378,   379,  1105,   380,  2401,   382,
     383,   384,  2402,   386,   387,   697,   389,  1106,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,  2403,
     402,     0,   404,  1107,   405,   406,  1108,   407,  2404,   409,
     410,   411,   412,   413,  1109,   700,   701,  1110,  1111,   416,
     417,     0,   419,     0,  1112,   421,   422,  2405,   424,   425,
     426,   427,   428,  1113,  1114,   429,   430,   431,   432,   433,
    1115,  1116,   434,   435,   436,   437,   438,     0,   703,  1118,
     441,  2406,   443,   444,   445,   446,  1119,  1120,   447,  1121,
    1122,   448,   449,   450,   451,   452,   453,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   465,   466,
     467,   468,     0,   494,     0,  1607,  1608,  1609,  1603,  2407,
    2408,  1612,  1613,  1614,  1615,     0,  1604,  1605,  1606,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,     0,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   235,   236,   237,   238,   239,   240,
     241,     0,   242,     0,   243,     0,     0,   246,     0,   248,
     249,   250,   251,   252,     0,     0,   253,     0,   255,     0,
       0,   257,   258,   259,     0,     0,   260,   261,   262,   263,
     264,   496,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   286,   287,   288,   289,   290,     0,   291,   292,
       0,   294,     0,   295,   296,   297,   298,   299,   300,     0,
     301,   302,     0,     0,   303,   304,   305,     0,     0,   306,
     307,     0,   309,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   498,   402,   403,   404,     0,   405,   406,     0,   407,
       0,   409,   410,   411,   412,   413,     0,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,   421,   422,   423,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,   438,   439,
     440,     0,   441,     0,   443,   444,   445,   446,     0,     0,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,     0,     0,     0,  1607,  1608,  1609,
       0,  1610,  1611,  1612,  1613,  1614,  1615,  1300,     0,     0,
    1301,     0,     0,     0,     0,  1302,  1303,  1304,     0,     0,
       0,     0,     0,     0,     0,  1300,     0,     0,  1301,     0,
       0,     0,  1305,  1302,  1303,  1304,     0,     0,     0,     0,
    1307,     0,     0,  1300,     0,     0,  1301,  1308,     0,     0,
    1305,  1302,  1303,  1304,     0,     0,     0,     0,  1307,     0,
       0,     0,     0,     0,     0,  1308,     0,     0,  1305,     0,
       0,  1300,  1309,     0,  1301,     0,  1307,     0,     0,  1302,
    1303,  1304,     0,  1308,     0,     0,     0,     0,     0,  1300,
    1309,     0,  1301,     0,     0,     0,  1305,  1302,  1303,  1304,
       0,     0,     0,     0,  1307,     0,     0,     0,  1309,     0,
       0,  1308,     0,     0,  1305,     0,     0,     0,     0,     0,
       0,     0,  1307,     0,     0,     0,     0,     0,     0,  1308,
       0,     0,     0,     0,     0,     0,  1309,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1309,     0,  1300,     0,     0,  1301,
       0,     0,     0,     0,  1302,  1303,  1304,     0,     0,     0,
       0,     0,  1310,     0,     0,     0,     0,     0,     0,     0,
       0,  1305,     0,     0,     0,     0,     0,     0,  1311,  1307,
    1310,     0,     0,  1312,     0,     0,  1308,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1311,     0,  1310,     0,
       0,  1312,     0,     0,  1313,  1314,     0,     0,     0,     0,
       0,  1309,     0,     0,  1311,     0,     0,     0,  1315,  1312,
       0,     0,  1313,  1314,     0,     0,  1310,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1315,     0,     0,     0,
    1313,  1314,  1311,     0,  1310,     0,     0,  1312,     0,     0,
       0,     0,     0,     0,  1315,     0,  1316,     0,     0,  1317,
    1311,     0,     0,     0,     0,  1312,     0,     0,  1313,  1314,
       0,     0,     0,  1318,  1316,     0,  1319,  1317,     0,     0,
       0,     0,  1315,     0,     0,     0,  1313,  1314,     0,     0,
       0,  1318,  1316,     0,  1319,  1317,     0,     0,     0,     0,
    1315,     0,     0,   502,     0,     0,     0,     0,     0,  1318,
       0,  1310,  1319,     0,     0,     0,     0,     0,     0,     0,
    1316,     0,     0,  1317,     0,     0,     0,  1311,     0,     0,
       0,     0,  1312,     0,     0,     0,     0,  1318,  1316,     0,
    1319,  1317,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1313,  1314,  1318,   503,     0,  1319,     0,
       0,     0,     0,  1320,     0,     0,     0,  1315,     0,     0,
       0,     0,   504,     0,     0,     0,     0,  1300,     0,     0,
    1301,  1320,     0,     0,     0,  1302,  1303,  1304,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1320,
       0,     0,  1305,     0,     0,  1316,     0,     0,  1317,     0,
    1307,     0,     0,     0,     0,     0,     0,  1308,     0,     0,
       0,     0,  1318,     0,     0,  1319,   505,  1320,     0,     0,
       0,     0,     0,     0,     0,   506,     0,     0,     0,     0,
       0,     0,  1309,     0,     0,  1320,     0,   507,     0,     0,
       0,     0,   508,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1321,     0,     0,  1322,  1323,  1324,     0,
    1325,  1326,  1327,  1328,  1329,  1330,     0,     0,     0,   509,
    2252,  1321,     0,     0,  1322,  1323,  1324,     0,  1325,  1326,
    1327,  1328,  1329,  1330,     0,     0,     0,     0,  2340,  1321,
       0,     0,  1322,  1323,  1324,     0,  1325,  1326,  1327,  1328,
    1329,  1330,  1320,     0,     0,     0,  2466,     0,     0,     0,
       0,     0,   510,     0,     0,     0,   511,  1321,     0,     0,
    1322,  1323,  1324,     0,  1325,  1326,  1327,  1328,  1329,  1330,
       0,     0,  1310,     0,  2488,  1321,     0,     0,  1322,  1323,
    1324,     0,  1325,  1326,  1327,  1328,  1329,  1330,  1311,     0,
       0,  1300,  2633,  1312,  1301,     0,     0,     0,     0,  1302,
    1303,  1304,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1313,  1314,  1305,     0,     0,   512,
       0,     0,     0,     0,  1307,     0,     0,     0,  1315,     0,
       0,  1308,     0,   513,     0,     0,     0,     0,     0,     0,
       0,     0,  1321,     0,     0,  1322,  1323,  1324,     0,  1325,
    1326,  1327,  1328,  1329,  1330,     0,  1309,     0,     0,  2849,
       0,     0,     0,     0,   514,     0,  1316,   515,     0,  1317,
       0,     0,     0,     0,     0,   516,     0,     0,   517,     0,
       0,     0,     0,  1318,     0,     0,  1319,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   518,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     519,     0,     0,     0,     0,     0,     0,   520,     0,     0,
       0,     0,     0,     0,     0,     0,   521,     0,     0,     0,
       0,     0,   522,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1310,   523,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1311,  1320,     0,     0,     0,  1312,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1313,  1314,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1315,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1316,     0,     0,  1317,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1318,     0,     0,
    1319,     0,     0,  1321,     0,     0,  1322,  1323,  1324,     0,
    1325,  1326,  1327,  1328,  1329,  1330,     0,     0,     0,     0,
    2861,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1320,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1321,  1043,     0,
    1322,  1323,  1324,     0,  1325,  1326,  1327,  1328,  1329,  1330,
       0,     0,  1479,     0,    92,    93,    94,    95,    96,    97,
      98,    99,  1044,   100,   101,   102,  1045,  1046,  1047,  1048,
    1049,  1050,  1051,   103,   104,  1052,   105,   106,   107,     0,
     109,   110,   111,   736,   737,     0,   738,   739,  1053,   117,
     118,   119,   120,   121,   122,  1054,  1055,   123,   124,   740,
     741,   127,  1056,   128,   129,   130,   131,   742,  1057,     0,
    1058,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,  1059,   144,   145,   146,   147,   148,   149,  1060,     0,
     151,   152,   153,  1061,  1062,  1063,     0,  1064,  1065,  1066,
     155,   156,   157,   158,   159,   160,   161,   743,   744,   164,
    1067,   165,  1068,   166,   167,   168,   169,   170,   171,  1069,
     172,   173,   174,   175,   176,  1070,  1071,   177,   178,   179,
     180,   181,  1072,   182,   183,   184,  1073,   185,   186,   187,
    1074,   188,   189,   190,   191,   745,   193,   194,   195,   196,
     746,  1075,   198,  1076,   199,   200,   747,   202,  1077,   203,
    1078,   204,     0,  1079,     0,   207,   208,   209,     0,   211,
    1080,   212,  1081,   748,   749,   215,  1082,   216,   217,   218,
     219,   220,   221,  1083,     0,   223,   224,   225,   226,  1084,
     227,   228,   229,   230,   231,   232,  1085,   233,     0,   750,
     236,   237,   238,   239,   751,   752,  1086,   753,  1087,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,  1088,
    1089,   253,     0,   255,     0,  1090,   257,   258,   259,  1091,
    1092,   260,   261,   262,   263,   264,   754,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   755,     0,   756,   287,   288,
     289,   757,  1093,   291,   292,     0,   294,  1094,   758,   296,
     759,   298,   299,   300,  1095,   301,   302,  1096,  1097,   303,
     304,   305,  1098,  1099,   306,   760,     0,   309,     0,   761,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
    1100,   322,   323,   762,   325,   326,   763,   328,   329,   330,
    1101,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     764,   341,   342,   343,   344,  1102,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,  1103,   357,
     358,     0,   360,   361,   362,   765,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,  1104,   375,   376,
     377,   378,   379,  1105,   380,   766,   382,   383,   384,     0,
     386,   387,   767,   389,  1106,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   768,   402,   769,   404,
    1107,   405,   406,  1108,   407,     0,   409,   410,   411,   412,
     413,  1109,   770,   771,  1110,  1111,   416,   417,   772,   419,
     773,  1112,   421,   422,   774,   424,   425,   426,   427,   428,
    1113,  1114,   429,   430,   431,   432,   433,  1115,  1116,   434,
     435,   436,   437,   438,  1117,   776,  1118,   441,     0,   443,
     444,   445,   446,  1119,  1120,   447,  1121,  1122,   448,   449,
     450,   451,   452,   453,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   465,   466,   467,   468,   494,
       0,     0,     0,     0,     0,     0,     0,     0,  1727,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,     0,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,     0,
     235,   236,   237,   238,   239,   240,   241,     0,   242,     0,
     243,     0,     0,   246,     0,   248,   249,   250,   251,   252,
       0,     0,   253,     0,   255,     0,     0,   257,   258,   259,
       0,     0,   260,   261,   262,   263,   264,   496,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   286,   287,
     288,   289,   290,     0,   291,   292,     0,   294,     0,   295,
     296,   297,   298,   299,   300,     0,   301,   302,     0,     0,
     303,   304,   305,     0,     0,   306,   307,     0,   309,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   498,   402,   403,
     404,     0,   405,   406,     0,   407,     0,   409,   410,   411,
     412,   413,     0,   414,   415,     0,     0,   416,   417,   418,
     419,   420,     0,   421,   422,   423,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,   438,   439,   440,     0,   441,     0,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     735,  1224,   542,     0,     0,     0,   810,     0,     0,  2205,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   736,   737,     0,   738,   739,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   740,   741,   127,     0,   128,   129,   130,   131,   742,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   743,
     744,   164,  1359,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   745,   193,   194,
     195,   196,   746,  1225,   198,     0,   199,   200,   747,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   748,   749,   215,     0,   216,
     217,   218,   219,   220,   221,     0,     0,   223,   224,   225,
     226,     0,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   750,   236,   237,   238,   239,   751,   752,     0,   753,
       0,   243,     0,     0,   246,     0,   248,   249,   250,   251,
     252,     0,     0,   253,     0,   255,     0,     0,   257,   258,
     259,     0,     0,   260,   261,   262,   263,   264,   754,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   755,     0,   756,
     287,   288,   289,   757,     0,   291,   292,     0,   294,     0,
     758,   296,   759,   298,   299,   300,     0,   301,   302,  1226,
       0,   303,   304,   305,     0,     0,   306,   760,     0,   309,
       0,   761,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,   322,   323,   762,   325,   326,   763,   328,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   764,   341,   342,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   360,   361,   362,   765,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   766,   382,   383,
     384,     0,   386,   387,   767,   389,     0,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   768,   402,
     769,   404,     0,   405,   406,     0,   407,     0,   409,   410,
     411,   412,   413,     0,   770,   771,     0,     0,   416,   417,
     772,   419,   773,  1227,   421,   422,   774,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,   438,  1117,   776,     0,   441,
       0,   443,   444,   445,   446,     0,     0,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   465,   466,   467,
     468,   735,  1224,   542,     0,     0,     0,   810,  1228,  1229,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   736,   737,     0,   738,
     739,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   740,   741,   127,     0,   128,   129,   130,   131,
     742,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     743,   744,   164,  1361,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   745,   193,
     194,   195,   196,   746,  1225,   198,     0,   199,   200,   747,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   748,   749,   215,     0,
     216,   217,   218,   219,   220,   221,     0,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   750,   236,   237,   238,   239,   751,   752,     0,
     753,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   754,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   755,     0,
     756,   287,   288,   289,   757,     0,   291,   292,     0,   294,
       0,   758,   296,   759,   298,   299,   300,     0,   301,   302,
    1226,     0,   303,   304,   305,     0,     0,   306,   760,     0,
     309,     0,   761,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   762,   325,   326,   763,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   764,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   765,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   766,   382,
     383,   384,     0,   386,   387,   767,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   768,
     402,   769,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   770,   771,     0,     0,   416,
     417,   772,   419,   773,  1227,   421,   422,   774,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,  1117,   776,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   465,   466,
     467,   468,   735,  1224,   542,     0,     0,     0,   810,  1228,
    1229,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   736,   737,     0,
     738,   739,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   740,   741,   127,     0,   128,   129,   130,
     131,   742,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   743,   744,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   745,
     193,   194,   195,   196,   746,  1225,   198,     0,   199,   200,
     747,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   748,   749,   215,
       0,   216,   217,   218,   219,   220,   221,     0,     0,   223,
     224,   225,   226,     0,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   750,   236,   237,   238,   239,   751,   752,
       0,   753,     0,   243,     0,     0,   246,     0,   248,   249,
     250,   251,   252,     0,     0,   253,     0,   255,     0,     0,
     257,   258,   259,     0,     0,   260,   261,   262,   263,   264,
     754,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   755,
       0,   756,   287,   288,   289,   757,     0,   291,   292,     0,
     294,     0,   758,   296,   759,   298,   299,   300,     0,   301,
     302,  1226,     0,   303,   304,   305,     0,     0,   306,   760,
       0,   309,     0,   761,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,   322,   323,   762,   325,   326,
     763,   328,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   764,   341,   342,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   360,   361,   362,   765,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   766,
     382,   383,   384,     0,   386,   387,   767,   389,     0,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     768,   402,   769,   404,     0,   405,   406,     0,   407,     0,
     409,   410,   411,   412,   413,     0,   770,   771,     0,     0,
     416,   417,   772,   419,   773,  1227,   421,   422,   774,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,   438,  1117,   776,
       0,   441,     0,   443,   444,   445,   446,     0,     0,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   465,
     466,   467,   468,     0,  1300,     0,     0,  1301,     0,     0,
    1228,  1229,  1302,  1303,  1304,     0,     0,     0,     0,     0,
       0,     0,  1300,     0,     0,  1301,     0,     0,     0,  1305,
    1302,  1303,  1304,  1754,     0,     0,     0,  1307,     0,     0,
    1300,     0,     0,  1301,  1308,     0,     0,  1305,  1302,  1303,
    1304,     0,     0,     0,     0,  1307,     0,     0,     0,     0,
       0,     0,  1308,     0,     0,  1305,     0,     0,  1300,  1309,
       0,  1301,     0,  1307,     0,     0,  1302,  1303,  1304,     0,
    1308,     0,     0,     0,     0,     0,     0,  1309,     0,     0,
       0,     0,     0,  1305,     0,     0,  1944,     0,     0,     0,
       0,  1307,     0,     0,     0,  1309,     0,     0,  1308,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1755,     0,     0,     0,     0,     0,     0,     0,  1300,     0,
       0,  1301,     0,  1309,     0,     0,  1302,  1303,  1304,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1305,     0,     0,     0,     0,     0,     0,
       0,  1307,     0,     0,     0,     0,     0,     0,  1308,  1310,
       0,     0,     0,     0,     0,     0,     0,  1982,     0,     0,
       0,     0,  1983,     0,     0,  1311,     0,  1310,     0,     0,
    1312,     0,     0,  1309,  2922,     0,     0,     0,     0,     0,
       0,     0,     0,  1311,     0,  1310,     0,     0,  1312,     0,
       0,  1313,  1314,     0,     0,     0,     0,     0,     0,     0,
       0,  1311,     0,     0,     0,  1315,  1312,     0,     0,  1313,
    1314,     0,     0,  1310,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1315,     0,     0,     0,  1313,  1314,  1311,
       0,     0,     0,     0,  1312,     0,     0,     0,     0,     0,
       0,  1315,     0,  1316,     0,     0,  1317,     0,     0,     0,
       0,     0,     0,     0,     0,  1313,  1314,     0,     0,     0,
    1318,  1316,     0,  1319,  1317,     0,     0,     0,     0,  1315,
       0,     0,     0,  1310,     0,     0,     0,     0,  1318,  1316,
       0,  1319,  1317,     0,     0,     0,     0,     0,     0,  1311,
       0,     0,     0,     0,  1312,     0,  1318,     0,     0,  1319,
       0,     0,     0,     0,     0,     0,     0,  1316,     0,     0,
    1317,     0,     0,     0,     0,  1313,  1314,     0,     0,     0,
       0,     0,  2923,     0,  1318,     0,     0,  1319,     0,  1315,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1300,     0,
    1320,  1301,     0,     0,     0,     0,  1302,  1303,  1304,     0,
       0,     0,     0,     0,     0,     0,     0,  1316,  1320,     0,
    1317,     0,     0,  1305,     0,     0,  1987,     0,     0,     0,
       0,  1307,  1300,     0,  1318,  1301,  1320,  1319,  1308,     0,
    1302,  1303,  1304,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1956,     0,  1305,     0,  1756,
       0,     0,     0,  1309,  1320,  1307,     0,     0,     0,     0,
       0,     0,  1308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1309,     0,     0,
    1321,     0,     0,  1322,  1323,  1324,     0,  1325,  1326,  1327,
    1328,  1329,  1330,     0,     0,     0,     0,     0,  1321,     0,
       0,  1322,  1323,  1324,  1320,  1325,  1326,  1327,  1328,  1329,
    1330,     0,     0,     0,     0,     0,  1321,     0,     0,  1322,
    1323,  1324,     0,  1325,  1326,  1327,  1328,  1329,  1330,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1310,  1321,     0,     0,  1322,  1323,  1324,
       0,  1325,  1326,  1327,  1328,  1329,  1330,     0,     0,  1311,
       0,     0,     0,     0,  1312,     0,     0,     0,     0,     0,
       0,     0,  1992,     0,     0,     0,     0,  1310,     0,     0,
       0,     0,     0,     0,     0,  1313,  1314,     0,     0,     0,
       0,     0,     0,  1311,     0,     0,     0,     0,  1312,  1315,
       0,     0,     0,     0,  1321,     0,     0,  1322,  1323,  1324,
       0,  1325,  1326,  1327,  1328,  1329,  1330,     0,  1300,  1313,
    1314,  1301,     0,     0,     0,     0,  1302,  1303,  1304,     0,
       0,     0,     0,  1315,     0,     0,     0,  1316,     0,     0,
    1317,     0,     0,  1305,     0,     0,  1994,     0,     0,     0,
       0,  1307,  1300,     0,  1318,  1301,     0,  1319,  1308,     0,
    1302,  1303,  1304,     0,     0,     0,     0,     0,     0,     0,
       0,  1316,     0,     0,  1317,     0,     0,  1305,     0,     0,
       0,     0,     0,  1309,     0,  1307,     0,     0,  1318,     0,
       0,  1319,  1308,     0,     0,     0,     0,     0,  1300,     0,
       0,  1301,     0,     0,     0,     0,  1302,  1303,  1304,     0,
       0,     0,     0,     0,     0,     0,     0,  1309,     0,     0,
       0,     0,     0,  1305,     0,     0,  2251,     0,     0,     0,
       0,  1307,     0,     0,     0,     0,     0,  1300,  1308,     0,
    1301,     0,     0,     0,  1320,  1302,  1303,  1304,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1305,  1309,     0,  1300,     0,     0,  1301,     0,
    1307,     0,     0,  1302,  1303,  1304,     0,  1308,  1320,     0,
       0,     0,     0,  1310,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1307,  1311,
       0,     0,  1309,     0,  1312,  1308,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1310,     0,     0,
       0,     0,     0,     0,     0,  1313,  1314,     0,     0,     0,
    1309,     0,     0,  1311,     0,     0,     0,     0,  1312,  1315,
       0,     0,     0,     0,  1321,     0,     0,  1322,  1323,  1324,
       0,  1325,  1326,  1327,  1328,  1329,  1330,     0,     0,  1313,
    1314,     0,     0,  1310,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1315,     0,     0,     0,  1316,  1321,  1311,
    1317,  1322,  1323,  1324,  1312,  1325,  1326,  1327,  1328,  1329,
    1330,     0,     0,     0,  1318,     0,     0,  1319,     0,     0,
       0,     0,  1310,     0,     0,  1313,  1314,     0,     0,     0,
       0,  1316,     0,     0,  1317,     0,     0,     0,  1311,  1315,
       0,     0,     0,  1312,     0,     0,     0,     0,  1318,     0,
    1310,  1319,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1313,  1314,  1311,     0,     0,     0,
       0,  1312,     0,     0,     0,     0,     0,  1316,  1315,     0,
    1317,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1313,  1314,  1318,     0,     0,  1319,     0,     0,
       0,     0,     0,     0,  1320,     0,  1315,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1316,     0,     0,  1317,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1318,     0,     0,  1319,     0,  1320,     0,
       0,     0,     0,     0,  1316,     0,     0,  1317,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1318,     0,     0,     0,     0,     0,     0,     0,     0,
    2209,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1320,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1321,     0,     0,  1322,  1323,  1324,
       0,  1325,  1326,  1327,  1328,  1329,  1330,     0,     0,     0,
       0,     0,     0,  1320,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1321,     0,
       0,  1322,  1323,  1324,     0,  1325,  1326,  1327,  1328,  1329,
    1330,  1320,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1321,     0,     0,  1322,  1323,  1324,
       0,  1325,  1326,  1327,  1328,  1329,  1330,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1321,     0,     0,  1322,  1323,  1324,     0,
    1325,  1326,  1327,  1328,  1329,  1330,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1043,     0,
    1662,  1321,     0,     0,  1322,  1323,  1324,     0,  1325,  1326,
    1327,  1328,  1329,  1330,    92,    93,    94,    95,    96,    97,
      98,    99,  1044,   100,   101,   102,  1045,  1046,  1047,  1048,
    1049,  1050,  1051,   103,   104,  1052,   105,   106,   107,     0,
     109,   110,   111,   736,   737,     0,   738,   739,  1053,   117,
     118,   119,   120,   121,   122,  1054,  1055,   123,   124,   740,
     741,   127,  1056,   128,   129,   130,   131,   742,  1057,     0,
    1058,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,  1059,   144,   145,   146,   147,   148,   149,  1060,     0,
     151,   152,   153,  1061,  1062,  1063,     0,  1064,  1065,  1066,
     155,   156,   157,   158,   159,   160,   161,   743,   744,   164,
    1067,   165,  1068,   166,   167,   168,   169,   170,   171,  1069,
     172,   173,   174,   175,   176,  1070,  1071,   177,   178,   179,
     180,   181,  1072,   182,   183,   184,  1073,   185,   186,   187,
    1074,   188,   189,   190,   191,   745,   193,   194,   195,   196,
     746,  1075,   198,  1076,   199,   200,   747,   202,  1077,   203,
    1078,   204,     0,  1079,     0,   207,   208,   209,     0,   211,
    1080,   212,  1081,   748,   749,   215,  1082,   216,   217,   218,
     219,   220,   221,  1083,     0,   223,   224,   225,   226,  1084,
     227,   228,   229,   230,   231,   232,  1085,   233,     0,   750,
     236,   237,   238,   239,   751,   752,  1086,   753,  1087,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,  1088,
    1089,   253,     0,   255,     0,  1090,   257,   258,   259,  1091,
    1092,   260,   261,   262,   263,   264,   754,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   755,     0,   756,   287,   288,
     289,   757,  1093,   291,   292,     0,   294,  1094,   758,   296,
     759,   298,   299,   300,  1095,   301,   302,  1096,  1097,   303,
     304,   305,  1098,  1099,   306,   760,     0,   309,     0,   761,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
    1100,   322,   323,   762,   325,   326,   763,   328,   329,   330,
    1101,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     764,   341,   342,   343,   344,  1102,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,  1103,   357,
     358,     0,   360,   361,   362,   765,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,  1104,   375,   376,
     377,   378,   379,  1105,   380,   766,   382,   383,   384,     0,
     386,   387,   767,   389,  1106,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   768,   402,   769,   404,
    1107,   405,   406,  1108,   407,     0,   409,   410,   411,   412,
     413,  1109,   770,   771,  1110,  1111,   416,   417,   772,   419,
     773,  1112,   421,   422,   774,   424,   425,   426,   427,   428,
    1113,  1114,   429,   430,   431,   432,   433,  1115,  1116,   434,
     435,   436,   437,   438,  1117,   776,  1118,   441,     0,   443,
     444,   445,   446,  1119,  1120,   447,  1121,  1122,   448,   449,
     450,   451,   452,   453,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   465,   466,   467,   468,  1043,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,  1044,   100,   101,   102,  1045,  1046,  1047,
    1048,  1049,  1050,  1051,   103,   104,  1052,   105,   106,   107,
       0,   109,   110,   111,   736,   737,     0,   738,   739,  1053,
     117,   118,   119,   120,   121,   122,  1054,  1055,   123,   124,
     740,   741,   127,  1056,   128,   129,   130,   131,   742,  1057,
       0,  1058,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,  1059,   144,   145,   146,   147,   148,   149,  1060,
       0,   151,   152,   153,  1061,  1062,  1063,     0,  1064,  1065,
    1066,   155,   156,   157,   158,   159,   160,   161,   743,   744,
     164,  1067,   165,  1068,   166,   167,   168,   169,   170,   171,
    1069,   172,   173,   174,   175,   176,  1070,  1071,   177,   178,
     179,   180,   181,  1072,   182,   183,   184,  1073,   185,   186,
     187,  1074,   188,   189,   190,   191,   745,   193,   194,   195,
     196,   746,  1075,   198,  1076,   199,   200,   747,   202,  1077,
     203,  1078,   204,     0,  1079,     0,   207,   208,   209,     0,
     211,  1080,   212,  1081,   748,   749,   215,  1082,   216,   217,
     218,   219,   220,   221,  1083,     0,   223,   224,   225,   226,
    1084,   227,   228,   229,   230,   231,   232,  1085,   233,     0,
     750,   236,   237,   238,   239,   751,   752,  1086,   753,  1087,
     243,     0,     0,   246,     0,   248,   249,   250,   251,   252,
    1088,  1089,   253,     0,   255,     0,  1090,   257,   258,   259,
    1091,  1092,   260,   261,   262,   263,   264,   754,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   755,     0,   756,   287,
     288,   289,   757,  1093,   291,   292,     0,   294,  1094,   758,
     296,   759,   298,   299,   300,  1095,   301,   302,  1096,  1097,
     303,   304,   305,  1098,  1099,   306,   760,     0,   309,     0,
     761,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,  1100,   322,   323,   762,   325,   326,   763,   328,   329,
     330,  1101,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   764,   341,   342,   343,   344,  1102,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,  1103,
     357,   358,     0,   360,   361,   362,   765,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,  1104,   375,
     376,   377,   378,   379,  1105,   380,   766,   382,   383,   384,
       0,   386,   387,   767,   389,  1106,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   768,   402,   769,
     404,  1107,   405,   406,  1108,   407,     0,   409,   410,   411,
     412,   413,  1109,   770,   771,  1110,  1111,   416,   417,   772,
     419,   773,  1112,   421,   422,   774,   424,   425,   426,   427,
     428,  1113,  1114,   429,   430,   431,   432,   433,  1115,  1116,
     434,   435,   436,   437,   438,  1117,   776,  1118,   441,     0,
     443,   444,   445,   446,  1119,  1120,   447,  1121,  1122,   448,
     449,   450,   451,   452,   453,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   465,   466,   467,   468,
    1043,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
    1803,    97,    98,    99,  1044,   100,   101,   102,  1045,  1046,
    1047,  1048,  1049,  1050,  1051,   103,   104,  1052,   105,   106,
     107,     0,   109,   110,   111,   736,   737,     0,   738,   739,
    1053,   117,   118,   119,   120,   121,   122,  1054,  1055,   123,
     124,   740,   741,   127,  1056,   128,   129,   130,   131,   742,
    1057,     0,  1058,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,  1059,   144,   145,   146,   147,   148,   149,
    1060,     0,   151,   152,   153,  1061,  1062,  1063,     0,  1064,
    1065,  1066,   155,   156,   157,   158,   159,   160,   161,   743,
     744,   164,  1067,   165,  1068,   166,   167,   168,   169,   170,
     171,  1069,   172,   173,   174,   175,   176,  1070,  1071,   177,
     178,   179,  1804,   181,  1072,   182,   183,   184,  1073,   185,
     186,   187,  1074,   188,   189,   190,   191,   745,   193,   194,
     195,   196,   746,  1075,   198,  1076,   199,   200,   747,   202,
    1077,   203,  1078,   204,     0,  1079,     0,   207,   208,   209,
       0,   211,  1080,   212,  1081,   748,   749,   215,  1082,   216,
     217,   218,   219,   220,   221,  1083,     0,   223,   224,   225,
     226,  1084,   227,   228,   229,   230,   231,   232,  1085,   233,
       0,   750,   236,   237,   238,   239,   751,   752,  1086,   753,
    1087,   243,     0,     0,   246,     0,   248,   249,   250,   251,
     252,  1088,  1089,   253,     0,   255,     0,  1090,   257,   258,
     259,  1091,  1092,   260,   261,   262,   263,   264,   754,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   755,     0,   756,
     287,   288,   289,   757,  1093,   291,   292,     0,   294,  1094,
     758,   296,   759,   298,   299,   300,  1095,   301,   302,  1096,
    1097,   303,   304,   305,  1098,  1099,   306,   760,     0,   309,
       0,   761,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,  1100,   322,   323,   762,   325,   326,   763,   328,
     329,   330,  1101,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   764,   341,   342,   343,   344,  1102,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
    1103,   357,   358,     0,   360,   361,   362,   765,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,  1104,
     375,   376,   377,   378,   379,  1105,  1805,   766,   382,   383,
     384,     0,   386,   387,   767,   389,  1106,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   768,   402,
     769,   404,  1107,   405,   406,  1108,   407,     0,   409,   410,
     411,   412,   413,  1109,   770,   771,  1110,  1111,   416,   417,
     772,   419,   773,  1112,   421,   422,   774,   424,   425,   426,
     427,   428,  1113,  1114,   429,   430,   431,   432,   433,  1115,
    1116,   434,   435,   436,   437,   438,  1117,   776,  1118,   441,
       0,   443,   444,   445,   446,  1119,  1120,   447,  1121,  1122,
     448,   449,   450,   451,   452,   453,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   465,   466,   467,
     468,    91,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,   817,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     820,     0,   821,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,   151,   152,   153,   822,   823,   824,   825,
     826,   827,   828,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   833,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,   205,     0,   206,   207,   208,
     209,   210,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,   234,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,     0,   253,   254,   255,   256,     0,   257,
     258,   259,   841,   842,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
       0,   847,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   850,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   851,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,   854,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   856,   404,     0,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   859,   419,   860,     0,   421,   422,   862,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     863,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,   442,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,    91,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,   133,     0,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,   151,   152,   153,     0,     0,     0,
     154,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,   205,     0,   206,   207,
     208,   209,   210,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,   228,   229,   230,   231,   232,
       0,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,     0,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,     0,     0,   253,   254,   255,   256,     0,
     257,   258,   259,     0,     0,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,     0,   295,   296,   297,   298,   299,   300,     0,   301,
     302,     0,     0,   303,   304,   305,     0,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,     0,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,     0,   405,   406,     0,   407,   408,
     409,   410,   411,   412,   413,     0,   414,   415,     0,     0,
     416,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   494,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,  1417,   128,   129,
     130,   131,   132,     0,     0,  1418,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,  1419,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,  1420,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,  1421,     0,     0,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   235,   236,   237,   238,   239,   240,
     241,     0,   242,     0,   243,     0,     0,   246,     0,   248,
     249,   250,   251,   252,     0,     0,   253,     0,   255,     0,
       0,   257,   258,   259,     0,     0,   260,   261,   262,   263,
     264,   496,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   286,   287,   288,   289,   290,     0,   291,   292,
       0,   294,     0,   295,   296,   297,   298,   299,   300,     0,
     301,   302,     0,     0,   303,   304,   305,     0,     0,   306,
     307,     0,   309,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,  1422,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   498,   402,   403,   404,     0,   405,   406,     0,   407,
       0,   409,   410,   411,   412,   413,     0,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,   421,   422,   423,
     424,   425,   426,   427,   428,     0,  1423,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,   438,   439,
     440,     0,   441,     0,   443,   444,   445,   446,     0,     0,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   494,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,  1417,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,  1419,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,  1420,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
       0,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   235,   236,   237,   238,   239,
     240,   241,     0,   242,     0,   243,     0,     0,   246,     0,
     248,   249,   250,   251,   252,     0,     0,   253,     0,   255,
    1870,     0,   257,   258,   259,     0,     0,   260,   261,   262,
     263,   264,   496,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   286,   287,   288,   289,   290,     0,   291,
     292,     0,   294,     0,   295,   296,   297,   298,   299,   300,
       0,   301,   302,     0,     0,   303,   304,   305,     0,     0,
     306,   307,     0,   309,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,  1422,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   498,   402,   403,   404,     0,   405,   406,     0,
     407,     0,   409,   410,   411,   412,   413,     0,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,   426,   427,   428,     0,  1423,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,   441,     0,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   735,     0,   542,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     736,   737,     0,   738,   739,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   740,   741,   127,     0,
     128,   129,   130,   131,   742,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   743,   744,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   745,   193,   194,   195,   196,   746,  1225,   198,
       0,   199,   200,   747,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     748,   749,   215,     0,   216,   217,   218,   219,   220,   221,
       0,     0,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   750,   236,   237,   238,
     239,   751,   752,     0,   753,     0,   243,     0,     0,   246,
       0,   248,   249,   250,   251,   252,     0,     0,   253,     0,
     255,     0,     0,   257,   258,   259,     0,     0,   260,   261,
     262,   263,   264,   754,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   755,     0,   756,   287,   288,   289,   757,     0,
     291,   292,     0,   294,     0,   758,   296,   759,   298,   299,
     300,     0,   301,   302,  1226,     0,   303,   304,   305,     0,
       0,   306,   760,     0,   309,     0,   761,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     762,   325,   326,   763,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   764,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   360,
     361,   362,   765,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   380,   766,   382,   383,   384,     0,   386,   387,   767,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   768,   402,   769,   404,     0,   405,   406,
       0,   407,     0,   409,   410,   411,   412,   413,     0,   770,
     771,     0,     0,   416,   417,   772,   419,   773,  1227,   421,
     422,   774,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
     438,  1117,   776,     0,   441,     0,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   465,   466,   467,   468,   494,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     3,     4,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,     0,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   235,   236,   237,
     238,   239,   240,   241,     0,   242,     0,   243,     0,     0,
     246,     0,   248,   249,   250,   251,   252,     0,     0,   253,
       0,   255,     0,     0,   257,   258,   259,     0,     0,   260,
     261,   262,   263,   264,   496,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   286,   287,   288,   289,   290,
       0,   291,   292,     0,   294,     0,   295,   296,   297,   298,
     299,   300,     0,   301,   302,     0,     0,   303,   304,   305,
       0,     0,   306,   307,     0,   309,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   498,   402,   403,   404,     0,   405,
     406,     0,   407,     0,   409,   410,   411,   412,   413,     0,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,   441,     0,   443,   444,   445,
     446,     0,     0,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   494,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,     0,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,     0,   235,   236,
     237,   238,   239,   240,   241,     0,   242,     0,   243,     0,
       0,   246,     0,   248,   249,   250,   251,   252,     0,     0,
     253,     0,   255,     0,     0,   257,   258,   259,     0,     0,
     260,   261,   262,   263,   264,   496,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   286,   287,   288,   289,
     290,     0,   291,   292,     0,   294,     0,   295,   296,   297,
     298,   299,   300,     0,   301,   302,     0,   573,   303,   304,
     305,     0,     0,   306,   307,     0,   309,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   498,   402,   403,   404,     0,
     405,   406,     0,   407,     0,   409,   410,   411,   412,   413,
       0,   414,   415,     0,     0,   416,   417,   418,   419,   420,
       0,   421,   422,   423,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,   438,   439,   440,     0,   441,     0,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   494,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   616,     0,     0,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   235,
     236,   237,   238,   239,   240,   241,     0,   242,     0,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,     0,
       0,   253,     0,   255,     0,     0,   257,   258,   259,     0,
       0,   260,   261,   262,   263,   264,   496,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   286,   287,   288,
     289,   290,     0,   291,   292,     0,   294,     0,   295,   296,
     297,   298,   299,   300,     0,   301,   302,     0,   573,   303,
     304,   305,     0,     0,   306,   307,     0,   309,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   498,   402,   403,   404,
       0,   405,   406,     0,   407,     0,   409,   410,   411,   412,
     413,     0,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,   441,     0,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   735,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     3,     4,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   736,   737,     0,   738,   739,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     740,   741,   127,     0,   128,   129,   130,   131,   742,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   743,   744,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   745,   193,   194,   195,
     196,   746,     0,   198,     0,   199,   200,   747,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   748,   749,   215,     0,   216,   217,
     218,   219,   220,   221,     0,     0,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,     0,
     750,   236,   237,   238,   239,   751,   752,     0,   753,     0,
     243,     0,     0,   246,     0,   248,   249,   250,   251,   252,
       0,     0,   253,     0,   255,     0,     0,   257,   258,   259,
       0,     0,   260,   261,   262,   263,   264,   754,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   755,     0,   756,   287,
     288,   289,   757,     0,   291,   292,     0,   294,     0,   758,
     296,   759,   298,   299,   300,     0,   301,   302,     0,     0,
     303,   304,   305,     0,     0,   306,   760,     0,   309,     0,
     761,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   762,   325,   326,   763,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   764,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   360,   361,   362,   765,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   380,   766,   382,   383,   384,
       0,   386,   387,   767,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   768,   402,   769,
     404,     0,   405,   406,     0,   407,     0,   409,   410,   411,
     412,   413,     0,   770,   771,     0,     0,   416,   417,   772,
     419,   773,     0,   421,   422,   774,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,   438,  1117,   776,     0,   441,     0,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   465,   466,   467,   468,
     494,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,  1715,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,     0,     0,   223,   224,   225,
     226,     0,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   235,   236,   237,   238,   239,   240,   241,     0,   242,
       0,   243,     0,     0,   246,     0,   248,   249,   250,   251,
     252,     0,     0,   253,     0,   255,     0,     0,   257,   258,
    1716,     0,     0,   260,   261,   262,   263,   264,   496,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   286,
     287,   288,   289,   290,     0,   291,   292,     0,   294,     0,
     295,   296,   297,   298,   299,   300,     0,   301,   302,     0,
       0,   303,   304,   305,     0,     0,   306,   307,     0,   309,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,   322,   323,   324,   325,   326,   327,   328,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,     0,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   498,   402,
     403,   404,     0,   405,   406,  1717,   407,     0,   409,  1718,
     411,  1719,   413,     0,   414,   415,     0,     0,   416,   417,
     418,   419,   420,     0,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,   429,   430,  1720,   432,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,   441,
       0,   443,   444,   445,   446,     0,     0,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   494,  2641,     0,     0,     0,     0,  2642,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,     0,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,   495,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,     0,   223,
     224,   225,   226,     0,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   235,   236,   237,   238,   239,   240,   241,
       0,   242,     0,   243,     0,     0,   246,     0,   248,   249,
     250,   251,   252,     0,     0,   253,     0,   255,     0,     0,
     257,   258,   259,     0,     0,   260,   261,   262,   263,   264,
     496,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   286,   287,   288,   289,   290,     0,   291,   292,     0,
     294,     0,   295,   296,   297,   298,   299,   300,     0,   301,
     302,     0,     0,   303,   304,   305,     0,     0,   306,   307,
       0,   309,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,   322,   323,   324,   325,   326,
     327,   497,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     498,   402,   403,   404,     0,   405,   406,     0,   407,     0,
     409,   410,   411,   412,   413,     0,   414,   415,     0,     0,
     416,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,   441,     0,   443,   444,   445,   446,     0,     0,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   494,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,   547,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,     0,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   235,   236,   237,   238,   239,   240,
     241,     0,   242,     0,   243,     0,     0,   246,     0,   248,
     249,   250,   251,   252,     0,     0,   253,     0,   255,     0,
       0,   257,   258,   259,     0,     0,   260,   261,   262,   263,
     264,   496,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   286,   287,   288,   289,   290,     0,   291,   292,
       0,   294,     0,   295,   296,   297,   298,   299,   300,     0,
     301,   302,     0,     0,   303,   304,   305,     0,     0,   306,
     307,     0,   309,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   498,   402,   403,   404,     0,   405,   406,     0,   407,
       0,   409,   410,   411,   412,   413,     0,   548,   415,     0,
       0,   549,   417,   418,   419,   420,     0,   421,   422,   423,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,   438,   439,
     440,     0,   441,     0,   443,   444,   445,   446,     0,     0,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   494,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   611,     0,
       0,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   235,   236,   237,   238,   239,
     240,   241,     0,   242,     0,   243,     0,     0,   246,     0,
     248,   249,   250,   251,   252,     0,     0,   253,     0,   255,
       0,     0,   257,   258,   259,     0,     0,   260,   261,   262,
     263,   264,   496,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   286,   287,   288,   289,   290,     0,   291,
     292,     0,   294,     0,   295,   296,   297,   298,   299,   300,
       0,   301,   302,     0,     0,   303,   304,   305,     0,     0,
     306,   307,     0,   309,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   498,   402,   403,   404,     0,   405,   406,     0,
     407,     0,   409,   410,   411,   412,   413,     0,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,   441,     0,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   494,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   614,
       0,     0,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   235,   236,   237,   238,
     239,   240,   241,     0,   242,     0,   243,     0,     0,   246,
       0,   248,   249,   250,   251,   252,     0,     0,   253,     0,
     255,     0,     0,   257,   258,   259,     0,     0,   260,   261,
     262,   263,   264,   496,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   286,   287,   288,   289,   290,     0,
     291,   292,     0,   294,     0,   295,   296,   297,   298,   299,
     300,     0,   301,   302,     0,     0,   303,   304,   305,     0,
       0,   306,   307,     0,   309,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   498,   402,   403,   404,     0,   405,   406,
       0,   407,     0,   409,   410,   411,   412,   413,     0,   414,
     415,     0,     0,   416,   417,   418,   419,   420,     0,   421,
     422,   423,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
     438,   439,   440,     0,   441,     0,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   494,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     618,     0,     0,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   235,   236,   237,
     238,   239,   240,   241,     0,   242,     0,   243,     0,     0,
     246,     0,   248,   249,   250,   251,   252,     0,     0,   253,
       0,   255,     0,     0,   257,   258,   259,     0,     0,   260,
     261,   262,   263,   264,   496,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   286,   287,   288,   289,   290,
       0,   291,   292,     0,   294,     0,   295,   296,   297,   298,
     299,   300,     0,   301,   302,     0,     0,   303,   304,   305,
       0,     0,   306,   307,     0,   309,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   498,   402,   403,   404,     0,   405,
     406,     0,   407,     0,   409,   410,   411,   412,   413,     0,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,   441,     0,   443,   444,   445,
     446,     0,     0,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   494,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,     0,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,     0,   235,   236,
     237,   238,   239,   240,   241,     0,   242,     0,   243,     0,
       0,   246,     0,   248,   249,   250,   251,   252,     0,     0,
     253,     0,   255,     0,     0,   257,   258,   259,     0,     0,
     260,   261,   262,   263,   264,   496,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   286,   287,   288,   289,
     290,     0,   291,   292,     0,   294,     0,   295,   296,   297,
     298,   299,   300,     0,   301,   302,     0,     0,   303,   304,
     305,     0,     0,   306,   307,     0,   309,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   498,   402,   403,   404,     0,
     405,   406,     0,   407,     0,   409,   410,   411,   412,   413,
       0,   414,   415,     0,     0,   416,   417,   418,   419,   420,
       0,   421,   422,   423,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,   438,   439,   440,     0,   441,     0,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   494,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,   646,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,     0,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   235,
     236,   237,   238,   239,   240,   241,     0,   242,     0,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,     0,
       0,   253,     0,   255,     0,     0,   257,   258,   259,     0,
       0,   260,   261,   262,   263,   264,   496,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   286,   287,   288,
     289,   290,     0,   291,   292,     0,   294,     0,   295,   296,
     297,   298,   299,   300,     0,   301,   302,     0,     0,   303,
     304,   305,     0,     0,   306,   307,     0,   309,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   498,   402,   403,   404,
       0,   405,   406,     0,   407,     0,   409,   410,   411,   412,
     413,     0,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,   441,     0,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   494,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,  1139,     0,     0,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,     0,
     235,   236,   237,   238,   239,   240,   241,     0,   242,     0,
     243,     0,     0,   246,     0,   248,   249,   250,   251,   252,
       0,     0,   253,     0,   255,     0,     0,   257,   258,   259,
       0,     0,   260,   261,   262,   263,   264,   496,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   286,   287,
     288,   289,   290,     0,   291,   292,     0,   294,     0,   295,
     296,   297,   298,   299,   300,     0,   301,   302,     0,     0,
     303,   304,   305,     0,     0,   306,   307,     0,   309,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   498,   402,   403,
     404,     0,   405,   406,     0,   407,     0,   409,   410,   411,
     412,   413,     0,   414,   415,     0,     0,   416,   417,   418,
     419,   420,     0,   421,   422,   423,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,   438,   439,   440,     0,   441,     0,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     494,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,  1141,     0,     0,   223,   224,   225,
     226,     0,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   235,   236,   237,   238,   239,   240,   241,     0,   242,
       0,   243,     0,     0,   246,     0,   248,   249,   250,   251,
     252,     0,     0,   253,     0,   255,     0,     0,   257,   258,
     259,     0,     0,   260,   261,   262,   263,   264,   496,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   286,
     287,   288,   289,   290,     0,   291,   292,     0,   294,     0,
     295,   296,   297,   298,   299,   300,     0,   301,   302,     0,
       0,   303,   304,   305,     0,     0,   306,   307,     0,   309,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,   322,   323,   324,   325,   326,   327,   328,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,     0,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   498,   402,
     403,   404,     0,   405,   406,     0,   407,     0,   409,   410,
     411,   412,   413,     0,   414,   415,     0,     0,   416,   417,
     418,   419,   420,     0,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,   441,
       0,   443,   444,   445,   446,     0,     0,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   494,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,  1547,     0,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,  2290,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,     0,   223,
     224,   225,   226,     0,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   235,   236,   237,   238,   239,   240,   241,
       0,   242,     0,   243,     0,     0,   246,     0,   248,   249,
     250,   251,   252,     0,     0,   253,     0,   255,     0,     0,
     257,   258,   259,     0,     0,   260,   261,   262,   263,   264,
     496,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   286,   287,   288,   289,   290,     0,   291,   292,     0,
     294,     0,   295,   296,   297,   298,   299,   300,     0,   301,
     302,     0,     0,   303,   304,   305,     0,     0,   306,   307,
       0,   309,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     498,   402,   403,   404,     0,   405,   406,     0,   407,     0,
     409,   410,   411,   412,   413,     0,   414,   415,     0,     0,
     416,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,   441,     0,   443,   444,   445,   446,     0,     0,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   494,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,  2304,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,     0,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   235,   236,   237,   238,   239,   240,
     241,     0,   242,     0,   243,     0,     0,   246,     0,   248,
     249,   250,   251,   252,     0,     0,   253,     0,   255,     0,
       0,   257,   258,   259,     0,     0,   260,   261,   262,   263,
     264,   496,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   286,   287,   288,   289,   290,     0,   291,   292,
       0,   294,     0,   295,   296,   297,   298,   299,   300,     0,
     301,   302,     0,     0,   303,   304,   305,     0,     0,   306,
     307,     0,   309,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   498,   402,   403,   404,     0,   405,   406,     0,   407,
       0,   409,   410,   411,   412,   413,     0,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,   421,   422,   423,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,   438,   439,
     440,     0,   441,     0,   443,   444,   445,   446,     0,     0,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   494,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,  2438,     0,
       0,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   235,   236,   237,   238,   239,
     240,   241,     0,   242,     0,   243,     0,     0,   246,     0,
     248,   249,   250,   251,   252,     0,     0,   253,     0,   255,
       0,     0,   257,   258,   259,     0,     0,   260,   261,   262,
     263,   264,   496,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   286,   287,   288,   289,   290,     0,   291,
     292,     0,   294,     0,   295,   296,   297,   298,   299,   300,
       0,   301,   302,     0,     0,   303,   304,   305,     0,     0,
     306,   307,     0,   309,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   498,   402,   403,   404,     0,   405,   406,     0,
     407,     0,   409,   410,   411,   412,   413,     0,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,   441,     0,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   494,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
       0,     0,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   235,   236,   237,   238,
     239,   240,   241,     0,   242,     0,   243,     0,     0,   246,
       0,   248,   249,   250,   251,   252,     0,     0,   253,     0,
     255,     0,     0,   257,   258,   259,     0,     0,   260,   261,
     262,   263,   264,   496,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   286,   287,   288,   289,   290,     0,
     291,   292,     0,   294,     0,   295,   296,   297,   298,   299,
     300,     0,   301,   302,     0,     0,   303,   304,   305,     0,
       0,   306,   307,     0,   309,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   498,   402,   403,   404,     0,   405,   406,
       0,   407,     0,   409,   410,   411,   412,   413,     0,   414,
     415,     0,     0,   416,   417,   418,   419,   420,     0,   421,
     422,   423,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
     438,   439,   440,     0,   441,     0,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   494,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   559,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,     0,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   235,   236,   237,
     238,   239,   240,   241,     0,   242,     0,   243,     0,     0,
     246,     0,   248,   249,   250,   251,   252,     0,     0,   253,
       0,   255,     0,     0,   257,   258,   560,     0,     0,   260,
     261,   262,   263,   264,   496,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   286,   287,   288,   289,   290,
       0,   291,   292,     0,   294,     0,   295,   296,   297,   298,
     299,   300,     0,   301,   302,     0,     0,   303,   304,   305,
       0,     0,   306,   307,     0,   309,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     360,   361,   362,   363,   364,   365,   366,   367,   561,   369,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     562,     0,   380,   381,   382,   383,   384,     0,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   498,   402,   403,   404,     0,   405,
     406,     0,   407,     0,   409,   410,   411,   412,   413,     0,
     563,   415,     0,     0,   416,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,   441,     0,   443,   444,   445,
     446,     0,     0,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   494,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,     0,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,     0,   235,   236,
     237,   238,   239,   240,   241,     0,   242,     0,   243,     0,
       0,   246,     0,   248,   249,   250,   251,   252,     0,     0,
     253,     0,   255,     0,     0,   257,   258,   259,     0,     0,
     260,   261,   262,   263,   264,   496,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   286,   287,   288,   289,
     290,     0,   291,   292,     0,   294,     0,   295,   296,   297,
     298,   299,   300,     0,   301,   302,     0,     0,   303,   304,
     305,     0,     0,   306,   307,     0,   309,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   582,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   498,   402,   403,   404,     0,
     405,   406,     0,   407,     0,   409,   410,   411,   412,   413,
       0,   414,   415,     0,     0,   416,   417,   418,   419,   420,
       0,   421,   422,   423,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,   438,   439,   440,     0,   441,     0,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   494,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   636,     0,     0,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   235,
     236,   237,   238,   239,   240,   241,     0,   242,     0,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,     0,
       0,   253,     0,   255,     0,     0,   257,   258,   259,     0,
       0,   260,   261,   262,   263,   264,   496,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   286,   287,   288,
     289,   290,     0,   291,   292,     0,   294,     0,   295,   296,
     297,   298,   299,   300,     0,   301,   302,     0,     0,   303,
     304,   305,     0,     0,   306,   307,     0,   309,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   498,   402,   403,   404,
       0,   405,   406,     0,   407,     0,   409,   410,   411,   412,
     413,     0,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,   441,     0,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   494,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   723,     0,     0,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,     0,
     235,   236,   237,   238,   239,   240,   241,     0,   242,     0,
     243,     0,     0,   246,     0,   248,   249,   250,   251,   252,
       0,     0,   253,     0,   255,     0,     0,   257,   258,   259,
       0,     0,   260,   261,   262,   263,   264,   496,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   286,   287,
     288,   289,   290,     0,   291,   292,     0,   294,     0,   295,
     296,   297,   298,   299,   300,     0,   301,   302,     0,     0,
     303,   304,   305,     0,     0,   306,   307,     0,   309,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   498,   402,   403,
     404,     0,   405,   406,     0,   407,     0,   409,   410,   411,
     412,   413,     0,   414,   415,     0,     0,   416,   417,   418,
     419,   420,     0,   421,   422,   423,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,   438,   439,   440,     0,   441,     0,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     494,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   726,     0,     0,   223,   224,   225,
     226,     0,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   235,   236,   237,   238,   239,   240,   241,     0,   242,
       0,   243,     0,     0,   246,     0,   248,   249,   250,   251,
     252,     0,     0,   253,     0,   255,     0,     0,   257,   258,
     259,     0,     0,   260,   261,   262,   263,   264,   496,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   286,
     287,   288,   289,   290,     0,   291,   292,     0,   294,     0,
     295,   296,   297,   298,   299,   300,     0,   301,   302,     0,
       0,   303,   304,   305,     0,     0,   306,   307,     0,   309,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,   322,   323,   324,   325,   326,   327,   328,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,     0,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   498,   402,
     403,   404,     0,   405,   406,     0,   407,     0,   409,   410,
     411,   412,   413,     0,   414,   415,     0,     0,   416,   417,
     418,   419,   420,     0,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,   438,   439,   440,     0,   441,
       0,   443,   444,   445,   446,     0,     0,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   494,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   729,     0,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,     0,   223,
     224,   225,   226,     0,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   235,   236,   237,   238,   239,   240,   241,
       0,   242,     0,   243,     0,     0,   246,     0,   248,   249,
     250,   251,   252,     0,     0,   253,     0,   255,     0,     0,
     257,   258,   259,     0,     0,   260,   261,   262,   263,   264,
     496,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   286,   287,   288,   289,   290,     0,   291,   292,     0,
     294,     0,   295,   296,   297,   298,   299,   300,     0,   301,
     302,     0,     0,   303,   304,   305,     0,     0,   306,   307,
       0,   309,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   360,   361,   362,   363,
     364,   365,   366,   367,   561,   369,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     498,   402,   403,   404,     0,   405,   406,     0,   407,     0,
     409,   410,   411,   412,   413,     0,   563,   415,     0,     0,
     416,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,   438,   439,   440,
       0,   441,     0,   443,   444,   445,   446,     0,     0,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   494,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,  1375,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,     0,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   235,   236,   237,   238,   239,   240,
     241,     0,   242,     0,   243,     0,     0,   246,     0,   248,
     249,   250,   251,   252,     0,     0,   253,     0,   255,     0,
       0,   257,   258,   259,     0,     0,   260,   261,   262,   263,
     264,   496,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   286,   287,   288,   289,   290,     0,   291,   292,
       0,   294,     0,   295,   296,   297,   298,   299,   300,     0,
     301,   302,     0,     0,   303,   304,   305,     0,     0,   306,
     307,     0,   309,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,     0,
     381,   382,   383,   384,     0,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   498,   402,   403,   404,     0,   405,   406,     0,   407,
       0,   409,   410,   411,   412,   413,     0,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,   421,   422,   423,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,   438,   439,
     440,     0,   441,     0,   443,   444,   445,   446,     0,     0,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   494,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,  1512,     0,
       0,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   235,   236,   237,   238,   239,
     240,   241,     0,   242,     0,   243,     0,     0,   246,     0,
     248,   249,   250,   251,   252,     0,     0,   253,     0,   255,
       0,     0,   257,   258,   259,     0,     0,   260,   261,   262,
     263,   264,   496,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   286,   287,   288,   289,   290,     0,   291,
     292,     0,   294,     0,   295,   296,   297,   298,   299,   300,
       0,   301,   302,     0,     0,   303,   304,   305,     0,     0,
     306,   307,     0,   309,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   498,   402,   403,   404,     0,   405,   406,     0,
     407,     0,   409,   410,   411,   412,   413,     0,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,   441,     0,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   494,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,  1787,
       0,     0,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   235,   236,   237,   238,
     239,   240,   241,     0,   242,     0,   243,     0,     0,   246,
       0,   248,   249,   250,   251,   252,     0,     0,   253,     0,
     255,     0,     0,   257,   258,   259,     0,     0,   260,   261,
     262,   263,   264,   496,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   286,   287,   288,   289,   290,     0,
     291,   292,     0,   294,     0,   295,   296,   297,   298,   299,
     300,     0,   301,   302,     0,     0,   303,   304,   305,     0,
       0,   306,   307,     0,   309,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   498,   402,   403,   404,     0,   405,   406,
       0,   407,     0,   409,   410,   411,   412,   413,     0,   414,
     415,     0,     0,   416,   417,   418,   419,   420,     0,   421,
     422,   423,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
     438,   439,   440,     0,   441,     0,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   494,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
    1799,     0,     0,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   235,   236,   237,
     238,   239,   240,   241,     0,   242,     0,   243,     0,     0,
     246,     0,   248,   249,   250,   251,   252,     0,     0,   253,
       0,   255,     0,     0,   257,   258,   259,     0,     0,   260,
     261,   262,   263,   264,   496,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   286,   287,   288,   289,   290,
       0,   291,   292,     0,   294,     0,   295,   296,   297,   298,
     299,   300,     0,   301,   302,     0,     0,   303,   304,   305,
       0,     0,   306,   307,     0,   309,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   498,   402,   403,   404,     0,   405,
     406,     0,   407,     0,   409,   410,   411,   412,   413,     0,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,   441,     0,   443,   444,   445,
     446,     0,     0,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   494,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,  1801,     0,     0,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,     0,   235,   236,
     237,   238,   239,   240,   241,     0,   242,     0,   243,     0,
       0,   246,     0,   248,   249,   250,   251,   252,     0,     0,
     253,     0,   255,     0,     0,   257,   258,   259,     0,     0,
     260,   261,   262,   263,   264,   496,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   286,   287,   288,   289,
     290,     0,   291,   292,     0,   294,     0,   295,   296,   297,
     298,   299,   300,     0,   301,   302,     0,     0,   303,   304,
     305,     0,     0,   306,   307,     0,   309,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   498,   402,   403,   404,     0,
     405,   406,     0,   407,     0,   409,   410,   411,   412,   413,
       0,   414,   415,     0,     0,   416,   417,   418,   419,   420,
       0,   421,   422,   423,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,   438,   439,   440,     0,   441,     0,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   494,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,     0,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   235,
     236,   237,   238,   239,   240,   241,     0,   242,     0,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,     0,
       0,   253,     0,   255,     0,     0,   257,   258,   259,     0,
       0,   260,   261,   262,   263,   264,   496,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   286,   287,   288,
     289,   290,     0,   291,   292,     0,   294,     0,   295,   296,
     297,   298,   299,   300,     0,   301,   302,     0,     0,   303,
     304,   305,     0,     0,   306,   307,     0,   309,     0,   311,
     312,   313,   314,   315,   316,   317,     0,   319,   320,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,     0,   339,
     340,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   360,   361,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   498,   402,   403,   404,
       0,   405,   406,     0,   407,     0,   409,   410,   411,   412,
     413,     0,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,   441,     0,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   654,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
     655,   109,   110,   111,     0,   656,   657,   658,   659,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     660,   661,   127,     0,   128,   129,   130,   131,     0,     0,
     662,     0,   134,   135,   136,   137,   138,   139,   663,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     664,   151,   152,   153,     0,     0,     0,   665,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   666,   667,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     668,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,     0,   193,   194,   195,
     196,     0,     0,   198,     0,   199,   200,   669,   202,     0,
     203,     0,   204,   670,     0,   671,   207,   208,   209,   672,
     211,     0,   212,     0,     0,     0,   215,     0,   216,   217,
     218,   219,   220,   673,     0,   674,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   675,
       0,   236,   237,   238,   239,   676,   677,     0,   678,     0,
     243,   679,   680,   246,   681,   248,   249,   250,   251,   252,
       0,     0,   253,   682,   255,   683,     0,   257,   258,   259,
       0,     0,   260,   261,   262,   263,   264,   684,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   685,   686,   687,   287,
     288,   289,     0,     0,   291,   292,   688,   294,     0,     0,
     296,   689,   298,   299,   300,     0,   301,   302,     0,     0,
     303,   304,   305,     0,     0,   306,     0,   690,   309,   691,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,     0,   325,   326,     0,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   692,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   693,   360,   361,   362,   694,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   380,   695,   382,   383,   384,
     696,   386,   387,   697,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   698,   402,     0,
     404,     0,   405,   406,     0,   407,   699,   409,   410,   411,
     412,   413,     0,   700,   701,     0,     0,   416,   417,     0,
     419,     0,     0,   421,   422,   702,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,   438,     0,   703,     0,   441,   704,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   654,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   465,   466,   467,   468,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,   655,   109,   110,   111,
       0,   656,   657,   658,   659,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   660,   661,   127,     0,
     128,   129,   130,   131,     0,     0,   662,     0,   134,   135,
     136,   137,   138,   139,   663,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   664,   151,   152,   153,
       0,     0,     0,   665,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   666,   667,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,     0,   193,   194,   195,   196,     0,     0,   198,
       0,   199,   200,   669,   202,     0,   203,     0,   204,   670,
       0,   671,   207,   208,   209,   672,   211,     0,   212,     0,
       0,     0,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   674,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,   675,     0,   236,   237,   238,
     239,   676,   677,     0,   678,     0,   243,   679,   680,   246,
     681,   248,   249,   250,   251,   252,     0,     0,   253,   682,
     255,   683,     0,   257,   258,   259,     0,     0,   260,   261,
     262,   263,   264,   684,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   685,   686,   687,   287,   288,   289,     0,     0,
     291,   292,   688,   294,     0,     0,   296,   689,   298,   299,
     300,     0,   301,   302,     0,     0,   303,   304,   305,     0,
       0,   306,     0,   690,   309,   691,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
       0,   325,   326,     0,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   692,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,   693,   360,
     361,   362,   694,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   380,   695,   382,   383,   384,   696,   386,   387,   697,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   698,   402,     0,   404,     0,   405,   406,
       0,   407,   699,   409,   410,   411,   412,   413,     0,   700,
     701,     0,     0,   416,   417,     0,   419,     0,     0,   421,
     422,   702,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
     438,     0,   703,     0,   441,   704,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,  2376,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   465,   466,   467,   468,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,  2377,   109,   110,   111,     0,   656,  2378,   658,
     659,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   660,   661,   127,     0,   128,   129,   130,   131,
       0,     0,  2379,     0,   134,   135,   136,   137,   138,   139,
    2380,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,  2381,   151,   152,   153,     0,     0,     0,  2382,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     666,   667,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   668,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,     0,   193,
     194,   195,   196,     0,     0,   198,     0,   199,   200,   669,
     202,     0,   203,     0,   204,  2383,     0,  2384,   207,   208,
     209,  2385,   211,     0,   212,     0,     0,     0,   215,     0,
     216,   217,   218,   219,   220,   221,     0,  2386,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,  2387,     0,   236,   237,   238,   239,   676,   677,     0,
     678,     0,   243,  2388,  2389,   246,  2390,   248,   249,   250,
     251,   252,     0,     0,   253,  2391,   255,  2392,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,  2586,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   685,  2394,
     687,   287,   288,   289,     0,     0,   291,   292,  2396,   294,
       0,     0,   296,   689,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,     0,  2398,
     309,  2399,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,     0,   325,   326,     0,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   692,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,  2400,   360,   361,   362,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,     0,   382,
     383,   384,  2402,   386,   387,   697,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,  2587,
     402,     0,   404,     0,   405,   406,     0,   407,  2404,   409,
     410,   411,   412,   413,     0,   700,   701,     0,     0,   416,
     417,     0,   419,     0,     0,   421,   422,  2405,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,     0,   703,     0,
     441,  2406,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   654,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   465,   466,
     467,   468,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   655,   109,
     110,   111,     0,   656,   657,   658,   659,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   660,   661,
     127,     0,   128,   129,   130,   131,     0,     0,   662,     0,
     134,   135,   136,   137,   138,   139,   663,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   664,   151,
     152,   153,     0,     0,     0,   665,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   666,   667,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   668,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,     0,   193,   194,   195,   196,     0,
       0,   198,     0,   199,   200,   669,   202,     0,   203,     0,
     204,   670,     0,   671,   207,   208,   209,   672,   211,     0,
     212,     0,     0,     0,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   674,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,   675,     0,   236,
     237,   238,   239,   676,   677,     0,   678,     0,   243,   679,
     680,   246,   681,   248,   249,   250,   251,   252,     0,     0,
     253,   682,   255,   683,     0,   257,   258,   259,     0,     0,
     260,   261,   262,   263,   264,     0,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   685,   686,   687,   287,   288,   289,
       0,     0,   291,   292,   688,   294,     0,     0,   296,   689,
     298,   299,   300,     0,   301,   302,     0,     0,   303,   304,
     305,     0,     0,   306,     0,   690,   309,   691,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,     0,   325,   326,     0,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   692,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
     693,   360,   361,   362,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   380,     0,   382,   383,   384,   696,   386,
     387,   697,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   402,     0,   404,     0,
     405,   406,     0,   407,   699,   409,   410,   411,   412,   413,
       0,   700,   701,     0,     0,   416,   417,     0,   419,     0,
       0,   421,   422,   702,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,   438,     0,   703,     0,   441,   704,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   465,   466,   467,   468
};

static const yytype_int16 yycheck[] =
{
       6,   615,   525,   630,   581,   488,   531,   991,   558,   601,
       0,    58,     6,    35,   695,   989,   792,   871,     6,   576,
      16,   969,  1268,   792,   964,  1165,  1728,   622,     0,   522,
       0,   624,   873,     0,     0,  1797,    60,   529,  1134,  1134,
     701,   524,  1134,  1134,    16,  1221,  1621,  1622,   889,   724,
     966,  1626,   727,   960,  2161,  1803,  1170,  1805,  1030,    29,
     901,  1794,    30,  2086,  1270,  2134,  2160,    60,  1297,  1298,
     531,  2134,  1684,  1841,  1842,  1843,     0,  1748,   994,    34,
    2172,   615,  2179,   617,     9,   619,   530,     5,   799,     4,
    1249,  2050,  1667,  1668,     9,    58,   660,   661,    50,    73,
       5,     5,     5,     5,  2044,     5,     5,     5,    78,    13,
      14,    13,    14,     5,    13,    14,  1996,     5,    11,     5,
      88,     5,     5,   687,     5,     5,     9,  2450,     0,    13,
      14,    13,    14,  1724,  1867,   536,    11,     5,  1396,    40,
     909,     5,     3,   635,     0,    13,    14,     5,  1739,  1398,
    2447,     9,  2499,     5,   731,     5,     5,     5,    23,  1350,
    1135,    67,   169,   117,   168,   107,    41,   598,     4,   598,
      31,    32,  2521,     9,    48,     3,     4,     5,     9,  2433,
    1386,     9,   120,  1263,    27,    58,   213,    40,  2535,    58,
      15,    34,  1263,  2590,   137,    11,  2075,   858,    73,  1932,
    1933,    27,   280,    27,   120,   145,  1263,    58,    34,   978,
      34,    58,   981,   982,  2049,   282,   169,  2621,  2363,   168,
    1984,    93,   288,   239,   168,    41,   288,   162,    83,    37,
     667,    75,    59,   122,   130,   120,   304,    93,  2722,  2790,
      67,   158,    86,   184,   185,   350,   163,   792,   251,   252,
     135,  2105,   689,   798,   818,   819,   271,    73,  1263,   165,
     304,   371,  2415,  2878,  2683,    75,   108,   792,   433,   207,
     135,   211,   127,   798,  2621,    11,    86,   118,   169,   268,
     844,   158,   115,   720,  2607,    68,   449,   115,   118,  2057,
     107,  1002,   869,   341,   411,   117,   977,   362,  1009,   173,
    2853,    20,  2855,    11,   108,    41,   167,   351,   169,  2658,
     251,   252,   203,   230,     5,   189,   124,   874,    27,   522,
     194,   369,   454,   916,   147,   490,  2285,   218,    11,  2944,
    2184,   494,  2401,   398,  2818,  2442,   227,    73,   455,    11,
     885,   160,  2104,  1955,   476,   902,  2897,   300,   288,   190,
    2444,   795,   479,   230,  2294,   229,   359,   360,  2298,   452,
     190,   376,   279,   490,   909,    73,   911,   912,  2101,    78,
    2103,   928,   195,     0,   439,   310,  2929,    27,    87,   342,
     490,   277,   959,   476,   212,   490,   911,   912,  1963,  1964,
    1965,  1966,   265,   830,  1969,  1970,  1971,  1972,  1973,  1974,
    1975,  1976,  1977,  1978,  2751,   233,   233,   116,   931,   315,
     282,   848,   490,   429,  2559,  1621,  1622,   485,   359,   360,
    1626,   286,   375,   490,  2721,   490,   282,   174,   494,   314,
    2849,  2915,   494,   978,  1145,  2588,   981,   982,  1684,   272,
    2787,   485,   431,  1035,   299,   264,  2021,  2022,   265,  2284,
     272,  2042,  2331,  2044,  2218,   346,   398,  1537,  1538,  1539,
     409,  1667,  1668,  2860,  2718,   409,  1537,   494,   293,   342,
    2203,   343,  2876,   342,   490,   340,   341,   186,  1418,  1536,
     130,   435,   160,   490,  2833,   425,   233,   343,   478,   198,
     494,   342,   695,   431,   395,   342,   369,  2820,   386,   387,
     374,  1730,  1474,  1761,   369,   448,   478,  2599,   478,   531,
    1756,   478,   478,  1762,   488,   431,   522,  1144,   492,  1503,
     426,  2590,  2819,  1498,   925,   531,   957,  2590,   957,  2876,
     479,   494,  1537,  1538,     0,   531,   379,   452,   490,   442,
    1135,  2500,   395,   492,   433,   223,   570,   479,   403,   454,
      16,   557,   558,   379,   601,   379,    27,   490,   530,  1750,
     492,   476,   454,    29,   489,   409,   481,   482,  2508,    35,
     488,   476,   490,  2513,   492,   581,  2516,   570,  2340,  1738,
     452,  1158,   443,   579,   476,   490,   490,   490,   490,   158,
     490,   490,   490,   486,    60,  2475,   452,   800,   490,   409,
     590,  1573,  1166,  1167,   490,  2353,   490,   490,   490,   490,
     490,   486,    78,  2720,   620,   621,   622,  1162,   590,   491,
     590,   493,   490,   590,   590,   593,   490,   582,  1173,  2726,
    1175,  2544,   490,  2725,  1345,   491,   493,   493,   490,  1184,
     490,   490,   490,   494,  1239,   481,   482,   494,   106,   494,
     481,   482,  2565,   481,   482,   402,  1201,   404,  2329,   130,
    1253,   230,   323,    75,  2432,   239,   590,   483,   484,   485,
     486,  1164,   239,   115,    86,  1252,   385,  1254,  1447,   388,
     485,  1258,   429,  1228,  1229,   443,  1179,   492,  1457,   695,
     351,  1460,  1215,  1869,  1271,  1272,   130,  1274,  1223,  1292,
    1293,   490,  2435,  2294,    13,    14,   909,  2298,   397,  1955,
     279,  1306,   338,  2653,    30,  1260,  1261,  1294,  2825,  1264,
    1265,  2333,    23,   433,  1957,   731,    93,  1284,    29,  1212,
    1213,     8,   197,   115,    11,   328,  1219,   158,    54,    16,
      17,    18,   163,   432,  1337,   481,   482,   483,   484,   485,
     486,   149,  1985,  1348,  1347,   246,  1349,  1963,  1964,  1965,
    1966,   414,  1223,  1969,  1970,  1971,  1972,  1973,  1974,  1975,
    1976,  1977,  1978,   149,   977,  2004,  2870,    23,  1222,  1893,
     490,   355,  1558,    29,  2546,  1899,   792,   245,   355,  1558,
    2703,  2860,   798,   799,   800,   253,  1650,  2860,   481,   482,
     483,   484,   485,   486,   186,   398,    75,  1648,  1301,   230,
     816,   483,   484,   485,   486,  2021,  2022,    86,   491,    11,
     539,   494,   541,   795,   445,  1732,  1309,  1719,  1720,  1443,
     358,   328,    78,   267,   135,   454,  2943,  1821,   239,   845,
    1435,   267,   561,   277,  1519,   219,   272,   454,   870,    41,
    1395,  1396,   445,   295,   163,   429,    94,   476,   279,   865,
     866,   867,   429,   869,   870,  1540,   363,  1542,     4,   476,
    1545,   490,  1844,     9,   490,  2898,  2899,  2017,  1470,  1471,
    1472,    73,  1416,   490,    94,   267,   490,   893,  2134,   197,
     485,   265,   402,  2468,   404,     4,   322,   492,   239,   295,
       9,   398,  1447,  1498,   491,   911,   912,   494,  2499,  1443,
     488,  1752,  1457,  1829,   492,  1460,   490,  2508,   942,   943,
     362,   945,  2513,   490,  2947,  2516,  2688,   117,  1462,   239,
    1878,   169,     4,  1467,  1427,  1883,     4,     9,   944,  1516,
      23,     9,   948,   949,  2535,  2693,    29,   488,   445,   942,
     943,   492,   945,   959,   355,   491,   398,    23,   494,   169,
     473,  1164,  1165,    29,   362,   203,   362,   492,   936,     8,
    1453,   977,    11,    64,    65,  1458,  1179,    16,    17,    18,
     218,  1635,  2557,  1637,  1638,   286,   362,  1532,  1533,   227,
     488,   217,   490,   203,   492,   362,  1002,   439,   372,  1491,
     398,   491,   398,  1009,   494,   473,   491,   284,   218,   494,
     452,   201,   478,  1558,   355,   559,   560,   227,   562,   483,
    2196,    23,   398,   261,  1030,   993,  1571,    29,   429,   491,
    2621,   398,   494,  1558,   476,   336,    13,    14,  1531,   340,
     239,   439,   282,   439,   282,   355,  1571,   355,   490,   167,
    2625,   261,   135,   494,   452,   363,   452,   431,  1635,  1636,
    1637,  1638,  2653,   439,   530,   531,  2162,  2162,   369,   135,
    2162,  2162,   439,   792,   490,   265,   452,   267,   476,   798,
     476,   491,  1575,   491,  2786,   452,   494,  2333,   429,   490,
     398,   491,   490,   328,   490,  1672,   130,  1563,  1301,   491,
     476,  1567,   494,  1569,   570,    13,    14,     8,   346,   476,
      11,   402,   168,   404,   490,    16,    17,    18,   219,   429,
    1643,  2261,   156,   490,   590,  1800,   213,  1802,   363,  1135,
      54,  2115,    33,   135,  1726,   436,   346,   445,   490,  1145,
    2114,  2033,  2034,  2035,  2036,   491,   473,  1923,   494,   490,
      31,    32,  1158,    13,    14,   194,   355,   876,  1164,  1165,
    2751,   150,  2102,   398,   265,  2113,   885,  2115,   494,   491,
     496,  2933,   494,  1179,   491,  2877,   215,   494,   336,   898,
     490,  2155,    13,    14,  1729,   491,   491,   150,   494,   494,
     909,   491,   911,   912,   494,   433,  2787,   217,  2900,   130,
     477,   478,   479,   286,   481,   482,   483,   484,   485,   486,
     445,   491,    93,   150,   494,  1760,  1761,  1223,   491,   491,
     286,   494,   494,   324,  1427,   156,   491,  1223,   491,   494,
     429,   494,  2073,  1239,   150,  1862,  1897,  1898,   272,   491,
     491,   491,   494,   277,   494,   284,  1252,   452,  1254,   454,
    1222,  1257,  1258,  2955,   402,   491,   404,   340,   494,  1249,
     490,  1267,  2468,  1269,  1270,  1271,  1272,  1273,  1274,  1275,
     336,   372,   491,   491,   340,   494,   494,  1249,   491,  1249,
     492,   494,  1249,  1249,   286,  2876,   369,   267,  1294,   491,
    1296,   490,   494,    13,    14,  1301,  1302,  1303,  1304,  1305,
    1306,    13,    14,   369,  1310,  1311,    36,   491,   491,  1315,
     494,   494,   491,  1319,   215,   494,  1322,  1323,  1324,  1325,
    1326,  1327,  1328,  1329,  1330,    55,  1921,  1333,  1531,   795,
     431,  2471,  1338,    36,   336,  1341,   267,  1343,   340,  1345,
     491,   272,  1348,   494,  2590,     5,   277,   445,     8,  1894,
      23,  2557,   491,   436,    14,   494,    29,   491,   491,   490,
     494,   494,  1368,    82,    24,  2134,   832,   369,    28,  1365,
     436,   491,  1575,   490,   494,   491,   106,   402,   494,   404,
    1386,   456,   416,   284,  1877,  2369,    13,    14,    23,  1395,
    1396,   442,   491,   427,    29,   494,   311,   491,  1923,     8,
     494,  2341,    11,  1373,   870,   362,  1999,    16,    17,    18,
     491,   491,   490,   494,   494,  1992,  2299,   491,  2301,  2625,
     494,  1427,   491,  2303,    33,   494,  2306,  1433,   491,  1435,
     490,   494,   491,  1916,   436,   494,  2290,   490,   477,   478,
     479,   398,   481,   482,   483,   484,   485,   486,   150,     8,
    2304,  1944,    11,   491,   350,   351,   494,    16,    17,    18,
     145,   491,   135,   595,   494,   597,   196,   491,  1474,  1962,
     494,  1477,  1478,   158,  1480,    35,   942,   943,   163,   945,
     490,   362,   439,   174,   150,   416,  2626,    23,   491,  2082,
     282,   494,  1498,    29,  1987,   452,   427,  2054,   150,   491,
     135,  1994,   494,   150,   491,  1511,   197,   494,   491,   491,
    1516,   494,   494,   491,   398,   245,   494,   398,   491,   476,
    2195,   494,   490,   253,    36,  1531,   211,    13,    14,    13,
      14,    13,    14,   490,   228,   265,   490,  1507,  2133,   488,
    2135,     3,   233,     5,  1263,   230,    13,    14,    13,    14,
      13,    14,  1558,    13,    14,    13,    14,  2149,   439,    13,
      14,     5,   443,    13,    14,  1571,   296,  1573,     5,  1575,
     490,   452,    13,    14,  1580,   163,   477,   478,   479,  1585,
     481,   482,   483,   484,   485,   486,   490,   522,   490,  2134,
     490,  2360,    13,    14,   279,   476,   287,    13,    14,   135,
     490,  1623,   490,   288,    13,    14,   215,    13,    14,   490,
     490,   341,   490,   286,  2860,  1621,  1622,  1623,    13,    14,
    1626,     5,  2596,   350,   351,   255,   256,   359,   360,  1635,
    1636,  1637,  1638,   363,   350,   351,  1355,   350,   351,  1645,
       5,  2134,   490,  1649,   911,   912,  1652,   109,   110,   490,
    1672,   286,   490,   383,    11,   490,   215,   490,    15,     5,
     490,  1667,  1668,   336,   490,    22,  1672,   340,     5,   490,
     490,   490,   490,   146,  1877,   284,    33,    34,     9,   490,
    1686,   453,    15,  1689,   213,  1691,  2462,   494,    36,    97,
     369,   163,   279,   163,   277,   228,   369,  2372,  2373,  2192,
     490,   336,   409,   490,    86,   340,  1712,    54,   494,   409,
      54,   402,   409,   404,   258,   491,   409,  2310,  1724,   499,
    2401,  1743,   184,   185,   452,   284,   409,   150,   492,    86,
    1724,    93,  2325,  1739,   369,   426,  1724,   142,   429,   267,
     425,  1944,   267,   490,    36,  1739,    36,  1753,  1738,   490,
     286,  1739,     9,    35,   407,   488,  1222,   407,   409,  1962,
     695,   491,  1768,   436,   488,   409,  1738,   409,  1738,   409,
    2320,  1738,  1738,   494,   448,   490,    11,   338,   489,   407,
    1786,   499,   490,  1249,  1987,   247,   248,   249,   250,   251,
     252,  1994,   272,   255,   256,   494,   494,  1803,  1804,  1805,
     336,   436,   490,   409,   340,   177,   159,     6,   168,   491,
     490,   433,    11,    36,  2017,  2360,    15,   211,   494,   372,
    2365,  2590,    21,    22,    23,   494,   219,    26,   283,   490,
      29,    30,   219,   369,    33,    34,   267,   288,  1844,  1558,
     219,   320,   280,  1562,   445,   188,  1312,   490,   150,   490,
     150,   488,  1571,   452,   267,   282,   473,   491,   473,   491,
     491,    36,  2407,  2408,   282,   800,   491,   491,   477,   478,
     479,  1877,   481,   482,   483,   484,   485,   486,  2371,    78,
      36,   267,   489,   491,   168,   168,    85,    86,    87,    88,
      89,    36,   492,   491,   491,   491,   491,   359,   360,   491,
     436,   491,   491,   473,   409,   491,   491,  1373,   490,   490,
      55,   490,   490,   439,   292,  1921,   282,  1923,   477,   478,
     479,   479,   481,   482,   483,   484,   485,   486,   145,   449,
    2914,  2134,   449,   475,   283,  1941,   431,  2462,  1944,   494,
     238,   158,   283,   283,  1950,   409,   163,  1953,   267,  1919,
    1956,   490,   150,   197,   286,   150,  1962,  1963,  1964,  1965,
    1966,   106,   150,  1969,  1970,  1971,  1972,  1973,  1974,  1975,
    1976,  1977,  1978,   409,  1996,   409,  1982,  1983,   274,   409,
      67,  1987,  2029,   409,   491,   489,  1992,   490,  1994,  2192,
    1996,   491,   494,   280,   211,   452,   282,    36,   150,  2005,
     489,   489,  2008,   150,  2010,  2027,   272,   141,   470,   471,
     168,  2017,  2018,   230,    11,  2021,  2022,   163,   168,   490,
    2026,  2027,  2044,   491,   449,   491,   168,   172,   115,   398,
     491,   476,   491,   177,  2579,  2580,  2042,   343,  2044,   522,
     438,  1507,   977,  2635,   491,  2590,   494,    84,  2042,  2055,
    2044,   196,   491,   283,  2042,   490,  2044,   150,  2261,  2065,
     172,    50,   279,   491,   420,   494,   490,    36,    79,   491,
     490,   288,  2555,   168,   491,  2081,   491,  2704,   490,   433,
      85,   491,    87,   494,    89,   172,   489,   491,   490,   490,
    1809,  2860,   491,   400,  2689,   491,   218,  2590,   291,   491,
     245,   490,   218,   289,    54,   490,    95,   181,   253,   479,
     491,   199,   187,   452,   409,   272,     8,  2640,   272,    11,
     265,   492,    36,  2129,    16,    17,    18,  2133,  2134,  2135,
     409,   492,   121,   492,  1853,  2658,   267,   492,   452,   491,
     497,    33,   492,   479,   107,   490,   282,  1866,   490,    41,
     139,   296,    36,   168,   143,   490,    48,  1623,   492,   218,
     301,    86,   492,   492,  2657,   492,  2793,  2660,  2371,   526,
     492,  2748,   492,   490,   492,   164,   492,   492,   167,   492,
     267,    73,   492,   492,   492,   272,  2192,   492,   492,   492,
     451,   492,   131,   182,   491,  2772,   341,  2774,  2401,   492,
     330,   492,   490,  2209,  1923,   219,  1672,   492,   425,  1928,
     490,  1930,   695,  2183,   492,  1934,  1935,   492,   363,   492,
     490,    81,   115,    36,  1690,   582,   150,  2710,   315,  1164,
    1165,    73,   491,   122,   150,    36,   491,   351,   383,    54,
    1706,  2764,   351,   330,  1179,    36,   494,   490,   490,  2255,
    2256,  2865,   490,   490,  2260,  2261,   490,   433,  1724,  2265,
     438,    73,  2268,  2269,  2859,    36,   186,  2273,  2471,   433,
      67,   488,  1738,  1739,   491,   492,   285,  1743,    67,   490,
     479,   173,   420,   272,   490,   494,   485,    36,  2294,   488,
     353,   280,  2298,   492,   479,   272,   369,   189,   497,   186,
    2294,   243,   194,   490,  2298,  2788,  2294,   420,    36,   490,
    2298,   285,   285,   490,  2320,  2860,   490,   800,   491,   491,
     265,   282,   350,   215,   216,   524,   525,   526,     9,   337,
     199,   282,    33,   322,   282,   120,   491,   229,     9,   426,
     431,   490,    22,   590,  2116,  1441,   433,  2353,   491,  2129,
    1798,  2324,  2322,  2323,  2079,  2787,  2362,  2531,   557,   558,
     559,   560,  2856,   562,  2365,  2371,  1301,  2860,  2168,  2936,
    2696,  2862,  2913,  2901,   573,   267,  2609,  1792,   270,  1804,
     964,  2173,  2859,   582,  2911,  1855,  1789,  2590,  2133,  2857,
    1212,  1164,   284,  2462,   593,  2401,  1859,  1921,  2158,   930,
      36,  1412,   903,  1753,   952,   951,   605,  2761,  2676,  2847,
    1768,  1386,  2059,  2776,  2842,  2134,    67,  1411,     8,    55,
     954,    11,    73,  2626,   109,   110,  2316,  1739,  2654,  2044,
    2300,  2285,  2042,  2751,  2750,    86,  2768,  2527,  2769,  2158,
       8,  2845,   641,   642,   643,  2829,  1263,  1263,    16,    17,
      18,    41,  2846,  1919,  2657,  1263,  2462,  2660,    48,  1263,
    1339,  1650,  2468,  1756,   115,  2471,   117,  1690,  1581,  2475,
     106,  1254,  1480,  1687,   479,  2445,  1343,  2483,  2484,  1727,
    1863,  2487,   374,    73,  2743,  2058,  1223,   492,  1365,  1571,
     936,  2080,  1427,  2499,   977,  1366,    -1,    -1,    -1,   184,
     185,    -1,  2508,    -1,    -1,  2499,    -1,  2513,    -1,    -1,
    2516,  2499,     8,    -1,  2508,    11,    -1,  2523,  2524,  2513,
    2508,   172,  2516,    -1,    -1,  2513,   522,    -1,  2516,  2535,
    1996,  2537,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2535,    -1,    -1,    -1,    41,    -1,  2535,    -1,    -1,
     201,  2557,    48,   143,    -1,    -1,    -1,    -1,    -1,    -1,
     196,  2027,   247,   248,   249,   250,   251,   252,   573,    -1,
     255,   256,    -1,   930,    -1,    -1,  2042,    73,  2044,    -1,
      -1,    -1,   474,   173,  2590,   477,   478,   479,    -1,   481,
     482,   483,   484,   485,   486,    -1,  1531,    -1,  2317,   189,
     605,    -1,    -1,    -1,   194,   804,    -1,    -1,    -1,   245,
      -1,    -1,    -1,    -1,    -1,  2621,   267,   253,    -1,  2625,
    2626,   272,    -1,    -1,    -1,    -1,    -1,  2621,    -1,   265,
    2600,    -1,    -1,  2621,    -1,    -1,   641,   642,   643,   229,
    1575,    -1,  2664,  2649,    -1,    -1,    -1,  2653,    -1,    -1,
      -1,  2657,  2622,    -1,  2660,    -1,    -1,  2860,  2664,  2653,
     296,    -1,    -1,    -1,   315,  2653,    -1,    -1,    -1,    -1,
      -1,    -1,   871,  2679,   359,   360,    -1,   173,    -1,   330,
      -1,  1164,  1165,  2689,    -1,    -1,    -1,  2693,  2694,    -1,
      -1,    -1,    -1,   189,   284,    -1,  1179,    -1,   194,   695,
      -1,    -1,    -1,    -1,    -1,   341,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   913,    -1,   284,  2183,    -1,    -1,
      -1,    -1,  2441,    -1,    -1,    -1,    -1,   363,    -1,    -1,
      -1,   930,   931,   229,    -1,    -1,    -1,   936,   937,   938,
      -1,    -1,  2748,  2462,    -1,  2751,    -1,   383,   522,    -1,
      -1,    -1,    -1,    -1,  2724,    -1,    -1,  2751,    -1,    -1,
      -1,    -1,    -1,  2751,   963,   964,  2772,    -1,  2774,    -1,
    2776,    -1,    -1,    -1,    -1,   426,    -1,   976,    -1,    -1,
      -1,  2787,   433,    -1,   374,   470,   471,    -1,   284,    -1,
      -1,    -1,    -1,  2787,   993,    -1,    -1,    -1,   997,  2787,
      -1,   949,  2808,    -1,   800,   490,    -1,  2526,    -1,    -1,
      -1,     0,    -1,  2783,    -1,    -1,    -1,   170,  1301,    -1,
      -1,   174,  2828,  2829,    -1,    -1,    -1,    -1,  2294,    -1,
      19,    -1,  2298,    -1,    -1,    -1,  2842,    -1,   522,    -1,
      29,    -1,    31,    32,   197,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2859,  2860,    -1,  2322,  2323,    47,  1216,
      -1,  1218,    -1,    -1,    -1,    -1,    -1,    56,    -1,    -1,
    2876,  2590,  2878,    -1,    -1,    -1,    -1,    -1,   374,    68,
     233,    -1,  2876,    -1,   474,    -1,    -1,   240,  2876,    -1,
      79,   481,   482,   483,   484,   485,   486,    -1,    -1,  2869,
      -1,    -1,    91,    -1,    93,    -1,    -1,    -1,   913,   477,
     478,   479,    -1,   481,   482,   483,   484,   485,   486,    -1,
      -1,   695,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1130,   937,    -1,   287,    -1,   125,    -1,  2944,  1138,
      -1,    -1,  1877,    -1,  1427,    -1,   135,    -1,    -1,  1148,
      -1,    -1,   141,    -1,    -1,    -1,    -1,    -1,   963,    -1,
     149,    -1,   151,   152,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   976,    -1,    -1,    -1,   164,    -1,    -1,   474,  2445,
      -1,   977,  1181,    -1,    -1,   481,   482,   483,   484,   485,
     486,    -1,   997,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2719,    -1,   355,    -1,   193,    -1,    -1,    -1,    -1,  1944,
      -1,   695,    -1,  1212,  1213,    -1,  1215,  1216,    -1,  1218,
    1219,    -1,  1221,    -1,    -1,    -1,   800,  1962,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2508,   232,    -1,    -1,    -1,  2513,  1531,   402,
    2516,   404,  1987,    -1,    -1,    -1,    -1,    -1,    -1,  1994,
      -1,    -1,  1419,    -1,    -1,    -1,    -1,   420,    -1,  1268,
      -1,    -1,  1429,   426,  1431,    -1,   429,  1434,    -1,    -1,
    1279,    -1,  2017,  1440,    -1,  1442,    -1,    -1,    -1,    -1,
      -1,    -1,  1575,    -1,    -1,     8,    -1,  1454,    11,    -1,
      -1,    -1,  1459,    16,    17,    18,  1463,  1464,  1465,  1466,
    1309,  1468,  1469,    -1,    -1,    -1,   800,    -1,    -1,    -1,
     309,    -1,  1270,   312,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1138,  2600,    -1,    -1,     8,   109,   110,
      11,  2860,    -1,  1342,  1343,    16,    17,    18,    -1,    -1,
      -1,   340,    -1,     0,    -1,    -1,  2622,    -1,    -1,   348,
      -1,    -1,    33,    -1,    -1,  1364,    -1,  1366,  1164,  1165,
      -1,    -1,    -1,   362,    -1,    -1,  1375,   522,  1377,    -1,
     369,    -1,    -1,  1179,   373,    -1,    -1,  2653,    -1,    -1,
      -1,    -1,    -1,    -1,   383,    -1,    -1,    -1,  2664,  2134,
      -1,    -1,    -1,   977,    -1,   394,    -1,    -1,    -1,   398,
    1409,    -1,    -1,   184,   185,    -1,  1221,    -1,    -1,  1418,
    1419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1429,  1430,  1431,  1432,    -1,  1434,    -1,    -1,  1386,    -1,
      -1,  1440,    -1,  1442,    -1,   434,    93,    -1,    -1,    -1,
     439,    -1,    -1,    -1,  1453,  1454,    -1,  2192,  2724,  1458,
    1459,    -1,    -1,   452,  1463,  1464,  1465,  1466,    -1,  1468,
    1469,    -1,    -1,    -1,    -1,     0,   247,   248,   249,   250,
     251,   252,    -1,    -1,   255,   256,    -1,   476,    -1,  1488,
    1489,  1490,    -1,   977,    -1,    -1,    -1,    -1,   145,    -1,
      -1,   490,   215,    -1,   493,  1301,  1505,    -1,    -1,    -1,
      -1,   158,    -1,    -1,    -1,    -1,   163,  2783,    -1,    -1,
      -1,   168,    -1,    -1,    -1,    -1,  2261,    -1,    -1,    -1,
     177,    -1,    -1,    -1,   181,    -1,    -1,  1342,    -1,    -1,
      -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,    -1,
     695,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1364,
      -1,  1366,    -1,    -1,   211,    -1,    -1,    -1,    93,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,   359,   360,
    1164,  1165,    -1,    -1,  1877,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2869,  1409,  1179,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1427,   279,   158,    -1,   282,  2371,    -1,   163,    -1,
      -1,   288,    -1,   168,  1643,    -1,    -1,    -1,    -1,    -1,
      -1,  1650,   177,    -1,    -1,   800,   181,    -1,    -1,    -1,
      -1,  1944,    -1,    -1,    -1,    -1,  2401,    -1,    -1,    -1,
      -1,    -1,    -1,  1621,  1622,    -1,    -1,    -1,  1626,  1962,
    1164,  1165,    -1,  1488,  1489,  1684,   211,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1179,   343,    -1,    -1,   470,
     471,    -1,    -1,    -1,  1987,   230,    -1,    -1,    -1,    -1,
      -1,  1994,    -1,    -1,    -1,    -1,    -1,    -1,  1717,  1667,
    1668,    -1,    -1,    -1,  1881,  1724,    -1,  1301,    -1,    -1,
      -1,    -1,    -1,    -1,  2017,  1531,  2471,    -1,    -1,    -1,
    1739,    -1,    -1,    -1,  1743,    -1,    -1,  1746,    -1,  1748,
      -1,   398,    -1,    -1,   279,    -1,    -1,   282,    -1,    -1,
      -1,    -1,    -1,   288,   477,   478,   479,    -1,   481,   482,
     483,   484,   485,   486,    -1,    -1,    -1,    -1,   425,  1575,
      -1,    -1,    -1,    -1,     8,    -1,   433,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,  1794,    -1,    -1,    -1,    -1,
      -1,    -1,   449,    -1,   451,   452,   477,   478,   479,    33,
     481,   482,   483,   484,   485,   486,    -1,  1301,   343,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   977,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   488,    -1,    -1,   491,   492,   493,    -1,    -1,    -1,
      -1,  2134,    -1,  1427,    -1,  2590,  1855,    -1,    -1,    -1,
      -1,  1860,    -1,    -1,    -1,    -1,    -1,    -1,  1867,  1868,
    1869,  1870,    -1,   398,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1881,    -1,    -1,    -1,    -1,    -1,    -1,  1888,
      -1,  2626,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     425,  1900,    -1,    -1,    -1,    -1,    -1,    -1,   433,  2192,
      -1,    -1,  1717,    -1,    -1,    -1,    -1,  1916,    -1,    -1,
      -1,    -1,  2657,    -1,   449,  2660,   451,   452,    -1,    -1,
      -1,    -1,    -1,  1932,  1933,    -1,    -1,    -1,    -1,    -1,
    2097,    -1,    -1,  1427,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1955,  1531,    -1,    -1,
      -1,    -1,    -1,   488,  2121,    -1,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2261,  2136,
    2137,  2138,  2139,  2140,  2141,  2142,  2143,  2144,  2145,    -1,
      -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1575,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1963,  1964,  1965,  1966,  1164,
    1165,  1969,  1970,  1971,  1972,  1973,  1974,  1975,  1976,  1977,
    1978,    -1,  2031,    -1,  1179,    -1,    -1,    -1,    -1,    -1,
    2039,  2040,  2041,  2042,    -1,  2044,  2045,  1531,    -1,    -1,
    2049,  2050,    -1,    -1,    -1,  1860,    -1,    -1,    -1,    -1,
     284,    -1,    -1,  1868,  1869,  1870,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2021,  2022,    -1,    -1,    -1,    -1,    -1,
    2079,  1877,    -1,  1888,    -1,    -1,    -1,    -1,  2371,    -1,
      -1,  1575,    -1,    -1,    -1,    -1,  2095,    -1,  2097,    -1,
      -1,    -1,  2101,  2102,  2103,    -1,  2105,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2401,    -1,
      -1,    -1,  2121,    -1,  2123,  2860,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2136,  2137,  2138,
    2139,  2140,  2141,  2142,  2143,  2144,  2145,    -1,  1944,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1301,    -1,    -1,    -1,
      -1,  2160,    -1,    -1,  2163,    -1,  1962,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2173,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2184,    -1,    -1,  2471,    -1,
      -1,  1987,    -1,    -1,    -1,    -1,    -1,  2196,  1994,    -1,
      -1,    -1,    -1,    -1,  2203,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2017,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2039,  2040,  2041,   557,   558,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     0,    -1,    -1,
      -1,    -1,  2251,   477,   478,   479,    -1,   481,   482,   483,
     484,   485,   486,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2274,    -1,    -1,  2277,  2278,
    2279,  2280,  1427,    -1,    -1,  2284,  2285,    -1,  2287,    -1,
    2095,  2290,    -1,    -1,    -1,  2294,    -1,    -1,    -1,  2298,
     620,   621,    -1,  1877,    -1,  2304,    -1,  2590,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2320,    -1,    -1,    -1,  2324,    -1,    -1,    -1,    -1,
    2329,    -1,    -1,    -1,  2333,    -1,    -1,    -1,  2134,    -1,
      93,    -1,  2341,  2626,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2163,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,  2366,    -1,    -1,
    1944,    -1,    -1,    -1,  2657,    -1,    -1,  2660,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1531,    -1,  1962,    -1,
      -1,  2196,   145,  1877,    -1,    41,  2192,    -1,    -1,  2556,
      -1,    -1,    48,    -1,    -1,   158,    -1,    -1,    -1,    -1,
     163,    -1,    -1,  1987,    -1,   168,    -1,    -1,    -1,    -1,
    1994,    -1,    -1,    -1,   177,    -1,    -1,    73,   181,    -1,
    1575,    -1,    -1,    -1,  2591,  2592,  2435,    -1,    -1,    -1,
      -1,    -1,    -1,  2017,    -1,  2444,    -1,    -1,    -1,  2606,
       8,    -1,    -1,    11,    -1,    -1,  2455,    -1,   211,    -1,
    1944,    -1,    -1,    -1,    -1,  2261,    -1,    -1,    -1,    -1,
      -1,    -1,  2277,  2278,  2279,  2280,    -1,   230,  1962,   799,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,    -1,    -1,    -1,   816,   143,    -1,    -1,
    2499,  2500,    -1,  1987,  2503,    -1,    -1,  2506,    -1,  2508,
    1994,    -1,    -1,    -1,  2513,    73,    -1,  2516,    -1,  2518,
    2468,  2678,  2521,    -1,    -1,   845,   279,   173,    -1,   282,
      -1,    -1,    -1,  2017,    -1,   288,  2535,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,   865,   866,   867,   194,  2706,
     870,    -1,    -1,    -1,    -1,    -1,  2555,  2556,    -1,    -1,
    2134,    -1,    -1,    -1,    -1,  2564,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   893,    -1,  2371,    -1,  2860,    -1,    -1,
      -1,    -1,    -1,   229,    -1,   143,    -1,    -1,    -1,    -1,
     343,    -1,  2591,  2592,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2602,    -1,  2401,    -1,  2606,    -1,  2557,
      -1,    -1,    -1,    -1,    36,   173,    -1,    -1,  2192,  2618,
      -1,    -1,  2621,    -1,   944,    -1,    -1,    -1,   948,   949,
      -1,   189,    -1,    55,    -1,    -1,   194,    -1,   284,    -1,
      -1,  2640,    -1,    -1,    -1,   398,    -1,    -1,    -1,    -1,
    2134,    -1,    -1,    -1,  2653,    -1,    -1,    -1,    -1,  2658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   229,   425,    -1,  2673,  2471,    -1,  2625,    -1,  2678,
     433,    -1,  1002,    -1,   106,   107,    -1,  2261,  2687,  1009,
      -1,    -1,    -1,   115,    -1,    -1,   449,    -1,   451,   452,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2706,  2192,    -1,
    1030,  2710,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     886,    -1,    -1,    -1,  2723,    -1,   284,    -1,   374,    -1,
      -1,    -1,  1877,    -1,    -1,   488,    -1,    -1,   491,   492,
     493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     172,    -1,  2751,    -1,    -1,    -1,    -1,    -1,    -1,  2564,
     926,  2760,    -1,    -1,    -1,  2764,    -1,    -1,    -1,  2768,
      -1,    -1,    -1,    -1,   196,    -1,    -1,  2261,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2787,  2788,
    2789,  2790,    -1,     8,  2590,    -1,    11,  2371,    -1,  1944,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2618,    -1,    -1,   374,  1962,    -1,    -1,
      -1,    -1,    -1,   245,    -1,  1145,    41,  2401,   474,    -1,
    2626,   253,    -1,    48,  2833,   481,   482,   483,   484,   485,
     486,    -1,  1987,   265,    -1,   267,  2845,    -1,  2847,  1994,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2856,    73,    -1,
      -1,  2657,    -1,    -1,  2660,    -1,    -1,    -1,  1034,    -1,
       8,  2870,  2017,    11,   296,  1041,    -1,  2876,    16,    17,
      18,    -1,  2687,    -1,    -1,    -1,    -1,  2371,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    -1,  2471,  2897,    -1,
      -1,    -1,    -1,    41,    -1,    -1,     8,    -1,    -1,    11,
      48,    -1,    -1,    -1,    -1,    -1,   474,  2401,  2723,   341,
      -1,    -1,    -1,   481,   482,   483,   484,   485,   486,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,  1257,    -1,    41,
      -1,   363,    -1,    -1,    -1,    -1,    48,  1267,    -1,  1269,
      -1,    -1,  1272,  1273,  1274,  1275,    -1,    -1,   173,    -1,
      -1,   383,    23,   385,    -1,    -1,   388,    -1,    29,    -1,
      -1,    73,    -1,    -1,   189,    36,  1296,    -1,    -1,   194,
      -1,    -1,  1302,  1303,  1304,  1305,    -1,  2471,    -1,  2134,
    1310,  1311,    -1,    -1,    55,  1315,    -1,    -1,    -1,  1319,
     215,   216,  1322,  1323,  1324,  1325,  1326,  1327,  1328,  1329,
    1330,    -1,    -1,  1333,   229,    -1,  2590,    -1,  1338,    -1,
      -1,  1341,    -1,  1343,    -1,  1345,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,   173,    11,    -1,    -1,    -1,
      -1,   143,    -1,    -1,    -1,   106,    -1,  2192,  1368,    -1,
      -1,   189,  2626,    -1,    -1,   270,   194,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2860,    -1,    41,    -1,   490,   284,
      -1,   173,    -1,    48,   135,  1395,  1396,   215,   216,    -1,
      -1,    -1,    -1,  2657,    -1,    -1,  2660,   189,    -1,  1255,
      -1,   229,   194,    -1,    -1,    -1,    -1,    -1,    73,    -1,
    1266,    -1,    -1,    -1,  1270,    -1,  2590,    -1,    -1,    -1,
    1276,  1277,  1278,    -1,    -1,    -1,  2261,    -1,    -1,  1285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,   267,
      -1,    -1,   270,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,  2626,    -1,    -1,    -1,   284,    -1,    -1,   287,
      -1,    -1,    -1,    -1,  1474,    -1,    -1,  1477,  1478,   374,
    1480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,    -1,
      -1,    -1,    -1,  2657,  1340,    -1,  2660,    -1,    -1,    -1,
      -1,    -1,   284,    -1,   245,    -1,    -1,    -1,    -1,    -1,
      -1,  1511,   253,    -1,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,   265,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,  1382,    -1,    -1,   194,
      -1,    -1,    -1,    -1,    -1,   286,  2371,    -1,  1394,    -1,
      -1,    -1,    -1,  1399,    -1,   296,   374,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1573,   229,    -1,  2401,    -1,    -1,   474,
    1580,    -1,   477,   478,   479,  1585,   481,   482,   483,   484,
     485,   486,   374,    -1,    -1,   336,    -1,    -1,    -1,   340,
     341,    -1,    -1,    -1,    -1,    -1,  2860,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   363,  1623,    -1,    -1,    -1,    -1,   369,   284,
      -1,    -1,    -1,    -1,    -1,  1635,    -1,  1637,  1638,    -1,
      -1,    -1,   383,    -1,    -1,  1645,  2471,    -1,    -1,  1649,
      -1,    -1,  1652,    -1,    -1,    -1,   474,    -1,    -1,   477,
     478,   479,    -1,   481,   482,   483,   484,   485,   486,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   494,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1686,    -1,    -1,  1689,
      -1,  1691,   474,    -1,    -1,   436,  2860,    -1,    -1,   481,
     482,   483,   484,   485,   486,    -1,    -1,    -1,    -1,     3,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,   374,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1583,    -1,    33,
      -1,    -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,  1753,    48,    -1,  1602,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2590,    -1,    -1,  1768,    -1,
      -1,    -1,    -1,  1619,    -1,  1621,  1622,    -1,  1624,    73,
    1626,    -1,    -1,    -1,    -1,  1631,  1786,    -1,  1634,    -1,
      -1,    -1,    -1,  1639,    -1,    -1,  1642,    -1,    -1,    -1,
      -1,  2626,    -1,    -1,    -1,    -1,    -1,    -1,  1654,    -1,
      -1,    -1,  1658,  1659,  1660,  1661,    -1,    -1,    -1,   474,
      -1,  1667,  1668,    -1,  1670,  1671,   481,   482,   483,   484,
     485,   486,  2657,    -1,    -1,  2660,  1682,    -1,    -1,  1685,
      -1,    -1,    -1,    -1,  1844,    -1,    -1,  1693,  1694,  1695,
    1696,  1697,  1698,  1699,  1700,  1701,  1702,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1710,    -1,    -1,    -1,  1714,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
    1736,    16,    17,    18,    -1,   189,    -1,    -1,    -1,    -1,
     194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,   215,   216,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,
      -1,  1941,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
    1950,    -1,    -1,  1953,    -1,    -1,  1956,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,
      -1,    -1,  1982,  1983,    -1,    23,    -1,    -1,    -1,    -1,
     284,    29,    -1,   287,    -1,    -1,  1996,    -1,    36,    -1,
      -1,    -1,  1848,  1849,  1850,  2005,    -1,    -1,  2008,    -1,
    2010,    -1,    -1,    -1,    -1,    -1,    -1,    55,  2018,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2026,  2027,    -1,    -1,
      -1,    -1,    -1,     8,    -1,  2860,    11,    -1,    -1,    -1,
    1886,    16,    17,    18,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,  2055,    -1,    -1,    33,    -1,
      -1,    -1,    -1,    -1,   189,  2065,    41,    -1,   106,   194,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
     374,  2081,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,   216,    -1,    -1,  1940,    -1,    -1,   135,    73,    -1,
    1946,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1959,  1960,  1961,    -1,  1963,  1964,  1965,
    1966,    -1,    -1,  1969,  1970,  1971,  1972,  1973,  1974,  1975,
    1976,  1977,  1978,  1979,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,    -1,
      -1,  1997,    -1,    -1,  2000,    -1,  2002,    -1,   196,   284,
    2006,  2007,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2020,  2021,  2022,  2023,    -1,  2025,
     474,    -1,    -1,   477,   478,   479,    -1,   481,   482,   483,
     484,   485,   486,    -1,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   245,    -1,  2209,
      -1,    -1,    -1,    -1,   189,   253,    -1,    -1,    -1,   194,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   265,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    -1,   286,   374,
      -1,    -1,  2098,    -1,   229,  2255,  2256,    -1,   296,    -1,
    2260,    -1,    -1,    -1,    -1,  2265,    -1,    -1,  2268,  2269,
      -1,     8,    -1,  2273,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   267,    -1,    -1,   270,    33,    -1,   336,    -1,
      -1,    -1,   340,   341,    41,    -1,    -1,    -1,    -1,   284,
      -1,    48,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2320,    -1,    -1,    -1,    -1,   363,    -1,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   383,    -1,    -1,    -1,   474,
      -1,    -1,   477,   478,   479,    -1,   481,   482,   483,   484,
     485,   486,  2362,    -1,  2210,    -1,   491,    -1,  2214,  2215,
       8,  2217,    -1,    11,  2220,  2221,  2222,  2223,    -1,    -1,
      -1,  2227,  2228,  2229,  2230,  2231,  2232,  2233,  2234,  2235,
    2236,  2237,  2238,    -1,    -1,    -1,    -1,    -1,   436,   374,
      -1,    -1,  2248,    41,    -1,    -1,     8,    -1,  2254,    11,
      48,  2257,    -1,  2259,    16,    17,    18,  2263,    -1,    -1,
    2266,  2267,    -1,    -1,  2270,  2271,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    73,   173,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2311,    -1,    -1,    -1,    -1,
      -1,    73,    -1,  2319,    -1,  2475,    -1,    -1,   215,   216,
      -1,    -1,    -1,  2483,  2484,    -1,  2332,  2487,     8,    -1,
      -1,    11,   229,    -1,    -1,    -1,    16,    17,    18,   474,
      -1,    -1,   477,   478,   479,   143,   481,   482,   483,   484,
     485,   486,    -1,    -1,    -1,    -1,   491,    -1,    -1,    -1,
      -1,    41,    -1,  2523,  2524,    -1,    -1,    -1,    48,    -1,
     267,    -1,    -1,   270,    -1,   173,    -1,  2537,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,
     287,   189,    -1,    73,    -1,    -1,   194,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,
      -1,   229,   194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   215,   216,    -1,    -1,    -1,  2464,    -1,
      -1,    -1,  2468,    -1,    -1,    -1,    -1,   229,    -1,    -1,
      -1,  2477,  2478,  2479,    -1,    -1,  2482,   374,    -1,  2485,
    2486,    -1,    -1,    -1,  2490,    -1,   284,    -1,    -1,  2649,
      -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2664,   267,    -1,    -1,   270,   189,
      -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,  2679,
      -1,    -1,   284,    -1,    -1,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2694,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,
      -1,  2557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2576,    -1,    -1,    -1,    -1,    -1,   374,   474,    -1,    -1,
     477,   478,   479,    -1,   481,   482,   483,   484,   485,   486,
      -1,    -1,    -1,    -1,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   374,    -1,    -1,    -1,  2776,    -1,  2624,  2625,
      -1,    -1,    -1,    -1,  2630,  2631,  2632,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2808,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2671,  2672,    -1,  2828,  2829,
      -1,    -1,    -1,    -1,    -1,    -1,   474,    -1,    -1,  2685,
      -1,    -1,  2842,   481,   482,   483,   484,   485,   486,    -1,
      -1,  2697,    -1,    -1,   374,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   474,    -1,    -1,   477,   478,   479,  2878,   481,
     482,   483,   484,   485,   486,    -1,    -1,    -1,    -1,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2745,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2763,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2785,
      -1,    -1,    -1,    -1,  2944,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2799,   474,    -1,    -1,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,    -1,    -1,    -1,
      -1,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,  2867,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,  2881,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,   130,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,   483,    -1,    -1,    -1,    -1,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,    -1,   497,   498,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,    -1,
     476,    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,    -1,
      -1,    -1,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
      -1,   497,   498,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,    -1,   476,    -1,    -1,    -1,
      -1,   481,   482,    -1,    -1,    -1,    -1,    -1,   488,    -1,
     490,    -1,    -1,    -1,    -1,   495,    -1,   497,   498,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,   168,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,   225,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,
      -1,    -1,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,
      -1,   495,    -1,   497,   498,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,   432,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,    -1,    -1,    -1,
      -1,    -1,    -1,   481,   482,   483,    -1,    -1,    -1,    -1,
     488,    -1,   490,    -1,    -1,    -1,    -1,   495,    -1,   497,
     498,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,    -1,    -1,    -1,    -1,   488,    -1,   490,    -1,
      -1,    -1,    -1,   495,    -1,   497,   498,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,    -1,
      -1,    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,    -1,
      -1,    -1,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
      -1,   497,   498,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,   481,   482,    -1,    -1,    -1,    -1,    -1,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,    -1,   497,   498,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,
      -1,    -1,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,
      -1,   495,    -1,   497,   498,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
     168,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,   432,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,    -1,    -1,    -1,
      -1,    -1,    -1,   481,   482,    -1,    -1,    -1,    -1,    -1,
     488,    -1,   490,    -1,    -1,    -1,    -1,   495,    -1,   497,
     498,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,    -1,    -1,    -1,    -1,   488,    -1,   490,    -1,
      -1,    -1,    -1,   495,    -1,   497,   498,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,    -1,
      -1,    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,    -1,
      -1,    -1,   488,    -1,   490,    -1,    -1,    -1,    -1,   495,
      -1,   497,   498,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,   481,   482,    -1,    -1,    -1,    -1,    -1,   488,    -1,
     490,    -1,    -1,    -1,    -1,   495,    -1,   497,   498,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,
      -1,    -1,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,
      -1,   495,    -1,   497,   498,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,   432,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,    -1,    -1,    -1,
      -1,    -1,    -1,   481,   482,    -1,    -1,    -1,    -1,    -1,
     488,    -1,   490,    -1,    -1,    -1,    -1,   495,    -1,   497,
     498,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,    -1,    -1,    -1,    -1,   488,    -1,   490,    -1,
      -1,    -1,    -1,   495,    -1,   497,   498,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,    -1,
      -1,    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,    -1,
      -1,    -1,   488,    -1,   490,    -1,    -1,    -1,    -1,   495,
      -1,   497,   498,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,   481,   482,    -1,    -1,    -1,    -1,    -1,   488,    -1,
     490,    -1,    -1,    -1,    -1,   495,    -1,   497,   498,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,
      -1,    -1,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,
      -1,   495,    -1,   497,   498,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,    -1,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,   432,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   481,   482,    -1,    -1,     3,     4,     5,
       6,     7,   490,     9,    10,    -1,    -1,    -1,    -1,   497,
     498,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,    -1,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   490,    -1,    -1,    -1,    -1,    -1,
      -1,   497,   498,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,    -1,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     490,    -1,    -1,    -1,    -1,    -1,    -1,   497,   498,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    -1,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,    -1,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,    -1,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,   432,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,     3,
      -1,    -1,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,
      -1,   495,    -1,   497,   498,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,   169,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,    -1,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   491,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,    -1,   268,   269,   270,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,   283,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,     3,   476,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,    -1,   268,
     269,   270,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,   283,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   490,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,   229,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   490,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,   229,    -1,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,    -1,   268,   269,   270,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
       3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   490,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,   282,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,     3,    -1,    -1,    -1,    -1,    -1,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,     3,   476,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,    -1,
      -1,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,     3,   476,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   490,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,     3,   476,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   490,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   490,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   490,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,    -1,    -1,
      -1,     3,     4,     5,    -1,    -1,     8,     9,    -1,    -1,
      -1,    -1,    -1,   490,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    -1,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      -1,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
     152,   153,   154,    -1,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,   291,
     292,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,    -1,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,   471,
     472,   473,    -1,     3,    -1,   477,   478,   479,     8,   481,
     482,   483,   484,   485,   486,    -1,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,     8,    -1,    -1,
      11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,
      41,    -1,    -1,     8,    -1,    -1,    11,    48,    -1,    -1,
      33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,    -1,
      -1,     8,    73,    -1,    11,    -1,    41,    -1,    -1,    16,
      17,    18,    -1,    48,    -1,    -1,    -1,    -1,    -1,     8,
      73,    -1,    11,    -1,    -1,    -1,    33,    16,    17,    18,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    73,    -1,
      -1,    48,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,   189,    41,
     173,    -1,    -1,   194,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,   173,    -1,
      -1,   194,    -1,    -1,   215,   216,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,   189,    -1,    -1,    -1,   229,   194,
      -1,    -1,   215,   216,    -1,    -1,   173,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,
     215,   216,   189,    -1,   173,    -1,    -1,   194,    -1,    -1,
      -1,    -1,    -1,    -1,   229,    -1,   267,    -1,    -1,   270,
     189,    -1,    -1,    -1,    -1,   194,    -1,    -1,   215,   216,
      -1,    -1,    -1,   284,   267,    -1,   287,   270,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,   215,   216,    -1,    -1,
      -1,   284,   267,    -1,   287,   270,    -1,    -1,    -1,    -1,
     229,    -1,    -1,    21,    -1,    -1,    -1,    -1,    -1,   284,
      -1,   173,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,    -1,    -1,   270,    -1,    -1,    -1,   189,    -1,    -1,
      -1,    -1,   194,    -1,    -1,    -1,    -1,   284,   267,    -1,
     287,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   215,   216,   284,    74,    -1,   287,    -1,
      -1,    -1,    -1,   374,    -1,    -1,    -1,   229,    -1,    -1,
      -1,    -1,    90,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,   374,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,
      -1,    -1,    33,    -1,    -1,   267,    -1,    -1,   270,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      -1,    -1,   284,    -1,    -1,   287,   144,   374,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   153,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,   374,    -1,   165,    -1,    -1,
      -1,    -1,   170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   474,    -1,    -1,   477,   478,   479,    -1,
     481,   482,   483,   484,   485,   486,    -1,    -1,    -1,   197,
     491,   474,    -1,    -1,   477,   478,   479,    -1,   481,   482,
     483,   484,   485,   486,    -1,    -1,    -1,    -1,   491,   474,
      -1,    -1,   477,   478,   479,    -1,   481,   482,   483,   484,
     485,   486,   374,    -1,    -1,    -1,   491,    -1,    -1,    -1,
      -1,    -1,   240,    -1,    -1,    -1,   244,   474,    -1,    -1,
     477,   478,   479,    -1,   481,   482,   483,   484,   485,   486,
      -1,    -1,   173,    -1,   491,   474,    -1,    -1,   477,   478,
     479,    -1,   481,   482,   483,   484,   485,   486,   189,    -1,
      -1,     8,   491,   194,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   215,   216,    33,    -1,    -1,   307,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,   229,    -1,
      -1,    48,    -1,   321,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   474,    -1,    -1,   477,   478,   479,    -1,   481,
     482,   483,   484,   485,   486,    -1,    73,    -1,    -1,   491,
      -1,    -1,    -1,    -1,   352,    -1,   267,   355,    -1,   270,
      -1,    -1,    -1,    -1,    -1,   363,    -1,    -1,   366,    -1,
      -1,    -1,    -1,   284,    -1,    -1,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     398,    -1,    -1,    -1,    -1,    -1,    -1,   405,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   414,    -1,    -1,    -1,
      -1,    -1,   420,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   173,   445,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,   374,    -1,    -1,    -1,   194,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,
     287,    -1,    -1,   474,    -1,    -1,   477,   478,   479,    -1,
     481,   482,   483,   484,   485,   486,    -1,    -1,    -1,    -1,
     491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,     3,    -1,
     477,   478,   479,    -1,   481,   482,   483,   484,   485,   486,
      -1,    -1,   489,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,    -1,   170,   171,   172,    -1,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,   228,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,   483,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,   282,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     3,     4,     5,    -1,    -1,    -1,     9,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
     282,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,     4,     5,    -1,    -1,    -1,     9,   481,
     482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,   282,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,     8,    -1,    -1,    11,    -1,    -1,
     481,   482,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    33,
      16,    17,    18,    37,    -1,    -1,    -1,    41,    -1,    -1,
       8,    -1,    -1,    11,    48,    -1,    -1,    33,    16,    17,
      18,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    33,    -1,    -1,     8,    73,
      -1,    11,    -1,    41,    -1,    -1,    16,    17,    18,    -1,
      48,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    73,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    73,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,   173,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   163,    -1,    -1,
      -1,    -1,   168,    -1,    -1,   189,    -1,   173,    -1,    -1,
     194,    -1,    -1,    73,   162,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,   173,    -1,    -1,   194,    -1,
      -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,    -1,    -1,   229,   194,    -1,    -1,   215,
     216,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,   215,   216,   189,
      -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,
      -1,   229,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
     284,   267,    -1,   287,   270,    -1,    -1,    -1,    -1,   229,
      -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,   284,   267,
      -1,   287,   270,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,   194,    -1,   284,    -1,    -1,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,
     270,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,    -1,   310,    -1,   284,    -1,    -1,   287,    -1,   229,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
     374,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   374,    -1,
     270,    -1,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    41,     8,    -1,   284,    11,   374,   287,    48,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,    -1,    33,    -1,   433,
      -1,    -1,    -1,    73,   374,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
     474,    -1,    -1,   477,   478,   479,    -1,   481,   482,   483,
     484,   485,   486,    -1,    -1,    -1,    -1,    -1,   474,    -1,
      -1,   477,   478,   479,   374,   481,   482,   483,   484,   485,
     486,    -1,    -1,    -1,    -1,    -1,   474,    -1,    -1,   477,
     478,   479,    -1,   481,   482,   483,   484,   485,   486,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   173,   474,    -1,    -1,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,    -1,    -1,   189,
      -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   168,    -1,    -1,    -1,    -1,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,   194,   229,
      -1,    -1,    -1,    -1,   474,    -1,    -1,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,    -1,     8,   215,
     216,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,   267,    -1,    -1,
     270,    -1,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    41,     8,    -1,   284,    11,    -1,   287,    48,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,    -1,    -1,   270,    -1,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    41,    -1,    -1,   284,    -1,
      -1,   287,    48,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,     8,    48,    -1,
      11,    -1,    -1,    -1,   374,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    73,    -1,     8,    -1,    -1,    11,    -1,
      41,    -1,    -1,    16,    17,    18,    -1,    48,   374,    -1,
      -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,   189,
      -1,    -1,    73,    -1,   194,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      73,    -1,    -1,   189,    -1,    -1,    -1,    -1,   194,   229,
      -1,    -1,    -1,    -1,   474,    -1,    -1,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,    -1,    -1,   215,
     216,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,   267,   474,   189,
     270,   477,   478,   479,   194,   481,   482,   483,   484,   485,
     486,    -1,    -1,    -1,   284,    -1,    -1,   287,    -1,    -1,
      -1,    -1,   173,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,   267,    -1,    -1,   270,    -1,    -1,    -1,   189,   229,
      -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,   284,    -1,
     173,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   215,   216,   189,    -1,    -1,    -1,
      -1,   194,    -1,    -1,    -1,    -1,    -1,   267,   229,    -1,
     270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   215,   216,   284,    -1,    -1,   287,    -1,    -1,
      -1,    -1,    -1,    -1,   374,    -1,   229,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,   270,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,    -1,    -1,   287,    -1,   374,    -1,
      -1,    -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     406,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   374,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   474,    -1,    -1,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,    -1,    -1,    -1,
      -1,    -1,    -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,    -1,
      -1,   477,   478,   479,    -1,   481,   482,   483,   484,   485,
     486,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   474,    -1,    -1,   477,   478,   479,
      -1,   481,   482,   483,   484,   485,   486,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   474,    -1,    -1,   477,   478,   479,    -1,
     481,   482,   483,   484,   485,   486,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,
       5,   474,    -1,    -1,   477,   478,   479,    -1,   481,   482,
     483,   484,   485,   486,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,    -1,   170,   171,   172,    -1,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,   228,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,    -1,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,   228,    -1,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    98,    99,   100,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
      -1,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,    -1,   268,   269,   270,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    -1,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,   165,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,   165,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
     229,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,   282,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,    -1,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,   283,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,   283,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     3,     4,    -1,    -1,    -1,    -1,     9,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,    -1,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,    -1,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,    -1,
     442,    -1,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,    -1,    -1,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,    -1,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,    -1,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,    -1,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    -1,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    -1,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,    -1,   151,   152,   153,
     154,    -1,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,    -1,    -1,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
      -1,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,    -1,    -1,   268,   269,   270,   271,    -1,    -1,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,    -1,   291,   292,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,    -1,   309,   310,    -1,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
     394,    -1,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,    -1,   407,   408,    -1,    -1,   411,   412,    -1,
     414,    -1,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,   440,    -1,   442,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   470,   471,   472,   473,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,    -1,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,    -1,
     268,   269,   270,   271,    -1,    -1,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,    -1,   291,   292,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
      -1,   309,   310,    -1,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,    -1,   394,    -1,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,    -1,   407,
     408,    -1,    -1,   411,   412,    -1,   414,    -1,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,   440,    -1,   442,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   470,   471,   472,   473,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    -1,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,    -1,   151,
     152,   153,   154,    -1,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,    -1,    -1,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,    -1,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,    -1,   268,   269,   270,   271,
      -1,    -1,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,    -1,   291,
     292,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,    -1,   309,   310,    -1,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,    -1,   369,    -1,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,    -1,   394,    -1,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,    -1,   407,   408,    -1,    -1,   411,
     412,    -1,   414,    -1,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,   440,    -1,
     442,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,   471,
     472,   473,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    -1,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,    -1,   151,   152,   153,   154,    -1,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,    -1,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,    -1,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,    -1,   268,   269,   270,   271,    -1,    -1,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,    -1,   291,   292,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,    -1,   309,   310,    -1,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,    -1,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,    -1,   394,    -1,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
      -1,   407,   408,    -1,    -1,   411,   412,    -1,   414,    -1,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,   440,    -1,   442,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   470,   471,   472,   473
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    91,
      93,   111,   125,   135,   141,   149,   151,   152,   164,   193,
     232,   309,   312,   340,   348,   362,   369,   373,   383,   394,
     398,   434,   439,   452,   476,   490,   501,   502,   503,   504,
     515,   516,   519,   521,   525,   539,   540,   542,   544,   551,
     553,   599,   606,   609,   610,   627,   628,   629,   630,   631,
     632,   681,   818,   821,   824,   831,   832,   833,   834,   835,
     842,   846,   852,   854,   859,   863,   864,   867,   868,   870,
     871,   873,   411,   455,   552,   197,   355,   363,   398,   445,
     552,     3,    19,    20,    21,    22,    23,    24,    25,    26,
      28,    29,    30,    38,    39,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    54,    55,    56,
      57,    58,    59,    62,    63,    64,    65,    66,    68,    69,
      70,    71,    72,    74,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    87,    88,    89,    90,    91,    92,
      94,    95,    96,    97,   101,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   116,   118,   119,   120,   121,
     122,   123,   125,   126,   127,   128,   129,   132,   133,   134,
     135,   136,   138,   139,   140,   142,   143,   144,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   157,   159,
     160,   161,   162,   164,   166,   167,   169,   170,   171,   172,
     173,   174,   176,   178,   179,   180,   182,   183,   184,   185,
     186,   187,   189,   190,   191,   192,   193,   195,   196,   197,
     198,   199,   200,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   212,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   226,   227,   228,   229,   231,   232,   233,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   268,   269,   270,   271,   273,   274,   275,   276,   277,
     278,   280,   281,   284,   285,   286,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   363,   364,   365,   366,   367,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   396,   397,   399,   400,   401,
     402,   403,   404,   405,   407,   408,   411,   412,   413,   414,
     415,   417,   418,   419,   420,   421,   422,   423,   424,   427,
     428,   429,   430,   431,   434,   435,   436,   437,   438,   439,
     440,   442,   443,   444,   445,   446,   447,   450,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   737,
     803,   807,   810,   876,   877,   878,   552,    50,   490,   622,
     170,   174,   233,   240,   287,   355,   402,   404,   420,   426,
     429,   597,   607,   830,     3,    27,   241,   312,   391,   801,
     807,   876,    21,    74,    90,   144,   153,   165,   170,   197,
     240,   244,   307,   321,   352,   355,   363,   366,   385,   398,
     405,   414,   420,   445,   600,   601,   604,   552,   801,    93,
     443,   490,   521,   609,   627,   838,   842,   859,   873,   108,
      68,   108,     5,   806,   853,   807,   801,    27,   407,   411,
     807,   865,   866,   869,   552,    27,   130,   639,   640,   174,
     233,   355,   367,   407,   847,   848,   869,   552,   439,   627,
     632,   869,     5,   283,   692,   799,   807,   808,   169,   490,
     856,   490,   328,   633,   634,   801,   633,   628,   629,     0,
     493,   120,   207,   431,   145,   211,   288,   425,   642,   643,
     628,   630,   631,   494,   443,   836,    27,   407,   411,   627,
     869,   187,   799,   801,   187,   799,   187,   692,   187,   799,
     490,   488,   492,   785,   787,   521,   609,   627,   820,   859,
     799,   402,   404,   402,   404,   338,   187,   807,   807,   812,
     328,   363,   398,   445,   799,   197,    27,   801,   246,   414,
     107,   398,   445,   358,     3,    44,    49,    50,    51,    52,
      64,    65,    74,    82,    94,   101,   112,   113,   134,   161,
     167,   169,   173,   187,   189,   203,   209,   210,   212,   215,
     216,   218,   227,   229,   241,   260,   261,   262,   270,   275,
     291,   293,   325,   346,   350,   370,   374,   377,   391,   400,
     407,   408,   419,   440,   443,   605,   703,   704,   706,   708,
     710,   712,   714,   715,   716,   718,   719,   720,   722,   723,
     811,   876,   879,   187,   602,   812,   187,   800,   801,   187,
     801,   490,   543,   597,   838,     3,    48,    49,    51,    52,
      64,    65,    72,   112,   113,   150,   155,   161,   178,   179,
     204,   209,   210,   212,   241,   260,   262,   266,   273,   275,
     290,   294,   308,   311,   325,   350,   370,   377,   391,   393,
     407,   408,   413,   415,   419,   439,   440,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   839,   841,
     842,   844,   845,   876,   880,   836,   806,   806,   479,   490,
     490,   819,   473,   217,   492,   282,     4,     6,     7,     8,
       9,    10,    35,    49,    51,    52,    60,    61,    64,    65,
      72,    74,    98,    99,   100,   101,   102,   103,   104,   112,
     113,   115,   150,   155,   156,   161,   178,   179,   209,   210,
     212,   234,   235,   260,   262,   267,   272,   273,   275,   284,
     294,   308,   325,   350,   368,   377,   393,   407,   408,   413,
     415,   416,   419,   432,   440,   474,   481,   482,   483,   488,
     490,   495,   497,   498,   628,   672,   707,   710,   713,   714,
     715,   717,   718,   719,   722,   723,   734,   736,   737,   738,
     740,   753,   754,   760,   779,   784,   791,   792,   803,   804,
     805,   806,   807,   790,   791,   847,   847,   806,   847,   473,
     168,   409,   479,   490,   799,   483,   787,     3,   167,   169,
     443,   842,   855,   857,   167,   858,   734,   764,   807,   633,
     494,   490,   814,   491,   491,   503,   168,   213,   692,   860,
      27,   130,   638,   638,    54,   638,   158,   163,   230,   279,
     648,   650,   651,   674,   676,   677,   678,   642,   643,   490,
     799,   473,   217,   150,    23,    29,   135,   286,   336,   340,
     369,   436,   509,   512,   513,   336,   150,    36,    55,   106,
     196,   245,   253,   265,   296,   336,   341,   363,   369,   383,
     512,   545,   548,   150,   336,   369,   512,   150,   336,   369,
     512,     3,    27,    44,    50,    74,    82,    94,   101,   130,
     167,   169,   173,   189,   203,   215,   216,   218,   227,   229,
     241,   261,   270,   291,   293,   346,   374,   391,   400,   419,
     441,   443,   483,   491,   734,   766,   767,   809,   815,   876,
     881,   734,   786,     3,    27,    31,    32,    33,    34,    35,
      36,    37,    40,    53,    60,    61,    67,    73,    75,    86,
      93,    98,    99,   100,   102,   103,   104,   115,   117,   124,
     130,   131,   137,   141,   145,   156,   158,   163,   165,   168,
     175,   177,   181,   188,   194,   201,   211,   213,   224,   225,
     230,   234,   235,   267,   272,   279,   282,   283,   287,   288,
     305,   315,   330,   343,   362,   368,   379,   395,   398,   406,
     409,   410,   416,   425,   426,   432,   433,   439,   441,   448,
     449,   451,   452,   802,   816,   876,   880,   882,   785,   491,
     490,   587,   597,   267,   822,   492,   813,    36,   445,   187,
     799,   187,   799,   875,   799,   490,   608,    82,   827,   456,
      83,   127,   299,   403,   442,   721,   721,   721,   490,   709,
     709,   311,   490,   711,   150,   490,    64,    65,   721,   709,
     706,   454,   476,   490,   724,   490,   724,    58,   342,   494,
     603,   490,    35,   705,   490,   109,   110,   184,   185,   247,
     248,   249,   250,   251,   252,   255,   256,   359,   360,   470,
     471,   490,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   709,   150,   494,   603,   150,   494,   603,   150,   282,
     764,   398,   491,   494,     4,   156,   282,   416,   481,   482,
     547,   550,   805,   806,   837,   839,   840,   843,   838,   490,
     617,   621,   547,   843,   849,   851,   766,   704,   768,    36,
     228,   807,   490,   788,   488,   734,   783,   490,   490,   163,
     490,   490,   628,   490,   490,   490,   734,   490,   490,   490,
     490,   490,   490,   490,   490,   490,   734,   734,   734,   146,
     793,   794,   764,   765,   628,   734,   764,   755,   756,   807,
     808,     9,   788,   787,   490,   806,   490,   805,   806,     3,
       8,    11,    16,    17,    18,    33,    36,    41,    48,    73,
     173,   189,   194,   215,   216,   229,   267,   270,   284,   287,
     374,   474,   477,   478,   479,   481,   482,   483,   484,   485,
     486,   758,   759,   760,   762,   453,   741,   788,    15,   293,
     734,    15,   213,   494,   635,   490,   806,   788,   492,   787,
     635,     3,   115,   233,   547,   723,   806,   850,    97,   115,
     851,   115,   851,   799,   491,   494,   836,   491,   494,   634,
     800,    36,   860,   523,   799,    36,   807,   369,   630,   630,
     644,   645,   734,   630,   160,   264,   664,   219,   265,   324,
     372,   431,    27,   659,   734,   481,   482,   660,   661,   734,
     736,   674,   675,   651,   650,   648,   649,   163,   677,   277,
     679,   648,   674,   764,   814,   228,   799,    67,    75,    86,
     165,   187,   315,   426,   568,   578,   593,   807,    75,    86,
     520,    86,   520,   490,   409,   490,   566,   239,   429,   566,
      86,   494,   409,   799,   706,   547,    54,   549,   547,   547,
     106,   245,   253,    54,   409,   452,   476,   546,   258,   355,
     546,   548,   692,    86,   409,   520,   355,   799,   409,   355,
     766,   766,   767,   491,   494,   642,   643,    13,    14,   489,
     499,   409,   586,   591,   807,   452,   620,   328,   398,   445,
     150,    93,   540,   553,   823,   824,   871,   802,   492,   142,
     799,   267,   541,   545,   267,   490,   587,    36,   587,   491,
     766,    36,   187,   581,   807,   828,   490,   764,   805,   605,
     768,   721,   721,    35,   705,   407,   407,   805,   805,   704,
     702,   807,   488,   488,   805,   805,   409,   409,   409,   409,
     602,   812,   800,   801,   801,   812,   491,   187,   799,   875,
     838,   844,     4,   805,     4,   805,   619,   626,   816,    50,
      95,   121,   139,   143,   164,   167,   182,   272,   280,   322,
     623,   494,   491,   494,   491,   494,   820,   764,   785,   765,
     448,   780,   781,   734,   764,   490,   805,   805,     3,   725,
     726,   727,   728,   729,   730,   731,   732,   769,   770,   806,
     805,   805,   734,     8,    16,    17,    18,   477,   478,   479,
     481,   482,   483,   484,   485,   486,   758,   763,   807,   734,
     771,   481,   482,   490,   735,   736,   760,   773,   784,   491,
     764,   734,   764,   774,   734,    53,   168,   225,   410,   734,
     764,   777,   734,   490,   807,   338,   797,   489,   491,   494,
     494,   496,   499,   764,   734,   733,   733,   704,   734,   734,
     734,   734,     5,   816,   817,   407,    40,   395,   789,   812,
     734,   734,   490,   628,   778,   130,   156,   267,   272,   277,
     416,   427,   734,   272,   490,   734,   409,    48,   173,   189,
     194,   229,   374,   734,   734,   734,   734,   734,   734,   734,
     734,   734,   734,    27,    34,   379,   757,   177,   159,   742,
     734,   350,   490,   754,   734,   174,   233,   398,   402,   404,
     429,   636,   799,   792,   168,   682,   766,   483,   682,   490,
     806,   491,   799,   855,   799,   863,   734,   491,   490,   433,
     862,   115,   295,   490,   522,   627,    36,   807,   490,   527,
     536,   538,   807,   494,    37,   124,   433,   646,   350,   351,
     481,   482,   661,   663,   736,   372,   219,   283,   494,     4,
     662,   805,   662,   350,   351,   663,   798,   799,   271,   376,
     680,   675,   649,   491,   336,   512,   490,   187,   578,   801,
     219,   267,   219,   433,   490,   571,   704,   801,   807,   187,
     801,   187,   807,    23,   135,   369,   508,   511,   561,   576,
     816,   801,   570,   590,   816,   801,   509,   801,   336,   369,
     512,   545,   547,   812,   801,   547,   812,   801,   547,   336,
     369,   512,   801,   801,   801,   801,   336,   369,   512,   801,
     801,   642,   642,   642,   441,   767,   188,   641,   734,   734,
     734,   786,   320,   616,   491,   494,   280,   168,   409,   611,
     445,   799,   799,   807,   597,   802,   490,   490,   150,   150,
     229,   568,   578,   582,   585,   594,   596,   807,   452,   454,
     573,   149,   627,   452,   829,   491,   734,   267,   282,   764,
     491,   491,   603,   491,   488,   473,   473,   491,   491,   491,
     494,   704,   805,   489,   805,   491,   491,   726,   728,   729,
     730,   729,   730,   730,   603,   603,   282,   603,   267,    36,
     491,   494,   483,   490,   547,   618,   843,    36,   615,   806,
     615,   267,   272,   322,   615,   615,   849,   704,   491,   489,
     734,   137,   781,   782,    36,   491,   734,   491,   491,   491,
     168,   491,   491,   494,   491,   492,   305,   772,   491,   735,
     735,   734,    11,    16,    17,    18,   194,   215,   284,   477,
     478,   479,   481,   482,   483,   484,   485,   486,   760,   735,
     491,   491,   163,   168,   775,   776,   491,    36,   777,   764,
     777,   777,   168,   491,    36,   800,   490,   734,   795,   788,
     734,   755,   734,   491,   491,   473,   735,   735,   143,   764,
     168,   130,   156,   272,   277,   416,   427,   490,   143,   763,
     734,   395,   789,   734,   778,   734,   409,   490,   628,   490,
     490,   292,   746,   402,   404,   402,   404,   799,   398,   637,
     637,   637,   224,   351,   490,   628,   683,   684,   685,   692,
     693,   737,   739,   740,   807,   449,   698,   642,   794,   698,
     805,   733,   814,   820,   683,   449,   861,   439,   397,   432,
     531,   526,   535,   807,   282,   528,   807,   532,   538,   494,
     682,   479,   788,   645,   284,   758,   761,   475,   647,     4,
     805,   663,   283,   431,   660,   494,   238,   409,   734,   267,
     593,   490,   150,   490,   571,   197,   591,   554,   286,   564,
     554,    23,   135,   340,   341,   369,   505,   506,   507,   513,
     514,   150,   603,   150,   603,   561,   576,   561,   491,   494,
     557,   806,   491,   494,   479,   492,   409,   355,    86,   409,
     520,   355,   409,   409,   409,   355,   641,   641,   641,   767,
     274,   491,   489,   386,   387,   625,   806,   586,   616,   799,
     490,   587,   822,   398,   517,   518,   806,   591,   799,   799,
     875,   799,   491,   494,   280,   566,   280,   282,   565,   801,
     452,   874,   566,    36,   150,   799,   491,   705,   805,   724,
     724,   705,   807,   489,   489,   812,   150,   619,   613,   624,
     843,   806,   806,   272,   591,   483,   591,   806,   806,   406,
     734,   141,   704,   491,   734,   734,   763,   734,   775,   704,
     735,   735,   735,   735,   130,   267,   277,   735,   735,   735,
     735,   735,   735,   735,   735,   735,   735,   734,   734,   776,
     775,   704,   491,   491,   491,   764,   704,   491,   734,   795,
     796,    36,   491,   733,   734,    33,    33,   734,   491,   734,
     168,   490,   768,   734,   491,   143,   735,   735,   143,   143,
     734,   734,   643,   449,   490,   747,   807,   637,   637,   637,
     637,   799,   799,   799,   628,   693,   168,   628,   684,   685,
      36,   686,   687,   807,   494,    94,   169,   203,   218,   227,
     261,   346,   689,   687,    36,   686,   688,   807,   476,   697,
     787,   734,   177,   665,   641,   797,   665,   491,   491,   734,
     343,   530,   438,   491,   494,   788,    84,   530,   491,   494,
     527,   861,   734,   490,   647,   160,   223,   283,   799,   801,
     491,   150,   591,   578,   591,   554,   581,   491,   117,   201,
     265,   267,   577,   490,   588,   172,   115,   186,   267,   566,
     546,   107,   115,   172,   267,   385,   388,   548,   566,   369,
     507,   420,   801,   807,   511,   590,     3,    44,    50,    74,
      82,    94,   101,   167,   169,   173,   189,   203,   215,   216,
     218,   227,   229,   241,   261,   266,   270,   284,   291,   293,
     346,   370,   374,   391,   400,   419,   443,   481,   482,   547,
     555,   592,   704,   761,   806,   809,   876,   882,   816,   801,
     801,   801,   801,   801,   801,   801,   801,   801,   801,   491,
     491,   491,   642,   546,   625,   490,   585,   829,   187,   799,
     491,   494,   491,   541,   490,    36,   575,   573,   582,    79,
     543,   107,   265,   627,   581,   433,   826,   489,   704,   603,
     875,   491,   494,   591,   734,   491,   491,   776,   168,   130,
     277,   490,   491,   491,   491,   494,   807,   734,   734,   734,
     768,   491,   734,    33,    33,   734,   734,   143,   491,   491,
     734,   748,   807,   799,   799,   799,   799,   687,   688,   490,
     491,   807,   808,   400,   656,   657,   490,   684,   218,   291,
     690,   684,   690,   218,   689,   690,   218,   657,   490,   807,
     657,   490,   289,    54,   181,   673,   491,   673,   806,   791,
     627,   295,   627,   526,   282,   490,   524,   479,   538,   530,
     763,   554,   578,   491,   491,   452,   584,   118,   190,   199,
     117,   435,   561,   579,    67,    73,    86,   115,   117,   172,
     201,   267,   272,   315,   330,   426,   433,   559,   560,   572,
      30,    54,   598,   187,   272,   547,   734,   598,   272,   481,
     482,   550,   807,   704,   603,   603,   241,   391,   809,   813,
     479,   409,   409,   641,   617,   433,   612,   614,   591,   491,
      36,   267,   490,   806,   829,   585,   149,   627,   147,   195,
     565,   120,   135,   314,   874,   107,   452,   872,   282,   807,
     825,   490,    36,   624,   735,   168,   490,   768,   795,   491,
     734,   734,   734,   491,   301,   749,   694,   695,   739,   686,
     490,     4,     9,   652,   654,   655,   807,   800,   684,   282,
     433,   691,   684,   218,   684,   699,   700,   807,   490,   699,
     807,    96,   178,   349,   490,   666,   667,   668,   669,   670,
     671,   734,   734,   451,   743,   806,   743,   531,    86,   490,
     529,   537,   739,   807,   131,   734,   491,   330,   584,   490,
     574,   554,   491,   494,   490,   812,   801,   735,   598,   118,
     190,   117,   272,   219,   799,   584,    81,   115,    36,   150,
      73,   701,   813,   485,   555,   801,   801,   491,   546,   122,
     491,   573,   627,   150,    36,   491,   801,   874,    27,    78,
      87,   116,   186,   198,   385,   388,   569,   569,   351,   351,
      59,    67,   233,   799,   537,   735,   768,   491,    54,   642,
     491,   494,    36,   696,   800,   304,   485,   304,   351,   485,
     490,   490,   491,   734,   490,   684,   691,   491,   494,   704,
     699,   491,   490,   371,   490,   491,   494,   744,   745,   807,
     433,   653,   653,   438,   801,   734,   491,   494,    73,   533,
     533,   268,   431,   799,   554,   580,   583,   816,   561,   734,
     267,   560,    36,   584,   587,   801,   186,   812,   433,   510,
     485,   420,   617,   806,   829,   565,   872,   799,   627,   573,
     543,    67,   285,    67,   826,   491,   491,   764,   323,   351,
     750,   697,   694,   490,   491,   807,   652,   800,   700,   701,
     491,   764,   490,   764,   667,   494,    36,   353,   627,   491,
     698,   529,   812,   534,   812,   534,   369,   587,   491,   494,
     479,   491,   186,   243,   595,   490,   556,   734,   420,    36,
     490,   872,   565,   874,   285,   285,   490,   829,    48,    97,
     422,   734,   751,   752,   751,   491,   699,   491,   494,   491,
     491,   491,   666,   491,   745,   747,   655,   533,   646,   646,
     536,   595,   583,   555,   265,   567,   556,   169,   300,   375,
     282,   562,   563,   589,   545,   627,   537,   698,   752,   350,
     162,   310,   162,   310,   491,     9,   337,   658,   491,   534,
     647,   647,   698,   563,   199,   120,   431,   282,   589,   282,
     562,   491,   872,   491,    33,   491,   490,   646,   554,    58,
     265,   342,   369,   558,   558,   829,   752,     9,   647,    22,
     115,   272,   698,   491
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 466 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 482 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 494 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 537 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 105:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 106:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 107:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 108:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 117:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 118:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 119:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 120:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 121:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 122:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 123:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 124:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 125:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 126:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 127:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 128:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 129:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 130:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 131:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 132:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 133:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 134:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 135:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 136:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 137:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 138:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 139:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 140:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 141:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 142:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 143:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 144:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 145:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 146:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 147:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 148:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 149:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 150:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 151:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 152:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 153:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 154:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 155:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 156:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 157:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 158:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 159:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 160:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 161:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 163:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 164:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 168:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 169:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 170:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 171:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 172:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 173:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 174:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 175:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 176:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 177:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 178:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 179:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 180:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 181:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 182:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 183:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 184:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 185:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 188:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 191:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 193:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 195:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 196:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 197:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 198:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 200:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 201:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 202:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 203:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 204:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 205:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 206:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 211:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 212:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 213:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 214:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 215:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 216:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 217:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 219:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 220:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 221:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 222:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 223:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 224:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 225:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 226:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 227:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 228:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 229:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 230:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 231:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 232:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 233:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 234:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 235:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 236:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 237:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 238:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 239:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 245:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 246:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 247:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 248:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 249:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 250:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 252:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 253:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 254:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 255:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 256:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 257:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 258:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 261:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 262:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 263:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 264:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 265:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 266:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 267:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 268:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 269:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 270:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 271:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 272:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 273:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 274:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 275:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 276:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 277:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 278:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 279:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 280:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 281:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 282:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 283:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 284:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 285:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 286:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 287:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 288:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 289:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 290:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 291:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 292:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 293:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 294:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 295:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 296:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 297:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 298:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 299:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 300:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 301:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 302:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 303:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 304:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 305:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 306:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 307:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 308:
#line 454 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 309:
#line 461 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 310:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 311:
#line 467 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 312:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 313:
#line 472 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 314:
#line 478 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 315:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 316:
#line 486 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 317:
#line 491 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 318:
#line 498 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 319:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 320:
#line 503 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 321:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 322:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 323:
#line 522 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 324:
#line 536 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 325:
#line 549 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 326:
#line 564 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 577 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 328:
#line 592 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 329:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 330:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 331:
#line 625 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 332:
#line 629 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 333:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 334:
#line 641 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 335:
#line 649 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 336:
#line 658 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 337:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 338:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 339:
#line 661 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 340:
#line 663 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 341:
#line 670 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 342:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 343:
#line 677 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 344:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 345:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 346:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 347:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 348:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 349:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 350:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 351:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 352:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 353:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 354:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 355:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 356:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 357:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 358:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 359:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 360:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 361:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 362:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 363:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 364:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 365:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 366:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 367:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 368:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 369:
#line 112 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 370:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 371:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 372:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 373:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 374:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 375:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 376:
#line 123 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 377:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 378:
#line 129 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 379:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 380:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 381:
#line 136 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 382:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 383:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 384:
#line 141 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 385:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 386:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 389:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 390:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 391:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 392:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 393:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 394:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 395:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 396:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 397:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 398:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 399:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 400:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 401:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 402:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 403:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 404:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 405:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 406:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 407:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 408:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 409:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 410:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 411:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 412:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 413:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 414:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 415:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 416:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 417:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 418:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 419:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 420:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 421:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 422:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 423:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 424:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 425:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 426:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 427:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 428:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 429:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 430:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 431:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 432:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 433:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 434:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 435:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 436:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 437:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 438:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 439:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 442:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 443:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 444:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 445:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 446:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 447:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 448:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 449:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 450:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 451:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 452:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 453:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 454:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 455:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 456:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 457:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 458:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 459:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 460:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 461:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 462:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 463:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 464:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 465:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 466:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 467:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 468:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 469:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 470:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 471:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 472:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 473:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 474:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 475:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 476:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 477:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 478:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 479:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 480:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 481:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 482:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 483:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 484:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 485:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 486:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 487:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 488:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 489:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 490:
#line 373 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 491:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 492:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 493:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 494:
#line 386 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 495:
#line 395 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 496:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 497:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 498:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 499:
#line 410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 500:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 501:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 502:
#line 416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 503:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 504:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 505:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 506:
#line 423 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 507:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 508:
#line 429 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 509:
#line 431 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 510:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 511:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 512:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 513:
#line 457 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 514:
#line 465 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 515:
#line 469 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 516:
#line 473 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 517:
#line 477 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 518:
#line 481 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 519:
#line 485 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 520:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 521:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 522:
#line 503 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 523:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 524:
#line 509 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 525:
#line 513 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 526:
#line 517 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 527:
#line 521 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 528:
#line 528 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 529:
#line 534 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 530:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 531:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 532:
#line 541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 533:
#line 545 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 534:
#line 547 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 535:
#line 554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 536:
#line 574 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 537:
#line 576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 538:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 539:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 540:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 541:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 542:
#line 588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 543:
#line 591 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 544:
#line 592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 545:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 546:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 547:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 548:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 549:
#line 627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 550:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 551:
#line 629 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 552:
#line 630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 553:
#line 631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 554:
#line 636 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 555:
#line 649 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 556:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 557:
#line 663 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 558:
#line 669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 559:
#line 670 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 560:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 561:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 562:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 563:
#line 680 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 564:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 565:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 566:
#line 689 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 567:
#line 690 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 568:
#line 695 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 569:
#line 705 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 570:
#line 706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 571:
#line 707 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 572:
#line 708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 573:
#line 712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 574:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 575:
#line 718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 576:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 577:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 578:
#line 730 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 579:
#line 736 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 580:
#line 753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 581:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 582:
#line 758 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 583:
#line 759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 584:
#line 766 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 585:
#line 772 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 586:
#line 780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 587:
#line 788 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 588:
#line 797 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 589:
#line 806 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 590:
#line 810 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 591:
#line 836 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 592:
#line 840 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 593:
#line 853 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 594:
#line 867 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 595:
#line 882 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 596:
#line 894 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 597:
#line 910 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 598:
#line 916 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 599:
#line 921 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 600:
#line 927 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 601:
#line 933 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 602:
#line 934 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 603:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 604:
#line 947 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 605:
#line 951 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 606:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 607:
#line 963 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 608:
#line 968 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 609:
#line 969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 610:
#line 970 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 611:
#line 971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 612:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 613:
#line 976 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 614:
#line 988 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 615:
#line 989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 616:
#line 995 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 617:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 618:
#line 1009 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 619:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 620:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 621:
#line 1059 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 622:
#line 1072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 623:
#line 1076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 624:
#line 1077 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 625:
#line 1080 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 626:
#line 1081 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 627:
#line 1084 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 628:
#line 1085 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 629:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 630:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 631:
#line 1097 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 632:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 633:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 634:
#line 1128 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 635:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 636:
#line 1148 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 637:
#line 1151 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 640:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 641:
#line 1163 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 642:
#line 1170 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 643:
#line 1175 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 644:
#line 1181 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 645:
#line 1186 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 646:
#line 1191 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 647:
#line 1197 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 648:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 649:
#line 1209 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 650:
#line 1211 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 651:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 652:
#line 1216 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 653:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 654:
#line 1218 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 655:
#line 1219 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 656:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 657:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 658:
#line 1245 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 659:
#line 1246 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 660:
#line 1247 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 661:
#line 1248 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 662:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 663:
#line 1273 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 664:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 665:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 666:
#line 1286 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 667:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 668:
#line 1296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 669:
#line 1301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 670:
#line 1306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 671:
#line 1311 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 672:
#line 1316 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 673:
#line 1322 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 674:
#line 1328 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 675:
#line 1334 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 676:
#line 1341 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 677:
#line 1362 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 678:
#line 1372 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 679:
#line 1376 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 680:
#line 1384 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 681:
#line 1388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 682:
#line 1396 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 683:
#line 1408 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 684:
#line 1429 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 685:
#line 1433 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 686:
#line 1439 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 687:
#line 1443 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 688:
#line 1456 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 689:
#line 1464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 690:
#line 1474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 691:
#line 1476 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 692:
#line 1478 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 693:
#line 1480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 694:
#line 1482 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 695:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 696:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 697:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 698:
#line 1497 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 699:
#line 1506 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 700:
#line 1514 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 701:
#line 1523 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 702:
#line 1534 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 703:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 704:
#line 1542 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 705:
#line 1543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 722:
#line 1572 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 723:
#line 1574 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 724:
#line 1576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 725:
#line 1578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 726:
#line 1580 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 727:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 728:
#line 1584 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 729:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 730:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 731:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 732:
#line 1598 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 733:
#line 1604 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 734:
#line 1611 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 735:
#line 1616 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 736:
#line 1622 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 737:
#line 1627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 738:
#line 1658 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 739:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 1663 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 741:
#line 1671 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 742:
#line 1686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 743:
#line 1688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 744:
#line 1690 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 1694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 748:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 749:
#line 1700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 750:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 751:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 752:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 753:
#line 1708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 754:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 755:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 756:
#line 1715 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 757:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 758:
#line 1719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 759:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 760:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 761:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 762:
#line 1728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 763:
#line 1731 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 764:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 765:
#line 1741 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 766:
#line 1748 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 767:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 768:
#line 1760 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 769:
#line 1765 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 770:
#line 1773 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 771:
#line 1778 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 772:
#line 1787 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 773:
#line 1795 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 774:
#line 1803 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 775:
#line 1811 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 776:
#line 1829 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 777:
#line 1837 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 778:
#line 1845 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 779:
#line 1853 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 780:
#line 1861 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 781:
#line 1868 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 782:
#line 1872 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 783:
#line 1876 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 784:
#line 1881 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 785:
#line 1889 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 786:
#line 1897 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 787:
#line 1913 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 788:
#line 1921 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 789:
#line 1929 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 790:
#line 1937 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 791:
#line 1945 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 792:
#line 1953 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 793:
#line 1961 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 794:
#line 1965 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 795:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 796:
#line 1973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 797:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 798:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 799:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 800:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 801:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 802:
#line 2029 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 803:
#line 2051 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 804:
#line 2062 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 805:
#line 2069 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 806:
#line 2082 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 807:
#line 2099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 808:
#line 2101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 809:
#line 2103 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 810:
#line 2105 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 811:
#line 2107 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 812:
#line 2109 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 813:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 814:
#line 2113 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 815:
#line 2115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 816:
#line 2117 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 817:
#line 2119 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 818:
#line 2121 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 819:
#line 2123 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 820:
#line 2125 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 821:
#line 2127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 822:
#line 2129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 823:
#line 2131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 824:
#line 2133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 825:
#line 2135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 826:
#line 2137 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 827:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 828:
#line 2145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 829:
#line 2149 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 830:
#line 2162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 831:
#line 2163 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 832:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 833:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 834:
#line 2184 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 835:
#line 2199 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 836:
#line 2211 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 837:
#line 2213 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 838:
#line 2225 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 839:
#line 2236 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 840:
#line 2260 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 841:
#line 2271 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 842:
#line 2280 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 843:
#line 2284 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 844:
#line 2291 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 845:
#line 2299 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 846:
#line 2307 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 847:
#line 2318 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 848:
#line 2326 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 849:
#line 2354 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 850:
#line 2389 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 851:
#line 2399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 852:
#line 2400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 853:
#line 2408 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 854:
#line 2414 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 855:
#line 2418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 856:
#line 2422 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 857:
#line 2426 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 858:
#line 2430 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 859:
#line 2434 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 860:
#line 2438 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 861:
#line 2442 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 862:
#line 2446 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 863:
#line 2450 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 864:
#line 2454 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 865:
#line 2458 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 866:
#line 2462 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 867:
#line 2466 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 868:
#line 2470 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 869:
#line 2474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 870:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 871:
#line 2478 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 872:
#line 2482 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 873:
#line 2491 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 874:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 875:
#line 2503 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 876:
#line 2518 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 877:
#line 2525 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 878:
#line 2529 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 879:
#line 2533 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 880:
#line 2537 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 881:
#line 2541 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 882:
#line 2554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 883:
#line 2555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 884:
#line 2559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 885:
#line 2560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 886:
#line 2568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 887:
#line 2569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 888:
#line 2573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 889:
#line 2575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 890:
#line 2580 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 891:
#line 2588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 892:
#line 2590 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 893:
#line 2603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 894:
#line 2608 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 895:
#line 2633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 896:
#line 2634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 897:
#line 2637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 898:
#line 2638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 899:
#line 2650 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 900:
#line 2656 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 901:
#line 2662 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 902:
#line 2672 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 903:
#line 2689 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 904:
#line 2734 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 905:
#line 2742 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 906:
#line 2750 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 907:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 908:
#line 2766 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 909:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 910:
#line 2787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 911:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 912:
#line 2791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 913:
#line 2795 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 914:
#line 2805 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 915:
#line 2806 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 916:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 917:
#line 2809 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 918:
#line 2810 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 919:
#line 2813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 920:
#line 2814 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 921:
#line 2817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 922:
#line 2818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 923:
#line 2819 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 924:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 925:
#line 2821 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 926:
#line 2822 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 927:
#line 2823 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 928:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 929:
#line 2825 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 930:
#line 2826 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 931:
#line 2827 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 932:
#line 2828 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 933:
#line 2832 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 934:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 935:
#line 2839 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 936:
#line 2841 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 937:
#line 2846 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 938:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 939:
#line 2850 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 940:
#line 2852 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 941:
#line 2854 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 942:
#line 2856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 943:
#line 2858 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 944:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 945:
#line 2874 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 946:
#line 2876 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 947:
#line 2880 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 948:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 949:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 950:
#line 2895 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 951:
#line 2903 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 952:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 953:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 954:
#line 2917 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 955:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 956:
#line 2936 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 957:
#line 2937 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 958:
#line 2942 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 959:
#line 2945 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 960:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 961:
#line 2953 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 962:
#line 2954 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 963:
#line 2955 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 964:
#line 2956 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 965:
#line 2957 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 966:
#line 2958 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 967:
#line 2959 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 968:
#line 2960 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 969:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 970:
#line 2972 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 971:
#line 2976 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 972:
#line 2983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 973:
#line 2989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 974:
#line 2990 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 975:
#line 3007 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 976:
#line 3011 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 977:
#line 3016 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 978:
#line 3020 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 979:
#line 3035 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 980:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 981:
#line 3043 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 982:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 983:
#line 3049 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 984:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 985:
#line 3051 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 986:
#line 3055 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 987:
#line 3061 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 988:
#line 3072 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 989:
#line 3085 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 990:
#line 3086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 991:
#line 3091 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 992:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 993:
#line 3102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 994:
#line 3105 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 995:
#line 3106 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 996:
#line 3110 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 997:
#line 3114 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 998:
#line 3121 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 999:
#line 3125 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1000:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1001:
#line 3143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1002:
#line 3144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1003:
#line 3148 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1004:
#line 3149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1005:
#line 3153 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1006:
#line 3154 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1009:
#line 3168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1010:
#line 3169 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1011:
#line 3173 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1012:
#line 3174 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1013:
#line 3178 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1014:
#line 3194 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1015:
#line 3202 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1016:
#line 3210 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1017:
#line 3225 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1018:
#line 3242 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1019:
#line 3243 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1020:
#line 3246 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1021:
#line 3247 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1022:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1023:
#line 3254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1024:
#line 3255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1025:
#line 3258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1026:
#line 3259 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1027:
#line 3260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1028:
#line 3270 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1029:
#line 3271 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1030:
#line 3283 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1031:
#line 3287 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1032:
#line 3314 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1033:
#line 3316 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1034:
#line 3320 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1035:
#line 3322 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1036:
#line 3333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1037:
#line 3336 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1038:
#line 3347 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1039:
#line 3351 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1040:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1041:
#line 3367 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1042:
#line 3371 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1043:
#line 3380 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1044:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1045:
#line 3425 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1046:
#line 3429 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1047:
#line 3433 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1048:
#line 3437 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1049:
#line 3441 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1050:
#line 3445 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1051:
#line 3449 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1052:
#line 3454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1053:
#line 3455 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1054:
#line 3471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1055:
#line 3472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1056:
#line 3473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1057:
#line 3476 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1058:
#line 3477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1059:
#line 3483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1060:
#line 3484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1061:
#line 3485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1062:
#line 3488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1063:
#line 3489 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1064:
#line 3490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1065:
#line 3493 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1066:
#line 3494 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1067:
#line 3495 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1068:
#line 3498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1069:
#line 3499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1070:
#line 3503 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1071:
#line 3505 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1072:
#line 3509 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1073:
#line 3510 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1075:
#line 3521 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1076:
#line 3522 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1077:
#line 3523 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1078:
#line 3524 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1079:
#line 3527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1080:
#line 3528 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1081:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1082:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1083:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1088:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1089:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1090:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1091:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1096:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1097:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1098:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1099:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1100:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1101:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1102:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1103:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1104:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1105:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1106:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1107:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1108:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1109:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1110:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1111:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1112:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1113:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1114:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1115:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1116:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1117:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1118:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1119:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1120:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1121:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1122:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1123:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1124:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1125:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1126:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1127:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1133:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1134:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1135:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1136:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1137:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1138:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1139:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1140:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1141:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1142:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1143:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1144:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1145:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1146:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1147:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1148:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1149:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1150:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1151:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1152:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1153:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1154:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1155:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1156:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1157:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1158:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1159:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1160:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1161:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1162:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1163:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1164:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1165:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1166:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1167:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1168:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1169:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1170:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1171:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1172:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1173:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1174:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1175:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1176:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1177:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1178:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1179:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1180:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1181:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1182:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1183:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1184:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1185:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1186:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1187:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1188:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1189:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1190:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1191:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1192:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1193:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1194:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1195:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1196:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1197:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1198:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1199:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1200:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1201:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1202:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1203:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1204:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1205:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1206:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1207:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1208:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1209:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1210:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1211:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1212:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "all";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1215:
#line 57 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1216:
#line 59 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1217:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1218:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1219:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1220:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1221:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1222:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1223:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1224:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1225:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1226:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1227:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1228:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1229:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1230:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1231:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 24160 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 70 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
