/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     CONCURRENTLY = 336,
     CONFIGURATION = 337,
     CONFLICT = 338,
     CONNECTION = 339,
     CONSTRAINT = 340,
     CONSTRAINTS = 341,
     CONTENT_P = 342,
     CONTINUE_P = 343,
     CONVERSION_P = 344,
     COPY = 345,
     COST = 346,
     CREATE_P = 347,
     CROSS = 348,
     CSV = 349,
     CUBE = 350,
     CURRENT_P = 351,
     CURRENT_CATALOG = 352,
     CURRENT_DATE = 353,
     CURRENT_ROLE = 354,
     CURRENT_SCHEMA = 355,
     CURRENT_TIME = 356,
     CURRENT_TIMESTAMP = 357,
     CURRENT_USER = 358,
     CURSOR = 359,
     CYCLE = 360,
     DATA_P = 361,
     DATABASE = 362,
     DAY_P = 363,
     DAYS_P = 364,
     DEALLOCATE = 365,
     DEC = 366,
     DECIMAL_P = 367,
     DECLARE = 368,
     DEFAULT = 369,
     DEFAULTS = 370,
     DEFERRABLE = 371,
     DEFERRED = 372,
     DEFINER = 373,
     DELETE_P = 374,
     DELIMITER = 375,
     DELIMITERS = 376,
     DEPENDS = 377,
     DESC_P = 378,
     DESCRIBE = 379,
     DETACH = 380,
     DICTIONARY = 381,
     DISABLE_P = 382,
     DISCARD = 383,
     DISTINCT = 384,
     DO = 385,
     DOCUMENT_P = 386,
     DOMAIN_P = 387,
     DOUBLE_P = 388,
     DROP = 389,
     EACH = 390,
     ELSE = 391,
     ENABLE_P = 392,
     ENCODING = 393,
     ENCRYPTED = 394,
     END_P = 395,
     ENUM_P = 396,
     ESCAPE = 397,
     EVENT = 398,
     EXCEPT = 399,
     EXCLUDE = 400,
     EXCLUDING = 401,
     EXCLUSIVE = 402,
     EXECUTE = 403,
     EXISTS = 404,
     EXPLAIN = 405,
     EXPORT_P = 406,
     EXTENSION = 407,
     EXTERNAL = 408,
     EXTRACT = 409,
     FALSE_P = 410,
     FAMILY = 411,
     FETCH = 412,
     FILTER = 413,
     FIRST_P = 414,
     FLOAT_P = 415,
     FOLLOWING = 416,
     FOR = 417,
     FORCE = 418,
     FOREIGN = 419,
     FORWARD = 420,
     FREEZE = 421,
     FROM = 422,
     FULL = 423,
     FUNCTION = 424,
     FUNCTIONS = 425,
     GENERATED = 426,
     GLOB = 427,
     GLOBAL = 428,
     GRANT = 429,
     GRANTED = 430,
     GROUP_P = 431,
     GROUPING = 432,
     HANDLER = 433,
     HAVING = 434,
     HEADER_P = 435,
     HOLD = 436,
     HOUR_P = 437,
     HOURS_P = 438,
     IDENTITY_P = 439,
     IF_P = 440,
     ILIKE = 441,
     IMMEDIATE = 442,
     IMMUTABLE = 443,
     IMPLICIT_P = 444,
     IMPORT_P = 445,
     IN_P = 446,
     INCLUDING = 447,
     INCREMENT = 448,
     INDEX = 449,
     INDEXES = 450,
     INHERIT = 451,
     INHERITS = 452,
     INITIALLY = 453,
     INLINE_P = 454,
     INNER_P = 455,
     INOUT = 456,
     INPUT_P = 457,
     INSENSITIVE = 458,
     INSERT = 459,
     INSTEAD = 460,
     INT_P = 461,
     INTEGER = 462,
     INTERSECT = 463,
     INTERVAL = 464,
     INTO = 465,
     INVOKER = 466,
     IS = 467,
     ISNULL = 468,
     ISOLATION = 469,
     JOIN = 470,
     KEY = 471,
     LABEL = 472,
     LANGUAGE = 473,
     LARGE_P = 474,
     LAST_P = 475,
     LATERAL_P = 476,
     LEADING = 477,
     LEAKPROOF = 478,
     LEFT = 479,
     LEVEL = 480,
     LIKE = 481,
     LIMIT = 482,
     LISTEN = 483,
     LOAD = 484,
     LOCAL = 485,
     LOCALTIME = 486,
     LOCALTIMESTAMP = 487,
     LOCATION = 488,
     LOCK_P = 489,
     LOCKED = 490,
     LOGGED = 491,
     MACRO = 492,
     MAP = 493,
     MAPPING = 494,
     MATCH = 495,
     MATERIALIZED = 496,
     MAXVALUE = 497,
     METHOD = 498,
     MICROSECOND_P = 499,
     MICROSECONDS_P = 500,
     MILLISECOND_P = 501,
     MILLISECONDS_P = 502,
     MINUTE_P = 503,
     MINUTES_P = 504,
     MINVALUE = 505,
     MODE = 506,
     MONTH_P = 507,
     MONTHS_P = 508,
     MOVE = 509,
     NAME_P = 510,
     NAMES = 511,
     NATIONAL = 512,
     NATURAL = 513,
     NCHAR = 514,
     NEW = 515,
     NEXT = 516,
     NO = 517,
     NONE = 518,
     NOT = 519,
     NOTHING = 520,
     NOTIFY = 521,
     NOTNULL = 522,
     NOWAIT = 523,
     NULL_P = 524,
     NULLIF = 525,
     NULLS_P = 526,
     NUMERIC = 527,
     OBJECT_P = 528,
     OF = 529,
     OFF = 530,
     OFFSET = 531,
     OIDS = 532,
     OLD = 533,
     ON = 534,
     ONLY = 535,
     OPERATOR = 536,
     OPTION = 537,
     OPTIONS = 538,
     OR = 539,
     ORDER = 540,
     ORDINALITY = 541,
     OUT_P = 542,
     OUTER_P = 543,
     OVER = 544,
     OVERLAPS = 545,
     OVERLAY = 546,
     OVERRIDING = 547,
     OWNED = 548,
     OWNER = 549,
     PARALLEL = 550,
     PARSER = 551,
     PARTIAL = 552,
     PARTITION = 553,
     PASSING = 554,
     PASSWORD = 555,
     PERCENT = 556,
     PLACING = 557,
     PLANS = 558,
     POLICY = 559,
     POSITION = 560,
     PRAGMA_P = 561,
     PRECEDING = 562,
     PRECISION = 563,
     PREPARE = 564,
     PREPARED = 565,
     PRESERVE = 566,
     PRIMARY = 567,
     PRIOR = 568,
     PRIVILEGES = 569,
     PROCEDURAL = 570,
     PROCEDURE = 571,
     PROGRAM = 572,
     PUBLICATION = 573,
     QUOTE = 574,
     RANGE = 575,
     READ_P = 576,
     REAL = 577,
     REASSIGN = 578,
     RECHECK = 579,
     RECURSIVE = 580,
     REF = 581,
     REFERENCES = 582,
     REFERENCING = 583,
     REFRESH = 584,
     REINDEX = 585,
     RELATIVE_P = 586,
     RELEASE = 587,
     RENAME = 588,
     REPEATABLE = 589,
     REPLACE = 590,
     REPLICA = 591,
     RESET = 592,
     RESTART = 593,
     RESTRICT = 594,
     RETURNING = 595,
     RETURNS = 596,
     REVOKE = 597,
     RIGHT = 598,
     ROLE = 599,
     ROLLBACK = 600,
     ROLLUP = 601,
     ROW = 602,
     ROWS = 603,
     RULE = 604,
     SAMPLE = 605,
     SAVEPOINT = 606,
     SCHEMA = 607,
     SCHEMAS = 608,
     SCROLL = 609,
     SEARCH = 610,
     SECOND_P = 611,
     SECONDS_P = 612,
     SECURITY = 613,
     SELECT = 614,
     SEQUENCE = 615,
     SEQUENCES = 616,
     SERIALIZABLE = 617,
     SERVER = 618,
     SESSION = 619,
     SESSION_USER = 620,
     SET = 621,
     SETOF = 622,
     SETS = 623,
     SHARE = 624,
     SHOW = 625,
     SIMILAR = 626,
     SIMPLE = 627,
     SKIP = 628,
     SMALLINT = 629,
     SNAPSHOT = 630,
     SOME = 631,
     SQL_P = 632,
     STABLE = 633,
     STANDALONE_P = 634,
     START = 635,
     STATEMENT = 636,
     STATISTICS = 637,
     STDIN = 638,
     STDOUT = 639,
     STORAGE = 640,
     STRICT_P = 641,
     STRIP_P = 642,
     STRUCT = 643,
     SUBSCRIPTION = 644,
     SUBSTRING = 645,
     SYMMETRIC = 646,
     SYSID = 647,
     SYSTEM_P = 648,
     TABLE = 649,
     TABLES = 650,
     TABLESAMPLE = 651,
     TABLESPACE = 652,
     TEMP = 653,
     TEMPLATE = 654,
     TEMPORARY = 655,
     TEXT_P = 656,
     THEN = 657,
     TIME = 658,
     TIMESTAMP = 659,
     TO = 660,
     TRAILING = 661,
     TRANSACTION = 662,
     TRANSFORM = 663,
     TREAT = 664,
     TRIGGER = 665,
     TRIM = 666,
     TRUE_P = 667,
     TRUNCATE = 668,
     TRUSTED = 669,
     TRY_CAST = 670,
     TYPE_P = 671,
     TYPES_P = 672,
     UNBOUNDED = 673,
     UNCOMMITTED = 674,
     UNENCRYPTED = 675,
     UNION = 676,
     UNIQUE = 677,
     UNKNOWN = 678,
     UNLISTEN = 679,
     UNLOGGED = 680,
     UNTIL = 681,
     UPDATE = 682,
     USER = 683,
     USING = 684,
     VACUUM = 685,
     VALID = 686,
     VALIDATE = 687,
     VALIDATOR = 688,
     VALUE_P = 689,
     VALUES = 690,
     VARCHAR = 691,
     VARIADIC = 692,
     VARYING = 693,
     VERBOSE = 694,
     VERSION_P = 695,
     VIEW = 696,
     VIEWS = 697,
     VOLATILE = 698,
     WHEN = 699,
     WHERE = 700,
     WHITESPACE_P = 701,
     WINDOW = 702,
     WITH = 703,
     WITHIN = 704,
     WITHOUT = 705,
     WORK = 706,
     WRAPPER = 707,
     WRITE_P = 708,
     XML_P = 709,
     XMLATTRIBUTES = 710,
     XMLCONCAT = 711,
     XMLELEMENT = 712,
     XMLEXISTS = 713,
     XMLFOREST = 714,
     XMLNAMESPACES = 715,
     XMLPARSE = 716,
     XMLPI = 717,
     XMLROOT = 718,
     XMLSERIALIZE = 719,
     XMLTABLE = 720,
     YEAR_P = 721,
     YEARS_P = 722,
     YES_P = 723,
     ZONE = 724,
     NOT_LA = 725,
     NULLS_LA = 726,
     WITH_LA = 727,
     POSTFIXOP = 728,
     UMINUS = 729
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define CONCURRENTLY 336
#define CONFIGURATION 337
#define CONFLICT 338
#define CONNECTION 339
#define CONSTRAINT 340
#define CONSTRAINTS 341
#define CONTENT_P 342
#define CONTINUE_P 343
#define CONVERSION_P 344
#define COPY 345
#define COST 346
#define CREATE_P 347
#define CROSS 348
#define CSV 349
#define CUBE 350
#define CURRENT_P 351
#define CURRENT_CATALOG 352
#define CURRENT_DATE 353
#define CURRENT_ROLE 354
#define CURRENT_SCHEMA 355
#define CURRENT_TIME 356
#define CURRENT_TIMESTAMP 357
#define CURRENT_USER 358
#define CURSOR 359
#define CYCLE 360
#define DATA_P 361
#define DATABASE 362
#define DAY_P 363
#define DAYS_P 364
#define DEALLOCATE 365
#define DEC 366
#define DECIMAL_P 367
#define DECLARE 368
#define DEFAULT 369
#define DEFAULTS 370
#define DEFERRABLE 371
#define DEFERRED 372
#define DEFINER 373
#define DELETE_P 374
#define DELIMITER 375
#define DELIMITERS 376
#define DEPENDS 377
#define DESC_P 378
#define DESCRIBE 379
#define DETACH 380
#define DICTIONARY 381
#define DISABLE_P 382
#define DISCARD 383
#define DISTINCT 384
#define DO 385
#define DOCUMENT_P 386
#define DOMAIN_P 387
#define DOUBLE_P 388
#define DROP 389
#define EACH 390
#define ELSE 391
#define ENABLE_P 392
#define ENCODING 393
#define ENCRYPTED 394
#define END_P 395
#define ENUM_P 396
#define ESCAPE 397
#define EVENT 398
#define EXCEPT 399
#define EXCLUDE 400
#define EXCLUDING 401
#define EXCLUSIVE 402
#define EXECUTE 403
#define EXISTS 404
#define EXPLAIN 405
#define EXPORT_P 406
#define EXTENSION 407
#define EXTERNAL 408
#define EXTRACT 409
#define FALSE_P 410
#define FAMILY 411
#define FETCH 412
#define FILTER 413
#define FIRST_P 414
#define FLOAT_P 415
#define FOLLOWING 416
#define FOR 417
#define FORCE 418
#define FOREIGN 419
#define FORWARD 420
#define FREEZE 421
#define FROM 422
#define FULL 423
#define FUNCTION 424
#define FUNCTIONS 425
#define GENERATED 426
#define GLOB 427
#define GLOBAL 428
#define GRANT 429
#define GRANTED 430
#define GROUP_P 431
#define GROUPING 432
#define HANDLER 433
#define HAVING 434
#define HEADER_P 435
#define HOLD 436
#define HOUR_P 437
#define HOURS_P 438
#define IDENTITY_P 439
#define IF_P 440
#define ILIKE 441
#define IMMEDIATE 442
#define IMMUTABLE 443
#define IMPLICIT_P 444
#define IMPORT_P 445
#define IN_P 446
#define INCLUDING 447
#define INCREMENT 448
#define INDEX 449
#define INDEXES 450
#define INHERIT 451
#define INHERITS 452
#define INITIALLY 453
#define INLINE_P 454
#define INNER_P 455
#define INOUT 456
#define INPUT_P 457
#define INSENSITIVE 458
#define INSERT 459
#define INSTEAD 460
#define INT_P 461
#define INTEGER 462
#define INTERSECT 463
#define INTERVAL 464
#define INTO 465
#define INVOKER 466
#define IS 467
#define ISNULL 468
#define ISOLATION 469
#define JOIN 470
#define KEY 471
#define LABEL 472
#define LANGUAGE 473
#define LARGE_P 474
#define LAST_P 475
#define LATERAL_P 476
#define LEADING 477
#define LEAKPROOF 478
#define LEFT 479
#define LEVEL 480
#define LIKE 481
#define LIMIT 482
#define LISTEN 483
#define LOAD 484
#define LOCAL 485
#define LOCALTIME 486
#define LOCALTIMESTAMP 487
#define LOCATION 488
#define LOCK_P 489
#define LOCKED 490
#define LOGGED 491
#define MACRO 492
#define MAP 493
#define MAPPING 494
#define MATCH 495
#define MATERIALIZED 496
#define MAXVALUE 497
#define METHOD 498
#define MICROSECOND_P 499
#define MICROSECONDS_P 500
#define MILLISECOND_P 501
#define MILLISECONDS_P 502
#define MINUTE_P 503
#define MINUTES_P 504
#define MINVALUE 505
#define MODE 506
#define MONTH_P 507
#define MONTHS_P 508
#define MOVE 509
#define NAME_P 510
#define NAMES 511
#define NATIONAL 512
#define NATURAL 513
#define NCHAR 514
#define NEW 515
#define NEXT 516
#define NO 517
#define NONE 518
#define NOT 519
#define NOTHING 520
#define NOTIFY 521
#define NOTNULL 522
#define NOWAIT 523
#define NULL_P 524
#define NULLIF 525
#define NULLS_P 526
#define NUMERIC 527
#define OBJECT_P 528
#define OF 529
#define OFF 530
#define OFFSET 531
#define OIDS 532
#define OLD 533
#define ON 534
#define ONLY 535
#define OPERATOR 536
#define OPTION 537
#define OPTIONS 538
#define OR 539
#define ORDER 540
#define ORDINALITY 541
#define OUT_P 542
#define OUTER_P 543
#define OVER 544
#define OVERLAPS 545
#define OVERLAY 546
#define OVERRIDING 547
#define OWNED 548
#define OWNER 549
#define PARALLEL 550
#define PARSER 551
#define PARTIAL 552
#define PARTITION 553
#define PASSING 554
#define PASSWORD 555
#define PERCENT 556
#define PLACING 557
#define PLANS 558
#define POLICY 559
#define POSITION 560
#define PRAGMA_P 561
#define PRECEDING 562
#define PRECISION 563
#define PREPARE 564
#define PREPARED 565
#define PRESERVE 566
#define PRIMARY 567
#define PRIOR 568
#define PRIVILEGES 569
#define PROCEDURAL 570
#define PROCEDURE 571
#define PROGRAM 572
#define PUBLICATION 573
#define QUOTE 574
#define RANGE 575
#define READ_P 576
#define REAL 577
#define REASSIGN 578
#define RECHECK 579
#define RECURSIVE 580
#define REF 581
#define REFERENCES 582
#define REFERENCING 583
#define REFRESH 584
#define REINDEX 585
#define RELATIVE_P 586
#define RELEASE 587
#define RENAME 588
#define REPEATABLE 589
#define REPLACE 590
#define REPLICA 591
#define RESET 592
#define RESTART 593
#define RESTRICT 594
#define RETURNING 595
#define RETURNS 596
#define REVOKE 597
#define RIGHT 598
#define ROLE 599
#define ROLLBACK 600
#define ROLLUP 601
#define ROW 602
#define ROWS 603
#define RULE 604
#define SAMPLE 605
#define SAVEPOINT 606
#define SCHEMA 607
#define SCHEMAS 608
#define SCROLL 609
#define SEARCH 610
#define SECOND_P 611
#define SECONDS_P 612
#define SECURITY 613
#define SELECT 614
#define SEQUENCE 615
#define SEQUENCES 616
#define SERIALIZABLE 617
#define SERVER 618
#define SESSION 619
#define SESSION_USER 620
#define SET 621
#define SETOF 622
#define SETS 623
#define SHARE 624
#define SHOW 625
#define SIMILAR 626
#define SIMPLE 627
#define SKIP 628
#define SMALLINT 629
#define SNAPSHOT 630
#define SOME 631
#define SQL_P 632
#define STABLE 633
#define STANDALONE_P 634
#define START 635
#define STATEMENT 636
#define STATISTICS 637
#define STDIN 638
#define STDOUT 639
#define STORAGE 640
#define STRICT_P 641
#define STRIP_P 642
#define STRUCT 643
#define SUBSCRIPTION 644
#define SUBSTRING 645
#define SYMMETRIC 646
#define SYSID 647
#define SYSTEM_P 648
#define TABLE 649
#define TABLES 650
#define TABLESAMPLE 651
#define TABLESPACE 652
#define TEMP 653
#define TEMPLATE 654
#define TEMPORARY 655
#define TEXT_P 656
#define THEN 657
#define TIME 658
#define TIMESTAMP 659
#define TO 660
#define TRAILING 661
#define TRANSACTION 662
#define TRANSFORM 663
#define TREAT 664
#define TRIGGER 665
#define TRIM 666
#define TRUE_P 667
#define TRUNCATE 668
#define TRUSTED 669
#define TRY_CAST 670
#define TYPE_P 671
#define TYPES_P 672
#define UNBOUNDED 673
#define UNCOMMITTED 674
#define UNENCRYPTED 675
#define UNION 676
#define UNIQUE 677
#define UNKNOWN 678
#define UNLISTEN 679
#define UNLOGGED 680
#define UNTIL 681
#define UPDATE 682
#define USER 683
#define USING 684
#define VACUUM 685
#define VALID 686
#define VALIDATE 687
#define VALIDATOR 688
#define VALUE_P 689
#define VALUES 690
#define VARCHAR 691
#define VARIADIC 692
#define VARYING 693
#define VERBOSE 694
#define VERSION_P 695
#define VIEW 696
#define VIEWS 697
#define VOLATILE 698
#define WHEN 699
#define WHERE 700
#define WHITESPACE_P 701
#define WINDOW 702
#define WITH 703
#define WITHIN 704
#define WITHOUT 705
#define WORK 706
#define WRAPPER 707
#define WRITE_P 708
#define XML_P 709
#define XMLATTRIBUTES 710
#define XMLCONCAT 711
#define XMLELEMENT 712
#define XMLEXISTS 713
#define XMLFOREST 714
#define XMLNAMESPACES 715
#define XMLPARSE 716
#define XMLPI 717
#define XMLROOT 718
#define XMLSERIALIZE 719
#define XMLTABLE 720
#define YEAR_P 721
#define YEARS_P 722
#define YES_P 723
#define ZONE 724
#define NOT_LA 725
#define NULLS_LA 726
#define WITH_LA 727
#define POSTFIXOP 728
#define UMINUS 729




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1261 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1286 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  578
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   48864

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  494
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  366
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1743
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2852

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   729

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   491,     2,   481,     2,     2,
     486,   487,   479,   477,   490,   478,   488,   480,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   493,   489,
     473,   475,   474,   492,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   484,     2,   485,   482,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   476,   483
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    78,
      83,    90,    95,   102,   107,   114,   119,   126,   128,   131,
     135,   138,   140,   144,   147,   151,   153,   157,   160,   166,
     170,   177,   182,   189,   196,   203,   209,   215,   222,   232,
     237,   243,   251,   258,   263,   272,   277,   280,   285,   289,
     296,   301,   304,   307,   310,   313,   315,   318,   319,   321,
     324,   327,   330,   332,   336,   341,   344,   345,   348,   352,
     355,   359,   366,   373,   382,   389,   398,   405,   414,   421,
     430,   439,   450,   459,   470,   472,   473,   481,   483,   488,
     493,   501,   504,   506,   510,   515,   519,   520,   522,   523,
     526,   530,   536,   545,   551,   552,   558,   564,   572,   575,
     576,   578,   580,   582,   586,   589,   590,   592,   593,   595,
     599,   601,   605,   607,   611,   614,   617,   622,   628,   634,
     643,   645,   646,   650,   660,   673,   677,   678,   683,   690,
     692,   695,   697,   699,   700,   702,   705,   708,   710,   713,
     716,   718,   721,   725,   728,   731,   734,   737,   741,   745,
     749,   751,   755,   757,   758,   760,   763,   766,   769,   772,
     775,   778,   781,   784,   786,   788,   789,   799,   812,   813,
     816,   818,   820,   822,   824,   826,   828,   832,   833,   835,
     838,   840,   842,   845,   848,   852,   854,   856,   859,   862,
     864,   867,   871,   877,   880,   886,   892,   895,   899,   901,
     903,   906,   909,   910,   915,   916,   920,   925,   930,   931,
     935,   938,   939,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   963,   967,   971,   973,   976,   979,   982,
     985,   988,   991,   992,   996,  1000,  1004,  1005,  1007,  1010,
    1012,  1015,  1018,  1021,  1024,  1029,  1031,  1035,  1037,  1041,
    1043,  1045,  1047,  1049,  1053,  1055,  1058,  1059,  1061,  1062,
    1064,  1068,  1069,  1072,  1073,  1077,  1081,  1083,  1089,  1093,
    1095,  1099,  1101,  1106,  1112,  1118,  1125,  1129,  1137,  1142,
    1154,  1156,  1160,  1163,  1166,  1169,  1170,  1174,  1176,  1178,
    1181,  1184,  1187,  1190,  1192,  1193,  1195,  1198,  1205,  1210,
    1217,  1222,  1229,  1238,  1240,  1242,  1244,  1246,  1248,  1251,
    1253,  1256,  1258,  1260,  1262,  1266,  1270,  1274,  1278,  1281,
    1284,  1286,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1306,
    1307,  1309,  1311,  1313,  1320,  1322,  1324,  1327,  1331,  1340,
    1352,  1362,  1364,  1366,  1370,  1371,  1373,  1377,  1379,  1380,
    1382,  1383,  1385,  1386,  1388,  1392,  1394,  1396,  1398,  1402,
    1403,  1406,  1409,  1410,  1413,  1414,  1416,  1417,  1419,  1421,
    1423,  1427,  1431,  1433,  1435,  1439,  1443,  1447,  1451,  1456,
    1460,  1463,  1465,  1467,  1469,  1471,  1473,  1477,  1479,  1481,
    1485,  1489,  1491,  1494,  1499,  1504,  1507,  1511,  1517,  1523,
    1525,  1527,  1538,  1549,  1551,  1554,  1559,  1564,  1569,  1572,
    1575,  1579,  1581,  1585,  1592,  1595,  1596,  1600,  1604,  1609,
    1614,  1619,  1624,  1628,  1631,  1633,  1635,  1636,  1638,  1640,
    1641,  1643,  1649,  1651,  1652,  1654,  1655,  1659,  1661,  1665,
    1670,  1674,  1676,  1678,  1679,  1682,  1685,  1686,  1689,  1692,
    1694,  1696,  1698,  1699,  1702,  1707,  1713,  1718,  1721,  1725,
    1728,  1731,  1734,  1737,  1739,  1742,  1746,  1747,  1749,  1750,
    1756,  1758,  1763,  1770,  1773,  1775,  1776,  1781,  1782,  1784,
    1786,  1788,  1790,  1793,  1796,  1798,  1800,  1802,  1804,  1806,
    1808,  1812,  1813,  1815,  1819,  1821,  1823,  1826,  1829,  1830,
    1832,  1836,  1838,  1839,  1841,  1844,  1848,  1851,  1856,  1859,
    1863,  1866,  1867,  1869,  1872,  1873,  1878,  1884,  1887,  1888,
    1890,  1894,  1898,  1902,  1906,  1910,  1914,  1916,  1921,  1925,
    1930,  1936,  1941,  1947,  1952,  1958,  1961,  1966,  1968,  1970,
    1971,  1973,  1978,  1984,  1989,  1990,  1993,  1996,  1999,  2001,
    2003,  2004,  2009,  2012,  2014,  2017,  2020,  2025,  2028,  2035,
    2038,  2040,  2044,  2049,  2050,  2053,  2054,  2057,  2058,  2060,
    2064,  2068,  2071,  2072,  2075,  2080,  2082,  2084,  2087,  2091,
    2097,  2104,  2107,  2111,  2116,  2121,  2125,  2130,  2131,  2133,
    2135,  2137,  2139,  2141,  2144,  2149,  2151,  2153,  2155,  2157,
    2160,  2164,  2165,  2167,  2169,  2171,  2173,  2175,  2178,  2181,
    2184,  2187,  2190,  2192,  2196,  2197,  2199,  2201,  2203,  2205,
    2211,  2214,  2216,  2218,  2220,  2222,  2227,  2229,  2232,  2235,
    2237,  2241,  2245,  2248,  2250,  2251,  2257,  2260,  2266,  2269,
    2271,  2275,  2279,  2280,  2282,  2284,  2286,  2288,  2290,  2292,
    2294,  2296,  2298,  2300,  2302,  2304,  2306,  2308,  2310,  2312,
    2314,  2316,  2318,  2320,  2322,  2324,  2326,  2328,  2332,  2336,
    2340,  2344,  2348,  2352,  2356,  2357,  2359,  2363,  2367,  2373,
    2376,  2379,  2383,  2387,  2391,  2395,  2399,  2403,  2407,  2411,
    2415,  2419,  2423,  2427,  2431,  2434,  2437,  2441,  2445,  2448,
    2451,  2455,  2459,  2465,  2470,  2477,  2481,  2487,  2492,  2499,
    2504,  2511,  2517,  2525,  2529,  2532,  2537,  2541,  2544,  2546,
    2550,  2554,  2558,  2562,  2567,  2571,  2576,  2580,  2585,  2591,
    2598,  2605,  2613,  2620,  2628,  2635,  2643,  2647,  2652,  2657,
    2664,  2666,  2671,  2673,  2677,  2680,  2683,  2687,  2691,  2695,
    2699,  2703,  2707,  2711,  2715,  2719,  2723,  2727,  2731,  2735,
    2738,  2741,  2747,  2754,  2761,  2769,  2771,  2773,  2776,  2779,
    2782,  2787,  2789,  2792,  2794,  2797,  2800,  2804,  2810,  2817,
    2826,  2833,  2840,  2845,  2850,  2852,  2854,  2856,  2862,  2864,
    2866,  2871,  2873,  2878,  2880,  2885,  2887,  2892,  2894,  2896,
    2898,  2900,  2902,  2904,  2911,  2918,  2923,  2928,  2933,  2938,
    2945,  2951,  2957,  2963,  2968,  2975,  2980,  2986,  2987,  2993,
    2994,  2997,  2998,  3000,  3004,  3008,  3011,  3014,  3015,  3022,
    3024,  3025,  3029,  3030,  3033,  3036,  3037,  3039,  3044,  3047,
    3050,  3053,  3056,  3059,  3064,  3068,  3070,  3076,  3078,  3080,
    3082,  3084,  3086,  3088,  3090,  3092,  3094,  3096,  3098,  3100,
    3102,  3104,  3106,  3108,  3110,  3112,  3117,  3119,  3124,  3126,
    3131,  3133,  3136,  3138,  3141,  3143,  3146,  3148,  3152,  3154,
    3158,  3160,  3164,  3166,  3170,  3174,  3176,  3180,  3184,  3185,
    3187,  3189,  3191,  3193,  3195,  3197,  3199,  3201,  3203,  3205,
    3210,  3214,  3217,  3221,  3222,  3226,  3230,  3233,  3236,  3238,
    3239,  3242,  3245,  3249,  3252,  3254,  3256,  3260,  3266,  3268,
    3271,  3276,  3279,  3280,  3282,  3283,  3285,  3288,  3291,  3294,
    3298,  3304,  3306,  3307,  3309,  3312,  3313,  3316,  3318,  3319,
    3321,  3322,  3324,  3328,  3332,  3335,  3337,  3339,  3341,  3345,
    3347,  3350,  3352,  3356,  3358,  3360,  3362,  3365,  3367,  3369,
    3372,  3374,  3376,  3379,  3386,  3389,  3395,  3399,  3403,  3405,
    3407,  3409,  3411,  3413,  3415,  3417,  3419,  3421,  3423,  3425,
    3427,  3429,  3431,  3433,  3435,  3437,  3439,  3441,  3443,  3446,
    3449,  3453,  3457,  3458,  3460,  3462,  3464,  3466,  3468,  3470,
    3472,  3478,  3482,  3483,  3485,  3487,  3489,  3491,  3496,  3504,
    3507,  3508,  3510,  3512,  3514,  3516,  3530,  3547,  3549,  3552,
    3553,  3555,  3556,  3558,  3559,  3562,  3563,  3565,  3566,  3573,
    3582,  3589,  3598,  3605,  3614,  3617,  3619,  3624,  3628,  3631,
    3636,  3640,  3646,  3648,  3649,  3651,  3653,  3654,  3656,  3658,
    3660,  3662,  3664,  3666,  3668,  3670,  3672,  3674,  3676,  3680,
    3682,  3684,  3686,  3688,  3690,  3692,  3695,  3697,  3699,  3702,
    3706,  3710,  3712,  3716,  3720,  3723,  3727,  3731,  3735,  3739,
    3741,  3743,  3745,  3747,  3751,  3757,  3759,  3761,  3763,  3765,
    3769,  3772,  3774,  3779,  3785,  3791,  3796,  3803,  3805,  3807,
    3809,  3811,  3813,  3815,  3816,  3818,  3822,  3824,  3825,  3833,
    3835,  3838,  3842,  3845,  3846,  3849,  3850,  3853,  3858,  3861,
    3863,  3865,  3867,  3870,  3874,  3877,  3880,  3884,  3889,  3892,
    3894,  3896,  3898,  3902,  3905,  3915,  3927,  3940,  3955,  3959,
    3964,  3969,  3970,  3978,  3989,  3992,  3996,  3997,  4002,  4004,
    4006,  4008,  4010,  4012,  4014,  4016,  4018,  4020,  4022,  4024,
    4026,  4028,  4030,  4032,  4034,  4036,  4038,  4040,  4042,  4044,
    4046,  4048,  4050,  4052,  4054,  4056,  4058,  4060,  4062,  4064,
    4066,  4068,  4070,  4072,  4074,  4076,  4078,  4080,  4082,  4084,
    4086,  4088,  4090,  4092,  4094,  4096,  4098,  4100,  4102,  4104,
    4106,  4108,  4110,  4112,  4114,  4116,  4118,  4120,  4122,  4124,
    4126,  4128,  4130,  4132,  4134,  4136,  4138,  4140,  4142,  4144,
    4146,  4148,  4150,  4152,  4154,  4156,  4158,  4160,  4162,  4164,
    4166,  4168,  4170,  4172,  4174,  4176,  4178,  4180,  4182,  4184,
    4186,  4188,  4190,  4192,  4194,  4196,  4198,  4200,  4202,  4204,
    4206,  4208,  4210,  4212,  4214,  4216,  4218,  4220,  4222,  4224,
    4226,  4228,  4230,  4232,  4234,  4236,  4238,  4240,  4242,  4244,
    4246,  4248,  4250,  4252,  4254,  4256,  4258,  4260,  4262,  4264,
    4266,  4268,  4270,  4272,  4274,  4276,  4278,  4280,  4282,  4284,
    4286,  4288,  4290,  4292,  4294,  4296,  4298,  4300,  4302,  4304,
    4306,  4308,  4310,  4312,  4314,  4316,  4318,  4320,  4322,  4324,
    4326,  4328,  4330,  4332,  4334,  4336,  4338,  4340,  4342,  4344,
    4346,  4348,  4350,  4352,  4354,  4356,  4358,  4360,  4362,  4364,
    4366,  4368,  4370,  4372,  4374,  4376,  4378,  4380,  4382,  4384,
    4386,  4388,  4390,  4392,  4394,  4396,  4398,  4400,  4402,  4404,
    4406,  4408,  4410,  4412,  4414,  4416,  4418,  4420,  4422,  4424,
    4426,  4428,  4430,  4432,  4434,  4436,  4438,  4440,  4442,  4444,
    4446,  4448,  4450,  4452,  4454,  4456,  4458,  4460,  4462,  4464,
    4466,  4468,  4470,  4472,  4474,  4476,  4478,  4480,  4482,  4484,
    4486,  4488,  4490,  4492,  4494,  4496,  4498,  4500,  4502,  4504,
    4506,  4508,  4510,  4512,  4514,  4516,  4518,  4520,  4522,  4524,
    4526,  4528,  4530,  4532,  4534,  4536,  4538,  4540,  4542,  4544,
    4546,  4548,  4550,  4552,  4554,  4556,  4558,  4560,  4562,  4564,
    4566,  4568,  4570,  4572,  4574,  4576,  4578,  4580,  4582,  4584,
    4586,  4588,  4590,  4592,  4594,  4596,  4598,  4600,  4602,  4604,
    4606,  4608,  4610,  4612,  4614,  4616,  4618,  4620,  4622,  4624,
    4626,  4628,  4630,  4632,  4634,  4636,  4638,  4640,  4642,  4644,
    4646,  4648,  4650,  4652,  4654,  4656,  4658,  4660,  4662,  4664,
    4666,  4668,  4670,  4672,  4674,  4676,  4678,  4680,  4682,  4684,
    4686,  4688,  4690,  4692,  4694,  4696,  4698,  4700,  4702,  4704,
    4706,  4708,  4710,  4712,  4714,  4716,  4718,  4720,  4722,  4724,
    4726,  4728,  4730,  4732,  4734,  4736,  4738,  4740,  4742,  4744,
    4746,  4748,  4750,  4752,  4754,  4756,  4758,  4760,  4762,  4764,
    4766,  4768,  4770,  4772,  4774,  4776,  4778,  4780,  4782,  4784,
    4786,  4788,  4790,  4792,  4794,  4796,  4798,  4800,  4802,  4804,
    4806,  4808,  4810,  4812,  4814,  4816,  4818,  4820,  4822,  4824,
    4826,  4828,  4830,  4832,  4834,  4836,  4838,  4840,  4842,  4844,
    4846,  4848,  4850,  4852,  4854,  4856,  4858,  4860,  4862,  4864,
    4866,  4868,  4870,  4872,  4874,  4876,  4878,  4880,  4882,  4884,
    4886,  4888,  4890,  4892,  4894,  4896,  4898,  4900,  4902,  4904,
    4906,  4908,  4910,  4912,  4914,  4916,  4918,  4920,  4922,  4924,
    4926,  4928,  4930,  4932,  4934,  4936,  4938,  4940,  4942,  4944,
    4946,  4948,  4950,  4952,  4954,  4956,  4958,  4960,  4962,  4964,
    4966,  4968,  4970,  4972,  4974,  4976,  4978,  4980,  4982,  4984,
    4986,  4988,  4990,  4992,  4994,  4996,  4998,  5000,  5002,  5004,
    5006,  5008,  5010,  5012,  5014,  5016,  5018,  5020,  5022,  5024,
    5026,  5028,  5030,  5032,  5034,  5036,  5038,  5040,  5042,  5044,
    5046,  5048,  5050,  5052,  5054,  5056,  5058,  5060,  5062,  5064,
    5066,  5068,  5070,  5072,  5074,  5076,  5078,  5080,  5082,  5084,
    5086,  5088,  5090,  5092,  5094,  5096,  5098,  5100,  5102,  5104,
    5106,  5108,  5110,  5112
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     495,     0,    -1,   496,    -1,   496,   489,   497,    -1,   497,
      -1,   808,    -1,   535,    -1,   498,    -1,   840,    -1,   847,
      -1,   809,    -1,   600,    -1,   850,    -1,   596,    -1,   798,
      -1,   531,    -1,   544,    -1,   509,    -1,   836,    -1,   590,
      -1,   533,    -1,   812,    -1,   810,    -1,   811,    -1,   801,
      -1,   512,    -1,   829,    -1,   530,    -1,   795,    -1,   510,
      -1,   617,    -1,   542,    -1,   599,    -1,   831,    -1,   841,
      -1,   823,    -1,   844,    -1,   848,    -1,    -1,    29,   394,
     677,   506,    -1,    29,   394,   185,   149,   677,   506,    -1,
      29,   194,   776,   506,    -1,    29,   194,   185,   149,   776,
     506,    -1,    29,   360,   776,   506,    -1,    29,   360,   185,
     149,   776,   506,    -1,    29,   441,   776,   506,    -1,    29,
     441,   185,   149,   776,   506,    -1,   501,    -1,   499,   501,
      -1,   366,   114,   719,    -1,   134,   114,    -1,   338,    -1,
     338,   537,   538,    -1,   366,   539,    -1,   366,   171,   589,
      -1,   505,    -1,   502,   490,   505,    -1,    23,   569,    -1,
      23,   185,   264,   149,   569,    -1,    23,    75,   569,    -1,
      23,    75,   185,   264,   149,   569,    -1,    29,   511,   784,
     500,    -1,    29,   511,   784,   134,   264,   269,    -1,    29,
     511,   784,   366,   264,   269,    -1,    29,   511,   784,   366,
     382,   541,    -1,    29,   511,   784,   366,   557,    -1,    29,
     511,   784,   337,   557,    -1,    29,   511,   784,   366,   385,
     784,    -1,    29,   511,   784,    23,   171,   589,    36,   184,
     547,    -1,    29,   511,   784,   499,    -1,    29,   511,   784,
     134,   184,    -1,    29,   511,   784,   134,   184,   185,   149,
      -1,   134,   511,   185,   149,   784,   594,    -1,   134,   511,
     784,   594,    -1,    29,   511,   784,   508,   416,   689,   686,
     504,    -1,    29,   511,   784,   507,    -1,    23,   559,    -1,
      29,    85,   778,   545,    -1,   432,    85,   778,    -1,   134,
      85,   185,   149,   778,   594,    -1,   134,    85,   778,   594,
      -1,   366,   236,    -1,   366,   425,    -1,   366,   557,    -1,
     337,   557,    -1,   507,    -1,   429,   719,    -1,    -1,   552,
      -1,   366,   552,    -1,    23,   552,    -1,   134,   567,    -1,
     503,    -1,   506,   490,   503,    -1,   283,   486,   502,   487,
      -1,   366,   106,    -1,    -1,   110,   778,    -1,   110,   309,
     778,    -1,   110,    27,    -1,   110,   309,    27,    -1,    29,
     352,   778,   333,   405,   778,    -1,    29,   394,   677,   333,
     405,   778,    -1,    29,   394,   185,   149,   677,   333,   405,
     778,    -1,    29,   360,   776,   333,   405,   778,    -1,    29,
     360,   185,   149,   776,   333,   405,   778,    -1,    29,   441,
     776,   333,   405,   778,    -1,    29,   441,   185,   149,   776,
     333,   405,   778,    -1,    29,   194,   776,   333,   405,   778,
      -1,    29,   194,   185,   149,   776,   333,   405,   778,    -1,
      29,   394,   677,   333,   511,   778,   405,   778,    -1,    29,
     394,   185,   149,   677,   333,   511,   778,   405,   778,    -1,
      29,   394,   677,   333,    85,   778,   405,   778,    -1,    29,
     394,   185,   149,   677,   333,    85,   778,   405,   778,    -1,
      75,    -1,    -1,   516,   204,   210,   514,   513,   519,   521,
      -1,   617,    -1,   292,   522,   434,   617,    -1,   486,   526,
     487,   617,    -1,   486,   526,   487,   292,   522,   434,   617,
      -1,   114,   435,    -1,   776,    -1,   776,    36,   784,    -1,
     486,   528,   487,   683,    -1,   279,    85,   778,    -1,    -1,
     622,    -1,    -1,   784,   770,    -1,   529,   475,   719,    -1,
     486,   523,   487,   475,   719,    -1,   279,    83,   515,   130,
     427,   366,   527,   683,    -1,   279,    83,   515,   130,   265,
      -1,    -1,   784,   524,   525,   635,   636,    -1,   724,   524,
     525,   635,   636,    -1,   486,   719,   487,   524,   525,   635,
     636,    -1,   340,   773,    -1,    -1,   428,    -1,   393,    -1,
     529,    -1,   523,   490,   529,    -1,    73,   789,    -1,    -1,
     789,    -1,    -1,   517,    -1,   526,   490,   517,    -1,   518,
      -1,   527,   490,   518,    -1,   520,    -1,   528,   490,   520,
      -1,   784,   770,    -1,   306,   784,    -1,   306,   784,   475,
     828,    -1,   306,   784,   486,   748,   487,    -1,    92,   588,
     360,   776,   532,    -1,    92,   588,   360,   185,   264,   149,
     776,   532,    -1,   536,    -1,    -1,   148,   778,   534,    -1,
      92,   588,   394,   852,    36,   148,   778,   534,   851,    -1,
      92,   588,   394,   185,   264,   149,   852,    36,   148,   778,
     534,   851,    -1,   486,   747,   487,    -1,    -1,    29,   360,
     776,   536,    -1,    29,   360,   185,   149,   776,   536,    -1,
     539,    -1,   536,   539,    -1,   448,    -1,   472,    -1,    -1,
       4,    -1,   477,     4,    -1,   478,     4,    -1,   541,    -1,
      36,   691,    -1,    55,   538,    -1,   105,    -1,   262,   105,
      -1,   193,   540,   538,    -1,   242,   538,    -1,   250,   538,
      -1,   262,   242,    -1,   262,   250,    -1,   293,    54,   789,
      -1,   360,   255,   789,    -1,   380,   537,   538,    -1,   338,
      -1,   338,   537,   538,    -1,    54,    -1,    -1,   782,    -1,
     477,   782,    -1,   478,   782,    -1,    19,   543,    -1,    47,
     543,    -1,   380,   543,    -1,    79,   543,    -1,   140,   543,
      -1,   345,   543,    -1,   451,    -1,   407,    -1,    -1,    92,
     588,   394,   776,   486,   576,   487,   564,   556,    -1,    92,
     588,   394,   185,   264,   149,   776,   486,   576,   487,   564,
     556,    -1,    -1,   545,   568,    -1,   583,    -1,   859,    -1,
     744,    -1,   538,    -1,   783,    -1,   263,    -1,   486,   536,
     487,    -1,    -1,   783,    -1,   262,    22,    -1,   339,    -1,
      58,    -1,   366,   269,    -1,   366,   114,    -1,    85,   778,
     551,    -1,   551,    -1,   563,    -1,    73,   789,    -1,   264,
     269,    -1,   269,    -1,   422,   575,    -1,   312,   216,   575,
      -1,    67,   486,   719,   487,   558,    -1,   114,   720,    -1,
     171,   589,    36,   184,   547,    -1,   327,   776,   578,   586,
     554,    -1,   567,   548,    -1,   279,   427,   549,    -1,   553,
      -1,   580,    -1,   553,   580,    -1,   580,   553,    -1,    -1,
     283,   486,   570,   487,    -1,    -1,   279,    79,   134,    -1,
     279,    79,   119,   348,    -1,   279,    79,   311,   348,    -1,
      -1,   486,   561,   487,    -1,   262,   196,    -1,    -1,    85,
     778,   584,    -1,   584,    -1,    78,    -1,    86,    -1,   115,
      -1,   184,    -1,   195,    -1,   382,    -1,   385,    -1,    27,
      -1,   581,    -1,   561,   490,   581,    -1,   429,   194,   572,
      -1,   116,    -1,   264,   116,    -1,   198,   117,    -1,   198,
     187,    -1,   448,   557,    -1,   448,   277,    -1,   450,   277,
      -1,    -1,   486,   571,   487,    -1,   566,   192,   560,    -1,
     566,   146,   560,    -1,    -1,   793,    -1,   264,   116,    -1,
     116,    -1,   198,   187,    -1,   198,   117,    -1,   264,   431,
      -1,   262,   196,    -1,   784,   689,   555,   579,    -1,   552,
      -1,   570,   490,   552,    -1,   574,    -1,   571,   490,   574,
      -1,   784,    -1,   569,    -1,   587,    -1,   559,    -1,   793,
     475,   546,    -1,   793,    -1,   448,   565,    -1,    -1,   585,
      -1,    -1,   784,    -1,   486,   582,   487,    -1,    -1,   579,
     550,    -1,    -1,   279,   119,   549,    -1,   793,   475,   546,
      -1,   793,    -1,   793,   488,   793,   475,   546,    -1,   793,
     488,   793,    -1,   577,    -1,   582,   490,   577,    -1,   689,
      -1,   786,   790,   481,   416,    -1,   367,   786,   790,   481,
     416,    -1,    67,   486,   719,   487,   545,    -1,   422,   486,
     582,   487,   575,   545,    -1,   422,   562,   545,    -1,   312,
     216,   486,   582,   487,   575,   545,    -1,   312,   216,   562,
     545,    -1,   164,   216,   486,   582,   487,   327,   776,   578,
     586,   554,   545,    -1,   573,    -1,   585,   490,   573,    -1,
     240,   168,    -1,   240,   297,    -1,   240,   372,    -1,    -1,
     226,   776,   566,    -1,   400,    -1,   398,    -1,   230,   400,
      -1,   230,   398,    -1,   173,   400,    -1,   173,   398,    -1,
     425,    -1,    -1,    30,    -1,    54,   114,    -1,   134,   591,
     185,   149,   593,   594,    -1,   134,   591,   593,   594,    -1,
     134,   592,   185,   149,   777,   594,    -1,   134,   592,   777,
     594,    -1,   134,   595,   778,   279,   789,   594,    -1,   134,
     595,   185,   149,   778,   279,   789,   594,    -1,   394,    -1,
     360,    -1,   169,    -1,   237,    -1,   441,    -1,   241,   441,
      -1,   194,    -1,   164,   394,    -1,    74,    -1,    89,    -1,
     382,    -1,   401,   355,   296,    -1,   401,   355,   126,    -1,
     401,   355,   399,    -1,   401,   355,    82,    -1,    21,   243,
      -1,   143,   410,    -1,   152,    -1,   164,   106,   452,    -1,
     318,    -1,   352,    -1,   363,    -1,   789,    -1,   593,   490,
     789,    -1,    58,    -1,   339,    -1,    -1,   304,    -1,   349,
      -1,   410,    -1,    92,   597,   776,   598,    36,   719,    -1,
     169,    -1,   237,    -1,   486,   487,    -1,   486,   748,   487,
      -1,   516,   427,   837,   366,   527,   667,   838,   521,    -1,
      90,   612,   776,   578,   610,   601,   606,   615,   602,   537,
     607,    -1,    90,   486,   797,   487,   405,   606,   615,   537,
     607,    -1,   167,    -1,   405,    -1,   604,   121,   783,    -1,
      -1,   614,    -1,   603,   490,   614,    -1,   429,    -1,    -1,
      36,    -1,    -1,   317,    -1,    -1,   611,    -1,   486,   616,
     487,    -1,   820,    -1,   538,    -1,   479,    -1,   486,   603,
     487,    -1,    -1,   793,   608,    -1,   448,   277,    -1,    -1,
     611,   613,    -1,    -1,    50,    -1,    -1,    50,    -1,   277,
      -1,   166,    -1,   120,   605,   783,    -1,   269,   605,   783,
      -1,    94,    -1,   180,    -1,   319,   605,   783,    -1,   142,
     605,   783,    -1,   163,   319,   582,    -1,   163,   319,   479,
      -1,   163,   264,   269,   582,    -1,   163,   269,   582,    -1,
     138,   783,    -1,   820,    -1,   783,    -1,   383,    -1,   384,
      -1,   609,    -1,   616,   490,   609,    -1,   619,    -1,   618,
      -1,   486,   619,   487,    -1,   486,   618,   487,    -1,   621,
      -1,   620,   632,    -1,   620,   631,   659,   638,    -1,   620,
     631,   637,   660,    -1,   622,   620,    -1,   622,   620,   632,
      -1,   622,   620,   631,   659,   638,    -1,   622,   620,   631,
     637,   660,    -1,   621,    -1,   618,    -1,   359,   630,   772,
     625,   667,   683,   654,   658,   728,   642,    -1,   359,   629,
     773,   625,   667,   683,   654,   658,   728,   642,    -1,   666,
      -1,   394,   677,    -1,   620,   421,   628,   620,    -1,   620,
     208,   628,   620,    -1,   620,   144,   628,   620,    -1,   448,
     623,    -1,   472,   623,    -1,   448,   325,   623,    -1,   624,
      -1,   623,   490,   624,    -1,   778,   791,    36,   486,   797,
     487,    -1,   210,   626,    -1,    -1,   400,   627,   776,    -1,
     398,   627,   776,    -1,   230,   400,   627,   776,    -1,   230,
     398,   627,   776,    -1,   173,   400,   627,   776,    -1,   173,
     398,   627,   776,    -1,   425,   627,   776,    -1,   394,   776,
      -1,   776,    -1,   394,    -1,    -1,    27,    -1,   129,    -1,
      -1,   129,    -1,   129,   279,   486,   747,   487,    -1,    27,
      -1,    -1,   632,    -1,    -1,   285,    54,   633,    -1,   634,
      -1,   633,   490,   634,    -1,   719,   429,   744,   636,    -1,
     719,   635,   636,    -1,    37,    -1,   123,    -1,    -1,   471,
     159,    -1,   471,   220,    -1,    -1,   639,   640,    -1,   640,
     639,    -1,   639,    -1,   640,    -1,   637,    -1,    -1,   227,
     648,    -1,   227,   648,   490,   649,    -1,   157,   653,   650,
     652,   280,    -1,   157,   653,   652,   280,    -1,   276,   649,
      -1,   276,   650,   652,    -1,     4,   481,    -1,     9,   481,
      -1,     4,   301,    -1,     9,   301,    -1,     9,    -1,     9,
     348,    -1,   429,   350,   644,    -1,    -1,   784,    -1,    -1,
     643,   486,   641,   487,   647,    -1,   641,    -1,   641,   486,
     784,   487,    -1,   641,   486,   784,   490,     9,   487,    -1,
     396,   644,    -1,   645,    -1,    -1,   334,   486,     9,   487,
      -1,    -1,   719,    -1,    27,    -1,   719,    -1,   721,    -1,
     477,   651,    -1,   478,   651,    -1,   782,    -1,     4,    -1,
     347,    -1,   348,    -1,   159,    -1,   261,    -1,   176,    54,
     655,    -1,    -1,   656,    -1,   655,   490,   656,    -1,   719,
      -1,   657,    -1,   486,   487,    -1,   179,   719,    -1,    -1,
     661,    -1,   162,   321,   280,    -1,   659,    -1,    -1,   662,
      -1,   661,   662,    -1,   663,   664,   665,    -1,   162,   427,
      -1,   162,   262,   216,   427,    -1,   162,   369,    -1,   162,
     216,   369,    -1,   274,   775,    -1,    -1,   268,    -1,   373,
     235,    -1,    -1,   435,   486,   747,   487,    -1,   666,   490,
     486,   747,   487,    -1,   167,   668,    -1,    -1,   669,    -1,
     668,   490,   669,    -1,   677,   672,   646,    -1,   678,   673,
     646,    -1,   221,   678,   673,    -1,   618,   672,   646,    -1,
     221,   618,   672,    -1,   670,    -1,   486,   670,   487,   671,
      -1,   486,   670,   487,    -1,   669,    93,   215,   669,    -1,
     669,   674,   215,   669,   676,    -1,   669,   215,   669,   676,
      -1,   669,   258,   674,   215,   669,    -1,   669,   258,   215,
     669,    -1,    36,   784,   486,   777,   487,    -1,    36,   785,
      -1,   784,   486,   777,   487,    -1,   784,    -1,   671,    -1,
      -1,   671,    -1,    36,   486,   684,   487,    -1,    36,   784,
     486,   684,   487,    -1,   784,   486,   684,   487,    -1,    -1,
     168,   675,    -1,   224,   675,    -1,   343,   675,    -1,   200,
      -1,   288,    -1,    -1,   429,   486,   777,   487,    -1,   279,
     719,    -1,   776,    -1,   776,   479,    -1,   280,   776,    -1,
     280,   486,   776,   487,    -1,   724,   682,    -1,   348,   167,
     486,   680,   487,   682,    -1,   724,   681,    -1,   679,    -1,
     680,   490,   679,    -1,    36,   486,   684,   487,    -1,    -1,
     472,   286,    -1,    -1,   445,   719,    -1,    -1,   685,    -1,
     684,   490,   685,    -1,   784,   689,   686,    -1,    73,   789,
      -1,    -1,   784,   689,    -1,   687,   490,   784,   689,    -1,
     347,    -1,   388,    -1,   691,   690,    -1,   367,   691,   690,
      -1,   691,    35,   484,   782,   485,    -1,   367,   691,    35,
     484,   782,   485,    -1,   691,    35,    -1,   367,   691,    35,
      -1,   688,   486,   687,   487,    -1,   238,   486,   750,   487,
      -1,   690,   484,   485,    -1,   690,   484,   782,   485,    -1,
      -1,   693,    -1,   695,    -1,   697,    -1,   701,    -1,   707,
      -1,   708,   718,    -1,   708,   486,   782,   487,    -1,   695,
      -1,   698,    -1,   702,    -1,   707,    -1,   788,   694,    -1,
     486,   747,   487,    -1,    -1,   206,    -1,   207,    -1,   374,
      -1,    49,    -1,   322,    -1,   160,   696,    -1,   133,   308,
      -1,   112,   694,    -1,   111,   694,    -1,   272,   694,    -1,
      52,    -1,   486,   782,   487,    -1,    -1,   699,    -1,   700,
      -1,   699,    -1,   700,    -1,    51,   706,   486,   747,   487,
      -1,    51,   706,    -1,   703,    -1,   704,    -1,   703,    -1,
     704,    -1,   705,   486,   782,   487,    -1,   705,    -1,    65,
     706,    -1,    64,   706,    -1,   436,    -1,   257,    65,   706,
      -1,   257,    64,   706,    -1,   259,   706,    -1,   438,    -1,
      -1,   404,   486,   782,   487,   709,    -1,   404,   709,    -1,
     403,   486,   782,   487,   709,    -1,   403,   709,    -1,   209,
      -1,   472,   403,   469,    -1,   450,   403,   469,    -1,    -1,
     466,    -1,   467,    -1,   252,    -1,   253,    -1,   108,    -1,
     109,    -1,   182,    -1,   183,    -1,   248,    -1,   249,    -1,
     356,    -1,   357,    -1,   246,    -1,   247,    -1,   244,    -1,
     245,    -1,   710,    -1,   711,    -1,   712,    -1,   713,    -1,
     714,    -1,   715,    -1,   716,    -1,   717,    -1,   710,   405,
     711,    -1,   712,   405,   713,    -1,   712,   405,   714,    -1,
     712,   405,   715,    -1,   713,   405,   714,    -1,   713,   405,
     715,    -1,   714,   405,   715,    -1,    -1,   721,    -1,   719,
      11,   689,    -1,   719,    73,   789,    -1,   719,    41,   403,
     469,   719,    -1,   477,   719,    -1,   478,   719,    -1,   719,
     477,   719,    -1,   719,   478,   719,    -1,   719,   479,   719,
      -1,   719,   480,   719,    -1,   719,   481,   719,    -1,   719,
     482,   719,    -1,   719,   473,   719,    -1,   719,   474,   719,
      -1,   719,   475,   719,    -1,   719,    16,   719,    -1,   719,
      17,   719,    -1,   719,    18,   719,    -1,   719,   743,   719,
      -1,   743,   719,    -1,   719,   743,    -1,   719,    33,   719,
      -1,   719,   284,   719,    -1,   264,   719,    -1,   470,   719,
      -1,   719,   172,   719,    -1,   719,   226,   719,    -1,   719,
     226,   719,   142,   719,    -1,   719,   470,   226,   719,    -1,
     719,   470,   226,   719,   142,   719,    -1,   719,   186,   719,
      -1,   719,   186,   719,   142,   719,    -1,   719,   470,   186,
     719,    -1,   719,   470,   186,   719,   142,   719,    -1,   719,
     371,   405,   719,    -1,   719,   371,   405,   719,   142,   719,
      -1,   719,   470,   371,   405,   719,    -1,   719,   470,   371,
     405,   719,   142,   719,    -1,   719,   212,   269,    -1,   719,
     213,    -1,   719,   212,   264,   269,    -1,   719,   264,   269,
      -1,   719,   267,    -1,   739,    -1,   739,    15,   719,    -1,
     766,    15,   719,    -1,   739,   290,   739,    -1,   719,   212,
     412,    -1,   719,   212,   264,   412,    -1,   719,   212,   155,
      -1,   719,   212,   264,   155,    -1,   719,   212,   423,    -1,
     719,   212,   264,   423,    -1,   719,   212,   129,   167,   719,
      -1,   719,   212,   264,   129,   167,   719,    -1,   719,   212,
     274,   486,   750,   487,    -1,   719,   212,   264,   274,   486,
     750,   487,    -1,   719,    48,   771,   720,    33,   719,    -1,
     719,   470,    48,   771,   720,    33,   719,    -1,   719,    48,
     391,   720,    33,   719,    -1,   719,   470,    48,   391,   720,
      33,   719,    -1,   719,   191,   760,    -1,   719,   470,   191,
     760,    -1,   719,   745,   740,   618,    -1,   719,   745,   740,
     486,   719,   487,    -1,   114,    -1,    35,   484,   747,   485,
      -1,   721,    -1,   720,    11,   689,    -1,   477,   720,    -1,
     478,   720,    -1,   720,   477,   720,    -1,   720,   478,   720,
      -1,   720,   479,   720,    -1,   720,   480,   720,    -1,   720,
     481,   720,    -1,   720,   482,   720,    -1,   720,   473,   720,
      -1,   720,   474,   720,    -1,   720,   475,   720,    -1,   720,
      16,   720,    -1,   720,    17,   720,    -1,   720,    18,   720,
      -1,   720,   743,   720,    -1,   743,   720,    -1,   720,   743,
      -1,   720,   212,   129,   167,   720,    -1,   720,   212,   264,
     129,   167,   720,    -1,   720,   212,   274,   486,   750,   487,
      -1,   720,   212,   264,   274,   486,   750,   487,    -1,   766,
      -1,   781,    -1,   491,     9,    -1,   492,   770,    -1,    10,
     770,    -1,   486,   719,   487,   770,    -1,   761,    -1,   723,
     770,    -1,   618,    -1,   618,   769,    -1,   149,   618,    -1,
     780,   486,   487,    -1,   780,   486,   748,   631,   487,    -1,
     780,   486,   437,   749,   631,   487,    -1,   780,   486,   748,
     490,   437,   749,   631,   487,    -1,   780,   486,    27,   748,
     631,   487,    -1,   780,   486,   129,   748,   631,   487,    -1,
     780,   486,   479,   487,    -1,   722,   726,   727,   731,    -1,
     725,    -1,   722,    -1,   725,    -1,    74,   162,   486,   719,
     487,    -1,    98,    -1,   101,    -1,   101,   486,   782,   487,
      -1,   102,    -1,   102,   486,   782,   487,    -1,   231,    -1,
     231,   486,   782,   487,    -1,   232,    -1,   232,   486,   782,
     487,    -1,    99,    -1,   103,    -1,   365,    -1,   428,    -1,
      97,    -1,   100,    -1,    61,   486,   719,    36,   689,   487,
      -1,   415,   486,   719,    36,   689,   487,    -1,   154,   486,
     751,   487,    -1,   291,   486,   753,   487,    -1,   305,   486,
     755,   487,    -1,   390,   486,   756,   487,    -1,   409,   486,
     719,    36,   689,   487,    -1,   411,   486,    53,   759,   487,
      -1,   411,   486,   222,   759,   487,    -1,   411,   486,   406,
     759,   487,    -1,   411,   486,   759,   487,    -1,   270,   486,
     719,   490,   719,   487,    -1,    72,   486,   747,   487,    -1,
     449,   176,   486,   632,   487,    -1,    -1,   158,   486,   445,
     719,   487,    -1,    -1,   447,   729,    -1,    -1,   730,    -1,
     729,   490,   730,    -1,   784,    36,   732,    -1,   289,   732,
      -1,   289,   784,    -1,    -1,   486,   733,   734,   631,   735,
     487,    -1,   784,    -1,    -1,   298,    54,   747,    -1,    -1,
     320,   736,    -1,   348,   736,    -1,    -1,   737,    -1,    48,
     737,    33,   737,    -1,   418,   307,    -1,   418,   161,    -1,
      96,   347,    -1,   719,   307,    -1,   719,   161,    -1,   347,
     486,   747,   487,    -1,   347,   486,   487,    -1,   738,    -1,
     486,   747,   490,   719,   487,    -1,    34,    -1,   376,    -1,
      27,    -1,     8,    -1,   742,    -1,   477,    -1,   478,    -1,
     479,    -1,   480,    -1,   481,    -1,   482,    -1,   473,    -1,
     474,    -1,   475,    -1,    16,    -1,    17,    -1,    18,    -1,
       8,    -1,   281,   486,   746,   487,    -1,   741,    -1,   281,
     486,   746,   487,    -1,   741,    -1,   281,   486,   746,   487,
      -1,   226,    -1,   470,   226,    -1,   172,    -1,   470,   172,
      -1,   186,    -1,   470,   186,    -1,   741,    -1,   784,   488,
     746,    -1,   719,    -1,   747,   490,   719,    -1,   749,    -1,
     748,   490,   749,    -1,   719,    -1,   792,    13,   719,    -1,
     792,    14,   719,    -1,   689,    -1,   750,   490,   689,    -1,
     752,   167,   719,    -1,    -1,     3,    -1,   710,    -1,   711,
      -1,   712,    -1,   713,    -1,   714,    -1,   715,    -1,   716,
      -1,   717,    -1,   783,    -1,   719,   754,   757,   758,    -1,
     719,   754,   757,    -1,   302,   719,    -1,   720,   191,   720,
      -1,    -1,   719,   757,   758,    -1,   719,   758,   757,    -1,
     719,   757,    -1,   719,   758,    -1,   747,    -1,    -1,   167,
     719,    -1,   162,   719,    -1,   719,   167,   747,    -1,   167,
     747,    -1,   747,    -1,   618,    -1,   486,   747,   487,    -1,
      60,   765,   762,   764,   140,    -1,   763,    -1,   762,   763,
      -1,   444,   719,   402,   719,    -1,   136,   719,    -1,    -1,
     719,    -1,    -1,   784,    -1,   784,   769,    -1,   488,   779,
      -1,   488,   479,    -1,   484,   719,   485,    -1,   484,   768,
     493,   768,   485,    -1,   719,    -1,    -1,   767,    -1,   769,
     767,    -1,    -1,   770,   767,    -1,    40,    -1,    -1,   773,
      -1,    -1,   774,    -1,   773,   490,   774,    -1,   719,    36,
     794,    -1,   719,     3,    -1,   719,    -1,   479,    -1,   776,
      -1,   775,   490,   776,    -1,   785,    -1,   784,   769,    -1,
     778,    -1,   777,   490,   778,    -1,   784,    -1,   793,    -1,
     787,    -1,   784,   769,    -1,   782,    -1,     4,    -1,   783,
     770,    -1,     6,    -1,     7,    -1,   780,   783,    -1,   780,
     486,   748,   631,   487,   783,    -1,   692,   783,    -1,   708,
     486,   719,   487,   718,    -1,   708,   782,   718,    -1,   708,
     783,   718,    -1,   412,    -1,   155,    -1,   269,    -1,     9,
      -1,     5,    -1,     3,    -1,   853,    -1,   854,    -1,   784,
      -1,     5,    -1,     3,    -1,   853,    -1,   858,    -1,     3,
      -1,   853,    -1,   855,    -1,     3,    -1,   853,    -1,   856,
      -1,   784,    -1,   784,   790,    -1,   488,   779,    -1,   790,
     488,   779,    -1,   486,   777,   487,    -1,    -1,   786,    -1,
       3,    -1,   857,    -1,   853,    -1,   859,    -1,   793,    -1,
       5,    -1,   309,   778,   796,    36,   797,    -1,   486,   750,
     487,    -1,    -1,   617,    -1,   512,    -1,   599,    -1,   836,
      -1,    92,   352,   784,   799,    -1,    92,   352,   185,   264,
     149,   784,   799,    -1,   799,   800,    -1,    -1,   544,    -1,
     801,    -1,   531,    -1,   848,    -1,    92,   807,   194,   804,
     805,   279,   776,   803,   486,   528,   487,   806,   683,    -1,
      92,   807,   194,   804,   185,   264,   149,   572,   279,   776,
     803,   486,   528,   487,   806,   683,    -1,   784,    -1,   429,
     802,    -1,    -1,    81,    -1,    -1,   572,    -1,    -1,   448,
     557,    -1,    -1,   422,    -1,    -1,    29,   394,   677,   366,
     352,   778,    -1,    29,   394,   185,   149,   677,   366,   352,
     778,    -1,    29,   360,   776,   366,   352,   778,    -1,    29,
     360,   185,   149,   776,   366,   352,   778,    -1,    29,   441,
     776,   366,   352,   778,    -1,    29,   441,   185,   149,   776,
     366,   352,   778,    -1,   163,    68,    -1,    68,    -1,   151,
     107,   783,   607,    -1,   190,   107,   783,    -1,   150,   815,
      -1,   150,   819,   813,   815,    -1,   150,   439,   815,    -1,
     150,   486,   818,   487,   815,    -1,   439,    -1,    -1,   820,
      -1,   538,    -1,    -1,   617,    -1,   512,    -1,   599,    -1,
     836,    -1,   850,    -1,     3,    -1,   853,    -1,   857,    -1,
     816,    -1,   783,    -1,   821,    -1,   818,   490,   821,    -1,
      32,    -1,    31,    -1,   412,    -1,   155,    -1,   279,    -1,
     817,    -1,   822,   814,    -1,   816,    -1,   819,    -1,   366,
     824,    -1,   366,   230,   824,    -1,   366,   364,   824,    -1,
     825,    -1,   846,   167,    96,    -1,   403,   469,   827,    -1,
     352,   783,    -1,   846,   405,   828,    -1,   846,   475,   828,
      -1,   846,   405,   114,    -1,   846,   475,   114,    -1,   820,
      -1,   538,    -1,   783,    -1,     3,    -1,   708,   783,   718,
      -1,   708,   486,   782,   487,   783,    -1,   538,    -1,   114,
      -1,   230,    -1,   826,    -1,   828,   490,   826,    -1,   229,
     830,    -1,   783,    -1,   430,   833,   835,   813,    -1,   430,
     833,   835,   813,   776,    -1,   430,   833,   835,   813,   840,
      -1,   430,   486,   834,   487,    -1,   430,   486,   834,   487,
     776,   791,    -1,   819,    -1,   439,    -1,   166,    -1,   168,
      -1,     3,    -1,   168,    -1,    -1,   832,    -1,   834,   490,
     832,    -1,   166,    -1,    -1,   516,   119,   167,   837,   839,
     838,   521,    -1,   677,    -1,   677,   784,    -1,   677,    36,
     784,    -1,   445,   719,    -1,    -1,   429,   668,    -1,    -1,
     819,   813,    -1,   819,   813,   776,   791,    -1,   337,   843,
      -1,   846,    -1,    27,    -1,   842,    -1,   403,   469,    -1,
     407,   214,   225,    -1,   845,   617,    -1,   845,   846,    -1,
     845,   403,   469,    -1,   845,   407,   214,   225,    -1,   845,
      27,    -1,   370,    -1,   124,    -1,   784,    -1,   846,   488,
     784,    -1,    56,   722,    -1,    92,   588,   441,   776,   578,
     806,    36,   617,   849,    -1,    92,   284,   335,   588,   441,
     776,   578,   806,    36,   617,   849,    -1,    92,   588,   325,
     441,   776,   486,   582,   487,   806,    36,   617,   849,    -1,
      92,   284,   335,   588,   325,   441,   776,   486,   582,   487,
     806,    36,   617,   849,    -1,   448,    67,   282,    -1,   448,
      59,    67,   282,    -1,   448,   230,    67,   282,    -1,    -1,
      92,   588,   394,   852,    36,   617,   851,    -1,    92,   588,
     394,   185,   264,   149,   852,    36,   617,   851,    -1,   448,
     106,    -1,   448,   262,   106,    -1,    -1,   776,   578,   564,
     556,    -1,    19,    -1,    20,    -1,    21,    -1,    22,    -1,
      23,    -1,    24,    -1,    25,    -1,    26,    -1,    28,    -1,
      29,    -1,    30,    -1,    38,    -1,    39,    -1,    41,    -1,
      42,    -1,    43,    -1,    45,    -1,    46,    -1,    47,    -1,
      54,    -1,    55,    -1,    56,    -1,    57,    -1,    58,    -1,
      59,    -1,    62,    -1,    63,    -1,    66,    -1,    68,    -1,
      69,    -1,    70,    -1,    71,    -1,    76,    -1,    77,    -1,
      78,    -1,    79,    -1,    80,    -1,    82,    -1,    83,    -1,
      84,    -1,    86,    -1,    87,    -1,    88,    -1,    89,    -1,
      90,    -1,    91,    -1,    94,    -1,    95,    -1,    96,    -1,
     104,    -1,   105,    -1,   106,    -1,   107,    -1,   108,    -1,
     109,    -1,   110,    -1,   113,    -1,   115,    -1,   117,    -1,
     118,    -1,   119,    -1,   120,    -1,   121,    -1,   122,    -1,
     124,    -1,   125,    -1,   126,    -1,   127,    -1,   128,    -1,
     131,    -1,   132,    -1,   133,    -1,   134,    -1,   135,    -1,
     137,    -1,   138,    -1,   139,    -1,   141,    -1,   142,    -1,
     143,    -1,   145,    -1,   146,    -1,   147,    -1,   148,    -1,
     150,    -1,   151,    -1,   152,    -1,   153,    -1,   156,    -1,
     158,    -1,   159,    -1,   161,    -1,   163,    -1,   165,    -1,
     169,    -1,   170,    -1,   171,    -1,   173,    -1,   175,    -1,
     178,    -1,   180,    -1,   181,    -1,   182,    -1,   183,    -1,
     184,    -1,   185,    -1,   187,    -1,   188,    -1,   189,    -1,
     190,    -1,   192,    -1,   193,    -1,   194,    -1,   195,    -1,
     196,    -1,   197,    -1,   199,    -1,   202,    -1,   203,    -1,
     204,    -1,   205,    -1,   211,    -1,   214,    -1,   216,    -1,
     217,    -1,   218,    -1,   219,    -1,   220,    -1,   223,    -1,
     225,    -1,   228,    -1,   229,    -1,   230,    -1,   233,    -1,
     234,    -1,   235,    -1,   236,    -1,   237,    -1,   239,    -1,
     240,    -1,   241,    -1,   242,    -1,   243,    -1,   244,    -1,
     245,    -1,   246,    -1,   247,    -1,   248,    -1,   249,    -1,
     250,    -1,   251,    -1,   252,    -1,   253,    -1,   254,    -1,
     255,    -1,   256,    -1,   260,    -1,   261,    -1,   262,    -1,
     265,    -1,   266,    -1,   268,    -1,   271,    -1,   273,    -1,
     274,    -1,   275,    -1,   277,    -1,   278,    -1,   281,    -1,
     282,    -1,   283,    -1,   286,    -1,   289,    -1,   292,    -1,
     293,    -1,   294,    -1,   295,    -1,   296,    -1,   297,    -1,
     298,    -1,   299,    -1,   300,    -1,   301,    -1,   303,    -1,
     304,    -1,   306,    -1,   307,    -1,   309,    -1,   310,    -1,
     311,    -1,   313,    -1,   314,    -1,   315,    -1,   316,    -1,
     317,    -1,   318,    -1,   319,    -1,   320,    -1,   321,    -1,
     323,    -1,   324,    -1,   325,    -1,   326,    -1,   328,    -1,
     329,    -1,   330,    -1,   331,    -1,   332,    -1,   333,    -1,
     334,    -1,   335,    -1,   336,    -1,   337,    -1,   338,    -1,
     339,    -1,   341,    -1,   342,    -1,   344,    -1,   345,    -1,
     346,    -1,   348,    -1,   349,    -1,   350,    -1,   351,    -1,
     352,    -1,   353,    -1,   354,    -1,   355,    -1,   356,    -1,
     357,    -1,   358,    -1,   360,    -1,   361,    -1,   362,    -1,
     363,    -1,   364,    -1,   366,    -1,   368,    -1,   369,    -1,
     370,    -1,   372,    -1,   373,    -1,   375,    -1,   377,    -1,
     378,    -1,   379,    -1,   380,    -1,   381,    -1,   382,    -1,
     383,    -1,   384,    -1,   385,    -1,   386,    -1,   387,    -1,
     389,    -1,   392,    -1,   393,    -1,   395,    -1,   397,    -1,
     398,    -1,   399,    -1,   400,    -1,   401,    -1,   407,    -1,
     408,    -1,   410,    -1,   413,    -1,   414,    -1,   416,    -1,
     417,    -1,   418,    -1,   419,    -1,   420,    -1,   423,    -1,
     424,    -1,   425,    -1,   426,    -1,   427,    -1,   430,    -1,
     431,    -1,   432,    -1,   433,    -1,   434,    -1,   438,    -1,
     440,    -1,   441,    -1,   442,    -1,   443,    -1,   446,    -1,
     449,    -1,   450,    -1,   451,    -1,   452,    -1,   453,    -1,
     454,    -1,   466,    -1,   467,    -1,   468,    -1,   469,    -1,
      48,    -1,    49,    -1,    51,    -1,    52,    -1,    64,    -1,
      65,    -1,    72,    -1,   111,    -1,   112,    -1,   149,    -1,
     154,    -1,   160,    -1,   177,    -1,   201,    -1,   206,    -1,
     207,    -1,   209,    -1,   238,    -1,   257,    -1,   259,    -1,
     263,    -1,   270,    -1,   272,    -1,   287,    -1,   291,    -1,
     305,    -1,   308,    -1,   322,    -1,   347,    -1,   367,    -1,
     374,    -1,   388,    -1,   390,    -1,   403,    -1,   404,    -1,
     409,    -1,   411,    -1,   415,    -1,   435,    -1,   436,    -1,
     455,    -1,   456,    -1,   457,    -1,   458,    -1,   459,    -1,
     460,    -1,   461,    -1,   462,    -1,   463,    -1,   464,    -1,
     465,    -1,    44,    -1,    50,    -1,    74,    -1,    81,    -1,
      93,    -1,   100,    -1,   166,    -1,   168,    -1,   172,    -1,
     186,    -1,   200,    -1,   212,    -1,   213,    -1,   215,    -1,
     224,    -1,   226,    -1,   238,    -1,   258,    -1,   267,    -1,
     288,    -1,   290,    -1,   343,    -1,   371,    -1,   388,    -1,
     396,    -1,   439,    -1,    44,    -1,    50,    -1,    74,    -1,
      81,    -1,    93,    -1,   100,    -1,   166,    -1,   168,    -1,
     172,    -1,   186,    -1,   200,    -1,   212,    -1,   213,    -1,
     215,    -1,   224,    -1,   226,    -1,   258,    -1,   267,    -1,
     288,    -1,   290,    -1,   343,    -1,   371,    -1,   396,    -1,
     415,    -1,   439,    -1,    48,    -1,    49,    -1,    51,    -1,
      52,    -1,    65,    -1,    64,    -1,    72,    -1,   111,    -1,
     112,    -1,   149,    -1,   154,    -1,   160,    -1,   177,    -1,
     201,    -1,   207,    -1,   209,    -1,   206,    -1,   238,    -1,
     257,    -1,   259,    -1,   263,    -1,   270,    -1,   272,    -1,
     287,    -1,   291,    -1,   305,    -1,   308,    -1,   322,    -1,
     347,    -1,   367,    -1,   374,    -1,   388,    -1,   390,    -1,
     403,    -1,   404,    -1,   409,    -1,   411,    -1,   415,    -1,
     435,    -1,   436,    -1,   455,    -1,   456,    -1,   457,    -1,
     458,    -1,   459,    -1,   460,    -1,   461,    -1,   462,    -1,
     463,    -1,   464,    -1,   465,    -1,    44,    -1,    50,    -1,
      74,    -1,    81,    -1,    93,    -1,   100,    -1,   166,    -1,
     168,    -1,   172,    -1,   186,    -1,   200,    -1,   212,    -1,
     213,    -1,   215,    -1,   224,    -1,   226,    -1,   238,    -1,
     258,    -1,   267,    -1,   288,    -1,   290,    -1,   343,    -1,
     371,    -1,   388,    -1,   396,    -1,   415,    -1,   439,    -1,
      27,    -1,    31,    -1,    32,    -1,    33,    -1,    34,    -1,
      35,    -1,    36,    -1,    37,    -1,    40,    -1,    53,    -1,
      60,    -1,    61,    -1,    67,    -1,    73,    -1,    75,    -1,
      85,    -1,    92,    -1,    97,    -1,    98,    -1,    99,    -1,
     101,    -1,   102,    -1,   103,    -1,   114,    -1,   116,    -1,
     123,    -1,   129,    -1,   130,    -1,   136,    -1,   140,    -1,
     144,    -1,   155,    -1,   157,    -1,   162,    -1,   164,    -1,
     167,    -1,   174,    -1,   176,    -1,   179,    -1,   191,    -1,
     198,    -1,   208,    -1,   210,    -1,   221,    -1,   222,    -1,
     227,    -1,   231,    -1,   232,    -1,   264,    -1,   269,    -1,
     276,    -1,   279,    -1,   280,    -1,   284,    -1,   285,    -1,
     302,    -1,   312,    -1,   327,    -1,   340,    -1,   359,    -1,
     365,    -1,   376,    -1,   391,    -1,   394,    -1,   402,    -1,
     405,    -1,   406,    -1,   412,    -1,   421,    -1,   422,    -1,
     428,    -1,   429,    -1,   437,    -1,   444,    -1,   445,    -1,
     447,    -1,   448,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   456,   456,   472,   484,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   527,     9,
      18,    27,    36,    45,    54,    63,    72,    85,    87,    93,
      94,    99,   103,   107,   118,   126,   130,   139,   148,   157,
     166,   175,   184,   192,   200,   209,   218,   227,   236,   253,
     262,   271,   280,   290,   303,   318,   327,   335,   350,   358,
     368,   378,   385,   392,   400,   407,   418,   419,   424,   428,
     433,   438,   446,   447,   452,   456,   457,     7,    13,    19,
      25,     6,    15,    25,    35,    45,    55,    65,    75,    85,
      95,   106,   117,   127,   140,   141,     8,    21,    27,    34,
      40,    47,    57,    61,    70,    79,    88,    95,    96,   101,
     113,   118,   143,   153,   163,   169,   180,   191,   206,   207,
     213,   214,   219,   220,   226,   227,   231,   232,   237,   239,
     245,   246,   250,   251,   256,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    41,    42,
      69,    70,    71,    72,    73,    74,    78,    79,    84,    89,
      90,    91,    92,    93,    98,   105,   106,   107,   124,   131,
     138,   148,   158,   170,   179,   188,   207,   214,   219,   221,
     223,   225,   228,   233,   234,   238,   239,   240,   241,   246,
     250,   251,   256,   263,   268,   269,   270,   271,   272,   273,
     274,   275,   281,   282,   286,   291,   298,   305,   312,   324,
     325,   326,   327,   331,   336,   337,   338,   343,   348,   349,
     350,   351,   352,   353,   358,   381,   385,   392,   393,   397,
     401,   402,   403,   407,   411,   419,   420,   425,   426,   430,
     438,   439,   444,   445,   449,   454,   458,   462,   467,   475,
     476,   480,   481,   487,   498,   511,   525,   539,   553,   567,
     590,   594,   601,   605,   613,   618,   625,   635,   636,   637,
     638,   639,   646,   653,   654,   659,   660,     9,    19,    29,
      39,    49,    59,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    92,    93,
      94,    95,    96,    97,    98,   103,   104,   109,   110,   111,
     116,   117,   118,     7,    18,    19,    23,    27,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   170,   186,   187,   206,   210,   214,   231,   238,
     245,   255,   256,   259,   271,   282,   290,   295,   300,   305,
     310,   318,   326,   331,   336,   343,   344,   348,   349,   350,
     357,   358,   362,   363,   367,   368,   372,   376,   377,   380,
     389,   400,   401,   402,   405,   406,   407,   411,   412,   413,
     414,   418,   419,   423,   425,   441,   443,   448,   451,   459,
     463,   467,   471,   475,   479,   486,   491,   498,   499,   503,
     507,   511,   515,   522,   529,   530,   535,   536,   540,   541,
     549,   569,   570,   572,   577,   578,   582,   583,   586,   587,
     612,   613,   617,   618,   622,   623,   627,   640,   641,   645,
     646,   650,   651,   655,   656,   660,   671,   672,   673,   674,
     678,   679,   684,   685,   686,   695,   701,   719,   720,   724,
     725,   731,   737,   745,   753,   789,   815,   819,   845,   849,
     862,   876,   891,   903,   919,   925,   930,   936,   943,   944,
     952,   956,   960,   966,   973,   978,   979,   980,   981,   985,
     986,   998,   999,  1004,  1011,  1018,  1025,  1057,  1068,  1081,
    1086,  1087,  1090,  1091,  1094,  1095,  1100,  1101,  1106,  1110,
    1116,  1137,  1145,  1158,  1161,  1165,  1165,  1167,  1172,  1179,
    1184,  1190,  1195,  1201,  1206,  1214,  1216,  1219,  1223,  1224,
    1225,  1226,  1227,  1228,  1233,  1253,  1254,  1255,  1256,  1267,
    1281,  1282,  1288,  1293,  1298,  1303,  1308,  1313,  1318,  1323,
    1329,  1335,  1341,  1348,  1370,  1379,  1383,  1391,  1395,  1403,
    1415,  1436,  1440,  1446,  1450,  1463,  1471,  1481,  1483,  1485,
    1487,  1489,  1491,  1496,  1497,  1504,  1513,  1521,  1530,  1541,
    1549,  1550,  1551,  1555,  1555,  1558,  1558,  1561,  1561,  1564,
    1564,  1567,  1567,  1570,  1570,  1573,  1573,  1576,  1576,  1579,
    1581,  1583,  1585,  1587,  1589,  1591,  1593,  1595,  1600,  1605,
    1611,  1618,  1623,  1629,  1635,  1666,  1668,  1670,  1678,  1693,
    1695,  1697,  1699,  1701,  1703,  1705,  1707,  1709,  1711,  1713,
    1715,  1717,  1719,  1722,  1724,  1726,  1729,  1731,  1733,  1735,
    1738,  1743,  1748,  1755,  1760,  1767,  1772,  1780,  1785,  1794,
    1802,  1810,  1818,  1836,  1844,  1852,  1860,  1868,  1876,  1880,
    1888,  1896,  1912,  1920,  1928,  1936,  1944,  1952,  1960,  1964,
    1968,  1972,  1976,  1984,  1992,  2000,  2008,  2028,  2050,  2061,
    2068,  2082,  2098,  2100,  2102,  2104,  2106,  2108,  2110,  2112,
    2114,  2116,  2118,  2120,  2122,  2124,  2126,  2128,  2130,  2132,
    2134,  2136,  2140,  2144,  2148,  2162,  2163,  2164,  2171,  2183,
    2198,  2210,  2212,  2224,  2235,  2259,  2272,  2276,  2282,  2289,
    2296,  2306,  2313,  2341,  2376,  2387,  2388,  2395,  2401,  2405,
    2409,  2413,  2417,  2421,  2425,  2429,  2433,  2437,  2441,  2445,
    2449,  2453,  2457,  2461,  2463,  2465,  2469,  2478,  2483,  2490,
    2505,  2512,  2516,  2520,  2524,  2528,  2542,  2543,  2547,  2548,
    2556,  2557,  2561,  2562,  2567,  2575,  2577,  2591,  2594,  2621,
    2622,  2625,  2626,  2637,  2655,  2662,  2671,  2688,  2733,  2741,
    2749,  2757,  2765,  2786,  2787,  2790,  2791,  2794,  2795,  2796,
    2799,  2800,  2803,  2804,  2805,  2806,  2807,  2808,  2809,  2810,
    2811,  2812,  2813,  2814,  2817,  2819,  2824,  2826,  2831,  2833,
    2835,  2837,  2839,  2841,  2843,  2845,  2859,  2861,  2865,  2869,
    2876,  2880,  2886,  2890,  2899,  2910,  2911,  2915,  2919,  2926,
    2927,  2928,  2929,  2930,  2931,  2932,  2933,  2934,  2935,  2945,
    2949,  2956,  2963,  2964,  2980,  2984,  2989,  2993,  3008,  3013,
    3017,  3020,  3023,  3024,  3025,  3028,  3035,  3045,  3059,  3060,
    3064,  3075,  3076,  3079,  3080,  3083,  3087,  3094,  3098,  3102,
    3110,  3121,  3122,  3126,  3127,  3131,  3132,  3135,  3136,  3146,
    3147,  3151,  3152,  3155,  3171,  3179,  3187,  3209,  3210,  3221,
    3225,  3252,  3254,  3259,  3261,  3271,  3274,  3285,  3289,  3293,
    3305,  3309,  3318,  3325,  3357,  3361,  3365,  3369,  3373,  3377,
    3381,  3387,  3388,  3404,  3405,  3406,  3409,  3410,  3416,  3417,
    3418,  3421,  3422,  3423,  3426,  3427,  3428,  3431,  3432,  3435,
    3437,  3442,  3443,  3446,  3454,  3455,  3456,  3457,  3460,  3461,
       7,    18,    19,    23,    24,    25,    26,     7,    16,    34,
      41,    46,    47,    48,    49,     8,    33,    62,    66,    67,
      72,    73,    78,    79,    83,    84,    89,    90,     7,    16,
      25,    34,    43,    52,     5,    11,     7,    20,     9,    16,
      26,    33,    44,    45,    50,    51,    52,    57,    58,    59,
      60,    61,    65,    66,    67,    72,    73,    78,    82,    90,
      91,    96,    97,    98,   104,   109,   117,   118,    10,    16,
      22,    32,    33,    41,    52,    64,    72,    80,    87,    97,
      99,   105,   109,   113,   128,   135,   136,   137,   141,   142,
       7,    16,     8,    22,    36,    48,    56,    70,    71,    72,
      73,    74,    87,    88,    93,    94,    98,    99,     7,    21,
      25,    32,    43,    44,    50,    51,     9,    19,     2,     7,
      14,    24,    25,    32,     3,    10,    16,    22,    28,    37,
      37,    39,    40,     6,     8,    21,    34,    52,    74,    75,
      76,    77,    11,    24,    41,    42,    43,    48,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION",
  "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P",
  "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV",
  "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING",
  "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P",
  "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P",
  "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P",
  "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE",
  "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF",
  "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD",
  "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER",
  "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P",
  "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES",
  "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME",
  "REPEATABLE", "REPLACE", "REPLICA", "RESET", "RESTART", "RESTRICT",
  "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP",
  "ROW", "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS",
  "SCROLL", "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TRY_CAST", "TYPE_P",
  "TYPES_P", "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE",
  "UNKNOWN", "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING",
  "VACUUM", "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES",
  "VARCHAR", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
  "VIEWS", "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH",
  "WITHIN", "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P",
  "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST",
  "XMLNAMESPACES", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P", "ZONE", "NOT_LA", "NULLS_LA",
  "WITH_LA", "'<'", "'>'", "'='", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'",
  "'%'", "'^'", "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','",
  "'#'", "'?'", "':'", "$accept", "stmtblock", "stmtmulti", "stmt",
  "AlterTableStmt", "alter_identity_column_option_list",
  "alter_column_default", "alter_identity_column_option",
  "alter_generic_option_list", "alter_table_cmd", "alter_using",
  "alter_generic_option_elem", "alter_table_cmds", "alter_generic_options",
  "opt_set_data", "DeallocateStmt", "RenameStmt", "opt_column",
  "InsertStmt", "insert_rest", "insert_target", "opt_conf_expr",
  "opt_with_clause", "insert_column_item", "set_clause", "opt_on_conflict",
  "index_elem", "returning_clause", "override_kind", "set_target_list",
  "opt_collate", "opt_class", "insert_column_list", "set_clause_list",
  "index_params", "set_target", "PragmaStmt", "CreateSeqStmt",
  "OptSeqOptList", "ExecuteStmt", "execute_param_clause", "AlterSeqStmt",
  "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem", "opt_by",
  "SignedIconst", "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "sub_type", "all_Op", "MathOp",
  "qual_Op", "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name",
  "function_name_token", "type_name_token", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,    60,    62,    61,   728,    43,    45,    42,
      47,    37,    94,   729,    91,    93,    40,    41,    46,    59,
      44,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   494,   495,   496,   496,   497,   497,   497,   497,   497,
     497,   497,   497,   497,   497,   497,   497,   497,   497,   497,
     497,   497,   497,   497,   497,   497,   497,   497,   497,   497,
     497,   497,   497,   497,   497,   497,   497,   497,   497,   498,
     498,   498,   498,   498,   498,   498,   498,   499,   499,   500,
     500,   501,   501,   501,   501,   502,   502,   503,   503,   503,
     503,   503,   503,   503,   503,   503,   503,   503,   503,   503,
     503,   503,   503,   503,   503,   503,   503,   503,   503,   503,
     503,   503,   503,   503,   503,   503,   504,   504,   505,   505,
     505,   505,   506,   506,   507,   508,   508,   509,   509,   509,
     509,   510,   510,   510,   510,   510,   510,   510,   510,   510,
     510,   510,   510,   510,   511,   511,   512,   513,   513,   513,
     513,   513,   514,   514,   515,   515,   515,   516,   516,   517,
     518,   518,   519,   519,   519,   520,   520,   520,   521,   521,
     522,   522,   523,   523,   524,   524,   525,   525,   526,   526,
     527,   527,   528,   528,   529,   530,   530,   530,   531,   531,
     532,   532,   533,   533,   533,   534,   534,   535,   535,   536,
     536,   537,   537,   537,   538,   538,   538,   538,   539,   539,
     539,   539,   539,   539,   539,   539,   539,   539,   539,   539,
     539,   539,   540,   540,   541,   541,   541,   542,   542,   542,
     542,   542,   542,   543,   543,   543,   544,   544,   545,   545,
     546,   546,   546,   546,   546,   546,   547,   547,   548,   549,
     549,   549,   549,   549,   550,   550,   550,   550,   551,   551,
     551,   551,   551,   551,   551,   551,   552,   553,   554,   554,
     554,   554,   554,   555,   555,   556,   556,   556,   556,   557,
     558,   558,   559,   559,   560,   560,   560,   560,   560,   560,
     560,   560,   561,   561,   562,   563,   563,   563,   563,   564,
     564,   564,   564,   565,   566,   566,   566,   567,   568,   568,
     568,   568,   568,   568,   569,   570,   570,   571,   571,   572,
     573,   573,   573,   574,   574,   575,   575,   576,   576,   577,
     578,   578,   579,   579,   580,   581,   581,   581,   581,   582,
     582,   583,   583,   583,   584,   584,   584,   584,   584,   584,
     585,   585,   586,   586,   586,   586,   587,   588,   588,   588,
     588,   588,   588,   588,   588,   589,   589,   590,   590,   590,
     590,   590,   590,   591,   591,   591,   591,   591,   591,   591,
     591,   591,   591,   591,   591,   591,   591,   591,   592,   592,
     592,   592,   592,   592,   592,   593,   593,   594,   594,   594,
     595,   595,   595,   596,   597,   597,   598,   598,   599,   600,
     600,   601,   601,   602,   602,   603,   603,   604,   604,   605,
     605,   606,   606,   607,   607,   608,   608,   608,   608,   608,
     609,   610,   610,   611,   611,   612,   612,   613,   613,   613,
     613,   613,   613,   613,   613,   613,   613,   613,   613,   613,
     613,   614,   615,   615,   615,   616,   616,   617,   617,   618,
     618,   619,   619,   619,   619,   619,   619,   619,   619,   620,
     620,   621,   621,   621,   621,   621,   621,   621,   622,   622,
     622,   623,   623,   624,   625,   625,   626,   626,   626,   626,
     626,   626,   626,   626,   626,   627,   627,   628,   628,   628,
     629,   629,   630,   630,   631,   631,   632,   633,   633,   634,
     634,   635,   635,   635,   636,   636,   636,   637,   637,   637,
     637,   638,   638,   639,   639,   639,   639,   640,   640,   641,
     641,   641,   641,   641,   641,   642,   642,   643,   643,   644,
     644,   644,   644,   645,   646,   646,   647,   647,   648,   648,
     649,   650,   650,   650,   651,   651,   652,   652,   653,   653,
     654,   654,   655,   655,   656,   656,   657,   658,   658,   659,
     659,   660,   660,   661,   661,   662,   663,   663,   663,   663,
     664,   664,   665,   665,   665,   666,   666,   667,   667,   668,
     668,   669,   669,   669,   669,   669,   669,   669,   670,   670,
     670,   670,   670,   670,   671,   671,   671,   671,   672,   672,
     673,   673,   673,   673,   673,   674,   674,   674,   674,   675,
     675,   676,   676,   677,   677,   677,   677,   678,   678,   679,
     680,   680,   681,   681,   682,   682,   683,   683,   684,   684,
     685,   686,   686,   687,   687,   688,   688,   689,   689,   689,
     689,   689,   689,   689,   689,   690,   690,   690,   691,   691,
     691,   691,   691,   691,   691,   692,   692,   692,   692,   693,
     694,   694,   695,   695,   695,   695,   695,   695,   695,   695,
     695,   695,   695,   696,   696,   697,   697,   698,   698,   699,
     700,   701,   701,   702,   702,   703,   704,   705,   705,   705,
     705,   705,   705,   706,   706,   707,   707,   707,   707,   708,
     709,   709,   709,   710,   710,   711,   711,   712,   712,   713,
     713,   714,   714,   715,   715,   716,   716,   717,   717,   718,
     718,   718,   718,   718,   718,   718,   718,   718,   718,   718,
     718,   718,   718,   718,   718,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,   719,   720,   720,   720,   720,   720,   720,   720,   720,
     720,   720,   720,   720,   720,   720,   720,   720,   720,   720,
     720,   720,   720,   720,   720,   721,   721,   721,   721,   721,
     721,   721,   721,   721,   721,   721,   722,   722,   722,   722,
     722,   722,   722,   723,   723,   724,   724,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   726,   726,   727,   727,
     728,   728,   729,   729,   730,   731,   731,   731,   732,   733,
     733,   734,   734,   735,   735,   735,   736,   736,   737,   737,
     737,   737,   737,   738,   738,   739,   739,   740,   740,   740,
     741,   741,   742,   742,   742,   742,   742,   742,   742,   742,
     742,   742,   742,   742,   743,   743,   744,   744,   745,   745,
     745,   745,   745,   745,   745,   745,   746,   746,   747,   747,
     748,   748,   749,   749,   749,   750,   750,   751,   751,   752,
     752,   752,   752,   752,   752,   752,   752,   752,   752,   753,
     753,   754,   755,   755,   756,   756,   756,   756,   756,   756,
     757,   758,   759,   759,   759,   760,   760,   761,   762,   762,
     763,   764,   764,   765,   765,   766,   766,   767,   767,   767,
     767,   768,   768,   769,   769,   770,   770,   771,   771,   772,
     772,   773,   773,   774,   774,   774,   774,   775,   775,   776,
     776,   777,   777,   778,   779,   780,   780,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   782,   783,   784,   784,   784,   785,   785,   786,   786,
     786,   787,   787,   787,   788,   788,   788,   789,   789,   790,
     790,   791,   791,   792,   793,   793,   793,   793,   794,   794,
     795,   796,   796,   797,   797,   797,   797,   798,   798,   799,
     799,   800,   800,   800,   800,   801,   801,   802,   803,   803,
     804,   804,   805,   805,   806,   806,   807,   807,   808,   808,
     808,   808,   808,   808,   809,   809,   810,   811,   812,   812,
     812,   812,   813,   813,   814,   814,   814,   815,   815,   815,
     815,   815,   816,   816,   816,   817,   817,   818,   818,   819,
     819,   820,   820,   820,   820,   821,   822,   822,   823,   823,
     823,   824,   824,   824,   824,   825,   825,   825,   825,   826,
     826,   827,   827,   827,   827,   827,   827,   827,   828,   828,
     829,   830,   831,   831,   831,   831,   831,   832,   832,   832,
     832,   832,   833,   833,   834,   834,   835,   835,   836,   837,
     837,   837,   838,   838,   839,   839,   840,   840,   841,   842,
     842,   843,   843,   843,   844,   844,   844,   844,   844,   845,
     845,   846,   846,   847,   848,   848,   848,   848,   849,   849,
     849,   849,   850,   850,   851,   851,   851,   852,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   854,   854,   854,
     854,   854,   854,   854,   854,   854,   854,   854,   854,   854,
     854,   854,   854,   854,   854,   854,   854,   854,   854,   854,
     854,   854,   854,   854,   854,   854,   854,   854,   854,   854,
     854,   854,   854,   854,   854,   854,   854,   854,   854,   854,
     854,   854,   854,   854,   854,   854,   854,   854,   855,   855,
     855,   855,   855,   855,   855,   855,   855,   855,   855,   855,
     855,   855,   855,   855,   855,   855,   855,   855,   855,   855,
     855,   855,   855,   855,   856,   856,   856,   856,   856,   856,
     856,   856,   856,   856,   856,   856,   856,   856,   856,   856,
     856,   856,   856,   856,   856,   856,   856,   856,   856,   857,
     857,   857,   857,   857,   857,   857,   857,   857,   857,   857,
     857,   857,   857,   857,   857,   857,   857,   857,   857,   857,
     857,   857,   857,   857,   857,   857,   857,   857,   857,   857,
     857,   857,   857,   857,   857,   857,   857,   857,   857,   857,
     857,   857,   857,   857,   857,   857,   857,   857,   857,   857,
     858,   858,   858,   858,   858,   858,   858,   858,   858,   858,
     858,   858,   858,   858,   858,   858,   858,   858,   858,   858,
     858,   858,   858,   858,   858,   858,   858,   859,   859,   859,
     859,   859,   859,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   859,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   859,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   859,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   859,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   859,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   859,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   859,   859
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       6,     4,     6,     4,     6,     4,     6,     1,     2,     3,
       2,     1,     3,     2,     3,     1,     3,     2,     5,     3,
       6,     4,     6,     6,     6,     5,     5,     6,     9,     4,
       5,     7,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     2,     2,     2,     2,     1,     2,     0,     1,     2,
       2,     2,     1,     3,     4,     2,     0,     2,     3,     2,
       3,     6,     6,     8,     6,     8,     6,     8,     6,     8,
       8,    10,     8,    10,     1,     0,     7,     1,     4,     4,
       7,     2,     1,     3,     4,     3,     0,     1,     0,     2,
       3,     5,     8,     5,     0,     5,     5,     7,     2,     0,
       1,     1,     1,     3,     2,     0,     1,     0,     1,     3,
       1,     3,     1,     3,     2,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     2,     5,     5,     2,     3,     1,     1,
       2,     2,     0,     4,     0,     3,     4,     4,     0,     3,
       2,     0,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     0,     3,     3,     3,     0,     1,     2,     1,
       2,     2,     2,     2,     4,     1,     3,     1,     3,     1,
       1,     1,     1,     3,     1,     2,     0,     1,     0,     1,
       3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
       3,     1,     4,     5,     5,     6,     3,     7,     4,    11,
       1,     3,     2,     2,     2,     0,     3,     1,     1,     2,
       2,     2,     2,     1,     0,     1,     2,     6,     4,     6,
       4,     6,     8,     1,     1,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     6,     1,     1,     2,     3,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,    10,    10,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     2,
       2,     2,     2,     1,     2,     3,     0,     1,     0,     5,
       1,     4,     6,     2,     1,     0,     4,     0,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     4,     1,     1,     2,     3,     5,
       6,     2,     3,     4,     4,     3,     4,     0,     1,     1,
       1,     1,     1,     2,     4,     1,     1,     1,     1,     2,
       3,     0,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     2,     1,     3,     0,     1,     1,     1,     1,     5,
       2,     1,     1,     1,     1,     4,     1,     2,     2,     1,
       3,     3,     2,     1,     0,     5,     2,     5,     2,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     3,     3,     3,     0,     1,     3,     3,     5,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     2,     3,     3,     2,     2,
       3,     3,     5,     4,     6,     3,     5,     4,     6,     4,
       6,     5,     7,     3,     2,     4,     3,     2,     1,     3,
       3,     3,     3,     4,     3,     4,     3,     4,     5,     6,
       6,     7,     6,     7,     6,     7,     3,     4,     4,     6,
       1,     4,     1,     3,     2,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     2,
       2,     5,     6,     6,     7,     1,     1,     2,     2,     2,
       4,     1,     2,     1,     2,     2,     3,     5,     6,     8,
       6,     6,     4,     4,     1,     1,     1,     5,     1,     1,
       4,     1,     4,     1,     4,     1,     4,     1,     1,     1,
       1,     1,     1,     6,     6,     4,     4,     4,     4,     6,
       5,     5,     5,     4,     6,     4,     5,     0,     5,     0,
       2,     0,     1,     3,     3,     2,     2,     0,     6,     1,
       0,     3,     0,     2,     2,     0,     1,     4,     2,     2,
       2,     2,     2,     4,     3,     1,     5,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     1,     4,     1,     4,
       1,     2,     1,     2,     1,     2,     1,     3,     1,     3,
       1,     3,     1,     3,     3,     1,     3,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
       3,     2,     3,     0,     3,     3,     2,     2,     1,     0,
       2,     2,     3,     2,     1,     1,     3,     5,     1,     2,
       4,     2,     0,     1,     0,     1,     2,     2,     2,     3,
       5,     1,     0,     1,     2,     0,     2,     1,     0,     1,
       0,     1,     3,     3,     2,     1,     1,     1,     3,     1,
       2,     1,     3,     1,     1,     1,     2,     1,     1,     2,
       1,     1,     2,     6,     2,     5,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       5,     3,     0,     1,     1,     1,     1,     4,     7,     2,
       0,     1,     1,     1,     1,    13,    16,     1,     2,     0,
       1,     0,     1,     0,     2,     0,     1,     0,     6,     8,
       6,     8,     6,     8,     2,     1,     4,     3,     2,     4,
       3,     5,     1,     0,     1,     1,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     1,     1,     1,     1,     2,     1,     1,     2,     3,
       3,     1,     3,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     3,
       2,     1,     4,     5,     5,     4,     6,     1,     1,     1,
       1,     1,     1,     0,     1,     3,     1,     0,     7,     1,
       2,     3,     2,     0,     2,     0,     2,     4,     2,     1,
       1,     1,     2,     3,     2,     2,     3,     4,     2,     1,
       1,     1,     3,     2,     9,    11,    12,    14,     3,     4,
       4,     0,     7,    10,     2,     3,     0,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     128,   205,     0,  1100,  1099,   205,     0,  1075,   205,   406,
     334,     0,  1170,     0,   205,     0,   128,     0,     0,     0,
       0,     0,     0,     0,   205,   473,     0,  1169,   205,     0,
    1143,     0,     0,     0,     0,     0,     2,     4,     7,    17,
      29,    25,     0,    27,    15,    20,     6,    31,    16,    19,
      13,    32,    11,    30,   440,   427,   475,   439,   127,   443,
      28,    14,    24,     5,    10,    22,    23,    21,  1083,    35,
      26,    33,    18,     8,    34,    36,     0,     9,    37,    12,
     204,   203,   197,     0,     0,     0,     0,     0,   198,  1013,
    1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,  1196,  1197,
    1198,  1199,  1200,  1201,  1202,  1203,  1538,  1204,  1205,  1206,
    1487,  1488,  1539,  1489,  1490,  1207,  1208,  1209,  1210,  1211,
    1212,  1213,  1214,  1491,  1492,  1215,  1216,  1217,  1218,  1219,
    1493,  1540,  1220,  1221,  1222,  1223,  1224,  1541,  1225,  1226,
    1227,  1228,  1229,  1230,  1231,  1232,  1233,  1542,  1234,  1235,
    1236,  1543,  1237,  1238,  1239,  1240,  1241,  1242,  1243,  1494,
    1495,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1251,  1252,
    1253,  1254,  1255,  1256,  1257,  1258,  1259,  1260,  1261,  1262,
    1263,  1264,  1265,  1266,  1267,  1268,  1269,  1270,  1271,  1496,
    1272,  1273,  1274,  1275,  1497,  1276,  1277,  1278,  1498,  1279,
    1280,  1281,  1544,  1545,  1282,  1283,  1284,  1546,  1285,  1286,
    1499,  1287,  1288,  1289,  1290,  1291,  1292,  1293,  1547,  1294,
    1295,  1296,  1297,  1298,  1299,  1300,  1301,  1302,  1303,  1304,
    1548,  1500,  1305,  1306,  1307,  1308,  1501,  1502,  1503,  1309,
    1549,  1550,  1310,  1551,  1311,  1312,  1313,  1314,  1315,  1316,
    1552,  1317,  1553,  1318,  1319,  1320,  1321,  1322,  1323,  1324,
    1325,  1504,  1326,  1327,  1328,  1329,  1330,  1331,  1332,  1333,
    1334,  1335,  1336,  1337,  1338,  1339,  1340,  1341,  1342,  1343,
    1505,  1555,  1506,  1344,  1345,  1346,  1507,  1347,  1348,  1556,
    1349,  1508,  1350,  1509,  1351,  1352,  1353,  1354,  1355,  1356,
    1357,  1358,  1359,  1510,  1557,  1360,  1558,  1511,  1361,  1362,
    1363,  1364,  1365,  1366,  1367,  1368,  1369,  1370,  1371,  1372,
    1512,  1373,  1374,  1513,  1375,  1376,  1377,  1378,  1379,  1380,
    1381,  1382,  1383,  1384,  1385,  1386,  1514,  1387,  1388,  1389,
    1390,  1391,  1392,  1393,  1394,  1395,  1396,  1397,  1398,  1399,
    1400,  1401,  1402,  1403,  1404,  1559,  1405,  1406,  1407,  1515,
    1408,  1409,  1410,  1411,  1412,  1413,  1414,  1415,  1416,  1417,
    1418,  1419,  1420,  1421,  1422,  1423,  1424,  1516,  1425,  1426,
    1427,  1560,  1428,  1429,  1517,  1430,  1431,  1432,  1433,  1434,
    1435,  1436,  1437,  1438,  1439,  1440,  1441,  1518,  1442,  1519,
    1443,  1444,  1445,  1562,  1446,  1447,  1448,  1449,  1450,  1520,
    1521,  1451,  1452,  1522,  1453,  1523,  1454,  1455,  1524,  1456,
    1457,  1458,  1459,  1460,  1461,  1462,  1463,  1464,  1465,  1466,
    1467,  1468,  1469,  1470,  1525,  1526,  1471,  1563,  1472,  1473,
    1474,  1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,  1527,
    1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,
    1483,  1484,  1485,  1486,  1173,     0,     0,   995,  1014,  1015,
    1023,   200,   405,   128,     0,   374,     0,     0,   375,     0,
       0,   328,   327,  1066,   333,     0,     0,     0,  1013,    99,
    1504,  1375,  1518,    97,   993,  1014,     0,   351,   352,     0,
     360,     0,   345,   349,   346,     0,   370,   362,   371,   363,
     344,   364,   353,   343,     0,   372,   347,     0,     0,     0,
     201,   166,   334,   128,     0,  1088,  1089,  1087,  1078,  1083,
    1090,  1091,     0,  1074,     0,  1012,  1131,  1130,   155,  1042,
    1160,  1520,  1451,  1171,  1161,  1158,  1159,   202,   472,   470,
       0,   980,  1320,  1412,  1423,  1520,  1108,  1111,     0,   199,
    1017,     0,   444,   593,  1016,   989,  1142,     0,  1147,     0,
    1389,   448,   451,  1032,   449,   440,     0,     0,     1,   128,
       0,     0,     0,   469,   469,     0,   469,     0,   432,   440,
     435,   439,     0,  1082,  1156,  1168,  1520,  1451,  1525,  1164,
    1165,  1293,     0,     0,  1293,     0,  1293,     0,  1293,     0,
       0,   972,     0,   973,   996,  1044,  1045,  1043,     0,  1046,
     301,   332,   331,   330,   329,   334,  1293,  1050,     0,     0,
       0,     0,     0,  1061,   100,    98,   358,   359,     0,   350,
     348,     0,  1293,   369,  1027,   365,  1293,   369,   991,  1293,
       0,     0,   162,     0,  1080,  1092,  1589,  1590,  1591,  1592,
    1594,  1593,  1595,  1596,  1597,  1598,  1599,  1600,  1601,  1602,
    1605,  1603,  1604,  1606,  1607,  1608,  1609,  1610,  1611,  1612,
    1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,
    1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,
    1633,  1634,  1635,  1636,  1637,  1638,  1639,  1106,     0,  1107,
    1097,  1086,  1093,  1094,   128,   404,  1077,     0,     0,     0,
       0,  1162,     0,     0,     0,   998,  1000,  1001,   904,  1011,
     975,     0,  1488,  1489,  1490,   964,     0,  1491,  1492,  1493,
    1540,   841,   828,   837,   842,   829,   831,   838,  1494,  1495,
     780,  1259,  1496,  1497,  1009,  1498,  1501,  1502,  1503,   833,
     835,  1505,  1506,     0,  1010,  1508,  1509,  1356,  1511,  1512,
    1514,  1515,   839,  1517,  1519,  1520,  1521,  1522,  1523,  1008,
    1524,   840,  1526,     0,     0,     0,   986,     0,     0,   975,
     813,     0,   635,   636,   657,   658,   637,   663,   664,   666,
     638,     0,   985,   715,   857,   975,   824,   885,   758,     0,
     811,   805,   455,   981,     0,   806,   997,   975,   965,   455,
     979,  1109,  1114,  1110,     0,     0,     0,     0,     0,   595,
     594,   990,  1141,  1139,  1140,  1138,  1137,  1144,     0,  1146,
    1083,   918,     0,   450,     0,     0,     0,   430,   429,     3,
       0,     0,  1149,     0,   467,   468,     0,     0,     0,     0,
       0,     0,     0,     0,   542,   489,   490,   492,   539,   543,
     551,     0,   436,     0,  1032,  1166,     0,     0,     0,   115,
     115,     0,     0,     0,     0,     0,    92,    41,    85,     0,
       0,     0,     0,   180,   193,     0,     0,     0,     0,     0,
     190,     0,     0,   173,    43,   167,   169,     0,   115,     0,
      39,     0,     0,     0,    45,  1013,     0,  1538,  1539,  1540,
    1541,  1542,   842,     0,  1544,  1545,  1546,  1547,  1548,  1549,
    1550,  1551,  1552,  1553,  1504,  1555,  1556,  1557,  1558,  1559,
    1560,  1518,  1562,  1524,     0,  1563,     0,   816,   922,   475,
     920,  1033,     0,  1014,  1020,   971,     0,  1034,  1667,  1668,
    1669,  1670,  1671,  1672,  1673,  1674,  1675,  1676,  1677,  1678,
    1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,
    1689,  1690,  1691,  1692,  1693,  1694,  1695,  1696,  1697,  1698,
    1699,  1700,  1701,  1702,  1703,  1704,  1705,  1706,  1707,  1708,
    1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,  1717,  1718,
    1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,  1727,  1728,
    1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,  1737,  1738,
    1627,  1739,  1740,  1741,  1742,  1743,   968,   967,   994,  1036,
    1035,  1037,   974,     0,     0,   402,     0,     0,  1047,     0,
    1293,   161,  1293,   301,     0,   301,     0,     0,  1060,  1063,
     361,   357,   355,   354,   356,     0,   367,   368,     0,   338,
       0,  1028,     0,     0,   340,     0,     0,     0,     0,   128,
       0,   174,  1102,  1103,  1101,     0,     0,  1085,   177,   194,
    1096,  1105,  1095,  1104,  1084,  1079,     0,  1076,   393,  1120,
    1119,  1128,   156,     0,  1024,  1564,   645,  1565,   674,   652,
     674,   674,  1566,  1567,  1568,  1569,   641,   641,   654,  1570,
    1571,  1572,  1573,  1574,   642,   643,   679,  1575,  1576,  1577,
    1578,  1579,     0,     0,  1580,   674,  1581,   641,  1582,  1583,
     646,  1584,   615,     0,  1585,   644,   616,  1586,   682,   682,
    1587,   669,  1588,     0,   925,   627,   628,   629,   630,   655,
     656,   631,   661,   662,   632,   714,     0,   641,  1025,  1026,
     128,  1163,  1172,     0,   809,     0,   673,   660,   963,     0,
       0,   668,   667,     0,     0,     0,     0,     0,   650,   649,
     648,   815,   928,     0,   647,     0,     0,   674,   674,   672,
     738,     0,   651,     0,     0,   943,     0,   949,     0,     0,
       0,   678,     0,   676,     0,     0,     0,   739,   719,   720,
     813,   918,     0,   807,   808,   814,  1004,     0,     0,   714,
     714,   984,   904,     0,   901,   902,   903,     0,     0,     0,
     978,     0,   912,   914,     0,     0,   754,   910,     0,   757,
       0,     0,     0,     0,   898,   899,   900,   892,   893,   894,
     895,   896,   897,   908,   891,   735,     0,     0,   859,   812,
       0,     0,   734,     0,     0,     0,   558,     0,  1002,   999,
     966,   558,  1122,  1126,  1127,  1125,     0,  1121,  1113,  1112,
    1117,  1115,  1118,  1116,     0,  1135,     0,  1132,   555,     0,
     452,     0,     0,  1155,     0,   122,     0,  1150,     0,   447,
     446,   476,   477,   483,   445,   528,   529,     0,     0,     0,
       0,   548,   546,   519,   493,   518,     0,     0,   497,     0,
     520,   715,   541,   434,   487,   488,   491,   433,     0,   544,
       0,   554,   542,   492,     0,  1157,  1167,     0,     0,     0,
       0,     0,  1293,     0,     0,    76,    57,   253,     0,   114,
       0,     0,     0,     0,     0,     0,     0,    84,    81,    82,
      83,     0,     0,     0,     0,   178,   179,   192,     0,   183,
     184,   181,   185,   186,     0,     0,   171,   172,     0,     0,
       0,     0,   170,     0,     0,     0,     0,     0,     0,     0,
       0,   475,   475,   475,   822,     0,     0,   474,     0,     0,
     969,   972,   392,   309,     0,   299,     0,     0,     0,     0,
       0,   334,  1053,  1051,  1049,  1052,  1054,     0,     0,   158,
     160,     0,   298,   272,     0,  1065,   376,     0,     0,  1293,
    1062,   289,     0,   369,   366,  1029,     0,   369,   992,     0,
     369,   165,  1293,   301,     0,  1081,  1098,   175,   195,   176,
     196,   425,     0,   399,   407,   412,   390,     0,   390,     0,
     409,   413,   390,   408,   390,   403,     0,   157,     0,     0,
     627,     0,   621,   617,   687,   688,   689,   690,   697,   698,
     695,   696,   691,   692,   685,   686,   693,   694,   683,   684,
       0,   699,   700,   701,   702,   703,   704,   705,   706,   633,
    1041,     0,   639,  1040,     0,   976,     0,     0,     0,   962,
     958,     0,     0,     0,     0,     0,     0,   929,   930,   931,
     932,   933,   934,   935,   936,   937,     0,     0,   938,     0,
       0,     0,   671,   670,     0,   890,   901,   902,   903,   898,
     899,   900,   892,   893,   894,   895,   896,   897,   916,     0,
       0,     0,     0,     0,     0,     0,     0,   782,     0,     0,
     805,   884,     0,   918,   948,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   918,   954,     0,     0,   975,
       0,     0,     0,  1006,  1007,   716,   730,   731,   732,   736,
    1039,  1038,   983,     0,   977,     0,     0,   717,   740,   745,
       0,   955,   776,     0,   764,     0,   753,     0,   762,   766,
     741,   756,     0,   737,     0,   978,   913,   915,     0,   911,
       0,   727,   728,   729,   721,   722,   723,   724,   725,   726,
     733,   889,   887,   888,     0,     0,     0,   867,   759,     0,
       0,   761,   760,  1285,  1320,     0,   466,   466,   466,   454,
     464,   982,     0,   607,   475,   607,     0,   714,   596,  1032,
    1145,  1133,  1134,   919,  1031,   128,     0,  1153,     0,     0,
       0,   134,   117,     0,  1151,     0,   150,   558,     0,   975,
       0,   481,   482,     0,   486,  1515,  1408,     0,     0,     0,
       0,   521,   549,     0,   540,     0,   998,   522,   997,   523,
     526,   527,   498,   550,   987,   552,     0,   545,   438,   437,
     556,     0,    42,     0,  1293,    59,     0,     0,     0,     0,
       0,     0,   208,   244,   208,    96,  1293,   369,  1293,   369,
    1192,  1260,  1424,     0,    55,    88,     0,   277,   108,     0,
     262,   306,    78,    93,   101,     0,     0,    44,   168,   182,
     187,   104,   191,   188,  1070,   189,   115,     0,    40,     0,
     102,     0,  1068,     0,     0,    46,   106,  1072,     0,     0,
       0,     0,   921,   817,   923,   924,   971,     0,   391,     0,
     300,     0,   401,   381,   382,   392,     0,   301,  1050,     0,
       0,     0,     0,     0,   292,   290,   320,     0,   297,   291,
     299,     0,     0,   248,     0,  1186,     0,     0,   377,   373,
       0,     0,   337,  1030,   339,     0,   341,     0,     0,   394,
       0,   397,     0,   396,   400,   395,   389,     0,   420,     0,
       0,     0,     0,     0,     0,  1129,     0,   622,   618,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   926,   471,
     781,     0,     0,     0,   959,     0,     0,   855,     0,   830,
     832,   640,   845,     0,   653,   834,   836,     0,   905,     0,
       0,     0,   846,   784,   785,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   800,   799,   847,   883,     0,     0,   946,   947,
     848,   681,   680,   682,   682,     0,     0,   953,     0,     0,
       0,   853,     0,   810,   919,   665,   714,     0,     0,     0,
       0,     0,     0,     0,   765,   755,     0,   763,   767,     0,
       0,     0,   749,     0,     0,   747,   777,   743,     0,     0,
     778,     0,     0,     0,   823,   466,   466,   466,   466,   463,
     465,     0,     0,     0,     0,  1408,     0,   579,   557,   559,
     566,   579,   584,   825,   605,   826,  1016,     0,   531,     0,
     531,     0,  1123,  1136,     0,  1154,     0,   139,   121,   141,
     140,     0,   148,     0,   975,     0,   139,   123,     0,   142,
       0,  1153,     0,   154,   478,     0,   906,   486,     0,   480,
     525,   524,     0,   496,   547,   494,     0,   553,     0,     0,
       0,   252,     0,     0,     0,   208,     0,     0,   316,     0,
     303,    77,     0,     0,     0,    51,     0,    69,    61,    47,
      75,     0,     0,    80,     0,    73,    90,    91,    89,    94,
       0,   236,   218,   249,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   820,   821,   818,
     475,   970,   423,   424,   173,   422,   310,     0,     0,  1065,
    1048,     0,     0,   161,   301,     0,   276,   272,     0,   270,
     269,   271,     0,  1187,   166,     0,  1182,  1064,     0,     0,
    1059,   369,     0,   426,     0,   385,   421,   410,   415,     0,
     419,   417,   416,   411,   414,   624,     0,   623,     0,   613,
       0,   625,     0,   634,   707,   708,   709,   710,   711,   712,
     713,   659,     0,   961,   957,     0,   827,   927,     0,   917,
     941,   940,   783,   795,   796,   797,   942,     0,     0,     0,
     792,   793,   794,   786,   787,   788,   789,   790,   791,   798,
     951,   950,   944,   945,   677,   675,     0,   850,   851,   852,
     952,     0,   886,  1005,   718,     0,     0,   746,   956,   768,
       0,     0,     0,   742,   905,     0,     0,     0,     0,     0,
     751,     0,     0,     0,   870,   865,   866,     0,     0,     0,
       0,   457,   456,   462,   579,   584,     0,   440,     0,   566,
       0,   578,   515,   577,     0,     0,   590,   588,     0,   590,
       0,   590,     0,   515,     0,   580,   515,   577,     0,   597,
     990,   606,     0,   538,   817,   538,     0,   453,  1152,     0,
    1148,     0,     0,     0,   129,   126,   116,     0,     0,   151,
     139,   130,     0,   479,   484,   485,   495,   988,   109,   208,
       0,     0,    58,     0,   318,   264,   296,   279,     0,     0,
       0,   209,     0,   284,     0,    50,    70,     0,    66,     0,
      95,     0,     0,     0,     0,     0,    53,    65,     0,    48,
       0,   369,   369,    56,   263,  1024,  1564,  1565,  1566,  1567,
    1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,
    1578,  1579,  1656,  1580,   215,  1581,  1356,  1582,  1583,  1584,
       0,  1585,   616,  1586,  1587,  1588,   892,   893,   213,   305,
     210,   311,   212,   214,     0,  1025,   211,   308,   105,  1071,
       0,   103,     0,  1069,   112,   110,   107,  1073,     0,   404,
     384,     0,     0,  1293,     0,  1065,   159,   298,     0,   326,
     248,   321,     0,  1186,  1184,     0,  1181,     0,     0,     0,
     342,     0,   398,     0,   418,     0,     0,   619,   626,   960,
     843,   854,   939,     0,     0,     0,     0,   849,   844,   774,
     772,   769,     0,   770,   750,     0,     0,   748,   744,     0,
     779,   856,     0,   872,   869,   461,   460,   459,   458,   565,
     563,     0,   568,  1016,   575,   508,   514,   564,     0,   560,
       0,   589,   585,     0,   586,     0,     0,   587,     0,   561,
       0,  1016,   562,     0,   604,     0,     0,   861,  1003,   861,
    1124,   138,   118,     0,   119,   149,     0,     0,     0,     0,
     143,   378,     0,   314,    60,     0,   296,     0,   208,   281,
     280,   283,   278,   282,   285,     0,     0,     0,     0,     0,
     265,     0,     0,     0,   229,     0,     0,   296,   302,   225,
     226,   335,     0,     0,     0,    62,    52,    49,    54,    63,
       0,     0,    64,    67,   612,    79,    72,  1656,  1663,     0,
       0,     0,     0,     0,   819,   380,   387,   173,     0,     0,
       0,     0,   298,     0,     0,     0,  1186,     0,     0,   206,
       0,   245,     0,   163,  1185,     0,  1174,     0,  1057,  1058,
       0,     0,   386,   620,   614,   801,     0,     0,     0,   771,
     775,   773,   752,   858,     0,   475,   600,     0,   603,   567,
       0,     0,   503,   510,     0,   513,   507,     0,   569,     0,
       0,   571,   573,     0,     0,     0,   608,     0,     0,     0,
     993,     0,   530,   532,   535,   534,   537,     0,   506,   506,
       0,     0,     0,   152,     0,   145,   145,     0,   131,   907,
       0,   208,     0,   295,   315,   243,     0,     0,   227,     0,
     233,     0,   267,   268,   266,   228,   296,   301,   230,   336,
       0,    71,     0,    87,     0,     0,   307,   113,   111,   404,
       0,  1065,  1181,     0,     0,   272,   166,  1183,   261,   254,
     255,   256,   257,   258,   259,   260,   275,   274,   246,   247,
       0,     0,     0,  1059,     0,   802,     0,   803,     0,   875,
     605,     0,     0,   599,     0,   501,   499,   502,   504,   500,
       0,     0,   576,   592,     0,   572,   570,   581,     0,   612,
       0,   583,   536,     0,   860,   862,     0,     0,   442,   441,
       0,   125,     0,   607,     0,     0,   147,   147,   133,     0,
     301,   317,     0,   287,   294,   286,     0,     0,   224,     0,
     231,   325,   217,   611,     0,    74,     0,   312,   379,   383,
       0,  1175,     0,  1181,   248,  1186,     0,  1178,     0,     0,
    1065,   804,   871,     0,     0,     0,   598,   601,     0,   574,
       0,     0,     0,   609,   610,   582,   533,     0,     0,   508,
     120,   145,   124,   153,   144,   483,   146,   483,     0,   325,
     273,     0,     0,   251,   217,     0,   242,     0,    68,    86,
     313,     0,   298,  1176,   207,   164,  1179,  1180,     0,   607,
    1487,  1236,  1458,     0,   873,   876,   874,   868,     0,   511,
       0,   517,   591,   863,   864,   505,   147,   486,   486,   607,
     242,   288,   293,     0,   232,   234,   322,   323,   324,     0,
     238,   235,   239,     0,  1181,     0,  1055,     0,   880,   879,
     878,   882,   881,   602,     0,     0,   509,   483,   136,   135,
     132,   208,   250,     0,     0,     0,   240,     0,   241,   216,
    1177,  1065,     0,   512,     0,   486,   319,   221,     0,   220,
       0,   304,   237,   607,   877,     0,   137,   219,   223,   222,
    1056,   516
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    35,    36,    37,    38,  2037,  2038,  2039,  1743,   886,
    2705,  1744,   887,   888,  2041,    39,    40,  1361,   525,  1681,
    1304,  2448,    42,  1992,  1686,  1996,  2583,  2240,  1991,  1998,
    2686,  2745,  1993,  1687,  2584,  1688,    43,    44,  1429,    45,
     652,    46,  1430,  1388,  1099,   906,  1378,  1088,    47,    82,
      48,  2028,  2329,  2758,  2051,  2841,  2478,  2479,  1745,  2800,
    2801,  2030,  2093,  1370,  2794,  1804,  2636,  1749,  1732,  2480,
    1813,  2593,  2359,  1746,  2271,  1805,  2465,  2692,  1440,  1806,
    2693,  2458,  1807,  1413,  1433,  2273,  2802,  1750,  1414,  2330,
    1357,  1808,  2756,  1809,   485,  2483,    49,   517,   518,   643,
    1069,   519,    50,   486,  1057,   526,    52,  1795,  2507,  2104,
    2508,  1837,  1789,  1097,  1834,  1461,  1417,  1098,   474,  1475,
    2105,  2074,  1462,   527,   790,    55,    56,    57,   577,   571,
     572,  1276,  1659,  1961,   856,   550,   551,   587,  1407,  1311,
    1312,  1694,  2009,  1336,  1337,   865,   866,  2553,  2678,  2554,
    2555,  2416,  2417,  2816,  1324,  1328,  1329,  1707,  1700,  1317,
    2233,  2572,  2573,  2574,  2437,  1332,  1333,   868,   869,   870,
    1341,  1717,    59,  1663,  1968,  1969,  1970,  2211,  2212,  2226,
    2222,  2422,  2561,  1971,  1972,  2546,  2547,  2653,  2229,  1978,
    2565,  2566,  2613,  1849,  1153,  1154,  1483,  1155,   791,  1156,
    1188,   792,  1194,  1158,   793,   794,   795,  1161,   796,   797,
     798,   799,  1177,   800,   801,  1211,  1501,  1502,  1503,  1504,
    1505,  1506,  1507,  1508,  1509,   841,  1566,   803,   804,   805,
    1974,   806,  1268,  1647,  2578,  2674,  2675,  1954,  2195,  2403,
    2545,  2725,  2774,  2775,   807,   808,  1644,  1263,  1264,   809,
    2332,  1266,  1559,  1586,   949,   950,  1166,  1536,  1537,  1562,
    1881,  1569,  1575,  1908,  1909,  1587,  1612,   810,  1519,  1520,
    1865,  1179,   811,   613,   956,   614,  1174,  1606,   819,   812,
     813,  1713,   563,  2557,   648,  1037,   814,   815,   816,   817,
     818,   565,   951,   467,  1167,  2746,  1071,   846,   952,  1747,
    1602,    60,   720,   618,    61,  1048,  1424,    62,  2529,  2369,
    1059,  1442,  1817,   487,    63,    64,    65,    66,    67,   594,
    1091,   528,  1092,  1093,   708,    68,  1100,   710,   711,    69,
     556,   557,  1101,  1288,  1102,    70,   537,    71,   837,   568,
     838,   840,   530,   853,  1987,  1677,    73,    74,   544,   545,
      75,    76,   558,    77,    78,  2526,   531,  2096,  1054,   495,
     469,   470,  1169,  1040,   954,  1041
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2463
static const int yypact[] =
{
    4191,   -84,   459, -2463, -2463,   -84, 30212, -2463,   -84,    36,
    1836, 34882, -2463, 24284,   -84, 40953,   950,   206,   257,   238,
     356, 40953, 40953, 35349,   -84,   225, 41420, -2463,   -84, 32547,
      37,  -104, 41887, 40953,  1047,   408,   -72, -2463, -2463, -2463,
   -2463, -2463,    51, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463,    79, -2463,     5,    87,   416,   -13,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,   170, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, 19965, -2463, -2463, -2463,
   -2463, -2463, -2463, 35816, 40953, 36283, 33014, 36750, -2463,    99,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463,   104, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463,   109, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463,    63,   202, -2463,   132, -2463,
   -2463, -2463, -2463,  1047, 37217, -2463,   343,   354, -2463,   157,
   42354, -2463, -2463, -2463, -2463,   618, 37217,   367, -2463, -2463,
   -2463, 37684, -2463, -2463, -2463, -2463,   344, -2463, -2463,   263,
   -2463,    71, -2463, -2463, -2463,   265, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463,   368, -2463, -2463, 42821, 43288, 43755,
   -2463,   245,   593,   682, 19497, -2463, -2463, -2463, -2463,   170,
   -2463, -2463,   356, -2463,   356, -2463, -2463, -2463,   216,   283,
   -2463,   323,   603, -2463, -2463, -2463,   340, -2463, -2463,   556,
    7894,  7894, 44222,   356, 44222,   404, -2463, -2463,    -7, -2463,
   -2463, 20901, -2463,   380,   202, -2463, -2463,   171,   714, 10834,
   40953,   399, -2463,   425,   399,   431,   453,   416, -2463,  4191,
     787,   752, 32547,   244,   244,   917,   244,   733,   802, -2463,
    1231, -2463,   506, -2463, 37217, -2463,   562,   824,  -104, -2463,
     340,   903,   110,   723,   932, 24336,   966,   680,   978,   855,
    5934, 10834, 24764, -2463,   202, -2463, -2463, -2463,   584, -2463,
     649, -2463, -2463, -2463, -2463,   593,   878, -2463,   651, 38151,
   38618, 37217,   667,  1082, -2463, -2463, -2463, -2463,   719, -2463,
   -2463,   137,  1031,    35,   698, -2463,  1058,    53, -2463,  1065,
     939, 10834, -2463,   826, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463,  -104, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,   359, -2463,
   -2463, 26632, -2463, -2463,   682,   710, -2463, 26632, 11324, 47024,
    1190, -2463,  1015, 40953,   777, -2463, -2463, -2463, -2463, -2463,
   -2463,   784,  1265,    92,  1267, 10834,   797,    92,    92,   803,
    1134, -2463, -2463, -2463,   133,   816,   821, -2463,   143,   143,
   -2463,  1011,   837,   861, -2463,   146,  1337,  1352,    73,   885,
     892,   718,    92, 10834, -2463,   900,   143,   904,   906,   914,
    1391,   918, -2463,  1409,   948,    97,   107,   952,   969, -2463,
     973, -2463,   147, 10834, 10834, 10834, -2463,  6914,  1412, -2463,
     202,   356, -2463, -2463, -2463, -2463, -2463, -2463, -2463,   983,
   -2463,    96,  4705, -2463,   976, -2463, -2463, -2463,   154, 10834,
   -2463,  1468,   -28, -2463,   148, -2463, -2463, -2463,   202,  1277,
     999, -2463, -2463, -2463,   181,  1403, 25698, 26165, 37217, -2463,
   -2463,   202, -2463, -2463, -2463, -2463, -2463, -2463,   485, -2463,
     170, 27783,   540,   399, 40953, 40953,  1470, -2463, -2463, -2463,
   32547, 37217, 44689,  1160, -2463, -2463,   416,   416, 10834,   416,
     115,    27,  8384, 11814,  1346,  1259,   124,    88,  1377, -2463,
    1279,   733,   802, 10834,   425, -2463,  1355, 37217, 30679,   569,
     589,  1096,  1189,  1145,    -3,  1550, -2463,  1148, -2463,  1243,
   37217, 48395,   164, -2463,  1597,   164,   164,   555,  1601,  1257,
     174,  1408,   -26,   221,  1148,  2194, -2463, 32547,    61,   439,
    1148, 37217,  1260,   563,  1148,    76, 11324,   883,   935,   526,
    1002,  1012,    86, 11324,  1120,  1211,  1233,  1264,  1300,  1316,
    1342,  1431,  1440,  1451,   108,  1552,  1558,  1575,  1578,  1583,
    1588,   113,  1603,   117, 11324,  1606,  1177, -2463, 27783,   -90,
   -2463, -2463,  1611,   127, -2463, 24296,  1174, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463,  1268, 40953,  1221,   -85,  1525,  1586, 37217,
    1415,  2194,  1416,  1195,  1647,   649,  8874,  1649, -2463, 45156,
   -2463, -2463, -2463, -2463, -2463, 40953, -2463, -2463, 40953, -2463,
   28811,  1199, 40953, 40953, -2463, 40953, 40953,   582, 39085,   682,
   33481, -2463, -2463, -2463, -2463,   551,   792, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, 28811, -2463,  1941, -2463,
   -2463, -2463,  1198,   606, -2463, -2463, -2463, -2463,  1251, -2463,
    1251,  1251, -2463, -2463, -2463, -2463,  1204,  1204,  1206, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463,  1209,   718, -2463,  1251, -2463,  1204, -2463, -2463,
   -2463, -2463, -2463, 48395, -2463, -2463, -2463, -2463,   358,   390,
   -2463, -2463, -2463,  1214, -2463,  1666, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463,  3833,   607,  1204, -2463, -2463,
    1047, -2463, -2463, 10834,   202, 10834, -2463,  1216, 27783,  1261,
   10834, -2463, -2463, 10834,  1218,  1697,  1697, 10834, -2463, -2463,
   -2463, -2463,  3205,  1697, -2463,  1697,  1697,  1251,  1251, -2463,
   27880, 10834, -2463, 23244, 10834, 14264,  9364, 10834,  1306,  1307,
    1697, -2463,  1697, -2463, 10834,  7404, 10834, 27880,  1700,  1700,
    1142,  5097,  1222, -2463,   202,   202, -2463,  1697, 10834,  3388,
    3388, -2463,   123, 47024, 10834, 10834, 10834, 10834, 28344,  1310,
     119, 40953, 10834, 10834,  1228,   750, -2463, 10834,  1446, -2463,
    1232, 10834,  1315,   770, 10834, 10834, 10834, 10834, 10834, 10834,
   10834, 10834, 10834, -2463, -2463, 16212,   128,  1545,  1564,   202,
   10834,  -118,   219, 10834, 33948,  7894,  1557,  5934, -2463,   202,
      64,  1557, -2463, -2463, -2463, -2463,   149, -2463, -2463, -2463,
   -2463,  1198, -2463,  1198,  1238, 37217,   171, 32080, -2463, 10834,
   -2463,   617,  1240,  1298,   -19,  1692, 40953, -2463, 21837,  1529,
   -2463,  1248, -2463, 27095,  1529, -2463, -2463, 15232,  1364,  1526,
    1467, -2463, -2463, -2463,  1258, 27783, 12304, 12304, -2463,  1280,
   27783,  1286, -2463, -2463, -2463, -2463, -2463, -2463,   375, -2463,
   37217,   -20,  1346,    88,   623, -2463, -2463,   951,  1273, 45623,
   40953,  1546,  1497,  1547,  -143, -2463, -2463, -2463, 47024, -2463,
   40953, 40953, 46090, 46557, 29278, 40953, 28811, -2463, -2463, -2463,
   -2463, 40953,   869, 40953, 27906, -2463, -2463, -2463,   164, -2463,
   -2463, -2463, -2463, -2463, 40953, 40953, -2463, -2463,   164, 40953,
   40953,   164, -2463,   975, 40953, 40953, 40953, 40953,  1215, 40953,
   40953,   -54,   -54,  1481, -2463,  9854,  1278, -2463, 10834, 10834,
   -2463, 10834,  1452, -2463,   642, -2463,  1491,    25,  1329, 37217,
   40953,   881, -2463, -2463, -2463, -2463, -2463,  1285,  1623, -2463,
    2194,  1624, 31146,   536,   522,  1328, -2463,   657, 10834,  1514,
   -2463, -2463,  1501,    35, -2463, -2463, 28811,    53, -2463,  1502,
     122, -2463,  1519,   649,  1748, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463,   671, 19029, -2463, -2463,  1749,   356,  1749,   420,
   -2463, -2463,  1749, -2463,  1749, -2463, 26632, -2463, 11324, 47024,
    1751, 40953,  1303,  1305, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
    1697,  1386, -2463,  1387,  1388,  1389, -2463, -2463, -2463, -2463,
   -2463, 47024, -2463, -2463,   688, -2463,   322, 10834, 10834,    40,
   -2463, 27159,   689, 10834,  1308,  1309,   707, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463,  1311,  1630, -2463,  1314,
    1319,  1321, -2463, -2463,  4784, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,  1322,
    1330, 27195,  1332, 14264, 14264,  6914,  1356, -2463, 14264,  1333,
   -2463, -2463,   729, 27113,  1313,  1335,  1354,  1358,  1338,  1345,
   27279, 10344, 10834, 10344, 10344, 27511,  1313,  1353, 27646, -2463,
   10834,  1366,  5281, -2463, -2463, -2463,  5046,  5046,  5046, 27880,
   -2463, -2463, -2463,  1372, -2463, 14264, 14264, -2463,  1369,  3992,
    6914, -2463, -2463,  1675, -2463,   677, -2463,  1357, -2463, -2463,
    4603, -2463, 23244, 27822, 10834,   135, -2463, 10834,  1228, 10834,
    1449,  5046,  5046,  5046,   186,   186,    83,    83,    83,   292,
     219, -2463, -2463, -2463,  1359,  1373,  1376,  1569, 27783,   918,
   10834, -2463, 27783,   639,   705, 37217,  2833,  4211,  4280, -2463,
   -2463, -2463, 17625,  1419,   -90,  1419,  1697,  3388, -2463,   425,
   -2463, -2463, -2463, 27783, -2463,  1047, 17625,  1420,  1433,   -57,
   20433,  1591, -2463, 40953, -2463, 40953, -2463,   -33,  1397, -2463,
   10834, -2463, -2463,  1132,  1402,  1595,  1598,   873,   873,  1280,
    1599, -2463, -2463,  1450, -2463, 10834,  1293, -2463,  1295, -2463,
   -2463, -2463, -2463,  1396, -2463, -2463,  1662, -2463, -2463, -2463,
   -2463,  1494,  1148, 10834,  1638, -2463,    75,  1422,  1756,  -129,
    1717, 40953, -2463,  1632, -2463,   447,  1764,   122,  1771,   122,
   28811, 28811, 28811,   775, -2463, -2463,   356, -2463, -2463,   795,
   -2463,   250, -2463, -2463, -2463,  1517,   670,  1148,  2194, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463,   136,   703,  1148,  1518,
   -2463,  1522, -2463,  1524,   747,  1148, -2463, -2463,  1443,  1453,
    1454, 11324, -2463, -2463, 27783, 27783, 27783,  1447, -2463,    91,
   -2463, 40953, -2463, -2463, -2463,  1452, 37217,   649, -2463,   776,
   40953, 37217, 37217, 37217, -2463, -2463, -2463,  1457,  1456, -2463,
   47024,   -79,  1671,  1660, 40953,  1504,  1145,  1913, -2463, 27783,
    1801, 37217, -2463, -2463, -2463, 40953, -2463,  1805,  1047, -2463,
   28811, -2463, 31613, -2463, -2463, -2463, -2463,   356, -2463,   356,
    1687, 40953, 25231,   356,   356, -2463,   804,  1473,  1305,   805,
   47024,  1697,    68,  1478,  1393,   762,   664,  1297, -2463, -2463,
   -2463,   828, 27692, 10834, -2463,  1829, 47024, -2463,  5327, -2463,
   -2463, -2463, -2463, 10834, -2463, -2463, -2463, 10834, -2463, 23244,
   10834,  1806, -2463,  1964,  1964,  5097, 47024, 14264, 14264, 14264,
   14264,   581,   904, 14264, 14264, 14264, 14264, 14264, 14264, 14264,
   14264, 14264, 15722,   269, -2463, -2463, 10834, 10834,  1814,  1806,
   -2463, -2463, -2463,   211,   211, 47024,  1492,  1313,  1495,  1496,
   10834, -2463, 47024,   202, 23719, -2463,  3388, 10834,  2129,  2658,
   10834,   856, 10834,  1811, -2463, -2463,  1498, -2463, -2463, 47024,
   10834,  1499,  4950, 14264, 14264, 23870, -2463, 23906, 10834,  6914,
   -2463,  1481,  1536, 22305, -2463,  1593,  1593,  1593,  1593, -2463,
   -2463, 37217, 37217, 37217, 18093,  1821, 17157, 39552,  1503,   194,
   -2463, 39552, 40019, -2463,  1520, -2463,   202, 10834,  1813,  1508,
    1813,  1521, -2463, -2463,  1523,  1503, 10834,  1661, -2463, -2463,
   -2463,  1573, -2463,   864, -2463,  1930,  1661, -2463,   875, -2463,
   21837,  1420, 10834,   202, -2463,  1528, -2463,  1402,   430, -2463,
   -2463, -2463,  1736, -2463, -2463, -2463, 37217, -2463, 40953, 23737,
    1868, -2463, 40953, 40953, 40953, -2463, 40953,   876,   645,  1532,
   -2463,   645,  1848,   195,  1145,   174,  3632,   -36, -2463, -2463,
   -2463,  1604, 40953, -2463, 40953, -2463, -2463, -2463, -2463, -2463,
   29278, -2463, -2463, -2463, 28811, 22776, 28811, 40953, 40953, 40953,
   40953, 40953, 40953, 40953, 40953, 40953, 40953, -2463, -2463, -2463,
    1481, -2463, -2463, -2463,   221, -2463, -2463,    91,  1535,  1328,
    1586, 40486,   889,  2194,  1537,  1986, -2463,   536, 31146, -2463,
   -2463, -2463,  1945, -2463,   245,   158, -2463, -2463,  1047, 40953,
    1596,   122, 37217, -2463,   897, -2463, -2463, -2463, -2463, 40953,
    1538, -2463,  1538, -2463, -2463, -2463,  1697, -2463, 40953, -2463,
    1541, -2463,  1544, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, -2463, 10834, 27783, -2463,  1551, -2463, 27783, 23755, -2463,
   27783,  1814, -2463,  2181,  2181,  2181,  2234,  1864,   182,  1548,
    2181,  2181,  2181,   198,   198,    74,    74,    74,  1964,   269,
   27783, 27783, -2463, -2463, -2463, -2463,  1553, -2463, -2463, -2463,
    1313,  1554, -2463, -2463,   308, 10834, 10834,  1369, -2463,  3002,
   10834, 47024,   907,  1369,   131, 10834,  3061,  3133, 10834, 10834,
   27731, 23783,  1555, 10834, 47476, -2463, -2463, 37217, 37217, 37217,
   37217, -2463, -2463, -2463, 39552, 40019,  1560, 16688,   194,  1565,
   37217, -2463,  1636,  1561, 17625,  1818,  1763, -2463, 17625,  1763,
      46,  1763,  1822,  1636, 21369, -2463,  1636,  1567,  1769, -2463,
     577, 27783,  2004,  1881,   356,  1881,   356, -2463, 27783,  7894,
   -2463,  1047,  1380, 40953,   202,   -73, -2463,  1587, 40953, -2463,
    1661, 27783, 23244, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
   40953,   921, -2463,   922,   645, -2463,  1615, -2463,   151,  1873,
      48, -2463, 28811,  1041,   674, -2463,  1879,  1802, -2463,   164,
   -2463, 10834,   674,  1803,   179, 40953, -2463, -2463,  1705, -2463,
   47024,   122,   122, -2463, -2463,  1592,  1594,  1602,  1608,  1609,
    1610,  1613,  1614,  1617,  1618,  1620,  1621,  1622,  1625,  1626,
    1627,  1628,  1209,  1629, -2463,  1631,  1528,  1634,  1635,  1639,
   47943,  1640,  1641,  1642,  1643,  1644,   551,   792, -2463, -2463,
   -2463, -2463, -2463, -2463,   698,  1645, -2463,  1612, -2463, -2463,
    1676, -2463,  1679, -2463, -2463, -2463, -2463, -2463,  1605,   710,
      95, 40953,  2050,  1827,  1648,  1328, -2463, 31146,  1150,   178,
    1660, -2463,   103,  1504, -2463,  1988,  1655,  1833, 40953,  1650,
   -2463,  2082, -2463, 31613,  1538,  1653, 47024, -2463, -2463, 27783,
   -2463, -2463, -2463, 14264,  1957,  1656, 47024, -2463, -2463,  1369,
    1369,  3002,   936, -2463,  1369, 10834, 10834,  1369,  1369, 10834,
   -2463, -2463, 23801,  1837, -2463, -2463, -2463, -2463, -2463, -2463,
   -2463, 29745, 39552,  1657, -2463, 34415, -2463, -2463, 40953,   194,
   17625, -2463, -2463,    26, -2463, 17625,  1926, -2463, 17625, -2463,
   40953,  1665, -2463, 40953, -2463, 12794, 10834,  1701, -2463,  1701,
   -2463,   999, -2463,   -57, -2463, -2463,  2067, 18561,  2023, 10834,
   -2463, -2463,  1668,   645, -2463,  1830,  1615,  1670, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463,   943,  1672, 40953, 40953, 14264,
   -2463,   674,   176,   141, -2463,  1943, 37217,  1615, -2463, -2463,
   -2463, -2463,  2046,  2125,  2014, -2463, -2463, 27783, -2463, -2463,
    1697,  1697, -2463, -2463,  2091, -2463, -2463, -2463, -2463,   698,
     277, 22776, 40953, 40953, -2463, -2463, -2463,   221,  2044,   956,
    1047,  2017, 31146,  2131,  1684, 40953,  1504,   134,   134, -2463,
    1824, -2463,  1825, -2463, -2463,   208, -2463, 37217, -2463, -2463,
   18561,  1047, -2463, -2463, -2463,  2480, 14264, 47024,   989, -2463,
    1369,  1369,  1369, -2463,  2122,  1481, -2463,  1001,  2141, -2463,
   40953,   -97,   -66,  1694,  1695, -2463, -2463,  1007, -2463, 10834,
    1699, -2463, -2463, 17625,    26,  1013, -2463, 47024, 40953,  1014,
   47024,  6424,  1696, -2463, -2463, 27783, 27783, 40953,  1761,  1761,
    1759, 40953, 10834, -2463,  1023,  2123,    50,   -42, 27783, -2463,
   37217, -2463, 28811, -2463,   645, -2463, 28811, 10834, -2463,  1281,
    2234,  2159, -2463, -2463, -2463, -2463,  1615,   649, -2463, -2463,
    2016, -2463, 40953,  1772,   305,  1786, -2463, -2463, -2463,   710,
     356,  1328,  1655, 37217,  1047,   536,   245, -2463, -2463, -2463,
   -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463, -2463,
    2136,  1922,  2138,  1596,  1028,  2480,  1033, -2463, 10834,   -16,
    1520, 29745,  1720, -2463,  1035, -2463, -2463, -2463, -2463, -2463,
   40953,   910, -2463, 27783, 40953, -2463, -2463, -2463, 40953,  2091,
    1037, -2463, -2463, 12794,  1721, -2463,  2171,  1865, -2463, -2463,
    1047, -2463, 23819,  1419, 18561, 40953, 40953, 40953, -2463,  1851,
     649,   645,  1050, -2463,  1746, -2463, 24130,  1953, -2463,  2030,
   -2463,  1985,  1740, -2463, 10834, -2463,  1812, -2463, -2463, -2463,
    2191, -2463,  1743,  1655,  1660,  1504,  1955, -2463,  1956,  1754,
    1328, -2463,  1313, 13284, 13284,  1757, -2463, -2463, 40953, -2463,
    1056,  1760,  1064, -2463, -2463, -2463, -2463, 40953,  1755, 34415,
   -2463,  2123, -2463, -2463, -2463,   229, -2463,   229, 21837,  1985,
   -2463, 28811, 22776,  1973,  1740,    49,  1969,  2194, -2463, 27783,
   -2463,  1047, 31146, -2463, -2463, -2463, -2463, -2463, 18561,  1419,
   14754,  1896,   319, 27131, -2463, -2463, -2463, -2463,  1074, -2463,
    2244,  1920, -2463, -2463, -2463, -2463, 40953,  1402,  1402,  -148,
    1969, -2463, -2463,  2059, -2463, -2463, -2463, -2463, -2463,   105,
    1978, -2463,  1980,   786,  1655,  1083, -2463,  2229, -2463, -2463,
   -2463, -2463, -2463, -2463,  1776,  1778, -2463,   229, -2463, -2463,
   -2463, -2463, -2463,   241,   241,  2146, -2463,  1841, -2463, -2463,
   -2463,  1328, 13774, -2463,  2260,  1402,   645, -2463,  2248, -2463,
     111, -2463, -2463,  1419, -2463,  1784, -2463, -2463, -2463, -2463,
   -2463, -2463
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2463, -2463, -2463,  1698, -2463, -2463, -2463,   237, -2463,   908,
   -2463,   226,  -499,   544, -2463, -2463, -2463,  -842,    21, -2463,
   -2463, -2463, -2463,    38,   285, -2463,  -398, -1809,  -156, -2463,
   -2350, -2445, -2463,  -460, -2337, -1633, -2463, -1022,   210, -2463,
   -2018, -2463,  -603,  -892,  -696,  -897, -2463,     7, -2463,  1252,
   -1020, -1705, -2312,  -456, -2463,  -530, -2463,  -299, -1695,  -500,
    -489, -2463, -2216,  -821, -2463,  1425,  -214, -2463,   576, -2463,
   -2027, -2463, -2463,   565, -2463,  -859, -2463, -2463, -1772,   220,
    -444, -2200, -2274,   518,  -613, -2463,  -490,   258, -1675, -2463,
     587, -2463,  -434, -2463,  -480, -2048, -2463, -2463, -2463,  1253,
    -616, -2463, -2463, -2463, -2463,    32, -2463, -2463, -2463, -2463,
   -2463,  -614,   521, -2168, -2463,   487, -2463, -2463, -2463, -2463,
     -53,   242, -2463,    41,  1480,   -31,     9,    15,    23,    47,
    1482,  1505, -2463,  -923,   421, -2463, -2463,  -577,   -39, -2463,
     637, -2462, -1972,  -369,   987,  1465,  1469,  -329,  -241, -2463,
    -399, -2463,  -636, -2463, -2463,   638,  1025, -1211, -1214, -2463,
     364, -2463,  -327, -2463,   112,  -340,  1006, -2463,  1483, -2463,
   -2463, -2463, -2463, -1174,   673, -1908,   384, -1897, -1780,   150,
     138, -1099,  -211,    43,   393,  -297, -2463, -2463,  -291, -1638,
   -2270,  -308,  -307, -2463, -2463, -1086,   884,  -885, -2463, -2463,
    -646,   406, -2463, -2463, -2463,   767,  1500, -2463, -2463,  1708,
    1739, -2463,  -403,  2108,   712,  -754,  1169, -1133,  1171, -1135,
   -1141, -1138,  1173,  1176, -1181,  2572,  -144,  -562,    -5, -2463,
   -2239, -1578, -2463, -2463,   -70, -2463,  -371, -2463,  -367, -2463,
   -2463, -2463,  -352, -2449, -2463,  1102, -2463, -1185, -2463,  3305,
     683, -2463, -1567,  -559,  -654,  -894, -1439, -2463, -2463, -2463,
   -2463, -2463, -2463, -1504, -1693,  -584,   751, -2463, -2463,   859,
   -2463, -2463,  -967,  -553,   964,  -539,  -752,   756, -2463,  -542,
    1107, -2463,  1100,  -514,   417,  -982,     6, -2463,  -423,   256,
    1445, -1488, -1992, -2463, -2463,  -501, -2102,  -831, -2463,  -607,
   -2463, -2463, -2463, -1102, -2463,   585, -2463, -1018, -2463,  -259,
   -2463, -2463, -2033, -2463, -2463, -2463, -2463, -2463, -2463,  -394,
   -2463,  -449,  -453, -2463, -2463,     4,  -687,  1318, -2463, -2463,
     534, -2463,   909, -2463,   833, -2463, -2463, -2463,  1090, -2463,
   -2463, -2463,    33,  1559,   387, -2463,  1097, -2463, -2463, -2463,
   -2463, -2463,   284, -2463, -1014, -2369,    70, -2220, -1034,    -6,
   -2463, -2463, -2463,  -510, -2463, -2019
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1667
static const yytype_int16 yytable[] =
{
     468,   464,   905,   576,   647,  1038,  1375,  1045,  1392,   820,
     842,  1391,   465,   871,   713,  1087,   645,   588,  1558,  1356,
     529,    41,  1213,    58,  1094,   831,  1422,  1980,  1423,  2031,
    1425,  1074,    51,    72,  1426,  2253,  2336,  1224,  1363,    58,
    1846,    53,   653,  1345,  1454,  2046,  2352,  2048,  1593,  1594,
    1403,  1532,  1999,  1269,  1533,  1941,  2027,  1531,  2208,  1529,
    2360,  1042,  1367,  2334,  1103,  1279,  1396,   590,  1513,  -996,
      79,   707,   562,   591,   654,  2225,  2363,   729,  -679,  -428,
     574, -1021,  -679,  2514,  1975,  1886,   472,  -431,  1445, -1018,
   -1018, -1543,  1077,  1066,  1233,  1678,   535,  -674,  1975, -1645,
   -1645,   535,  -682,  1189, -1021,   729,   904,  1665,   910, -1554,
     914,  1066,  -682, -1554, -1561,  1712,  1709,   599, -1561,  2215,
    1202, -1656, -1656,  2685,  1239,  2082, -1663, -1663,  1285,   607,
   -1665, -1665, -1022,   878,  1662,   714,  1359, -1022, -1543,   879,
   -1019, -1019,  1348,  2523,  2519,  1046,  1394,  1595,  -641,   583,
    -890,  -654,  -669,   535,   535,  1641,  1241,  -890,  -909,  1604,
     825,  2628,  1642,  2569,  2462,  -909,  2110,  2112,  1081,  1270,
     580,  -428,  2548,   729,   832,  1604,  1863,   638,  -173,  -431,
    1066,  2505,  1274,  -173,  1282,  1081,   535,  2246,   729,  2616,
     729,  2223,  1793,  2644,  2216,   585,  1376,  1233,  2089,  1379,
    1380,   713,     3,     4,  2655,   566,  2446,   713,  2585,  1886,
    1368,  1359,  2629,   584,  2216,  2162,  -388,  2796,   864,  1061,
    2630,  2059,  2520,  2688,  2823,  2848,  2217,  1239,  1222,  1649,
    1233,   585,  2500,  1368,  2488,  2657,  2687,  2521,  1570,  1351,
    1418,  2218,  2747,  1318,   880,   860,  2217,   867,  1715,  2631,
    2219,  1225,   548,  2711,  2265,   581,  2591,  2604,  1480,  1241,
    1239,  2425,  1401,  1062,  2364,  1095,  1691,  2640,  2459,  1402,
    2219,   854,  1733,  1679,  1315,  2641,   536,  2608,  1042,  1280,
    1886,   860,  2658,  2787,  2220,  2788,  1730,  2215,  1089,  1319,
     585,  2585,  1241,  2602,  1089,  1283,  2627,  1977,  2670,  2837,
    1730,  1331,  2035,  1233,  2723,  2559,  2419,   546,  2225,  2275,
    2423,  2384,  2139,   532,  1344,   862,   713,   713,  2632,  1233,
    2264,  2807,  2513,    80,  2517,   533,  1390,  2367,  2499,  2633,
    2288,  1301,  2724,  1239,  1181,  1182,  1989,   833,  2460,   834,
      25,  2817,  2000,  1731,  2763,   534,  2797,  2261,  1320,  2263,
    1570,   862,  1692,  1716,   549,  2835,  1419,  2024,  -428,  1199,
     600,   535,  2216,  2603,   863,  1241,  -431,    81,  1650,  2221,
    2518,  1990,  1406,   855,  1067,    29,  1316,  2141,  1229,  2276,
    2849,  1241,   569,  2844,  2656,  2689,  1975,  1353,  1975,  2221,
    1126,  2786,  1067,   881,  2217,  1213,  1321,  2614,   826,  1369,
    1405,  1089,  1437,  1089,  1089,  2163,  2700,  1366,   578,  2218,
    2605,  1284,  2548,  2447,  2522,  2659,    31,   579,  2219,  -428,
    2365,  2798,  1369,  2601,  2409,  1858,   586,  -431,   493,    32,
    1794,  2805,   521,  1063,  2374,  2830,  1478,  1558,  2642,   539,
    2792,  2451,  1435,   882,  1271,  2585,  1297,   883,  2382,   573,
     573,  2708,  2220,    33,  1322,  2560,  2385,  2000,  2778,  2277,
    1366,  1067,  1275,  1038,  1823,   639,  1395,  1680,   827,  1089,
    2032,  1189,  1089,  1089,  2072,  2073,   884,   592,   582,  2463,
    2809,   723,  2336,  1366,  1518,  2012,  1982,  1709,  2514,  1463,
    1725,  1202,   625,   576,   615,  2765,    58,  1354,  2764,  -890,
    2182,   603,  1342,  2838,  1643,   616,   619,  -909,  2006,  2334,
    1605,  1782,  2558,  2001,   617,  2549,  2634,  2562,   712,  2635,
    2564,  1512,   473,   567,  2506,  1068,  1943,  -428,   709,  2585,
    1176,  1343,  2824,  1392,   611,  -431,  1064,  2221,   612, -1642,
   -1642,  2060,   885,  1073,   468,   468,    58,  1208,   611,   610,
    -996,   872,   612,  2121,  2453,  1457,  1901,  1208,  1447,  -679,
     729,   633, -1021,   468,   645,  1262,  -428,  1444,  -428,  1209,
     713,   836, -1543,  1984,  -431,  1450,  -431,  2464,  -674,  1209,
    2839,  2033,  1228,  1210,  1782, -1021,   590,   636,  2710,  2254,
   -1554,  1318,   591,  1212, -1554, -1561,  1570,  1570,  2714, -1561,
      41,  1570,    58,  1216,   953,   468,  1039,  2840,  2715,   593,
     835,    51,    72, -1022,  1514,  2450,  1516,   843, -1022, -1543,
      53,  1515,  1386,  1664,  1522,   852,  2810,   707,  1526,  1187,
    1455,  1601,  1193,  -669,  1277,  1666,  1975,  1319,  1570,  1570,
    1975,  1085,  1086,  1567,  1359,   468,  1387,  1572,  1574,    79,
    2255,  -173,  -173,    83,  1360,  2665,  2490,  2491,  1085,  1086,
    1381,  1208,  1458,  1460,  1359,  1259,  1260,  1261,  1262,  1386,
    1814,  1515,  1042,   637,  1362,  1368,  2509,  1898,  1899,  1900,
    1901,  1225,  1759,  1209,  1840,  2452,   611,  2769,  1184,  1841,
     612,   717,  1762,  1387,  1558,  1765,  1257,  1258,  1259,  1260,
    1261,  1262,   718,   878,  2481,   712,   640,  1181,  1182,   879,
    2147,   712,   953,  1168,  2126,  2128,  1515,  2127,  2129,  2130,
    2125,  2124,  2414,   641,  1733,  2055,  1515,  1042,  2482,   468,
     881,   651,  1199,  2336,  1962,  1963,  2414,    58,  2056,  1842,
    1607,   621,  2392,   622,  1321,  2173,  1896,  1897,  1898,  1899,
    1900,  1901,   623,  2594,   624,  1701,   576,   468,  2615,  1751,
    2334,  2267,  1524,  1525,  2119,  1446,   476,  1833,  2085,   719,
    1539,  1758,  1540,  1541,   522,    25,  1835,   468,   468,   468,
    2135,   468,  1197,  1198,  2034,  2035,  2706,  1578,   715,  1579,
     716,  1397,   721,  1446,  1542,  1543,  1459,  1382,  2843,  1368,
    2142,   729,  1322,   468,  1591,  1383,  1933,  1860,  1208,   822,
      29,    84,  1299,  2036,   880,  2818,  2819,   722,  1625,    85,
     712,   712,   891,   477,  1778,  1779,  1780,  1822,   723,  2166,
    1209,  1824,  1934,  1975,  1826,   724,  2171,  1923,  1983,  1038,
    1208,   892,  1975,  2268,  1210,  2148,  1079,  1975,  1722,  1080,
    1975,    31,   468,    86,  1839,  2149,   468,   468,  1843,   830,
    1844,  1392,  1209,  2846,  1369,  1309,  1310,   468,  1314,  1975,
    2006,   591,   591,   824,   591,  1757,  1212,  2010,   878,  1613,
     839,    25,   729,  1760,   879,  1168,  2691,  2070,  1763,   844,
     860,   893,   878,   852,  1768,   861, -1640, -1640,   879,  1775,
      87,  2695,    34,  1708,  1708,  1614,  1368,  2269,   635,  2270,
     953,   845,  1492,  1493,  2551,  1400,    29,   953,   847,  2552,
    1570,  1570,  1570,  1570,  2061,  1366,  1570,  1570,  1570,  1570,
    1570,  1570,  1570,  1570,  1570,  1570,   650,  2003,   953,  1368,
     848,  1799,  1626,   628,  1486,  1487,  1935,  2538, -1641, -1641,
    1393,  1936,  1975,   713,   850,  1089,  1627,    31,  1861,  -474,
     862,  1628,   851,   881,  -474,  1089,   713,  1090,  1089,  2331,
      32,   858,  1295,  1090,   878,  1296,  1570,  1570,   629,   894,
     879,     3,     4,  1368,  1811,  1975,  1812,   573,  1369,   880,
    2090,   481,   873,   482,    33,  2097,  1629,  1916,   878,  1918,
    1919,  1567,  1567,   880,   879,   857,  1567,   859,    34,   863,
    1492,  1493,   630,   908,  1615, -1643, -1643,   883,   484,  1616,
    1496,  1497,  2058,  1917,  1617, -1644, -1644,  1298,   895,  -474,
    1299,   875,  2197,  2198,  2199,  2200,   896,  1955,   876,  1956,
    1089,    25,   522,  1567,  1567,  2742,   909,  1226,   897,  1366,
     953,  1931,   877,  1089,   476,  2062,   889,  1230,  1422,   631,
    1423,   611,  1425,  -996,  1039,   612,  1426,  1558,  2371,  1451,
    1278,  1043,  1299,  1975,   712, -1067,    29,  1853,  -474,   898,
    1287,   890,  1090,  1090,   709,   880,   821,  1979,   823,  1937,
    1039,  1222,  1049,  1477,  1510,  1369,  1478,  1511,  2646,  2066,
    1938,   628,    58,  1957,  1674,  1958,  1975,  1073,  2466,   880,
    1720,   477,   885,  1299,  2467,   907,  2836,    31,  1496,  1497,
    2424,  2043,  2427,  2045,   900,  1157,  2468,   911,  1369,  1790,
      32,  2806,  1791, -1646, -1646,  1044,   629,  1168,   881,  2286,
    1545,  1630,  1047,  2279,  1818,  2106,   901,  1478,  1546,  1547,
    1548,  2820,   881,  1056,    33,  2469,  1366,  2470,  1829,  2164,
    2165,  1830,  1618,  1058,  2262,   479,   903,   468,    34,   468,
    2081,  1060,  1369,  1619,   468,  1859,  1867,   468,  1299,  1299,
    1065,   468,  2349,   602,  2079,   605,  1070,   609,   912,  1366,
    1975,   615,   883,    58,  1871,   468,  1096,  1299,   468,   468,
     468,   468,   616,   619,  2494,  2850,   883,  1072,   468,   468,
     468,   617,  2471,  2278,  1075,  2287,  1905,   631,  1076,  1299,
    1078,   913,   468,  1463, -1647, -1647,  1170,  1168,   468,   468,
     468,   468,  1039,  1366,   881,   884,   468,   468,   878,  2472,
    1171,   468,  2244,  1981,   879,   468, -1648, -1648,   468,   468,
     468,   468,   468,   468,   468,   468,   468,    88,   881,   468,
     471,   573,  2049,  1173,   468,  2050,   520,   468,  1175,   468,
    -645,   953,  -652,  2829,  2011,  2011,   547, -1649, -1649,   481,
     559,   482,  2053,  1180,  1721,  2054,  -440,   885,   883,  1183,
    2534,  2115,  2117,   468,  1511,  2118,  1184,  1157,  2515,  -440,
     836,   885,  1185,   483,  -440,  2473,   484,  1186,  1766,    25,
    2474,   468,   883, -1650, -1650,  2131,  2006,   884,  1299,  1190,
     468,   468,   713,    34,  2101,  1567,  1567,  1567,  1567, -1651,
   -1651,  1567,  1567,  1567,  1567,  1567,  1567,  1567,  1567,  1567,
    1567,  1767,  -642,  2178,    29,  1682,  1299,  1192,  2466,   880,
    -440,  2242,  1168,  2475,  2243, -1652, -1652,  -643,  1039,  2328,
    1039,  2170,  2247,  2266,   728,  2248,  1791,  1886,  2476,  -440,
    1515,  1195,  1887,  1888,  1889,   583,  2355,  1232,  1196,  1791,
    1233,  1567,  1567,   885,  2372,    31,  1201,  2373,  -475,   523,
    1203,  2286,  1204,  -475,  2393,  2469,  -646,  1511,    32,   953,
    1205,  2454,   468,   468,  1206,   468,    25,   885,  2455,  2456,
    1239,  1791,  1791,  2005,  -644,  2331,  1570, -1667,  -440,  1883,
    1884,  1223,    33,  2539,  1903,  1267,  1511,  -440,  2120,  2122,
    2595,  1165,   468,  2596,  1207,  1480,   524,  2230,  1214,   584,
    1039,    29,  1241,  2621, -1653, -1653,  1791,  1751,  1538,  2337,
    1515,   466,  2471, -1654, -1654,  1215,   494,   712,  -475,  1216,
     494,  1928,  1929,  2477, -1655, -1655,   538,   494,   543,  1227,
     712,   543,   953,  1168,   564,  1815,  2647,   494,   494,  1511,
      54,  2669,    31,  1273,  2669,  2370,  1159,  1274,  2650,  1275,
    1448,  2651,  1449,  2348,  2662,    32,    54,  1073,   881,  1289,
    2667,  2671,  1570,  2668,  2668,  1168,  1302,  -475,   861,    25,
    2683,   468,   468,  2684,   575,  2720,   585,   468,  2684,    33,
    2721,   543,  2729,  1511,  2735,  1073,  1308,  2668,   564,   494,
     564,   564,   564,    34,   576,   863,  1286,  2750,   589,  1338,
    2751, -1667,  1667,  2779,    29,  2697,  2780,  1890,  1773,  1157,
    2474,  2782,   883,  1340,  1073, -1667,    54,   468,   468,   468,
   -1667,  2813,   468,  -440,  2668, -1657, -1657,  2006,  1891,  1570,
    2831, -1658, -1658,  2684,   620,   468,   468,   468,   468,   576,
    1346,  1774,  1364,  2486,   468,    31,   632,  2429, -1659, -1659,
    2432, -1660, -1660,  2475,  1365, -1667, -1661, -1661,    32,   468,
     468, -1662, -1662,  1165,   468,  1549,  1550,  1551,  2476,  1552,
    1553,  1554,  1555,  1556,  1557,  2619, -1664, -1664,   468, -1666,
   -1666,   468,    33,   468,  1408,  1409,   611,  1710,  1711,   847,
     612,  1366,  1089,  -521,  -521,  1371,    34,  1892,  1372,  1157,
    -525,  -525,  -524,  -524,   468,  1494,  1495,   885,  1373,   576,
    1250,  1377,   586,  1496,  1497,  1384,   468,  1973,  1159,  1291,
    1293,   829,  1385,  1389,  1404,  1399,  2331,  1411,   465,  1416,
     468,  1973,  2443,  1412,  1420,  2495,  2496,  1042,  1421,  1428,
    1431,  1432,   465,  1434,   468,  1438,  2106,  1446,  1476,  1176,
    1187,  1515,  1193,  2375,   874,  1479,   615,  2441,    58,   468,
    1481,  1482,  1517,  2477,  1523,  1518,   729,   616,   619,  1576,
    1577,  1233,  1590,  1603,  1610,  1621,   617,   468,  1622,  1090,
    1624,  1645,  1646,  1838,  1662,  1668,  1675,  1676,  1683,  1051,
    1053,  1055,  1090,  1702,  1039,  1039,  1039,   584,  1690,    25,
   -1667,   891,  1703,  2143,  2144,  2145,  2146,  1704,  1705,  2150,
    2151,  2152,  2153,  2154,  2155,  2156,  2157,  2158,  2159,  1723,
     892,  1728,  1727,  1729,  1157,  1783,   585,  1726,  1792,  1788,
    1796,  1800,  1801,  1802,    29,   953,  1816,  1734,  1820,  1737,
    1821,  1825,  1748,  1827,  1828,  1836,  1847,  1851,  1752,  1852,
    1754,  1854,  1855,  1856,  1857,  1869,  1870,  1873,  1872,  2186,
    2187,  1874,  1761,  1299,  1168,  2328,  1875,  1764,  1876,  1878,
     893,  1769,  1770,  1771,  1772,    31,  1776,  1777,  1879,  1882,
    1904,  1567,  1910,  1911,  1039,  1913,   712,  1912,    32,  1893,
    1894,  1895,  1914,  1896,  1897,  1898,  1899,  1900,  1901, -1667,
    1921,  1927,  1932,  1939,  1168,  1949,  1257,  1258,  1259,  1260,
    1261,  1262,    33,  1925,  1948,  1165,  1089,   468,  1953,  1951,
    1168,  1089,  1952,   713,  1977,  1986,    34,   468,  1988,  1815,
    1995,   468,  2002,  2008,   468,  -526,  2282,  2014,  -527,  2013,
    1168,   468,   468,   468,   468,  1157,  2016,   468,   468,   468,
     468,   468,   468,   468,   468,   468,   468,  2017,   894,  2018,
     468,   468,  2020,  1458,  1460,  2023,  1392,  1567,  2022,  1168,
    1159,  2026,  2192,  2042,   468,  2029,  1168,  1157,   576,   564,
    2044,   468,  2057,  2063,   468,   627,   468,  2064,  1294,  2065,
    2067,   564,  2071,  1168,   468,   576,   494,   468,   468,  2092,
    2068,  2069,   468,   468,  2087,  1165,  2088,   895,  2091,  2098,
    2099,  1305,  2095,    54,  2102,   896,  2109,  2116,   468,  1973,
     468,  1973,   644,   494,   494,  2123,  2598,   897,  2649,  2134,
     465,   468,   465,  1907,  1567,  1886,  1906,  1347,  2180,  2167,
     468,  2193,  2168,  2169,  2181,  2694,  2184,  1960,  2206,  2232,
    1374,  1464,  2228,  2214,  2701,  2234,   468,   543,   898,   543,
    1159,  2239,  2052,    54,   575,   475,   564,  2241,  2236,   476,
    2237,  1398,  1222,  2245,  2252,   494,  2256,  2260,  2272,  2274,
    2290,  2351,  2358,  2357,  2362,  2368,  2377,   564,  1791,  2378,
   -1067,  2383,  2415,  2420,  2386,  1465,  2654,  2428,  2380,   564,
    2387,  2388,  2401,   900,  1039,  2075,  2411,  2418,  1039,  2335,
    1039,  2421,  2412,  2433,  2654,  2434,  2328,   589,  2435,    54,
    2436,  1466,  2449,  2457,  2484,   901,   477,  1458,  1460,  2461,
    1165,  2485,  2489,   478,   564,   564,   564,  2749,  1089,  1467,
   -1018,  2502, -1640,  1468,  2503,   903,  2510,  2501,  1090,  2722,
   -1641,  2511,  2504,  2107,  2524,  2108, -1642, -1643, -1644,  2113,
    2114, -1645, -1646,  2525,  1469, -1647, -1648,  1470, -1649, -1650,
   -1651,  2703,  2527, -1652, -1653, -1654, -1655, -1657,  2531, -1658,
     479,  1471, -1659, -1660,  2536,  1159,   468, -1661, -1662, -1663,
   -1664, -1665, -1666, -1019,  2512,  2544,  2530,   728,  2533,  2366,
    1886,  2563,  2537,  2550,  2694,  1887,  1888,  1889,  2577,  1427,
    2732,  2568,  2581,  2587,  2803,  2589,  2592,  2590,  2597,  2606,
    2609,  2610,  2175,  2611,  2612,  2620,  2623,  2624,  1172,   468,
     468,  2625,  2638,  2639,   468,  1168,  2648,  2652,  1453,   468,
    2660,  2661,   468,   468,  2744,  2664,  2673,   468,   480,   728,
    2677,  1165,  1886,  2680,    54,  2699,  2685, -1667, -1667, -1667,
    2702,  2704,  2707,  2716,  2717,  2718,  2728,  2738,   468,  1973,
    1472,  2737,   468,  1973,  2754,  2739,  1157,  2748,  1473,  1160,
     465,  2752,  2605,  1165,   465,  2755,  2757,  2761,  2760,  2762,
     891,  2094,  1191,   468,   481,  2793,   482,  2766,  2767,  2535,
    2768,  2194,   728,  2808,  2777,  1886,  1159,  2781,  2799,   892,
    1887,  1888,  1889,  2814,  2815,  2822,  1157,  2825,   483,  2827,
    1474,   484,  2832,  2833,  2834,  2823,  1039,  1220,  2824,  2845,
    2847,  2851,  1157,   564,  2289,   468,  2293,   849,  1159,  2040,
    1753,  2445,  2442,  2444,  1168,  2249,  2743,  2580,  2789,   494,
     494,  2492,  1157,  2356,  2842,   564,   564,  1307,  2795,   893,
    2698,  2821,  2828,  1355,  2637,  2025,  2047,  2791,  2361,  2076,
    2826,  2333,  2294,  2021,  2335,  2790,  2077,  2103,  1443,  2350,
    2532,  1157,   564,  1358,  1281,  2600,  1300,  2004,  1157,  1089,
    1719,  1335,  2731,  2075,  1334,   564,   589,   589,  2679,   589,
    2785,  1891,  1699,  2015,  2235,  1157,  2736,  2439,  1718,  1985,
    2209,  1339,   564,  2666,  2727,  2410,   564,  2205,  2426,  2726,
    2733,  1528,  2734,  1530,  1848,  1534,  2783,   712,  1535,  2579,
    1168,  2784,  2776,  1651,  1660,  1787,  2007,   468,  1864,  1946,
    1168,  1944,  1661,  2080,  2719,  1845,  1670,   894,  2250,   468,
     468,  1160,  2645,   468,  1672,  1669,     0,  1671,  1456,  2516,
       0,     0,     0,     0,     0,   468,  1973,     0,     0,  1303,
    1892,     0,     0,     0,   468,  1973,     0,   465,     0,   468,
    1973,     0,   468,  1973,     0,     0,   465,  1162,     0,   468,
     468,   465,     0,     0,   465,  2258,   895,     0,     0,     0,
    1714,   468,  1973,   468,   896,     0,  1891,     0,     0,     0,
       0,     0,     0,   465,     0,     0,   897,     0,  1163,  2291,
       0,  1157,  1892,   468,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2338,  2339,  2340,  2341,  2342,  2343,
    2344,  2345,  2346,  2347,     0,     0,     0,   898,   728,  1415,
    2438,  1886,  2440,     0,   564,  2335,  1887,  1888,  1889,     0,
       0,     0,     0,     0,  1441,     0,     0,     0,     0,     0,
     644,     0,     0,   644,     0,  1892,     0,   494,   494,  1797,
     494,   644,  1165,   564,   468,  1973,     0,     0,     0,     0,
     468,  1168,   900,     0,     0,     0,   465,     0,     0,     0,
     576,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2622,     0,   468,   901,     0,     0,   468,  1973,    54,
       0,  1168,  1165,     0,  1168,   468,     0,     0,     0,   465,
       0,     0,  2516,     0,   903,     0,   468,  1159,  1165,     0,
       0,     0,     0,     0,     0,     0,  1039,  1157,     0,     0,
    1039,   468,     0,     0,     0,     0,     0,     0,  1165,  1162,
       0,     0,  1893,  1894,  1895,     0,  1896,  1897,  1898,  1899,
    1900,  1901,     0,     0,     0,     0,     0,  1159,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1165,     0,  1090,
    1163,     0,     0,  1159,  1165,     0,     0,     0,     0,     0,
       0,     0,   468,  1160,     0,   468,  1973,     0,  1560,     0,
      54,  1165,     0,  1159, -1667, -1667, -1667,   465,  1896,  1897,
    1898,  1899,  1900,  1901,     0,  2713,   728,   468,     0,  1886,
       0,     0,     0,     0,  1887,  1888,  1889,     0,   468,  1973,
       0,     0,  1159,     0,     0,     0,   644,     0,     0,  1159,
     465,  2176, -1667,     0,     0,     0,  1157,     0,   468,     0,
       0,     0,     0,     0,     0,     0,  1159,  1893,  1894,  1895,
       0,  1896,  1897,  1898,  1899,  1900,  1901,   468,   468,   564,
       0,  2740,     0,     0,  1611,     0,  1157,     0,     0,     0,
       0,     0,     0,  1160,     0,     0,     0,     0,     0,     0,
     564,     0,   564,     0,     0,  1039,  2335,     0,     0,     0,
       0,  1684,     0,  1689,     0,  1959,     0,  2333,     0,     0,
       0,  1892,   468,  1973,   468,     0,     0,  1165,     0,     0,
       0,     0,     0,     0,   465,     0,     0,     0,     0,     0,
       0,     0,  1157,     0,    54,   564,     0,     0,     0,     0,
       0,     0,  1157,     0,  1358,   494,     0,     0,     0,     0,
       0,     0,  2804,     0,     0,   494,  1735,   494,  1739,     0,
     494,     0,     0,     0,     0,     0,   494,     0,   494,     0,
       0,     0,  1159,     0,     0,     0,   468,  1164,     0,   644,
     494,     0,     0, -1447,   644,   494,     0,     0,     0,   494,
     494,   494,   494,     0,   494,   494,     0,     0,     0,     0,
       0,  1162,     0,     0,     0,     0,     0,     0,  1160,     0,
       0,     0,     0,     0,   564,  1798,     0,     0,     0,     0,
    1891,     0,     0,     0,     0,     0,  2709,  1810,     0,     0,
       0,     0,  1163,     0,     0,  2599,     0,     0,     0,     0,
       0,     0,     0,  1165,     0,     0,  2078,     0,     0,     0,
       0,  2083,  2084,  2086,     0,     0,     0,  1157,     0,     0,
       0,     0,     0,     0,    54,     0,     0,     0,     0,  2617,
    2618,  2100,     0,     0,     0, -1447,  1850,     0,     0,     0,
       0,     0,  2626,     0,     0,     0,     0,     0,     0,  1892,
       0,  1162,     0,  1157,     0,     0,     0,     0,  1159,     0,
       0,     0,     0,  1893,  1894,  1895,     0,  1896,  1897,  1898,
    1899,  1900,  1901,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,  1157,     0,     0,  1157, -1447,     0,  1160,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1447,     0,     0,     0,     0, -1447,     0,     0,  2681,  1164,
   -1447,     0,  1165,     0,     0,     0,     0,     0,  2333, -1447,
    1232,  1160, -1447,  1233,     0,     0,     0,     0,  1234,  1235,
    1236,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1165,     0,     0,     0,     0,     0,     0,     0,
       0, -1447,     0,  1239,     0,  1220,     0,     0,     0,     0,
    1240,     0,     0,     0,     0,     0,     0,  1159,     0,     0,
   -1447,  2201,  2202,  2203,     0,     0,  1162,  1560,     0,   728,
       0,     0,  1886,     0,     0,  1241,     0,  1887,  1888,  1889,
       0,     0,     0,     0,     0,     0,     0,  1159,  1165,     0,
    1220,     0,     0,     0,  2395,     0,     0,  1163,  1165,     0,
     564,     0,     0,     0,     0,     0,     0,  1976,  1611, -1447,
       0,     0, -1447,     0,     0,     0,  2257,     0, -1447,     0,
       0,  1976,   802,   802,  1950,  1994,     0,     0,  1997,     0,
    1689,  1893,  1894,  1895,     0,  1896,  1897,  1898,  1899,  1900,
    1901,   728,  1967,  1159,  1886,     0,     0,     0,     0,  1887,
    1888,  1889,     0,  1159,     0,    54,  1967,     0,  1157,     0,
     575,     0,     0,     0,     0,     0,  2396,     0,     0,     0,
       0,     0,     0, -1447,  1242,     0,  1415,     0,     0,     0,
       0,  2354,   948,   955,     0,     0,     0,  1162,  1243,     0,
       0,     0,     0,  1244,     0,     0,     0,     0,     0,     0,
       0,     0,  1453,     0,     0,     0,     0,     0,  1527,     0,
     535,     0,     0,  1165, -1667, -1667,     0,     0,  1163,  1162,
       0,     0,     0,     0,     0,     0,     0,  1960,  1247,     0,
       0,     0,     0,     0,     0,     0,  1415,     0,     0,     0,
       0,   564,     0,     0,     0,  1415,   564,   564,   564,  1165,
    1163,  1164,     0,     0, -1447,     0,     0,     0,     0,   494,
       0,     0, -1447,     0,     0,     0,   564,     0,  1159, -1667,
     644,     0,     0,  1891,     0,     0,     0,     0, -1447,  1165,
   -1447, -1447,  1165,  1250,     0,     0,  1415,  1415,     0,     0,
     948,     0,     0,     0,     0,     0,     0,  2405,  2406,  2407,
    2408,     0,     0,     0,  1159,     0,     0,  1178,    54,     0,
    1160,     0,     0,  1484,  1485,     0,     0, -1447,     0,     0,
   -1447, -1447, -1447,     0,  1560,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1159,  1200,     0,  1159,     0,     0,
       0,  1164,  1892,     0,     0,  1891,     0,     0,     0,     0,
    1160,     0,     0,     0,     0,  1217,  1218,  1219,     0,  1221,
       0,     0,     0,     0,     0,     0,  1160,     0,     0,     0,
       0,     0,     0,  1252,     0,     0,     0,     0,     0,     0,
       0,  1272,     0,     0,     0,     0,  1160,  1486,  1487,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2196,     0,
       0,     0,     0,     0,     0,     0,   564,   564,   564,   466,
       0,  1976,  2213,     0,  1892,  1160,  2213,  2227,     0,     0,
       0,     0,  1160,     0,     0,     0,     0,     0,     0,  1220,
    1313,     0,     0,     0,  1325,  1330,     0,     0,     0,  1160,
       0,     0,     0,     0,  2204,  1689,  2207,     0,     0,  1488,
    1489,  1490,  1491,  1492,  1493,     0,     0,  1494,  1495,     0,
       0,   564,     0,   494,  1165,     0,  1164,  1415,  1358,  1415,
       0,  1441,  1253,     0,     0,  1254,  1255,  1256,     0,  1257,
    1258,  1259,  1260,  1261,  1262,     0,     0,   494,   948,  2292,
       0,     0,     0,     0,     0,   948,  1484,  1485,     0,     0,
       0,     0,   494,   494,   494,   494,   494,   494,   494,   494,
     494,   494,     0,     0,     0,     0,   948,     0,  1162,  1159,
       0,     0,     0,     0,     0,     0,   564,     0,     0,     0,
       0,     0,     0,  1358,  1893,  1894,  1895,     0,  1896,  1897,
    1898,  1899,  1900,  1901,  1441,     0,     0,   564,     0,  1163,
       0,     0,     0,     0,  1415,  1160,     0,     0,  1162,     0,
       0,  1496,  1497,  2376,     0,     0,     0,     0,     0,     0,
    1486,  1487,     0,     0,  1162,     0,  2607,     0,    54,     0,
       0,     0,     0,     0,     0,     0,     0,  1164,     0,  1163,
       0,     0,     0,     0,  1162,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,  1893,  1894,  1895,     0,
    1896,  1897,  1898,  1899,  1900,  1901,     0,     0,     0,  1164,
       0,     0,     0,  1162,     0,  1163,     0,  2643,   948,     0,
    1162,     0,  1488,  1489,  1490,  1491,  1492,  1493,     0,  2404,
    1494,  1495,   564,   564,   564,   564,     0,  1162,     0,  2213,
    2227,     0,  2213,     0,  1163,  2413,     0,     0,     0,  1976,
       0,  1163,     0,  1976,     0,     0,     0,     0,   891,  2431,
       0,  1498,  1499,     0,     0,     0,     0,     0,  1163,     0,
       0,  1160,     0,     0,     0,     0,     0,   892,  1994,     0,
    2690,     0,     0,  1689,  1967,     0,     0,  1560,  1967,     0,
       0,     0,     0,     0,     0,  1358,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    54,    54,  2712,     0,     0,     0,     0,     0,     0,
    2493,     0,     0,     0,     0,     0,     0,   893,  2280,     0,
       0,     0,     0,     0,  1496,  1497,  2281,     0,     0,     0,
       0,     0,  1521,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1162,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1544,     0,     0,  1561,     0,     0,  1573,
       0,     0,     0,     0,     0,     0,  1580,  1585,  1588,     0,
    1160,     0,     0,     0,  1163,     0,  1415,     0,     0,     0,
    1592,     0,  1810,  2282,     0,     0,  1596,  1597,  1598,  1599,
       0,     0,     0,  2528,  1608,  1609,     0,     0,     0,  1620,
    1160,     0,     0,  1623,     0,   894,  1631,  1632,  1633,  1634,
    1635,  1636,  1637,  1638,  1639,     0,     0,  1640,    54,     0,
       0,     0,  1648,     0,     0,  1652,     0,   802,     0,   948,
       0,     0,     0,     0,  1498,  1499,   466,  2213,     0,     0,
    2556,     0,     0,   494,     0,  1976,     0,     0,     0,     0,
    1976,  1673,     0,  1976,   895,  2567,  1160,     0,  2570,     0,
       0,     0,   896,     0,     0,     0,  1160,     0,     0,  1162,
       0,     0,  2586,     0,   897,     0,  2283,     0,  1218,  1219,
    1967,     0,     0,     0,     0,  1967,     0,     0,  1967,     0,
       0,     0,   644,   494,     0,     0,     0,     0,  1164,     0,
    1163,   564,     0,     0,     0,   898,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1484,  1485,     0,     0,     0,     0,   494,   494,     0,
       0,     0,     0,     0,     0,     0,     0,  1358,  1164,     0,
     494,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     900,     0,   564,     0,  1164,  2586,     0,   948,     0,     0,
    1784,  1785,     0,  1786,     0,     0,     0,     0,     0,     0,
      54,     0,   901,     0,  1164,   494,     0,     0,  1162,     0,
    1232,  1160,     0,  1233,     0,     0,     0,     0,  1976,     0,
    1819,    54,   903,  2570,  2284,  1486,  1487,  2285,     0,     0,
       0,     0,  2676,  1164,     0,     0,   494,     0,  1162,  1163,
    1164,     0,     0,  1239,     0,   564,     0,  1160,     0,     0,
   -1667,     0,     0,  1967,     0,     0,     0,  1164,     0,     0,
     948,  1220,     0,     0,     0,     0,     0,   644,     0,  1163,
       0,     0,     0,     0,     0,  1241,     0,  1160,   564,     0,
    1160,     0,     0,     0,     0,     0,     0,  1488,  1489,  1490,
    1491,  1492,  1493,     0,  1162,  1494,  1495,     0,     0,     0,
    1862,     0,     0,     0,  1162,  1868,   466,     0,     0,     0,
       0,     0,     0,     0,    54,  2730,     0,  1265,     0,   494,
       0,     0,     0,  2567,     0,  1163,     0,     0,  1366,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,  2586,
     644,   644,   644,     0,  1930,     0,     0,  1885,     0,     0,
       0,     0,     0,     0,     0,     0,  1265,     0,     0,     0,
       0,     0,     0,  1585,     0,  1585,  1585,     0,     0,     0,
      54,     0,  1924,  1164, -1667,     0,     0,     0,     0,     0,
       0,     0,     0,  2567,     0,     0,     0,     0, -1667,     0,
       0,     0,  2676, -1667,  2556,     0,     0,     0,     0,  1496,
    1497,   -38,     0,  1689,     0,     0,  1942,     0,     0,  1945,
       0,  1947,     0,     0,     0,     0,     0,  1358,     0,  1162,
       1, -1449,     0,  2586,     0,     0,     0,     0, -1667,     0,
       2,     0,     3,     4,     0,     0,     0,     0,     0,     0,
       0,   644,     0,     0,     0,     0,     0,     0,     5,     0,
    1163,    54,     0,     0,     0,  1162,     0,     6,     0,     0,
       0,     0,  1160,  1265,     0,     0,     0,     0,     0,     7,
    1265,     0,  1313,     0,     0,     0,     0,     0,     0,     0,
       8,     0,     0,  1250,     0,  1162,  1163,  1330,  1162,     0,
   -1463,     9,     0,    10,     0,     0,     0,     0,     0,  1164,
       0,     0,     0,     0,     0,  2019,     0,     0,     0,  1498,
    1499,    11,     0, -1449,     0,     0,  1163,     0,     0,  1163,
       0,     0,     0,     0,     0,    12,     0,     0,     0,  1500,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,    14,     0,     0,     0,     0,     0,     0,     0,    15,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   948,    18, -1449,     0,     0,     0,     0,
       0,     0,     0, -1667,     0,     0,     0,     0, -1449,     0,
       0,     0, -1463, -1449,     0,     0,     0,     0, -1449,     0,
       0,    19,     0,     0,     0,     0,     0, -1449,     0,     0,
   -1449,     0,     0,     0,     0,     0,     0,     0,  1164,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1449,
      20,     0,     0,     0, -1463,     0,     0,     0,  1164,     0,
       0,     0,     0,     0,     0,  2133,     0, -1463, -1449,     0,
       0,     0, -1463,     0,     0,  2137,     0, -1463,     0,  2138,
       0,     0,  2140,     0,     0,     0, -1463,     0,     0, -1463,
    1162,     0, -1667,     0,     0,     0,     0,     0,     0,  1257,
    1258,  1259,  1260,  1261,  1262,     0,     0,     0,  2160,  2161,
       0,     0,     0,  1265,  1164,     0,     0, -1449, -1463,     0,
   -1449,  1163,     0,     0,  1164,     0, -1449,    21,     0,  2174,
      22,     0,  2177,     0,  2179,  1265,     0, -1463,     0,     0,
    1568,     0,  2183,     0,     0,     0,     0,     0,     0,     0,
    2190,  2191,  1265,  1265,  1265,     0,  1265,     0,    23,     0,
       0,     0,     0,     0,     0,     0,    24,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2231,
      25, -1449,     0,     0,     0,     0, -1463,    26,  2238, -1463,
       0,    27,     0,     0,     0, -1463,     0,     0,     0,     0,
       0,    28,     0,     0,  2251,     0,     0,  1265,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1960,     0,     0,     0,  1164,
       0,  1232,     0,     0,  1233,     0,     0,     0,  1265,     0,
   -1463,    30,     0,     0,     0,     0,    31,     0,     0,     0,
    1265,     0, -1449,     0,     0,  1265,     0,     0,     0,    32,
   -1449,     0,     0,     0,  1239,  1164,     0,     0,     0,     0,
       0, -1667,     0,     0,     0,     0, -1449,     0, -1449, -1449,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1960,  1164,  1241,    34,  1164,     0,
     -38,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1449,     0,     0, -1449, -1449,
   -1449, -1463,     0,     0,  2379,     0,     0,     0,  1231, -1463,
       0,     0,     0,  1232,     0,     0,  1233,     0,     0,     0,
       0,  1234,  1235,  1236,     0, -1463,     0, -1463, -1463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1237,     0,
       0,  1238,     0,     0,     0,  1940,  1239,  2389,  2390,     0,
       0,     0,  2391,  1240,     0,     0,     0,  2394,     0,     0,
    2397,  2398,     0,     0, -1463,  2402,     0, -1463, -1463, -1463,
       0,     0,     0,     0,     0, -1667,     0,     0,  1241,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1667,
       0,     0,  1232,     0, -1667,  1233,     0,     0,     0,     0,
    1234,  1235,  1236,     0,     0,     0,     0,     0,     0,     0,
       0,   802,     0,     0,     0,     0,     0,  1237,     0,     0,
       0,     0,     0,     0,     0,  1239,  1265,     0,     0, -1667,
       0,     0,  1240,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1265,
       0,     0,     0,  2487,     0,     0,     0,  1241,     0,     0,
    1164,     0,     0,     0,     0,     0,  1265,     0,  1568,  1568,
       0,  1902,     0,  1568,     0,     0,     0,  1242,  1265,     0,
       0,     0,     0,     0,  1250,  1265,     0,     0,     0,     0,
    1265,  1243,     0,  1265,     0,     0,  1244,  1265,     0,     0,
       0,  1265,  1265,  1265,  1265,     0,     0,     0,     0,     0,
    1568,  1568,     0,  1265,  1265,     0,     0,  1245,  1246,     0,
       0,     0,     0,     0,     0,  1265,     0,     0,  1265,     0,
       0,  1247,     0,     0,     0,     0,  1265,  1265,  1265,  1265,
    1265,  1265,  1265,  1265,  1265,  1265,     0,     0,     0,     0,
       0,     0,     0,  1265,     0,     0,  1242,  1265,  1232,     0,
       0,  1233,     0,     0,     0,     0,     0,  2540,  2541,  1248,
    1243,  2542,  1249,     0, -1667,  1244,     0,     0,  1265,     0,
       0,     0,     0,     0,     0,     0,  1250,     0,     0,  1251,
       0,  1239,     0,     0,     0,     0,  1245,  1246, -1667,     0,
       0,     0,     0,     0,     0,     0,     0,  2575,  2576,     0,
    1247,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2588,     0,  1241,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1248,     0,
       0,  1249,     0,     0,  1232,     0,     0,  1233,     0,     0,
       0,     0, -1667, -1667, -1667,  1250,     0,     0,  1251,     0,
       0,     0,     0, -1667,     0,     0,  1252,     0,     0,     0,
    1257,  1258,  1259,  1260,  1261,  1262,     0,  1239,     0,  1265,
    1265,  1265,  2185,     0,  1240,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1232,     0,     0,  1233,     0,
       0,     0,     0,  1234,  1235,  1236,     0,     0,     0,  1241,
       0,     0, -1667,     0,  1265,     0,     0,     0,     0,     0,
    1237,  2663,     0,     0,     0,     0, -1667,     0,  1239,     0,
       0, -1667,     0,  1221,     0,  1240,     0,     0,     0,     0,
       0,     0,     0,     0,  2682,  1252,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1265,     0,  2696,
    1241,     0,     0,  1265,     0,  1253, -1667,     0,  1254,  1255,
    1256,     0,  1257,  1258,  1259,  1260,  1261,  1262,  1902,  1902,
    1265,     0,  1568,  1568,  1568,  1568,     0,     0,  1568,  1568,
    1568,  1568,  1568,  1568,  1568,  1568,  1568,  1568,  1902,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1242,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1265,
       0,  1250,  1243,  1902,  1902,     0,     0,  1244,     0,     0,
       0,     0,     0,     0,     0,  2575,     0,  1265,  1568,  1568,
    1265,     0,  1265,     0,  1253,     0,     0,  1254,  1255,  1256,
       0,  1257,  1258,  1259,  1260,  1261,  1262,     0,     0,  1242,
       0,     0,  1247,     0,  1877,     0,  2759,     0,     0,     0,
       0,     0,     0,  1243,     0,     0,     0,     0,  1244,  1232,
       0,     0,  1233,     0,     0,  2773,  2773,  1234,  1235,  1236,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1245,
    1246,     0,     0,     0,  1237,     0,     0,     0,     0,     0,
       0, -1667,  1239,  1247,  1265,     0,     0,  1250,     0,  1240,
       0,     0,     0,     0,     0,  1232,     0,     0,  1233,     0,
       0,     0,  2773,  1234,  1235,  1236,     0,     0,     0,     0,
       0,     0,     0,     0,  1241,     0,     0,     0,     0,     0,
    1237,  1248,     0,     0,  1249,     0,     0,     0,  1239,     0,
       0,     0,     0,     0,     0,  1240,     0,     0,  1250,     0,
       0,  1251,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1241,     0,     0,     0,  2773,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1252,     0,     0,
   -1667,     0,     0,     0,     0,     0,     0,  1257,  1258,  1259,
    1260,  1261,  1262,     0,     0,     0,     0,     0,  1265,     0,
       0,     0,  1265,  1265,     0,  1265,     0,     0,  1902,  1902,
    1902,  1902,     0,  1242,     0,  1902,  1902,  1902,  1902,  1902,
    1902,  1902,  1902,  1902,  1902,  1265,  1265,  1243,  1252,     0,
       0,     0,  1244,     0,     0,     0,     0,     0,     0,  1265,
       0,     0,  1265,     0,  1265,     0,     0,     0,  1265,     0,
       0,  1902,  1902,  1245,  1246,  1265,  1265,     0,     0,  1242,
       0,     0,     0,     0,     0,     0,     0,  1247,     0,     0,
       0,     0,     0,  1243,     0,     0,  1253,     0,  1244, -1667,
   -1667, -1667,     0,  1257,  1258,  1259,  1260,  1261,  1262,     0,
       0,     0,     0,     0,     0,     0,  1265,     0,     0,  1245,
    1246,     0,     0,  1265,     0,  1248,     0,     0,  1249,     0,
       0,     0,     0,  1247,     0,     0,  1265,     0,     0,     0,
       0,     0,  1250,     0,     0,  1251,     0,  1253,     0,     0,
    1254,  1255,  1256,     0,  1257,  1258,  1259,  1260,  1261,  1262,
       0,     0,     0,     0,  1589,     0,     0,     0,     0,     0,
       0,  1248,     0,     0,  1249,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1250,     0,
       0,  1251,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1252,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1265,     0,     0,     0,  1568,     0,
       0,     0,     0,     0,  1265,  1265,  1265,     0,  1252,  1265,
       0,     0,  1265,  1265,     0,     0,     0,  1265,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1253,     0,     0,  1254,  1255,  1256,     0,  1257,  1258,
    1259,  1260,  1261,  1262,     0,     0,     0,     0,  1926,     0,
       0,     0,     0,     0,  1568,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1265,     0,     0,     0,     0,  1253,     0,     0,
    1254,  1255,  1256,     0,  1257,  1258,  1259,  1260,  1261,  1262,
       0,     0,     0,     0,  2136,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1902,  1568,     0,     0,     0,  1265,  1265,  1265,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1265,  1265,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1265,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1902,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   915,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
    1902,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,   916,    98,    99,   100,     0,     0,     0,  1265,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   917,   107,
     108,   109,   110,   732,   918,   733,   734,  1265,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,  1265,   126,   127,   128,   129,   739,     0,   919,     0,
     132,   133,   134,   135,   136,   920,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   921,   148,   149,
     150,   741,   742,   743,   922,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,   923,  1265,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,  1265,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     924,     0,   925,   204,   205,   206,   926,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     927,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   928,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   929,   930,   242,   931,
     244,   245,   246,   247,   248,     0,     0,   249,   932,   251,
     933,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   934,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   935,   762,   283,   284,   285,   286,   763,   287,
     288,   936,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   937,   305,   938,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   939,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   940,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   941,   398,   774,     0,   400,   401,     0,   402,
     942,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   943,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,   944,   436,   945,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,   946,     0,     0,     0,     0,     0,     0,
     787,   947,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    25,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,    29,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   598,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,    32,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,    33,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,  2672,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    25,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,    29,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   598,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,    32,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,    33,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,  1581,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,  1582,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,  1583,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
    1584,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,   786,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,  1323,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,   915,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   917,   107,
     108,   109,   110,   732,   918,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   919,     0,
     132,   133,   134,   135,   136,   920,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   921,   148,   149,
     150,   741,   742,   743,   922,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     924,     0,   925,   204,   205,   206,   926,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     927,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   928,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   929,   930,   242,   931,
     244,   245,   246,   247,   248,     0,     0,   249,   932,   251,
     933,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   934,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   935,   762,   283,   284,   285,   286,   763,   287,
     288,   936,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   937,   305,   938,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   939,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   940,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   941,   398,   774,     0,   400,   401,     0,   402,
     942,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   943,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   945,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,  1436,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,  1571,     0,     0,     0,   788,   789,   915,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   917,   107,
     108,   109,   110,   732,   918,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   919,     0,
     132,   133,   134,   135,   136,   920,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   921,   148,   149,
     150,   741,   742,   743,   922,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     924,     0,   925,   204,   205,   206,   926,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     927,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   928,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   929,   930,   242,   931,
     244,   245,   246,   247,   248,     0,     0,   249,   932,   251,
     933,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   934,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   935,   762,   283,   284,   285,   286,   763,   287,
     288,   936,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   937,   305,   938,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   939,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   940,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   941,   398,   774,     0,   400,   401,     0,   402,
     942,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   943,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,  1781,   436,   945,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,  1582,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,   915,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   917,   107,
     108,   109,   110,   732,   918,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   919,     0,
     132,   133,   134,   135,   136,   920,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   921,   148,   149,
     150,   741,   742,   743,   922,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     924,     0,   925,   204,   205,   206,   926,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     927,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   928,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   929,   930,   242,   931,
     244,   245,   246,   247,   248,     0,     0,   249,   932,   251,
     933,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   934,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   935,   762,   283,   284,   285,   286,   763,   287,
     288,   936,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   937,   305,   938,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   939,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   940,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   941,   398,   774,     0,   400,   401,     0,   402,
     942,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   943,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   945,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,  1326,  1327,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,    89,  1706,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
    2571,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,  2770,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
    2771,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,  2772,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
    2771,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,   763,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,  2772,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   783,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,     0,   287,
     288,   289,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380,   381,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,     0,     0,     0,     0,     0,     0,
       0,  1563,  1564,     0,     0,     0,     0,     0,     0,     0,
    1565,     0,     0,     0,     0,   788,   789,    89,   725,   535,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,   731,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109, -1667,   732,   112,   733,   734,     0,   115,   116,
     117,   118,   119,   120,   735,   736,   121,   122,   737,   738,
     125,     0,   126,   127,   128,   129,   739,     0,   740,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
    2771,   741,   742,   743,   744,   745,   746,   747,   152,   153,
     154,   155,   156,   157,   158,   748,   749,   161,   750,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   752,   190,   191,   192,   193,   753,   754,
     195,     0,   196,   197,   755,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206, -1667,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
   -1667,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     756,   757,     0,   758,     0,   239,     0,     0,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
   -1667,     0,   253,   254,   255,   759,   760,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   761,   281,   762,   283,   284,   285,   286,     0,   287,
     288,     0,   290,   764,   765,   292,   766,   294,   295,   296,
       0,   297,   298,     0,     0,   767,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   768,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   769,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   770,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   771,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   772,
     376,   377,   378,   379,   380, -1667,   382,   383,   773,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   774,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   775,   776,     0,
       0,   411,   412,   777,   414,   778,   779,   416,   417,   780,
     419,   420,  2772,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   781,     0,   429,   430,   431,   432,   433,   434,
     782,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463, -1667,     0,     0,     0,     0,     0,
       0,   784,   785,     0,     0,    89,   725,   535,   726,   727,
     787,   729,   730,     0,     0,   788,   789,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   732,   112,   733,   734,     0,   115,   116,   117,   118,
     119,   120,   735,   736,   121,   122,   737,   738,   125,     0,
     126,   127,   128,   129,   739,     0,   740,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   741,
     742,   743,   744,   745,   746,   747,   152,   153,   154,   155,
     156,   157,   158,   748,   749,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   751,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   752,   190,   191,   192,   193,   753,   754,   195,     0,
     196,   197,   755,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   756,   757,
       0,   758,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   759,   760,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   761,
     281,   762,   283,   284,   285,   286,     0,   287,   288,   289,
     290,   764,   765,   292,   766,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
     304,   305,   306,   768,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   769,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   770,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,   355,   356,   357,   358,  1695,
    1696,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   772,   376,   377,
     378,   379,   380,   381,   382,   383,   773,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   774,     0,   400,   401,     0,   402,   403,   404,
     405,   406,   407,   408,     0,   775,   776,     0,     0,   411,
     412,   777,   414,   778,   779,   416,   417,   780,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
     781,     0,   429,   430,   431,   432,   433,   434,   782,     0,
     436,   437,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,     0,     0,     0,     0,  1697,
    1698,     0,     0,     0,     0,     0,     0,     0,  1565,     0,
       0,     0,     0,   788,   789,    89,   725,   535,   726,   727,
     728,   729,   730,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   732,   112,   733,   734,     0,   115,   116,   117,   118,
     119,   120,   735,   736,   121,   122,   737,   738,   125,     0,
     126,   127,   128,   129,   739,     0,   740,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   741,
     742,   743,   744,   745,   746,   747,   152,   153,   154,   155,
     156,   157,   158,   748,   749,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   751,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   752,   190,   191,   192,   193,   753,   754,   195,     0,
     196,   197,   755,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   756,   757,
       0,   758,     0,   239,     0,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   759,   760,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   761,
     281,   762,   283,   284,   285,   286,     0,   287,   288,   289,
     290,   764,   765,   292,   766,   294,   295,   296,     0,   297,
     298,     0,     0,   767,   300,   301,     0,     0,   302,   303,
     304,   305,   306,   768,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   769,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   770,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   772,   376,   377,
     378,   379,   380,   381,   382,   383,   773,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   774,     0,   400,   401,     0,   402,   403,   404,
     405,   406,   407,   408,     0,   775,   776,     0,     0,   411,
     412,   777,   414,   778,   779,   416,   417,   780,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
     781,     0,   429,   430,   431,   432,   433,   434,   782,     0,
     436,   437,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,     0,     0,     0,     0,  1563,
    1564,     0,     0,     0,     0,     0,     0,     0,  1565,     0,
       0,     0,     0,   788,   789,    89,   725,   535,   726,   727,
     728,   729,   730,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,   731,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
       0,   732,   112,   733,   734,     0,   115,   116,   117,   118,
     119,   120,   735,   736,   121,   122,   737,   738,   125,     0,
     126,   127,   128,   129,   739,     0,   740,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   741,
     742,   743,   744,   745,   746,   747,   152,   153,   154,   155,
     156,   157,   158,   748,   749,   161,   750,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   751,   177,   178,     0,   179,
     180,   181,     0,   182,     0,   184,     0,   185,   186,   187,
     188,   752,   190,   191,   192,   193,   753,   754,   195,     0,
     196,   197,   755,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   756,   757,
       0,   758,     0,   239,     0,     0,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,     0,     0,
     253,   254,   255,   759,   760,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   761,
     281,   762,   283,   284,   285,   286,     0,   287,   288,     0,
     290,   764,   765,   292,   766,   294,   295,   296,     0,   297,
     298,     0,     0,   767,   300,   301,     0,     0,   302,   303,
     304,   305,   306,   768,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   769,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   770,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   771,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   772,   376,   377,
     378,   379,   380,     0,   382,   383,   773,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   774,     0,   400,   401,     0,   402,   403,   404,
     405,   406,   407,   408,     0,   775,   776,     0,     0,   411,
     412,   777,   414,   778,   779,   416,   417,   780,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
     781,     0,   429,   430,   431,   432,   433,   434,   782,     0,
     436,   437,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,     0,     0,     0,     0,   784,
     785,   488,     0,     0,     0,     0,     0,     0,   787,     0,
       0,     0,     0,   788,   789,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,  2210,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,  -579,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,  -579,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,  -579,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,  -579,   244,   245,   246,   247,   248,     0,
       0,   249,  -579,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   490,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,  -579,   282,   283,   284,
     285,   286,     0,   287,   288,     0,   290,     0,   291,   292,
     293,   294,   295,   296,     0,   297,   298,     0,     0,   299,
     300,   301,     0,     0,   302,   303,     0,   305,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,  -579,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,   378,   379,   380,     0,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   492,   398,   399,     0,
     400,   401,     0,   402,  -579,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,   411,   412,   413,   414,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   434,   435,     0,   436,     0,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,     0,     0,
      89,     0,   560,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   847,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,   736,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   739,
       0,   740,     0,   132,   133,   134,   135,   136,   137,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,   150,   741,   742,   743,   744,   745,   746,
     747,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   753,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,   202,     0,   203,   204,   205,   206,   207,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,  1964,     0,
     249,   250,   251,   252,     0,   253,   254,   255,   759,   760,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,   287,   288,   289,   290,     0,   765,   292,   293,
     294,   295,   296,     0,   297,   298,     0,   561,   299,   300,
     301,     0,     0,   302,   303,   304,   305,   306,   768,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   769,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
     355,   356,   357,   358,   359,  1965,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    25,   371,   372,   373,
     374,   375,   772,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   774,     0,   400,
     401,    29,   402,   403,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,   411,   412,   777,   414,   778,     0,
     416,   417,   780,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,   781,     0,   429,   430,   431,
     432,   433,   598,   435,     0,   436,   437,   438,   439,   440,
     441,     0,     0,   442,     0,    32,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,     0,    89,    33,
     560,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1966,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,   736,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   739,     0,   740,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   741,   742,   743,   744,   745,   746,   747,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   753,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,  1964,     0,   249,   250,
     251,   252,     0,   253,   254,   255,   759,   760,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
     287,   288,   289,   290,     0,   765,   292,   293,   294,   295,
     296,     0,   297,   298,     0,   561,   299,   300,   301,     0,
       0,   302,   303,   304,   305,   306,   768,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     769,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,   355,   356,
     357,   358,   359,  1965,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
     772,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   774,     0,   400,   401,     0,
     402,   403,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   777,   414,   778,     0,   416,   417,
     780,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,   781,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,   437,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,     0,    89,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1966,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,   736,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   739,     0,   740,     0,   132,
     133,   134,   135,   136,   137,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
     741,   742,   743,   744,   745,   746,   747,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   753,     0,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,     0,   249,   250,   251,   252,
       0,   253,   254,   255,   759,   760,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,     0,   287,   288,
     289,   290,     0,   765,   292,   293,   294,   295,   296,     0,
     297,   298,     0,     0,   299,   300,   301,     0,     0,   302,
     303,   304,   305,   306,   768,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   769,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,   355,   356,   357,   358,
     359,  1965,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,   772,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   774,     0,   400,   401,     0,   402,   403,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
     411,   412,   777,   414,   778,     0,   416,   417,   780,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,   781,     0,   429,   430,   431,   432,   433,   434,   435,
       0,   436,   437,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,     0,    89,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,   736,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   739,     0,   740,     0,   132,   133,   134,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   147,   148,   149,   150,   741,   742,
     743,   744,   745,   746,   747,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   753,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   207,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,     0,   249,   250,   251,   252,     0,   253,
     254,   255,   759,   760,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,     0,   287,   288,   289,   290,
       0,   765,   292,   293,   294,   295,   296,     0,   297,   298,
       0,     0,   299,   300,   301,     0,     0,   302,   303,   304,
     305,   306,   768,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   769,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,   772,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   774,     0,   400,   401,     0,   402,   403,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,   411,   412,
     777,   414,   778,     0,   416,   417,   780,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,   781,
       0,   429,   430,   431,   432,   433,   434,   435,     0,   436,
     437,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   655,  1081,   535,     0,     0,     0,   729,     0,
       0,     0,     0,     0,     0,     0,     0,  2582,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   656,   657,     0,
     658,   659,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   660,   661,   125,     0,   126,   127,   128,
     129,   662,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     663,   664,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   665,   190,
     191,   192,   193,   666,  1082,   195,     0,   196,   197,   667,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   668,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     669,   232,   233,   234,   235,   670,   671,     0,   672,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   673,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   674,     0,   675,   283,
     284,   285,   676,     0,   287,   288,     0,   290,     0,   677,
     292,   678,   294,   295,   296,     0,   297,   298,  1083,     0,
     299,   300,   301,     0,     0,   302,   679,     0,   305,     0,
     680,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   681,   321,   322,   682,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   683,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   684,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   685,   378,   379,   380,
       0,   382,   383,   686,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   687,   398,   688,
       0,   400,   401,     0,   402,     0,   404,   405,   406,   407,
     408,     0,   689,   690,     0,     0,   411,   412,   691,   414,
     692,  1084,   416,   417,   693,   419,   420,   421,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,  1030,   695,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   460,   461,   462,   463,     0,
     655,     0,     0,     0,     0,     0,  1085,  1086,  1831,     0,
       0,     0,     0,     0,     0,  1832,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     3,     4,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   656,   657,     0,   658,   659,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   660,   661,   125,     0,   126,   127,   128,   129,   662,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   663,   664,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   665,   190,   191,   192,
     193,   666,     0,   195,     0,   196,   197,   667,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   668,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   669,   232,
     233,   234,   235,   670,   671,     0,   672,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   673,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   674,     0,   675,   283,   284,   285,
     676,     0,   287,   288,     0,   290,     0,   677,   292,   678,
     294,   295,   296,     0,   297,   298,     0,     0,   299,   300,
     301,     0,     0,   302,   679,     0,   305,     0,   680,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   681,   321,   322,   682,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   683,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
       0,   356,   357,   358,   684,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    25,   371,   372,   373,
     374,   375,     0,   376,   685,   378,   379,   380,     0,   382,
     383,   686,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   687,   398,   688,     0,   400,
     401,    29,   402,     0,   404,   405,   406,   407,   408,     0,
     689,   690,     0,     0,   411,   412,   691,   414,   692,     0,
     416,   417,   693,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   694,   695,     0,   436,     0,   438,   439,   440,
     441,     0,     0,   442,     0,    32,   443,   444,   445,   446,
     447,   448,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   460,   461,   462,   463,     0,   488,    33,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,    90,    91,    92,    93,    94,    95,
      96,    97,   595,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   490,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   282,   283,   284,   285,   286,     0,
     287,   288,     0,   290,     0,   291,   292,   293,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,     0,   305,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    25,   371,   372,   373,   374,   375,
       0,   376,   377,   378,   379,   380,     0,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   492,   398,   399,     0,   400,   401,    29,
     402,     0,   404,   405,   406,   407,   408,     0,   596,   410,
       0,     0,   597,   412,   413,   414,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     598,   435,     0,   436,     0,   438,   439,   440,   441,     0,
       0,   442,     0,    32,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,     0,   488,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   110,   111,     0,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   490,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,     0,   282,   283,   284,   285,   286,     0,   287,   288,
       0,   290,     0,   291,   292,   293,   294,   295,   296,     0,
     297,   298,     0,     0,   299,   300,   301,     0,     0,   302,
     303,     0,   305,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    25,   371,   372,   373,   374,   375,     0,   376,
     377,   378,   379,   380,     0,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   492,   398,   399,     0,   400,   401,    29,   402,     0,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
     411,   412,   413,   414,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   598,   435,
       0,   436,     0,   438,   439,   440,   441,     0,     0,   442,
       0,    32,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,     0,   488,    33,   560,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   490,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,     0,
     282,   283,   284,   285,   286,     0,   287,   288,     0,   290,
       0,   291,   292,   293,   294,   295,   296,     0,   297,   298,
       0,     0,   299,   300,   301,     0,     0,   302,   303,     0,
     305,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,   378,
     379,   380,     0,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   492,
     398,   399,     0,   400,   401,     0,   402,     0,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,   411,   412,
     413,   414,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   435,     0,   436,
       0,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   488,     0,   560,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   828,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   490,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   282,   283,
     284,   285,   286,     0,   287,   288,     0,   290,     0,   291,
     292,   293,   294,   295,   296,     0,   297,   298,     0,     0,
     299,   300,   301,     0,     0,   302,   303,     0,   305,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,   378,   379,   380,
       0,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   492,   398,   399,
       0,   400,   401,     0,   402,     0,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,   411,   412,   413,   414,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   435,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     488,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2430,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   490,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   282,   283,   284,   285,
     286,     0,   287,   288,     0,   290,     0,   291,   292,   293,
     294,   295,   296,     0,   297,   298,     0,     0,   299,   300,
     301,     0,     0,   302,   303,     0,   305,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,   378,   379,   380,     0,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   492,   398,   399,     0,   400,
     401,     0,   402,     0,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,   411,   412,   413,   414,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   435,     0,   436,     0,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,     0,   488,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1685,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   490,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   282,   283,   284,   285,   286,     0,
     287,   288,     0,   290,     0,   291,   292,   293,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,     0,   305,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,   378,   379,   380,     0,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   492,   398,   399,     0,   400,   401,     0,
     402,     0,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   413,   414,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,     0,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,     0,     0,     0,     0,  2295,
    1081,   535,     0,     0,  1545,   729,     0,     0,     0,     0,
       0,  2194,  1546,  1547,  1548,    90,    91,    92,    93,    94,
      95,    96,    97,   958,    98,    99,   100,   959,   960,   961,
     962,   963,   964,   965,   101,   102,   966,   103,   104,   105,
    2296,   107,   108,   109,     0,  1106,  2297,  1108,  1109,   967,
     115,   116,   117,   118,   119,   120,   968,   969,   121,   122,
    1110,  1111,   125,   970,   126,   127,   128,   129,     0,   971,
    2298,   972,   132,   133,   134,   135,   136,  2299,   138,   139,
     140,   973,   141,   142,   143,   144,   145,   146,   974,  2300,
     148,   149,   150,   975,   976,   977,  2301,   978,   979,   980,
     152,   153,   154,   155,   156,   157,   158,  1116,  1117,   161,
     981,   162,   982,   163,   164,   165,   166,   167,   168,   983,
     169,   170,   171,   172,   173,   984,   985,   174,   175,   751,
     177,   178,   986,   179,   180,   181,   987,   182,   183,   184,
     988,   185,   186,   187,   188,     0,   190,   191,   192,   193,
       0,   989,   195,   990,   196,   197,  1118,   199,   991,   200,
     992,   201,  2302,   993,  2303,   204,   205,   206,  2304,   208,
     994,   209,   995,     0,   211,   996,   212,   213,   214,   215,
     216,   217,  2305,   219,   220,   221,   222,   997,   223,   224,
     225,   226,   227,   228,   998,   229,  2306,     0,   232,   233,
     234,   235,  1124,  1125,   999,  1126,  1000,   239,  2307,  2308,
     242,  2309,   244,   245,   246,   247,   248,  1001,  1002,   249,
    2310,   251,  2311,  1003,   253,   254,   255,  1004,  1005,   256,
     257,   258,   259,   260,  2312,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,  1133,  2313,  1135,   283,   284,   285,  2314,
    1006,   287,   288,  2315,   290,  1007,     0,   292,  1137,   294,
     295,   296,  1008,   297,   298,  1009,  1010,  2316,   300,   301,
    1011,  1012,   302,     0,  2317,   305,  2318,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,  1013,   318,
     319,     0,   321,   322,     0,   324,   325,   326,  1014,   327,
     328,   329,   330,   331,   332,   333,   334,   335,  1140,   337,
     338,   339,   340,  1015,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,  1016,   353,   354,  2319,
     356,   357,   358,  1142,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,  1017,   371,   372,   373,   374,
     375,  1018,   376,  2320,   378,   379,   380,  2321,   382,   383,
    1145,   385,  1019,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,  2322,   398,     0,  1020,   400,   401,
    1021,   402,  2323,   404,   405,   406,   407,   408,  1022,  1148,
    1149,  1023,  1024,   411,   412,     0,   414,     0,  1025,   416,
     417,  2324,   419,   420,   421,   422,   423,  1026,  1027,   424,
     425,   426,   427,   428,  1028,  1029,   429,   430,   431,   432,
     433,     0,  1151,  1031,   436,  2325,   438,   439,   440,   441,
    1032,  1033,   442,  1034,  1035,   443,   444,   445,   446,   447,
     448,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   460,   461,   462,   463,     0,   488,     0,  1549,
    1550,  1551,  1545,  2326,  2327,  1554,  1555,  1556,  1557,     0,
    1546,  1547,  1548,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   490,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   282,   283,   284,   285,   286,     0,   287,
     288,     0,   290,     0,   291,   292,   293,   294,   295,   296,
       0,   297,   298,     0,     0,   299,   300,   301,     0,     0,
     302,   303,     0,   305,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,   378,   379,   380,     0,   382,   383,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   492,   398,   399,     0,   400,   401,     0,   402,
       0,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,   411,   412,   413,   414,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,   434,
     435,     0,   436,     0,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,     0,     0,     0,  1549,  1550,  1551,
       0,  1552,  1553,  1554,  1555,  1556,  1557,  1232,     0,     0,
    1233,     0,     0,     0,     0,  1234,  1235,  1236,     0,     0,
       0,     0,     0,     0,     0,  1232,     0,     0,  1233,     0,
       0,     0,  1237,  1234,  1235,  1236,     0,     0,     0,     0,
    1239,     0,     0,  1232,     0,     0,  1233,  1240,     0,     0,
    1237,  1234,  1235,  1236,     0,     0,     0,     0,  1239,     0,
       0,     0,     0,     0,     0,  1240,     0,     0,  1237,     0,
       0,  1232,  1241,     0,  1233,     0,  1239,     0,     0,  1234,
    1235,  1236,     0,  1240,     0,     0,     0,     0,     0,  1232,
    1241,     0,  1233,     0,     0,     0,  1237,  1234,  1235,  1236,
       0,     0,     0,     0,  1239,     0,     0,  1232,  1241,     0,
    1233,  1240,     0,     0,  1237,  1234,  1235,  1236,     0,     0,
       0,     0,  1239,     0,     0,     0,     0,     0,     0,  1240,
       0,     0,  1237,     0,     0,     0,  1241,     0,     0,     0,
    1239,     0,     0,     0,     0,     0,     0,  1240,     0,     0,
       0,     0,     0,     0,  1241,     0,     0,     0,  1232,     0,
       0,  1233,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1242,  1241,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1243,     0,     0,     0,  1242,
    1244,  1239,     0,     0,  1232,     0,     0,  1233, -1667,     0,
       0,     0,     0,  1243,     0,     0,     0,  1242,  1244,     0,
       0,  1245,  1246,     0,     0,     0,     0,     0,     0,     0,
       0,  1243,     0,  1241,     0,  1247,  1244,  1239,     0,  1245,
    1246,     0,     0,     0, -1667,  1242,     0,     0,     0,     0,
       0,     0,     0,  1247,     0,     0,     0,  1245,  1246,  1243,
       0,     0,     0,  1242,  1244,     0,     0,     0,     0,  1241,
       0,  1247,     0,  1248,     0,     0,  1249,  1243,     0,     0,
       0,  1242,  1244,     0,     0,  1245,  1246,     0,     0,     0,
    1250,  1248,     0,  1251,  1249,  1243,     0,     0,     0,  1247,
    1244,     0,  2188,  1245,  1246,     0,     0,     0,  1250,  1248,
       0,  1251,  1249,     0,     0,     0,     0,  1247,     0,     0,
       0,  1245,  1246,     0,     0,     0,  1250,     0,     0,  1251,
       0,     0, -1667,     0,     0,  1247,     0,  1248,  2189,     0,
    1249,     0,     0,     0,     0,     0, -1667,     0,     0,     0,
       0, -1667,     0,     0,  1250,  1248,     0,  1251,  1249,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1667,     0,
       0,     0,  1250,  1248,     0,  1251,  1249,     0,     0,     0,
    1252,     0, -1667,     0,     0,     0, -1667, -1667,     0,     0,
    1250,     0,     0,  1251,     0,     0,     0,     0,  1252,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1252,     0,     0,     0,
       0,     0, -1667,     0,     0,     0,     0,     0,  1232,     0,
       0,  1233,     0,     0,     0,     0,  1234,  1235,  1236,     0,
       0,  1250,     0,     0,  1252,     0,     0,     0,     0,     0,
       0,     0,     0,  1237,     0,     0,     0,     0,     0,     0,
       0,  1239,  1252,     0,     0,     0,     0,     0,  1240,     0,
       0,     0,     0,     0,     0,     0,     0,  1250,     0,  1253,
    1252,     0,  1254,  1255,  1256,     0,  1257,  1258,  1259,  1260,
    1261,  1262,     0,  1241,     0,     0,  2172,  1253,     0,     0,
    1254,  1255,  1256,     0,  1257,  1258,  1259,  1260,  1261,  1262,
       0,     0,     0,     0,  2259,  1253,     0,     0,  1254,  1255,
    1256,     0,  1257,  1258,  1259,  1260,  1261,  1262,     0,     0,
       0, -1667,  2381,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1253,     0,     0,  1254,  1255,  1256,     0,
    1257,  1258,  1259,  1260,  1261,  1262,     0,     0,     0,     0,
    2400,  1253,     0,     0,  1254,  1255,  1256, -1667,  1257,  1258,
    1259,  1260,  1261,  1262,     0,     0,     0,     0,  2543,  1253,
       0,     0,  1254,  1255,  1256,     0,  1257,  1258,  1259,  1260,
    1261,  1262,  1242,     0,  1232,   496,  2741,  1233,     0,     0,
       0,     0,  1234,  1235,  1236,     0,  1243,     0,     0,     0,
       0,  1244,     0,     0,     0,     0,     0,     0,     0,  1237,
       0,     0,     0,     0,     0,     0,     0,  1239,     0,     0,
   -1667,     0,  1245,  1246,  1240,     0,     0,  1257,  1258,  1259,
    1260,  1261,  1262,     0,     0,     0,  1247,     0,   497,   878,
       0,     0,     0,     0,     0,   879,     0,     0,     0,  1241,
       0,     0,   891,   498,     0,     0, -1667,     0,     0,     0,
       0,     0,     0,  1257,  1258,  1259,  1260,  1261,  1262,     0,
       0,   892,     0,     0,  1248,     0,     0,  1249,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1250,     0,     0,  1251,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   499,     0,     0,
       0,     0,     0,     0,     0,     0,   500,     0,     0,     0,
       0,   893,     0,     0,     0,     0,     0,     0,   501,     0,
       0,     0,     0,   502,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1242,     0,
     880,     0,     0,     0,     0,     0,     0,     0,   503,     0,
       0,     0,  1243,     0,     0,     0,     0,  1244,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1252,     0,     0,     0,     0,     0,     0,  1245,  1246,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   504,  1247,     0,     0,   505,     0,     0,     0,   894,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1248,     0,     0,  1249,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1250,   895,     0,
    1251,     0,     0,     0,     0,     0,   896,     0,   506,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   897,     0,
    1253,     0,   507,  1254,  1255,  1256,     0,  1257,  1258,  1259,
    1260,  1261,  1262,     0,     0,     0,     0,  2753,     0,   881,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   898,
       0,     0,     0,   508,     0,     0,   509,     0,     0,     0,
       0,     0,     0,     0,   510,     0,     0,   511,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   512,  1252,     0,   899,
       0,     0,     0,   883,   900,     0,     0,     0,   513,     0,
       0,     0,     0,     0,     0,   514,     0,     0,     0,     0,
       0,     0,     0,     0,   515,     0,   901,     0,     0,     0,
       0,     0,   902,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   903,     0,     0,     0,
       0,     0,     0,     0,     0,   516,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1253,   957,   885,  1254,
    1255,  1256,     0,  1257,  1258,  1259,  1260,  1261,  1262,     0,
       0,  1410,     0,    90,    91,    92,    93,    94,    95,    96,
      97,   958,    98,    99,   100,   959,   960,   961,   962,   963,
     964,   965,   101,   102,   966,   103,   104,   105,     0,   107,
     108,   109,   656,   657,     0,   658,   659,   967,   115,   116,
     117,   118,   119,   120,   968,   969,   121,   122,   660,   661,
     125,   970,   126,   127,   128,   129,   662,   971,     0,   972,
     132,   133,   134,   135,   136,     0,   138,   139,   140,   973,
     141,   142,   143,   144,   145,   146,   974,     0,   148,   149,
     150,   975,   976,   977,     0,   978,   979,   980,   152,   153,
     154,   155,   156,   157,   158,   663,   664,   161,   981,   162,
     982,   163,   164,   165,   166,   167,   168,   983,   169,   170,
     171,   172,   173,   984,   985,   174,   175,   176,   177,   178,
     986,   179,   180,   181,   987,   182,   183,   184,   988,   185,
     186,   187,   188,   665,   190,   191,   192,   193,   666,   989,
     195,   990,   196,   197,   667,   199,   991,   200,   992,   201,
       0,   993,     0,   204,   205,   206,     0,   208,   994,   209,
     995,   668,   211,   996,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,   997,   223,   224,   225,   226,
     227,   228,   998,   229,     0,   669,   232,   233,   234,   235,
     670,   671,   999,   672,  1000,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,  1001,  1002,   249,     0,   251,
       0,  1003,   253,   254,   255,  1004,  1005,   256,   257,   258,
     259,   260,   673,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   674,     0,   675,   283,   284,   285,   676,  1006,   287,
     288,     0,   290,  1007,   677,   292,   678,   294,   295,   296,
    1008,   297,   298,  1009,  1010,   299,   300,   301,  1011,  1012,
     302,   679,     0,   305,     0,   680,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,  1013,   318,   319,   681,
     321,   322,   682,   324,   325,   326,  1014,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   683,   337,   338,   339,
     340,  1015,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,  1016,   353,   354,     0,   356,   357,
     358,   684,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,  1017,   371,   372,   373,   374,   375,  1018,
     376,   685,   378,   379,   380,     0,   382,   383,   686,   385,
    1019,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   687,   398,   688,  1020,   400,   401,  1021,   402,
       0,   404,   405,   406,   407,   408,  1022,   689,   690,  1023,
    1024,   411,   412,   691,   414,   692,  1025,   416,   417,   693,
     419,   420,   421,   422,   423,  1026,  1027,   424,   425,   426,
     427,   428,  1028,  1029,   429,   430,   431,   432,   433,  1030,
     695,  1031,   436,     0,   438,   439,   440,   441,  1032,  1033,
     442,  1034,  1035,   443,   444,   445,   446,   447,   448,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     460,   461,   462,   463,   488,     0,     0,     0,     0,     0,
       0,     0,     0,  1036,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   490,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,     0,
     282,   283,   284,   285,   286,     0,   287,   288,     0,   290,
       0,   291,   292,   293,   294,   295,   296,     0,   297,   298,
       0,     0,   299,   300,   301,     0,     0,   302,   303,     0,
     305,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,   378,
     379,   380,     0,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   492,
     398,   399,     0,   400,   401,     0,   402,     0,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,   411,   412,
     413,   414,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   435,     0,   436,
       0,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   655,  1081,   535,     0,     0,     0,   729,     0,     0,
    2111,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   656,   657,     0,   658,
     659,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   660,   661,   125,     0,   126,   127,   128,   129,
     662,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   663,
     664,   161,  1290,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   665,   190,   191,
     192,   193,   666,  1082,   195,     0,   196,   197,   667,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   668,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   669,
     232,   233,   234,   235,   670,   671,     0,   672,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   673,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   674,     0,   675,   283,   284,
     285,   676,     0,   287,   288,     0,   290,     0,   677,   292,
     678,   294,   295,   296,     0,   297,   298,  1083,     0,   299,
     300,   301,     0,     0,   302,   679,     0,   305,     0,   680,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   681,   321,   322,   682,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     683,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,     0,   356,   357,   358,   684,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   685,   378,   379,   380,     0,
     382,   383,   686,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   687,   398,   688,     0,
     400,   401,     0,   402,     0,   404,   405,   406,   407,   408,
       0,   689,   690,     0,     0,   411,   412,   691,   414,   692,
    1084,   416,   417,   693,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,  1030,   695,     0,   436,     0,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   460,   461,   462,   463,   655,  1081,
     535,     0,     0,     0,   729,  1085,  1086,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   656,   657,     0,   658,   659,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   660,
     661,   125,     0,   126,   127,   128,   129,   662,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   663,   664,   161,  1292,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   665,   190,   191,   192,   193,   666,
    1082,   195,     0,   196,   197,   667,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   668,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   669,   232,   233,   234,
     235,   670,   671,     0,   672,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   673,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   674,     0,   675,   283,   284,   285,   676,     0,
     287,   288,     0,   290,     0,   677,   292,   678,   294,   295,
     296,     0,   297,   298,  1083,     0,   299,   300,   301,     0,
       0,   302,   679,     0,   305,     0,   680,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     681,   321,   322,   682,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   683,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,     0,   356,
     357,   358,   684,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   685,   378,   379,   380,     0,   382,   383,   686,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   687,   398,   688,     0,   400,   401,     0,
     402,     0,   404,   405,   406,   407,   408,     0,   689,   690,
       0,     0,   411,   412,   691,   414,   692,  1084,   416,   417,
     693,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
    1030,   695,     0,   436,     0,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   460,   461,   462,   463,   655,  1081,   535,     0,     0,
       0,   729,  1085,  1086,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     656,   657,     0,   658,   659,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   660,   661,   125,     0,
     126,   127,   128,   129,   662,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   663,   664,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   665,   190,   191,   192,   193,   666,  1082,   195,     0,
     196,   197,   667,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   668,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   669,   232,   233,   234,   235,   670,   671,
       0,   672,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     673,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   674,
       0,   675,   283,   284,   285,   676,     0,   287,   288,     0,
     290,     0,   677,   292,   678,   294,   295,   296,     0,   297,
     298,  1083,     0,   299,   300,   301,     0,     0,   302,   679,
       0,   305,     0,   680,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   681,   321,   322,
     682,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   683,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,     0,   356,   357,   358,   684,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   685,
     378,   379,   380,     0,   382,   383,   686,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     687,   398,   688,     0,   400,   401,     0,   402,     0,   404,
     405,   406,   407,   408,     0,   689,   690,     0,     0,   411,
     412,   691,   414,   692,  1084,   416,   417,   693,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,  1030,   695,     0,
     436,     0,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   460,   461,
     462,   463,     0,  1232,     0,     0,  1233,     0,     0,  1085,
    1086,  1234,  1235,  1236,     0,     0,     0,     0,     0,     0,
       0,  1232,     0,     0,  1233,     0,     0,     0,  1237,  1234,
    1235,  1236,  1691,     0,     0,     0,  1239,     0,     0,  1232,
       0,     0,  1233,  1240,     0,     0,  1237,  1234,  1235,  1236,
       0,     0,     0,     0,  1239,     0,     0,     0,     0,     0,
       0,  1240,     0,     0,  1237,     0,     0,  1232,  1241,     0,
    1233,     0,  1239,     0,     0,  1234,  1235,  1236,     0,  1240,
       0,     0,     0,     0,     0,     0,  1241,     0,     0,     0,
       0,     0,  1237,     0,     0,  1866,     0,     0,     0,     0,
    1239,     0,     0,  1232,  1241,     0,  1233,  1240,     0,     0,
       0,  1234,  1235,  1236,     0,     0,     0,     0,  1692,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1237,     0,
       0,     0,  1241,     0,     0,     0,  1239,     0,     0,     0,
       0,     0,     0,  1240,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1242,  1241,     0,
       0,     0,     0,     0,     0,  1906,     0,     0,     0,     0,
    1907,  1243,     0,     0,     0,  1242,  1244,  1232,     0,     0,
    1233,     0,  2811,     0,     0,  1234,  1235,  1236,     0,  1243,
       0,     0,     0,  1242,  1244,     0,     0,  1245,  1246,     0,
       0,     0,  1237,     0,     0,  1915,     0,  1243,     0,     0,
    1239,  1247,  1244,     0,     0,  1245,  1246,  1240,     0,     0,
       0,  1242,     0,     0,     0,     0,     0,     0,     0,  1247,
       0,     0,     0,  1245,  1246,  1243,     0,     0,     0,     0,
    1244,     0,  1241,     0,     0,     0,     0,  1247,     0,  1248,
       0,     0,  1249,     0,     0,     0,     0,  1242,     0,     0,
       0,  1245,  1246,     0,     0,     0,  1250,  1248,     0,  1251,
    1249,  1243,     0,     0,     0,  1247,  1244,     0,     0,     0,
       0,     0,     0,     0,  1250,  1248,     0,  1251,  1249,     0,
       0,     0,     0,     0,     0,     0,     0,  1245,  1246,     0,
       0,     0,  1250,     0,     0,  1251,     0,     0,     0,     0,
       0,  1247,     0,  1248,     0,     0,  1249,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2812,     0,
    1250,     0,     0,  1251,     0,     0,     0,     0,     0,     0,
       0,  1242,     0,     0,     0,     0,     0,     0,     0,  1248,
       0,     0,  1249,     0,     0,  1243,  1252,     0,     0,     0,
    1244,     0,     0,     0,     0,     0,  1250,     0,     0,  1251,
       0,     0,     0,     0,  1252,     0,     0,     0,     0,     0,
       0,  1245,  1246,     0,     0,     0,     0,  1880,     0,     0,
       0,     0,  1252,     0,     0,  1247,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1232,
       0,     0,  1233,     0,  1693,     0,     0,  1234,  1235,  1236,
    1252,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1248,  1237,     0,  1249,     0,     0,     0,
       0,     0,  1239,     0,     0,     0,     0,     0,     0,  1240,
    1250,     0,     0,  1251,     0,  1253,  1252,     0,  1254,  1255,
    1256,     0,  1257,  1258,  1259,  1260,  1261,  1262,     0,     0,
       0,     0,     0,  1253,  1241,     0,  1254,  1255,  1256,     0,
    1257,  1258,  1259,  1260,  1261,  1262,     0,     0,     0,     0,
       0,  1253,     0,     0,  1254,  1255,  1256,     0,  1257,  1258,
    1259,  1260,  1261,  1262,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1253,
       0,     0,  1254,  1255,  1256,     0,  1257,  1258,  1259,  1260,
    1261,  1262,     0,     0,     0,     0,     0,     0,     0,     0,
    1252,     0,     0,     0,  1232,     0,     0,  1233,     0,     0,
       0,     0,  1234,  1235,  1236,  1253,     0,     0,  1254,  1255,
    1256,     0,  1257,  1258,  1259,  1260,  1261,  1262,  1920,  1237,
       0,     0,  1922,  1242,     0,     0,     0,  1239,     0,     0,
       0,     0,     0,     0,  1240,     0,     0,  1243,     0,     0,
    1232,     0,  1244,  1233,     0,     0,     0,     0,  1234,  1235,
    1236,     0,     0,     0,     0,     0,     0,     0,     0,  1241,
       0,     0,     0,  1245,  1246,  1237,     0,     0,     0,     0,
       0,     0,     0,  1239,     0,     0,     0,  1247,     0,  1232,
    1240,     0,  1233,     0,     0,     0,     0,     0,     0,  1253,
       0,     0,  1254,  1255,  1256,     0,  1257,  1258,  1259,  1260,
    1261,  1262,     0,     0,     0,  1241,     0,     0,     0,     0,
       0,     0,  1239,     0,     0,  1248,     0,     0,  1249, -1667,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1232,  1250,     0,  1233,  1251,     0,     0,     0,  1234,
    1235,  1236,     0,     0,  1241,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1237,     0,  1242,     0,
       0,     0,     0,     0,  1239,     0,     0,     0,     0,     0,
    1232,  1240,  1243,  1233,     0,     0,     0,  1244,  1234,  1235,
    1236,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1237,  1241,     0,  1245,  1246,
       0,     0,     0,  1239,  1242,     0,     0,     0,     0,     0,
    1240,     0,  1247,  2399,     0,     0,     0,     0,  1243,     0,
       0,     0,  1252,  1244,     0,     0,     0,     0,  1232,     0,
       0,  1233,     0,     0,     0,  1241,  1234,  1235,  1236,     0,
       0,     0,     0, -1667,  1245,  1246,     0,     0,     0,     0,
    1248,     0,     0,  1249,     0,     0,     0, -1667,  1247,     0,
       0,  1239, -1667,     0,     0,     0,     0,  1250,  1240,   878,
    1251,     0,     0,     0,     0,   879,     0,     0,     0,     0,
       0,     0,   891,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1241,     0,  1242,  1248, -1667,     0,  1249,
       0,   892,     0,     0,     0,     0,     0,     0,     0,  1243,
       0,     0,     0,  1250,  1244,     0,  1251,     0,     0,     0,
       0,  1253,     0,     0,  1254,  1255,  1256,     0,  1257,  1258,
    1259,  1260,  1261,  1262,  1242,  1245,  1246,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1243,  1247,
       0,   893,  1250,  1244,     0,     0,     0,  1252,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1245,  1246,     0,     0,     0,     0,
     880,     0,     0,     0,     0,     0,     0,  1248,  1247,     0,
    1249,     0,  1242,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1252,  1250,     0,  1243,  1251,     0,     0,
       0,  1244,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1248,     0,     0,  1249,
       0,     0,  1245,  1246,  2132,     0,     0,     0,     0,   894,
       0,     0, -1667,  1250,     0,     0,  1247,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1253,     0,     0,  1254,
    1255,  1256,     0,  1257,  1258,  1259,  1260,  1261,  1262,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1248,     0,     0,  1249,   895,     0,
       0,     0,     0,     0,  1252,     0,   896,     0,     0,     0,
       0,  1250,  1253,     0,     0,  1254,  1255,  1256,   897,  1257,
    1258,  1259,  1260,  1261,  1262,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   881,
       0,     0,     0,  1252,     0,     0,     0,     0,     0,   898,
       0, -1667,     0,     0,     0,     0,     0,     0,  1257,  1258,
    1259,  1260,  1261,  1262,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1755,
       0,     0,     0,   883,   900,     0,     0,     0,     0,     0,
       0,  1252,     0,  1253,     0,     0,  1254,  1255,  1256,     0,
    1257,  1258,  1259,  1260,  1261,  1262,   901,     0,     0,     0,
       0,     0,  1756,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   903,     0,     0,     0,
       0,     0,  1253,     0,     0,  1254,  1255,  1256,     0,  1257,
    1258,  1259,  1260,  1261,  1262,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   885,     0,
       0,     0,     0,     0,     0,     0,     0,   957,     0,  1600,
    1253,     0,     0,  1254,  1255,  1256,     0,  1257,  1258,  1259,
    1260,  1261,  1262,    90,    91,    92,    93,    94,    95,    96,
      97,   958,    98,    99,   100,   959,   960,   961,   962,   963,
     964,   965,   101,   102,   966,   103,   104,   105,     0,   107,
     108,   109,   656,   657,     0,   658,   659,   967,   115,   116,
     117,   118,   119,   120,   968,   969,   121,   122,   660,   661,
     125,   970,   126,   127,   128,   129,   662,   971,     0,   972,
     132,   133,   134,   135,   136,     0,   138,   139,   140,   973,
     141,   142,   143,   144,   145,   146,   974,     0,   148,   149,
     150,   975,   976,   977,     0,   978,   979,   980,   152,   153,
     154,   155,   156,   157,   158,   663,   664,   161,   981,   162,
     982,   163,   164,   165,   166,   167,   168,   983,   169,   170,
     171,   172,   173,   984,   985,   174,   175,   176,   177,   178,
     986,   179,   180,   181,   987,   182,   183,   184,   988,   185,
     186,   187,   188,   665,   190,   191,   192,   193,   666,   989,
     195,   990,   196,   197,   667,   199,   991,   200,   992,   201,
       0,   993,     0,   204,   205,   206,     0,   208,   994,   209,
     995,   668,   211,   996,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,   997,   223,   224,   225,   226,
     227,   228,   998,   229,     0,   669,   232,   233,   234,   235,
     670,   671,   999,   672,  1000,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,  1001,  1002,   249,     0,   251,
       0,  1003,   253,   254,   255,  1004,  1005,   256,   257,   258,
     259,   260,   673,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   674,     0,   675,   283,   284,   285,   676,  1006,   287,
     288,     0,   290,  1007,   677,   292,   678,   294,   295,   296,
    1008,   297,   298,  1009,  1010,   299,   300,   301,  1011,  1012,
     302,   679,     0,   305,     0,   680,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,  1013,   318,   319,   681,
     321,   322,   682,   324,   325,   326,  1014,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   683,   337,   338,   339,
     340,  1015,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,  1016,   353,   354,     0,   356,   357,
     358,   684,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,  1017,   371,   372,   373,   374,   375,  1018,
     376,   685,   378,   379,   380,     0,   382,   383,   686,   385,
    1019,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   687,   398,   688,  1020,   400,   401,  1021,   402,
       0,   404,   405,   406,   407,   408,  1022,   689,   690,  1023,
    1024,   411,   412,   691,   414,   692,  1025,   416,   417,   693,
     419,   420,   421,   422,   423,  1026,  1027,   424,   425,   426,
     427,   428,  1028,  1029,   429,   430,   431,   432,   433,  1030,
     695,  1031,   436,     0,   438,   439,   440,   441,  1032,  1033,
     442,  1034,  1035,   443,   444,   445,   446,   447,   448,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     460,   461,   462,   463,   957,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,   958,    98,
      99,   100,   959,   960,   961,   962,   963,   964,   965,   101,
     102,   966,   103,   104,   105,     0,   107,   108,   109,   656,
     657,     0,   658,   659,   967,   115,   116,   117,   118,   119,
     120,   968,   969,   121,   122,   660,   661,   125,   970,   126,
     127,   128,   129,   662,   971,     0,   972,   132,   133,   134,
     135,   136,     0,   138,   139,   140,   973,   141,   142,   143,
     144,   145,   146,   974,     0,   148,   149,   150,   975,   976,
     977,     0,   978,   979,   980,   152,   153,   154,   155,   156,
     157,   158,   663,   664,   161,   981,   162,   982,   163,   164,
     165,   166,   167,   168,   983,   169,   170,   171,   172,   173,
     984,   985,   174,   175,   176,   177,   178,   986,   179,   180,
     181,   987,   182,   183,   184,   988,   185,   186,   187,   188,
     665,   190,   191,   192,   193,   666,   989,   195,   990,   196,
     197,   667,   199,   991,   200,   992,   201,     0,   993,     0,
     204,   205,   206,     0,   208,   994,   209,   995,   668,   211,
     996,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,   997,   223,   224,   225,   226,   227,   228,   998,
     229,     0,   669,   232,   233,   234,   235,   670,   671,   999,
     672,  1000,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,  1001,  1002,   249,     0,   251,     0,  1003,   253,
     254,   255,  1004,  1005,   256,   257,   258,   259,   260,   673,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   674,     0,
     675,   283,   284,   285,   676,  1006,   287,   288,     0,   290,
    1007,   677,   292,   678,   294,   295,   296,  1008,   297,   298,
    1009,  1010,   299,   300,   301,  1011,  1012,   302,   679,     0,
     305,     0,   680,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,  1013,   318,   319,   681,   321,   322,   682,
     324,   325,   326,  1014,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   683,   337,   338,   339,   340,  1015,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,  1016,   353,   354,     0,   356,   357,   358,   684,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
    1017,   371,   372,   373,   374,   375,  1018,   376,   685,   378,
     379,   380,     0,   382,   383,   686,   385,  1019,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   687,
     398,   688,  1020,   400,   401,  1021,   402,     0,   404,   405,
     406,   407,   408,  1022,   689,   690,  1023,  1024,   411,   412,
     691,   414,   692,  1025,   416,   417,   693,   419,   420,   421,
     422,   423,  1026,  1027,   424,   425,   426,   427,   428,  1028,
    1029,   429,   430,   431,   432,   433,  1030,   695,  1031,   436,
       0,   438,   439,   440,   441,  1032,  1033,   442,  1034,  1035,
     443,   444,   445,   446,   447,   448,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   460,   461,   462,
     463,   957,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,  1740,    95,    96,    97,   958,    98,    99,   100,   959,
     960,   961,   962,   963,   964,   965,   101,   102,   966,   103,
     104,   105,     0,   107,   108,   109,   656,   657,     0,   658,
     659,   967,   115,   116,   117,   118,   119,   120,   968,   969,
     121,   122,   660,   661,   125,   970,   126,   127,   128,   129,
     662,   971,     0,   972,   132,   133,   134,   135,   136,     0,
     138,   139,   140,   973,   141,   142,   143,   144,   145,   146,
     974,     0,   148,   149,   150,   975,   976,   977,     0,   978,
     979,   980,   152,   153,   154,   155,   156,   157,   158,   663,
     664,   161,   981,   162,   982,   163,   164,   165,   166,   167,
     168,   983,   169,   170,   171,   172,   173,   984,   985,   174,
     175,   176,  1741,   178,   986,   179,   180,   181,   987,   182,
     183,   184,   988,   185,   186,   187,   188,   665,   190,   191,
     192,   193,   666,   989,   195,   990,   196,   197,   667,   199,
     991,   200,   992,   201,     0,   993,     0,   204,   205,   206,
       0,   208,   994,   209,   995,   668,   211,   996,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,   997,
     223,   224,   225,   226,   227,   228,   998,   229,     0,   669,
     232,   233,   234,   235,   670,   671,   999,   672,  1000,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,  1001,
    1002,   249,     0,   251,     0,  1003,   253,   254,   255,  1004,
    1005,   256,   257,   258,   259,   260,   673,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   674,     0,   675,   283,   284,
     285,   676,  1006,   287,   288,     0,   290,  1007,   677,   292,
     678,   294,   295,   296,  1008,   297,   298,  1009,  1010,   299,
     300,   301,  1011,  1012,   302,   679,     0,   305,     0,   680,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
    1013,   318,   319,   681,   321,   322,   682,   324,   325,   326,
    1014,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     683,   337,   338,   339,   340,  1015,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,  1016,   353,
     354,     0,   356,   357,   358,   684,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,  1017,   371,   372,
     373,   374,   375,  1018,  1742,   685,   378,   379,   380,     0,
     382,   383,   686,   385,  1019,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   687,   398,   688,  1020,
     400,   401,  1021,   402,     0,   404,   405,   406,   407,   408,
    1022,   689,   690,  1023,  1024,   411,   412,   691,   414,   692,
    1025,   416,   417,   693,   419,   420,   421,   422,   423,  1026,
    1027,   424,   425,   426,   427,   428,  1028,  1029,   429,   430,
     431,   432,   433,  1030,   695,  1031,   436,     0,   438,   439,
     440,   441,  1032,  1033,   442,  1034,  1035,   443,   444,   445,
     446,   447,   448,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   460,   461,   462,   463,    89,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,   736,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   739,     0,   740,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   741,   742,   743,   744,   745,   746,   747,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   753,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,     0,   253,   254,   255,   759,   760,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
     287,   288,   289,   290,     0,   765,   292,   293,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,   304,   305,   306,   768,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     769,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
     772,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   774,     0,   400,   401,     0,
     402,   403,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   777,   414,   778,     0,   416,   417,
     780,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,   781,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,   437,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    89,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,   131,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,     0,
       0,     0,   151,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,     0,   400,   401,     0,   402,   403,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,   411,
     412,   413,   414,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   434,   435,     0,
     436,   437,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   488,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,  1348,   126,   127,   128,
     129,   130,     0,     0,  1349,   132,   133,   134,   135,   136,
       0,   138,   139,   140,  1350,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,  1351,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,  1352,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   490,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   282,   283,
     284,   285,   286,     0,   287,   288,     0,   290,     0,   291,
     292,   293,   294,   295,   296,     0,   297,   298,     0,     0,
     299,   300,   301,     0,     0,   302,   303,     0,   305,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,  1353,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,   378,   379,   380,
       0,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   492,   398,   399,
       0,   400,   401,     0,   402,     0,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,   411,   412,   413,   414,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,  1354,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   435,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   488,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,  1348,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,  1350,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
    1351,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,  1803,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   490,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   282,   283,   284,   285,   286,
       0,   287,   288,     0,   290,     0,   291,   292,   293,   294,
     295,   296,     0,   297,   298,     0,     0,   299,   300,   301,
       0,     0,   302,   303,     0,   305,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,  1353,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,   378,   379,   380,     0,   382,   383,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   492,   398,   399,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,   411,   412,   413,   414,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,  1354,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,   434,   435,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   655,     0,   535,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   656,   657,     0,   658,   659,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   660,   661,   125,
       0,   126,   127,   128,   129,   662,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   663,   664,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   665,   190,   191,   192,   193,   666,  1082,   195,
       0,   196,   197,   667,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     668,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   669,   232,   233,   234,   235,   670,
     671,     0,   672,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   673,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     674,     0,   675,   283,   284,   285,   676,     0,   287,   288,
       0,   290,     0,   677,   292,   678,   294,   295,   296,     0,
     297,   298,  1083,     0,   299,   300,   301,     0,     0,   302,
     679,     0,   305,     0,   680,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   681,   321,
     322,   682,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   683,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,     0,   356,   357,   358,
     684,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     685,   378,   379,   380,     0,   382,   383,   686,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   687,   398,   688,     0,   400,   401,     0,   402,     0,
     404,   405,   406,   407,   408,     0,   689,   690,     0,     0,
     411,   412,   691,   414,   692,  1084,   416,   417,   693,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,  1030,   695,
       0,   436,     0,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   460,
     461,   462,   463,   488,     0,   560,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     3,     4,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   490,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,     0,   282,
     283,   284,   285,   286,     0,   287,   288,     0,   290,     0,
     291,   292,   293,   294,   295,   296,     0,   297,   298,     0,
       0,   299,   300,   301,     0,     0,   302,   303,     0,   305,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,   378,   379,
     380,     0,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   492,   398,
     399,     0,   400,   401,     0,   402,     0,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,   411,   412,   413,
     414,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   434,   435,     0,   436,     0,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     488,     0,   560,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   490,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   282,   283,   284,   285,
     286,     0,   287,   288,     0,   290,     0,   291,   292,   293,
     294,   295,   296,     0,   297,   298,     0,   561,   299,   300,
     301,     0,     0,   302,   303,     0,   305,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,   378,   379,   380,     0,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   492,   398,   399,     0,   400,
     401,     0,   402,     0,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,   411,   412,   413,   414,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   435,     0,   436,     0,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   488,     0,   560,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   606,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   490,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   282,   283,   284,   285,   286,     0,   287,
     288,     0,   290,     0,   291,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   561,   299,   300,   301,     0,     0,
     302,   303,     0,   305,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,   378,   379,   380,     0,   382,   383,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   492,   398,   399,     0,   400,   401,     0,   402,
       0,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,   411,   412,   413,   414,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,   434,
     435,     0,   436,     0,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   655,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     3,     4,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   656,
     657,     0,   658,   659,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   660,   661,   125,     0,   126,
     127,   128,   129,   662,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   663,   664,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     665,   190,   191,   192,   193,   666,     0,   195,     0,   196,
     197,   667,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   668,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   669,   232,   233,   234,   235,   670,   671,     0,
     672,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   673,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   674,     0,
     675,   283,   284,   285,   676,     0,   287,   288,     0,   290,
       0,   677,   292,   678,   294,   295,   296,     0,   297,   298,
       0,     0,   299,   300,   301,     0,     0,   302,   679,     0,
     305,     0,   680,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   681,   321,   322,   682,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   683,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,     0,   356,   357,   358,   684,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   685,   378,
     379,   380,     0,   382,   383,   686,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   687,
     398,   688,     0,   400,   401,     0,   402,     0,   404,   405,
     406,   407,   408,     0,   689,   690,     0,     0,   411,   412,
     691,   414,   692,     0,   416,   417,   693,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,  1030,   695,     0,   436,
       0,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   460,   461,   462,
     463,   488,     0,   560,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,  1653,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,  1654,     0,
       0,   256,   257,   258,   259,   260,   490,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,     0,   282,   283,   284,
     285,   286,     0,   287,   288,     0,   290,     0,   291,   292,
     293,   294,   295,   296,     0,   297,   298,     0,     0,   299,
     300,   301,     0,     0,   302,   303,     0,   305,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,   378,   379,   380,     0,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   492,   398,   399,     0,
     400,   401,  1655,   402,     0,   404,  1656,   406,  1657,   408,
       0,   409,   410,     0,     0,   411,   412,   413,   414,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
       0,   424,   425,  1658,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   434,   435,     0,   436,     0,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   488,  2551,
       0,     0,     0,     0,  2552,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   490,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   282,   283,   284,   285,   286,     0,
     287,   288,     0,   290,     0,   291,   292,   293,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,     0,   305,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,   378,   379,   380,     0,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   492,   398,   399,     0,   400,   401,     0,
     402,     0,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   413,   414,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,     0,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   488,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,   489,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     490,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   282,   283,   284,   285,   286,     0,   287,   288,     0,
     290,     0,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
       0,   305,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   491,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
     378,   379,   380,     0,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     492,   398,   399,     0,   400,   401,     0,   402,     0,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,   411,
     412,   413,   414,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   434,   435,     0,
     436,     0,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   488,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,   540,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   490,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   282,   283,
     284,   285,   286,     0,   287,   288,     0,   290,     0,   291,
     292,   293,   294,   295,   296,     0,   297,   298,     0,     0,
     299,   300,   301,     0,     0,   302,   303,     0,   305,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,   378,   379,   380,
       0,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   492,   398,   399,
       0,   400,   401,     0,   402,     0,   404,   405,   406,   407,
     408,     0,   541,   410,     0,     0,   542,   412,   413,   414,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   435,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   488,
       0,   560,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   601,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   490,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   282,   283,   284,   285,   286,
       0,   287,   288,     0,   290,     0,   291,   292,   293,   294,
     295,   296,     0,   297,   298,     0,     0,   299,   300,   301,
       0,     0,   302,   303,     0,   305,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,   378,   379,   380,     0,   382,   383,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   492,   398,   399,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,   411,   412,   413,   414,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,   434,   435,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   488,     0,   560,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   110,   111,     0,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   604,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   490,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,     0,   282,   283,   284,   285,   286,     0,   287,   288,
       0,   290,     0,   291,   292,   293,   294,   295,   296,     0,
     297,   298,     0,     0,   299,   300,   301,     0,     0,   302,
     303,     0,   305,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,   378,   379,   380,     0,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   492,   398,   399,     0,   400,   401,     0,   402,     0,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
     411,   412,   413,   414,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   434,   435,
       0,   436,     0,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   488,     0,   560,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   608,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   490,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,     0,   282,
     283,   284,   285,   286,     0,   287,   288,     0,   290,     0,
     291,   292,   293,   294,   295,   296,     0,   297,   298,     0,
       0,   299,   300,   301,     0,     0,   302,   303,     0,   305,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,   378,   379,
     380,     0,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   492,   398,
     399,     0,   400,   401,     0,   402,     0,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,   411,   412,   413,
     414,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   434,   435,     0,   436,     0,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     488,     0,   560,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   490,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   282,   283,   284,   285,
     286,     0,   287,   288,     0,   290,     0,   291,   292,   293,
     294,   295,   296,     0,   297,   298,     0,     0,   299,   300,
     301,     0,     0,   302,   303,     0,   305,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,   378,   379,   380,     0,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   492,   398,   399,     0,   400,
     401,     0,   402,     0,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,   411,   412,   413,   414,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   435,     0,   436,     0,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   488,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,   634,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   490,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   282,   283,   284,   285,   286,     0,   287,
     288,     0,   290,     0,   291,   292,   293,   294,   295,   296,
       0,   297,   298,     0,     0,   299,   300,   301,     0,     0,
     302,   303,     0,   305,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,   378,   379,   380,     0,   382,   383,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   492,   398,   399,     0,   400,   401,     0,   402,
       0,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,   411,   412,   413,   414,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,   434,
     435,     0,   436,     0,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   488,     0,   560,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,  1050,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   490,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,     0,
     282,   283,   284,   285,   286,     0,   287,   288,     0,   290,
       0,   291,   292,   293,   294,   295,   296,     0,   297,   298,
       0,     0,   299,   300,   301,     0,     0,   302,   303,     0,
     305,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,   378,
     379,   380,     0,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   492,
     398,   399,     0,   400,   401,     0,   402,     0,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,   411,   412,
     413,   414,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   435,     0,   436,
       0,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   488,     0,   560,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,  1052,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   490,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,     0,   282,   283,   284,
     285,   286,     0,   287,   288,     0,   290,     0,   291,   292,
     293,   294,   295,   296,     0,   297,   298,     0,     0,   299,
     300,   301,     0,     0,   302,   303,     0,   305,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,   378,   379,   380,     0,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   492,   398,   399,     0,
     400,   401,     0,   402,     0,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,   411,   412,   413,   414,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   434,   435,     0,   436,     0,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   488,     0,
     560,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
    1452,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   490,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   282,   283,   284,   285,   286,     0,
     287,   288,     0,   290,     0,   291,   292,   293,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,     0,   305,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,   378,   379,   380,     0,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   492,   398,   399,     0,   400,   401,     0,
     402,     0,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   413,   414,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,     0,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   488,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,  2210,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     490,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   282,   283,   284,   285,   286,     0,   287,   288,     0,
     290,     0,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
       0,   305,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
     378,   379,   380,     0,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     492,   398,   399,     0,   400,   401,     0,   402,     0,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,   411,
     412,   413,   414,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   434,   435,     0,
     436,     0,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   488,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,  2224,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   490,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   282,   283,
     284,   285,   286,     0,   287,   288,     0,   290,     0,   291,
     292,   293,   294,   295,   296,     0,   297,   298,     0,     0,
     299,   300,   301,     0,     0,   302,   303,     0,   305,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,   378,   379,   380,
       0,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   492,   398,   399,
       0,   400,   401,     0,   402,     0,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,   411,   412,   413,   414,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   435,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   488,
       0,   560,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,  2353,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   490,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   282,   283,   284,   285,   286,
       0,   287,   288,     0,   290,     0,   291,   292,   293,   294,
     295,   296,     0,   297,   298,     0,     0,   299,   300,   301,
       0,     0,   302,   303,     0,   305,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,   378,   379,   380,     0,   382,   383,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   492,   398,   399,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,   411,   412,   413,   414,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,   434,   435,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   488,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   110,   111,     0,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   490,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,     0,   282,   283,   284,   285,   286,     0,   287,   288,
       0,   290,     0,   291,   292,   293,   294,   295,   296,     0,
     297,   298,     0,     0,   299,   300,   301,     0,     0,   302,
     303,     0,   305,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,   378,   379,   380,     0,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   492,   398,   399,     0,   400,   401,     0,   402,     0,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
     411,   412,   413,   414,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   434,   435,
       0,   436,     0,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   488,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     552,     0,     0,   256,   257,   258,   259,   260,   490,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,     0,   282,
     283,   284,   285,   286,     0,   287,   288,     0,   290,     0,
     291,   292,   293,   294,   295,   296,     0,   297,   298,     0,
       0,   299,   300,   301,     0,     0,   302,   303,     0,   305,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   553,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   554,     0,   376,   377,   378,   379,
     380,     0,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   492,   398,
     399,     0,   400,   401,     0,   402,     0,   404,   405,   406,
     407,   408,     0,   555,   410,     0,     0,   411,   412,   413,
     414,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   434,   435,     0,   436,     0,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     488,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   490,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   282,   283,   284,   285,
     286,     0,   287,   288,     0,   290,     0,   291,   292,   293,
     294,   295,   296,     0,   297,   298,     0,     0,   299,   300,
     301,     0,     0,   302,   303,     0,   305,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   570,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,   378,   379,   380,     0,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   492,   398,   399,     0,   400,
     401,     0,   402,     0,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,   411,   412,   413,   414,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   435,     0,   436,     0,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   488,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   626,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   490,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   282,   283,   284,   285,   286,     0,   287,
     288,     0,   290,     0,   291,   292,   293,   294,   295,   296,
       0,   297,   298,     0,     0,   299,   300,   301,     0,     0,
     302,   303,     0,   305,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,   378,   379,   380,     0,   382,   383,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   492,   398,   399,     0,   400,   401,     0,   402,
       0,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,   411,   412,   413,   414,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,   434,
     435,     0,   436,     0,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   488,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   642,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   490,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,     0,
     282,   283,   284,   285,   286,     0,   287,   288,     0,   290,
       0,   291,   292,   293,   294,   295,   296,     0,   297,   298,
       0,     0,   299,   300,   301,     0,     0,   302,   303,     0,
     305,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,   378,
     379,   380,     0,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   492,
     398,   399,     0,   400,   401,     0,   402,     0,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,   411,   412,
     413,   414,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   435,     0,   436,
       0,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   488,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   646,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   490,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,     0,   282,   283,   284,
     285,   286,     0,   287,   288,     0,   290,     0,   291,   292,
     293,   294,   295,   296,     0,   297,   298,     0,     0,   299,
     300,   301,     0,     0,   302,   303,     0,   305,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,   378,   379,   380,     0,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   492,   398,   399,     0,
     400,   401,     0,   402,     0,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,   411,   412,   413,   414,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   434,   435,     0,   436,     0,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   488,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     649,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   490,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   282,   283,   284,   285,   286,     0,
     287,   288,     0,   290,     0,   291,   292,   293,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,     0,   305,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,   378,   379,   380,     0,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   492,   398,   399,     0,   400,   401,     0,
     402,     0,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   413,   414,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,     0,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   488,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     490,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   282,   283,   284,   285,   286,     0,   287,   288,     0,
     290,     0,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
       0,   305,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   553,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
     378,   379,   380,     0,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     492,   398,   399,     0,   400,   401,     0,   402,     0,   404,
     405,   406,   407,   408,     0,   555,   410,     0,     0,   411,
     412,   413,   414,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   434,   435,     0,
     436,     0,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   488,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,  1306,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   490,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   282,   283,
     284,   285,   286,     0,   287,   288,     0,   290,     0,   291,
     292,   293,   294,   295,   296,     0,   297,   298,     0,     0,
     299,   300,   301,     0,     0,   302,   303,     0,   305,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,     0,   377,   378,   379,   380,
       0,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   492,   398,   399,
       0,   400,   401,     0,   402,     0,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,   411,   412,   413,   414,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   435,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   488,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,  1439,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   490,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   282,   283,   284,   285,   286,
       0,   287,   288,     0,   290,     0,   291,   292,   293,   294,
     295,   296,     0,   297,   298,     0,     0,   299,   300,   301,
       0,     0,   302,   303,     0,   305,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,   378,   379,   380,     0,   382,   383,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   492,   398,   399,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,   411,   412,   413,   414,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,   434,   435,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   488,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   110,   111,     0,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,  1724,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   490,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,     0,   282,   283,   284,   285,   286,     0,   287,   288,
       0,   290,     0,   291,   292,   293,   294,   295,   296,     0,
     297,   298,     0,     0,   299,   300,   301,     0,     0,   302,
     303,     0,   305,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,   378,   379,   380,     0,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   492,   398,   399,     0,   400,   401,     0,   402,     0,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
     411,   412,   413,   414,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   434,   435,
       0,   436,     0,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   488,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,  1736,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   490,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,     0,   282,
     283,   284,   285,   286,     0,   287,   288,     0,   290,     0,
     291,   292,   293,   294,   295,   296,     0,   297,   298,     0,
       0,   299,   300,   301,     0,     0,   302,   303,     0,   305,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,   378,   379,
     380,     0,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   492,   398,
     399,     0,   400,   401,     0,   402,     0,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,   411,   412,   413,
     414,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   434,   435,     0,   436,     0,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     488,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,  1738,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   490,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   282,   283,   284,   285,
     286,     0,   287,   288,     0,   290,     0,   291,   292,   293,
     294,   295,   296,     0,   297,   298,     0,     0,   299,   300,
     301,     0,     0,   302,   303,     0,   305,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,   378,   379,   380,     0,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   492,   398,   399,     0,   400,
     401,     0,   402,     0,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,   411,   412,   413,   414,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   435,     0,   436,     0,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,  1104,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,  1105,   107,
     108,   109,     0,  1106,  1107,  1108,  1109,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,  1110,  1111,
     125,     0,   126,   127,   128,   129,     0,     0,  1112,     0,
     132,   133,   134,   135,   136,  1113,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,  1114,   148,   149,
     150,     0,     0,     0,  1115,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,  1116,  1117,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   751,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,     0,   190,   191,   192,   193,     0,     0,
     195,     0,   196,   197,  1118,   199,     0,   200,     0,   201,
    1119,     0,  1120,   204,   205,   206,  1121,   208,     0,   209,
       0,     0,   211,     0,   212,   213,   214,   215,   216,   217,
    1122,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,  1123,     0,   232,   233,   234,   235,
    1124,  1125,     0,  1126,     0,   239,  1127,  1128,   242,  1129,
     244,   245,   246,   247,   248,     0,     0,   249,  1130,   251,
    1131,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,  1132,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,  1133,  1134,  1135,   283,   284,   285,     0,     0,   287,
     288,  1136,   290,     0,     0,   292,  1137,   294,   295,   296,
       0,   297,   298,     0,     0,   299,   300,   301,     0,     0,
     302,     0,  1138,   305,  1139,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,     0,
     321,   322,     0,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,  1140,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,  1141,   356,   357,
     358,  1142,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,     0,
     376,  1143,   378,   379,   380,  1144,   382,   383,  1145,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,  1146,   398,     0,     0,   400,   401,     0,   402,
    1147,   404,   405,   406,   407,   408,     0,  1148,  1149,     0,
       0,   411,   412,     0,   414,     0,     0,   416,   417,  1150,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,     0,
    1151,     0,   436,  1152,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   488,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     460,   461,   462,   463,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   490,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   282,   283,   284,   285,   286,
       0,   287,   288,     0,   290,     0,   291,   292,   293,   294,
     295,   296,     0,   297,   298,     0,     0,   299,   300,   301,
       0,     0,   302,   303,     0,   305,     0,   307,   308,   309,
     310,   311,   312,   313,     0,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,     0,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   359,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,   378,   379,   380,     0,   382,   383,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   492,   398,   399,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,   411,   412,   413,   414,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,   434,   435,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,  2295,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,  2296,   107,   108,
     109,     0,  1106,  2297,  1108,  1109,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,  1110,  1111,   125,
       0,   126,   127,   128,   129,     0,     0,  2298,     0,   132,
     133,   134,   135,   136,  2299,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,  2300,   148,   149,   150,
       0,     0,     0,  2301,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,  1116,  1117,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   751,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,     0,   190,   191,   192,   193,     0,     0,   195,
       0,   196,   197,  1118,   199,     0,   200,     0,   201,  2302,
       0,  2303,   204,   205,   206,  2304,   208,     0,   209,     0,
       0,   211,     0,   212,   213,   214,   215,   216,   217,  2305,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,  2306,     0,   232,   233,   234,   235,  1124,
    1125,     0,  1126,     0,   239,  2307,  2308,   242,  2309,   244,
     245,   246,   247,   248,     0,     0,   249,  2310,   251,  2311,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,  2497,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
    1133,  2313,  1135,   283,   284,   285,     0,     0,   287,   288,
    2315,   290,     0,     0,   292,  1137,   294,   295,   296,     0,
     297,   298,     0,     0,   299,   300,   301,     0,     0,   302,
       0,  2317,   305,  2318,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,     0,   321,
     322,     0,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,  1140,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,  2319,   356,   357,   358,
       0,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,     0,   376,
       0,   378,   379,   380,  2321,   382,   383,  1145,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,  2498,   398,     0,     0,   400,   401,     0,   402,  2323,
     404,   405,   406,   407,   408,     0,  1148,  1149,     0,     0,
     411,   412,     0,   414,     0,     0,   416,   417,  2324,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,     0,  1151,
       0,   436,  2325,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,  1104,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   460,
     461,   462,   463,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,  1105,
     107,   108,   109,     0,  1106,  1107,  1108,  1109,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,  1110,
    1111,   125,     0,   126,   127,   128,   129,     0,     0,  1112,
       0,   132,   133,   134,   135,   136,  1113,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,  1114,   148,
     149,   150,     0,     0,     0,  1115,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,  1116,  1117,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   751,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,     0,   190,   191,   192,   193,     0,
       0,   195,     0,   196,   197,  1118,   199,     0,   200,     0,
     201,  1119,     0,  1120,   204,   205,   206,  1121,   208,     0,
     209,     0,     0,   211,     0,   212,   213,   214,   215,   216,
     217,  1122,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,  1123,     0,   232,   233,   234,
     235,  1124,  1125,     0,  1126,     0,   239,  1127,  1128,   242,
    1129,   244,   245,   246,   247,   248,     0,     0,   249,  1130,
     251,  1131,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,     0,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,  1133,  1134,  1135,   283,   284,   285,     0,     0,
     287,   288,  1136,   290,     0,     0,   292,  1137,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,     0,  1138,   305,  1139,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
       0,   321,   322,     0,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,  1140,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,  1141,   356,
     357,   358,     0,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,     0,   378,   379,   380,  1144,   382,   383,  1145,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   398,     0,     0,   400,   401,     0,
     402,  1147,   404,   405,   406,   407,   408,     0,  1148,  1149,
       0,     0,   411,   412,     0,   414,     0,     0,   416,   417,
    1150,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,  1151,     0,   436,  1152,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   460,   461,   462,   463
};

static const yytype_int16 yycheck[] =
{
       6,     6,   605,    34,   518,   612,   891,   620,   905,   551,
     569,   903,     6,   590,   524,   711,   517,    56,  1203,   878,
      16,     0,   776,     0,   711,   564,  1048,  1665,  1048,  1734,
    1048,   647,     0,     0,  1048,  2007,  2055,   789,   880,    16,
    1479,     0,   522,   874,  1078,  1740,  2079,  1742,  1229,  1230,
     944,  1192,  1685,   805,  1192,  1622,  1731,  1192,  1966,  1192,
    2087,   614,   883,  2055,   718,   817,   908,    58,  1170,     5,
       0,   524,    29,    58,   523,  1972,  2094,     9,     5,     0,
      33,     5,     9,  2357,  1662,    11,    50,     0,  1070,    13,
      14,     5,   651,    58,    11,   114,     5,     5,  1676,    13,
      14,     5,     5,   749,     5,     9,   605,  1281,   607,     5,
     609,    58,     5,     5,     5,  1329,  1327,    76,     5,    93,
     766,    13,    14,    73,    41,  1800,    13,    14,   824,    86,
      13,    14,     5,    23,   167,   529,    75,     5,     5,    29,
      13,    14,    67,  2363,  2360,   625,    85,  1233,     5,   144,
      27,     5,     5,     5,     5,    27,    73,    34,    27,    40,
     167,    27,    34,  2433,   116,    34,  1841,  1842,     4,    15,
     119,    92,  2411,     9,     3,    40,   136,   106,     4,    92,
      58,  2349,   210,     9,     3,     4,     5,  1996,     9,  2501,
       9,  1971,   167,  2530,   168,   285,   892,    11,   277,   895,
     896,   711,    31,    32,   301,   168,   279,   717,  2447,    11,
     236,    75,    78,   208,   168,  1908,   121,   168,   587,    82,
      86,    85,   119,   265,   119,   114,   200,    41,   787,   347,
      11,   285,  2334,   236,  2282,   301,  2586,   134,  1205,   164,
     325,   215,  2687,   216,   134,   157,   200,   587,   268,   115,
     224,   790,    27,  2622,  2026,   204,  2456,   116,  1143,    73,
      41,   215,   916,   126,   106,   714,    37,    59,   117,   923,
     224,    27,  1358,   292,   159,    67,    20,  2477,   831,   818,
      11,   157,   348,  2745,   258,  2747,   429,    93,   711,   262,
     285,  2530,    73,   117,   717,   114,  2516,   445,  2568,    58,
     429,   863,   338,    11,   320,   279,  2214,    23,  2205,   114,
    2218,   129,  1879,   107,   873,   227,   826,   827,   184,    11,
    2025,  2770,  2355,   407,   146,    68,   352,  2099,  2320,   195,
     366,   845,   348,    41,   737,   738,   393,   166,   187,   168,
     359,  2786,   490,   486,  2713,   107,   297,  2022,   321,  2024,
    1317,   227,   123,   373,   129,  2817,   441,   486,   279,   762,
      76,     5,   168,   187,   276,    73,   279,   451,   486,   343,
     192,   428,   949,   129,   339,   394,   261,  1881,   801,   184,
     269,    73,   486,  2832,   481,   427,  1964,   312,  1966,   343,
     209,  2741,   339,   283,   200,  1149,   369,  2499,   405,   425,
     490,   824,  1056,   826,   827,  1909,  2606,   486,     0,   215,
     269,   230,  2651,   486,   311,   481,   435,   489,   224,   340,
     262,   372,   425,  2471,  2204,  1511,   421,   340,    11,   448,
     405,  2768,    15,   296,  2109,  2804,   490,  1622,   230,    22,
    2752,  2250,  1055,   333,   290,  2684,   840,   337,  2141,    32,
      33,  2619,   258,   472,   427,   429,   274,   490,  2728,   264,
     486,   339,   490,  1070,  1446,   394,   405,   486,   475,   892,
      23,  1117,   895,   896,   383,   384,   366,   490,   427,   431,
     161,   488,  2501,   486,   444,  1699,  1667,  1698,  2762,  1096,
    1349,  1137,   335,   524,   473,  2715,   473,   422,  2714,   376,
    1939,    84,   871,   262,   376,   473,   473,   376,  1693,  2501,
     391,  1405,  2420,  1687,   473,  2412,   382,  2425,   524,   385,
    2428,  1167,   486,   486,   429,   490,   391,   448,   524,  2768,
     438,   871,   427,  1430,   484,   448,   399,   343,   488,    13,
      14,   405,   432,   490,   550,   551,   523,   450,   484,   486,
     486,   590,   488,   485,  2259,     4,   482,   450,  1072,   486,
       9,   194,   486,   569,  1065,   482,   487,  1068,   489,   472,
    1080,   567,   486,  1675,   487,  1076,   489,  2272,   486,   472,
     339,   134,   486,   486,  1478,   486,   577,   243,  2621,   159,
     486,   216,   577,   486,   486,   486,  1563,  1564,  2625,   486,
     579,  1568,   579,   486,   610,   611,   612,   366,  2626,   439,
     439,   579,   579,   486,  1173,  2248,  1175,   570,   486,   486,
     579,  1174,   448,  1277,  1183,   582,   307,  1080,  1187,   486,
    1079,  1238,   486,   486,   486,   486,  2214,   262,  1605,  1606,
    2218,   477,   478,  1205,    75,   651,   472,  1206,  1207,   579,
     220,   477,   478,   194,    85,  2563,   477,   478,   477,   478,
     105,   450,  1085,  1086,    75,   479,   480,   481,   482,   448,
     148,  1224,  1225,   410,    85,   236,  2351,   479,   480,   481,
     482,  1220,  1378,   472,   264,  2252,   484,  2720,   162,   269,
     488,   475,  1388,   472,  1879,  1391,   477,   478,   479,   480,
     481,   482,   486,    23,    30,   711,   441,  1110,  1111,    29,
     129,   717,   718,   719,  1855,  1856,  1269,  1855,  1856,  1857,
    1855,  1854,  2210,   355,  1810,   475,  1279,  1280,    54,   735,
     283,   486,  1135,  2752,  1657,  1658,  2224,   714,   488,   319,
    1241,   398,  2181,   400,   369,  1926,   477,   478,   479,   480,
     481,   482,   398,  2458,   400,  1317,   787,   763,   481,  1366,
    2752,   116,  1185,  1186,  1850,   488,   173,  1463,  1802,   486,
    1193,  1374,  1195,  1196,    92,   359,  1463,   783,   784,   785,
    1866,   787,    64,    65,   337,   338,   481,  1210,   532,  1212,
     534,   352,   469,   488,  1197,  1198,     4,   242,  2831,   236,
    1886,     9,   427,   809,  1227,   250,   129,   485,   450,   553,
     394,   352,   490,   366,   134,  2787,  2788,   214,    48,   360,
     826,   827,    36,   230,  1401,  1402,  1403,  1443,   488,  1915,
     472,  1447,   155,  2411,  1450,   279,  1922,  1589,  1669,  1446,
     450,    55,  2420,   198,   486,   264,   487,  2425,  1347,   490,
    2428,   435,   858,   394,  1468,   274,   862,   863,  1472,   479,
    1474,  1758,   472,  2835,   425,   856,   857,   873,   859,  2447,
    2055,   856,   857,   469,   859,  1374,   486,     4,    23,   129,
     166,   359,     9,  1384,    29,   891,  2591,  1781,  1389,   490,
     157,   105,    23,   850,  1393,   162,    13,    14,    29,  1398,
     441,  2596,   486,  1326,  1327,   155,   236,   262,   491,   264,
     916,   486,   248,   249,     4,   352,   394,   923,   487,     9,
    1887,  1888,  1889,  1890,  1766,   486,  1893,  1894,  1895,  1896,
    1897,  1898,  1899,  1900,  1901,  1902,   519,  1689,   944,   236,
     487,  1421,   172,   325,   182,   183,   269,  2386,    13,    14,
     907,   274,  2530,  1463,   167,  1378,   186,   435,  1517,   157,
     227,   191,   210,   283,   162,  1388,  1476,   711,  1391,  2055,
     448,    54,   487,   717,    23,   490,  1943,  1944,   360,   193,
      29,    31,    32,   236,   448,  2563,   450,   570,   425,   134,
    1811,   398,   486,   400,   472,  1816,   226,  1581,    23,  1583,
    1584,  1563,  1564,   134,    29,   584,  1568,   586,   486,   276,
     248,   249,   394,   333,   264,    13,    14,   337,   425,   269,
     356,   357,   352,  1582,   274,    13,    14,   487,   242,   227,
     490,   469,  1955,  1956,  1957,  1958,   250,   398,   214,   400,
    1463,   359,    92,  1605,  1606,  2683,   366,   791,   262,   486,
    1056,  1610,   149,  1476,   173,   352,   333,   801,  2080,   441,
    2080,   484,  2080,   486,  1070,   488,  2080,  2252,  2102,   487,
     814,   487,   490,  2651,  1080,   194,   394,  1500,   276,   293,
     824,   149,   826,   827,  1080,   134,   552,  1664,   554,   412,
    1096,  1650,   441,   487,   487,   425,   490,   490,  2537,   352,
     423,   325,  1079,   398,   487,   400,  2684,   490,    67,   134,
     487,   230,   432,   490,    73,   149,  2821,   435,   356,   357,
    2219,  1737,  2221,  1739,   338,   719,    85,   149,   425,   487,
     448,  2769,   490,    13,    14,   486,   360,  1143,   283,  2036,
       8,   371,   264,  2035,   487,  1832,   360,   490,    16,    17,
      18,  2789,   283,   486,   472,   114,   486,   116,   487,  1913,
    1914,   490,   412,    81,  2023,   284,   380,  1173,   486,  1175,
     394,   452,   425,   423,  1180,   487,   487,  1183,   490,   490,
     149,  1187,  2074,    83,  1797,    85,   488,    87,   333,   486,
    2768,  1170,   337,  1170,   487,  1201,   486,   490,  1204,  1205,
    1206,  1207,  1170,  1170,  2290,  2843,   337,   149,  1214,  1215,
    1216,  1170,   171,  2034,   149,  2036,   487,   441,   279,   490,
     394,   366,  1228,  1830,    13,    14,    36,  1233,  1234,  1235,
    1236,  1237,  1238,   486,   283,   366,  1242,  1243,    23,   198,
     225,  1247,  1994,  1666,    29,  1251,    13,    14,  1254,  1255,
    1256,  1257,  1258,  1259,  1260,  1261,  1262,     5,   283,  1265,
       8,   844,   487,   486,  1270,   490,    14,  1273,   484,  1275,
       5,  1277,     5,   487,  1697,  1698,    24,    13,    14,   398,
      28,   400,   487,   486,   333,   490,   144,   432,   337,   486,
    2376,   487,   487,  1299,   490,   490,   162,   891,   148,   157,
    1296,   432,   486,   422,   162,   264,   425,   486,   333,   359,
     269,  1317,   337,    13,    14,   487,  2501,   366,   490,   308,
    1326,  1327,  1832,   486,  1825,  1887,  1888,  1889,  1890,    13,
      14,  1893,  1894,  1895,  1896,  1897,  1898,  1899,  1900,  1901,
    1902,   366,     5,   487,   394,  1304,   490,   486,    67,   134,
     208,   487,  1358,   312,   490,    13,    14,     5,  1364,  2055,
    1366,  1920,   487,   487,     8,   490,   490,    11,   327,   227,
    1923,   486,    16,    17,    18,   144,   487,     8,   486,   490,
      11,  1943,  1944,   432,   487,   435,   486,   490,   157,   439,
     486,  2288,   486,   162,   487,   114,     5,   490,   448,  1405,
     486,  2260,  1408,  1409,   486,  1411,   359,   432,   487,   487,
      41,   490,   490,   281,     5,  2501,  2383,    48,   276,  1563,
    1564,     9,   472,   487,  1568,   449,   490,   285,  1851,  1852,
     487,   719,  1438,   490,   486,  2320,   486,  1976,   486,   208,
    1446,   394,    73,   487,    13,    14,   490,  2054,  1192,  2056,
    2003,     6,   171,    13,    14,   486,    11,  1463,   227,   486,
      15,  1605,  1606,   422,    13,    14,    21,    22,    23,   486,
    1476,    26,  1478,  1479,    29,  1434,   487,    32,    33,   490,
       0,  2567,   435,    15,  2570,  2101,   719,   210,   487,   490,
    1073,   490,  1075,  2070,   487,   448,    16,   490,   283,    96,
     487,   487,  2469,   490,   490,  1511,    36,   276,   162,   359,
     487,  1517,  1518,   490,    34,   487,   285,  1523,   490,   472,
     487,    76,   487,   490,   487,   490,   366,   490,    83,    84,
      85,    86,    87,   486,  1565,   276,   824,   487,    58,   162,
     490,   172,  1286,   487,   394,   264,   490,   191,   333,  1143,
     269,   487,   337,   274,   490,   186,    76,  1563,  1564,  1565,
     191,   487,  1568,   421,   490,    13,    14,  2752,   212,  2536,
     487,    13,    14,   490,   474,  1581,  1582,  1583,  1584,  1610,
     225,   366,   486,  2279,  1590,   435,   486,  2223,    13,    14,
    2226,    13,    14,   312,   405,   226,    13,    14,   448,  1605,
    1606,    13,    14,   891,  1610,   473,   474,   475,   327,   477,
     478,   479,   480,   481,   482,  2507,    13,    14,  1624,    13,
      14,  1627,   472,  1629,    13,    14,   484,   347,   348,   487,
     488,   486,  2055,   347,   348,    85,   486,   281,   490,  1233,
     347,   348,   347,   348,  1650,   252,   253,   432,   405,  1680,
     281,    54,   421,   356,   357,    54,  1662,  1662,   891,   826,
     827,   561,   405,   255,   487,   405,  2752,   493,  1662,   448,
    1676,  1676,   292,   405,   149,  2291,  2292,  2230,    92,   264,
     264,   486,  1676,    36,  1690,    36,  2373,   488,   490,   438,
     486,  2244,   486,  2116,   594,   486,  1675,  2239,  1675,  1705,
     486,    35,   486,   422,   486,   444,     9,  1675,  1675,   403,
     403,    11,   490,   403,   486,   269,  1675,  1723,   486,  1463,
     405,   176,   158,  1467,   167,   487,   486,   429,    36,   629,
     630,   631,  1476,   369,  1740,  1741,  1742,   208,   490,   359,
     371,    36,   216,  1887,  1888,  1889,  1890,   280,   490,  1893,
    1894,  1895,  1896,  1897,  1898,  1899,  1900,  1901,  1902,   486,
      55,   264,   216,   216,  1358,   487,   285,  1350,   277,   317,
     441,   486,   149,   149,   394,  1781,   448,  1360,   264,  1362,
     279,   279,  1365,   264,    36,    36,    35,   484,  1371,   484,
    1373,   405,   405,   405,   405,   487,   487,   167,   487,  1943,
    1944,   487,  1385,   490,  1810,  2501,   487,  1390,   487,   487,
     105,  1394,  1395,  1396,  1397,   435,  1399,  1400,   488,   487,
     487,  2383,   487,   469,  1830,   487,  1832,   469,   448,   473,
     474,   475,   487,   477,   478,   479,   480,   481,   482,   470,
     487,   469,   167,   486,  1850,   486,   477,   478,   479,   480,
     481,   482,   472,   487,   405,  1143,  2279,  1863,   289,   486,
    1866,  2284,   486,  2373,   445,   445,   486,  1873,   435,  1828,
     279,  1877,   475,   471,  1880,   280,   171,   427,   280,   280,
    1886,  1887,  1888,  1889,  1890,  1479,   490,  1893,  1894,  1895,
    1896,  1897,  1898,  1899,  1900,  1901,  1902,   235,   193,   405,
    1906,  1907,   264,  2326,  2327,   149,  2803,  2469,   486,  1915,
    1143,   194,  1951,   149,  1920,   283,  1922,  1511,  1949,   474,
     149,  1927,   405,   405,  1930,   480,  1932,   405,   828,   405,
     487,   486,   485,  1939,  1940,  1966,   491,  1943,  1944,   279,
     487,   487,  1948,  1949,   487,  1233,   490,   242,   277,    36,
     149,   851,   448,   473,   149,   250,   269,   484,  1964,  1964,
    1966,  1966,   517,   518,   519,   487,  2467,   262,  2545,   140,
    1964,  1977,  1966,   167,  2536,    11,   162,   877,   167,   487,
    1986,   445,   487,   487,   486,  2592,   487,   394,   167,   176,
     890,    50,   472,   490,  2607,   487,  2002,   552,   293,   554,
    1233,   340,  1746,   523,   524,   169,   561,   434,   487,   173,
     487,   911,  2571,    83,   486,   570,   280,   149,   486,   171,
     416,   486,    36,   486,    79,   429,   485,   582,   490,   485,
     194,   167,   396,   215,   486,    94,  2550,   215,   487,   594,
     487,   487,   487,   338,  2050,  1789,   486,   486,  2054,  2055,
    2056,   288,   487,   486,  2568,   286,  2752,   577,    54,   579,
     179,   120,   475,   448,   185,   360,   230,  2490,  2491,   196,
    1358,   269,   269,   237,   629,   630,   631,  2690,  2501,   138,
     488,   405,   488,   142,   405,   380,    36,   475,  1832,  2648,
     488,   264,   487,  1837,   106,  1839,   488,   488,   488,  1843,
    1844,   488,   488,   448,   163,   488,   488,   166,   488,   488,
     488,  2612,   279,   488,   488,   488,   488,   488,    36,   488,
     284,   180,   488,   488,   167,  1358,  2132,   488,   488,   488,
     488,   488,   488,   488,   486,   298,   486,     8,   485,  2098,
      11,   215,   486,   486,  2751,    16,    17,    18,   447,  1049,
    2664,   486,    85,   130,  2757,   487,   486,   327,   486,   216,
     114,    36,    33,   149,    73,   121,   149,    36,   723,  2175,
    2176,   487,   348,   348,  2180,  2181,    54,    36,  1078,  2185,
     486,   486,  2188,  2189,  2685,   486,   490,  2193,   352,     8,
     429,  1479,    11,   434,   714,    36,    73,    16,    17,    18,
     184,   429,   416,    67,   282,    67,   486,    36,  2214,  2214,
     269,   490,  2218,  2218,   184,   350,  1810,   366,   277,   719,
    2214,   475,   269,  1511,  2218,   240,   486,    36,   416,   486,
      36,  1814,   752,  2239,   398,   262,   400,   282,   282,  2383,
     486,   486,     8,   347,   487,    11,  1479,   487,   279,    55,
      16,    17,    18,     9,   334,   196,  1850,   279,   422,   279,
     319,   425,    33,   487,   486,   119,  2272,   787,   427,     9,
      22,   487,  1866,   828,  2037,  2281,  2050,   579,  1511,  1735,
    1372,  2243,  2241,  2242,  2290,  2000,  2684,  2443,  2748,   844,
     845,  2284,  1886,  2083,  2824,   850,   851,   852,  2754,   105,
    2599,  2790,  2802,   878,  2518,  1729,  1741,  2751,  2088,  1791,
    2800,  2055,  2054,  1726,  2320,  2749,  1795,  1830,  1065,  2077,
    2373,  1915,   877,   878,   819,  2469,   844,  1690,  1922,  2752,
    1343,   866,  2661,  2077,   865,   890,   856,   857,  2579,   859,
    2739,   212,  1317,  1705,  1980,  1939,  2673,  2235,  1342,  1676,
    1966,   868,   907,  2564,  2651,  2205,   911,  1964,  2220,  2650,
    2668,  1192,  2669,  1192,  1480,  1192,  2737,  2373,  1192,  2439,
    2376,  2738,  2724,  1271,  1274,  1411,  1693,  2383,  1519,  1628,
    2386,  1625,  1275,  1798,  2643,  1476,  1296,   193,  2001,  2395,
    2396,   891,  2536,  2399,  1297,  1295,    -1,  1297,  1080,  2358,
      -1,    -1,    -1,    -1,    -1,  2411,  2411,    -1,    -1,   850,
     281,    -1,    -1,    -1,  2420,  2420,    -1,  2411,    -1,  2425,
    2425,    -1,  2428,  2428,    -1,    -1,  2420,   719,    -1,  2435,
    2436,  2425,    -1,    -1,  2428,  2018,   242,    -1,    -1,    -1,
    1340,  2447,  2447,  2449,   250,    -1,   212,    -1,    -1,    -1,
      -1,    -1,    -1,  2447,    -1,    -1,   262,    -1,   719,  2042,
      -1,  2055,   281,  2469,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2057,  2058,  2059,  2060,  2061,  2062,
    2063,  2064,  2065,  2066,    -1,    -1,    -1,   293,     8,  1044,
    2234,    11,  2236,    -1,  1049,  2501,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,  1059,    -1,    -1,    -1,    -1,    -1,
    1065,    -1,    -1,  1068,    -1,   281,    -1,  1072,  1073,  1419,
    1075,  1076,  1810,  1078,  2530,  2530,    -1,    -1,    -1,    -1,
    2536,  2537,   338,    -1,    -1,    -1,  2530,    -1,    -1,    -1,
    2571,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2510,    -1,  2559,   360,    -1,    -1,  2563,  2563,  1079,
      -1,  2567,  1850,    -1,  2570,  2571,    -1,    -1,    -1,  2563,
      -1,    -1,  2531,    -1,   380,    -1,  2582,  1810,  1866,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2592,  2181,    -1,    -1,
    2596,  2597,    -1,    -1,    -1,    -1,    -1,    -1,  1886,   891,
      -1,    -1,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    -1,    -1,  1850,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1915,    -1,  2373,
     891,    -1,    -1,  1866,  1922,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2648,  1143,    -1,  2651,  2651,    -1,  1203,    -1,
    1170,  1939,    -1,  1886,   473,   474,   475,  2651,   477,   478,
     479,   480,   481,   482,    -1,  2624,     8,  2673,    -1,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,    -1,  2684,  2684,
      -1,    -1,  1915,    -1,    -1,    -1,  1241,    -1,    -1,  1922,
    2684,    33,   212,    -1,    -1,    -1,  2290,    -1,  2704,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1939,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,  2723,  2724,  1274,
      -1,  2680,    -1,    -1,  1244,    -1,  2320,    -1,    -1,    -1,
      -1,    -1,    -1,  1233,    -1,    -1,    -1,    -1,    -1,    -1,
    1295,    -1,  1297,    -1,    -1,  2751,  2752,    -1,    -1,    -1,
      -1,  1306,    -1,  1308,    -1,  1655,    -1,  2501,    -1,    -1,
      -1,   281,  2768,  2768,  2770,    -1,    -1,  2055,    -1,    -1,
      -1,    -1,    -1,    -1,  2768,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2376,    -1,  1304,  1340,    -1,    -1,    -1,    -1,
      -1,    -1,  2386,    -1,  1349,  1350,    -1,    -1,    -1,    -1,
      -1,    -1,  2761,    -1,    -1,  1360,  1361,  1362,  1363,    -1,
    1365,    -1,    -1,    -1,    -1,    -1,  1371,    -1,  1373,    -1,
      -1,    -1,  2055,    -1,    -1,    -1,  2832,   719,    -1,  1384,
    1385,    -1,    -1,     0,  1389,  1390,    -1,    -1,    -1,  1394,
    1395,  1396,  1397,    -1,  1399,  1400,    -1,    -1,    -1,    -1,
      -1,  1143,    -1,    -1,    -1,    -1,    -1,    -1,  1358,    -1,
      -1,    -1,    -1,    -1,  1419,  1420,    -1,    -1,    -1,    -1,
     212,    -1,    -1,    -1,    -1,    -1,  2620,  1432,    -1,    -1,
      -1,    -1,  1143,    -1,    -1,  2468,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2181,    -1,    -1,  1796,    -1,    -1,    -1,
      -1,  1801,  1802,  1803,    -1,    -1,    -1,  2501,    -1,    -1,
      -1,    -1,    -1,    -1,  1434,    -1,    -1,    -1,    -1,  2502,
    2503,  1821,    -1,    -1,    -1,    92,  1481,    -1,    -1,    -1,
      -1,    -1,  2515,    -1,    -1,    -1,    -1,    -1,    -1,   281,
      -1,  1233,    -1,  2537,    -1,    -1,    -1,    -1,  2181,    -1,
      -1,    -1,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1233,  2567,    -1,    -1,  2570,   144,    -1,  1479,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,    -1,   162,    -1,    -1,  2581,   891,
     167,    -1,  2290,    -1,    -1,    -1,    -1,    -1,  2752,   176,
       8,  1511,   179,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2320,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    41,    -1,  1565,    -1,    -1,    -1,    -1,
      48,    -1,    -1,    -1,    -1,    -1,    -1,  2290,    -1,    -1,
     227,  1961,  1962,  1963,    -1,    -1,  1358,  1622,    -1,     8,
      -1,    -1,    11,    -1,    -1,    73,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2320,  2376,    -1,
    1610,    -1,    -1,    -1,    33,    -1,    -1,  1358,  2386,    -1,
    1655,    -1,    -1,    -1,    -1,    -1,    -1,  1662,  1628,   276,
      -1,    -1,   279,    -1,    -1,    -1,  2016,    -1,   285,    -1,
      -1,  1676,   550,   551,  1644,  1680,    -1,    -1,  1683,    -1,
    1685,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,     8,  1662,  2376,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,  2386,    -1,  1675,  1676,    -1,  2752,    -1,
    1680,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,   340,   172,    -1,  1731,    -1,    -1,    -1,
      -1,  2081,   610,   611,    -1,    -1,    -1,  1479,   186,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2102,    -1,    -1,    -1,    -1,    -1,     3,    -1,
       5,    -1,    -1,  2501,   212,   213,    -1,    -1,  1479,  1511,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   226,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1791,    -1,    -1,    -1,
      -1,  1796,    -1,    -1,    -1,  1800,  1801,  1802,  1803,  2537,
    1511,  1143,    -1,    -1,   421,    -1,    -1,    -1,    -1,  1814,
      -1,    -1,   429,    -1,    -1,    -1,  1821,    -1,  2501,   267,
    1825,    -1,    -1,   212,    -1,    -1,    -1,    -1,   445,  2567,
     447,   448,  2570,   281,    -1,    -1,  1841,  1842,    -1,    -1,
     718,    -1,    -1,    -1,    -1,    -1,    -1,  2197,  2198,  2199,
    2200,    -1,    -1,    -1,  2537,    -1,    -1,   735,  1828,    -1,
    1810,    -1,    -1,   108,   109,    -1,    -1,   484,    -1,    -1,
     487,   488,   489,    -1,  1879,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2567,   763,    -1,  2570,    -1,    -1,
      -1,  1233,   281,    -1,    -1,   212,    -1,    -1,    -1,    -1,
    1850,    -1,    -1,    -1,    -1,   783,   784,   785,    -1,   787,
      -1,    -1,    -1,    -1,    -1,    -1,  1866,    -1,    -1,    -1,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   809,    -1,    -1,    -1,    -1,  1886,   182,   183,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1953,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1961,  1962,  1963,  1964,
      -1,  1966,  1967,    -1,   281,  1915,  1971,  1972,    -1,    -1,
      -1,    -1,  1922,    -1,    -1,    -1,    -1,    -1,    -1,  1949,
     858,    -1,    -1,    -1,   862,   863,    -1,    -1,    -1,  1939,
      -1,    -1,    -1,    -1,  1964,  2000,  1966,    -1,    -1,   244,
     245,   246,   247,   248,   249,    -1,    -1,   252,   253,    -1,
      -1,  2016,    -1,  2018,  2752,    -1,  1358,  2022,  2023,  2024,
      -1,  2026,   470,    -1,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,  2042,   916,  2044,
      -1,    -1,    -1,    -1,    -1,   923,   108,   109,    -1,    -1,
      -1,    -1,  2057,  2058,  2059,  2060,  2061,  2062,  2063,  2064,
    2065,  2066,    -1,    -1,    -1,    -1,   944,    -1,  1810,  2752,
      -1,    -1,    -1,    -1,    -1,    -1,  2081,    -1,    -1,    -1,
      -1,    -1,    -1,  2088,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,  2099,    -1,    -1,  2102,    -1,  1810,
      -1,    -1,    -1,    -1,  2109,  2055,    -1,    -1,  1850,    -1,
      -1,   356,   357,  2118,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,  1866,    -1,  2476,    -1,  2098,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1479,    -1,  1850,
      -1,    -1,    -1,    -1,  1886,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1866,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,  1511,
      -1,    -1,    -1,  1915,    -1,  1886,    -1,  2527,  1056,    -1,
    1922,    -1,   244,   245,   246,   247,   248,   249,    -1,  2194,
     252,   253,  2197,  2198,  2199,  2200,    -1,  1939,    -1,  2204,
    2205,    -1,  2207,    -1,  1915,  2210,    -1,    -1,    -1,  2214,
      -1,  1922,    -1,  2218,    -1,    -1,    -1,    -1,    36,  2224,
      -1,   466,   467,    -1,    -1,    -1,    -1,    -1,  1939,    -1,
      -1,  2181,    -1,    -1,    -1,    -1,    -1,    55,  2243,    -1,
    2590,    -1,    -1,  2248,  2214,    -1,    -1,  2252,  2218,    -1,
      -1,    -1,    -1,    -1,    -1,  2260,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2241,  2242,  2623,    -1,    -1,    -1,    -1,    -1,    -1,
    2285,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,    -1,
      -1,    -1,    -1,    -1,   356,   357,   114,    -1,    -1,    -1,
      -1,    -1,  1180,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2055,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1201,    -1,    -1,  1204,    -1,    -1,  1207,
      -1,    -1,    -1,    -1,    -1,    -1,  1214,  1215,  1216,    -1,
    2290,    -1,    -1,    -1,  2055,    -1,  2351,    -1,    -1,    -1,
    1228,    -1,  2357,   171,    -1,    -1,  1234,  1235,  1236,  1237,
      -1,    -1,    -1,  2368,  1242,  1243,    -1,    -1,    -1,  1247,
    2320,    -1,    -1,  1251,    -1,   193,  1254,  1255,  1256,  1257,
    1258,  1259,  1260,  1261,  1262,    -1,    -1,  1265,  2358,    -1,
      -1,    -1,  1270,    -1,    -1,  1273,    -1,  1275,    -1,  1277,
      -1,    -1,    -1,    -1,   466,   467,  2411,  2412,    -1,    -1,
    2415,    -1,    -1,  2418,    -1,  2420,    -1,    -1,    -1,    -1,
    2425,  1299,    -1,  2428,   242,  2430,  2376,    -1,  2433,    -1,
      -1,    -1,   250,    -1,    -1,    -1,  2386,    -1,    -1,  2181,
      -1,    -1,  2447,    -1,   262,    -1,   264,    -1,  1326,  1327,
    2420,    -1,    -1,    -1,    -1,  2425,    -1,    -1,  2428,    -1,
      -1,    -1,  2467,  2468,    -1,    -1,    -1,    -1,  1810,    -1,
    2181,  2476,    -1,    -1,    -1,   293,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   108,   109,    -1,    -1,    -1,    -1,  2502,  2503,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2512,  1850,    -1,
    2515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     338,    -1,  2527,    -1,  1866,  2530,    -1,  1405,    -1,    -1,
    1408,  1409,    -1,  1411,    -1,    -1,    -1,    -1,    -1,    -1,
    2510,    -1,   360,    -1,  1886,  2550,    -1,    -1,  2290,    -1,
       8,  2501,    -1,    11,    -1,    -1,    -1,    -1,  2563,    -1,
    1438,  2531,   380,  2568,   382,   182,   183,   385,    -1,    -1,
      -1,    -1,  2577,  1915,    -1,    -1,  2581,    -1,  2320,  2290,
    1922,    -1,    -1,    41,    -1,  2590,    -1,  2537,    -1,    -1,
      48,    -1,    -1,  2563,    -1,    -1,    -1,  1939,    -1,    -1,
    1478,  2571,    -1,    -1,    -1,    -1,    -1,  2612,    -1,  2320,
      -1,    -1,    -1,    -1,    -1,    73,    -1,  2567,  2623,    -1,
    2570,    -1,    -1,    -1,    -1,    -1,    -1,   244,   245,   246,
     247,   248,   249,    -1,  2376,   252,   253,    -1,    -1,    -1,
    1518,    -1,    -1,    -1,  2386,  1523,  2651,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2624,  2660,    -1,   802,    -1,  2664,
      -1,    -1,    -1,  2668,    -1,  2376,    -1,    -1,   486,    -1,
      -1,    -1,    -1,    -1,    -1,  2386,    -1,    -1,    -1,  2684,
    2685,  2686,  2687,    -1,   142,    -1,    -1,  1565,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   841,    -1,    -1,    -1,
      -1,    -1,    -1,  1581,    -1,  1583,  1584,    -1,    -1,    -1,
    2680,    -1,  1590,  2055,   172,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2728,    -1,    -1,    -1,    -1,   186,    -1,
      -1,    -1,  2737,   191,  2739,    -1,    -1,    -1,    -1,   356,
     357,     0,    -1,  2748,    -1,    -1,  1624,    -1,    -1,  1627,
      -1,  1629,    -1,    -1,    -1,    -1,    -1,  2762,    -1,  2501,
      19,     0,    -1,  2768,    -1,    -1,    -1,    -1,   226,    -1,
      29,    -1,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2786,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
    2501,  2761,    -1,    -1,    -1,  2537,    -1,    56,    -1,    -1,
      -1,    -1,  2752,   948,    -1,    -1,    -1,    -1,    -1,    68,
     955,    -1,  1690,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      79,    -1,    -1,   281,    -1,  2567,  2537,  1705,  2570,    -1,
       0,    90,    -1,    92,    -1,    -1,    -1,    -1,    -1,  2181,
      -1,    -1,    -1,    -1,    -1,  1723,    -1,    -1,    -1,   466,
     467,   110,    -1,    92,    -1,    -1,  2567,    -1,    -1,  2570,
      -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,   486,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,   140,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,   150,   151,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1781,   163,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,   157,    -1,
      -1,    -1,    92,   162,    -1,    -1,    -1,    -1,   167,    -1,
      -1,   190,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,
     179,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
     229,    -1,    -1,    -1,   144,    -1,    -1,    -1,  2320,    -1,
      -1,    -1,    -1,    -1,    -1,  1863,    -1,   157,   227,    -1,
      -1,    -1,   162,    -1,    -1,  1873,    -1,   167,    -1,  1877,
      -1,    -1,  1880,    -1,    -1,    -1,   176,    -1,    -1,   179,
    2752,    -1,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,  1906,  1907,
      -1,    -1,    -1,  1178,  2376,    -1,    -1,   276,   208,    -1,
     279,  2752,    -1,    -1,  2386,    -1,   285,   306,    -1,  1927,
     309,    -1,  1930,    -1,  1932,  1200,    -1,   227,    -1,    -1,
    1205,    -1,  1940,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1948,  1949,  1217,  1218,  1219,    -1,  1221,    -1,   337,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   345,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1977,
     359,   340,    -1,    -1,    -1,    -1,   276,   366,  1986,   279,
      -1,   370,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,
      -1,   380,    -1,    -1,  2002,    -1,    -1,  1272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,  2501,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,  1313,    -1,
     340,   430,    -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,
    1325,    -1,   421,    -1,    -1,  1330,    -1,    -1,    -1,   448,
     429,    -1,    -1,    -1,    41,  2537,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,   445,    -1,   447,   448,
      -1,    -1,    -1,   472,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,  2567,    73,   486,  2570,    -1,
     489,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   484,    -1,    -1,   487,   488,
     489,   421,    -1,    -1,  2132,    -1,    -1,    -1,     3,   429,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,   445,    -1,   447,   448,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    36,    -1,    -1,    -1,   142,    41,  2175,  2176,    -1,
      -1,    -1,  2180,    48,    -1,    -1,    -1,  2185,    -1,    -1,
    2188,  2189,    -1,    -1,   484,  2193,    -1,   487,   488,   489,
      -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
      -1,    -1,     8,    -1,   191,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2239,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,  1521,    -1,    -1,   226,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1544,
      -1,    -1,    -1,  2281,    -1,    -1,    -1,    73,    -1,    -1,
    2752,    -1,    -1,    -1,    -1,    -1,  1561,    -1,  1563,  1564,
      -1,  1566,    -1,  1568,    -1,    -1,    -1,   172,  1573,    -1,
      -1,    -1,    -1,    -1,   281,  1580,    -1,    -1,    -1,    -1,
    1585,   186,    -1,  1588,    -1,    -1,   191,  1592,    -1,    -1,
      -1,  1596,  1597,  1598,  1599,    -1,    -1,    -1,    -1,    -1,
    1605,  1606,    -1,  1608,  1609,    -1,    -1,   212,   213,    -1,
      -1,    -1,    -1,    -1,    -1,  1620,    -1,    -1,  1623,    -1,
      -1,   226,    -1,    -1,    -1,    -1,  1631,  1632,  1633,  1634,
    1635,  1636,  1637,  1638,  1639,  1640,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1648,    -1,    -1,   172,  1652,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    -1,  2395,  2396,   264,
     186,  2399,   267,    -1,   371,   191,    -1,    -1,  1673,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,
      -1,    41,    -1,    -1,    -1,    -1,   212,   213,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2435,  2436,    -1,
     226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2449,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,
      -1,   267,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,   281,    -1,    -1,   284,    -1,
      -1,    -1,    -1,   470,    -1,    -1,   371,    -1,    -1,    -1,
     477,   478,   479,   480,   481,   482,    -1,    41,    -1,  1784,
    1785,  1786,   142,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,    73,
      -1,    -1,   172,    -1,  1819,    -1,    -1,    -1,    -1,    -1,
      33,  2559,    -1,    -1,    -1,    -1,   186,    -1,    41,    -1,
      -1,   191,    -1,  2571,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2582,   371,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1862,    -1,  2597,
      73,    -1,    -1,  1868,    -1,   470,   226,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,  1883,  1884,
    1885,    -1,  1887,  1888,  1889,  1890,    -1,    -1,  1893,  1894,
    1895,  1896,  1897,  1898,  1899,  1900,  1901,  1902,  1903,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1924,
      -1,   281,   186,  1928,  1929,    -1,    -1,   191,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2673,    -1,  1942,  1943,  1944,
    1945,    -1,  1947,    -1,   470,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,    -1,    -1,   172,
      -1,    -1,   226,    -1,   490,    -1,  2704,    -1,    -1,    -1,
      -1,    -1,    -1,   186,    -1,    -1,    -1,    -1,   191,     8,
      -1,    -1,    11,    -1,    -1,  2723,  2724,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,
     213,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,   371,    41,   226,  2019,    -1,    -1,   281,    -1,    48,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,  2770,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      33,   264,    -1,    -1,   267,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,   281,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    -1,    -1,  2832,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,
     470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,    -1,    -1,    -1,    -1,    -1,  2133,    -1,
      -1,    -1,  2137,  2138,    -1,  2140,    -1,    -1,  2143,  2144,
    2145,  2146,    -1,   172,    -1,  2150,  2151,  2152,  2153,  2154,
    2155,  2156,  2157,  2158,  2159,  2160,  2161,   186,   371,    -1,
      -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,  2174,
      -1,    -1,  2177,    -1,  2179,    -1,    -1,    -1,  2183,    -1,
      -1,  2186,  2187,   212,   213,  2190,  2191,    -1,    -1,   172,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,
      -1,    -1,    -1,   186,    -1,    -1,   470,    -1,   191,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2231,    -1,    -1,   212,
     213,    -1,    -1,  2238,    -1,   264,    -1,    -1,   267,    -1,
      -1,    -1,    -1,   226,    -1,    -1,  2251,    -1,    -1,    -1,
      -1,    -1,   281,    -1,    -1,   284,    -1,   470,    -1,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,   487,    -1,    -1,    -1,    -1,    -1,
      -1,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2379,    -1,    -1,    -1,  2383,    -1,
      -1,    -1,    -1,    -1,  2389,  2390,  2391,    -1,   371,  2394,
      -1,    -1,  2397,  2398,    -1,    -1,    -1,  2402,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,   487,    -1,
      -1,    -1,    -1,    -1,  2469,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2487,    -1,    -1,    -1,    -1,   470,    -1,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,   487,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2535,  2536,    -1,    -1,    -1,  2540,  2541,  2542,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2575,  2576,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2588,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2600,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
    2645,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,  2663,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,  2682,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,  2696,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,   129,  2759,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,  2773,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,   472,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,   472,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,   222,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,   492,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,     3,     4,     5,     6,     7,
     486,     9,    10,    -1,    -1,   491,   492,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,
      -1,    -1,    -1,   491,   492,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,
      -1,    -1,    -1,   491,   492,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,    -1,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,
      -1,    -1,    -1,   491,   492,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,   168,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,    -1,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   487,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,   280,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,     3,   472,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   486,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,   280,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   486,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
     439,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,   279,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,    -1,
       3,    -1,    -1,    -1,    -1,    -1,   477,   478,   479,    -1,
      -1,    -1,    -1,    -1,    -1,   486,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,   394,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,     3,   472,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   486,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,     3,   472,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   486,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,    -1,     3,   472,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   486,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   486,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,     3,
       4,     5,    -1,    -1,     8,     9,    -1,    -1,    -1,    -1,
      -1,   486,    16,    17,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    -1,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    -1,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,    -1,   150,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,    -1,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,    -1,   288,   289,   290,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,    -1,   410,    -1,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,   467,   468,   469,    -1,     3,    -1,   473,
     474,   475,     8,   477,   478,   479,   480,   481,   482,    -1,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,     8,    -1,    -1,
      11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,
      41,    -1,    -1,     8,    -1,    -1,    11,    48,    -1,    -1,
      33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,    -1,
      -1,     8,    73,    -1,    11,    -1,    41,    -1,    -1,    16,
      17,    18,    -1,    48,    -1,    -1,    -1,    -1,    -1,     8,
      73,    -1,    11,    -1,    -1,    -1,    33,    16,    17,    18,
      -1,    -1,    -1,    -1,    41,    -1,    -1,     8,    73,    -1,
      11,    48,    -1,    -1,    33,    16,    17,    18,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    33,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   172,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,   172,
     191,    41,    -1,    -1,     8,    -1,    -1,    11,    48,    -1,
      -1,    -1,    -1,   186,    -1,    -1,    -1,   172,   191,    -1,
      -1,   212,   213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   186,    -1,    73,    -1,   226,   191,    41,    -1,   212,
     213,    -1,    -1,    -1,    48,   172,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   226,    -1,    -1,    -1,   212,   213,   186,
      -1,    -1,    -1,   172,   191,    -1,    -1,    -1,    -1,    73,
      -1,   226,    -1,   264,    -1,    -1,   267,   186,    -1,    -1,
      -1,   172,   191,    -1,    -1,   212,   213,    -1,    -1,    -1,
     281,   264,    -1,   284,   267,   186,    -1,    -1,    -1,   226,
     191,    -1,   142,   212,   213,    -1,    -1,    -1,   281,   264,
      -1,   284,   267,    -1,    -1,    -1,    -1,   226,    -1,    -1,
      -1,   212,   213,    -1,    -1,    -1,   281,    -1,    -1,   284,
      -1,    -1,   172,    -1,    -1,   226,    -1,   264,   142,    -1,
     267,    -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,
      -1,   191,    -1,    -1,   281,   264,    -1,   284,   267,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,   281,   264,    -1,   284,   267,    -1,    -1,    -1,
     371,    -1,   186,    -1,    -1,    -1,   226,   191,    -1,    -1,
     281,    -1,    -1,   284,    -1,    -1,    -1,    -1,   371,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,
      -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,   281,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,   371,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,   470,
     371,    -1,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,    -1,    73,    -1,    -1,   487,   470,    -1,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,   487,   470,    -1,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,    -1,    -1,
      -1,   371,   487,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
     487,   470,    -1,    -1,   473,   474,   475,   371,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,   487,   470,
      -1,    -1,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   172,    -1,     8,    21,   487,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,   186,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
     470,    -1,   212,   213,    48,    -1,    -1,   477,   478,   479,
     480,   481,   482,    -1,    -1,    -1,   226,    -1,    74,    23,
      -1,    -1,    -1,    -1,    -1,    29,    -1,    -1,    -1,    73,
      -1,    -1,    36,    89,    -1,    -1,   470,    -1,    -1,    -1,
      -1,    -1,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,    55,    -1,    -1,   264,    -1,    -1,   267,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,    -1,
      -1,   105,    -1,    -1,    -1,    -1,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,   186,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,   212,   213,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   237,   226,    -1,    -1,   241,    -1,    -1,    -1,   193,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,   242,    -1,
     284,    -1,    -1,    -1,    -1,    -1,   250,    -1,   304,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
     470,    -1,   318,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,    -1,    -1,    -1,    -1,   487,    -1,   283,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,    -1,    -1,   349,    -1,    -1,   352,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   360,    -1,    -1,   363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   382,   371,    -1,   333,
      -1,    -1,    -1,   337,   338,    -1,    -1,    -1,   394,    -1,
      -1,    -1,    -1,    -1,    -1,   401,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   410,    -1,   360,    -1,    -1,    -1,
      -1,    -1,   366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   441,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   470,     3,   432,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
      -1,   167,    -1,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,   225,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,   264,   265,
     266,    -1,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   479,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,
     479,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,   279,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,     4,
       5,    -1,    -1,    -1,     9,   477,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,   279,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,     4,     5,    -1,    -1,
      -1,     9,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,     8,    -1,    -1,    11,    -1,    -1,   477,
     478,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    33,    16,
      17,    18,    37,    -1,    -1,    -1,    41,    -1,    -1,     8,
      -1,    -1,    11,    48,    -1,    -1,    33,    16,    17,    18,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    33,    -1,    -1,     8,    73,    -1,
      11,    -1,    41,    -1,    -1,    16,    17,    18,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,    -1,
      41,    -1,    -1,     8,    73,    -1,    11,    48,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,   123,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    73,    -1,
      -1,    -1,    -1,    -1,    -1,   162,    -1,    -1,    -1,    -1,
     167,   186,    -1,    -1,    -1,   172,   191,     8,    -1,    -1,
      11,    -1,   161,    -1,    -1,    16,    17,    18,    -1,   186,
      -1,    -1,    -1,   172,   191,    -1,    -1,   212,   213,    -1,
      -1,    -1,    33,    -1,    -1,    36,    -1,   186,    -1,    -1,
      41,   226,   191,    -1,    -1,   212,   213,    48,    -1,    -1,
      -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,
      -1,    -1,    -1,   212,   213,   186,    -1,    -1,    -1,    -1,
     191,    -1,    73,    -1,    -1,    -1,    -1,   226,    -1,   264,
      -1,    -1,   267,    -1,    -1,    -1,    -1,   172,    -1,    -1,
      -1,   212,   213,    -1,    -1,    -1,   281,   264,    -1,   284,
     267,   186,    -1,    -1,    -1,   226,   191,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   281,   264,    -1,   284,   267,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,   213,    -1,
      -1,    -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,
      -1,   226,    -1,   264,    -1,    -1,   267,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   307,    -1,
     281,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,
      -1,    -1,   267,    -1,    -1,   186,   371,    -1,    -1,    -1,
     191,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,
      -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,
      -1,   212,   213,    -1,    -1,    -1,    -1,   302,    -1,    -1,
      -1,    -1,   371,    -1,    -1,   226,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,   429,    -1,    -1,    16,    17,    18,
     371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   264,    33,    -1,   267,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
     281,    -1,    -1,   284,    -1,   470,   371,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,    -1,    -1,
      -1,    -1,    -1,   470,    73,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,
      -1,    -1,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,   470,    -1,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   167,    33,
      -1,    -1,    36,   172,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,   186,    -1,    -1,
       8,    -1,   191,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,    -1,   212,   213,    33,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,   226,    -1,     8,
      48,    -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,   470,
      -1,    -1,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,   264,    -1,    -1,   267,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,   281,    -1,    11,   284,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
       8,    48,   186,    11,    -1,    -1,    -1,   191,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    73,    -1,   212,   213,
      -1,    -1,    -1,    41,   172,    -1,    -1,    -1,    -1,    -1,
      48,    -1,   226,   142,    -1,    -1,    -1,    -1,   186,    -1,
      -1,    -1,   371,   191,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    73,    16,    17,    18,    -1,
      -1,    -1,    -1,   172,   212,   213,    -1,    -1,    -1,    -1,
     264,    -1,    -1,   267,    -1,    -1,    -1,   186,   226,    -1,
      -1,    41,   191,    -1,    -1,    -1,    -1,   281,    48,    23,
     284,    -1,    -1,    -1,    -1,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,   172,   264,   226,    -1,   267,
      -1,    55,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
      -1,    -1,    -1,   281,   191,    -1,   284,    -1,    -1,    -1,
      -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   172,   212,   213,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,   226,
      -1,   105,   281,   191,    -1,    -1,    -1,   371,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,   264,   226,    -1,
     267,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   371,   281,    -1,   186,   284,    -1,    -1,
      -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,   267,
      -1,    -1,   212,   213,   402,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   371,   281,    -1,    -1,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   264,    -1,    -1,   267,   242,    -1,
      -1,    -1,    -1,    -1,   371,    -1,   250,    -1,    -1,    -1,
      -1,   281,   470,    -1,    -1,   473,   474,   475,   262,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,
      -1,    -1,    -1,   337,   338,    -1,    -1,    -1,    -1,    -1,
      -1,   371,    -1,   470,    -1,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   360,    -1,    -1,    -1,
      -1,    -1,   366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,
      -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   432,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,     5,
     470,    -1,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
      -1,   167,    -1,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,   225,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,   264,   265,
     266,    -1,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,    -1,   167,    -1,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,   264,   265,   266,    -1,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
      -1,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,    -1,   167,    -1,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    -1,
      -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    -1,    -1,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,   164,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
     164,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,   226,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,   280,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,   280,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,     4,
      -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,    -1,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    -1,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,    -1,   150,   151,   152,   153,    -1,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,    -1,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,    -1,   265,
     266,   267,   268,    -1,    -1,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,    -1,   288,   289,   290,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,    -1,
     306,   307,    -1,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,    -1,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,    -1,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     466,   467,   468,   469,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,    -1,   150,   151,   152,   153,    -1,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
      -1,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,    -1,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,    -1,    -1,   265,   266,
     267,   268,    -1,    -1,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
      -1,   288,   289,   290,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,    -1,   306,
     307,    -1,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
      -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,    -1,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,    -1,   410,    -1,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,    -1,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
     467,   468,   469,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,    -1,   150,   151,   152,   153,    -1,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,    -1,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,    -1,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,    -1,
     265,   266,   267,   268,    -1,    -1,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,    -1,   288,   289,   290,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
      -1,   306,   307,    -1,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,    -1,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,    -1,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
      -1,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   466,   467,   468,   469
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    90,
      92,   110,   124,   134,   140,   148,   150,   151,   163,   190,
     229,   306,   309,   337,   345,   359,   366,   370,   380,   394,
     430,   435,   448,   472,   486,   495,   496,   497,   498,   509,
     510,   512,   516,   530,   531,   533,   535,   542,   544,   590,
     596,   599,   600,   617,   618,   619,   620,   621,   622,   666,
     795,   798,   801,   808,   809,   810,   811,   812,   819,   823,
     829,   831,   836,   840,   841,   844,   845,   847,   848,   850,
     407,   451,   543,   194,   352,   360,   394,   441,   543,     3,
      19,    20,    21,    22,    23,    24,    25,    26,    28,    29,
      30,    38,    39,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    54,    55,    56,    57,    58,
      59,    62,    63,    64,    65,    66,    68,    69,    70,    71,
      72,    74,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    86,    87,    88,    89,    90,    91,    93,    94,    95,
      96,   100,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   115,   117,   118,   119,   120,   121,   122,   124,
     125,   126,   127,   128,   131,   132,   133,   134,   135,   137,
     138,   139,   141,   142,   143,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   156,   158,   159,   160,   161,
     163,   165,   166,   168,   169,   170,   171,   172,   173,   175,
     177,   178,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   192,   193,   194,   195,   196,   197,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   209,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   223,
     224,   225,   226,   228,   229,   230,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   265,   266,   267,
     268,   270,   271,   272,   273,   274,   275,   277,   278,   281,
     282,   283,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   360,   361,   362,   363,   364,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     392,   393,   395,   396,   397,   398,   399,   400,   401,   403,
     404,   407,   408,   409,   410,   411,   413,   414,   415,   416,
     417,   418,   419,   420,   423,   424,   425,   426,   427,   430,
     431,   432,   433,   434,   435,   436,   438,   439,   440,   441,
     442,   443,   446,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   722,   780,   784,   787,   853,   854,
     855,   543,    50,   486,   612,   169,   173,   230,   237,   284,
     352,   398,   400,   422,   425,   588,   597,   807,     3,    27,
     238,   309,   388,   778,   784,   853,    21,    74,    89,   143,
     152,   164,   169,   194,   237,   241,   304,   318,   349,   352,
     360,   363,   382,   394,   401,   410,   441,   591,   592,   595,
     543,   778,    92,   439,   486,   512,   599,   617,   815,   819,
     836,   850,   107,    68,   107,     5,   783,   830,   784,   778,
      27,   403,   407,   784,   842,   843,   846,   543,    27,   129,
     629,   630,   230,   352,   364,   403,   824,   825,   846,   543,
       5,   280,   677,   776,   784,   785,   168,   486,   833,   486,
     325,   623,   624,   778,   623,   618,   619,   622,     0,   489,
     119,   204,   427,   144,   208,   285,   421,   631,   632,   618,
     620,   621,   490,   439,   813,    27,   403,   407,   435,   617,
     846,   185,   776,   778,   185,   776,   185,   677,   185,   776,
     486,   484,   488,   767,   769,   512,   599,   617,   797,   836,
     776,   398,   400,   398,   400,   335,   185,   784,   325,   360,
     394,   441,   776,   194,    27,   778,   243,   410,   106,   394,
     441,   355,   185,   593,   784,   789,   185,   777,   778,   185,
     778,   486,   534,   588,   815,     3,    48,    49,    51,    52,
      64,    65,    72,   111,   112,   149,   154,   160,   177,   201,
     206,   207,   209,   238,   257,   259,   263,   270,   272,   287,
     291,   305,   308,   322,   347,   367,   374,   388,   390,   403,
     404,   409,   411,   415,   435,   436,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   816,   818,   819,
     821,   822,   853,   857,   813,   783,   783,   475,   486,   486,
     796,   469,   214,   488,   279,     4,     6,     7,     8,     9,
      10,    35,    49,    51,    52,    60,    61,    64,    65,    72,
      74,    97,    98,    99,   100,   101,   102,   103,   111,   112,
     114,   133,   149,   154,   155,   160,   206,   207,   209,   231,
     232,   257,   259,   264,   269,   270,   272,   281,   291,   305,
     322,   347,   365,   374,   390,   403,   404,   409,   411,   412,
     415,   428,   436,   470,   477,   478,   479,   486,   491,   492,
     618,   692,   695,   698,   699,   700,   702,   703,   704,   705,
     707,   708,   719,   721,   722,   723,   725,   738,   739,   743,
     761,   766,   773,   774,   780,   781,   782,   783,   784,   772,
     773,   824,   783,   824,   469,   167,   405,   475,   486,   776,
     479,   769,     3,   166,   168,   439,   819,   832,   834,   166,
     835,   719,   747,   623,   490,   486,   791,   487,   487,   497,
     167,   210,   677,   837,    27,   129,   628,   628,    54,   628,
     157,   162,   227,   276,   637,   639,   640,   659,   661,   662,
     663,   631,   632,   486,   776,   469,   214,   149,    23,    29,
     134,   283,   333,   337,   366,   432,   503,   506,   507,   333,
     149,    36,    55,   105,   193,   242,   250,   262,   293,   333,
     338,   360,   366,   380,   506,   536,   539,   149,   333,   366,
     506,   149,   333,   366,   506,     3,    27,    44,    50,    74,
      81,    93,   100,   129,   166,   168,   172,   186,   200,   212,
     213,   215,   224,   226,   238,   258,   267,   288,   290,   343,
     371,   388,   396,   415,   437,   439,   479,   487,   719,   748,
     749,   786,   792,   853,   858,   719,   768,     3,    27,    31,
      32,    33,    34,    35,    36,    37,    40,    53,    60,    61,
      67,    73,    75,    85,    92,    97,    98,    99,   101,   102,
     103,   114,   116,   123,   129,   130,   136,   140,   144,   155,
     157,   162,   164,   167,   174,   176,   179,   191,   198,   208,
     210,   221,   222,   227,   231,   232,   264,   269,   276,   279,
     280,   284,   285,   302,   312,   327,   340,   359,   365,   376,
     391,   394,   402,   405,   406,   412,   421,   422,   428,   429,
     435,   437,   444,   445,   447,   448,   479,   779,   793,   853,
     857,   859,   767,   487,   486,   578,   588,   264,   799,   441,
     185,   776,   185,   776,   852,   776,   486,   598,    81,   804,
     452,    82,   126,   296,   399,   149,    58,   339,   490,   594,
     488,   790,   149,   490,   594,   149,   279,   747,   394,   487,
     490,     4,   155,   279,   412,   477,   478,   538,   541,   782,
     783,   814,   816,   817,   820,   815,   486,   607,   611,   538,
     820,   826,   828,   748,     3,    44,    49,    50,    51,    52,
      64,    65,    74,    81,    93,   100,   111,   112,   160,   166,
     168,   172,   186,   200,   206,   207,   209,   212,   213,   215,
     224,   226,   238,   257,   258,   259,   267,   272,   288,   290,
     322,   343,   347,   367,   371,   374,   388,   396,   403,   404,
     415,   436,   439,   688,   689,   691,   693,   695,   697,   699,
     700,   701,   703,   704,   707,   708,   750,   788,   853,   856,
      36,   225,   784,   486,   770,   484,   438,   706,   719,   765,
     486,   706,   706,   486,   162,   486,   486,   486,   694,   694,
     308,   618,   486,   486,   696,   486,   486,    64,    65,   706,
     719,   486,   694,   486,   486,   486,   486,   486,   450,   472,
     486,   709,   486,   709,   486,   486,   486,   719,   719,   719,
     618,   719,   747,     9,   770,   769,   783,   486,   486,   782,
     783,     3,     8,    11,    16,    17,    18,    33,    36,    41,
      48,    73,   172,   186,   191,   212,   213,   226,   264,   267,
     281,   284,   371,   470,   473,   474,   475,   477,   478,   479,
     480,   481,   482,   741,   742,   743,   745,   449,   726,   770,
      15,   290,   719,    15,   210,   490,   625,   486,   783,   770,
     769,   625,     3,   114,   230,   538,   708,   783,   827,    96,
     114,   828,   114,   828,   776,   487,   490,   813,   487,   490,
     624,   777,    36,   837,   514,   776,    36,   784,   366,   620,
     620,   633,   634,   719,   620,   159,   261,   653,   216,   262,
     321,   369,   427,    27,   648,   719,   477,   478,   649,   650,
     719,   721,   659,   660,   640,   639,   637,   638,   162,   662,
     274,   664,   637,   659,   747,   791,   225,   776,    67,    75,
      85,   164,   185,   312,   422,   559,   569,   584,   784,    75,
      85,   511,    85,   511,   486,   405,   486,   557,   236,   425,
     557,    85,   490,   405,   776,   691,   538,    54,   540,   538,
     538,   105,   242,   250,    54,   405,   448,   472,   537,   255,
     352,   537,   539,   677,    85,   405,   511,   352,   776,   405,
     352,   748,   748,   749,   487,   490,   631,   632,    13,    14,
     485,   493,   405,   577,   582,   784,   448,   610,   325,   441,
     149,    92,   531,   544,   800,   801,   848,   776,   264,   532,
     536,   264,   486,   578,    36,   578,   487,   748,    36,   185,
     572,   784,   805,   593,   789,   779,   488,   777,   778,   778,
     789,   487,   185,   776,   852,   815,   821,     4,   782,     4,
     782,   609,   616,   793,    50,    94,   120,   138,   142,   163,
     166,   180,   269,   277,   319,   613,   490,   487,   490,   486,
     691,   486,    35,   690,   108,   109,   182,   183,   244,   245,
     246,   247,   248,   249,   252,   253,   356,   357,   466,   467,
     486,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     487,   490,   694,   797,   747,   767,   747,   486,   444,   762,
     763,   719,   747,   486,   782,   782,   747,     3,   710,   711,
     712,   713,   714,   715,   716,   717,   751,   752,   783,   782,
     782,   782,   706,   706,   719,     8,    16,    17,    18,   473,
     474,   475,   477,   478,   479,   480,   481,   482,   741,   746,
     784,   719,   753,   477,   478,   486,   720,   721,   743,   755,
     766,   487,   747,   719,   747,   756,   403,   403,   782,   782,
     719,    53,   167,   222,   406,   719,   747,   759,   719,   487,
     490,   782,   719,   718,   718,   689,   719,   719,   719,   719,
       5,   793,   794,   403,    40,   391,   771,   789,   719,   719,
     486,   618,   760,   129,   155,   264,   269,   274,   412,   423,
     719,   269,   486,   719,   405,    48,   172,   186,   191,   226,
     371,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,    27,    34,   376,   740,   176,   158,   727,   719,   347,
     486,   739,   719,   173,   230,   394,   398,   400,   425,   626,
     776,   774,   167,   667,   748,   667,   486,   783,   487,   776,
     832,   776,   840,   719,   487,   486,   429,   839,   114,   292,
     486,   513,   617,    36,   784,   486,   518,   527,   529,   784,
     490,    37,   123,   429,   635,   347,   348,   477,   478,   650,
     652,   721,   369,   216,   280,   490,     4,   651,   782,   651,
     347,   348,   652,   775,   776,   268,   373,   665,   660,   638,
     487,   333,   506,   486,   185,   569,   778,   216,   264,   216,
     429,   486,   562,   689,   778,   784,   185,   778,   185,   784,
      23,   134,   366,   502,   505,   552,   567,   793,   778,   561,
     581,   793,   778,   503,   778,   333,   366,   506,   536,   538,
     789,   778,   538,   789,   778,   538,   333,   366,   506,   778,
     778,   778,   778,   333,   366,   506,   778,   778,   631,   631,
     631,   437,   749,   487,   719,   719,   719,   768,   317,   606,
     487,   490,   277,   167,   405,   601,   441,   776,   784,   588,
     486,   149,   149,   226,   559,   569,   573,   576,   585,   587,
     784,   448,   450,   564,   148,   617,   448,   806,   487,   719,
     264,   279,   594,   779,   594,   279,   594,   264,    36,   487,
     490,   479,   486,   538,   608,   820,    36,   605,   783,   605,
     264,   269,   319,   605,   605,   826,   750,    35,   690,   687,
     784,   484,   484,   782,   405,   405,   405,   405,   689,   487,
     485,   747,   719,   136,   763,   764,    36,   487,   719,   487,
     487,   487,   487,   167,   487,   487,   487,   490,   487,   488,
     302,   754,   487,   720,   720,   719,    11,    16,    17,    18,
     191,   212,   281,   473,   474,   475,   477,   478,   479,   480,
     481,   482,   743,   720,   487,   487,   162,   167,   757,   758,
     487,   469,   469,   487,   487,    36,   759,   747,   759,   759,
     167,   487,    36,   770,   719,   487,   487,   469,   720,   720,
     142,   747,   167,   129,   155,   269,   274,   412,   423,   486,
     142,   746,   719,   391,   771,   719,   760,   719,   405,   486,
     618,   486,   486,   289,   731,   398,   400,   398,   400,   776,
     394,   627,   627,   627,   221,   348,   486,   618,   668,   669,
     670,   677,   678,   722,   724,   725,   784,   445,   683,   631,
     683,   782,   718,   791,   797,   668,   445,   838,   435,   393,
     428,   522,   517,   526,   784,   279,   519,   784,   523,   529,
     490,   667,   475,   770,   634,   281,   741,   744,   471,   636,
       4,   782,   652,   280,   427,   649,   490,   235,   405,   719,
     264,   584,   486,   149,   486,   562,   194,   582,   545,   283,
     555,   545,    23,   134,   337,   338,   366,   499,   500,   501,
     507,   508,   149,   594,   149,   594,   552,   567,   552,   487,
     490,   548,   783,   487,   490,   475,   488,   405,   352,    85,
     405,   511,   352,   405,   405,   405,   352,   487,   487,   487,
     749,   485,   383,   384,   615,   783,   577,   606,   776,   578,
     799,   394,   582,   776,   776,   852,   776,   487,   490,   277,
     557,   277,   279,   556,   778,   448,   851,   557,    36,   149,
     776,   789,   149,   609,   603,   614,   820,   783,   783,   269,
     582,   479,   582,   783,   783,   487,   484,   487,   490,   689,
     782,   485,   782,   487,   711,   713,   714,   715,   714,   715,
     715,   487,   402,   719,   140,   689,   487,   719,   719,   746,
     719,   757,   689,   720,   720,   720,   720,   129,   264,   274,
     720,   720,   720,   720,   720,   720,   720,   720,   720,   720,
     719,   719,   758,   757,   709,   709,   689,   487,   487,   487,
     747,   689,   487,   718,   719,    33,    33,   719,   487,   719,
     167,   486,   750,   719,   487,   142,   720,   720,   142,   142,
     719,   719,   632,   445,   486,   732,   784,   627,   627,   627,
     627,   776,   776,   776,   618,   678,   167,   618,   669,   670,
      36,   671,   672,   784,   490,    93,   168,   200,   215,   224,
     258,   343,   674,   672,    36,   671,   673,   784,   472,   682,
     769,   719,   176,   654,   487,   654,   487,   487,   719,   340,
     521,   434,   487,   490,   770,    83,   521,   487,   490,   518,
     838,   719,   486,   636,   159,   220,   280,   776,   778,   487,
     149,   582,   569,   582,   545,   572,   487,   116,   198,   262,
     264,   568,   486,   579,   171,   114,   184,   264,   557,   537,
     106,   114,   171,   264,   382,   385,   539,   557,   366,   501,
     416,   778,   784,   505,   581,     3,    44,    50,    74,    81,
      93,   100,   166,   168,   172,   186,   200,   212,   213,   215,
     224,   226,   238,   258,   263,   267,   281,   288,   290,   343,
     367,   371,   388,   396,   415,   439,   477,   478,   538,   546,
     583,   689,   744,   783,   786,   853,   859,   793,   778,   778,
     778,   778,   778,   778,   778,   778,   778,   778,   631,   537,
     615,   486,   806,   185,   776,   487,   532,   486,    36,   566,
     564,   573,    79,   534,   106,   262,   617,   572,   429,   803,
     594,   852,   487,   490,   582,   782,   784,   485,   485,   719,
     487,   487,   758,   167,   129,   274,   486,   487,   487,   719,
     719,   719,   750,   487,   719,    33,    33,   719,   719,   142,
     487,   487,   719,   733,   784,   776,   776,   776,   776,   672,
     673,   486,   487,   784,   785,   396,   645,   646,   486,   669,
     215,   288,   675,   669,   675,   215,   674,   675,   215,   646,
     486,   784,   646,   486,   286,    54,   179,   658,   783,   658,
     783,   773,   617,   292,   617,   517,   279,   486,   515,   475,
     529,   521,   746,   545,   569,   487,   487,   448,   575,   117,
     187,   196,   116,   431,   552,   570,    67,    73,    85,   114,
     116,   171,   198,   264,   269,   312,   327,   422,   550,   551,
     563,    30,    54,   589,   185,   269,   538,   719,   589,   269,
     477,   478,   541,   784,   689,   594,   594,   238,   388,   786,
     790,   475,   405,   405,   487,   607,   429,   602,   604,   582,
      36,   264,   486,   806,   576,   148,   617,   146,   192,   556,
     119,   134,   311,   851,   106,   448,   849,   279,   784,   802,
     486,    36,   614,   485,   689,   720,   167,   486,   750,   487,
     719,   719,   719,   487,   298,   734,   679,   680,   724,   671,
     486,     4,     9,   641,   643,   644,   784,   777,   669,   279,
     429,   676,   669,   215,   669,   684,   685,   784,   486,   684,
     784,   486,   655,   656,   657,   719,   719,   447,   728,   728,
     522,    85,   486,   520,   528,   724,   784,   130,   719,   487,
     327,   575,   486,   565,   545,   487,   490,   486,   789,   778,
     720,   589,   117,   187,   116,   269,   216,   776,   575,   114,
      36,   149,    73,   686,   790,   481,   546,   778,   778,   537,
     121,   487,   617,   149,    36,   487,   778,   851,    27,    78,
      86,   115,   184,   195,   382,   385,   560,   560,   348,   348,
      59,    67,   230,   776,   528,   720,   750,   487,    54,   631,
     487,   490,    36,   681,   777,   301,   481,   301,   348,   481,
     486,   486,   487,   719,   486,   669,   676,   487,   490,   689,
     684,   487,   487,   490,   729,   730,   784,   429,   642,   642,
     434,   778,   719,   487,   490,    73,   524,   524,   265,   427,
     776,   545,   571,   574,   793,   552,   719,   264,   551,    36,
     575,   578,   184,   789,   429,   504,   481,   416,   607,   783,
     806,   849,   776,   617,   564,   534,    67,   282,    67,   803,
     487,   487,   747,   320,   348,   735,   682,   679,   486,   487,
     784,   641,   777,   685,   686,   487,   656,   490,    36,   350,
     617,   487,   683,   520,   789,   525,   789,   525,   366,   578,
     487,   490,   475,   487,   184,   240,   586,   486,   547,   719,
     416,    36,   486,   849,   556,   851,   282,   282,   486,   806,
      48,    96,   418,   719,   736,   737,   736,   487,   684,   487,
     490,   487,   487,   730,   732,   644,   524,   635,   635,   527,
     586,   574,   546,   262,   558,   547,   168,   297,   372,   279,
     553,   554,   580,   536,   617,   528,   683,   737,   347,   161,
     307,   161,   307,   487,     9,   334,   647,   525,   636,   636,
     683,   554,   196,   119,   427,   279,   580,   279,   553,   487,
     849,   487,    33,   487,   486,   635,   545,    58,   262,   339,
     366,   549,   549,   806,   737,     9,   636,    22,   114,   269,
     683,   487
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 457 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 473 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 485 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 38:
#line 527 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 39:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 48:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 49:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 50:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 51:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 52:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 53:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 54:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 55:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 56:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 57:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 86:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 88:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 89:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 90:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 91:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 92:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 94:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 95:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 97:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 115:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 116:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 117:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 118:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 120:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 121:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 122:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 123:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 124:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 125:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 126:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 127:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 128:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 129:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 130:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 131:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 132:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 133:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 134:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 135:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 137:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 138:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 139:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 140:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 141:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 142:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 143:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 144:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 151:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 152:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 153:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 154:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 155:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 163:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 165:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 166:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 170:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 171:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 174:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 175:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 176:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 177:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 178:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 181:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 183:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 194:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 195:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 197:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 206:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 209:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 210:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 211:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 213:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 216:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 217:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 219:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 220:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 221:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 222:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 223:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 224:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 225:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 227:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 228:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 237:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 238:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 240:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 242:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 243:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 244:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 245:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 246:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 247:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 248:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 249:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 250:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 252:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 253:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 254:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 255:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 256:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 257:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 258:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 261:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 262:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 263:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 264:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 265:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 269:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 270:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 272:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 273:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 276:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 277:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 278:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 279:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 280:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 281:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 282:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 283:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 284:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 286:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 287:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 288:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 289:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 293:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 294:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 295:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 296:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 298:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 300:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 303:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 304:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 305:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 308:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 310:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 311:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 312:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 313:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 314:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 320:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 321:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 322:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 323:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 324:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 326:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 331:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 333:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 334:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 335:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 336:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 337:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 343:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 344:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 345:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 346:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 347:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 348:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 349:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 350:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 351:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 352:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 353:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 354:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 355:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 356:
#line 86 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 357:
#line 87 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 358:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 359:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 360:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 361:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 362:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 363:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 364:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 365:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 366:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 367:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 368:
#line 110 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 369:
#line 111 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 370:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 371:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 372:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 373:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 376:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 377:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 378:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 379:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 380:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 381:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 382:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 383:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 384:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 385:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 386:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 387:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 388:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 389:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 390:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 391:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 392:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 393:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 394:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 395:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 396:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 397:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 398:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 399:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 400:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 401:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 402:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 403:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 404:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 405:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 407:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 408:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 409:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 410:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 411:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 413:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 414:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 415:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 416:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 417:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 419:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 420:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 421:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 422:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 423:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 424:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 425:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 426:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 429:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 430:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 431:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 433:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 434:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 435:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 436:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 437:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 438:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 439:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 440:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 441:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 442:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 443:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 444:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 445:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 446:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 447:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 448:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 449:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 450:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 451:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 452:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 453:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 454:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 455:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 456:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 457:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 458:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 459:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 460:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 461:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 462:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 463:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 464:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 465:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 466:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 467:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 468:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 469:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 470:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 471:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 472:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 473:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 474:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 475:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 476:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 477:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 478:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 479:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 480:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 481:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 482:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 483:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 484:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 485:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 486:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 487:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 488:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 489:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 490:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 491:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 492:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 493:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 494:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 495:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 496:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 497:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 498:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 499:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 500:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 501:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 502:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 503:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 504:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 505:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 506:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 507:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 508:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 509:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 510:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 511:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 512:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 513:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 514:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 515:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 516:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 517:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 518:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 519:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 520:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 521:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 522:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 523:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 524:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 525:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 526:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 527:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 528:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 529:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 530:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 531:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 532:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 533:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 534:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 535:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 536:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 537:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 538:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 539:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 540:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 541:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 542:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 543:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 544:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 545:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 546:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 547:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 548:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 549:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 550:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 551:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 552:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 553:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 554:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 555:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 556:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 557:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 558:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 559:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 560:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 561:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 562:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 563:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 564:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 565:
#line 790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 566:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 567:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 568:
#line 846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 569:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 570:
#line 863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 571:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 572:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 573:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 574:
#line 920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 575:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 576:
#line 931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 577:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 578:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 579:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 580:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 581:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 582:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 583:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 584:
#line 973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 585:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 586:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 587:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 588:
#line 981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 589:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 590:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 591:
#line 998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 592:
#line 999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 593:
#line 1005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 594:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 595:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 596:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 597:
#line 1058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 598:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 1082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 600:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 601:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 602:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 603:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 605:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 606:
#line 1100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 607:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 608:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 609:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 610:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 611:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 613:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 614:
#line 1161 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 617:
#line 1168 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 618:
#line 1173 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 619:
#line 1180 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 620:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 621:
#line 1191 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 622:
#line 1196 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 623:
#line 1201 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->typmods = (yyvsp[(3) - (4)].list);
               (yyval.typnam)->location = (yylsp[(1) - (4)]);
               ;}
    break;

  case 624:
#line 1206 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->typmods = (yyvsp[(3) - (4)].list);
               (yyval.typnam)->location = (yylsp[(1) - (4)]);
			;}
    break;

  case 625:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 626:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 627:
#line 1219 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 628:
#line 1223 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 629:
#line 1224 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 630:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 631:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 632:
#line 1227 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 633:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 634:
#line 1234 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 635:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 636:
#line 1254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 637:
#line 1255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 638:
#line 1256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 639:
#line 1268 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 640:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 641:
#line 1282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 642:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 643:
#line 1294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 644:
#line 1299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 645:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 646:
#line 1309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 647:
#line 1314 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 648:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 649:
#line 1324 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 650:
#line 1330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 651:
#line 1336 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 652:
#line 1342 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 653:
#line 1349 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 654:
#line 1370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 655:
#line 1380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 656:
#line 1384 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 657:
#line 1392 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 658:
#line 1396 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 659:
#line 1404 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 660:
#line 1416 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 661:
#line 1437 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 662:
#line 1441 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 663:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 664:
#line 1451 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 665:
#line 1464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 666:
#line 1472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 667:
#line 1482 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 668:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 669:
#line 1486 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 670:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 671:
#line 1490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 672:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 673:
#line 1496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 674:
#line 1497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 675:
#line 1505 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 676:
#line 1514 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 677:
#line 1522 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 678:
#line 1531 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 679:
#line 1542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 680:
#line 1549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 681:
#line 1550 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 682:
#line 1551 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 699:
#line 1580 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 700:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 701:
#line 1584 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 702:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 703:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 704:
#line 1590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 705:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 706:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 707:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 708:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 709:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 710:
#line 1612 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 711:
#line 1619 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 712:
#line 1624 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 713:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 714:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 715:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 716:
#line 1669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 717:
#line 1671 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 718:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 719:
#line 1694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 720:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 721:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 722:
#line 1700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 723:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 724:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 725:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 726:
#line 1708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 727:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 728:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 729:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 730:
#line 1716 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 731:
#line 1718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 1723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 1725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 735:
#line 1727 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 736:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1732 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 739:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 740:
#line 1739 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 741:
#line 1744 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 742:
#line 1749 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 743:
#line 1756 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 744:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 745:
#line 1768 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 746:
#line 1773 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 747:
#line 1781 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 748:
#line 1786 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 749:
#line 1795 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 750:
#line 1803 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 751:
#line 1811 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 752:
#line 1819 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 753:
#line 1837 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 754:
#line 1845 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 755:
#line 1853 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 756:
#line 1861 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 757:
#line 1869 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 758:
#line 1876 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 759:
#line 1881 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 760:
#line 1889 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 761:
#line 1897 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 762:
#line 1913 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 763:
#line 1921 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 764:
#line 1929 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 765:
#line 1937 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 766:
#line 1945 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 767:
#line 1953 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 768:
#line 1961 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 769:
#line 1965 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 770:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 771:
#line 1973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 772:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 773:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 774:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 775:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 776:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 777:
#line 2029 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 778:
#line 2051 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 779:
#line 2062 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 780:
#line 2069 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 781:
#line 2082 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("list_value"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 782:
#line 2099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 783:
#line 2101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 784:
#line 2103 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 785:
#line 2105 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 786:
#line 2107 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 787:
#line 2109 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 788:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 789:
#line 2113 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 790:
#line 2115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 791:
#line 2117 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 792:
#line 2119 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 793:
#line 2121 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 794:
#line 2123 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 795:
#line 2125 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 796:
#line 2127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 797:
#line 2129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 798:
#line 2131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 799:
#line 2133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 800:
#line 2135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 801:
#line 2137 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 802:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 803:
#line 2145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 804:
#line 2149 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 805:
#line 2162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 806:
#line 2163 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 807:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 808:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 809:
#line 2184 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 810:
#line 2199 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 811:
#line 2211 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 812:
#line 2213 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 813:
#line 2225 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 814:
#line 2236 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 815:
#line 2260 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 816:
#line 2273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 817:
#line 2277 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 818:
#line 2283 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 819:
#line 2290 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 820:
#line 2297 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 821:
#line 2307 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 822:
#line 2314 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 823:
#line 2342 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 824:
#line 2377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 825:
#line 2387 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 826:
#line 2388 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 827:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 828:
#line 2402 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 829:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 830:
#line 2410 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 831:
#line 2414 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 832:
#line 2418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 833:
#line 2422 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 834:
#line 2426 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 835:
#line 2430 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 836:
#line 2434 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 837:
#line 2438 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 838:
#line 2442 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 839:
#line 2446 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 840:
#line 2450 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 841:
#line 2454 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 842:
#line 2458 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 843:
#line 2462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 844:
#line 2464 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 845:
#line 2466 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 846:
#line 2470 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 847:
#line 2479 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 848:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 849:
#line 2491 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 850:
#line 2506 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 851:
#line 2513 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 852:
#line 2517 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 853:
#line 2521 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 854:
#line 2525 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 855:
#line 2529 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 856:
#line 2542 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 857:
#line 2543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 858:
#line 2547 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 859:
#line 2548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 860:
#line 2556 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 861:
#line 2557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 862:
#line 2561 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 863:
#line 2563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 864:
#line 2568 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 865:
#line 2576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 866:
#line 2578 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 867:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 868:
#line 2596 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 869:
#line 2621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 870:
#line 2622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 871:
#line 2625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 872:
#line 2626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 873:
#line 2638 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 874:
#line 2656 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 875:
#line 2662 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 876:
#line 2672 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 877:
#line 2689 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 878:
#line 2734 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 879:
#line 2742 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 880:
#line 2750 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 881:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 882:
#line 2766 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 883:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 884:
#line 2787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 885:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 886:
#line 2791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 887:
#line 2794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 888:
#line 2795 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 889:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 890:
#line 2799 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 891:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 892:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 893:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 894:
#line 2805 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 895:
#line 2806 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 896:
#line 2807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 897:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 898:
#line 2809 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 899:
#line 2810 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 900:
#line 2811 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 901:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 902:
#line 2813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 903:
#line 2814 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 904:
#line 2818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 905:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 906:
#line 2825 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 907:
#line 2827 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 908:
#line 2832 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 909:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 910:
#line 2836 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 911:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 912:
#line 2840 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 913:
#line 2842 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 914:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 915:
#line 2846 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 916:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 917:
#line 2862 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 918:
#line 2866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 919:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 920:
#line 2877 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 921:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 922:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 923:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 924:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 925:
#line 2910 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 926:
#line 2911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 927:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 928:
#line 2919 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 929:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 930:
#line 2927 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 931:
#line 2928 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 932:
#line 2929 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 933:
#line 2930 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 934:
#line 2931 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 935:
#line 2932 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 936:
#line 2933 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 937:
#line 2934 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 938:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 939:
#line 2946 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 940:
#line 2950 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 941:
#line 2957 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 942:
#line 2963 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 943:
#line 2964 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 944:
#line 2981 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 945:
#line 2985 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 946:
#line 2990 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 947:
#line 2994 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 948:
#line 3009 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 949:
#line 3013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 950:
#line 3017 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 951:
#line 3020 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 952:
#line 3023 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 953:
#line 3024 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 954:
#line 3025 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 955:
#line 3029 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 956:
#line 3035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 957:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 958:
#line 3059 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 959:
#line 3060 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 960:
#line 3065 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 961:
#line 3075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 962:
#line 3076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 963:
#line 3079 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 964:
#line 3080 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 965:
#line 3084 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 966:
#line 3088 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 967:
#line 3095 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 968:
#line 3099 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 969:
#line 3103 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 970:
#line 3111 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 971:
#line 3121 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 972:
#line 3122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 973:
#line 3126 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 974:
#line 3127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 975:
#line 3131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 976:
#line 3132 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 979:
#line 3146 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 980:
#line 3147 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 981:
#line 3151 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 982:
#line 3152 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 983:
#line 3156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 984:
#line 3172 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 985:
#line 3180 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 986:
#line 3188 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 987:
#line 3209 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 988:
#line 3210 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 989:
#line 3222 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 990:
#line 3226 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 991:
#line 3253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 992:
#line 3255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 993:
#line 3259 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 994:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 995:
#line 3272 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 996:
#line 3275 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 997:
#line 3286 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 998:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 999:
#line 3294 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1000:
#line 3306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1001:
#line 3310 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1002:
#line 3319 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1003:
#line 3326 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 1004:
#line 3358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1005:
#line 3362 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1006:
#line 3366 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1007:
#line 3370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1008:
#line 3374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1009:
#line 3378 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1010:
#line 3382 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1011:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1012:
#line 3388 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1013:
#line 3404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1014:
#line 3405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1015:
#line 3406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1016:
#line 3409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1017:
#line 3410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1018:
#line 3416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1019:
#line 3417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1020:
#line 3418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1021:
#line 3421 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1022:
#line 3422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1023:
#line 3423 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1024:
#line 3426 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1025:
#line 3427 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1026:
#line 3428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1027:
#line 3431 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1028:
#line 3432 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1029:
#line 3436 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1030:
#line 3438 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1031:
#line 3442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1032:
#line 3443 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1034:
#line 3454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1035:
#line 3455 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1036:
#line 3456 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1037:
#line 3457 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1038:
#line 3460 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1039:
#line 3461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1040:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1041:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1042:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1047:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1048:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1049:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1050:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1055:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1056:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1057:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1058:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1059:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1060:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1061:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1062:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1063:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1064:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1065:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1066:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1067:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1068:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1069:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1070:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1071:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1072:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1073:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1074:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1075:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1076:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1077:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1078:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1079:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1080:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1081:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1082:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1083:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1084:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1085:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1086:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1092:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1093:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1094:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1095:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1096:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1097:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1098:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1099:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1100:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1101:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1102:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1103:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1104:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1105:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1106:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1107:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1108:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1109:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1110:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1111:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1112:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1113:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1114:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1115:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1116:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1117:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1118:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1119:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1120:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1121:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1122:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1123:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1124:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1125:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1126:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1127:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1128:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1129:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1130:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1131:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1132:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1133:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1134:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1135:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1136:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1137:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1138:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1139:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1140:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1141:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1142:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1143:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1144:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1145:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1146:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1147:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1148:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1149:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1150:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1151:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1152:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1153:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1154:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1155:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1156:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1157:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1158:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1159:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1160:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1161:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1162:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1163:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1164:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1165:
#line 11 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1166:
#line 17 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1167:
#line 23 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1168:
#line 29 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1171:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1172:
#line 41 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1173:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1174:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1175:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1176:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1177:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1178:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1179:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1180:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1181:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1182:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1183:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1184:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1185:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1186:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1187:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 23344 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 70 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, 0, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
