/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     POWER_OF = 271,
     LESS_EQUALS = 272,
     GREATER_EQUALS = 273,
     NOT_EQUALS = 274,
     ABORT_P = 275,
     ABSOLUTE_P = 276,
     ACCESS = 277,
     ACTION = 278,
     ADD_P = 279,
     ADMIN = 280,
     AFTER = 281,
     AGGREGATE = 282,
     ALIAS_P = 283,
     ALL = 284,
     ALSO = 285,
     ALTER = 286,
     ALWAYS = 287,
     ANALYSE = 288,
     ANALYZE = 289,
     AND = 290,
     ANY = 291,
     ARRAY = 292,
     AS = 293,
     ASC_P = 294,
     ASSERTION = 295,
     ASSIGNMENT = 296,
     ASYMMETRIC = 297,
     AT = 298,
     ATTACH = 299,
     ATTRIBUTE = 300,
     AUTHORIZATION = 301,
     BACKWARD = 302,
     BEFORE = 303,
     BEGIN_P = 304,
     BETWEEN = 305,
     BIGINT = 306,
     BINARY = 307,
     BIT = 308,
     BOOLEAN_P = 309,
     BOTH = 310,
     BY = 311,
     CACHE = 312,
     CALL_P = 313,
     CALLED = 314,
     CASCADE = 315,
     CASCADED = 316,
     CASE = 317,
     CAST = 318,
     CATALOG_P = 319,
     CHAIN = 320,
     CHAR_P = 321,
     CHARACTER = 322,
     CHARACTERISTICS = 323,
     CHECK_P = 324,
     CHECKPOINT = 325,
     CLASS = 326,
     CLOSE = 327,
     CLUSTER = 328,
     COALESCE = 329,
     COLLATE = 330,
     COLLATION = 331,
     COLUMN = 332,
     COLUMNS = 333,
     COMMENT = 334,
     COMMENTS = 335,
     COMMIT = 336,
     COMMITTED = 337,
     COMPRESSION = 338,
     CONCURRENTLY = 339,
     CONFIGURATION = 340,
     CONFLICT = 341,
     CONNECTION = 342,
     CONSTRAINT = 343,
     CONSTRAINTS = 344,
     CONTENT_P = 345,
     CONTINUE_P = 346,
     CONVERSION_P = 347,
     COPY = 348,
     COST = 349,
     CREATE_P = 350,
     CROSS = 351,
     CSV = 352,
     CUBE = 353,
     CURRENT_P = 354,
     CURRENT_CATALOG = 355,
     CURRENT_DATE = 356,
     CURRENT_ROLE = 357,
     CURRENT_SCHEMA = 358,
     CURRENT_TIME = 359,
     CURRENT_TIMESTAMP = 360,
     CURRENT_USER = 361,
     CURSOR = 362,
     CYCLE = 363,
     DATA_P = 364,
     DATABASE = 365,
     DAY_P = 366,
     DAYS_P = 367,
     DEALLOCATE = 368,
     DEC = 369,
     DECIMAL_P = 370,
     DECLARE = 371,
     DEFAULT = 372,
     DEFAULTS = 373,
     DEFERRABLE = 374,
     DEFERRED = 375,
     DEFINER = 376,
     DELETE_P = 377,
     DELIMITER = 378,
     DELIMITERS = 379,
     DEPENDS = 380,
     DESC_P = 381,
     DESCRIBE = 382,
     DETACH = 383,
     DICTIONARY = 384,
     DISABLE_P = 385,
     DISCARD = 386,
     DISTINCT = 387,
     DO = 388,
     DOCUMENT_P = 389,
     DOMAIN_P = 390,
     DOUBLE_P = 391,
     DROP = 392,
     EACH = 393,
     ELSE = 394,
     ENABLE_P = 395,
     ENCODING = 396,
     ENCRYPTED = 397,
     END_P = 398,
     ENUM_P = 399,
     ESCAPE = 400,
     EVENT = 401,
     EXCEPT = 402,
     EXCLUDE = 403,
     EXCLUDING = 404,
     EXCLUSIVE = 405,
     EXECUTE = 406,
     EXISTS = 407,
     EXPLAIN = 408,
     EXPORT_P = 409,
     EXPORT_STATE = 410,
     EXTENSION = 411,
     EXTERNAL = 412,
     EXTRACT = 413,
     FALSE_P = 414,
     FAMILY = 415,
     FETCH = 416,
     FILTER = 417,
     FIRST_P = 418,
     FLOAT_P = 419,
     FOLLOWING = 420,
     FOR = 421,
     FORCE = 422,
     FOREIGN = 423,
     FORWARD = 424,
     FREEZE = 425,
     FROM = 426,
     FULL = 427,
     FUNCTION = 428,
     FUNCTIONS = 429,
     GENERATED = 430,
     GLOB = 431,
     GLOBAL = 432,
     GRANT = 433,
     GRANTED = 434,
     GROUP_P = 435,
     GROUPING = 436,
     GROUPING_ID = 437,
     HANDLER = 438,
     HAVING = 439,
     HEADER_P = 440,
     HOLD = 441,
     HOUR_P = 442,
     HOURS_P = 443,
     IDENTITY_P = 444,
     IF_P = 445,
     IGNORE_P = 446,
     ILIKE = 447,
     IMMEDIATE = 448,
     IMMUTABLE = 449,
     IMPLICIT_P = 450,
     IMPORT_P = 451,
     IN_P = 452,
     INCLUDING = 453,
     INCREMENT = 454,
     INDEX = 455,
     INDEXES = 456,
     INHERIT = 457,
     INHERITS = 458,
     INITIALLY = 459,
     INLINE_P = 460,
     INNER_P = 461,
     INOUT = 462,
     INPUT_P = 463,
     INSENSITIVE = 464,
     INSERT = 465,
     INSTALL = 466,
     INSTEAD = 467,
     INT_P = 468,
     INTEGER = 469,
     INTERSECT = 470,
     INTERVAL = 471,
     INTO = 472,
     INVOKER = 473,
     IS = 474,
     ISNULL = 475,
     ISOLATION = 476,
     JOIN = 477,
     JSON = 478,
     KEY = 479,
     LABEL = 480,
     LANGUAGE = 481,
     LARGE_P = 482,
     LAST_P = 483,
     LATERAL_P = 484,
     LEADING = 485,
     LEAKPROOF = 486,
     LEFT = 487,
     LEVEL = 488,
     LIKE = 489,
     LIMIT = 490,
     LISTEN = 491,
     LOAD = 492,
     LOCAL = 493,
     LOCALTIME = 494,
     LOCALTIMESTAMP = 495,
     LOCATION = 496,
     LOCK_P = 497,
     LOCKED = 498,
     LOGGED = 499,
     MACRO = 500,
     MAP = 501,
     MAPPING = 502,
     MATCH = 503,
     MATERIALIZED = 504,
     MAXVALUE = 505,
     METHOD = 506,
     MICROSECOND_P = 507,
     MICROSECONDS_P = 508,
     MILLISECOND_P = 509,
     MILLISECONDS_P = 510,
     MINUTE_P = 511,
     MINUTES_P = 512,
     MINVALUE = 513,
     MODE = 514,
     MONTH_P = 515,
     MONTHS_P = 516,
     MOVE = 517,
     NAME_P = 518,
     NAMES = 519,
     NATIONAL = 520,
     NATURAL = 521,
     NCHAR = 522,
     NEW = 523,
     NEXT = 524,
     NO = 525,
     NONE = 526,
     NOT = 527,
     NOTHING = 528,
     NOTIFY = 529,
     NOTNULL = 530,
     NOWAIT = 531,
     NULL_P = 532,
     NULLIF = 533,
     NULLS_P = 534,
     NUMERIC = 535,
     OBJECT_P = 536,
     OF = 537,
     OFF = 538,
     OFFSET = 539,
     OIDS = 540,
     OLD = 541,
     ON = 542,
     ONLY = 543,
     OPERATOR = 544,
     OPTION = 545,
     OPTIONS = 546,
     OR = 547,
     ORDER = 548,
     ORDINALITY = 549,
     OUT_P = 550,
     OUTER_P = 551,
     OVER = 552,
     OVERLAPS = 553,
     OVERLAY = 554,
     OVERRIDING = 555,
     OWNED = 556,
     OWNER = 557,
     PARALLEL = 558,
     PARSER = 559,
     PARTIAL = 560,
     PARTITION = 561,
     PASSING = 562,
     PASSWORD = 563,
     PERCENT = 564,
     PLACING = 565,
     PLANS = 566,
     POLICY = 567,
     POSITION = 568,
     PRAGMA_P = 569,
     PRECEDING = 570,
     PRECISION = 571,
     PREPARE = 572,
     PREPARED = 573,
     PRESERVE = 574,
     PRIMARY = 575,
     PRIOR = 576,
     PRIVILEGES = 577,
     PROCEDURAL = 578,
     PROCEDURE = 579,
     PROGRAM = 580,
     PUBLICATION = 581,
     QUALIFY = 582,
     QUOTE = 583,
     RANGE = 584,
     READ_P = 585,
     REAL = 586,
     REASSIGN = 587,
     RECHECK = 588,
     RECURSIVE = 589,
     REF = 590,
     REFERENCES = 591,
     REFERENCING = 592,
     REFRESH = 593,
     REINDEX = 594,
     RELATIVE_P = 595,
     RELEASE = 596,
     RENAME = 597,
     REPEATABLE = 598,
     REPLACE = 599,
     REPLICA = 600,
     RESET = 601,
     RESPECT_P = 602,
     RESTART = 603,
     RESTRICT = 604,
     RETURNING = 605,
     RETURNS = 606,
     REVOKE = 607,
     RIGHT = 608,
     ROLE = 609,
     ROLLBACK = 610,
     ROLLUP = 611,
     ROW = 612,
     ROWS = 613,
     RULE = 614,
     SAMPLE = 615,
     SAVEPOINT = 616,
     SCHEMA = 617,
     SCHEMAS = 618,
     SCROLL = 619,
     SEARCH = 620,
     SECOND_P = 621,
     SECONDS_P = 622,
     SECURITY = 623,
     SELECT = 624,
     SEQUENCE = 625,
     SEQUENCES = 626,
     SERIALIZABLE = 627,
     SERVER = 628,
     SESSION = 629,
     SESSION_USER = 630,
     SET = 631,
     SETOF = 632,
     SETS = 633,
     SHARE = 634,
     SHOW = 635,
     SIMILAR = 636,
     SIMPLE = 637,
     SKIP = 638,
     SMALLINT = 639,
     SNAPSHOT = 640,
     SOME = 641,
     SQL_P = 642,
     STABLE = 643,
     STANDALONE_P = 644,
     START = 645,
     STATEMENT = 646,
     STATISTICS = 647,
     STDIN = 648,
     STDOUT = 649,
     STORAGE = 650,
     STRICT_P = 651,
     STRIP_P = 652,
     STRUCT = 653,
     SUBSCRIPTION = 654,
     SUBSTRING = 655,
     SUMMARIZE = 656,
     SYMMETRIC = 657,
     SYSID = 658,
     SYSTEM_P = 659,
     TABLE = 660,
     TABLES = 661,
     TABLESAMPLE = 662,
     TABLESPACE = 663,
     TEMP = 664,
     TEMPLATE = 665,
     TEMPORARY = 666,
     TEXT_P = 667,
     THEN = 668,
     TIME = 669,
     TIMESTAMP = 670,
     TO = 671,
     TRAILING = 672,
     TRANSACTION = 673,
     TRANSFORM = 674,
     TREAT = 675,
     TRIGGER = 676,
     TRIM = 677,
     TRUE_P = 678,
     TRUNCATE = 679,
     TRUSTED = 680,
     TRY_CAST = 681,
     TYPE_P = 682,
     TYPES_P = 683,
     UNBOUNDED = 684,
     UNCOMMITTED = 685,
     UNENCRYPTED = 686,
     UNION = 687,
     UNIQUE = 688,
     UNKNOWN = 689,
     UNLISTEN = 690,
     UNLOGGED = 691,
     UNTIL = 692,
     UPDATE = 693,
     USER = 694,
     USING = 695,
     VACUUM = 696,
     VALID = 697,
     VALIDATE = 698,
     VALIDATOR = 699,
     VALUE_P = 700,
     VALUES = 701,
     VARCHAR = 702,
     VARIADIC = 703,
     VARYING = 704,
     VERBOSE = 705,
     VERSION_P = 706,
     VIEW = 707,
     VIEWS = 708,
     VOLATILE = 709,
     WHEN = 710,
     WHERE = 711,
     WHITESPACE_P = 712,
     WINDOW = 713,
     WITH = 714,
     WITHIN = 715,
     WITHOUT = 716,
     WORK = 717,
     WRAPPER = 718,
     WRITE_P = 719,
     XML_P = 720,
     XMLATTRIBUTES = 721,
     XMLCONCAT = 722,
     XMLELEMENT = 723,
     XMLEXISTS = 724,
     XMLFOREST = 725,
     XMLNAMESPACES = 726,
     XMLPARSE = 727,
     XMLPI = 728,
     XMLROOT = 729,
     XMLSERIALIZE = 730,
     XMLTABLE = 731,
     YEAR_P = 732,
     YEARS_P = 733,
     YES_P = 734,
     ZONE = 735,
     NOT_LA = 736,
     NULLS_LA = 737,
     WITH_LA = 738,
     POSTFIXOP = 739,
     UMINUS = 740
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define POWER_OF 271
#define LESS_EQUALS 272
#define GREATER_EQUALS 273
#define NOT_EQUALS 274
#define ABORT_P 275
#define ABSOLUTE_P 276
#define ACCESS 277
#define ACTION 278
#define ADD_P 279
#define ADMIN 280
#define AFTER 281
#define AGGREGATE 282
#define ALIAS_P 283
#define ALL 284
#define ALSO 285
#define ALTER 286
#define ALWAYS 287
#define ANALYSE 288
#define ANALYZE 289
#define AND 290
#define ANY 291
#define ARRAY 292
#define AS 293
#define ASC_P 294
#define ASSERTION 295
#define ASSIGNMENT 296
#define ASYMMETRIC 297
#define AT 298
#define ATTACH 299
#define ATTRIBUTE 300
#define AUTHORIZATION 301
#define BACKWARD 302
#define BEFORE 303
#define BEGIN_P 304
#define BETWEEN 305
#define BIGINT 306
#define BINARY 307
#define BIT 308
#define BOOLEAN_P 309
#define BOTH 310
#define BY 311
#define CACHE 312
#define CALL_P 313
#define CALLED 314
#define CASCADE 315
#define CASCADED 316
#define CASE 317
#define CAST 318
#define CATALOG_P 319
#define CHAIN 320
#define CHAR_P 321
#define CHARACTER 322
#define CHARACTERISTICS 323
#define CHECK_P 324
#define CHECKPOINT 325
#define CLASS 326
#define CLOSE 327
#define CLUSTER 328
#define COALESCE 329
#define COLLATE 330
#define COLLATION 331
#define COLUMN 332
#define COLUMNS 333
#define COMMENT 334
#define COMMENTS 335
#define COMMIT 336
#define COMMITTED 337
#define COMPRESSION 338
#define CONCURRENTLY 339
#define CONFIGURATION 340
#define CONFLICT 341
#define CONNECTION 342
#define CONSTRAINT 343
#define CONSTRAINTS 344
#define CONTENT_P 345
#define CONTINUE_P 346
#define CONVERSION_P 347
#define COPY 348
#define COST 349
#define CREATE_P 350
#define CROSS 351
#define CSV 352
#define CUBE 353
#define CURRENT_P 354
#define CURRENT_CATALOG 355
#define CURRENT_DATE 356
#define CURRENT_ROLE 357
#define CURRENT_SCHEMA 358
#define CURRENT_TIME 359
#define CURRENT_TIMESTAMP 360
#define CURRENT_USER 361
#define CURSOR 362
#define CYCLE 363
#define DATA_P 364
#define DATABASE 365
#define DAY_P 366
#define DAYS_P 367
#define DEALLOCATE 368
#define DEC 369
#define DECIMAL_P 370
#define DECLARE 371
#define DEFAULT 372
#define DEFAULTS 373
#define DEFERRABLE 374
#define DEFERRED 375
#define DEFINER 376
#define DELETE_P 377
#define DELIMITER 378
#define DELIMITERS 379
#define DEPENDS 380
#define DESC_P 381
#define DESCRIBE 382
#define DETACH 383
#define DICTIONARY 384
#define DISABLE_P 385
#define DISCARD 386
#define DISTINCT 387
#define DO 388
#define DOCUMENT_P 389
#define DOMAIN_P 390
#define DOUBLE_P 391
#define DROP 392
#define EACH 393
#define ELSE 394
#define ENABLE_P 395
#define ENCODING 396
#define ENCRYPTED 397
#define END_P 398
#define ENUM_P 399
#define ESCAPE 400
#define EVENT 401
#define EXCEPT 402
#define EXCLUDE 403
#define EXCLUDING 404
#define EXCLUSIVE 405
#define EXECUTE 406
#define EXISTS 407
#define EXPLAIN 408
#define EXPORT_P 409
#define EXPORT_STATE 410
#define EXTENSION 411
#define EXTERNAL 412
#define EXTRACT 413
#define FALSE_P 414
#define FAMILY 415
#define FETCH 416
#define FILTER 417
#define FIRST_P 418
#define FLOAT_P 419
#define FOLLOWING 420
#define FOR 421
#define FORCE 422
#define FOREIGN 423
#define FORWARD 424
#define FREEZE 425
#define FROM 426
#define FULL 427
#define FUNCTION 428
#define FUNCTIONS 429
#define GENERATED 430
#define GLOB 431
#define GLOBAL 432
#define GRANT 433
#define GRANTED 434
#define GROUP_P 435
#define GROUPING 436
#define GROUPING_ID 437
#define HANDLER 438
#define HAVING 439
#define HEADER_P 440
#define HOLD 441
#define HOUR_P 442
#define HOURS_P 443
#define IDENTITY_P 444
#define IF_P 445
#define IGNORE_P 446
#define ILIKE 447
#define IMMEDIATE 448
#define IMMUTABLE 449
#define IMPLICIT_P 450
#define IMPORT_P 451
#define IN_P 452
#define INCLUDING 453
#define INCREMENT 454
#define INDEX 455
#define INDEXES 456
#define INHERIT 457
#define INHERITS 458
#define INITIALLY 459
#define INLINE_P 460
#define INNER_P 461
#define INOUT 462
#define INPUT_P 463
#define INSENSITIVE 464
#define INSERT 465
#define INSTALL 466
#define INSTEAD 467
#define INT_P 468
#define INTEGER 469
#define INTERSECT 470
#define INTERVAL 471
#define INTO 472
#define INVOKER 473
#define IS 474
#define ISNULL 475
#define ISOLATION 476
#define JOIN 477
#define JSON 478
#define KEY 479
#define LABEL 480
#define LANGUAGE 481
#define LARGE_P 482
#define LAST_P 483
#define LATERAL_P 484
#define LEADING 485
#define LEAKPROOF 486
#define LEFT 487
#define LEVEL 488
#define LIKE 489
#define LIMIT 490
#define LISTEN 491
#define LOAD 492
#define LOCAL 493
#define LOCALTIME 494
#define LOCALTIMESTAMP 495
#define LOCATION 496
#define LOCK_P 497
#define LOCKED 498
#define LOGGED 499
#define MACRO 500
#define MAP 501
#define MAPPING 502
#define MATCH 503
#define MATERIALIZED 504
#define MAXVALUE 505
#define METHOD 506
#define MICROSECOND_P 507
#define MICROSECONDS_P 508
#define MILLISECOND_P 509
#define MILLISECONDS_P 510
#define MINUTE_P 511
#define MINUTES_P 512
#define MINVALUE 513
#define MODE 514
#define MONTH_P 515
#define MONTHS_P 516
#define MOVE 517
#define NAME_P 518
#define NAMES 519
#define NATIONAL 520
#define NATURAL 521
#define NCHAR 522
#define NEW 523
#define NEXT 524
#define NO 525
#define NONE 526
#define NOT 527
#define NOTHING 528
#define NOTIFY 529
#define NOTNULL 530
#define NOWAIT 531
#define NULL_P 532
#define NULLIF 533
#define NULLS_P 534
#define NUMERIC 535
#define OBJECT_P 536
#define OF 537
#define OFF 538
#define OFFSET 539
#define OIDS 540
#define OLD 541
#define ON 542
#define ONLY 543
#define OPERATOR 544
#define OPTION 545
#define OPTIONS 546
#define OR 547
#define ORDER 548
#define ORDINALITY 549
#define OUT_P 550
#define OUTER_P 551
#define OVER 552
#define OVERLAPS 553
#define OVERLAY 554
#define OVERRIDING 555
#define OWNED 556
#define OWNER 557
#define PARALLEL 558
#define PARSER 559
#define PARTIAL 560
#define PARTITION 561
#define PASSING 562
#define PASSWORD 563
#define PERCENT 564
#define PLACING 565
#define PLANS 566
#define POLICY 567
#define POSITION 568
#define PRAGMA_P 569
#define PRECEDING 570
#define PRECISION 571
#define PREPARE 572
#define PREPARED 573
#define PRESERVE 574
#define PRIMARY 575
#define PRIOR 576
#define PRIVILEGES 577
#define PROCEDURAL 578
#define PROCEDURE 579
#define PROGRAM 580
#define PUBLICATION 581
#define QUALIFY 582
#define QUOTE 583
#define RANGE 584
#define READ_P 585
#define REAL 586
#define REASSIGN 587
#define RECHECK 588
#define RECURSIVE 589
#define REF 590
#define REFERENCES 591
#define REFERENCING 592
#define REFRESH 593
#define REINDEX 594
#define RELATIVE_P 595
#define RELEASE 596
#define RENAME 597
#define REPEATABLE 598
#define REPLACE 599
#define REPLICA 600
#define RESET 601
#define RESPECT_P 602
#define RESTART 603
#define RESTRICT 604
#define RETURNING 605
#define RETURNS 606
#define REVOKE 607
#define RIGHT 608
#define ROLE 609
#define ROLLBACK 610
#define ROLLUP 611
#define ROW 612
#define ROWS 613
#define RULE 614
#define SAMPLE 615
#define SAVEPOINT 616
#define SCHEMA 617
#define SCHEMAS 618
#define SCROLL 619
#define SEARCH 620
#define SECOND_P 621
#define SECONDS_P 622
#define SECURITY 623
#define SELECT 624
#define SEQUENCE 625
#define SEQUENCES 626
#define SERIALIZABLE 627
#define SERVER 628
#define SESSION 629
#define SESSION_USER 630
#define SET 631
#define SETOF 632
#define SETS 633
#define SHARE 634
#define SHOW 635
#define SIMILAR 636
#define SIMPLE 637
#define SKIP 638
#define SMALLINT 639
#define SNAPSHOT 640
#define SOME 641
#define SQL_P 642
#define STABLE 643
#define STANDALONE_P 644
#define START 645
#define STATEMENT 646
#define STATISTICS 647
#define STDIN 648
#define STDOUT 649
#define STORAGE 650
#define STRICT_P 651
#define STRIP_P 652
#define STRUCT 653
#define SUBSCRIPTION 654
#define SUBSTRING 655
#define SUMMARIZE 656
#define SYMMETRIC 657
#define SYSID 658
#define SYSTEM_P 659
#define TABLE 660
#define TABLES 661
#define TABLESAMPLE 662
#define TABLESPACE 663
#define TEMP 664
#define TEMPLATE 665
#define TEMPORARY 666
#define TEXT_P 667
#define THEN 668
#define TIME 669
#define TIMESTAMP 670
#define TO 671
#define TRAILING 672
#define TRANSACTION 673
#define TRANSFORM 674
#define TREAT 675
#define TRIGGER 676
#define TRIM 677
#define TRUE_P 678
#define TRUNCATE 679
#define TRUSTED 680
#define TRY_CAST 681
#define TYPE_P 682
#define TYPES_P 683
#define UNBOUNDED 684
#define UNCOMMITTED 685
#define UNENCRYPTED 686
#define UNION 687
#define UNIQUE 688
#define UNKNOWN 689
#define UNLISTEN 690
#define UNLOGGED 691
#define UNTIL 692
#define UPDATE 693
#define USER 694
#define USING 695
#define VACUUM 696
#define VALID 697
#define VALIDATE 698
#define VALIDATOR 699
#define VALUE_P 700
#define VALUES 701
#define VARCHAR 702
#define VARIADIC 703
#define VARYING 704
#define VERBOSE 705
#define VERSION_P 706
#define VIEW 707
#define VIEWS 708
#define VOLATILE 709
#define WHEN 710
#define WHERE 711
#define WHITESPACE_P 712
#define WINDOW 713
#define WITH 714
#define WITHIN 715
#define WITHOUT 716
#define WORK 717
#define WRAPPER 718
#define WRITE_P 719
#define XML_P 720
#define XMLATTRIBUTES 721
#define XMLCONCAT 722
#define XMLELEMENT 723
#define XMLEXISTS 724
#define XMLFOREST 725
#define XMLNAMESPACES 726
#define XMLPARSE 727
#define XMLPI 728
#define XMLROOT 729
#define XMLSERIALIZE 730
#define XMLTABLE 731
#define YEAR_P 732
#define YEARS_P 733
#define YES_P 734
#define ZONE 735
#define NOT_LA 736
#define NULLS_LA 737
#define WITH_LA 738
#define POSTFIXOP 739
#define UMINUS 740




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1284 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1309 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  597
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   54627

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  507
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  395
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1841
/* YYNRULES -- Number of states.  */
#define YYNSTATES  3031

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   740

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   504,     2,   492,     2,     2,
     497,   498,   490,   488,   501,   489,   499,   491,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   506,   500,
     484,   486,   485,   505,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   495,     2,   496,   493,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   502,     2,   503,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   487,
     494
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     352,   356,   359,   363,   370,   377,   386,   393,   402,   409,
     418,   425,   434,   443,   454,   463,   474,   476,   477,   485,
     487,   492,   497,   505,   508,   510,   514,   519,   523,   524,
     526,   527,   530,   534,   540,   549,   555,   556,   562,   568,
     576,   579,   580,   582,   584,   586,   590,   593,   594,   596,
     597,   599,   603,   605,   609,   611,   614,   616,   620,   623,
     632,   639,   641,   642,   644,   648,   651,   656,   662,   668,
     677,   679,   680,   684,   694,   707,   711,   712,   717,   724,
     726,   729,   731,   733,   734,   736,   739,   742,   744,   747,
     750,   752,   755,   759,   762,   765,   768,   771,   775,   779,
     783,   785,   789,   791,   792,   794,   797,   800,   803,   806,
     809,   812,   815,   818,   820,   822,   823,   833,   846,   858,
     859,   862,   864,   866,   868,   870,   872,   874,   878,   879,
     881,   884,   886,   888,   891,   894,   898,   900,   902,   905,
     908,   910,   913,   917,   923,   927,   930,   936,   942,   945,
     949,   951,   953,   956,   959,   960,   965,   966,   970,   975,
     980,   981,   985,   988,   989,   993,   995,   997,   999,  1001,
    1003,  1005,  1007,  1009,  1011,  1013,  1017,  1021,  1023,  1026,
    1029,  1032,  1035,  1038,  1041,  1042,  1046,  1050,  1054,  1055,
    1057,  1060,  1062,  1065,  1068,  1071,  1074,  1079,  1081,  1085,
    1087,  1091,  1093,  1095,  1097,  1099,  1103,  1105,  1108,  1109,
    1111,  1114,  1115,  1117,  1121,  1122,  1125,  1126,  1130,  1134,
    1136,  1142,  1146,  1148,  1152,  1154,  1157,  1159,  1164,  1170,
    1176,  1183,  1187,  1195,  1200,  1212,  1214,  1218,  1221,  1224,
    1227,  1228,  1232,  1234,  1236,  1239,  1242,  1245,  1248,  1250,
    1251,  1253,  1256,  1263,  1268,  1275,  1280,  1287,  1296,  1301,
    1308,  1310,  1312,  1314,  1316,  1319,  1321,  1324,  1326,  1329,
    1331,  1333,  1335,  1339,  1343,  1347,  1351,  1354,  1357,  1359,
    1363,  1365,  1367,  1369,  1371,  1375,  1377,  1379,  1380,  1382,
    1384,  1386,  1388,  1392,  1401,  1409,  1411,  1413,  1416,  1420,
    1429,  1441,  1451,  1453,  1455,  1459,  1460,  1462,  1466,  1468,
    1469,  1471,  1472,  1474,  1475,  1477,  1481,  1483,  1485,  1487,
    1491,  1492,  1495,  1498,  1499,  1502,  1503,  1505,  1506,  1508,
    1510,  1512,  1516,  1520,  1522,  1524,  1528,  1532,  1536,  1540,
    1545,  1549,  1552,  1554,  1556,  1558,  1560,  1562,  1566,  1568,
    1570,  1574,  1578,  1580,  1583,  1588,  1593,  1596,  1600,  1606,
    1612,  1614,  1616,  1628,  1640,  1642,  1645,  1650,  1655,  1660,
    1663,  1666,  1670,  1672,  1676,  1683,  1686,  1687,  1691,  1695,
    1700,  1705,  1710,  1715,  1719,  1722,  1724,  1726,  1727,  1729,
    1731,  1732,  1734,  1740,  1742,  1743,  1746,  1749,  1750,  1752,
    1753,  1757,  1763,  1769,  1771,  1775,  1780,  1784,  1786,  1788,
    1789,  1792,  1795,  1796,  1799,  1802,  1804,  1806,  1808,  1809,
    1812,  1817,  1823,  1828,  1831,  1835,  1838,  1841,  1844,  1847,
    1849,  1852,  1856,  1857,  1859,  1860,  1866,  1868,  1873,  1880,
    1883,  1885,  1886,  1891,  1892,  1894,  1896,  1899,  1902,  1905,
    1907,  1909,  1912,  1915,  1917,  1919,  1921,  1923,  1925,  1927,
    1931,  1935,  1939,  1940,  1942,  1946,  1948,  1951,  1953,  1955,
    1957,  1959,  1961,  1964,  1969,  1974,  1980,  1982,  1984,  1987,
    1988,  1991,  1992,  1994,  1998,  2000,  2001,  2003,  2006,  2010,
    2013,  2018,  2021,  2025,  2028,  2029,  2031,  2034,  2035,  2040,
    2046,  2048,  2051,  2054,  2055,  2057,  2061,  2063,  2066,  2070,
    2074,  2078,  2082,  2086,  2088,  2093,  2097,  2102,  2108,  2113,
    2119,  2124,  2130,  2133,  2138,  2140,  2142,  2143,  2145,  2150,
    2156,  2161,  2162,  2165,  2168,  2171,  2173,  2175,  2176,  2181,
    2184,  2186,  2189,  2192,  2197,  2200,  2207,  2210,  2212,  2216,
    2221,  2222,  2225,  2226,  2229,  2230,  2232,  2236,  2240,  2243,
    2244,  2247,  2252,  2254,  2256,  2259,  2263,  2269,  2276,  2279,
    2283,  2289,  2295,  2299,  2304,  2305,  2307,  2309,  2311,  2313,
    2315,  2318,  2323,  2325,  2327,  2329,  2331,  2334,  2338,  2339,
    2341,  2343,  2345,  2347,  2349,  2352,  2355,  2358,  2361,  2364,
    2366,  2370,  2371,  2373,  2375,  2377,  2379,  2385,  2388,  2390,
    2392,  2394,  2396,  2401,  2403,  2406,  2409,  2411,  2415,  2419,
    2422,  2424,  2425,  2431,  2434,  2440,  2443,  2445,  2449,  2453,
    2454,  2456,  2458,  2460,  2462,  2464,  2466,  2468,  2470,  2472,
    2474,  2476,  2478,  2480,  2482,  2484,  2486,  2488,  2490,  2492,
    2494,  2496,  2498,  2500,  2502,  2506,  2510,  2514,  2518,  2522,
    2526,  2530,  2531,  2533,  2537,  2541,  2547,  2550,  2553,  2557,
    2561,  2565,  2569,  2573,  2577,  2581,  2585,  2589,  2593,  2597,
    2601,  2605,  2609,  2612,  2615,  2619,  2623,  2626,  2629,  2633,
    2637,  2643,  2648,  2655,  2659,  2665,  2670,  2677,  2682,  2689,
    2695,  2703,  2707,  2710,  2715,  2719,  2722,  2724,  2728,  2732,
    2736,  2740,  2744,  2749,  2753,  2758,  2762,  2767,  2773,  2780,
    2787,  2795,  2802,  2810,  2817,  2825,  2829,  2834,  2839,  2846,
    2848,  2853,  2855,  2859,  2862,  2865,  2869,  2873,  2877,  2881,
    2885,  2889,  2893,  2897,  2901,  2905,  2909,  2913,  2917,  2921,
    2924,  2927,  2933,  2940,  2947,  2955,  2957,  2959,  2962,  2965,
    2968,  2973,  2975,  2978,  2980,  2983,  2986,  2991,  2995,  3002,
    3010,  3020,  3028,  3036,  3041,  3047,  3049,  3051,  3053,  3059,
    3061,  3063,  3068,  3070,  3075,  3077,  3082,  3084,  3089,  3091,
    3093,  3095,  3097,  3099,  3101,  3108,  3115,  3120,  3125,  3130,
    3135,  3142,  3148,  3154,  3160,  3165,  3172,  3177,  3183,  3184,
    3190,  3191,  3193,  3194,  3197,  3198,  3200,  3204,  3208,  3211,
    3214,  3215,  3222,  3224,  3225,  3229,  3230,  3233,  3236,  3237,
    3239,  3244,  3247,  3250,  3253,  3256,  3259,  3264,  3268,  3270,
    3276,  3280,  3282,  3286,  3288,  3291,  3293,  3295,  3297,  3299,
    3301,  3303,  3305,  3307,  3309,  3311,  3313,  3315,  3317,  3319,
    3321,  3323,  3325,  3327,  3329,  3334,  3336,  3341,  3343,  3348,
    3350,  3353,  3355,  3358,  3360,  3363,  3365,  3369,  3371,  3375,
    3377,  3380,  3382,  3383,  3385,  3389,  3391,  3395,  3399,  3401,
    3405,  3409,  3410,  3412,  3414,  3416,  3418,  3420,  3422,  3424,
    3426,  3428,  3430,  3435,  3439,  3442,  3446,  3447,  3451,  3455,
    3458,  3461,  3463,  3464,  3467,  3470,  3474,  3477,  3479,  3481,
    3485,  3491,  3493,  3496,  3501,  3504,  3505,  3507,  3508,  3510,
    3513,  3516,  3520,  3526,  3528,  3529,  3531,  3534,  3535,  3538,
    3540,  3541,  3543,  3544,  3546,  3550,  3552,  3555,  3559,  3562,
    3564,  3568,  3574,  3579,  3582,  3584,  3585,  3589,  3591,  3595,
    3597,  3600,  3605,  3608,  3609,  3611,  3615,  3617,  3620,  3622,
    3626,  3628,  3631,  3633,  3635,  3637,  3640,  3642,  3644,  3647,
    3649,  3651,  3654,  3662,  3665,  3671,  3675,  3679,  3681,  3683,
    3685,  3687,  3689,  3691,  3693,  3695,  3697,  3699,  3701,  3703,
    3705,  3707,  3709,  3711,  3713,  3715,  3717,  3719,  3722,  3725,
    3729,  3733,  3734,  3736,  3738,  3740,  3742,  3744,  3746,  3748,
    3754,  3758,  3759,  3761,  3763,  3765,  3767,  3772,  3780,  3783,
    3784,  3786,  3788,  3790,  3792,  3806,  3823,  3825,  3828,  3829,
    3831,  3832,  3834,  3835,  3838,  3839,  3841,  3842,  3849,  3858,
    3865,  3874,  3881,  3890,  3893,  3895,  3900,  3904,  3907,  3912,
    3916,  3922,  3924,  3925,  3927,  3929,  3930,  3932,  3934,  3936,
    3938,  3940,  3942,  3944,  3946,  3948,  3950,  3952,  3956,  3958,
    3960,  3962,  3964,  3966,  3968,  3971,  3973,  3975,  3978,  3982,
    3986,  3990,  3992,  3996,  4000,  4003,  4007,  4011,  4015,  4019,
    4021,  4023,  4025,  4027,  4031,  4037,  4039,  4041,  4043,  4045,
    4049,  4052,  4055,  4059,  4061,  4063,  4068,  4074,  4080,  4085,
    4092,  4094,  4096,  4098,  4100,  4102,  4104,  4105,  4107,  4111,
    4113,  4114,  4122,  4124,  4127,  4131,  4134,  4135,  4138,  4139,
    4142,  4147,  4150,  4152,  4154,  4156,  4159,  4163,  4166,  4169,
    4172,  4175,  4179,  4184,  4187,  4189,  4191,  4193,  4195,  4199,
    4202,  4212,  4224,  4237,  4252,  4256,  4261,  4266,  4267,  4275,
    4286,  4296,  4299,  4303,  4304,  4309,  4311,  4313,  4315,  4317,
    4319,  4321,  4323,  4325,  4327,  4329,  4331,  4333,  4335,  4337,
    4339,  4341,  4343,  4345,  4347,  4349,  4351,  4353,  4355,  4357,
    4359,  4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,  4377,
    4379,  4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,  4397,
    4399,  4401,  4403,  4405,  4407,  4409,  4411,  4413,  4415,  4417,
    4419,  4421,  4423,  4425,  4427,  4429,  4431,  4433,  4435,  4437,
    4439,  4441,  4443,  4445,  4447,  4449,  4451,  4453,  4455,  4457,
    4459,  4461,  4463,  4465,  4467,  4469,  4471,  4473,  4475,  4477,
    4479,  4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,  4497,
    4499,  4501,  4503,  4505,  4507,  4509,  4511,  4513,  4515,  4517,
    4519,  4521,  4523,  4525,  4527,  4529,  4531,  4533,  4535,  4537,
    4539,  4541,  4543,  4545,  4547,  4549,  4551,  4553,  4555,  4557,
    4559,  4561,  4563,  4565,  4567,  4569,  4571,  4573,  4575,  4577,
    4579,  4581,  4583,  4585,  4587,  4589,  4591,  4593,  4595,  4597,
    4599,  4601,  4603,  4605,  4607,  4609,  4611,  4613,  4615,  4617,
    4619,  4621,  4623,  4625,  4627,  4629,  4631,  4633,  4635,  4637,
    4639,  4641,  4643,  4645,  4647,  4649,  4651,  4653,  4655,  4657,
    4659,  4661,  4663,  4665,  4667,  4669,  4671,  4673,  4675,  4677,
    4679,  4681,  4683,  4685,  4687,  4689,  4691,  4693,  4695,  4697,
    4699,  4701,  4703,  4705,  4707,  4709,  4711,  4713,  4715,  4717,
    4719,  4721,  4723,  4725,  4727,  4729,  4731,  4733,  4735,  4737,
    4739,  4741,  4743,  4745,  4747,  4749,  4751,  4753,  4755,  4757,
    4759,  4761,  4763,  4765,  4767,  4769,  4771,  4773,  4775,  4777,
    4779,  4781,  4783,  4785,  4787,  4789,  4791,  4793,  4795,  4797,
    4799,  4801,  4803,  4805,  4807,  4809,  4811,  4813,  4815,  4817,
    4819,  4821,  4823,  4825,  4827,  4829,  4831,  4833,  4835,  4837,
    4839,  4841,  4843,  4845,  4847,  4849,  4851,  4853,  4855,  4857,
    4859,  4861,  4863,  4865,  4867,  4869,  4871,  4873,  4875,  4877,
    4879,  4881,  4883,  4885,  4887,  4889,  4891,  4893,  4895,  4897,
    4899,  4901,  4903,  4905,  4907,  4909,  4911,  4913,  4915,  4917,
    4919,  4921,  4923,  4925,  4927,  4929,  4931,  4933,  4935,  4937,
    4939,  4941,  4943,  4945,  4947,  4949,  4951,  4953,  4955,  4957,
    4959,  4961,  4963,  4965,  4967,  4969,  4971,  4973,  4975,  4977,
    4979,  4981,  4983,  4985,  4987,  4989,  4991,  4993,  4995,  4997,
    4999,  5001,  5003,  5005,  5007,  5009,  5011,  5013,  5015,  5017,
    5019,  5021,  5023,  5025,  5027,  5029,  5031,  5033,  5035,  5037,
    5039,  5041,  5043,  5045,  5047,  5049,  5051,  5053,  5055,  5057,
    5059,  5061,  5063,  5065,  5067,  5069,  5071,  5073,  5075,  5077,
    5079,  5081,  5083,  5085,  5087,  5089,  5091,  5093,  5095,  5097,
    5099,  5101,  5103,  5105,  5107,  5109,  5111,  5113,  5115,  5117,
    5119,  5121,  5123,  5125,  5127,  5129,  5131,  5133,  5135,  5137,
    5139,  5141,  5143,  5145,  5147,  5149,  5151,  5153,  5155,  5157,
    5159,  5161,  5163,  5165,  5167,  5169,  5171,  5173,  5175,  5177,
    5179,  5181,  5183,  5185,  5187,  5189,  5191,  5193,  5195,  5197,
    5199,  5201,  5203,  5205,  5207,  5209,  5211,  5213,  5215,  5217,
    5219,  5221,  5223,  5225,  5227,  5229,  5231,  5233,  5235,  5237,
    5239,  5241,  5243,  5245,  5247,  5249,  5251,  5253,  5255,  5257,
    5259,  5261,  5263,  5265,  5267,  5269,  5271,  5273,  5275,  5277,
    5279,  5281,  5283,  5285,  5287,  5289,  5291,  5293,  5295,  5297,
    5299,  5301,  5303,  5305,  5307,  5309,  5311,  5313,  5315,  5317,
    5319,  5321,  5323,  5325,  5327,  5329,  5331,  5333,  5335,  5337,
    5339,  5341,  5343,  5345,  5347,  5349,  5351,  5353,  5355,  5357,
    5359,  5361,  5363,  5365,  5367,  5369,  5371,  5373,  5375,  5377,
    5379,  5381,  5383,  5385,  5387,  5389,  5391,  5393,  5395,  5397,
    5399,  5401,  5403,  5405,  5407,  5409,  5411,  5413,  5415,  5417,
    5419,  5421,  5423,  5425,  5427,  5429,  5431,  5433,  5435,  5437,
    5439,  5441
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     508,     0,    -1,   509,    -1,   509,   500,   510,    -1,   510,
      -1,   850,    -1,   552,    -1,   511,    -1,   882,    -1,   889,
      -1,   851,    -1,   619,    -1,   892,    -1,   615,    -1,   840,
      -1,   548,    -1,   561,    -1,   544,    -1,   522,    -1,   878,
      -1,   608,    -1,   550,    -1,   854,    -1,   852,    -1,   853,
      -1,   843,    -1,   525,    -1,   871,    -1,   547,    -1,   837,
      -1,   523,    -1,   636,    -1,   559,    -1,   618,    -1,   873,
      -1,   883,    -1,   865,    -1,   886,    -1,   890,    -1,    -1,
      31,   405,   705,   519,    -1,    31,   405,   190,   152,   705,
     519,    -1,    31,   200,   817,   519,    -1,    31,   200,   190,
     152,   817,   519,    -1,    31,   370,   817,   519,    -1,    31,
     370,   190,   152,   817,   519,    -1,    31,   452,   817,   519,
      -1,    31,   452,   190,   152,   817,   519,    -1,   514,    -1,
     512,   514,    -1,   376,   117,   747,    -1,   137,   117,    -1,
     348,    -1,   348,   554,   555,    -1,   376,   556,    -1,   376,
     175,   607,    -1,   518,    -1,   515,   501,   518,    -1,    24,
     586,    -1,    24,   190,   272,   152,   586,    -1,    24,    77,
     586,    -1,    24,    77,   190,   272,   152,   586,    -1,    31,
     524,   826,   513,    -1,    31,   524,   826,   137,   272,   277,
      -1,    31,   524,   826,   376,   272,   277,    -1,    31,   524,
     826,   376,   392,   558,    -1,    31,   524,   826,   376,   574,
      -1,    31,   524,   826,   346,   574,    -1,    31,   524,   826,
     376,   395,   826,    -1,    31,   524,   826,    24,   175,   607,
      38,   189,   564,    -1,    31,   524,   826,   512,    -1,    31,
     524,   826,   137,   189,    -1,    31,   524,   826,   137,   189,
     190,   152,    -1,   137,   524,   190,   152,   826,   612,    -1,
     137,   524,   826,   612,    -1,    31,   524,   826,   521,   427,
     717,   714,   517,    -1,    31,   524,   826,   520,    -1,    24,
     576,    -1,    31,    88,   820,   562,    -1,   443,    88,   820,
      -1,   137,    88,   190,   152,   820,   612,    -1,   137,    88,
     820,   612,    -1,   376,   244,    -1,   376,   436,    -1,   376,
     574,    -1,   346,   574,    -1,   520,    -1,   440,   747,    -1,
      -1,   569,    -1,   376,   569,    -1,    24,   569,    -1,   137,
     584,    -1,   516,    -1,   519,   501,   516,    -1,   291,   497,
     515,   498,    -1,   376,   109,    -1,   376,    -1,    -1,   113,
     820,    -1,   113,   317,   820,    -1,   113,    29,    -1,   113,
     317,    29,    -1,    31,   362,   820,   342,   416,   820,    -1,
      31,   405,   705,   342,   416,   820,    -1,    31,   405,   190,
     152,   705,   342,   416,   820,    -1,    31,   370,   817,   342,
     416,   820,    -1,    31,   370,   190,   152,   817,   342,   416,
     820,    -1,    31,   452,   817,   342,   416,   820,    -1,    31,
     452,   190,   152,   817,   342,   416,   820,    -1,    31,   200,
     817,   342,   416,   820,    -1,    31,   200,   190,   152,   817,
     342,   416,   820,    -1,    31,   405,   705,   342,   524,   820,
     416,   820,    -1,    31,   405,   190,   152,   705,   342,   524,
     820,   416,   820,    -1,    31,   405,   705,   342,    88,   820,
     416,   820,    -1,    31,   405,   190,   152,   705,   342,    88,
     820,   416,   820,    -1,    77,    -1,    -1,   529,   210,   217,
     527,   526,   532,   534,    -1,   636,    -1,   300,   535,   445,
     636,    -1,   497,   539,   498,   636,    -1,   497,   539,   498,
     300,   535,   445,   636,    -1,   117,   446,    -1,   817,    -1,
     817,    38,   826,    -1,   497,   542,   498,   711,    -1,   287,
      88,   820,    -1,    -1,   641,    -1,    -1,   826,   804,    -1,
     543,   486,   747,    -1,   497,   536,   498,   486,   747,    -1,
     287,    86,   528,   133,   438,   376,   541,   711,    -1,   287,
      86,   528,   133,   273,    -1,    -1,   826,   537,   538,   655,
     656,    -1,   752,   537,   538,   655,   656,    -1,   497,   747,
     498,   537,   538,   655,   656,    -1,   350,   807,    -1,    -1,
     439,    -1,   404,    -1,   543,    -1,   536,   501,   543,    -1,
      75,   831,    -1,    -1,   831,    -1,    -1,   530,    -1,   539,
     501,   530,    -1,   531,    -1,   540,   501,   531,    -1,   540,
      -1,   540,   501,    -1,   533,    -1,   542,   501,   533,    -1,
     826,   804,    -1,    95,   427,   831,    38,   144,   497,   545,
     498,    -1,    95,   427,   831,    38,    28,   717,    -1,   546,
      -1,    -1,   825,    -1,   546,   501,   825,    -1,   314,   826,
      -1,   314,   826,   486,   870,    -1,   314,   826,   497,   782,
     498,    -1,    95,   606,   370,   817,   549,    -1,    95,   606,
     370,   190,   272,   152,   817,   549,    -1,   553,    -1,    -1,
     151,   820,   551,    -1,    95,   606,   405,   894,    38,   151,
     820,   551,   893,    -1,    95,   606,   405,   190,   272,   152,
     894,    38,   151,   820,   551,   893,    -1,   497,   780,   498,
      -1,    -1,    31,   370,   817,   553,    -1,    31,   370,   190,
     152,   817,   553,    -1,   556,    -1,   553,   556,    -1,   459,
      -1,   483,    -1,    -1,     4,    -1,   488,     4,    -1,   489,
       4,    -1,   558,    -1,    38,   719,    -1,    57,   555,    -1,
     108,    -1,   270,   108,    -1,   199,   557,   555,    -1,   250,
     555,    -1,   258,   555,    -1,   270,   250,    -1,   270,   258,
      -1,   301,    56,   831,    -1,   370,   263,   831,    -1,   390,
     554,   555,    -1,   348,    -1,   348,   554,   555,    -1,    56,
      -1,    -1,   824,    -1,   488,   824,    -1,   489,   824,    -1,
      20,   560,    -1,    49,   560,    -1,   390,   560,    -1,    81,
     560,    -1,   143,   560,    -1,   355,   560,    -1,   462,    -1,
     418,    -1,    -1,    95,   606,   405,   817,   497,   593,   498,
     581,   573,    -1,    95,   606,   405,   190,   272,   152,   817,
     497,   593,   498,   581,   573,    -1,    95,   292,   344,   606,
     405,   817,   497,   593,   498,   581,   573,    -1,    -1,   562,
     585,    -1,   601,    -1,   901,    -1,   776,    -1,   555,    -1,
     825,    -1,   271,    -1,   497,   553,   498,    -1,    -1,   825,
      -1,   270,    23,    -1,   349,    -1,    60,    -1,   376,   277,
      -1,   376,   117,    -1,    88,   820,   568,    -1,   568,    -1,
     580,    -1,    75,   831,    -1,   272,   277,    -1,   277,    -1,
     433,   592,    -1,   320,   224,   592,    -1,    69,   497,   747,
     498,   575,    -1,   440,    83,   820,    -1,   117,   748,    -1,
     175,   607,    38,   189,   564,    -1,   336,   817,   595,   604,
     571,    -1,   584,   565,    -1,   287,   438,   566,    -1,   570,
      -1,   597,    -1,   570,   597,    -1,   597,   570,    -1,    -1,
     291,   497,   587,   498,    -1,    -1,   287,    81,   137,    -1,
     287,    81,   122,   358,    -1,   287,    81,   319,   358,    -1,
      -1,   497,   578,   498,    -1,   270,   202,    -1,    -1,    88,
     820,   602,    -1,   602,    -1,    80,    -1,    89,    -1,   118,
      -1,   189,    -1,   201,    -1,   392,    -1,   395,    -1,    29,
      -1,   598,    -1,   578,   501,   598,    -1,   440,   200,   589,
      -1,   119,    -1,   272,   119,    -1,   204,   120,    -1,   204,
     193,    -1,   459,   574,    -1,   459,   285,    -1,   461,   285,
      -1,    -1,   497,   588,   498,    -1,   583,   198,   577,    -1,
     583,   149,   577,    -1,    -1,   835,    -1,   272,   119,    -1,
     119,    -1,   204,   193,    -1,   204,   120,    -1,   272,   442,
      -1,   270,   202,    -1,   826,   717,   572,   596,    -1,   569,
      -1,   587,   501,   569,    -1,   591,    -1,   588,   501,   591,
      -1,   826,    -1,   586,    -1,   605,    -1,   576,    -1,   835,
     486,   563,    -1,   835,    -1,   459,   582,    -1,    -1,   603,
      -1,   603,   501,    -1,    -1,   826,    -1,   497,   599,   498,
      -1,    -1,   596,   567,    -1,    -1,   287,   122,   566,    -1,
     835,   486,   563,    -1,   835,    -1,   835,   499,   835,   486,
     563,    -1,   835,   499,   835,    -1,   594,    -1,   599,   501,
     594,    -1,   599,    -1,   599,   501,    -1,   717,    -1,   828,
     832,   492,   427,    -1,   377,   828,   832,   492,   427,    -1,
      69,   497,   747,   498,   562,    -1,   433,   497,   600,   498,
     592,   562,    -1,   433,   579,   562,    -1,   320,   224,   497,
     600,   498,   592,   562,    -1,   320,   224,   579,   562,    -1,
     168,   224,   497,   600,   498,   336,   817,   595,   604,   571,
     562,    -1,   590,    -1,   603,   501,   590,    -1,   248,   172,
      -1,   248,   305,    -1,   248,   382,    -1,    -1,   234,   817,
     583,    -1,   411,    -1,   409,    -1,   238,   411,    -1,   238,
     409,    -1,   177,   411,    -1,   177,   409,    -1,   436,    -1,
      -1,    32,    -1,    56,   117,    -1,   137,   609,   190,   152,
     611,   612,    -1,   137,   609,   611,   612,    -1,   137,   610,
     190,   152,   818,   612,    -1,   137,   610,   818,   612,    -1,
     137,   613,   820,   287,   831,   612,    -1,   137,   613,   190,
     152,   820,   287,   831,   612,    -1,   137,   427,   614,   612,
      -1,   137,   427,   190,   152,   614,   612,    -1,   405,    -1,
     370,    -1,   173,    -1,   245,    -1,   245,   405,    -1,   452,
      -1,   249,   452,    -1,   200,    -1,   168,   405,    -1,    76,
      -1,    92,    -1,   392,    -1,   412,   365,   304,    -1,   412,
     365,   129,    -1,   412,   365,   410,    -1,   412,   365,    85,
      -1,    22,   251,    -1,   146,   421,    -1,   156,    -1,   168,
     109,   463,    -1,   326,    -1,   362,    -1,   373,    -1,   831,
      -1,   611,   501,   831,    -1,    60,    -1,   349,    -1,    -1,
     312,    -1,   359,    -1,   421,    -1,   717,    -1,   614,   501,
     717,    -1,    95,   606,   616,   817,   617,    38,   405,   636,
      -1,    95,   606,   616,   817,   617,    38,   747,    -1,   173,
      -1,   245,    -1,   497,   498,    -1,   497,   782,   498,    -1,
     529,   438,   879,   376,   541,   694,   880,   534,    -1,    93,
     631,   817,   595,   629,   620,   625,   634,   621,   554,   626,
      -1,    93,   497,   839,   498,   416,   625,   634,   554,   626,
      -1,   171,    -1,   416,    -1,   623,   124,   825,    -1,    -1,
     633,    -1,   622,   501,   633,    -1,   440,    -1,    -1,    38,
      -1,    -1,   325,    -1,    -1,   630,    -1,   497,   635,   498,
      -1,   862,    -1,   555,    -1,   490,    -1,   497,   622,   498,
      -1,    -1,   835,   627,    -1,   459,   285,    -1,    -1,   630,
     632,    -1,    -1,    52,    -1,    -1,    52,    -1,   285,    -1,
     170,    -1,   123,   624,   825,    -1,   277,   624,   825,    -1,
      97,    -1,   185,    -1,   328,   624,   825,    -1,   145,   624,
     825,    -1,   167,   328,   599,    -1,   167,   328,   490,    -1,
     167,   272,   277,   599,    -1,   167,   277,   599,    -1,   141,
     825,    -1,   862,    -1,   825,    -1,   393,    -1,   394,    -1,
     628,    -1,   635,   501,   628,    -1,   638,    -1,   637,    -1,
     497,   638,   498,    -1,   497,   637,   498,    -1,   640,    -1,
     639,   652,    -1,   639,   651,   685,   658,    -1,   639,   651,
     657,   686,    -1,   641,   639,    -1,   641,   639,   652,    -1,
     641,   639,   651,   685,   658,    -1,   641,   639,   651,   657,
     686,    -1,   640,    -1,   637,    -1,   369,   649,   806,   644,
     694,   711,   674,   683,   757,   684,   662,    -1,   369,   648,
     808,   644,   694,   711,   674,   683,   757,   684,   662,    -1,
     693,    -1,   405,   705,    -1,   639,   432,   647,   639,    -1,
     639,   215,   647,   639,    -1,   639,   147,   647,   639,    -1,
     459,   642,    -1,   483,   642,    -1,   459,   334,   642,    -1,
     643,    -1,   642,   501,   643,    -1,   820,   833,    38,   497,
     839,   498,    -1,   217,   645,    -1,    -1,   411,   646,   817,
      -1,   409,   646,   817,    -1,   238,   411,   646,   817,    -1,
     238,   409,   646,   817,    -1,   177,   411,   646,   817,    -1,
     177,   409,   646,   817,    -1,   436,   646,   817,    -1,   405,
     817,    -1,   817,    -1,   405,    -1,    -1,    29,    -1,   132,
      -1,    -1,   132,    -1,   132,   287,   497,   780,   498,    -1,
      29,    -1,    -1,   191,   279,    -1,   347,   279,    -1,    -1,
     652,    -1,    -1,   293,    56,   653,    -1,   293,    56,    29,
     655,   656,    -1,   293,    56,   490,   655,   656,    -1,   654,
      -1,   653,   501,   654,    -1,   747,   440,   776,   656,    -1,
     747,   655,   656,    -1,    39,    -1,   126,    -1,    -1,   482,
     163,    -1,   482,   228,    -1,    -1,   659,   660,    -1,   660,
     659,    -1,   659,    -1,   660,    -1,   657,    -1,    -1,   235,
     668,    -1,   235,   668,   501,   669,    -1,   161,   673,   670,
     672,   288,    -1,   161,   673,   672,   288,    -1,   284,   669,
      -1,   284,   670,   672,    -1,     4,   492,    -1,     9,   492,
      -1,     4,   309,    -1,     9,   309,    -1,     9,    -1,     9,
     358,    -1,   440,   360,   664,    -1,    -1,   826,    -1,    -1,
     663,   497,   661,   498,   667,    -1,   661,    -1,   661,   497,
     826,   498,    -1,   661,   497,   826,   501,     9,   498,    -1,
     407,   664,    -1,   665,    -1,    -1,   343,   497,     9,   498,
      -1,    -1,   747,    -1,    29,    -1,   747,   492,    -1,     4,
     309,    -1,     9,   309,    -1,   747,    -1,   749,    -1,   488,
     671,    -1,   489,   671,    -1,   824,    -1,     4,    -1,   357,
      -1,   358,    -1,   163,    -1,   269,    -1,   180,    56,   676,
      -1,   180,    56,    29,    -1,   180,    56,   490,    -1,    -1,
     677,    -1,   675,   501,   677,    -1,   675,    -1,   675,   501,
      -1,   747,    -1,   678,    -1,   680,    -1,   679,    -1,   681,
      -1,   497,   498,    -1,   356,   497,   780,   498,    -1,    98,
     497,   780,   498,    -1,   181,   378,   497,   676,   498,    -1,
     181,    -1,   182,    -1,   184,   747,    -1,    -1,   327,   747,
      -1,    -1,   687,    -1,   166,   330,   288,    -1,   685,    -1,
      -1,   688,    -1,   687,   688,    -1,   689,   690,   691,    -1,
     166,   438,    -1,   166,   270,   224,   438,    -1,   166,   379,
      -1,   166,   224,   379,    -1,   282,   816,    -1,    -1,   276,
      -1,   383,   243,    -1,    -1,   446,   497,   780,   498,    -1,
     692,   501,   497,   780,   498,    -1,   692,    -1,   692,   501,
      -1,   171,   696,    -1,    -1,   697,    -1,   695,   501,   697,
      -1,   695,    -1,   695,   501,    -1,   705,   700,   666,    -1,
     706,   701,   666,    -1,   229,   706,   701,    -1,   637,   700,
     666,    -1,   229,   637,   700,    -1,   698,    -1,   497,   698,
     498,   699,    -1,   497,   698,   498,    -1,   697,    96,   222,
     697,    -1,   697,   702,   222,   697,   704,    -1,   697,   222,
     697,   704,    -1,   697,   266,   702,   222,   697,    -1,   697,
     266,   222,   697,    -1,    38,   826,   497,   819,   498,    -1,
      38,   827,    -1,   826,   497,   819,   498,    -1,   826,    -1,
     699,    -1,    -1,   699,    -1,    38,   497,   712,   498,    -1,
      38,   826,   497,   712,   498,    -1,   826,   497,   712,   498,
      -1,    -1,   172,   703,    -1,   232,   703,    -1,   353,   703,
      -1,   206,    -1,   296,    -1,    -1,   440,   497,   819,   498,
      -1,   287,   747,    -1,   817,    -1,   817,   490,    -1,   288,
     817,    -1,   288,   497,   817,   498,    -1,   752,   710,    -1,
     358,   171,   497,   708,   498,   710,    -1,   752,   709,    -1,
     707,    -1,   708,   501,   707,    -1,    38,   497,   712,   498,
      -1,    -1,   483,   294,    -1,    -1,   456,   747,    -1,    -1,
     713,    -1,   712,   501,   713,    -1,   826,   717,   714,    -1,
      75,   831,    -1,    -1,   826,   717,    -1,   715,   501,   826,
     717,    -1,   357,    -1,   398,    -1,   719,   718,    -1,   377,
     719,   718,    -1,   719,    37,   495,   824,   496,    -1,   377,
     719,    37,   495,   824,   496,    -1,   719,    37,    -1,   377,
     719,    37,    -1,   716,   497,   715,   498,   718,    -1,   246,
     497,   784,   498,   718,    -1,   718,   495,   496,    -1,   718,
     495,   824,   496,    -1,    -1,   721,    -1,   723,    -1,   725,
      -1,   729,    -1,   735,    -1,   736,   746,    -1,   736,   497,
     824,   498,    -1,   723,    -1,   726,    -1,   730,    -1,   735,
      -1,   830,   722,    -1,   497,   780,   498,    -1,    -1,   213,
      -1,   214,    -1,   384,    -1,    51,    -1,   331,    -1,   164,
     724,    -1,   136,   316,    -1,   115,   722,    -1,   114,   722,
      -1,   280,   722,    -1,    54,    -1,   497,   824,   498,    -1,
      -1,   727,    -1,   728,    -1,   727,    -1,   728,    -1,    53,
     734,   497,   780,   498,    -1,    53,   734,    -1,   731,    -1,
     732,    -1,   731,    -1,   732,    -1,   733,   497,   824,   498,
      -1,   733,    -1,    67,   734,    -1,    66,   734,    -1,   447,
      -1,   265,    67,   734,    -1,   265,    66,   734,    -1,   267,
     734,    -1,   449,    -1,    -1,   415,   497,   824,   498,   737,
      -1,   415,   737,    -1,   414,   497,   824,   498,   737,    -1,
     414,   737,    -1,   216,    -1,   483,   414,   480,    -1,   461,
     414,   480,    -1,    -1,   477,    -1,   478,    -1,   260,    -1,
     261,    -1,   111,    -1,   112,    -1,   187,    -1,   188,    -1,
     256,    -1,   257,    -1,   366,    -1,   367,    -1,   254,    -1,
     255,    -1,   252,    -1,   253,    -1,   738,    -1,   739,    -1,
     740,    -1,   741,    -1,   742,    -1,   743,    -1,   744,    -1,
     745,    -1,   738,   416,   739,    -1,   740,   416,   741,    -1,
     740,   416,   742,    -1,   740,   416,   743,    -1,   741,   416,
     742,    -1,   741,   416,   743,    -1,   742,   416,   743,    -1,
      -1,   749,    -1,   747,    11,   717,    -1,   747,    75,   831,
      -1,   747,    43,   414,   480,   747,    -1,   488,   747,    -1,
     489,   747,    -1,   747,   488,   747,    -1,   747,   489,   747,
      -1,   747,   490,   747,    -1,   747,   491,   747,    -1,   747,
     492,   747,    -1,   747,   493,   747,    -1,   747,    16,   747,
      -1,   747,   484,   747,    -1,   747,   485,   747,    -1,   747,
     486,   747,    -1,   747,    17,   747,    -1,   747,    18,   747,
      -1,   747,    19,   747,    -1,   747,   775,   747,    -1,   775,
     747,    -1,   747,   775,    -1,   747,    35,   747,    -1,   747,
     292,   747,    -1,   272,   747,    -1,   481,   747,    -1,   747,
     176,   747,    -1,   747,   234,   747,    -1,   747,   234,   747,
     145,   747,    -1,   747,   481,   234,   747,    -1,   747,   481,
     234,   747,   145,   747,    -1,   747,   192,   747,    -1,   747,
     192,   747,   145,   747,    -1,   747,   481,   192,   747,    -1,
     747,   481,   192,   747,   145,   747,    -1,   747,   381,   416,
     747,    -1,   747,   381,   416,   747,   145,   747,    -1,   747,
     481,   381,   416,   747,    -1,   747,   481,   381,   416,   747,
     145,   747,    -1,   747,   219,   277,    -1,   747,   220,    -1,
     747,   219,   272,   277,    -1,   747,   272,   277,    -1,   747,
     275,    -1,   768,    -1,   502,   771,   503,    -1,   495,   781,
     496,    -1,   747,    15,   747,    -1,   768,   298,   768,    -1,
     747,   219,   423,    -1,   747,   219,   272,   423,    -1,   747,
     219,   159,    -1,   747,   219,   272,   159,    -1,   747,   219,
     434,    -1,   747,   219,   272,   434,    -1,   747,   219,   132,
     171,   747,    -1,   747,   219,   272,   132,   171,   747,    -1,
     747,   219,   282,   497,   784,   498,    -1,   747,   219,   272,
     282,   497,   784,   498,    -1,   747,    50,   805,   748,    35,
     747,    -1,   747,   481,    50,   805,   748,    35,   747,    -1,
     747,    50,   402,   748,    35,   747,    -1,   747,   481,    50,
     402,   748,    35,   747,    -1,   747,   197,   794,    -1,   747,
     481,   197,   794,    -1,   747,   777,   772,   637,    -1,   747,
     777,   772,   497,   747,   498,    -1,   117,    -1,    37,   495,
     781,   496,    -1,   749,    -1,   748,    11,   717,    -1,   488,
     748,    -1,   489,   748,    -1,   748,   488,   748,    -1,   748,
     489,   748,    -1,   748,   490,   748,    -1,   748,   491,   748,
      -1,   748,   492,   748,    -1,   748,   493,   748,    -1,   748,
      16,   748,    -1,   748,   484,   748,    -1,   748,   485,   748,
      -1,   748,   486,   748,    -1,   748,    17,   748,    -1,   748,
      18,   748,    -1,   748,    19,   748,    -1,   748,   775,   748,
      -1,   775,   748,    -1,   748,   775,    -1,   748,   219,   132,
     171,   748,    -1,   748,   219,   272,   132,   171,   748,    -1,
     748,   219,   282,   497,   784,   498,    -1,   748,   219,   272,
     282,   497,   784,   498,    -1,   800,    -1,   823,    -1,   504,
       9,    -1,   505,   804,    -1,    10,   804,    -1,   497,   747,
     498,   804,    -1,   795,    -1,   751,   804,    -1,   637,    -1,
     637,   803,    -1,   152,   637,    -1,   682,   497,   780,   498,
      -1,   822,   497,   498,    -1,   822,   497,   782,   651,   650,
     498,    -1,   822,   497,   448,   783,   651,   650,   498,    -1,
     822,   497,   782,   501,   448,   783,   651,   650,   498,    -1,
     822,   497,    29,   782,   651,   650,   498,    -1,   822,   497,
     132,   782,   651,   650,   498,    -1,   822,   497,   490,   498,
      -1,   750,   754,   755,   756,   760,    -1,   753,    -1,   750,
      -1,   753,    -1,    76,   166,   497,   747,   498,    -1,   101,
      -1,   104,    -1,   104,   497,   824,   498,    -1,   105,    -1,
     105,   497,   824,   498,    -1,   239,    -1,   239,   497,   824,
     498,    -1,   240,    -1,   240,   497,   824,   498,    -1,   102,
      -1,   106,    -1,   375,    -1,   439,    -1,   100,    -1,   103,
      -1,    63,   497,   747,    38,   717,   498,    -1,   426,   497,
     747,    38,   717,   498,    -1,   158,   497,   785,   498,    -1,
     299,   497,   787,   498,    -1,   313,   497,   789,   498,    -1,
     400,   497,   790,   498,    -1,   420,   497,   747,    38,   717,
     498,    -1,   422,   497,    55,   793,   498,    -1,   422,   497,
     230,   793,   498,    -1,   422,   497,   417,   793,   498,    -1,
     422,   497,   793,   498,    -1,   278,   497,   747,   501,   747,
     498,    -1,    74,   497,   780,   498,    -1,   460,   180,   497,
     652,   498,    -1,    -1,   162,   497,   456,   747,   498,    -1,
      -1,   155,    -1,    -1,   458,   758,    -1,    -1,   759,    -1,
     758,   501,   759,    -1,   826,    38,   761,    -1,   297,   761,
      -1,   297,   826,    -1,    -1,   497,   762,   763,   651,   764,
     498,    -1,   826,    -1,    -1,   306,    56,   779,    -1,    -1,
     329,   765,    -1,   358,   765,    -1,    -1,   766,    -1,    50,
     766,    35,   766,    -1,   429,   315,    -1,   429,   165,    -1,
      99,   357,    -1,   747,   315,    -1,   747,   165,    -1,   357,
     497,   780,   498,    -1,   357,   497,   498,    -1,   767,    -1,
     497,   779,   501,   747,   498,    -1,   827,   506,   747,    -1,
     769,    -1,   770,   501,   769,    -1,   770,    -1,   770,   501,
      -1,    36,    -1,   386,    -1,    29,    -1,     8,    -1,   774,
      -1,   488,    -1,   489,    -1,   490,    -1,   491,    -1,   492,
      -1,   493,    -1,    16,    -1,   484,    -1,   485,    -1,   486,
      -1,    17,    -1,    18,    -1,    19,    -1,     8,    -1,   289,
     497,   778,   498,    -1,   773,    -1,   289,   497,   778,   498,
      -1,   773,    -1,   289,   497,   778,   498,    -1,   234,    -1,
     481,   234,    -1,   176,    -1,   481,   176,    -1,   192,    -1,
     481,   192,    -1,   773,    -1,   826,   499,   778,    -1,   747,
      -1,   779,   501,   747,    -1,   779,    -1,   779,   501,    -1,
     780,    -1,    -1,   783,    -1,   782,   501,   783,    -1,   747,
      -1,   834,    13,   747,    -1,   834,    14,   747,    -1,   717,
      -1,   784,   501,   717,    -1,   786,   171,   747,    -1,    -1,
       3,    -1,   738,    -1,   739,    -1,   740,    -1,   741,    -1,
     742,    -1,   743,    -1,   744,    -1,   745,    -1,   825,    -1,
     747,   788,   791,   792,    -1,   747,   788,   791,    -1,   310,
     747,    -1,   748,   197,   748,    -1,    -1,   747,   791,   792,
      -1,   747,   792,   791,    -1,   747,   791,    -1,   747,   792,
      -1,   779,    -1,    -1,   171,   747,    -1,   166,   747,    -1,
     747,   171,   780,    -1,   171,   780,    -1,   780,    -1,   637,
      -1,   497,   780,   498,    -1,    62,   799,   796,   798,   143,
      -1,   797,    -1,   796,   797,    -1,   455,   747,   413,   747,
      -1,   139,   747,    -1,    -1,   747,    -1,    -1,   826,    -1,
     826,   803,    -1,   499,   821,    -1,   495,   747,   496,    -1,
     495,   802,   506,   802,   496,    -1,   747,    -1,    -1,   801,
      -1,   803,   801,    -1,    -1,   804,   801,    -1,    42,    -1,
      -1,   808,    -1,    -1,   809,    -1,   807,   501,   809,    -1,
     807,    -1,   807,   501,    -1,   747,    38,   836,    -1,   747,
       3,    -1,   747,    -1,   490,   811,   815,    -1,   826,   499,
     490,   811,   815,    -1,   148,   497,   819,   498,    -1,   148,
     826,    -1,   810,    -1,    -1,   747,    38,   826,    -1,   812,
      -1,   813,   501,   812,    -1,   813,    -1,   813,   501,    -1,
     344,   497,   814,   498,    -1,   344,   812,    -1,    -1,   817,
      -1,   816,   501,   817,    -1,   827,    -1,   826,   803,    -1,
     820,    -1,   818,   501,   820,    -1,   818,    -1,   818,   501,
      -1,   826,    -1,   835,    -1,   829,    -1,   826,   803,    -1,
     824,    -1,     4,    -1,   825,   804,    -1,     6,    -1,     7,
      -1,   822,   825,    -1,   822,   497,   782,   651,   650,   498,
     825,    -1,   720,   825,    -1,   736,   497,   747,   498,   746,
      -1,   736,   824,   746,    -1,   736,   825,   746,    -1,   423,
      -1,   159,    -1,   277,    -1,     9,    -1,     5,    -1,     3,
      -1,   895,    -1,   896,    -1,   826,    -1,     5,    -1,     3,
      -1,   895,    -1,   900,    -1,     3,    -1,   895,    -1,   897,
      -1,     3,    -1,   895,    -1,   898,    -1,   826,    -1,   826,
     832,    -1,   499,   821,    -1,   832,   499,   821,    -1,   497,
     818,   498,    -1,    -1,   828,    -1,     3,    -1,   899,    -1,
     895,    -1,   901,    -1,   835,    -1,     5,    -1,   317,   820,
     838,    38,   839,    -1,   497,   784,   498,    -1,    -1,   636,
      -1,   525,    -1,   618,    -1,   878,    -1,    95,   362,   826,
     841,    -1,    95,   362,   190,   272,   152,   826,   841,    -1,
     841,   842,    -1,    -1,   561,    -1,   843,    -1,   548,    -1,
     890,    -1,    95,   849,   200,   846,   847,   287,   817,   845,
     497,   542,   498,   848,   711,    -1,    95,   849,   200,   846,
     190,   272,   152,   589,   287,   817,   845,   497,   542,   498,
     848,   711,    -1,   826,    -1,   440,   844,    -1,    -1,    84,
      -1,    -1,   589,    -1,    -1,   459,   574,    -1,    -1,   433,
      -1,    -1,    31,   405,   705,   376,   362,   820,    -1,    31,
     405,   190,   152,   705,   376,   362,   820,    -1,    31,   370,
     817,   376,   362,   820,    -1,    31,   370,   190,   152,   817,
     376,   362,   820,    -1,    31,   452,   817,   376,   362,   820,
      -1,    31,   452,   190,   152,   817,   376,   362,   820,    -1,
     167,    70,    -1,    70,    -1,   154,   110,   825,   626,    -1,
     196,   110,   825,    -1,   153,   857,    -1,   153,   861,   855,
     857,    -1,   153,   450,   857,    -1,   153,   497,   860,   498,
     857,    -1,   450,    -1,    -1,   862,    -1,   555,    -1,    -1,
     636,    -1,   525,    -1,   618,    -1,   878,    -1,   892,    -1,
       3,    -1,   895,    -1,   899,    -1,   858,    -1,   825,    -1,
     863,    -1,   860,   501,   863,    -1,    34,    -1,    33,    -1,
     423,    -1,   159,    -1,   287,    -1,   859,    -1,   864,   856,
      -1,   858,    -1,   861,    -1,   376,   866,    -1,   376,   238,
     866,    -1,   376,   374,   866,    -1,   376,   177,   866,    -1,
     867,    -1,   888,   171,    99,    -1,   414,   480,   869,    -1,
     362,   825,    -1,   888,   416,   870,    -1,   888,   486,   870,
      -1,   888,   416,   117,    -1,   888,   486,   117,    -1,   862,
      -1,   555,    -1,   825,    -1,     3,    -1,   736,   825,   746,
      -1,   736,   497,   824,   498,   825,    -1,   555,    -1,   117,
      -1,   238,    -1,   868,    -1,   870,   501,   868,    -1,   237,
     872,    -1,   211,   872,    -1,   167,   211,   872,    -1,   825,
      -1,   826,    -1,   441,   875,   877,   855,    -1,   441,   875,
     877,   855,   817,    -1,   441,   875,   877,   855,   882,    -1,
     441,   497,   876,   498,    -1,   441,   497,   876,   498,   817,
     833,    -1,   861,    -1,   450,    -1,   170,    -1,   172,    -1,
       3,    -1,   172,    -1,    -1,   874,    -1,   876,   501,   874,
      -1,   170,    -1,    -1,   529,   122,   171,   879,   881,   880,
     534,    -1,   705,    -1,   705,   826,    -1,   705,    38,   826,
      -1,   456,   747,    -1,    -1,   440,   696,    -1,    -1,   861,
     855,    -1,   861,   855,   817,   833,    -1,   346,   885,    -1,
     888,    -1,    29,    -1,   884,    -1,   414,   480,    -1,   418,
     221,   233,    -1,   887,   636,    -1,   401,   636,    -1,   401,
     888,    -1,   887,   888,    -1,   887,   414,   480,    -1,   887,
     418,   221,   233,    -1,   887,    29,    -1,   887,    -1,   380,
      -1,   127,    -1,   826,    -1,   888,   499,   826,    -1,    58,
     750,    -1,    95,   606,   452,   817,   595,   848,    38,   636,
     891,    -1,    95,   292,   344,   606,   452,   817,   595,   848,
      38,   636,   891,    -1,    95,   606,   334,   452,   817,   497,
     599,   498,   848,    38,   636,   891,    -1,    95,   292,   344,
     606,   334,   452,   817,   497,   599,   498,   848,    38,   636,
     891,    -1,   459,    69,   290,    -1,   459,    61,    69,   290,
      -1,   459,   238,    69,   290,    -1,    -1,    95,   606,   405,
     894,    38,   636,   893,    -1,    95,   606,   405,   190,   272,
     152,   894,    38,   636,   893,    -1,    95,   292,   344,   606,
     405,   894,    38,   636,   893,    -1,   459,   109,    -1,   459,
     270,   109,    -1,    -1,   817,   595,   581,   573,    -1,    20,
      -1,    21,    -1,    22,    -1,    23,    -1,    24,    -1,    25,
      -1,    26,    -1,    27,    -1,    28,    -1,    30,    -1,    31,
      -1,    32,    -1,    40,    -1,    41,    -1,    43,    -1,    44,
      -1,    45,    -1,    47,    -1,    48,    -1,    49,    -1,    56,
      -1,    57,    -1,    58,    -1,    59,    -1,    60,    -1,    61,
      -1,    64,    -1,    65,    -1,    68,    -1,    70,    -1,    71,
      -1,    72,    -1,    73,    -1,    78,    -1,    79,    -1,    80,
      -1,    81,    -1,    82,    -1,    83,    -1,    85,    -1,    86,
      -1,    87,    -1,    89,    -1,    90,    -1,    91,    -1,    92,
      -1,    93,    -1,    94,    -1,    97,    -1,    98,    -1,    99,
      -1,   107,    -1,   108,    -1,   109,    -1,   110,    -1,   111,
      -1,   112,    -1,   113,    -1,   116,    -1,   118,    -1,   120,
      -1,   121,    -1,   122,    -1,   123,    -1,   124,    -1,   125,
      -1,   127,    -1,   128,    -1,   129,    -1,   130,    -1,   131,
      -1,   134,    -1,   135,    -1,   136,    -1,   137,    -1,   138,
      -1,   140,    -1,   141,    -1,   142,    -1,   144,    -1,   145,
      -1,   146,    -1,   148,    -1,   149,    -1,   150,    -1,   151,
      -1,   153,    -1,   154,    -1,   155,    -1,   156,    -1,   157,
      -1,   160,    -1,   162,    -1,   163,    -1,   165,    -1,   167,
      -1,   169,    -1,   173,    -1,   174,    -1,   175,    -1,   177,
      -1,   179,    -1,   183,    -1,   185,    -1,   186,    -1,   187,
      -1,   188,    -1,   189,    -1,   190,    -1,   191,    -1,   193,
      -1,   194,    -1,   195,    -1,   196,    -1,   198,    -1,   199,
      -1,   200,    -1,   201,    -1,   202,    -1,   203,    -1,   205,
      -1,   208,    -1,   209,    -1,   210,    -1,   211,    -1,   212,
      -1,   218,    -1,   221,    -1,   223,    -1,   224,    -1,   225,
      -1,   226,    -1,   227,    -1,   228,    -1,   231,    -1,   233,
      -1,   236,    -1,   237,    -1,   238,    -1,   241,    -1,   242,
      -1,   243,    -1,   244,    -1,   245,    -1,   247,    -1,   248,
      -1,   249,    -1,   250,    -1,   251,    -1,   252,    -1,   253,
      -1,   254,    -1,   255,    -1,   256,    -1,   257,    -1,   258,
      -1,   259,    -1,   260,    -1,   261,    -1,   262,    -1,   263,
      -1,   264,    -1,   268,    -1,   269,    -1,   270,    -1,   273,
      -1,   274,    -1,   276,    -1,   279,    -1,   281,    -1,   282,
      -1,   283,    -1,   285,    -1,   286,    -1,   289,    -1,   290,
      -1,   291,    -1,   294,    -1,   297,    -1,   300,    -1,   301,
      -1,   302,    -1,   303,    -1,   304,    -1,   305,    -1,   306,
      -1,   307,    -1,   308,    -1,   309,    -1,   311,    -1,   312,
      -1,   314,    -1,   315,    -1,   317,    -1,   318,    -1,   319,
      -1,   321,    -1,   322,    -1,   323,    -1,   324,    -1,   325,
      -1,   326,    -1,   328,    -1,   329,    -1,   330,    -1,   332,
      -1,   333,    -1,   334,    -1,   335,    -1,   337,    -1,   338,
      -1,   339,    -1,   340,    -1,   341,    -1,   342,    -1,   343,
      -1,   344,    -1,   345,    -1,   346,    -1,   347,    -1,   348,
      -1,   349,    -1,   351,    -1,   352,    -1,   354,    -1,   355,
      -1,   356,    -1,   358,    -1,   359,    -1,   360,    -1,   361,
      -1,   362,    -1,   363,    -1,   364,    -1,   365,    -1,   366,
      -1,   367,    -1,   368,    -1,   370,    -1,   371,    -1,   372,
      -1,   373,    -1,   374,    -1,   376,    -1,   378,    -1,   379,
      -1,   380,    -1,   382,    -1,   383,    -1,   385,    -1,   387,
      -1,   388,    -1,   389,    -1,   390,    -1,   391,    -1,   392,
      -1,   393,    -1,   394,    -1,   395,    -1,   396,    -1,   397,
      -1,   399,    -1,   401,    -1,   403,    -1,   404,    -1,   406,
      -1,   408,    -1,   409,    -1,   410,    -1,   411,    -1,   412,
      -1,   418,    -1,   419,    -1,   421,    -1,   424,    -1,   425,
      -1,   427,    -1,   428,    -1,   429,    -1,   430,    -1,   431,
      -1,   434,    -1,   435,    -1,   436,    -1,   437,    -1,   438,
      -1,   441,    -1,   442,    -1,   443,    -1,   444,    -1,   445,
      -1,   449,    -1,   451,    -1,   452,    -1,   453,    -1,   454,
      -1,   457,    -1,   460,    -1,   461,    -1,   462,    -1,   463,
      -1,   464,    -1,   465,    -1,   477,    -1,   478,    -1,   479,
      -1,   480,    -1,    50,    -1,    51,    -1,    53,    -1,    54,
      -1,    66,    -1,    67,    -1,    74,    -1,   114,    -1,   115,
      -1,   152,    -1,   158,    -1,   164,    -1,   181,    -1,   182,
      -1,   207,    -1,   213,    -1,   214,    -1,   216,    -1,   246,
      -1,   265,    -1,   267,    -1,   271,    -1,   278,    -1,   280,
      -1,   295,    -1,   299,    -1,   313,    -1,   316,    -1,   331,
      -1,   357,    -1,   377,    -1,   384,    -1,   398,    -1,   400,
      -1,   414,    -1,   415,    -1,   420,    -1,   422,    -1,   426,
      -1,   446,    -1,   447,    -1,   466,    -1,   467,    -1,   468,
      -1,   469,    -1,   470,    -1,   471,    -1,   472,    -1,   473,
      -1,   474,    -1,   475,    -1,   476,    -1,    46,    -1,    52,
      -1,    76,    -1,    84,    -1,    96,    -1,   103,    -1,   170,
      -1,   172,    -1,   176,    -1,   192,    -1,   206,    -1,   219,
      -1,   220,    -1,   222,    -1,   232,    -1,   234,    -1,   246,
      -1,   266,    -1,   275,    -1,   296,    -1,   298,    -1,   353,
      -1,   381,    -1,   398,    -1,   407,    -1,   450,    -1,    46,
      -1,    52,    -1,    76,    -1,    84,    -1,    96,    -1,   103,
      -1,   170,    -1,   172,    -1,   176,    -1,   192,    -1,   206,
      -1,   219,    -1,   220,    -1,   222,    -1,   232,    -1,   234,
      -1,   266,    -1,   275,    -1,   296,    -1,   298,    -1,   353,
      -1,   381,    -1,   407,    -1,   426,    -1,   450,    -1,    50,
      -1,    51,    -1,    53,    -1,    54,    -1,    67,    -1,    66,
      -1,    74,    -1,   114,    -1,   115,    -1,   152,    -1,   158,
      -1,   164,    -1,   181,    -1,   182,    -1,   207,    -1,   214,
      -1,   216,    -1,   213,    -1,   246,    -1,   265,    -1,   267,
      -1,   271,    -1,   278,    -1,   280,    -1,   295,    -1,   299,
      -1,   313,    -1,   316,    -1,   331,    -1,   357,    -1,   377,
      -1,   384,    -1,   398,    -1,   400,    -1,   414,    -1,   415,
      -1,   420,    -1,   422,    -1,   426,    -1,   446,    -1,   447,
      -1,   466,    -1,   467,    -1,   468,    -1,   469,    -1,   470,
      -1,   471,    -1,   472,    -1,   473,    -1,   474,    -1,   475,
      -1,   476,    -1,    46,    -1,    52,    -1,    76,    -1,    84,
      -1,    96,    -1,   103,    -1,   170,    -1,   172,    -1,   176,
      -1,   192,    -1,   206,    -1,   219,    -1,   220,    -1,   222,
      -1,   232,    -1,   234,    -1,   246,    -1,   266,    -1,   275,
      -1,   296,    -1,   298,    -1,   353,    -1,   381,    -1,   398,
      -1,   407,    -1,   426,    -1,   450,    -1,    29,    -1,    33,
      -1,    34,    -1,    35,    -1,    36,    -1,    37,    -1,    38,
      -1,    39,    -1,    42,    -1,    55,    -1,    62,    -1,    63,
      -1,    69,    -1,    75,    -1,    77,    -1,    88,    -1,    95,
      -1,   100,    -1,   101,    -1,   102,    -1,   104,    -1,   105,
      -1,   106,    -1,   117,    -1,   119,    -1,   126,    -1,   132,
      -1,   133,    -1,   139,    -1,   143,    -1,   147,    -1,   159,
      -1,   161,    -1,   166,    -1,   168,    -1,   171,    -1,   178,
      -1,   180,    -1,   184,    -1,   197,    -1,   204,    -1,   215,
      -1,   217,    -1,   229,    -1,   230,    -1,   235,    -1,   239,
      -1,   240,    -1,   272,    -1,   277,    -1,   284,    -1,   287,
      -1,   288,    -1,   292,    -1,   293,    -1,   310,    -1,   320,
      -1,   327,    -1,   336,    -1,   350,    -1,   369,    -1,   375,
      -1,   386,    -1,   402,    -1,   405,    -1,   413,    -1,   416,
      -1,   417,    -1,   423,    -1,   432,    -1,   433,    -1,   439,
      -1,   440,    -1,   448,    -1,   455,    -1,   456,    -1,   458,
      -1,   459,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   467,   467,   483,   495,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   539,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      13,    19,    25,     6,    15,    25,    35,    45,    55,    65,
      75,    85,    95,   106,   117,   127,   140,   141,     8,    21,
      27,    34,    40,    47,    57,    61,    70,    79,    88,    95,
      96,   101,   113,   118,   143,   153,   163,   169,   180,   191,
     206,   207,   213,   214,   219,   220,   226,   227,   231,   232,
     237,   239,   245,   246,   250,   251,   254,   255,   260,     7,
      14,    24,    25,    28,    30,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    36,    56,
      57,    84,    85,    86,    87,    88,    89,    93,    94,    99,
     104,   105,   106,   107,   108,   113,   120,   121,   122,   139,
     146,   153,   163,   173,   185,   193,   202,   211,   230,   237,
     242,   244,   246,   248,   251,   256,   257,   261,   262,   263,
     264,   269,   273,   274,   279,   286,   291,   292,   293,   294,
     295,   296,   297,   298,   304,   305,   309,   314,   321,   328,
     335,   347,   348,   349,   350,   354,   359,   360,   361,   366,
     371,   372,   373,   374,   375,   376,   381,   404,   408,   415,
     416,   420,   424,   425,   426,   430,   434,   442,   443,   448,
     449,   450,   454,   462,   463,   468,   469,   473,   478,   482,
     486,   491,   499,   500,   504,   505,   509,   510,   516,   527,
     540,   554,   568,   582,   596,   619,   623,   630,   634,   642,
     647,   654,   664,   665,   666,   667,   668,   675,   682,   683,
     688,   689,     9,    19,    29,    39,    49,    59,    69,    79,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   113,   114,   115,   116,
     117,   118,   119,   124,   125,   130,   131,   132,   137,   138,
     139,   142,   143,     8,    20,    36,    37,    41,    45,     7,
       1,    30,    53,    54,    59,    63,    68,    72,    80,    81,
      85,    86,    91,    92,    96,    97,   102,   103,   104,   105,
     106,   111,   119,   123,   128,   129,   134,   138,   143,   147,
     151,   155,   159,   163,   167,   171,   175,   179,   183,   187,
     191,   195,   203,   209,   210,   211,   216,   220,    47,    48,
      52,    53,    68,    69,    76,    84,    92,   100,   108,   116,
     127,   128,   155,   171,   188,   189,   208,   212,   216,   233,
     240,   247,   257,   258,   261,   273,   284,   292,   297,   302,
     307,   312,   320,   328,   333,   338,   345,   346,   350,   351,
     352,   359,   360,   364,   365,   369,   370,   371,   375,   376,
     380,   381,   391,   404,   405,   408,   417,   428,   429,   430,
     433,   434,   435,   439,   440,   441,   442,   446,   447,   451,
     453,   469,   471,   476,   479,   487,   491,   495,   499,   503,
     507,   514,   519,   526,   527,   531,   535,   539,   543,   550,
     557,   558,   563,   564,   568,   569,   574,   576,   578,   583,
     603,   604,   606,   611,   612,   616,   617,   620,   621,   646,
     647,   652,   657,   661,   662,   666,   667,   671,   672,   673,
     674,   675,   679,   692,   699,   706,   713,   714,   718,   719,
     723,   724,   728,   729,   733,   734,   738,   739,   743,   754,
     755,   756,   757,   761,   762,   767,   768,   769,   778,   784,
     793,   794,   807,   808,   812,   813,   817,   818,   824,   830,
     838,   846,   855,   864,   868,   894,   898,   911,   925,   940,
     952,   968,   974,   979,   985,   992,   993,  1001,  1005,  1009,
    1015,  1022,  1027,  1028,  1029,  1030,  1034,  1035,  1047,  1048,
    1053,  1060,  1067,  1074,  1106,  1117,  1130,  1135,  1136,  1139,
    1140,  1143,  1144,  1149,  1150,  1155,  1159,  1165,  1186,  1194,
    1207,  1210,  1214,  1214,  1216,  1221,  1228,  1233,  1239,  1244,
    1250,  1256,  1265,  1267,  1270,  1274,  1275,  1276,  1277,  1278,
    1279,  1284,  1304,  1305,  1306,  1307,  1318,  1332,  1333,  1339,
    1344,  1349,  1354,  1359,  1364,  1369,  1374,  1380,  1386,  1392,
    1399,  1421,  1430,  1434,  1442,  1446,  1454,  1466,  1487,  1491,
    1497,  1501,  1514,  1522,  1532,  1534,  1536,  1538,  1540,  1542,
    1547,  1548,  1555,  1564,  1572,  1581,  1592,  1600,  1601,  1602,
    1606,  1606,  1609,  1609,  1612,  1612,  1615,  1615,  1618,  1618,
    1621,  1621,  1624,  1624,  1627,  1627,  1630,  1632,  1634,  1636,
    1638,  1640,  1642,  1644,  1646,  1651,  1656,  1662,  1669,  1674,
    1680,  1686,  1717,  1719,  1721,  1729,  1744,  1746,  1748,  1750,
    1752,  1754,  1756,  1758,  1760,  1762,  1764,  1766,  1768,  1770,
    1772,  1775,  1777,  1779,  1782,  1784,  1786,  1788,  1791,  1796,
    1801,  1808,  1813,  1820,  1825,  1832,  1837,  1845,  1853,  1861,
    1869,  1887,  1895,  1903,  1911,  1919,  1927,  1931,  1935,  1939,
    1947,  1963,  1971,  1979,  1987,  1995,  2003,  2011,  2015,  2019,
    2023,  2027,  2035,  2043,  2051,  2059,  2079,  2101,  2112,  2119,
    2133,  2149,  2151,  2153,  2155,  2157,  2159,  2161,  2163,  2165,
    2167,  2169,  2171,  2173,  2175,  2177,  2179,  2181,  2183,  2185,
    2187,  2189,  2193,  2197,  2201,  2215,  2216,  2217,  2224,  2236,
    2251,  2263,  2265,  2277,  2288,  2312,  2323,  2332,  2336,  2343,
    2351,  2359,  2370,  2378,  2406,  2442,  2453,  2454,  2461,  2467,
    2471,  2475,  2479,  2483,  2487,  2491,  2495,  2499,  2503,  2507,
    2511,  2515,  2519,  2523,  2527,  2529,  2531,  2535,  2544,  2549,
    2556,  2571,  2578,  2582,  2586,  2590,  2594,  2608,  2609,  2613,
    2614,  2618,  2619,  2626,  2627,  2631,  2632,  2637,  2645,  2647,
    2661,  2664,  2691,  2692,  2695,  2696,  2707,  2713,  2720,  2729,
    2746,  2791,  2799,  2807,  2815,  2823,  2844,  2845,  2848,  2849,
    2853,  2863,  2864,  2868,  2869,  2873,  2874,  2875,  2878,  2879,
    2882,  2883,  2884,  2885,  2886,  2887,  2888,  2889,  2890,  2891,
    2892,  2893,  2894,  2897,  2899,  2904,  2906,  2911,  2913,  2915,
    2917,  2919,  2921,  2923,  2925,  2939,  2941,  2945,  2949,  2956,
    2961,  2979,  2984,  2992,  2996,  3002,  3006,  3015,  3026,  3027,
    3031,  3035,  3042,  3043,  3044,  3045,  3046,  3047,  3048,  3049,
    3050,  3051,  3061,  3065,  3072,  3079,  3080,  3096,  3100,  3105,
    3109,  3124,  3129,  3133,  3136,  3139,  3140,  3141,  3144,  3151,
    3161,  3175,  3176,  3180,  3191,  3192,  3195,  3196,  3199,  3203,
    3210,  3214,  3222,  3233,  3234,  3238,  3239,  3243,  3244,  3247,
    3248,  3258,  3259,  3263,  3264,  3268,  3269,  3272,  3288,  3296,
    3304,  3319,  3337,  3338,  3341,  3342,  3345,  3349,  3350,  3354,
    3355,  3358,  3359,  3360,  3370,  3371,  3382,  3386,  3413,  3415,
    3421,  3422,  3425,  3427,  3437,  3440,  3451,  3455,  3459,  3471,
    3475,  3484,  3491,  3529,  3533,  3537,  3541,  3545,  3549,  3553,
    3559,  3560,  3576,  3577,  3578,  3581,  3582,  3588,  3589,  3590,
    3593,  3594,  3595,  3598,  3599,  3600,  3603,  3604,  3607,  3609,
    3614,  3615,  3618,  3626,  3627,  3628,  3629,  3632,  3633,     7,
      18,    19,    23,    24,    25,    26,     7,    16,    34,    41,
      46,    47,    48,    49,     8,    33,    62,    66,    67,    72,
      73,    78,    79,    83,    84,    89,    90,     7,    16,    25,
      34,    43,    52,     5,    11,     7,    20,     9,    16,    26,
      33,    44,    45,    50,    51,    52,    57,    58,    59,    60,
      61,    65,    66,    67,    72,    73,    78,    82,    90,    91,
      96,    97,    98,   104,   109,   117,   118,    10,    16,    22,
      28,    38,    39,    47,    58,    70,    78,    86,    93,   103,
     105,   111,   115,   119,   134,   141,   142,   143,   147,   148,
       7,    14,    20,    28,    29,     8,    22,    36,    48,    56,
      70,    71,    72,    73,    74,    87,    88,    93,    94,    98,
      99,     7,    21,    25,    32,    43,    44,    50,    51,     9,
      19,     2,     7,    14,    24,    25,    32,     3,    10,    17,
      24,    31,    38,    45,    52,    61,    61,    63,    64,     6,
       8,    21,    34,    52,    74,    75,    76,    77,    11,    24,
      37,    54,    55,    56,    61,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "POWER_OF", "LESS_EQUALS",
  "GREATER_EQUALS", "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS",
  "ACTION", "ADD_P", "ADMIN", "AFTER", "AGGREGATE", "ALIAS_P", "ALL",
  "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY",
  "AS", "ASC_P", "ASSERTION", "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH",
  "ATTRIBUTE", "AUTHORIZATION", "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN",
  "BIGINT", "BINARY", "BIT", "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P",
  "CALLED", "CASCADE", "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN",
  "CHAR_P", "CHARACTER", "CHARACTERISTICS", "CHECK_P", "CHECKPOINT",
  "CLASS", "CLOSE", "CLUSTER", "COALESCE", "COLLATE", "COLLATION",
  "COLUMN", "COLUMNS", "COMMENT", "COMMENTS", "COMMIT", "COMMITTED",
  "COMPRESSION", "CONCURRENTLY", "CONFIGURATION", "CONFLICT", "CONNECTION",
  "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P", "CONVERSION_P",
  "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE", "CURRENT_P",
  "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE", "CURRENT_SCHEMA",
  "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER", "CURSOR", "CYCLE",
  "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT",
  "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE",
  "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXPORT_STATE", "EXTENSION", "EXTERNAL",
  "EXTRACT", "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "GROUPING_ID", "HANDLER", "HAVING",
  "HEADER_P", "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P",
  "IGNORE_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P",
  "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT",
  "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P",
  "INSENSITIVE", "INSERT", "INSTALL", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "JSON", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P",
  "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT",
  "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION",
  "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P", "MICROSECONDS_P",
  "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE",
  "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL",
  "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING",
  "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC",
  "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY",
  "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P",
  "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER",
  "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD",
  "PERCENT", "PLACING", "PLANS", "POLICY", "POSITION", "PRAGMA_P",
  "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE", "PRIMARY",
  "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUALIFY", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN",
  "RECHECK", "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH",
  "REINDEX", "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE",
  "REPLICA", "RESET", "RESPECT_P", "RESTART", "RESTRICT", "RETURNING",
  "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW",
  "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL",
  "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE",
  "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET",
  "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP",
  "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P",
  "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE",
  "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
  "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
  "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'{'", "'}'", "'#'", "'?'",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list",
  "set_clause_list_opt_comma", "index_params", "set_target",
  "CreateTypeStmt", "opt_enum_val_list", "enum_val_list", "PragmaStmt",
  "CreateSeqStmt", "OptSeqOptList", "ExecuteStmt", "execute_param_clause",
  "AlterSeqStmt", "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem",
  "opt_by", "SignedIconst", "TransactionStmt", "opt_transaction",
  "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "columnList_opt_comma",
  "func_type", "ConstraintElem", "TableElementList", "key_match",
  "TableLikeClause", "OptTemp", "generated_when", "DropStmt",
  "drop_type_any_name", "drop_type_name", "any_name_list",
  "opt_drop_behavior", "drop_type_name_on_any_name", "type_name_list",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_list_opt_comma", "group_by_item",
  "empty_grouping_set", "rollup_clause", "cube_clause",
  "grouping_sets_clause", "grouping_or_grouping_id", "having_clause",
  "qualify_clause", "for_locking_clause", "opt_for_locking_clause",
  "for_locking_items", "for_locking_item", "for_locking_strength",
  "locked_rels_list", "opt_nowait_or_skip", "values_clause",
  "values_clause_opt_comma", "from_clause", "from_list",
  "from_list_opt_comma", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "export_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "dict_arguments_opt_comma", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "expr_list_opt_comma", "opt_expr_list_opt_comma", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list_opt_comma",
  "target_list", "target_list_opt_comma", "target_el", "except_list",
  "opt_except_list", "replace_list_el", "replace_list",
  "replace_list_opt_comma", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name_list_opt_comma", "name",
  "attr_name", "func_name", "AexprConst", "Iconst", "Sconst", "ColId",
  "ColIdOrString", "type_function_name", "function_name_token",
  "type_name_token", "any_name", "attrs", "opt_name_list", "param_name",
  "ColLabel", "ColLabelOrString", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt",
  "IndexStmt", "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    60,    62,    61,   739,    43,    45,
      42,    47,    37,    94,   740,    91,    93,    40,    41,    46,
      59,    44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   507,   508,   509,   509,   510,   510,   510,   510,   510,
     510,   510,   510,   510,   510,   510,   510,   510,   510,   510,
     510,   510,   510,   510,   510,   510,   510,   510,   510,   510,
     510,   510,   510,   510,   510,   510,   510,   510,   510,   510,
     511,   511,   511,   511,   511,   511,   511,   511,   512,   512,
     513,   513,   514,   514,   514,   514,   515,   515,   516,   516,
     516,   516,   516,   516,   516,   516,   516,   516,   516,   516,
     516,   516,   516,   516,   516,   516,   516,   516,   516,   516,
     516,   516,   516,   516,   516,   516,   516,   517,   517,   518,
     518,   518,   518,   519,   519,   520,   521,   521,   521,   522,
     522,   522,   522,   523,   523,   523,   523,   523,   523,   523,
     523,   523,   523,   523,   523,   523,   524,   524,   525,   526,
     526,   526,   526,   526,   527,   527,   528,   528,   528,   529,
     529,   530,   531,   531,   532,   532,   532,   533,   533,   533,
     534,   534,   535,   535,   536,   536,   537,   537,   538,   538,
     539,   539,   540,   540,   541,   541,   542,   542,   543,   544,
     544,   545,   545,   546,   546,   547,   547,   547,   548,   548,
     549,   549,   550,   550,   550,   551,   551,   552,   552,   553,
     553,   554,   554,   554,   555,   555,   555,   555,   556,   556,
     556,   556,   556,   556,   556,   556,   556,   556,   556,   556,
     556,   556,   557,   557,   558,   558,   558,   559,   559,   559,
     559,   559,   559,   560,   560,   560,   561,   561,   561,   562,
     562,   563,   563,   563,   563,   563,   563,   564,   564,   565,
     566,   566,   566,   566,   566,   567,   567,   567,   567,   568,
     568,   568,   568,   568,   568,   568,   568,   568,   569,   570,
     571,   571,   571,   571,   571,   572,   572,   573,   573,   573,
     573,   574,   575,   575,   576,   576,   577,   577,   577,   577,
     577,   577,   577,   577,   578,   578,   579,   580,   580,   580,
     580,   581,   581,   581,   581,   582,   583,   583,   583,   584,
     585,   585,   585,   585,   585,   585,   586,   587,   587,   588,
     588,   589,   590,   590,   590,   591,   591,   592,   592,   593,
     593,   593,   594,   595,   595,   596,   596,   597,   598,   598,
     598,   598,   599,   599,   600,   600,   601,   601,   601,   602,
     602,   602,   602,   602,   602,   603,   603,   604,   604,   604,
     604,   605,   606,   606,   606,   606,   606,   606,   606,   606,
     607,   607,   608,   608,   608,   608,   608,   608,   608,   608,
     609,   609,   609,   609,   609,   609,   609,   609,   609,   609,
     609,   609,   609,   609,   609,   609,   610,   610,   610,   610,
     610,   610,   610,   611,   611,   612,   612,   612,   613,   613,
     613,   614,   614,   615,   615,   616,   616,   617,   617,   618,
     619,   619,   620,   620,   621,   621,   622,   622,   623,   623,
     624,   624,   625,   625,   626,   626,   627,   627,   627,   627,
     627,   628,   629,   629,   630,   630,   631,   631,   632,   632,
     632,   632,   632,   632,   632,   632,   632,   632,   632,   632,
     632,   632,   633,   634,   634,   634,   635,   635,   636,   636,
     637,   637,   638,   638,   638,   638,   638,   638,   638,   638,
     639,   639,   640,   640,   640,   640,   640,   640,   640,   641,
     641,   641,   642,   642,   643,   644,   644,   645,   645,   645,
     645,   645,   645,   645,   645,   645,   646,   646,   647,   647,
     647,   648,   648,   649,   649,   650,   650,   650,   651,   651,
     652,   652,   652,   653,   653,   654,   654,   655,   655,   655,
     656,   656,   656,   657,   657,   657,   657,   658,   658,   659,
     659,   659,   659,   660,   660,   661,   661,   661,   661,   661,
     661,   662,   662,   663,   663,   664,   664,   664,   664,   665,
     666,   666,   667,   667,   668,   668,   668,   668,   668,   669,
     670,   670,   670,   671,   671,   672,   672,   673,   673,   674,
     674,   674,   674,   675,   675,   676,   676,   677,   677,   677,
     677,   677,   678,   679,   680,   681,   682,   682,   683,   683,
     684,   684,   685,   685,   686,   686,   687,   687,   688,   689,
     689,   689,   689,   690,   690,   691,   691,   691,   692,   692,
     693,   693,   694,   694,   695,   695,   696,   696,   697,   697,
     697,   697,   697,   697,   697,   698,   698,   698,   698,   698,
     698,   699,   699,   699,   699,   700,   700,   701,   701,   701,
     701,   701,   702,   702,   702,   702,   703,   703,   704,   704,
     705,   705,   705,   705,   706,   706,   707,   708,   708,   709,
     709,   710,   710,   711,   711,   712,   712,   713,   714,   714,
     715,   715,   716,   716,   717,   717,   717,   717,   717,   717,
     717,   717,   718,   718,   718,   719,   719,   719,   719,   719,
     719,   719,   720,   720,   720,   720,   721,   722,   722,   723,
     723,   723,   723,   723,   723,   723,   723,   723,   723,   723,
     724,   724,   725,   725,   726,   726,   727,   728,   729,   729,
     730,   730,   731,   732,   733,   733,   733,   733,   733,   733,
     734,   734,   735,   735,   735,   735,   736,   737,   737,   737,
     738,   738,   739,   739,   740,   740,   741,   741,   742,   742,
     743,   743,   744,   744,   745,   745,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   748,   748,   748,   748,   748,   748,   748,   748,   748,
     748,   748,   748,   748,   748,   748,   748,   748,   748,   748,
     748,   748,   748,   748,   748,   749,   749,   749,   749,   749,
     749,   749,   749,   749,   749,   749,   749,   750,   750,   750,
     750,   750,   750,   750,   751,   751,   752,   752,   753,   753,
     753,   753,   753,   753,   753,   753,   753,   753,   753,   753,
     753,   753,   753,   753,   753,   753,   753,   753,   753,   753,
     753,   753,   753,   753,   753,   753,   753,   754,   754,   755,
     755,   756,   756,   757,   757,   758,   758,   759,   760,   760,
     760,   761,   762,   762,   763,   763,   764,   764,   764,   765,
     765,   766,   766,   766,   766,   766,   767,   767,   768,   768,
     769,   770,   770,   771,   771,   772,   772,   772,   773,   773,
     774,   774,   774,   774,   774,   774,   774,   774,   774,   774,
     774,   774,   774,   775,   775,   776,   776,   777,   777,   777,
     777,   777,   777,   777,   777,   778,   778,   779,   779,   780,
     780,   781,   781,   782,   782,   783,   783,   783,   784,   784,
     785,   785,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   787,   787,   788,   789,   789,   790,   790,   790,
     790,   790,   790,   791,   792,   793,   793,   793,   794,   794,
     795,   796,   796,   797,   798,   798,   799,   799,   800,   800,
     801,   801,   801,   802,   802,   803,   803,   804,   804,   805,
     805,   806,   806,   807,   807,   808,   808,   809,   809,   809,
     809,   809,   810,   810,   811,   811,   812,   813,   813,   814,
     814,   815,   815,   815,   816,   816,   817,   817,   818,   818,
     819,   819,   820,   821,   822,   822,   823,   823,   823,   823,
     823,   823,   823,   823,   823,   823,   823,   823,   823,   823,
     824,   825,   826,   826,   826,   827,   827,   828,   828,   828,
     829,   829,   829,   830,   830,   830,   831,   831,   832,   832,
     833,   833,   834,   835,   835,   835,   835,   836,   836,   837,
     838,   838,   839,   839,   839,   839,   840,   840,   841,   841,
     842,   842,   842,   842,   843,   843,   844,   845,   845,   846,
     846,   847,   847,   848,   848,   849,   849,   850,   850,   850,
     850,   850,   850,   851,   851,   852,   853,   854,   854,   854,
     854,   855,   855,   856,   856,   856,   857,   857,   857,   857,
     857,   858,   858,   858,   859,   859,   860,   860,   861,   861,
     862,   862,   862,   862,   863,   864,   864,   865,   865,   865,
     865,   866,   866,   866,   866,   867,   867,   867,   867,   868,
     868,   869,   869,   869,   869,   869,   869,   869,   870,   870,
     871,   871,   871,   872,   872,   873,   873,   873,   873,   873,
     874,   874,   874,   874,   874,   875,   875,   876,   876,   877,
     877,   878,   879,   879,   879,   880,   880,   881,   881,   882,
     882,   883,   884,   884,   885,   885,   885,   886,   886,   886,
     886,   886,   886,   886,   886,   887,   887,   888,   888,   889,
     890,   890,   890,   890,   891,   891,   891,   891,   892,   892,
     892,   893,   893,   893,   894,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     2,
       3,     2,     3,     6,     6,     8,     6,     8,     6,     8,
       6,     8,     8,    10,     8,    10,     1,     0,     7,     1,
       4,     4,     7,     2,     1,     3,     4,     3,     0,     1,
       0,     2,     3,     5,     8,     5,     0,     5,     5,     7,
       2,     0,     1,     1,     1,     3,     2,     0,     1,     0,
       1,     3,     1,     3,     1,     2,     1,     3,     2,     8,
       6,     1,     0,     1,     3,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,    11,     0,
       2,     1,     1,     1,     1,     1,     1,     3,     0,     1,
       2,     1,     1,     2,     2,     3,     1,     1,     2,     2,
       1,     2,     3,     5,     3,     2,     5,     5,     2,     3,
       1,     1,     2,     2,     0,     4,     0,     3,     4,     4,
       0,     3,     2,     0,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     3,     1,     2,     2,
       2,     2,     2,     2,     0,     3,     3,     3,     0,     1,
       2,     1,     2,     2,     2,     2,     4,     1,     3,     1,
       3,     1,     1,     1,     1,     3,     1,     2,     0,     1,
       2,     0,     1,     3,     0,     2,     0,     3,     3,     1,
       5,     3,     1,     3,     1,     2,     1,     4,     5,     5,
       6,     3,     7,     4,    11,     1,     3,     2,     2,     2,
       0,     3,     1,     1,     2,     2,     2,     2,     1,     0,
       1,     2,     6,     4,     6,     4,     6,     8,     4,     6,
       1,     1,     1,     1,     2,     1,     2,     1,     2,     1,
       1,     1,     3,     3,     3,     3,     2,     2,     1,     3,
       1,     1,     1,     1,     3,     1,     1,     0,     1,     1,
       1,     1,     3,     8,     7,     1,     1,     2,     3,     8,
      11,     9,     1,     1,     3,     0,     1,     3,     1,     0,
       1,     0,     1,     0,     1,     3,     1,     1,     1,     3,
       0,     2,     2,     0,     2,     0,     1,     0,     1,     1,
       1,     3,     3,     1,     1,     3,     3,     3,     3,     4,
       3,     2,     1,     1,     1,     1,     1,     3,     1,     1,
       3,     3,     1,     2,     4,     4,     2,     3,     5,     5,
       1,     1,    11,    11,     1,     2,     4,     4,     4,     2,
       2,     3,     1,     3,     6,     2,     0,     3,     3,     4,
       4,     4,     4,     3,     2,     1,     1,     0,     1,     1,
       0,     1,     5,     1,     0,     2,     2,     0,     1,     0,
       3,     5,     5,     1,     3,     4,     3,     1,     1,     0,
       2,     2,     0,     2,     2,     1,     1,     1,     0,     2,
       4,     5,     4,     2,     3,     2,     2,     2,     2,     1,
       2,     3,     0,     1,     0,     5,     1,     4,     6,     2,
       1,     0,     4,     0,     1,     1,     2,     2,     2,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     3,
       3,     3,     0,     1,     3,     1,     2,     1,     1,     1,
       1,     1,     2,     4,     4,     5,     1,     1,     2,     0,
       2,     0,     1,     3,     1,     0,     1,     2,     3,     2,
       4,     2,     3,     2,     0,     1,     2,     0,     4,     5,
       1,     2,     2,     0,     1,     3,     1,     2,     3,     3,
       3,     3,     3,     1,     4,     3,     4,     5,     4,     5,
       4,     5,     2,     4,     1,     1,     0,     1,     4,     5,
       4,     0,     2,     2,     2,     1,     1,     0,     4,     2,
       1,     2,     2,     4,     2,     6,     2,     1,     3,     4,
       0,     2,     0,     2,     0,     1,     3,     3,     2,     0,
       2,     4,     1,     1,     2,     3,     5,     6,     2,     3,
       5,     5,     3,     4,     0,     1,     1,     1,     1,     1,
       2,     4,     1,     1,     1,     1,     2,     3,     0,     1,
       1,     1,     1,     1,     2,     2,     2,     2,     2,     1,
       3,     0,     1,     1,     1,     1,     5,     2,     1,     1,
       1,     1,     4,     1,     2,     2,     1,     3,     3,     2,
       1,     0,     5,     2,     5,     2,     1,     3,     3,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     0,     1,     3,     3,     5,     2,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     2,     2,     3,     3,     2,     2,     3,     3,
       5,     4,     6,     3,     5,     4,     6,     4,     6,     5,
       7,     3,     2,     4,     3,     2,     1,     3,     3,     3,
       3,     3,     4,     3,     4,     3,     4,     5,     6,     6,
       7,     6,     7,     6,     7,     3,     4,     4,     6,     1,
       4,     1,     3,     2,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     2,
       2,     5,     6,     6,     7,     1,     1,     2,     2,     2,
       4,     1,     2,     1,     2,     2,     4,     3,     6,     7,
       9,     7,     7,     4,     5,     1,     1,     1,     5,     1,
       1,     4,     1,     4,     1,     4,     1,     4,     1,     1,
       1,     1,     1,     1,     6,     6,     4,     4,     4,     4,
       6,     5,     5,     5,     4,     6,     4,     5,     0,     5,
       0,     1,     0,     2,     0,     1,     3,     3,     2,     2,
       0,     6,     1,     0,     3,     0,     2,     2,     0,     1,
       4,     2,     2,     2,     2,     2,     4,     3,     1,     5,
       3,     1,     3,     1,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     1,     4,     1,     4,     1,
       2,     1,     2,     1,     2,     1,     3,     1,     3,     1,
       2,     1,     0,     1,     3,     1,     3,     3,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     3,     2,     3,     0,     3,     3,     2,
       2,     1,     0,     2,     2,     3,     2,     1,     1,     3,
       5,     1,     2,     4,     2,     0,     1,     0,     1,     2,
       2,     3,     5,     1,     0,     1,     2,     0,     2,     1,
       0,     1,     0,     1,     3,     1,     2,     3,     2,     1,
       3,     5,     4,     2,     1,     0,     3,     1,     3,     1,
       2,     4,     2,     0,     1,     3,     1,     2,     1,     3,
       1,     2,     1,     1,     1,     2,     1,     1,     2,     1,
       1,     2,     7,     2,     5,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     5,
       3,     0,     1,     1,     1,     1,     4,     7,     2,     0,
       1,     1,     1,     1,    13,    16,     1,     2,     0,     1,
       0,     1,     0,     2,     0,     1,     0,     6,     8,     6,
       8,     6,     8,     2,     1,     4,     3,     2,     4,     3,
       5,     1,     0,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     3,     3,
       3,     1,     3,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     3,
       2,     2,     3,     1,     1,     4,     5,     5,     4,     6,
       1,     1,     1,     1,     1,     1,     0,     1,     3,     1,
       0,     7,     1,     2,     3,     2,     0,     2,     0,     2,
       4,     2,     1,     1,     1,     2,     3,     2,     2,     2,
       2,     3,     4,     2,     1,     1,     1,     1,     3,     2,
       9,    11,    12,    14,     3,     4,     4,     0,     7,    10,
       9,     2,     3,     0,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     130,   215,     0,  1179,  1178,   215,     0,  1154,   215,   427,
     349,     0,  1256,     0,   215,     0,   130,     0,     0,     0,
       0,     0,     0,     0,     0,   215,   494,     0,  1255,   215,
       0,     0,  1226,     0,     0,     0,     0,     0,     2,     4,
       7,    18,    30,    26,     0,    17,    28,    15,    21,     6,
      32,    16,    20,    13,    33,    11,    31,   461,   448,   499,
     460,   129,   600,   464,    29,    14,    25,     5,    10,    23,
      24,    22,  1162,    36,    27,    34,    19,     8,    35,    37,
    1254,     9,    38,    12,   214,   213,   207,     0,     0,     0,
       0,     0,   208,  1092,  1275,  1276,  1277,  1278,  1279,  1280,
    1281,  1282,  1283,  1284,  1285,  1286,  1287,  1288,  1289,  1290,
    1291,  1634,  1292,  1293,  1294,  1582,  1583,  1635,  1584,  1585,
    1295,  1296,  1297,  1298,  1299,  1300,  1301,  1302,  1586,  1587,
    1303,  1304,  1305,  1306,  1307,  1588,  1636,  1308,  1309,  1310,
    1311,  1312,  1313,  1637,  1314,  1315,  1316,  1317,  1318,  1319,
    1320,  1321,  1322,  1638,  1323,  1324,  1325,  1639,  1326,  1327,
    1328,  1329,  1330,  1331,  1332,  1589,  1590,  1333,  1334,  1335,
    1336,  1337,  1338,  1339,  1340,  1341,  1342,  1343,  1344,  1345,
    1346,  1347,  1348,  1349,  1350,  1351,  1352,  1353,  1354,  1355,
    1356,  1357,  1358,  1359,  1360,  1591,  1361,  1362,  1363,  1364,
    1365,  1592,  1366,  1367,  1368,  1593,  1369,  1370,  1371,  1640,
    1641,  1372,  1373,  1374,  1642,  1375,  1376,  1594,  1595,  1377,
    1378,  1379,  1380,  1381,  1382,  1383,  1384,  1643,  1385,  1386,
    1387,  1388,  1389,  1390,  1391,  1392,  1393,  1394,  1395,  1644,
    1596,  1396,  1397,  1398,  1399,  1400,  1597,  1598,  1599,  1401,
    1645,  1646,  1402,  1647,  1403,  1404,  1405,  1406,  1407,  1408,
    1409,  1648,  1410,  1649,  1411,  1412,  1413,  1414,  1415,  1416,
    1417,  1418,  1600,  1419,  1420,  1421,  1422,  1423,  1424,  1425,
    1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  1434,  1435,
    1436,  1601,  1651,  1602,  1437,  1438,  1439,  1603,  1440,  1441,
    1652,  1442,  1604,  1443,  1605,  1444,  1445,  1446,  1447,  1448,
    1449,  1450,  1451,  1452,  1606,  1653,  1453,  1654,  1607,  1454,
    1455,  1456,  1457,  1458,  1459,  1460,  1461,  1462,  1463,  1464,
    1465,  1608,  1466,  1467,  1609,  1468,  1469,  1470,  1471,  1472,
    1473,  1474,  1475,  1476,  1477,  1478,  1479,  1610,  1480,  1481,
    1482,  1483,  1484,  1485,  1486,  1487,  1488,  1489,  1490,  1491,
    1492,  1493,  1494,  1495,  1496,  1497,  1498,  1655,  1499,  1500,
    1501,  1611,  1502,  1503,  1504,  1505,  1506,  1507,  1508,  1509,
    1510,  1511,  1512,  1513,  1514,  1515,  1516,  1517,  1518,  1612,
    1519,  1520,  1521,  1656,  1522,  1523,  1613,  1524,  1525,  1526,
    1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1614,
    1536,  1615,  1537,  1538,  1539,  1540,  1658,  1541,  1542,  1543,
    1544,  1545,  1616,  1617,  1546,  1547,  1618,  1548,  1619,  1549,
    1550,  1620,  1551,  1552,  1553,  1554,  1555,  1556,  1557,  1558,
    1559,  1560,  1561,  1562,  1563,  1564,  1565,  1621,  1622,  1566,
    1659,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,
    1576,  1577,  1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,
    1631,  1632,  1633,  1578,  1579,  1580,  1581,  1259,     0,     0,
    1074,  1093,  1094,  1102,   210,   426,   130,     0,     0,     0,
       0,     0,   343,   342,     0,  1145,   348,     0,     0,  1092,
     101,  1600,  1468,  1614,    99,  1072,  1093,     0,   369,   370,
       0,   378,     0,   362,   367,   363,     0,   388,   380,   389,
     381,   361,   382,   371,   360,     0,   390,     0,   365,     0,
       0,     0,   211,   176,   349,   130,     0,  1167,  1168,  1166,
    1157,  1162,  1169,  1170,     0,  1153,     0,     0,  1091,  1213,
    1214,  1211,  1210,   165,  1121,  1243,  1616,  1546,  1257,  1244,
    1241,  1242,   212,   493,   491,     0,  1042,  1375,  1413,  1506,
    1517,  1616,  1187,  1191,     0,   209,  1621,  1248,     0,  1249,
    1096,     0,   465,   640,  1095,  1066,  1225,     0,  1230,     0,
    1482,   469,   472,  1111,   470,   461,     0,     1,   130,     0,
       0,     0,   490,   490,     0,   490,     0,   453,   461,   456,
     460,   601,  1161,  1239,  1253,  1616,  1546,  1247,  1250,  1383,
       0,     0,  1383,     0,  1383,     0,  1383,     0,     0,  1034,
       0,  1035,  1075,  1123,  1124,  1122,     0,  1125,   314,   347,
     346,   345,   344,   349,  1383,  1129,  1106,     0,   395,   396,
       0,     0,     0,     0,     0,  1140,   102,   100,   376,   377,
       0,   368,   364,   366,     0,  1103,  1660,   692,  1661,   721,
     699,   721,   721,  1662,  1663,  1664,  1665,   688,   688,  1348,
     701,  1666,  1667,  1668,  1383,  1669,  1670,   689,   690,   726,
    1671,  1672,  1673,  1674,  1675,     0,     0,  1676,   721,  1677,
     688,  1678,  1679,   693,  1680,   662,     0,  1681,   691,   663,
    1682,   729,   729,  1683,   716,  1684,   387,     0,   391,   674,
     675,   676,   677,   702,   703,   678,   708,   709,   713,   679,
     761,   688,  1104,  1105,  1383,   387,   383,  1383,   387,  1068,
    1383,     0,     0,   172,     0,     0,  1159,  1171,  1685,  1686,
    1687,  1688,  1690,  1689,  1691,  1692,  1693,  1694,  1695,  1696,
    1697,  1698,  1699,  1702,  1700,  1701,  1703,  1704,  1705,  1706,
    1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,
    1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,
    1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,
    1185,     0,  1186,  1176,  1165,  1172,  1173,   130,   425,  1212,
    1156,     0,     0,     0,     0,  1245,     0,     0,     0,  1077,
    1079,  1080,   963,  1090,  1037,     0,  1583,  1584,  1585,  1027,
       0,  1586,  1587,  1588,  1636,   892,   879,   888,   893,   880,
     882,   889,  1589,  1590,   829,  1591,  1592,  1088,  1593,  1594,
    1595,  1597,  1598,  1599,   884,   886,  1601,  1602,     0,  1089,
    1604,  1605,  1449,  1607,  1608,  1610,  1611,   890,  1613,  1615,
    1616,  1617,  1618,  1619,  1087,  1620,   891,  1622,     0,     0,
       0,  1055,   982,     0,     0,     0,  1037,   863,     0,     0,
     682,   683,   704,   705,   684,   710,   711,   685,     0,  1049,
     762,   908,  1037,   875,   938,   806,     0,   861,   855,  1045,
     476,  1043,     0,   856,  1076,  1037,  1028,   476,  1041,  1190,
    1188,  1194,  1189,     0,     0,     0,     0,     0,   642,   641,
    1067,  1224,  1222,  1223,  1221,  1220,  1227,     0,  1229,  1162,
     977,   979,     0,  1028,   471,     0,     0,     0,   451,   450,
       3,     0,     0,  1232,     0,   488,   489,     0,     0,     0,
       0,     0,     0,     0,     0,   585,   515,   516,   518,   582,
     586,   594,     0,   457,     0,  1111,  1251,     0,     0,     0,
     117,   117,     0,     0,     0,     0,     0,    93,    42,    86,
       0,     0,     0,     0,   190,   203,     0,     0,     0,     0,
       0,   200,     0,     0,   183,    44,   177,   179,     0,   117,
       0,    40,     0,     0,     0,    46,  1092,     0,  1634,  1635,
    1636,  1637,  1638,   893,     0,  1640,  1641,  1642,  1643,  1644,
    1645,  1646,  1647,  1648,  1649,  1600,  1651,  1652,  1653,  1654,
    1655,  1656,  1614,  1658,  1620,     0,  1659,     0,   867,   985,
     499,   983,  1112,     0,  1093,  1099,  1033,     0,  1113,  1764,
    1765,  1766,  1767,  1768,  1769,  1770,  1771,  1772,  1773,  1774,
    1775,  1776,  1777,  1778,  1779,  1780,  1781,  1782,  1783,  1784,
    1785,  1786,  1787,  1788,  1789,  1790,  1791,  1792,  1793,  1794,
    1795,  1796,  1797,  1798,  1799,  1800,  1801,  1802,  1803,  1804,
    1805,  1806,  1807,  1808,  1809,  1810,  1811,  1812,  1813,  1814,
    1815,  1816,  1817,  1818,  1819,  1820,  1821,  1822,  1823,  1824,
    1825,  1826,  1827,  1828,  1829,  1830,  1831,  1832,  1833,  1834,
    1835,  1836,  1724,  1837,  1838,  1839,  1840,  1841,  1030,  1073,
    1115,  1114,  1116,  1036,     0,     0,   423,     0,     0,  1126,
       0,  1107,     0,     0,  1383,   171,  1383,   314,     0,   314,
       0,  1139,  1142,   379,   375,   373,   372,   374,   720,   707,
     715,   714,     0,   697,   696,   695,     0,   694,     0,     0,
     721,   721,   719,   698,   674,     0,     0,     0,   725,     0,
     723,   385,   386,     0,   358,     0,   668,   664,     0,   734,
     735,   736,   737,   744,   745,   742,   743,   738,   739,   732,
     733,   740,   741,   730,   731,     0,   746,   747,   748,   749,
     750,   751,   752,   753,   680,   686,     0,     0,   353,     0,
       0,   355,     0,     0,     0,   349,     0,   130,     0,   184,
    1181,  1182,  1180,     0,     0,  1164,   187,   204,  1175,  1184,
    1174,  1183,  1163,  1158,     0,  1155,   414,  1200,  1199,  1208,
     166,     0,   988,     0,   130,  1246,  1258,     0,   859,   982,
    1026,     0,     0,     0,     0,     0,     0,   865,   991,     0,
       0,   786,     0,     0,     0,  1006,     0,  1012,     0,     0,
       0,   787,   766,   767,     0,  1054,  1063,   981,     0,   863,
     977,     0,   941,   943,     0,  1095,     0,   857,   858,   864,
       0,  1083,     0,   761,   761,  1048,   963,     0,     0,   956,
     960,   961,   962,     0,     0,     0,  1040,     0,   971,   973,
       0,     0,   802,   969,     0,   805,     0,     0,     0,     0,
     957,   958,   959,   950,   951,   952,   953,   954,   955,   967,
     949,   783,     0,     0,   910,   862,     0,   782,  1046,     0,
     603,     0,  1081,  1078,     0,  1029,   603,  1202,  1206,  1207,
    1205,     0,  1201,  1193,  1192,  1197,  1195,  1198,  1196,     0,
    1218,     0,  1215,   980,   598,   473,     0,     0,  1238,     0,
     124,     0,  1233,     0,   468,   467,   509,   509,   500,   503,
     509,   466,   557,   558,     0,     0,     0,     0,   591,   589,
    1077,  1090,   545,   519,   544,     0,     0,   523,     0,   549,
     762,   584,   455,   513,   514,   517,   454,     0,   587,     0,
     597,   585,   518,     0,  1240,  1252,     0,     0,     0,     0,
       0,  1383,     0,     0,    77,    58,   265,     0,   116,     0,
       0,     0,     0,     0,     0,     0,    85,    82,    83,    84,
       0,     0,     0,     0,   188,   189,   202,     0,   193,   194,
     191,   195,   196,     0,     0,   181,   182,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,     0,     0,
     499,   499,   499,   873,     0,   497,   498,     0,     0,  1031,
    1034,   413,   322,     0,   312,     0,     0,     0,     0,     0,
       0,   349,  1132,  1130,  1128,  1131,  1133,  1108,     0,     0,
       0,     0,     0,   168,   170,     0,   311,   284,     0,  1144,
       0,     0,  1383,  1141,   301,     0,     0,     0,     0,   387,
       0,   718,   717,   669,   665,     0,     0,     0,     0,   392,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     387,   384,   387,  1069,     0,   387,   175,     0,  1383,   314,
       0,  1160,  1177,   185,   205,   186,   206,   446,     0,   420,
     428,   433,   411,     0,   411,     0,   430,   434,   411,   429,
     411,   424,     0,   167,     0,  1120,     0,  1119,     0,  1038,
       0,     0,  1025,  1021,     0,     0,     0,     0,     0,   992,
     993,   994,   995,   996,   997,   998,   999,  1000,     0,     0,
    1001,     0,     0,     0,   948,   956,   960,   961,   962,   957,
     958,   959,   950,   951,   952,   953,   954,   955,   975,     0,
       0,     0,     0,     0,     0,     0,     0,   831,     0,     0,
     937,     0,   977,  1011,     0,     0,     0,     0,     0,     0,
     977,  1017,     0,     0,     0,  1053,     0,  1050,   808,  1037,
       0,   944,   807,     0,     0,     0,  1085,  1086,   763,   809,
     774,   778,   779,   780,   784,  1118,  1117,  1047,     0,  1039,
       0,     0,   764,   788,   793,     0,  1018,   825,     0,   813,
       0,   801,     0,   811,   815,   789,   804,     0,   785,     0,
    1040,   972,   974,     0,   970,     0,   775,   776,   777,   768,
     769,   770,   771,   772,   773,   781,   947,   945,   946,     0,
       0,     0,   912,     0,     0,   810,  1044,  1375,  1413,     0,
     487,   487,   487,   475,   485,     0,   654,   499,  1055,   654,
       0,   761,   643,  1111,  1228,  1216,  1217,   978,  1110,   130,
       0,  1236,     0,     0,     0,   136,   119,     0,  1234,     0,
     152,   154,   603,     0,  1037,   507,   508,   512,   512,     0,
       0,   512,  1611,  1502,     0,     0,     0,     0,   550,   592,
       0,   583,   547,   548,     0,   546,  1077,   551,  1076,   552,
     555,   556,   524,   593,  1064,   595,     0,   588,   459,   458,
     599,     0,    43,     0,  1383,    60,     0,     0,     0,     0,
       0,     0,   219,   256,   219,    98,  1383,   387,  1383,   387,
    1279,  1349,  1518,     0,    56,    89,     0,   289,   110,     0,
     274,   319,    79,    94,   103,     0,     0,    45,   178,   192,
     197,   106,   201,   198,  1149,   199,   117,     0,    41,     0,
     104,     0,  1147,     0,     0,    47,   108,  1151,   497,   497,
     497,     0,   984,     0,     0,     0,   986,   987,  1033,     0,
     412,     0,   313,     0,   422,   402,   403,   413,     0,   314,
       0,   314,  1129,     0,     0,  1109,   160,   162,     0,     0,
       0,     0,   304,   302,   335,     0,   309,   303,   312,     0,
       0,   260,     0,  1273,     0,     0,   397,     0,     0,     0,
       0,     0,   687,   700,   359,   674,     0,   728,   727,   729,
     729,   674,     0,   660,     0,   672,     0,   712,   681,   754,
     755,   756,   757,   758,   759,   760,   352,   354,     0,   356,
       0,     0,     0,   415,     0,   418,     0,   417,   421,   416,
     410,     0,   441,     0,     0,     0,     0,     0,     0,  1209,
     989,   492,   830,     0,     0,  1022,     0,     0,   906,     0,
     881,   883,   896,     0,   885,   887,     0,   964,     0,     0,
       0,   897,   833,   834,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   850,   849,   898,   936,     0,     0,  1009,  1010,
       0,   899,     0,     0,  1016,     0,     0,     0,   904,     0,
    1070,     0,     0,     0,  1062,   860,   978,   942,   940,   866,
     761,     0,     0,     0,     0,     0,     0,     0,   814,   803,
       0,   812,   816,     0,     0,     0,   797,     0,     0,   795,
     826,   791,     0,     0,   827,     0,     0,   911,   920,   487,
     487,   487,   487,   484,   486,     0,     0,     0,     0,  1502,
       0,   626,   606,   602,   604,   613,   626,   631,   876,   652,
     877,  1095,     0,   562,   497,  1063,   562,     0,  1203,  1219,
       0,  1237,     0,   141,   123,   143,   142,     0,   150,     0,
    1037,     0,   141,   125,     0,   144,   155,  1236,     0,   158,
       0,   501,   502,   504,     0,   965,   512,   506,   554,   553,
       0,   522,   590,   520,     0,   596,     0,     0,     0,   264,
       0,     0,     0,   219,     0,   324,     0,   331,     0,   316,
      78,     0,     0,     0,    52,    97,    70,    62,    48,    76,
       0,     0,    81,     0,    74,    91,    92,    90,    95,     0,
     248,   229,   261,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   499,
     495,   496,   868,  1032,   444,   445,   183,   443,   323,     0,
       0,   311,     0,  1144,  1127,   349,     0,     0,   161,   163,
       0,   171,   314,     0,   288,   284,   310,   282,   281,   283,
       0,  1274,   176,     0,  1268,  1143,     0,   398,     0,   394,
       0,  1138,   706,   671,     0,   724,   722,   670,     0,   666,
     673,   387,     0,   447,     0,   406,   442,   431,   436,     0,
     440,   438,   437,   432,   435,     0,  1024,  1020,     0,   878,
     990,     0,   976,  1004,  1003,   832,   841,   845,   846,   847,
    1005,     0,     0,     0,   842,   843,   844,   835,   836,   837,
     838,   839,   840,   848,  1014,  1013,  1007,  1008,     0,   901,
     902,   903,  1015,     0,  1071,  1052,   977,  1057,  1059,     0,
       0,   939,  1084,   765,     0,     0,   794,  1019,   817,     0,
       0,     0,   790,   964,     0,     0,     0,     0,     0,   799,
       0,     0,     0,     0,   874,     0,     0,     0,     0,   478,
     477,   483,   626,   631,     0,   461,     0,   613,     0,   625,
     541,   624,   607,     0,   637,   635,     0,   637,     0,   637,
       0,   541,     0,   627,   541,   624,     0,   644,  1067,   653,
       0,   579,     0,  1051,   579,     0,   474,  1235,     0,  1231,
       0,     0,     0,   131,   128,   118,     0,     0,   153,   141,
     132,   510,   511,     0,   505,   521,  1065,   111,   219,     0,
       0,    59,     0,   333,   276,   325,   308,   291,     0,     0,
       0,   220,     0,   296,     0,    51,    71,     0,    67,     0,
      96,     0,     0,     0,     0,     0,    54,    66,     0,    49,
       0,   387,   387,    57,   275,  1103,  1660,  1661,  1662,  1663,
    1664,  1665,  1666,  1667,  1668,  1669,  1670,  1671,  1672,  1673,
    1674,  1675,  1753,  1676,   226,  1677,  1449,  1678,  1679,  1680,
       0,  1681,   663,  1682,  1683,  1684,   950,   951,   224,   318,
     221,   326,   223,   225,     0,  1104,   222,   321,   107,  1150,
       0,   105,     0,  1148,   114,   112,   109,  1152,   871,   872,
     869,   497,   425,   405,     0,     0,  1273,     0,     0,  1383,
       0,   159,     0,  1144,   169,   311,     0,   341,   260,   336,
       0,  1273,  1271,     0,  1267,   393,     0,     0,     0,   667,
     661,   357,     0,   419,     0,   439,  1023,   894,   905,  1002,
       0,     0,     0,     0,   900,   895,  1060,  1061,  1056,   823,
     821,   818,     0,   819,   798,     0,     0,   796,   792,     0,
     828,   907,     0,   923,   918,   919,   482,   481,   480,   479,
     612,   610,     0,   615,  1095,   622,   534,   540,   611,     0,
     605,     0,   636,   632,     0,   633,     0,     0,   634,     0,
     608,     0,  1095,   609,     0,   651,     0,     0,   914,   868,
     914,  1204,   140,   120,     0,   121,   151,     0,     0,     0,
       0,   145,   399,     0,   329,    61,     0,   308,     0,   219,
     293,   292,   295,   290,   294,   297,     0,     0,     0,     0,
       0,   277,     0,     0,     0,   240,     0,     0,   308,     0,
     315,   236,   237,   350,     0,     0,     0,    63,    53,    50,
      55,    64,     0,     0,    65,    68,   659,    80,    73,  1753,
    1760,     0,     0,     0,     0,     0,     0,   401,   408,   183,
       0,     0,   284,  1270,     0,     0,     0,   311,   164,     0,
       0,     0,  1273,     0,     0,   216,     0,   257,     0,   173,
    1272,     0,  1260,     0,  1136,  1137,     0,     0,   407,   851,
       0,     0,     0,  1058,   820,   824,   822,   800,   909,   925,
     922,   647,     0,   650,   614,     0,     0,   529,   536,     0,
     539,   533,     0,   616,     0,     0,   618,   620,     0,     0,
       0,   655,     0,     0,     0,  1072,   560,  1324,  1594,  1501,
     561,     0,   565,   559,   563,   568,   570,   569,   571,   567,
     578,     0,   581,  1082,   581,     0,     0,     0,     0,   156,
       0,   147,   147,     0,   133,   966,     0,   219,     0,   307,
     330,   255,     0,     0,   238,     0,   245,     0,   279,   280,
     278,   239,   308,   314,   241,     0,   351,     0,    72,     0,
      88,     0,     0,   320,   115,   113,   870,   425,     0,  1144,
     260,  1267,     0,     0,     0,   284,   176,  1269,   273,   266,
     267,   268,   269,   270,   271,   272,   287,   286,   258,   259,
       0,     0,     0,  1138,     0,   852,     0,   853,     0,   499,
     652,     0,     0,   646,     0,   527,   525,   528,   530,   526,
       0,     0,   623,   639,     0,   619,   617,   628,     0,   659,
       0,   630,     0,     0,     0,   572,   566,   913,   915,     0,
       0,   532,   532,     0,   127,     0,   654,     0,     0,   149,
     149,   135,     0,   314,   332,     0,   299,   306,   298,     0,
       0,   235,     0,   242,   340,   244,   228,   658,     0,    75,
       0,   327,   400,   404,     0,   218,  1261,   311,     0,  1267,
     260,  1273,     0,  1264,     0,     0,  1144,   854,     0,   928,
     645,   648,     0,   621,     0,     0,     0,   656,   657,   629,
       0,     0,     0,   564,     0,     0,   580,     0,   463,   462,
     122,   147,   126,   157,   146,   509,   148,   509,     0,   340,
     285,     0,     0,   263,   228,     0,   254,     0,    69,    87,
     328,     0,   311,  1262,   217,   174,  1265,  1266,     0,   654,
     924,     0,     0,     0,     0,   537,     0,   543,   638,   574,
       0,   573,   916,   917,   534,   149,   512,   512,   654,   254,
     300,   305,     0,   243,   246,   337,   338,   339,     0,   250,
     247,   251,     0,  1267,     0,  1134,  1582,  1325,  1553,     0,
     926,   929,   927,   921,   649,     0,     0,   535,   575,   531,
     509,   138,   137,   134,   219,   262,     0,     0,     0,   252,
       0,   253,   227,  1263,  1144,     0,   933,   932,   931,   935,
     934,   538,     0,   512,   334,   232,     0,   231,     0,   317,
     249,   654,     0,     0,   139,   230,   234,   233,  1135,   930,
     542
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    37,    38,    39,    40,  2156,  2157,  2158,  1833,   987,
    2869,  1834,   988,   989,  2160,    41,    42,  1450,   537,  1765,
    1389,  2589,    44,  2108,  1770,  2112,  2739,  2369,  2107,  2114,
    2849,  2915,  2109,  1771,  1772,  2740,  1773,    45,  2207,  2208,
      46,    47,  1523,    48,   743,    49,  1524,  1477,  1257,  1007,
    1467,  1246,    50,    86,    51,  2147,  2459,  2928,  2170,  3019,
    2620,  2621,  1835,  2969,  2970,  2149,  2221,  1459,  2963,  1902,
    2796,  1839,  1822,  2622,  1911,  2749,  2497,  1836,  2401,  1903,
    2606,  2855,  1533,  1904,  2856,  2599,  1905,  1502,  1527,  2403,
    2971,  1840,  1503,  2146,  2460,  1446,  1906,  2926,  1907,   497,
    2625,    52,   529,   530,   735,  1194,   531,   716,    53,   654,
    1531,   538,    55,  1887,  2649,  2244,  2650,  1961,  1881,  1255,
    1958,  1577,  1506,  1256,   487,  1591,  2245,  2196,  1578,   539,
     887,    58,    59,    60,   578,   591,   592,  1360,  1743,  2075,
     957,   565,   566,  1875,   606,  1496,  1398,  1399,  1777,  2121,
    1425,  1426,   966,   967,  2698,  2908,  2699,  2700,  2557,  2558,
    2987,  1413,  1417,  1418,  1797,  1787,  1404,  2361,  2722,  2723,
    2724,  2725,  2726,  2727,  2728,   888,  2578,  2841,  1421,  1422,
     969,   970,   971,  1430,  1807,    62,    63,  1746,  2082,  2083,
    2084,  2085,  2339,  2340,  2354,  2350,  2563,  2706,  2086,  2087,
    2691,  2692,  2813,  2357,  2093,  2710,  2711,  2770,  1550,   717,
    1262,  1197,   719,   889,   720,  1173,   890,  1177,   722,   891,
     892,   893,   725,   894,   895,   896,   728,  1169,   897,   898,
    1188,  1216,  1217,  1218,  1219,  1220,  1221,  1222,  1223,  1224,
     940,  1646,   900,   901,   902,  2089,   903,  1354,  1732,  2068,
    2732,  2837,  2838,  2324,  2544,  2689,  2809,  2943,  2980,  2981,
     904,   905,  1302,  1303,  1304,  1729,  1349,  1350,   906,  2462,
    1352,  1639,   941,  1661,  1298,  1050,  1051,  1263,  1618,  1619,
    1642,  1990,  1649,  1654,  2018,  2019,  1662,  1697,   907,  1602,
    1603,  1976,  1271,   908,   631,  1057,   632,  1268,  1691,   917,
     909,   910,   911,  1295,  1296,  2034,  2298,  2299,  1667,  1803,
     583,  2030,  2702,   739,  1138,   912,   913,   914,   915,   943,
     585,  1052,   480,   731,  2916,  1151,   947,  1053,  1837,  1687,
      64,   814,   636,    65,  1149,  1514,    66,  2675,  2508,  1162,
    1535,  1915,   498,    67,    68,    69,    70,    71,   613,  1249,
     540,  1250,  1251,   801,    72,  1258,   803,   804,    73,   572,
     573,  1259,  1373,  1260,    74,   551,    75,   936,   588,   937,
     939,   542,   954,  2103,  1761,    77,    78,   559,   560,    79,
      80,   574,    81,    82,  2672,   543,  2224,  1890,   506,   482,
     483,   733,  1141,  1055,  1142
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2668
static const int yypact[] =
{
    3694,   289,    30, -2668, -2668,   289, 34594, -2668,   289,    58,
    2067, 39374, -2668,  5502,   289, 46066,   941,   233,   184,   461,
   39852, 39852, 46066, 46066, 40330,   289,   237, 46544, -2668,   289,
   24308, 36984,     6,    81, 47022, 46066,  1250,   595,   188, -2668,
   -2668, -2668, -2668, -2668,    46, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668,    93, -2668,   144,
     118,   -70,   203, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668,   212, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   23830, -2668, -2668, -2668, -2668, -2668, -2668, 40808, 46066, 41286,
   37462, 41764, -2668,   107, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668,   148, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,   149,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,   211,  -170,
   -2668,   151, -2668, -2668, -2668, -2668,  1250, 42242,   469,   479,
     432, 47500, -2668, -2668, 46066, -2668, -2668,    37,   627, -2668,
   -2668, -2668, 42720, -2668, -2668, -2668, -2668,   580, -2668, -2668,
     418, -2668,    61, -2668, -2668,   460,   419, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668,   541, -2668, 52758, -2668, 47978,
   48456, 48934, -2668,   401,   657,   445, 23352, -2668, -2668, -2668,
   -2668,   212, -2668, -2668,   927, -2668, 39852,   927, -2668, -2668,
   -2668, -2668, -2668,   324,   447, -2668,   474,   767, -2668, -2668,
   -2668,   495, -2668, -2668,   713, 10452, 10452, 49412, 49412,   927,
   49412,   532, -2668, -2668,   -19, -2668,    81, -2668,   -70,   495,
   -2668, 24787, -2668,   540,  -170, -2668, -2668,   186,   874, 13973,
   46066,   566, -2668,   551,   566,   589,   602, -2668,  3694,   953,
     895, 36984,   309,   309,  1089,   309,   800,   881, -2668,   790,
   -2668,   653, -2668, 42242, -2668,   681,   942, -2668,   495,  1018,
     765,   841,  1022,  6410,  1036,  1002,  1055,  1094,  6931, 13973,
   33160, -2668,  -170, -2668, -2668, -2668,   715, -2668,   722, -2668,
   -2668, -2668, -2668,   661,   963, -2668,   746,  1209, -2668, -2668,
     802, 43198, 43676, 42242, 42242,  1172, -2668, -2668, -2668, -2668,
     799, -2668, -2668, -2668,    78, -2668, -2668, -2668, -2668,   815,
   -2668,   815,   815, -2668, -2668, -2668, -2668,   773,   773,   969,
     793, -2668, -2668, -2668,  1144, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668,   812,   656, -2668,   815, -2668,
     773, -2668, -2668, -2668, -2668, -2668, 54147, -2668, -2668, -2668,
   -2668,  -149,   406, -2668, -2668, -2668,    45,   822, -2668,  1284,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,   829, -2668,
    2871,   773, -2668, -2668,  1176,    53, -2668,  1180,    69, -2668,
    1191,  1060, 13973, -2668,  1005,   974, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668,    81, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668,   438, -2668, -2668, 30629, -2668, -2668,   445,   854, -2668,
   -2668, 30629, 14476, 53221,  1330, -2668,  1149, 46066,   891, -2668,
   -2668, -2668, -2668, -2668, -2668,   897,  1389,   102,  1394, 13973,
     910,   102,   102,   914,  1237, -2668, -2668, -2668,   153,   938,
     945, -2668,   155,   155, -2668,   947,   961, -2668,   156,   966,
     983,  1445,  1477,   141,   993,  1008,   656,   102, 13973, -2668,
    1014,   155,  1025,  1034,  1044,  1514,  1045, -2668,  1528,  1049,
     111,   154,  1054,  1066, -2668,  1068, -2668,   157, 13973, 13973,
   13973,  1419, 13973,  7937, 42242,  1557, -2668,  -170,  1071,   927,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,   146,  2758,
   -2668,  1112, -2668, -2668, -2668,  1276, 13973, -2668, -2668,  1076,
    1363, -2668,   160, -2668, -2668, -2668,  -133,  1363, -2668, -2668,
   -2668, -2668, -2668,   171,  1479, 29673, 30151, 42242, -2668, -2668,
    -170, -2668, -2668, -2668, -2668, -2668, -2668,   478, -2668,   212,
   31882,  1080,  1084,  -170,   566, 46066, 46066,  1545, -2668, -2668,
   -2668, 36984, 42242, 49890,  1211, -2668, -2668,   -70,   -70,  9446,
     -70,   116,   -12, 10955, 14979,  1425,  1308,   481,    91,  1427,
   -2668,  1312,   800,   881, 13973,   551, -2668,  1365, 42242, 35072,
     752,   836,  1099,  1183,  1104,   -21,  1515, -2668,  1101, -2668,
    1190, 42242, 54147,   177, -2668,  1551,   177,   177,   172,  1554,
    1195,   181,  1349,    92,  -138,  1101,  2528, -2668, 36984,   126,
     458,  1101, 42242,  1198,   578,  1101,    95, 14476,   946,  1024,
     555,  1040,  1181,   110, 14476,  1281,  1287,  1294,  1346,  1361,
    1405,  1412,  1418,  1439,  1441,   122,  1447,  1455,  1461,  1464,
    1473,  1482,   128,  1484,   159, 14476,  1487,  1117, -2668, 31882,
     -32, -2668, -2668,  1489,   134, -2668, 28240,  1111, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668,  1205, 46066,  1165,   392,  1474,  1532,
   33160,  1131,   272, 42242,  1360,  2528,  1368,  1138,  1603,   722,
    1147, -2668, 50368, -2668, -2668, -2668, -2668, -2668, -2668,  1150,
   -2668, -2668, 13973, -2668, -2668, -2668,  1636, -2668, 53221, 53221,
     815,   815, -2668, -2668,  1611,  1235,  1240,  1636, -2668,  1636,
   -2668, -2668, -2668, 53221, -2668, 46066,  1163,  1166,  1636, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668,  1636,  1246, -2668,  1253,  1254,
    1257, -2668, -2668, -2668, -2668, -2668, 46066, 46066, -2668, 46066,
   46066, -2668, 46066, 46066,  1167,   661, 44154,   445, 37940, -2668,
   -2668, -2668, -2668,   734,   781, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, 33160, -2668,  1922, -2668, -2668, -2668,
    1175,   518, -2668,   523,  1250, -2668, -2668, 13973,  -170, 13973,
   31882,  1225, 13973, 13973,  1169,  1636,  1636, -2668,  2390,  1636,
    1636, 32172, 13973, 27660, 13973, 18500, 11458, 13973, 13973,  8440,
   13973, 32172,  1670,  1670, 25743, -2668,  1342, -2668,  1192,  1944,
    4957,  1196, -2668,  1197,  1199, -2668,  1187, -2668,  -170,  -170,
   13973, -2668, 13973,  3772,  3772, -2668,   162, 53221, 13973, 13973,
   13973, 13973, 13973, 13973, 32682,  1285,    89, 46066, 13973, 13973,
    1204,   635, -2668, 13973,  1435, -2668,  1207, 13973,  1298,   119,
   13973, 13973, 13973, 13973, 13973, 13973, 13973, 13973, 13973, -2668,
   -2668, 19995,   179,  1537,  1556,  -170,  -108,   687, 10452, 38418,
    1549,  6931, -2668,  -170, 28717,   101,  1549, -2668, -2668, -2668,
   -2668,   161, -2668, -2668, -2668, -2668,  1175, -2668,  1175,  1223,
   42242,   186, 36506, 13973, -2668, -2668,   533,  1226,  1282,   558,
    1686, 46066, -2668, 26221,  1511, -2668,   508,   508,  1233, -2668,
   31104,  1511, -2668, -2668, 18989,  1356,  1512,  1450, -2668, -2668,
    1432,  1433, -2668,  1242, 32106, 15482, 15482, -2668,   383, 31882,
     702, -2668, -2668, -2668, -2668, -2668, -2668,     2, -2668, 42242,
     -11,  1425,    91,  1247, -2668, -2668,  1213,  1251, 50846, 46066,
    1527,  1481,  1533,  -146, -2668, -2668, -2668, 53221, -2668, 46066,
   46066, 51324, 51802, 33638, 46066, 33160, -2668, -2668, -2668, -2668,
   46066,   978, 46066, 32061, -2668, -2668, -2668,   177, -2668, -2668,
   -2668, -2668, -2668, 46066, 46066, -2668, -2668,   177, 46066, 46066,
     177, -2668,  1229, 46066, 46066, 46066, 46066,  1267, 46066, 46066,
     -24,   -24,  1467, -2668, 11961,    57, -2668, 13973, 13973, -2668,
   13973,  1436, -2668,   548, -2668,  1483,    65,  1310, 42242, 42242,
   46066,  1408, -2668, -2668, -2668, -2668, -2668, -2668, 33160, 53221,
    1269,  1274,  1622, -2668,  2528,  1623, 35550,   484,  1079,  1317,
   12464,  1739,  1507, -2668, -2668,  1493, 13973,  1292,  1295,    45,
     563, -2668, -2668,  1288,  1166,  1320,  1322,  1299,  1307, -2668,
     608, 53221,  1636,   131,  1311,  1314,  1249,  1046,    17,  1148,
      53, -2668,    69, -2668,  1519,   158, -2668,  1403,  1538,   722,
    1777, -2668, -2668, -2668, -2668, -2668, -2668, -2668,   612, 22874,
   -2668, -2668,  1780,   927,  1780,    42, -2668, -2668,  1780, -2668,
    1780, -2668, 30629, -2668, 14476, -2668, 53221, -2668,  1323, -2668,
    1324, 13973,    43, -2668, 31166,  1325, 13973,  1334,  1341, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,  1348,  1672,
   -2668,  1351,  1352,  3217, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,  1355,
    1362, 31202,  1357, 18500, 18500,  7937,   663, -2668, 18500,  1364,
   -2668,  1370, 31117,  1373,  1371, 31232, 12967, 13973, 12967, 12967,
   31654, -2668,  1377, 31719, 46066, -2668, 15985, -2668, -2668, -2668,
   13973, 42242, -2668, 13973,  1378,  5019, -2668, -2668, -2668,   687,
     694,  3027,  3027,  3027, 32172, -2668, -2668, -2668,  1397, -2668,
   18500, 18500, -2668,  3065,  4185,  7937, -2668, -2668,  1707, -2668,
     569, -2668,  1383, -2668, -2668,  4267, -2668, 27660, 32208, 13973,
     103, -2668, 13973,  1204, 13973,  1465,  3027,  3027,  3027,   200,
     200,   185,   185,   185,   694,   687, -2668, -2668, -2668,  1395,
    1396,  1399,  1740,  1045, 13973, -2668, -2668,   556,   597, 42242,
    3093,  3771,  4129, -2668, -2668, 21440,  1438,   -32,  1419,  1438,
    1636,  3772, -2668,   551, -2668, -2668, -2668, 31882, -2668,  1250,
   21440,  1442,  1451,   -99, 24308,  1612, -2668, 46066, -2668, 46066,
   -2668,  1400,  1549,  1414, -2668, -2668, -2668,  1422,  1422, 13973,
    1398,  1422,  1618,  1619,   906,   906,   383,  1621, -2668, -2668,
    1472, -2668, -2668, -2668, 13973,  8943,  1160, -2668,  1170, -2668,
   -2668, -2668, -2668,  1410, -2668, -2668,  1674, -2668, -2668, -2668,
   -2668,  1497,  1101, 13973,  1643, -2668,    59,  1423,  1767,  -143,
    1721, 46066, -2668,  1639, -2668,   732,  1783,   158,  1793,   158,
   33160, 33160, 33160,   616, -2668, -2668,   927, -2668, -2668,   621,
   -2668,  -166, -2668, -2668, -2668,  1530,   584,  1101,  2528, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668,   165,   637,  1101,  1531,
   -2668,  1536, -2668,  1539,   665,  1101, -2668, -2668,    57,    57,
      57, 14476, -2668,  1678,  1680,  1463, 31882, 31882, 31882,  1453,
   -2668,   133, -2668, 46066, -2668, -2668, -2668,  1436, 42242,  1456,
    1924,   722, -2668,  1625,   -66, -2668, -2668,   927, 46066, 42242,
   42242, 42242, -2668, -2668, -2668,  1468,  1462, -2668, 53221,   -64,
    1682,  1683, 46066,  1506,  1104,  1934, -2668,   630, 13470,  1821,
   42242,  1478, -2668, -2668, -2668, -2668,  1636, -2668, -2668,   325,
     325, -2668, 46066, -2668,  1486, -2668,  1488, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, 46066, -2668,
   42242,  1823,  1250, -2668, 33160, -2668, 36028, -2668, -2668, -2668,
   -2668,   927, -2668,   927,  1701, 46066, 29195,   927,   927, -2668,
   -2668, -2668, -2668, 31748, 13973, -2668,  1842, 53221, -2668,  5301,
   -2668, -2668, -2668, 13973, -2668, -2668, 13973, -2668, 27660, 13973,
    1808, -2668,  1975,  1975,  4957, 53221, 18500, 18500, 18500, 18500,
   18500,   412,  1025, 18500, 18500, 18500, 18500, 18500, 18500, 18500,
   18500, 18500, 19492,   290, -2668, -2668, 13973, 13973,  1822,  1808,
   13973, -2668, 53221,  1498, -2668,  1510,  1520, 13973, -2668, 53221,
    1521,  1522,  7937, 31784, -2668,  -170,  5792, -2668, 31882, -2668,
    3772, 13973,  3081,  4452, 13973,  1529, 13973,  1857, -2668, -2668,
    1534, -2668, -2668, 53221, 13973,  1535,  4527, 18500, 18500,  5420,
   -2668,  6095, 13973,  7937, -2668,  1467,  1573, -2668,  1733,  1627,
    1627,  1627,  1627, -2668, -2668, 42242, 42242, 42242, 21918,  1863,
   20961, 44632,  1540, -2668,   543, -2668, 44632, 45110, -2668,  1553,
   -2668,  -170, 13973,  1859,    57,  1342,  1859,  1544, -2668, -2668,
    1546, -2668, 13973,  1687, -2668, -2668, -2668,  1601, -2668,   645,
   -2668,  1963,  1687, -2668,   659, -2668, 26221,  1442, 13973,  -170,
     520, -2668, -2668, -2668,  1558, -2668,  1422, -2668, -2668, -2668,
    1762, -2668, -2668, -2668, 42242, -2668, 46066,  5924,  1901, -2668,
   46066, 46066, 46066, -2668, 46066,  1560,  1561,   530,  1565, -2668,
     530,  1883,   124,  1104,   181,  2076,   396, -2668, -2668, -2668,
    1637, 46066, -2668, 46066, -2668, -2668, -2668, -2668, -2668, 33638,
   -2668, -2668, -2668, 33160, 27181, 33160, 46066, 46066, 46066, 46066,
   46066, 46066, 46066, 46066, 46066, 46066,  1567,  1568,  1570,  1467,
   -2668, -2668, -2668, -2668, -2668, -2668,  -138, -2668, -2668,   133,
    1572, 35550,  1250,  1317,  1532,   661, 45588,  1578,  1576, -2668,
     683,  2528,  1574,  2040, -2668,   484, 35550, -2668, -2668, -2668,
    1999, -2668,   401,   142, -2668, -2668,  1250, -2668,  1250, 31882,
   46066,  1641, -2668,  1166,  1586, -2668, -2668,  1166, 53221, -2668,
   -2668,   158, 42242, -2668,   684, -2668, -2668, -2668, -2668, 46066,
    1582, -2668,  1582, -2668, -2668, 13973, 31882, -2668,  1587, -2668,
   31882,  6323, -2668, 31882,  1822, -2668,  1975,  1448,  1448,  1448,
    1345,  1913,   259,  1590,  1448,  1448,  1448,   267,   267,   168,
     168,   168,  1975,   290, 31882, 31882, -2668, -2668,  1592, -2668,
   -2668, -2668, -2668,  1595, 46066, -2668,  4575, -2668,  1596,  1602,
   46066, -2668, -2668,   274, 13973, 13973,  3065, -2668,  3407, 13973,
   53221,   711,  3065,   193, 13973,  4681,  4785, 13973, 13973,  6252,
    6421,  1604, 13973, 26699, -2668, 42242, 42242, 42242, 42242, -2668,
   -2668, -2668, 44632, 45110,  1606, 20482,   543,  1608, 42242, -2668,
    1692,  1614, 21440,  1879,  1812, -2668, 21440,  1812,  1067,  1812,
    1891,  1692, 25265, -2668,  1692,  1620,  1824, -2668,   350, 31882,
    2059,  1932,  1624, -2668,  1932,   927, -2668, 31882, 10452, -2668,
    1250,  1459, 46066,  -170,    15, -2668,  1634, 46066, -2668,  1687,
   31882, -2668, -2668, 27660, -2668, -2668, -2668, -2668, -2668, 46066,
    1626, -2668,  1628,   530, -2668, 46066,  1666, -2668,   170,  1926,
      90, -2668, 33160,  2281,   517, -2668,  1940,  1855, -2668,   177,
   -2668, 13973,   517,  1858,    86, 46066, -2668, -2668,  2483, -2668,
   53221,   158,   158, -2668, -2668,  1640,  1644,  1645,  1647,  1648,
    1649,  1650,  1654,  1655,  1656,  1657,  1658,  1659,  1662,  1663,
    1667,  1671,   812,  1673, -2668,  1677,  1558,  1684,  1688,  1689,
   53684,  1691,  1693,  1695,  1697,  1698,   734,   781, -2668, -2668,
   -2668, -2668, -2668, -2668,   746,  1702, -2668,  1652, -2668, -2668,
    1726, -2668,  1755, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668,    57,   854,    73, 46066,  1679,  1506,  2144,   470,  1914,
    1694, -2668,   927,  1317, -2668, 35550,  1174,   547,  1683, -2668,
     113,  1506, -2668,  2086,  1743, -2668,  1916, 46066,  1708, -2668,
   -2668, -2668,  2173, -2668, 36028,  1582, 31882, -2668, -2668, -2668,
   18500,  2041,  1716, 53221, -2668, -2668, 13973, -2668, -2668,  3065,
    3065,  3407,   716, -2668,  3065, 13973, 13973,  3065,  3065, 13973,
   -2668, -2668, 28146, 52280, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668, -2668, 34116, 44632,  1718, -2668, 38896, -2668, -2668, 46066,
     543, 21440, -2668, -2668,  2008, -2668, 21440,  1994, -2668, 21440,
   -2668, 46066,  1723, -2668, 46066, -2668,  9949, 13973,  1764,   927,
    1764, -2668,  1722, -2668,   -99, -2668, -2668,  2136, 22396,  2092,
   13973, -2668, -2668,  1728,   530, -2668,  1893,  1666,  1734, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668,   717,  1741, 46066, 46066,
   18500, -2668,   517,   210,   152, -2668,  2017, 42242,  1666,  2159,
   -2668, -2668, -2668, -2668,  2128,  2209,  2096, -2668, -2668, 31882,
   -2668, -2668,  1636,  1636, -2668, -2668,  2177, -2668, -2668, -2668,
   -2668,   746,  -168, 27181, 46066, 46066,  1756, -2668, -2668,  -138,
    2129,   727,   484, -2668,  1250, 42242,  2103, 35550, -2668,  2219,
    1760, 46066,  1506,   737,   737, -2668,  1902, -2668,  1903, -2668,
   -2668,   201, -2668, 42242, -2668, -2668, 22396,  1250, -2668,  3455,
   18500, 53221,   740, -2668, -2668,  3065,  3065,  3065, -2668,  1953,
   -2668, -2668,   742,  2224, -2668, 46066,   -69,   -71,  1766,  1768,
   -2668, -2668,  1770, -2668, 13973,  1772, -2668, -2668, 21440,  2008,
     748, -2668, 53221, 46066,   770, 53221, -2668,  1774,  -123,  1775,
   -2668,  7434,  1763, -2668, -2668, -2668, -2668, -2668, -2668, 31882,
   31882, 46066,  1949, -2668,  1949, 10452,  1833, 46066, 13973, -2668,
     832,  2205,    36,   -27, 31882, -2668, 42242, -2668, 33160, -2668,
     530, -2668, 33160, 13973, -2668,  1359,  1345,  2243, -2668, -2668,
   -2668, -2668,  1666,   722, -2668, 46066, -2668,  2093, -2668, 46066,
    1843,   292,  1864, -2668, -2668, -2668, -2668,   854,   927,  1317,
    1683,  1743,  1787, 42242,  1250,   484,   401, -2668, -2668, -2668,
   -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668, -2668,
    2216,  2003,  2225,  1641,   869,  3455,   875, -2668,  2246,  1467,
    1553, 34116,  1813, -2668,  1811, -2668, -2668, -2668, -2668, -2668,
   46066,   926, -2668, 31882, 46066, -2668, -2668, -2668, 46066,  2177,
     883, -2668, 13973,  1816, 13973, -2668, 16488,  1814, -2668,  2276,
   13973,  1877,  1877,  1250, -2668, 28175,  1438, 22396, 46066, 46066,
   46066, -2668,  1942,   722,   530,   888, -2668,  1835, -2668, 28211,
    2042, -2668,  2133, -2668,  2077, -2668,  1827, -2668, 13973, -2668,
    1904, -2668, -2668, -2668,  2290, -2668, -2668, 35550,  1832,  1743,
    1683,  1506,  2043, -2668,  2045,  1845,  1317, -2668, 13973,   -26,
   -2668, -2668, 46066, -2668,   892,  1834,  1841, -2668, -2668, -2668,
    1846, 16488,  1847, -2668, 46066,  1852, 31882,  1983, -2668, -2668,
   -2668,  2205, -2668, -2668, -2668,   508, -2668,   508, 26221,  2077,
   -2668, 33160, 27181,  2081,  1827,   253,  2065,  2528, -2668, 31882,
   -2668,  1250, 35550, -2668, -2668, -2668, -2668, -2668, 22396,  1438,
    1373, 16991, 16991,  1856,   907, -2668,  2344,  2012, -2668, -2668,
    1860, -2668, -2668, -2668, 38896, 46066,  1422,  1422,  1438,  2065,
   -2668, -2668,  2155, -2668, -2668, -2668, -2668, -2668,   115,  2083,
   -2668,  2084,  1424,  1743,   932, -2668, 17997,  2007,   271, 31153,
   -2668, -2668, -2668, -2668, -2668,  1870,  1878, -2668, -2668, -2668,
     508, -2668, -2668, -2668, -2668, -2668,   123,   123,  2252, -2668,
    1943, -2668, -2668, -2668,  1317,  2345, -2668, -2668, -2668, -2668,
   -2668, -2668,  2375,  1422,   530, -2668,  2363, -2668,   247, -2668,
   -2668,  1438, 17494,  1890, -2668, -2668, -2668, -2668, -2668, -2668,
   -2668
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2668, -2668, -2668,  1791, -2668, -2668, -2668,   234, -2668,   930,
   -2668,   223,  -566,   572, -2668, -2668, -2668,  -938,    11, -2668,
   -2668, -2668, -2668,    27,   278, -2668,  -440, -1908,  -176, -2668,
   -2498, -2535, -2668, -2668,  -509, -2419, -1692, -2668, -2668, -2668,
   -2668, -1112,   199, -2668, -2142, -2668,  -620,  -986,  -791,  -991,
   -2668,    -3, -2668,   900, -1101, -1783, -2426,  -511, -2668,  -582,
   -2668,  -335, -1770,  -550,  -537, -2668, -2379,  -929, -2668,  1446,
    -237, -2668,   609, -2668, -2130, -2668, -2668,   599, -2668,  -955,
   -2668, -2668, -1583,   215,  -489, -2052, -2145, -1792,  -636, -2668,
    -536,   261, -1734, -1005, -2668,   620, -2668,  -481, -2668,  -522,
   -2178, -2668, -2668, -2668,  1214,  -706, -2668,  1263, -2668, -2668,
   -2668,    22, -2668, -2668, -2668, -2668, -2668,  -722,   560, -2290,
   -2668,   491, -2668, -2668, -2668, -2668,   -63,   255, -2668,     8,
     971,   -20,    12,    33,    28,    51,  1513,  1543, -2668, -1074,
     624, -2668, -2668, -1786,  -605,   -52, -2668,   673, -1361, -1736,
    -435,  1023,  1490,  1495,  -359,  -379, -2668,  -490, -2668, -1275,
   -2668, -2668,   671,  1065, -1290, -1301, -2668,   374, -2668,  -428,
    -364, -2668, -2668, -2668, -2668, -2668,   132,  -260,  -429,  1048,
   -2668,  1508, -2668, -2668, -2668, -2668, -2668, -1252, -2668,   720,
   -1981,   395, -1989, -1862,   150,   138, -1211,  -217,    32,   417,
    -313, -2668, -2668,  -305, -1716, -2437,  -322,  -320, -2668, -2668,
    -469, -1106,  -700, -2668, -2668,  -433,  -425, -2668, -2668, -2668,
    -231,  -150, -2668, -2668,   244,   916, -2668,  -568,   972,  -506,
    -672,  1232, -1083,  1238, -1053, -1019, -1111,  1241,  1244, -1245,
    3551, -1547,  -807,    -5, -2668, -2114,  -388, -2668, -2668, -2668,
     -73, -2668,  -393, -2668,  -392, -2668, -2668, -2668,  -427, -2667,
   -2668,  1162,   853, -2668, -2668, -2668, -1263, -2668,  4040,   745,
   -2668, -1631,  -873,  -555,  1258,  -731,  -992, -1152, -2668, -2668,
   -2668, -2668, -2668, -2668, -1667, -1785,  -725,   813, -2668, -2668,
     933, -2668, -2668, -2668,  -562,  1028,  -570,  -851,   824, -2668,
     164,  1970, -1339, -2668,   789, -1942, -2668, -2668,   444, -2668,
    2877,  -456, -1618,  1696, -1025,    41, -2668,  2847,   173,  1836,
    -859, -2109, -2668, -2668,  -463, -2217,  -921, -2668,  -625, -2668,
   -2668, -2668, -1172, -2668,   649, -2668, -1100, -2668,  -261, -2668,
   -2668, -2151, -2668, -2668, -2668, -2668, -2668, -2668,  -421, -2668,
    -460,  -464, -2668, -2668,    14,  -787,  1305, -2668, -2668,   521,
   -2668,   952, -2668,   614, -2668,    68, -2668,  1164, -2668, -2668,
   -2668,    23,  1597,   434, -2668,  1177, -2668, -2668, -2668, -2668,
   -2668,   298, -2668, -1099, -2542,    79, -2352,  -626,    -6, -2668,
   -2668, -2668,  -527, -2668, -2107
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1764
static const yytype_int16 yytable[] =
{
     481,   477,  1146,  1006,   972,  1139,  1184,   607,    56,   806,
    1301,    43,   745,  1245,   930,  1481,   596,  1252,  1480,  1736,
    1638,   730,    54,    76,  1445,  1306,  1158,  1540,    61,  1228,
     541,   647,  1231,  2096,   942,  1308,  1778,  1512,   577,  1781,
    1190,  2150,  2122,  1452,    61,  2127,  2031,   478,  1513,  1515,
    1516,  1355,  2487,  1492,  1434,  1456,  2485,  1005,   718,  1011,
    2165,  1015,  2167,   582,  1363,  2464,   736,  2466,  1676,  1677,
    1143,  1485,   800,   609,   738,   746,  2055,  2115,  1544,    83,
    2501,  1261,  2186,  2187,  2188,  2498,   594,  2145,   617,   552,
    2297,  2198,  1597,  -449,   610,   823,  1992,  1993,  2353,  2336,
   -1100,  2013,   721,  1170,  1171,  1191, -1075,  -721, -1097, -1097,
     485,  2848, -1100,  1191,  1749, -1639,  -729,  1802,  -452,  2665,
     807,  1147,   625, -1742, -1742,  1517,  1799, -1650,  1437,  1191,
    1182,  1689,  1370, -1657,  2653, -1753, -1753,  2714,   548, -1101,
     823, -1760, -1760,  2042,  2043,  1689,  -726, -1098, -1098,  2669,
    -726,   548,   924, -1650, -1657,   823, -1101,  1420, -1639,  -729,
    -688,  -701,  -716,  1164,  2210,   548,   548,  1615,   599,  1710,
     660,   965, -1762, -1762,  1367,  1239,   548,   968,   586,  1995,
     823,  1239,  1974,  3015,  1996,  -183,   823,  1234,  -449,   931,
    -183,  -948,  2647,   549,   549,  1611,  1317,  -409,  -948,  1190,
     730,  1319,  1465,  1448,  2375,  1468,  1469,  1165,  1726,  2603,
     648,  1317,  1405,  -452,  1483,  1727,  1319,  2773,  1191,     3,
       4,  2217,  -968,  1457,  2351,  1613,  1405,  1440,  1325,  -968,
      87,  2250,  2252,  2286,  2630,  2666,  1885,  2996,  2817,  2876,
    2815,  2405,  1448,  1325,  2850,  1174,  2851,  2642,  1873,  1733,
    2667,  2502,   961,  2178,   545,  2833,   600,  2804,  1406,  1614,
    1327,   604,  2800,  1170,  1171,  1805,   563,  1183,   650,   604,
    2801,  2760,  1406,  1207,  1208,  1327,  2830,   806,  1995,  1402,
    1470,   721,   649,  1996,   806,  1317,  1490,  2818,  1368,  1182,
    2600,   602,  1464,  1491,  1820,  1711,   723,  1820,  1225,    26,
    1519,  1995,  2587,  2941,   651,  2105,  1996,   730,  2362,  3005,
    2787,  1712,  1185,  2406,  1964,  2917,  1713,  1309,  1407,  1965,
    2174,  1475,   561,  2264,  2772,   629,   963,  1297,   579,   630,
    2758,  1518,  2942,  2175,  1186,    31,  1457,  2933,   955,  2206,
    2106,  2641,  2659,   544,  2353,  1476,  1365,  1253,  1187,  1327,
    2660,  1821,  2287,  1714,  2142,  3029,   932,  2262,   933,   603,
    2393,  2560,   629,  2601,  3026,  2564,  1364,  1408,  1143,   564,
    1966,   650,  1806,  1365,  -576,   964,    33,   724,   618,  1442,
    -449,  1408,  1166,  1211,  1212,  1403,   653,   689,   721,  1734,
    2384,  2521,    88,  3016,  1192,   546,  2407,   925,   806,   806,
      89,  2875,  1192,  2759,  1874,  -452,  2145,   651,  2145,  1369,
    1174,  2852,  2503,  2955,  1653,  1458,  1520,  1371,  1192,  1433,
    2990,  2819,  1471,  2816,  2771,  2965,  1409,    36,  1183,  2761,
    1472,  3003,  2668,  1455,  2757,    90,  3007,   604,  2693,  2802,
    1409,   956,   652,  -449,  1638,  1495,  1942,  1944,  1945,  2266,
    2267,  2268,  2269,  2270,  1479,  2944,  2274,  2275,  2276,  2277,
    2278,  2279,  2280,  2281,  2282,  2283,   661,   926,  -452,  1494,
    2550,  2592,  3017,  1939,  2741,   723,  1455,  1594,  1647,  2519,
     817,  1886,    91,  1815,   601,  2130,   730,  2872,  1167,   653,
    1386,  1690,  1443,  1895,   635,  1799,  2961,   633,  1601,  3018,
    1715,  2934,  1872,   587,  1940,  2057,  2098,  1192,   634,   637,
    2315,  2316,  2588,  2648,    61,  2515,   596,  2125,  1382,  2974,
    2117,   732,  2780,  1529,  3027,  1139,  2194,  2195,  1458,  2935,
     805,   629,  2604,  1481,  2464,   630,  2466,  1431,  1941,  1943,
     534,  2522,  1484,  1432,  2271,  2747,  1193,  1775,  -948,  2623,
     802,  1168,  -449,  2997,  1227,   486,   724,   973,  2966,   481,
     481,  2394,  2741,    61,  2694,  1728,  2764,   721, -1739, -1739,
    1230,   547,  1185,  2624,  2632,  2633,   605,  -452,   589,  -968,
    2703,  2179,   723,   481,  2683,  2707,  3008,  2100,  2709,  1455,
     609,  -449, -1100,  -449,  1186,   597,   629,  1788, -1075,  -721,
     630,   935,  1872,  2198, -1100,  2594,    56, -1639,  1187,    43,
    1570,   610,  1541,  1542,   809,  1185,  -452,  1537,  -452, -1650,
      54,    76,  1054,   481,  1140, -1657,    61,  1935,  2874,  1579,
    1747, -1101,  2605,   953,  1776,  2967,   934,  1186,  -726,  2343,
    1475,   944,   961,  1312,  2881, -1650, -1657,  2506, -1101,  2397,
   -1639,  1189,  1172,  1176,  -716,  2880,  1290,  1361,  1750,  1243,
    1244,  2011,   612,   724,  1476,  1243,  1244,  2076,  2077,  -183,
    -183,   822,   730,   730,  1995,  1762,  1849,    83,  1348,  1996,
    1997,  1998,  1999,  2381,  2272,  2591,  1852,   730,   598,  1855,
    1345,  1346,  1347,  1348,  2273,  2646,  2663,  2693,  1317,  1686,
     732,  2047,  1457,  1319,   611,  1317,  1599,    84,   628,   718,
    2863,   806,  1598,  1567,  1297,  2344,   963,   808,  1605,   549,
     810,  1274,  1180,  1181,  1549,  1638,  1507,  2825,  2048,  1309,
    1325,  1651,  2485,  2741,  2398,  2939,   481,  1325,  1573,  1139,
    1800,  1801,   921,   823,  2154,  2664,  1599,  1143,  2382,  2345,
    2651,    85,  2593,   721,   721,  1674,  2151,  2008,  2009,  2010,
    2011,   723,  1327,   736,  1561,  2346,  2788,  1698,   721,  1327,
    1565,   726,  2418,  1562,   800,  2347,   643,  1571,  2006,  2007,
    2008,  2009,  2010,  2011,  2870,  1575,  1185,  2660,  1957,   979,
     823,  1518,  1959,  1599,  1699,  2302,   980,  1508,   805,  1917,
    2399,  1599,  2400,  1143,  1507,   805,  1054,   732,  1186,  2348,
     811,   730,  1306,  2464,    26,  2466,  2750,  2789,  2035,  2233,
    1486,   812,  1457,   481,  2741,  2237,  2790,   655,  1457,  1448,
    1841,   658,  2099,  1924,   488,    61,  1647,  1647,   488,   659,
    1449,  1647,   724,  1848,  1509,   629,  2049, -1075,  1678,   630,
      31,  2050,   481,  3021,  1946,  2791,  1947,  1481,  1763,  1949,
    2000,  1301,  1963,   596,  1692,   662,  1967,  1185,  1968,  2152,
    1812,   663,   481,   481,   481,  2655,   481,   481,   639,  2189,
     640,  1457,  2001,  1647,  1647,  1868,  1869,  1870,   641,  1186,
     642,    33,   721,  1139,  1458,   489,  2349,  1847,   742,   489,
     481,  2311,   981,  1189,    34,    92,   664,  1700,   484,  1457,
    2128,  2125,  1701,  1448,   532,   823,  1858,  1702,  2180,   805,
     805,  1865,  1509,  2119,  1451,   562,  2792,    26,    35,   575,
    2696,  2023,   548,  2025,  2026,  2697,  1237,   602,  2793,  1238,
    1489,   730,    36,  1909,   813,  1910,  2177,   723,   723,   744,
     726,  -499,  2002,   481,   815,  1455,  -499,   481,   481, -1737,
   -1737,   961,   723,    31,  2854,  2069,   962,  2070,   481,  1394,
    1395,    57,  1401,  2679,     3,     4,  1380,  1248,  1823,  1381,
    2218,  1921,  2858,   953,  1248,  2225,   732,    57,   816,  1894,
     610,   610,  2051,   610,   817,  2325,  2326,  2327,  2328,  2181,
     818,    57,   979,  2052,    33,   603,  2071,   595,  2072,   980,
    1850,  1054,   923,   730,  1458,  1853,  1593,    34,  1054,  1594,
    1458,  1595,   721,   982,  1596,  -499,   979,  2185,   724,   724,
     929,  1758,   608,   980,  1230,   963,   534, -1738, -1738,  1054,
    1482,    35,  -498,   724,   938,   730,  1882,  -498,   946,  1883,
    1896,    57,   806, -1740, -1740,  1764,   982,   726,  1703,  -550,
    -550,  1925,  1311,  2756,  1596,   806,   492,   945,   493,  1704,
     492,  1314,   493,  1458,  -499,  1455,  2570,  2814,  2153,  2573,
    2154,  1455,  1933,   604,   964,  1362,   723,   948,   919,   920,
     730,   922,  1512,   496,   721,  2814,  1372,   496,  1248,  1248,
     949,  1458,  2024,  1513,  1515,  1516,  1931,   983,  2155,  1932,
    1953,   984,   952,  1954,  2168,   981,  -498,  2169,   979,  2172,
    1638,  2162,  2173,  2164,   951,   980,   721,  1970,  2227,  2794,
    2912,  1594,  2795,  2805,  1455,  2390,  2565,  2392,  2568,   981,
    2045,   985,  2094,  2371,  1140,   959,  2372,  2003,  2004,  2005,
     974,  2006,  2007,  2008,  2009,  2010,  2011,  2376,  2532,  1301,
    2377,   976,  1455,   977,  2416,  -498,   481,   724,  2409,  2246,
     978,   721,   732,   732,   991,  1343,  1344,  1345,  1346,  1347,
    1348,  2493,  2513,   990,  1883,  2514,  2391,   732,  1008,  1647,
    1647,  1647,  1647,  1647, -1741, -1741,  1647,  1647,  1647,  1647,
    1647,  1647,  1647,  1647,  1647,  1647,  2896,  1012,   986,  2533,
    2482,  3014,  1596,  1144,  2684,  2751,   723,  1596,  2752,  1145,
    2991,  2992,   605,  2975,  2408,  2779,  2417,   958,  1883,   960,
    1912,   981,   805,  1201,  1202,  1148,   726,   979,  2807,  2344,
    2810,  1596,  2993,  2811,   980,  1150,  2827,  1152,  1140,  2828,
    1647,  1647,   802,   979,  1153,  2203,  1161,  2235,  2236,  2373,
     980,   481,  1163,   481,  1168,    61,   481,   481,  2831,   982,
    1172,  2828,   635,  2345,  2213,   633,   481,  3024,   481,   481,
     481,   481,   481,   481,   481,  1175,   634,   637,   723,  2566,
    1176,   979,    61,   982, -1743, -1743,  1178,   724,   980,  2347,
   -1744, -1744,  1207,  1208,   481,  3028,   481, -1745, -1745,  1179,
      26,   732,   481,   481,   481,   481,   481,   481,  1140,  1195,
     723,  1196,   481,   481,   984,  2661,  1198,   481,  1226,  1579,
    2846,   481,  1229,  2847,   481,   481,   481,   481,   481,   481,
     481,   481,   481,  1232,  1009,   481,    31,  1233,   984,  1235,
     981,  1254,   481,   822,   985,  1054,  1995,  2090,  1140, -1746,
   -1746,  1996,  1997,  1998,  1999,   723,   981,  2886,  1264,   724,
    2847,  2682,  2090,  2887, -1747, -1747,  1596,   481,  1010,  1236,
    2125,  2899,  1265,  2458,  2828,   982,  2920,    33,  1267,  2921,
    2945,   535,  1269,  2946,  -692,   935,  1736,  1766,   481,  -699,
      34,   724,   730,  1274,   981,  2984,  1624,  1272,  2828,   481,
     481,  1273,  1211,  1212,  1625,  1626,  1627,  1628, -1748, -1748,
    2349,   986,   726,   726,    35, -1749, -1749,  2416,  2607,   806,
    3004, -1750, -1750,  2847,  2595,  1275,  1013,   726,   536,  1823,
     984,   732,  1276,   727,    36,   986,   724,  1140,    26,  1140,
    -689,  1620, -1751, -1751, -1752, -1752,   822,    57,  1278,  1995,
   -1754, -1754,   992,  -576,  1996, -1764, -1764, -1764, -1755, -1755,
    1014,   730,  2292,  1599, -1756, -1756,  2610, -1757, -1757,  2555,
    -577,   993,  -690,   721,    31,  2241, -1758, -1758,  1054,   730,
    1279,   481,   481,  2555,   481, -1759, -1759, -1761, -1761,   729,
   -1763, -1763,  1497,  1498,   982,  1280,    57,   595,  2258,  1209,
    1210,  1282,  1140,   732,  1211,  1212,   730,  -554,  -554,  -693,
     982,  2358,  1283,   730,  1054,    33,  2265,  -553,  -553,  2806,
     481,  1284,   994,  -691,  2612,  2511,  1913,   986,    34,  1376,
    1378,  1285,  1286,    26,  1751,   732,  1287,   730,  1841,   608,
    2467,  1288,   721,  2288,  2956,  1811,  2957,  1599,   982,   984,
    2293,   726,    35,  1289,  2001,  1290,  1307,  1294,  1310,    57,
     721,  1856,  1353,   805,  1356,   984,    36,  1358,  1374,    31,
    1359,  1383,  1384,  1387,  2481,   488,   805,  1393,  1054,   985,
     732,   962,   964,  1427,  1429,   481,  1453,   721,  1435,  1454,
     481,  1455,  1461,  1460,   721,  1857,  1462,  1466, -1146,  1863,
    1473,  1474,  1478,   984,  1488,  1493,  2512,  1500,  2628,    26,
      33,  1501,   727,   995,  1505,   596,  1510,  1511,   721,  3013,
    1518,  2860,  1522,    34,  2002,  1526,  2615,   481,   481,   481,
    1525,  1528,   481,  1864,  1530,   823,   489,  1536,  1543,  1545,
     481,   481,   481,   481,  1546,    31,   986,    35,  1552,  2125,
     481,  1553,  1556,  2777,   481,  1566,  1606,   481,   730,  1557,
    1558,    36,   986,  1559,   996,   596,  1592,   723,   729,  2616,
    1601,  1317,   997,  2488,   481,   481,  1666,  2124,  1668,   481,
    2090,   726,  2090,  1673,   998,  2617,    33,  1670,  1671,  1688,
    1893,  1695,  1672,   481,  1707,  2461,   481,   504,   481,    34,
     986,   533,  1706,  1647,  1709,  2637,  2638,  1730,  1731,   554,
    1745,  1752,  1760,  1759,  1767,   999,   603,  2246,   481,   727,
     593,   593,   730,    35,  1779,  1789,  1790,  2002,  1791,   481,
    2088,  1792,  1793,  1794,   596,  1810,   723,    36,  1813,   721,
    1184,  1817,  1248,  1818,   481,  2088,  1962,  1819,   724,  2584,
     604,  1880,  1888,   726,   723,  1248,  1897,   635,  1884,  2510,
     633,  1898,  1001,   481,  1899,  1900,  1914,  1918,    57,  1919,
    1920,   634,   637,  1926,   621,   729,   478,    61,   481,   481,
    1922,   723,  2618,  1923,  1002,   726,  1143,  1929,   723,  2619,
    1927,   478,  1928,  1647,   730,  1930,  1948,   481,  1950,  1937,
    1951,  1599,  1938,   721,  1004,  1952,  1277,   492,  1960,   493,
    1972,  1971,   723,  1978,  1140,  1140,  1140,   724,    26,  2003,
    2004,  2005,  1980,  2006,  2007,  2008,  2009,  2010,  2011,  1981,
     726,   495,   479,  1983,   496,   724,  1982,   505,  1301,  1984,
    1985,   505,  2458,  1987,  1299,  1991,   550,   550,   553,   505,
     558,  1988,  2014,   558,    31,  1054,   558,   584,  2015,  2021,
     505,   505,   724,  1647,  2020,  2028,  2039,  2041,  2046,   724,
    2053,  2062,  1629,  1630,  1631,   721,  1632,  1633,  1634,  1635,
    1636,  1637,  2063,  2065,  2092,  2067,  2066,  2104,  2102,  2111,
    2118,  2116,   732,   724,  2120,    33,  -555,  -556,   727,  2131,
    2132,  2134,   481,  2136,   730,  2138,   558,  2135,    34,  2141,
    2140,  2144,  3002,   584,   505,   584,   584,   584,   608,   608,
    2148,   608, -1764, -1764, -1764,  2161,  2006,  2007,  2008,  2009,
    2010,  2011,    35,   723,   730,  2163,  2176,  2182,  1140,  2193,
     805,  2636,  2183,  2201,  2090,  2184,    36,  2190,  2090,  2191,
    1913,  2192,  2202,  2216,   729,  2223,  2215,  2219,   481,  2205,
    2220,   732,  2226,  2230,  1580,  2242,  2232,   481,  2249,  2017,
     481,  1481,  2239,   481,  2240,  2257,  1995,   806,  2016,   732,
     481,   481,   481,   481,   481,   721,  2289,   481,   481,   481,
     481,   481,   481,   481,   481,   481,   481,   723,  2290,  2171,
     481,   481,   596,  2321,   481,  2940,   732,   730,  2291,  1581,
    2295,   481,  2294,   732,   724,   721,   481,  2307,  2309,  2322,
    2323,  2310,  2074,  2313,  2334,   481,  2356,  2368,   481,  2360,
     481,  2342,  2365,   596,  2366,  1582,  2370,   732,   481,  2374,
    2385,   481,   481,  2389,  2197,  2383,   481,   481,  2404,  2396,
     596,  2395,  2402,  1583,  2420,  2478,  2479,  1584,  2480,  2484,
    2209,  2495,   481,  2088,   481,  2088,  2491,  2492,  2496,   723,
    2500,  2507,  2509,  1883,  2520,  2517,   481,  2523,   724,  1585,
    2524,  -461,  1586,  2525,   727,   727,   481,  2526,   721,  2556,
    2527,  2561,  2541,  2552,  2343,  -461,  2553,  1587,  2562,   727,
    -461,  2559,   481,  2569,   992,  2576,  2577,  2574,  2575,   478,
    2590,   478,  2579,  2857,  2596,  2598,  2597,  2864,  2602,  1248,
    2626,  2458,  2627,   993,  2247,  2631,  2248,   730,  2643, -1097,
    2253,  2254,  2644, -1737, -1738,  2754, -1739, -1740, -1741, -1742,
     729,   729,   726, -1743, -1744, -1745, -1746, -1747, -1748,  -461,
     724, -1749, -1750,  1140,  2090,   729, -1751,  1140,  2465,  1140,
   -1752,  2645, -1754,  2090,  2461,   730, -1755,  2652,  2090,  -461,
    2344,  2090,  2654, -1756,   994,  2410,  2656, -1757, -1758,   723,
   -1759,  2657, -1760,  2411, -1761,  2670, -1762, -1763,   657,  1588,
    2090, -1098,  2671,  2673,  2889,  2676,   730,  1589,    57,   730,
    2486,  2677,  2680,  2681,  2345,  2695,  2708,  2919,   721,   723,
    2713,   726,  2731,  2735,  2737,  2743,  2745,   741,  -461,  2746,
    2346,  2748,   732,   727,  2504,    57,  2505,  -461,  2753,   726,
    2347,  2762,  2765,  2829,   488,  2766,  2829,  2767,  2768,   481,
    1590,  2412,  2769,  2778,  2776,  2783,   721,  2784,  2785,  2808,
    2798,  2799,  2812,  2820,  2836,  2821,   726, -1146,  2822,  2824,
     724,  2832,  2834,   726,  2348,   995,  2840,  2900,  2843,  2902,
    2848,  2862,  2866,  2868,  2877,  2882,   593,   721,  2090,   729,
     721,  2871,   723,  2883,  2884,  2704,  2857,   726,   481,   481,
     724,  1696,  2888,   481,   732,   489,  2867,  2972,   481,  2893,
    2892,   481,   481,  2901,  2905,  2904,   481,  2907,  2918,  2761,
    2090,  2922,  2924,   584,  2927,  2925,   996,   645,  2931,  2932,
     646,  2930,  2947,  2936,   997,  2937,   481,  2088,   505,  2948,
     481,  2088,  2938,  2954,  2949,  2951,   998,  2463,  2413,  2543,
    2607,  2962,  2968,  2985,  2983,  2986,  2608,  2995,  2988,   490,
      57,  2349,   481,   727,  3006,   646,   505,   505,  3011,  2609,
    2998,  3000,  2197,   724,  2996,  3012,  -461,   999,  2583,  2585,
    3022,  2997,   550,   478,  3023,  2914,  3025,   478,  3030,   950,
    2419,  1843,  2423,  1609,  2378,   548,  1140,  2159,  2610,  2586,
    2611,   916,   916,   558,   558,   481,   558,  2913,  2736,  2958,
    2494,  2634,   723,  2964,   732,  3020,   730,   584,   726,   729,
    2861,  3001,  2994,  2090,  1001,  1444,   505,  2797,  2143,   491,
    2166,  2499,  2960,  2999,  2424,   727,  2139,   584,  2959,   629,
    1560,  1539,   948,   630,  2465,  2243,  1002,  2199,  2705,   584,
     723,  2678,  2123,  2461,  2483,  1809,  2612,  1424,  1385,  2090,
    1366,  1423,  2895,  2909,  2989,  2133,  1004,   727,  2414,  1786,
    2364,  2415,  2903,  2950,  2842,  2337,   492,  1428,   493,  1808,
    2101,   723,   726,  2551,   723,  2613,  2567,   584,   584,   584,
     584,   729,  2826,   724,   494,  2333,  2580,   721,  2891,    57,
     495,  1199,  1200,   496,  2662,  2890,  2897,  2734,   805,  2898,
    1610,  2952,   727,  2953,   481,  2982,  1612,   732,  1735,  1616,
     481,   992,  1617,   729,  2037,  2126,  2060,  1600,  1879,   481,
     481,   724,  2582,   481,  2058,  1975,   918,  2095,  2581,  2363,
     993,  2204,  2885,  1572,  1969,  1754,   481,  2088,  1388,     0,
    2090,  2379,     0,  2614,   726,   481,  2088,     0,  2615,  1756,
     481,  2088,   724,   481,  2088,   724,   992,     0,   729,     0,
     481,   481,     0,  1455,     0,     0,     0,  1201,  1202,     0,
       0,     0,   481,  2088,   481,   993,     0,     0,     0,     0,
       0,   994,     0,   478,     0,     0,     0,     0,     0,     0,
       0,  2616,   478,     0,   481,     0,     0,   478,     0,     0,
     478,     0,     0,     0,     0,     0,  1299,  2617,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   478,
       0,     0,     0,     0,     0,     0,   994,  2465,     0,     0,
       0,   593,  1203,  1204,  1205,  1206,  1207,  1208,     0,     0,
    1209,  1210,     0,  1266,     0,     0,     0,     0,  2412,     0,
       0,     0,  2781,     0,   726,  2658,  1299,     0,     0,     0,
     481,  2088,     0,     0,   481,   732,     0,     0,     0,     0,
       0,     0,   995,     0,  1696,  2662,     0,  1248,     0,     0,
       0,   723,     0,     0,   726,     0,     0,     0,   481,     0,
    2064,   596,   481,  2088,     0,     0,   732,     0,     0,   732,
       0,     0,     0,     0,  2618,   481,  2081,   478,     0,     0,
    1305,  2619,     0,     0,     0,     0,     0,   995,     0,   481,
      57,  2081,   481,   996,     0,   595,     0,     0,     0,     0,
       0,   997,  1140,     0,     0,     0,  1140,   481,     0,   478,
       0,     0,  2733,   998,     0,     0,  1211,  1212,     0,     0,
       0,  1315,     0,   584,     0,     0,  1316,   726,     0,  1317,
       0,     0,   724,  1318,  1319,  1320,  1321,  1322,   996,     0,
       0,   505,   505,     0,   999,     0,   997,   584,   584,  1392,
       0,     0,  2879,  1323,     0,     0,  1324,     0,   998,     0,
       0,  1325,     0,     0,     0,   481,  2088,     0,  1326,     0,
       0,     0,     0,     0,   584,  1447,  2463,     0,     0,     0,
       0,     0,     0,     0,   727,     0,   481,   584,   481,   999,
     481,  1001,     0,  1327,   481,     0,     0,     0,     0,     0,
       0,   481,  2088,     0,   584,     0,     0,     0,   584,     0,
       0,  2910,   478,  1002,     0,     0,     0,     0,     0,     0,
       0,     0,   481,     0,     0,     0,     0,  1213,  1214,     0,
       0,     0,     0,  1004,     0,     0,  1001,     0,     0,     0,
     729,     0,   481,     0,     0,     0,     0,   726,   478,     0,
       0,     0,     0,   727,     0,   481,     0,     0,  1002,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   727,     0,     0,     0,  1140,  2465,     0,  1004,     0,
       0,     0,     0,    57,     0,   726,  1563,     0,  1564,     0,
       0,     0,   481,  2088,  1328,   481,   481,     0,   727,  2973,
       0,     0,     0,     0,     0,   727,     0,     0,     0,   729,
    1329,  2873,     0,     0,     0,  1330,   726,     0,     0,   726,
       0,     0,     0,     0,   620,     0,   623,   729,   627,   727,
     481,     0,     0,     0,     0,     0,     0,  1331,  1332,   478,
       0,  1504,  1199,  1200,     0,     0,     0,     0,     0,   584,
       0,     0,  1333,     0,   729,     0,     0,     0,  1534,     0,
       0,   729,     0,  1299,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   481,     0,     0,     0,
       0,     0,     0,     0,     0,   729,     0,     0,     0,     0,
    1334,  1551,     0,  1335,  1299,  1316,     0,     0,  1317,     0,
       0,     0,     0,  1319, -1764, -1764, -1764,  1336,     0,  2332,
    1337,  2335,     0,     0,     0,     0,     0,     0,  1201,  1202,
       0,     0,   646,   646,     0,   505,   505,     0,   505,   646,
    1325,     0,   584,  1316,     0,     0,  1317,  1326,     0,     0,
       0,  1319,     0,     0,     0,     0,     0,     0,     0,   822,
     727,     0,  1995, -1542,     0,  2463,     0,  1996,  1997,  1998,
    1999,     0,  1327,     0,     0,     0,     0,     0,  1325,     0,
       0,     0,     0,     0,     0, -1764,  2304,     0,     0,  1640,
       0,     0,     0,  1203,  1204,  1205,  1206,  1207,  1208,     0,
    1665,  1209,  1210,     0,     0,  1816,     0,     0,     0,  1338,
    1327,     0,     0,     0,     0,  1824,   729,  1827,     0,     0,
    1838,     0,     0,     0,   727,     0,  1842,     0,  1844,     0,
       0,     0,     0,   646,     0,     0,   726,     0,     0,     0,
    1851,     0,     0,    57,     0,  1854,     0,     0,     0,  1859,
    1860,  1861,  1862,     0,  1866,  1867,     0,     0, -1542,     0,
       0,     0,     0,     0,   916,   584,     0,    57,     0,    57,
       0,     0,     0,  1328,     0,     0,     0,     0,     0,     0,
     729,     0,     0,     0,     0,     0,   584,     0,   584,  1329,
       0,     0,     0,     0,  1330,  1316,   727,  1768,  1317,  1774,
       0,     0,  1318,  1319,  1320,  1321,  1322,  1211,  1212,  1339,
   -1542, -1764,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,
    1347,  1348,  1323,     0, -1542,     0,     0, -1764,     0, -1542,
    1325,  1333, -1764,     0, -1542,   584,     0,  1326,     0,     0,
       0,     0,     0, -1542,  1447,   505,     0, -1542,     0,     0,
       0,     0,   729,     0,     0,   505,  1825,   505,  1829,     0,
     505,     0,  1327,     0,     0,     0,   505,     0,   505, -1764,
    2001,     0,     0,     0,     0,     0,     0,     0, -1542,   646,
     505,     0,     0,  2081,   646,   505,  1336,  2081,     0,   505,
     505,   505,   505,     0,   505,   505,     0,     0, -1542,     0,
       0,     0,     0,     0,     0,     0,   727,     0,     0,     0,
       0,    57,    57,     0,   584,   584,  1892,     0,  1213,  1214,
       0,     0,     0,     0,  1336,     0,     0,     0,     0,     0,
       0,     0,  1908,     0,   638,     0,   727,     0,  1215,     0,
    2002,     0,     0,     0,     0,     0,     0, -1542,     0,     0,
   -1542,     0,     0,     0,     0,     0, -1542,     0,     0,     0,
       0,     0,   729,  1328,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1338,  1329,
       0,     0,     0,     0,  1330,  1316,     0,     0,  1317,     0,
   -1542,     0,   729,  1319,  1320,  1321,  1322,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1331,  1332,     0,   727,
       0,     0,     0, -1542,     0,     0, -1764,     0,     0,     0,
    1325,  1333,     0,     0,     0,     0,     0,  1326,   928,     0,
       0,     0,     0,   822,     0,     0,  1995,    57,     0,     0,
       0,  1996,  1997,  1998,  1999,     0,     0,     0,     0,     0,
       0,     0,  1327,     0,     0,     0,     0,     0,     0,  1334,
     975,     0,  1335,     0,     0,   729,     0,     0,  2074,     0,
     505,     0,     0,     0,     0,     0,  1336,  1305,  1339,  1337,
       0, -1764, -1764, -1764,     0,  1343,  1344,  1345,  1346,  1347,
    1348,     0,     0,     0,     0, -1542,     0,     0,  1155,  1157,
    1159,  1160,  2081, -1542,     0,     0,     0,  2081,     0,     0,
    2081,     0,     0,  1640,     0,     0, -1764,     0,     0, -1542,
       0, -1542, -1542,  1343,  1344,  1345,  1346,  1347,  1348,   727,
       0,     0,     0,     0,     0,  2003,  2004,  2005,     0,  2006,
    2007,  2008,  2009,  2010,  2011,   584,     0,     0,     0,     0,
       0,  2091,     0,  1328,     0,     0,     0,     0, -1542,     0,
       0, -1542, -1542, -1542,     0,     0,  2091,   727,  1338,  1329,
    2110,     0,     0,  2113,  1330,  1774,     0,     0,  2222,     0,
       0,     0,     0,     0,     0,   729,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    57, -1764, -1764,   727,     0,
       0,   727,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1333,     0,     0,     0,     0,     0,     0,    57,     0,
       0,  1247,     0,   729,     0,     0,     0,  1504,  1247,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1764,     0,     0,     0,     0,  2081,
       0,     0, -1764,     0,   729,     0,     0,   729,     0,     0,
       0,     0,  1299,     0,   -39,     0,  1336,     0,  1339,     0,
       0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,
    1348,     0,     0,     0,     1,     0,     0,     0,  1986,  1504,
       0,     0,     0,     0,   584,     2,     0,     3,     4,     0,
       0,     0,     0,     0,  1504,   584,   584,   584,     0,     0,
       0,     0,     0,     5,  2002,  1313,     0,     0,   505,     0,
       0,     0,     6,     0,     0,    57,   584,     0,     0,     0,
       0,     0,     0,     0,     7,     0,     0,     0,  2238,     0,
    1247, -1544,  1247,  1247,     0,     8,     0,     0,     0,     0,
       0,     0,     0,     0,   646,     0,   584,     9,  1338,    10,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1504,  1504,     0,  1379,     0,     0,    11,     0,     0,
       0,     0,     0,     0,    57,     0,     0,     0,     0,     0,
       0,    12,     0,     0,  1640,     0,     0,     0,     0,  1390,
       0,    13,  2387,     0,     0,     0,     0,    14,   727,     0,
    1247,     0,     0,  1247,  1247,    15,     0,    16,    17,     0,
       0,     0,     0,     0,     0,  1436,     0,  2421,     0,     0,
       0,    18,     0,     0,     0,     0, -1544,     0,  1463,     0,
       0,     0,  2468,  2469,  2470,  2471,  2472,  2473,  2474,  2475,
    2476,  2477,     0,  1199,  1200,     0,     0,     0,  1339,  1487,
      19,  1340,  1341,  1342,   729,  1343,  1344,  1345,  1346,  1347,
    1348,     0,    57,     0,     0,    20,     0,     0,     0,     0,
       0,   584,   584,   584,   479,     0,  2091,  2341, -1544,     0,
       0,     0,  2341,  2355,     0,     0,     0,     0,     0,     0,
       0,    21, -1544,     0,     0,     0,     0, -1544,     0,  2003,
    2004,  2005, -1544,  2006,  2007,  2008,  2009,  2010,  2011,     0,
       0, -1544,  1774,     0,     0, -1544,     0,     0,     0,  1201,
    1202,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     584,     0,   505,     0,     0,     0,  1504,  1447,  1504,     0,
    1534,     0,     0,     0,     0,     0, -1544,     0,     0,     0,
    1563,     0,     0,     0,     0,     0,     0,   505,     0,  2422,
       0,     0,     0,     0,     0,     0, -1544,     0,    22,     0,
       0,    23,   505,   505,   505,   505,   505,   505,   505,   505,
     505,   505,     0,  1538,  1203,  1204,  1205,  1206,  1207,  1208,
    1521,     0,  1209,  1210,  1547,     0,  1548,  1908,     0,     0,
      24,     0,   584,     0,     0,  1554,     0,     0,     0,    25,
       0,     0,  1447,     0,     0, -1544,     0,     0, -1544,     0,
       0,     0,  1555,    26, -1544,     0,  1534,     0,     0,     0,
      27,     0,     0,     0,    28,     0,     0,     0,   584,     0,
       0,     0,     0,     0,    29,  1504,     0,     0,     0,     0,
    1574,  1576,     0,     0,     0,    30,     0,     0, -1544,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1569,     0,     0,   899,   899,     0,     0,
       0, -1544,  1607,  1608,     0,     0,  1621,  1622,     0, -1558,
     505,     0,     0,     0,     0,    32,  2528,     0,  1211,  1212,
      33,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,  2545,
       0,   584,   584,   584,   584,     0,     0,     0,  2341,  2355,
       0,  2341,     0,     0,  2554,     0,  2074,    35,  2091,  1049,
    1056,     0,  2091,     0,     0,     0,     0,     0,  2572,     0,
       0,    36,     0,  1316,   -39,     0,  1317,     0,     0,     0,
       0,  1319,     0, -1544,   916,     0,     0,     0,  2110,     0,
       0, -1544,     0,  1774,     0,     0,     0,     0,     0,  1640,
       0,     0,     0,     0, -1558,  1447,     0, -1544,  1325, -1544,
   -1544,  1504,     0,     0,     0, -1764,  1744,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1213,
    1214,  2635,     0,     0,     0,     0,     0,  1753,     0,  1755,
    1327,     0,  1798,  1798,     0,     0, -1544,     0,     0, -1544,
   -1544, -1544,     0,     0,     0,  1316, -1558,     0,  1317,     0,
       0,     0,     0,  1319,     0,     0,     0,     0,     0,     0,
   -1558,     0,     0,     0,     0, -1558,     0,     0,     0,     0,
   -1558,     0,     0,     0,     0,  2755,  1804,     0,     0, -1558,
    1325,     0,     0, -1558,  1247,     0,     0, -1764,     0,     0,
    1504,     0,     0,     0,  1247,     0,     0,  1247,     0,     0,
    2044,  1908,     0,     0,     0,     0,     0,     0,     0,     0,
    2774,  2775,  1327,  2674, -1558,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2786,     0,     0,
       0, -1764,     0,  1049, -1558,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1764,     0,  2690,
    1270,     0, -1764,     0,     0,  1889,  1891,     0,   479,  2341,
       0,     0,  2701,     0,     0,   505,     0,  2091,     0,  1934,
    1936,     0,  2091,     0,     0,  2091,     0,  2712,     0,  1281,
    2715,     0,  2054, -1558,     0,     0, -1558,     0,     0, -1764,
       0,     0, -1558,     0,  2742,     0,  1247,     0,     0,  1291,
    1292,  1293,     0,  2844,  1300,     0,     0,     0,     0,  1247,
       0,     0,     0, -1764,   646,   505,     0,     0,     0,     0,
       0,     0,     0,   584,     0,     0, -1558,  1357,     0, -1764,
     822,  2865,     0,  1995, -1764,     0,     0,     0,  1996,  1997,
    1998,  1999,     0,     0,  1336,     0,     0,     0,     0, -1558,
     505,   505,     0,     0,     0,     0,     0,  2305,     0,     0,
       0,   584,     0,  1447,     0,     0,     0,   505,     0,     0,
       0, -1764,     0,     0,     0,     0,     0,     0,     0,   584,
    1400,     0,  2742,     0,  1414,  1419,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   505,     0,     0,  2074,  1316,     0,     0,  1317,     0,
       0,     0,     0,  1319,  2091,     0,     0,     0,     0,  2715,
       0,     0,     0,     0,     0,     0,  1336,     0,     0,     0,
       0, -1558,     0,     0,     0,     0, -1764,  2839,  1049, -1558,
    1325,   916,     0,   505,     0,  1049,     0, -1764,     0,     0,
       0,     0,   584,  1316,     0, -1558,  1317, -1558, -1558,     0,
    1318,  1319,  1320,  1321,  1322,     0,  1049,  2097,     0,     0,
       0,   505,  1327,     0,     0,   646,     0,     0,     0,     0,
    1323,     0,     0,  2300,     0,     0,  2073,     0,  1325,   584,
       0,     0,     0,     0, -1558,  1326,     0, -1558, -1558, -1558,
       0,  2129,  2129,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   479, -1764,     0,
    1327,     0,     0,     0,     0,     0,  2894,     0,     0,     0,
     505,     0,     0,     0,  2712,     0, -1764,     0,     0,     0,
       0,  2001,  2314,  1343,  1344,  1345,  1346,  1347,  1348,     0,
       0,     0,     0,  2742,   646,   646,   646,     0,     0,   822,
       0,     0,  1995,     0,     0,     0,     0,  1996,  1997,  1998,
    1999,     0,     0, -1764,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1447,     0,     0,  2535,     0,     0, -1764,
       0,     0,     0,     0, -1764,     0,     0,     0,  2712,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2839,  2002,     0,     0,     0,     0,     0,     0, -1764,     0,
       0,  1328,     0,     0,  1774,  1343,  1344,  1345,  1346,  1347,
    1348, -1764,     0,     0,     0,  2200,     0,  1329,  1447,     0,
       0,     0,  1330,  2234,  2742,     0,  2211,  2212,  2214,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2701,   646,     0,   822,  1331,  1332,  1995,  2231,     0,     0,
       0,  1996,  1997,  1998,  1999,     0,     0,     0,     0,  1333,
       0,     0,     0,     0,     0,     0,  1336,     0,     0,     0,
    2536,     0,     0,  1604,     0,     0,     0,  1569,     0,     0,
       0,     0,     0,  1623,     0,  1641,     0,     0,  1652,  1655,
    1660,  1663,     0,     0,     0,     0,     0,  1334,     0,     0,
    1335,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1675,  1336,     0,     0,  1337,     0,  1679,
    1680,  1681,  1682,  1683,  1684,     0,     0,     0,     0,  1693,
    1694,     0,     0,     0,  1705,     0,     0,     0,  1708,     0,
       0,  1716,  1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,
    2001,     0,  1725,     0,     0,     0,     0,     0, -1764,   899,
       0,     0,  1049,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1757,     0,  2003,  2004,  2005,  1351,
    2006,  2007,  2008,  2009,  2010,  2011,     0,     0,     0,     0,
       0,     0,  2329,  2330,  2331,     0,  1338,     0,     0,     0,
       0,     0,     0,     0,     0,  1316,  1292,  1293,  1317,     0,
    2002,     0,  1318,  1319,  1320,  1321,  1322,     0,     0,     0,
    1351,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1323,     0,     0,     0,     0,     0,     0,     0,
    1325,     0,     0,     0,  2001,     0,     0,  1326, -1764,     0,
       0,  2386,     0,     0,     0,  1343,  1344,  1345,  1346,  1347,
    1348,  1247,     0,     0,     0,     0,     0,  1316,     0,     0,
    1317,     0,  1327,     0,  1318,  1319,  1320,  1321,  1322,     0,
       0,     0,     0,     0,     0,  1049,     0,     0,  1876,  1877,
       0,  1878,     0,     0,  1323,     0,  1339,     0,     0,  1340,
    1341,  1342,  1325,  1343,  1344,  1345,  1346,  1347,  1348,  1326,
       0,     0,     0,  1669,  2002,     0,     0,     0,     0,     0,
       0,  1049,     0,  2490,     0,     0,     0,     0,     0,  1351,
       0,     0,     0,     0,  1327,     0,  1351,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1569,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1328,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1049,     0,     0,     0,  1329,
       0,     0,  1973,     0,  1330,     0,     0,  1979,     0,     0,
       0,     0,     0,     0,     0,  2003,  2004,  2005,     0,  2006,
    2007,  2008,  2009,  2010,  2011,     0,  1331,  1332,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1333,     0,     0,     0,  1328,  1994,     0,     0,     0,
       0,     0,  2546,  2547,  2548,  2549,     0,  1660,     0,  1660,
    1660,  1329,     0,     0,     0,     0,  1330,  2033,     0,     0,
       0,  2036,     0,     0,  2038,     0,     0,     0,     0,  1334,
       0,     0,  1335,     0,     0,     0,     0,     0,  1331,  1332,
       0,     0,     0,     0,     0,     0,  1336,     0,     0,  1337,
       0,     0,     0,  1333,     0,     0,  1247,     0,     0,     0,
    2056,  1247,     0,  2059,     0,  2061,     0,     0,     0,  2003,
    2004,  2005,     0,  2006,  2007,  2008,  2009,  2010,  2011,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1334,     0,     0,  1335,     0,     0,     0,     0,     0,
       0,     0,     0,  1574,  1576,     0,     0,     0,  1336,  1316,
    1351,  1337,  1317,     0,     0,     0,  1318,  1319,  1320,  1321,
    1322,  1351,     0,     0,     0,  1648,     0,     0,     0,     0,
    1400,  1351,  1351,  1351,     0,     0,  1323,     0,  1338,     0,
    1351,     0,     0,     0,  1325,  1419,  1723,     0,     0,     0,
       0,  1326,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2137,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1327,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1351,     0,     0,
    1338,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1049,     0,     0,     0,     0,     0,  1316,     0,
       0,  1317,     0,     0,     0,     0,  1319,     0,  1339,     0,
    1351,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,
    1348,     0,     0,     0,  1351,  1669,     0,     0,     0,  1351,
       0,     0,     0,  1325,     0,     0,     0,     0,     0,  2229,
   -1764,     0,     0,     0,     0,     0,     0,  1328,     0,  1574,
    1576,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1247,     0,     0,  1329,  2763,  1327,     0,     0,  1330,     0,
    1339,     0,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,
    1346,  1347,  1348,     0,     0,     0,     0,  2040,     0,     0,
    1331,  1332,     0,     0,   507,  2256,     0,     0,     0,     0,
       0,     0,  2782,     0,  2260,  1333,     0,  2261,     0,     0,
    2263,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2803,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2317,     0,  2284,  2285,     0,
       0,  1757,     0,  1334,     0,     0,  1335,     0,   508,     0,
       0,     0,     0,  2296,     0,     0,     0,     0,     0,     0,
    1336,     0,  2303,  1337,   509,  2306, -1764,  2308,     0,     0,
       0,     0,     0,     0,     0,  2312,     0,     0,     0,     0,
       0,     0, -1764,  2319,  2320,     0,     0, -1764,     0,     0,
       0,     0,     0,  2853,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2359,  1351,     0,     0,     0,   510,     0,
       0,     0,     0,  2367, -1764,     0,     0,     0,   511,     0,
    2878,     0,     0,  1351,     0,     0,     0,     0,     0,  2380,
     512,     0,     0,     0,     0,   513,     0,     0,     0,     0,
       0,  1351,  1338,  1648,  1648,     0,  2012,     0,  1648,     0,
       0,     0,  1351,     0,     0,  1351,     0,     0,     0,     0,
    1351,     0,   514,  1351,     0,     0,     0,     0,     0,  1336,
       0,     0,     0,     0,     0,  1351,     0,     0,     0,  1351,
    1351,  1351,  1351,  1351,  1351,     0,     0,     0,     0,     0,
    1648,  1648,     0,  1351,  1351,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1351,     0,   515,  1351,     0,
       0,   516,     0,     0,     0,     0,  1351,  1351,  1351,  1351,
    1351,  1351,  1351,  1351,  1351,  1351,     0,     0,     0,  1247,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1339,     0,     0,  1340,  1341,  1342,     0,  1343,
    1344,  1345,  1346,  1347,  1348,     0,     0,  1351,     0,  2259,
    1316, -1764,     0,  1317,     0,     0,  2516,  1318,  1319,  1320,
    1321,  1322,     0,     0,   517,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1323,   518,     0,
       0,     0,     0,     0,     0,  1325,     0,     0,     0,     0,
       0,     0,  1326,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2529,  2530,     0,     0,     0,
    2531,   519,     0,     0,   520,  2534,     0,  1327,  2537,  2538,
       0,     0,   521,  2542,     0,   522,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   523,     0,     0,     0,     0,     0,
       0, -1764,     0,     0,     0,     0,     0,   524,  1343,  1344,
    1345,  1346,  1347,  1348,   525,     0,  1351,  1351,  1351,   899,
       0,     0,     0,   526,     0,     0,     0,     0,     0,   527,
       0,     0,  1316,     0,     0,  1317,     0,     0,     0,  1318,
    1319,  1320,  1321,  1322,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   528,     0,     0,     0,     0,  1323,
       0,     0,  2629,     0,     0,     0,     0,  1325,  1328,     0,
       0,     0,     0,     0,  1326,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1329,     0,     0,     0,     0,  1330,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1331,  1332,  1351,     0,     0,     0,     0,     0,  1351,
       0,     0,     0,     0,     0,     0,  1333,     0,     0,     0,
       0,     0,  2012,  2012,  1351,     0,  1648,  1648,  1648,  1648,
    1648,     0,     0,  1648,  1648,  1648,  1648,  1648,  1648,  1648,
    1648,  1648,  1648,  2012,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1334,     0,     0,  1335,     0,     0,
       0,     0,     0,  1351,     0,     0,  1351,  2033,  1351,     0,
       0,  1336,  2012,  2012,  1337,     0,  2685,  2686,     0,     0,
    2687,     0,     0,     0,     0,     0,  1351,  1648,  1648,  1351,
    1328,  1351,     0,  1316,     0,     0,  1317,     0,     0,     0,
       0,  1319,     0,     0,     0,     0,  1329,     0,     0,     0,
       0,  1330,     0,     0,     0,     0,     0,  2729,  2730,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1325,     0,
       0,  2744,     0,  1331,  1332, -1764,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1333,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1327,     0,     0,  1338,     0,     0,     0,  1351,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1334,     0,     0,  1335,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1336,     0,     0,  1337,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2318,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2823,     0,     0,     0,     0,
    1316,     0,     0,  1317,     0,     0,     0,     0,  1319,  1351,
       0, -1764,  1300,  1339,     0,     0,  1340,  1341,  1342,     0,
    1343,  1344,  1345,  1346,  1347,  1348,   899, -1764,     0,  2845,
    2301,     0, -1764,     0,     0,  1325,  1351,     0,     0,     0,
    1351,  1351, -1764,  1351,  2859,  1338,  2012,  2012,  2012,  2012,
    2012,     0,     0,     0,  2012,  2012,  2012,  2012,  2012,  2012,
    2012,  2012,  2012,  2012,  1351,  1351,     0,  1327,     0, -1764,
       0,  1316,     0,     0,  1317,     0,  1351,     0,  1318,  1319,
    1320,  1321,  1322,  1351,     0,     0,  1351,     0,  1351,     0,
       0,     0,  1351,     0,     0,  2012,  2012,     0,  1323,  1351,
    1351,     0,     0,     0,     0,     0,  1325,     0,     0,     0,
       0,     0,     0,  1326,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1336,     0,     0,  2729,     0,     0,
       0,  2906,     0,     0,     0,     0,     0,  2539,  1327,  1351,
       0,     0,     0,     0,     0,  1339,     0,  1351,  1340,  1341,
    1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,  2929,
    1351,     0,  2388,     0,     0,     0,     0,     0, -1764,  1316,
       0,     0,  1317,     0,   979,     0,  1318,  1319,  1320,  1321,
    1322,   980,     0,     0, -1764,     0,     0,     0,   992, -1764,
       0,     0,  2729,     0,     0,     0,  1323,     0,     0,     0,
       0,     0,     0,     0,  1325,     0,     0,   993,     0,     0,
       0,  1326,     0,     0,     0,     0, -1764,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1764,     0,     0,     0,
       0,     0,  2979,  2979,     0,     0,  1327,     0,     0,  1328,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1329,     0,     0,   994,     0,
    1330,     0,     0,     0,     0,     0,     0,  2979,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1336,  1331,  1332,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,     0,  1351,  1333,     0,     0,
    1648,     0,     0,     0,     0,     0,     0,     0,     0,  1351,
    1351,  1351,     0,  2979,  1351,     0, -1764,  1351,  1351,     0,
       0,     0,  1351,  1343,  1344,  1345,  1346,  1347,  1348,     0,
       0,     0,     0,     0,     0,  1334,     0,  1328,  1335,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   995,
       0,     0,  1336,  1329,     0,  1337,     0,     0,  1330,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1764,     0,     0,     0,     0,     0,     0,
    1331,  1332,     0,     0,     0,     0,     0,     0,     0,     0,
    1648,     0,     0,     0,     0,  1333,     0,     0,     0,     0,
     996,     0,     0,     0,     0,     0,     0,     0,   997,  1351,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     998,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1334,     0,     0,  1335,     0,     0,     0,
       0,   982,     0,     0,  1338,     0,     0,     0,     0,     0,
    1336,   999,     0,  1337,     0,     0,     0,     0,     0,  2012,
    1648,     0,     0,     0,     0,  1351,  1351,  1351,     0,     0,
       0,     0,     0, -1764,     0,     0,     0,     0,     0,     0,
    1343,  1344,  1345,  1346,  1347,  1348,     0,     0,     0,     0,
       0,     0,  1000,     0,     0,     0,   984,     0,  1001,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1351,
    1351,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,     0,     0,     0,  1351,     0,  1003,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2012,     0,     0,     0,
    1004,     0,  1338,     0,  1339,     0,     0,  1340,  1341,  1342,
       0,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,     0,
       0,  2518,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2012,     0,     0,     0,     0,
       0,     0,     0,   986,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1351,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1351,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1351,
       0,     0,  1339,     0,     0,  1340,  1341,  1342,     0,  1343,
    1344,  1345,  1346,  1347,  1348,     0,     0,     0,     0,  2540,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1016,   819,   548,   820,   821,   822,
     823,   824,     0,     0,     0,     0,  1351,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,   102,
    1017,   103,   104,   105,     0,     0,     0,     0,   825,  1351,
       0,   106,   107,     0,   108,   109,   110,  1018,   112,   113,
     114,   115,   826,  1019,   827,   828,     0,   120,   121,   122,
     123,   124,   125,   829,   830,   126,   127,   831,   832,   130,
       0,   131,   132,   133,   134,   833,     0,  1020,     0,   137,
     138,   139,   140,   141,   142,  1021,   144,   145,   146,  1351,
     147,   148,   149,   150,   151,   152,     0,  1022,   154,   155,
     156,   835,   836,   837,  1023,   839,   840,   841,   158,   159,
     160,   161,   162,   163,   164,   842,   843,   167,   844,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,  1024,     0,   180,   181,   679,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   845,   196,   197,   198,   199,   200,   846,
     847,   202,     0,   203,   204,   848,   206,     0,   207,     0,
     208,  1025,     0,  1026,   211,   212,   213,  1027,   215,     0,
     216,     0,   849,   850,   219,     0,   220,   221,   222,   223,
     224,   225,   226,  1028,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,  1029,   240,   241,
     242,   243,   244,   245,   851,   852,     0,   853,     0,   249,
    1030,  1031,   252,  1032,   254,   255,   256,   257,   258,   259,
       0,     0,   260,  1033,   262,  1034,     0,   264,   265,   266,
     854,   855,   267,   268,   269,   270,   271,  1035,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   856,  1036,   857,   294,
     295,   296,   297,   858,   298,   299,  1037,   301,   859,   860,
     303,   861,   305,   306,   307,     0,   308,   309,     0,     0,
     862,   311,   312,     0,     0,   313,   314,  1038,   316,  1039,
     863,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   864,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   865,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,  1040,   368,   369,   370,   866,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   867,   388,   389,   390,
     391,   392,  1041,   394,   395,   868,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,  1042,
     410,   869,   412,     0,   413,   414,     0,   415,  1043,   417,
     418,   419,   420,   421,     0,   870,   871,     0,     0,   424,
     425,   872,   427,   873,   874,   429,   430,  1044,   432,   433,
     434,   435,   436,     0,     0,   437,   438,   439,   440,   441,
     876,     0,   442,   443,   444,   445,   446,   447,   877,  1045,
     449,  1046,   451,   452,   453,   454,     0,     0,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   878,     0,     0,     0,     0,     0,     0,   879,
     880,  1047,     0,     0,     0,     0,   882,     0,   883,  1048,
       0,     0,     0,   884,     0,   885,   886,    93,   819,   548,
     820,   821,   822,   823,   824,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,   825,     0,     0,   106,   107,     0,   108,   109,   110,
     111,   112,   113,   114,   115,   826,   117,   827,   828,     0,
     120,   121,   122,   123,   124,   125,   829,   830,   126,   127,
     831,   832,   130,     0,   131,   132,   133,   134,   833,     0,
     834,     0,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,   154,   155,   156,   835,   836,   837,   838,   839,   840,
     841,   158,   159,   160,   161,   162,   163,   164,   842,   843,
     167,   844,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     679,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   845,   196,   197,   198,
     199,   200,   846,   847,   202,     0,   203,   204,   848,   206,
       0,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,   849,   850,   219,     0,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   851,   852,     0,
     853,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,     0,   260,   261,   262,   263,     0,
     264,   265,   266,   854,   855,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   856,
     292,   857,   294,   295,   296,   297,   858,   298,   299,   300,
     301,   859,   860,   303,   861,   305,   306,   307,     0,   308,
     309,     0,     0,   862,   311,   312,     0,     0,   313,   314,
     315,   316,   317,   863,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   864,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   865,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   866,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,    26,   383,   384,   385,   386,   387,   867,
     388,   389,   390,   391,   392,   393,   394,   395,   868,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   869,   412,     0,   413,   414,    31,
     415,   416,   417,   418,   419,   420,   421,     0,   870,   871,
       0,     0,   424,   425,   872,   427,   873,   874,   429,   430,
     875,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   876,     0,   442,   443,   444,   445,   446,
     576,   877,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,     0,    34,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   878,     0,    35,     0,     0,
       0,     0,   879,   880,     0,     0,     0,     0,     0,   882,
       0,   883,  2835,     0,     0,     0,   884,     0,   885,   886,
      93,   819,   548,   820,   821,   822,   823,   824,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,   102,     0,   103,   104,   105,
       0,     0,     0,     0,   825,     0,     0,   106,   107,     0,
     108,   109,   110,   111,   112,   113,   114,   115,   826,   117,
     827,   828,     0,   120,   121,   122,   123,   124,   125,   829,
     830,   126,   127,   831,   832,   130,     0,   131,   132,   133,
     134,   833,     0,   834,     0,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,   154,   155,   156,   835,   836,   837,
     838,   839,   840,   841,   158,   159,   160,   161,   162,   163,
     164,   842,   843,   167,   844,   168,     0,   169,   170,   171,
     172,   173,   174,     0,   175,   176,   177,   178,   179,     0,
       0,   180,   181,   679,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,     0,   191,   192,   193,   194,   845,
     196,   197,   198,   199,   200,   846,   847,   202,     0,   203,
     204,   848,   206,     0,   207,     0,   208,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,   849,   850,
     219,     0,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     851,   852,     0,   853,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,     0,   260,   261,
     262,   263,     0,   264,   265,   266,   854,   855,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   856,   292,   857,   294,   295,   296,   297,   858,
     298,   299,   300,   301,   859,   860,   303,   861,   305,   306,
     307,     0,   308,   309,     0,     0,   862,   311,   312,     0,
       0,   313,   314,   315,   316,   317,   863,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     864,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,     0,   344,   345,   346,   865,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,   370,   866,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,    26,   383,   384,   385,
     386,   387,   867,   388,   389,   390,   391,   392,   393,   394,
     395,   868,   397,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   869,   412,     0,
     413,   414,    31,   415,   416,   417,   418,   419,   420,   421,
       0,   870,   871,     0,     0,   424,   425,   872,   427,   873,
     874,   429,   430,   875,   432,   433,   434,   435,   436,     0,
       0,   437,   438,   439,   440,   441,   876,     0,   442,   443,
     444,   445,   446,   576,   877,     0,   449,   450,   451,   452,
     453,   454,     0,     0,   455,     0,    34,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   878,     0,
      35,     0,     0,     0,     0,   879,   880,     0,     0,     0,
       0,     0,   882,     0,   883,     0,     0,     0,     0,   884,
       0,   885,   886,    93,   819,   548,   820,   821,   822,   823,
     824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,   825,     0,     0,
     106,   107,     0,   108,   109,   110,   111,   112,   113,   114,
     115,   826,   117,   827,   828,  1656,   120,   121,   122,   123,
     124,   125,   829,   830,   126,   127,   831,   832,   130,     0,
     131,   132,   133,   134,   833,     0,   834,     0,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,   154,   155,   156,
     835,   836,   837,   838,   839,   840,   841,   158,   159,   160,
     161,   162,   163,   164,   842,   843,   167,   844,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   679,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   845,   196,   197,   198,   199,   200,   846,   847,
     202,     0,   203,   204,   848,   206,     0,   207,     0,   208,
     209,  1657,   210,   211,   212,   213,   214,   215,     0,   216,
       0,   849,   850,   219,     0,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   851,   852,     0,   853,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
    1658,   260,   261,   262,   263,     0,   264,   265,   266,   854,
     855,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   856,   292,   857,   294,   295,
     296,   297,   858,   298,   299,   300,   301,   859,   860,   303,
     861,   305,   306,   307,     0,   308,   309,     0,     0,   862,
     311,   312,     0,     0,   313,   314,   315,   316,   317,   863,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   864,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   865,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   866,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   867,   388,   389,   390,   391,
     392,   393,   394,   395,   868,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     869,   412,     0,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,   870,   871,     0,  1659,   424,   425,
     872,   427,   873,   874,   429,   430,   875,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,   876,
       0,   442,   443,   444,   445,   446,   447,   877,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   878,     0,     0,     0,     0,     0,     0,   879,   880,
       0,     0,     0,     0,     0,   882,     0,   883,     0,     0,
       0,     0,   884,     0,   885,   886,    93,   819,   548,   820,
     821,   822,   823,   824,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,   102,  -954,   103,   104,   105,     0,     0,     0,  -954,
     825,     0,     0,   106,   107,     0,   108,   109,   110,   111,
     112,   113,   114,   115,   826,   117,   827,   828,     0,   120,
     121,   122,   123,   124,   125,   829,   830,   126,   127,   831,
     832,   130,     0,   131,   132,   133,   134,   833,     0,   834,
       0,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
     154,   155,   156,   835,   836,   837,   838,   839,   840,   841,
     158,   159,   160,   161,   162,   163,   164,   842,   843,   167,
     844,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   679,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
       0,   191,   192,   193,   194,   845,   196,   197,   198,   199,
     200,   846,   847,   202,     0,   203,   204,   848,   206,     0,
     207,     0,   208,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,   849,   850,   219,     0,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   851,   852,     0,   853,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,     0,   260,   261,   262,   263,     0,   264,
     265,   266,   854,   855,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   856,   292,
     857,   294,   295,   296,   297,   858,   298,   299,   300,   301,
     859,   860,   303,   861,   305,   306,   307,     0,   308,   309,
       0,     0,   862,   311,   312,     0,     0,   313,   314,   315,
     316,   317,   863,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   864,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   865,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     866,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   867,   388,
     389,   390,   391,   392,   393,   394,   395,   868,   397,  -954,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   869,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   870,   871,     0,
       0,   424,   425,   872,   427,   873,   874,   429,   430,   875,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   876,     0,   442,   443,   444,   445,   446,   447,
     877,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   878,     0,     0,     0,     0,     0,
       0,   879,   880,     0,     0,     0,     0,     0,   882,     0,
     883,     0,     0,     0,     0,   884,     0,   885,   886,    93,
     819,   548,   820,   821,   822,   823,   824,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,  1396,   103,   104,   105,     0,
       0,     0,     0,   825,     0,     0,   106,   107,     0,   108,
     109,   110,   111,   112,   113,   114,   115,   826,   117,   827,
     828,     0,   120,   121,   122,   123,   124,   125,   829,   830,
     126,   127,   831,   832,   130,     0,   131,   132,   133,   134,
     833,     0,   834,     0,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,   154,   155,   156,   835,   836,   837,   838,
     839,   840,   841,   158,   159,   160,   161,   162,   163,   164,
     842,   843,   167,   844,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   679,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   845,   196,
     197,   198,   199,   200,   846,   847,   202,     0,   203,   204,
     848,   206,     0,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,   849,   850,   219,
       0,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   851,
     852,     0,   853,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,     0,   260,   261,   262,
     263,     0,   264,   265,   266,   854,   855,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   856,   292,   857,   294,   295,   296,   297,   858,   298,
     299,   300,   301,   859,   860,   303,   861,   305,   306,   307,
       0,   308,   309,     0,     0,   862,   311,   312,     0,     0,
     313,   314,   315,   316,   317,   863,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   864,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   865,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   866,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   867,   388,   389,   390,   391,   392,   393,   394,   395,
     868,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   869,   412,     0,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
     870,   871,     0,     0,   424,   425,   872,   427,   873,   874,
     429,   430,   875,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,   876,     0,   442,   443,   444,
     445,   446,   447,   877,     0,   449,   450,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   878,     0,     0,
       0,     0,     0,     0,   879,   880,  1397,     0,     0,     0,
       0,   882,     0,   883,     0,     0,     0,     0,   884,     0,
     885,   886,    93,   819,   548,   820,   821,   822,   823,   824,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,   102,  2716,   103,
     104,   105,     0,     0,     0,     0,   825,     0,     0,   106,
     107,     0,   108,   109,   110,   111,   112,   113,   114,   115,
     826,   117,   827,   828,     0,   120,   121,   122,   123,   124,
     125,   829,   830,   126,   127,   831,   832,   130,     0,   131,
     132,   133,   134,   833,     0,   834,     0,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,   154,  2717,   156,   835,
     836,   837,   838,   839,   840,   841,   158,   159,   160,   161,
     162,   163,   164,   842,   843,   167,   844,   168,     0,   169,
     170,   171,   172,   173,   174,     0,   175,   176,   177,   178,
     179,     0,     0,   180,   181,   679,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,     0,   191,   192,   193,
     194,   845,   196,   197,   198,   199,   200,   846,   847,   202,
       0,   203,   204,   848,   206,     0,   207,     0,   208,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
    2718,   850,   219,     0,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   851,   852,     0,   853,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,     0,
     260,   261,   262,   263,     0,   264,   265,   266,   854,   855,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   856,   292,   857,   294,   295,   296,
     297,   858,   298,   299,   300,   301,   859,   860,   303,   861,
     305,   306,   307,     0,   308,   309,     0,     0,   862,   311,
     312,     0,     0,   313,   314,   315,   316,   317,   863,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   864,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,     0,   344,   345,   346,
     865,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,  2719,   866,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   867,   388,   389,   390,   391,   392,
     393,   394,   395,   868,   397,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   869,
     412,     0,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,   870,   871,     0,     0,   424,   425,   872,
     427,   873,   874,   429,   430,   875,   432,   433,   434,   435,
     436,     0,     0,   437,   438,   439,   440,   441,   876,     0,
     442,   443,   444,   445,   446,   447,   877,     0,   449,   450,
     451,   452,   453,   454,     0,     0,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     878,     0,     0,     0,     0,     0,     0,   879,   880,  2720,
       0,     0,     0,     0,   882,     0,  2721,     0,     0,     0,
       0,   884,     0,   885,   886,    93,   819,   548,   820,   821,
     822,   823,   824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,   825,
       0,     0,   106,   107,     0,   108,   109,   110,   111,   112,
     113,   114,   115,   826,   117,   827,   828,     0,   120,   121,
     122,   123,   124,   125,   829,   830,   126,   127,   831,   832,
     130,     0,   131,   132,   133,   134,   833,     0,   834,     0,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,   154,
     155,   156,   835,   836,   837,   838,   839,   840,   841,   158,
     159,   160,   161,   162,   163,   164,   842,   843,   167,   844,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   679,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   845,   196,   197,   198,   199,   200,
     846,   847,   202,     0,   203,   204,   848,   206,     0,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,   849,   850,   219,     0,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   851,   852,     0,   853,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,     0,   260,   261,   262,   263,     0,   264,   265,
     266,   854,   855,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   856,   292,   857,
     294,   295,   296,   297,   858,   298,   299,   300,   301,   859,
     860,   303,   861,   305,   306,   307,     0,   308,   309,     0,
       0,   862,   311,   312,     0,     0,   313,   314,   315,   316,
     317,   863,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   864,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   865,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   866,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   867,   388,   389,
     390,   391,   392,   393,   394,   395,   868,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   869,   412,     0,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,   870,   871,     0,     0,
     424,   425,   872,   427,   873,   874,   429,   430,   875,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,   876,     0,   442,   443,   444,   445,   446,   447,   877,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   878,     0,     0,     0,     0,     0,     0,
     879,   880,   881,     0,     0,     0,     0,   882,     0,   883,
       0,     0,     0,     0,   884,     0,   885,   886,    93,  1410,
     548,   820,   821,   822,  1411,   824,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,   102,  1412,   103,   104,   105,     0,     0,
       0,     0,   825,     0,     0,   106,   107,     0,   108,   109,
     110,   111,   112,   113,   114,   115,   826,   117,   827,   828,
       0,   120,   121,   122,   123,   124,   125,   829,   830,   126,
     127,   831,   832,   130,     0,   131,   132,   133,   134,   833,
       0,   834,     0,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,   154,   155,   156,   835,   836,   837,   838,   839,
     840,   841,   158,   159,   160,   161,   162,   163,   164,   842,
     843,   167,   844,   168,     0,   169,   170,   171,   172,   173,
     174,     0,   175,   176,   177,   178,   179,     0,     0,   180,
     181,   679,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,     0,   191,   192,   193,   194,   845,   196,   197,
     198,   199,   200,   846,   847,   202,     0,   203,   204,   848,
     206,     0,   207,     0,   208,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,   849,   850,   219,     0,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   851,   852,
       0,   853,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,     0,   260,   261,   262,   263,
       0,   264,   265,   266,   854,   855,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     856,   292,   857,   294,   295,   296,   297,   858,   298,   299,
     300,   301,   859,   860,   303,   861,   305,   306,   307,     0,
     308,   309,     0,     0,   862,   311,   312,     0,     0,   313,
     314,   315,   316,   317,   863,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   864,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,     0,   344,   345,   346,   865,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   866,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     867,   388,   389,   390,   391,   392,   393,   394,   395,   868,
     397,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   869,   412,     0,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,   870,
     871,     0,     0,   424,   425,   872,   427,   873,   874,   429,
     430,   875,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,   876,     0,   442,   443,   444,   445,
     446,   447,   877,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   878,     0,     0,     0,
       0,     0,     0,   879,   880,     0,     0,     0,     0,     0,
     882,     0,   883,     0,     0,     0,     0,   884,     0,   885,
     886,    93,   819,   548,   820,   821,   822,   823,   824,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,   825,     0,     0,   106,   107,
       0,   108,   109,   110,   111,   112,   113,   114,   115,   826,
     117,   827,   828,     0,   120,   121,   122,   123,   124,   125,
     829,   830,   126,   127,   831,   832,   130,     0,   131,   132,
     133,   134,   833,     0,   834,     0,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,   154,   155,   156,   835,   836,
     837,   838,   839,   840,   841,   158,   159,   160,   161,   162,
     163,   164,   842,   843,   167,   844,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   679,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     845,   196,   197,   198,   199,   200,   846,   847,   202,     0,
     203,   204,   848,   206,     0,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,   849,
     850,   219,     0,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   851,   852,     0,   853,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,     0,   260,
     261,   262,   263,     0,   264,   265,   266,   854,   855,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   856,   292,   857,   294,   295,   296,   297,
     858,   298,   299,   300,   301,   859,   860,   303,   861,   305,
     306,   307,     0,   308,   309,     0,     0,   862,   311,   312,
       0,     0,   313,   314,   315,   316,   317,   863,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   864,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   865,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   866,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   867,   388,   389,   390,   391,   392,   393,
     394,   395,   868,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   869,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   870,   871,     0,     0,   424,   425,   872,   427,
     873,   874,   429,   430,   875,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   876,     0,   442,
     443,   444,   445,   446,   447,   877,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   878,
       0,     0,     0,     0,     0,     0,   879,   880,     0,     0,
       0,     0,     0,   882,     0,   883,  1650,     0,     0,     0,
     884,     0,   885,   886,  1016,   819,   548,   820,   821,   822,
     823,   824,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,     0,     0,     0,     0,   825,     0,
       0,   106,   107,     0,   108,   109,   110,  1018,   112,   113,
     114,   115,   826,  1019,   827,   828,     0,   120,   121,   122,
     123,   124,   125,   829,   830,   126,   127,   831,   832,   130,
       0,   131,   132,   133,   134,   833,     0,  1020,     0,   137,
     138,   139,   140,   141,   142,  1021,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,  1022,   154,   155,
     156,   835,   836,   837,  1023,   839,   840,   841,   158,   159,
     160,   161,   162,   163,   164,   842,   843,   167,   844,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,     0,     0,   180,   181,   679,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   845,   196,   197,   198,   199,   200,   846,
     847,   202,     0,   203,   204,   848,   206,     0,   207,     0,
     208,  1025,     0,  1026,   211,   212,   213,  1027,   215,     0,
     216,     0,   849,   850,   219,     0,   220,   221,   222,   223,
     224,   225,   226,  1028,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,  1029,   240,   241,
     242,   243,   244,   245,   851,   852,     0,   853,     0,   249,
    1030,  1031,   252,  1032,   254,   255,   256,   257,   258,   259,
       0,     0,   260,  1033,   262,  1034,     0,   264,   265,   266,
     854,   855,   267,   268,   269,   270,   271,  1035,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   856,  1036,   857,   294,
     295,   296,   297,   858,   298,   299,  1037,   301,   859,   860,
     303,   861,   305,   306,   307,     0,   308,   309,     0,     0,
     862,   311,   312,     0,     0,   313,   314,  1038,   316,  1039,
     863,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   864,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   865,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,  1040,   368,   369,   370,   866,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   867,   388,   389,   390,
     391,   392,  1041,   394,   395,   868,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,  1042,
     410,   869,   412,     0,   413,   414,     0,   415,  1043,   417,
     418,   419,   420,   421,     0,   870,   871,     0,     0,   424,
     425,   872,   427,   873,   874,   429,   430,  1044,   432,   433,
     434,   435,   436,     0,     0,   437,   438,   439,   440,   441,
     876,     0,   442,   443,   444,   445,   446,   447,   877,  1871,
     449,  1046,   451,   452,   453,   454,     0,     0,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   878,     0,     0,     0,     0,     0,     0,   879,
     880,     0,     0,     0,     0,     0,   882,     0,   883,     0,
       0,     0,     0,   884,     0,   885,   886,  1016,   819,   548,
     820,   821,   822,   823,   824,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,   825,     0,     0,   106,   107,     0,   108,   109,   110,
    1018,   112,   113,   114,   115,   826,  1019,   827,   828,     0,
     120,   121,   122,   123,   124,   125,   829,   830,   126,   127,
     831,   832,   130,     0,   131,   132,   133,   134,   833,     0,
    1020,     0,   137,   138,   139,   140,   141,   142,  1021,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
    1022,   154,   155,   156,   835,   836,   837,  1023,   839,   840,
     841,   158,   159,   160,   161,   162,   163,   164,   842,   843,
     167,   844,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     679,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   845,   196,   197,   198,
     199,   200,   846,   847,   202,     0,   203,   204,   848,   206,
       0,   207,     0,   208,  1025,     0,  1026,   211,   212,   213,
    1027,   215,     0,   216,     0,   849,   850,   219,     0,   220,
     221,   222,   223,   224,   225,   226,  1028,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
    1029,   240,   241,   242,   243,   244,   245,   851,   852,     0,
     853,     0,   249,  1030,  1031,   252,  1032,   254,   255,   256,
     257,   258,   259,     0,     0,   260,  1033,   262,  1034,     0,
     264,   265,   266,   854,   855,   267,   268,   269,   270,   271,
    1035,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   856,
    1036,   857,   294,   295,   296,   297,   858,   298,   299,  1037,
     301,   859,   860,   303,   861,   305,   306,   307,     0,   308,
     309,     0,     0,   862,   311,   312,     0,     0,   313,   314,
    1038,   316,  1039,   863,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   864,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   865,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,  1040,   368,   369,
     370,   866,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   867,
     388,   389,   390,   391,   392,  1041,   394,   395,   868,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,  1042,   410,   869,   412,     0,   413,   414,     0,
     415,  1043,   417,   418,   419,   420,   421,     0,   870,   871,
       0,     0,   424,   425,   872,   427,   873,   874,   429,   430,
    1044,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   876,     0,   442,   443,   444,   445,   446,
     447,   877,     0,   449,  1046,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   878,     0,     0,     0,     0,
       0,     0,   879,   880,     0,     0,     0,     0,     0,   882,
       0,   883,  1916,     0,     0,     0,   884,     0,   885,   886,
      93,   819,   548,   820,   821,   822,   823,   824,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,   102,     0,   103,   104,   105,
       0,     0,     0,     0,   825,     0,     0,   106,   107,     0,
     108,   109,   110,   111,   112,   113,   114,   115,   826,   117,
     827,   828,     0,   120,   121,   122,   123,   124,   125,   829,
     830,   126,   127,   831,   832,   130,     0,   131,   132,   133,
     134,   833,     0,   834,     0,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,   154,   155,   156,   835,   836,   837,
     838,   839,   840,   841,   158,   159,   160,   161,   162,   163,
     164,   842,   843,   167,   844,   168,     0,   169,   170,   171,
     172,   173,   174,     0,   175,   176,   177,   178,   179,     0,
       0,   180,   181,   679,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,     0,   191,   192,   193,   194,   845,
     196,   197,   198,   199,   200,   846,   847,   202,     0,   203,
     204,   848,   206,     0,   207,     0,   208,   209,  1657,   210,
     211,   212,   213,   214,   215,     0,   216,     0,   849,   850,
     219,     0,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     851,   852,     0,   853,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,     0,   260,   261,
     262,   263,     0,   264,   265,   266,   854,   855,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   856,   292,   857,   294,   295,   296,   297,   858,
     298,   299,   300,   301,   859,   860,   303,   861,   305,   306,
     307,     0,   308,   309,     0,     0,   862,   311,   312,     0,
       0,   313,   314,   315,   316,   317,   863,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     864,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,     0,   344,   345,   346,   865,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,   370,   866,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   867,   388,   389,   390,   391,   392,   393,   394,
     395,   868,   397,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   869,   412,     0,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,   870,   871,     0,     0,   424,   425,   872,   427,   873,
     874,   429,   430,   875,   432,   433,   434,   435,   436,     0,
       0,   437,   438,   439,   440,   441,   876,     0,   442,   443,
     444,   445,   446,   447,   877,     0,   449,   450,   451,   452,
     453,   454,     0,     0,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   878,     0,
       0,     0,     0,     0,     0,   879,   880,     0,     0,     0,
       0,     0,   882,     0,   883,     0,     0,     0,     0,   884,
       0,   885,   886,    93,   819,   548,   820,   821,   822,   823,
     824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,   825,     0,     0,
     106,   107,     0,   108,   109,   110,   111,   112,   113,   114,
     115,   826,   117,   827,   828,     0,   120,   121,   122,   123,
     124,   125,   829,   830,   126,   127,   831,   832,   130,     0,
     131,   132,   133,   134,   833,     0,   834,     0,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,   154,   155,   156,
     835,   836,   837,   838,   839,   840,   841,   158,   159,   160,
     161,   162,   163,   164,   842,   843,   167,   844,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   679,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   845,   196,   197,   198,   199,   200,   846,   847,
     202,     0,   203,   204,   848,   206,     0,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,   849,   850,   219,     0,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   851,   852,     0,   853,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
       0,   260,   261,   262,   263,     0,   264,   265,   266,   854,
     855,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   856,   292,   857,   294,   295,
     296,   297,   858,   298,   299,   300,   301,   859,   860,   303,
     861,   305,   306,   307,     0,   308,   309,     0,     0,   862,
     311,   312,     0,     0,   313,   314,   315,   316,   317,   863,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   864,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   865,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   866,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   867,   388,   389,   390,   391,
     392,   393,   394,   395,   868,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     869,   412,     0,   413,   414,  2228,   415,   416,   417,   418,
     419,   420,   421,     0,   870,   871,     0,     0,   424,   425,
     872,   427,   873,   874,   429,   430,   875,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,   876,
       0,   442,   443,   444,   445,   446,   447,   877,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   878,     0,     0,     0,     0,     0,     0,   879,   880,
       0,     0,     0,     0,     0,   882,     0,   883,     0,     0,
       0,     0,   884,     0,   885,   886,    93,   819,   548,   820,
     821,   822,   823,   824,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,     0,     0,     0,     0,
     825,     0,     0,   106,   107,     0,   108,   109,   110,   111,
     112,   113,   114,   115,   826,   117,   827,   828,     0,   120,
     121,   122,   123,   124,   125,   829,   830,   126,   127,   831,
     832,   130,     0,   131,   132,   133,   134,   833,     0,   834,
       0,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
     154,   155,   156,   835,   836,   837,   838,   839,   840,   841,
     158,   159,   160,   161,   162,   163,   164,   842,   843,   167,
     844,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   679,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
       0,   191,   192,   193,   194,   845,   196,   197,   198,   199,
     200,   846,   847,   202,     0,   203,   204,   848,   206,     0,
     207,     0,   208,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,   849,   850,   219,     0,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   851,   852,     0,   853,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,     0,   260,   261,   262,   263,     0,   264,
     265,   266,   854,   855,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   856,   292,
     857,   294,   295,   296,   297,   858,   298,   299,   300,   301,
     859,   860,   303,   861,   305,   306,   307,     0,   308,   309,
       0,     0,   862,   311,   312,     0,     0,   313,   314,   315,
     316,   317,   863,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   864,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   865,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     866,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   867,   388,
     389,   390,   391,   392,   393,   394,   395,   868,   397,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   869,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   870,   871,     0,
       0,   424,   425,   872,   427,   873,   874,   429,   430,   875,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   876,     0,   442,   443,   444,   445,   446,   447,
     877,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   878,     0,     0,     0,     0,     0,
       0,   879,   880,     0,     0,     0,     0,     0,   882,     0,
     883,     0,     0,     0,     0,   884,     0,   885,   886,  1016,
     819,   548,   820,   821,   822,   823,   824,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,   825,     0,     0,   106,   107,     0,   108,
     109,   110,  1018,   112,   113,   114,   115,   826,  1019,   827,
     828,     0,   120,   121,   122,   123,   124,   125,   829,   830,
     126,   127,   831,   832,   130,     0,   131,   132,   133,   134,
     833,     0,  1020,     0,   137,   138,   139,   140,   141,   142,
    1021,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,  1022,   154,   155,   156,   835,   836,   837,  1023,
     839,   840,   841,   158,   159,   160,   161,   162,   163,   164,
     842,   843,   167,   844,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   679,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   845,   196,
     197,   198,   199,   200,   846,   847,   202,     0,   203,   204,
     848,   206,     0,   207,     0,   208,  1025,     0,  1026,   211,
     212,   213,  1027,   215,     0,   216,     0,   849,   850,   219,
       0,   220,   221,   222,   223,   224,   225,   226,  1028,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,  1029,   240,   241,   242,   243,   244,   245,   851,
     852,     0,   853,     0,   249,  1030,  1031,   252,  1032,   254,
     255,   256,   257,   258,   259,     0,     0,   260,  1033,   262,
    1034,     0,   264,   265,   266,   854,   855,   267,   268,   269,
     270,   271,  1035,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   856,  1036,   857,   294,   295,   296,   297,   858,   298,
     299,  1037,   301,   859,   860,   303,   861,   305,   306,   307,
       0,   308,   309,     0,     0,   862,   311,   312,     0,     0,
     313,   314,  1038,   316,  1039,   863,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   864,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   865,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,  1040,
     368,   369,   370,   866,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   867,   388,   389,   390,   391,   392,  1041,   394,   395,
     868,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,  1042,   410,   869,   412,     0,   413,
     414,     0,   415,  1043,   417,   418,   419,   420,   421,     0,
     870,   871,     0,     0,   424,   425,   872,   427,   873,   874,
     429,   430,  1044,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,   876,     0,   442,   443,   444,
     445,   446,   447,   877,     0,   449,  1046,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   878,     0,     0,
       0,     0,     0,     0,   879,   880,     0,     0,     0,     0,
       0,   882,     0,   883,     0,     0,     0,     0,   884,     0,
     885,   886,    93,   819,   548,   820,   821,   822,   823,   824,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,   102,     0,   103,
     104,   105,     0,     0,     0,     0,   825,     0,     0,   106,
     107,     0,   108,   109,   110,   111,   112,   113,   114,   115,
     826,   117,   827,   828,     0,   120,   121,   122,   123,   124,
     125,   829,   830,   126,   127,   831,   832,   130,     0,   131,
     132,   133,   134,   833,     0,   834,     0,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,   154,   155,   156,   835,
     836,   837,   838,   839,   840,   841,   158,   159,   160,   161,
     162,   163,   164,   842,   843,   167,   844,   168,     0,   169,
     170,   171,   172,   173,   174,     0,   175,   176,   177,   178,
     179,     0,     0,   180,   181,   679,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,     0,   191,   192,   193,
     194,   845,   196,   197,   198,   199,   200,   846,   847,   202,
       0,   203,   204,   848,   206,     0,   207,     0,   208,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
     849,   850,   219,     0,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   851,   852,     0,   853,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,     0,
     260,   261,   262,   263,     0,   264,   265,   266,   854,   855,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   856,   292,   857,   294,   295,   296,
     297,   858,   298,   299,   300,   301,   859,   860,   303,   861,
     305,   306,   307,     0,   308,   309,     0,     0,   862,   311,
     312,     0,     0,   313,   314,   315,   316,   317,   863,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   864,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,     0,   344,   345,   346,
     865,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   866,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   867,   388,   389,   390,   391,   392,
     393,   394,   395,   868,   397,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   869,
     412,     0,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,   870,   871,     0,     0,   424,   425,   872,
     427,   873,   874,   429,   430,   875,   432,   433,   434,   435,
     436,     0,     0,   437,   438,   439,   440,   441,   876,     0,
     442,   443,   444,   445,   446,   447,   877,     0,   449,   450,
     451,   452,   453,   454,     0,     0,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     878,     0,     0,     0,     0,     0,     0,  1415,  1416,     0,
       0,     0,     0,     0,   882,     0,   883,     0,     0,     0,
       0,   884,     0,   885,   886,    93,  1796,   548,   820,   821,
     822,   823,   824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,   825,
       0,     0,   106,   107,     0,   108,   109,   110,   111,   112,
     113,   114,   115,   826,   117,   827,   828,     0,   120,   121,
     122,   123,   124,   125,   829,   830,   126,   127,   831,   832,
     130,     0,   131,   132,   133,   134,   833,     0,   834,     0,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,   154,
     155,   156,   835,   836,   837,   838,   839,   840,   841,   158,
     159,   160,   161,   162,   163,   164,   842,   843,   167,   844,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   679,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   845,   196,   197,   198,   199,   200,
     846,   847,   202,     0,   203,   204,   848,   206,     0,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,   849,   850,   219,     0,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   851,   852,     0,   853,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,     0,   260,   261,   262,   263,     0,   264,   265,
     266,   854,   855,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   856,   292,   857,
     294,   295,   296,   297,   858,   298,   299,   300,   301,   859,
     860,   303,   861,   305,   306,   307,     0,   308,   309,     0,
       0,   862,   311,   312,     0,     0,   313,   314,   315,   316,
     317,   863,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   864,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   865,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   866,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   867,   388,   389,
     390,   391,   392,   393,   394,   395,   868,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   869,   412,     0,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,   870,   871,     0,     0,
     424,   425,   872,   427,   873,   874,   429,   430,   875,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,   876,     0,   442,   443,   444,   445,   446,   447,   877,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   878,     0,     0,     0,     0,     0,     0,
     879,   880,     0,     0,     0,     0,     0,   882,     0,   883,
       0,     0,     0,     0,   884,     0,   885,   886,    93,   819,
     548,   820,   821,   822,   823,   824,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,   102,     0,   103,   104,   105,     0,     0,
       0,     0,   825,     0,     0,   106,   107,     0,   108,   109,
     110,   111,   112,   113,   114,   115,   826,   117,   827,   828,
       0,   120,   121,   122,   123,   124,   125,   829,   830,   126,
     127,   831,   832,   130,     0,   131,   132,   133,   134,   833,
       0,   834,     0,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,   154,   155,   156,   835,   836,   837,   838,   839,
     840,   841,   158,   159,   160,   161,   162,   163,   164,   842,
     843,   167,   844,   168,     0,   169,   170,   171,   172,   173,
     174,     0,   175,   176,   177,   178,   179,     0,     0,   180,
     181,   679,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,     0,   191,   192,   193,   194,   845,   196,   197,
     198,   199,   200,   846,   847,   202,     0,   203,   204,   848,
     206,     0,   207,     0,   208,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,   849,   850,   219,     0,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   851,   852,
       0,   853,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,     0,   260,   261,   262,   263,
       0,   264,   265,   266,   854,   855,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     856,   292,   857,   294,   295,   296,   297,   858,   298,   299,
     300,   301,   859,   860,   303,   861,   305,   306,   307,     0,
     308,   309,     0,     0,   862,   311,   312,     0,     0,   313,
     314,   315,   316,   317,   863,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   864,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,     0,   344,   345,   346,   865,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   866,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     867,   388,   389,   390,   391,   392,   393,   394,   395,   868,
     397,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   869,   412,     0,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,   870,
     871,     0,     0,   424,   425,   872,   427,   873,   874,   429,
     430,   875,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,   876,     0,   442,   443,   444,   445,
     446,   447,   877,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   878,     0,     0,     0,
       0,     0,     0,   879,   880,     0,     0,     0,     0,     0,
     882,     0,  2032,     0,     0,     0,     0,   884,     0,   885,
     886,    93,   819,   548,   820,   821,   822,   823,   824,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,   825,     0,     0,   106,   107,
       0,   108,   109,   110,   111,   112,   113,   114,   115,   826,
     117,   827,   828,     0,   120,   121,   122,   123,   124,   125,
     829,   830,   126,   127,   831,   832,   130,     0,   131,   132,
     133,   134,   833,     0,   834,     0,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,   154,  2717,   156,   835,   836,
     837,   838,   839,   840,   841,   158,   159,   160,   161,   162,
     163,   164,   842,   843,   167,   844,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   679,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     845,   196,   197,   198,   199,   200,   846,   847,   202,     0,
     203,   204,   848,   206,     0,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,  2718,
     850,   219,     0,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   851,   852,     0,   853,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,     0,   260,
     261,   262,   263,     0,   264,   265,   266,   854,   855,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   856,   292,   857,   294,   295,   296,   297,
     858,   298,   299,   300,   301,   859,   860,   303,   861,   305,
     306,   307,     0,   308,   309,     0,     0,   862,   311,   312,
       0,     0,   313,   314,   315,   316,   317,   863,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   864,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   865,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,  2719,   866,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   867,   388,   389,   390,   391,   392,   393,
     394,   395,   868,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   869,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   870,   871,     0,     0,   424,   425,   872,   427,
     873,   874,   429,   430,   875,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   876,     0,   442,
     443,   444,   445,   446,   447,   877,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   878,
       0,     0,     0,     0,     0,     0,   879,   880,     0,     0,
       0,     0,     0,   882,     0,  2721,     0,     0,     0,     0,
     884,     0,   885,   886,    93,   819,   548,   820,   821,   822,
     823,   824,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,     0,     0,     0,     0,   825,     0,
       0,   106,   107,     0,   108,   109,   110,   111,   112,   113,
     114,  2976,   826,   117,   827,   828,     0,   120,   121,   122,
     123,   124,   125,   829,   830,   126,   127,   831,   832,   130,
       0,   131,   132,   133,   134,   833,     0,   834,     0,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,   154,   155,
    2977,   835,   836,   837,   838,   839,   840,   841,   158,   159,
     160,   161,   162,   163,   164,   842,   843,   167,   844,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,     0,     0,   180,   181,   679,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   845,   196,   197,   198,   199,   200,   846,
     847,   202,     0,   203,   204,   848,   206,     0,   207,     0,
     208,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,   849,   850,   219,     0,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   851,   852,     0,   853,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
       0,     0,   260,   261,   262,   263,     0,   264,   265,   266,
     854,   855,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   856,   292,   857,   294,
     295,   296,   297,   858,   298,   299,   300,   301,   859,   860,
     303,   861,   305,   306,   307,     0,   308,   309,     0,     0,
     862,   311,   312,     0,     0,   313,   314,   315,   316,   317,
     863,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   864,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   865,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   370,   866,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   867,   388,   389,   390,
     391,   392,   393,   394,   395,   868,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   869,   412,     0,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,   870,   871,     0,     0,   424,
     425,   872,   427,   873,   874,   429,   430,   875,   432,   433,
    2978,   435,   436,     0,     0,   437,   438,   439,   440,   441,
     876,     0,   442,   443,   444,   445,   446,   447,   877,     0,
     449,   450,   451,   452,   453,   454,     0,     0,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   878,     0,     0,     0,     0,     0,     0,   879,
     880,     0,     0,     0,     0,     0,   882,     0,   883,     0,
       0,     0,     0,   884,     0,   885,   886,    93,   819,   548,
     820,   821,   822,   823,   824,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,   825,     0,     0,   106,   107,     0,   108,   109,   110,
     111,   112,   113,   114,   115,   826,   117,   827,   828,     0,
     120,   121,   122,   123,   124,   125,   829,   830,   126,   127,
     831,   832,   130,     0,   131,   132,   133,   134,   833,     0,
     834,     0,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,   154,   155,  2977,   835,   836,   837,   838,   839,   840,
     841,   158,   159,   160,   161,   162,   163,   164,   842,   843,
     167,   844,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     679,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   845,   196,   197,   198,
     199,   200,   846,   847,   202,     0,   203,   204,   848,   206,
       0,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,   849,   850,   219,     0,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   851,   852,     0,
     853,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,     0,   260,   261,   262,   263,     0,
     264,   265,   266,   854,   855,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   856,
     292,   857,   294,   295,   296,   297,   858,   298,   299,   300,
     301,   859,   860,   303,   861,   305,   306,   307,     0,   308,
     309,     0,     0,   862,   311,   312,     0,     0,   313,   314,
     315,   316,   317,   863,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   864,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   865,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   866,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   867,
     388,   389,   390,   391,   392,   393,   394,   395,   868,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   869,   412,     0,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,   870,   871,
       0,     0,   424,   425,   872,   427,   873,   874,   429,   430,
     875,   432,   433,  2978,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   876,     0,   442,   443,   444,   445,   446,
     447,   877,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   878,     0,     0,     0,     0,
       0,     0,   879,   880,     0,     0,     0,     0,     0,   882,
       0,   883,     0,     0,     0,     0,   884,     0,   885,   886,
      93,   819,   548,   820,   821,   822,   823,   824,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,   102,     0,   103,   104,   105,
       0,     0,     0,     0,   825,     0,     0,   106,   107,     0,
     108,   109,   110,   111,   112,   113,   114, -1764,   826,   117,
     827,   828,     0,   120,   121,   122,   123,   124,   125,   829,
     830,   126,   127,   831,   832,   130,     0,   131,   132,   133,
     134,   833,     0,   834,     0,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,   154,   155,  2977,   835,   836,   837,
     838,   839,   840,   841,   158,   159,   160,   161,   162,   163,
     164,   842,   843,   167,   844,   168,     0,   169,   170,   171,
     172,   173,   174,     0,   175,   176,   177,   178,   179,     0,
       0,   180,   181,   679,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,     0,   191,   192,   193,   194,   845,
     196,   197,   198,   199,   200,   846,   847,   202,     0,   203,
     204,   848,   206,     0,   207,     0,   208,   209,     0,   210,
     211,   212,   213, -1764,   215,     0,   216,     0,   849,   850,
     219,     0,   220,   221,   222,   223,   224,   225,   226, -1764,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     851,   852,     0,   853,     0,   249,     0,     0,   252,   253,
     254,   255,   256,   257,   258,   259,     0,     0,   260,   261,
     262, -1764,     0,   264,   265,   266,   854,   855,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   856,   292,   857,   294,   295,   296,   297,     0,
     298,   299,     0,   301,   859,   860,   303,   861,   305,   306,
     307,     0,   308,   309,     0,     0,   862,   311,   312,     0,
       0,   313,   314,   315,   316,   317,   863,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     864,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,     0,   344,   345,   346,   865,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,   370,   866,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   867,   388,   389,   390,   391,   392, -1764,   394,
     395,   868,   397,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   869,   412,     0,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,   870,   871,     0,     0,   424,   425,   872,   427,   873,
     874,   429,   430,   875,   432,   433,  2978,   435,   436,     0,
       0,   437,   438,   439,   440,   441,   876,     0,   442,   443,
     444,   445,   446,   447,   877,     0,   449,   450,   451,   452,
     453,   454,     0,     0,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476, -1764,     0,
       0,     0,     0,     0,     0,   879,   880,     0,     0,     0,
       0,     0,   882,     0,   883,     0,     0,     0,     0,   884,
       0,   885,   886,    93,   819,   548,   820,   821,   822,   823,
     824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,   111,   112,   113,   114,
     115,   826,   117,   827,   828,     0,   120,   121,   122,   123,
     124,   125,   829,   830,   126,   127,   831,   832,   130,     0,
     131,   132,   133,   134,   833,     0,   834,     0,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,   154,   155,   156,
     835,   836,   837,   838,   839,   840,   841,   158,   159,   160,
     161,   162,   163,   164,   842,   843,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   679,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   845,   196,   197,   198,   199,   200,   846,   847,
     202,     0,   203,   204,   848,   206,     0,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,   849,   850,   219,     0,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   851,   852,     0,   853,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
       0,   260,   261,   262,   263,     0,   264,   265,   266,   854,
     855,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   856,   292,   857,   294,   295,
     296,   297,     0,   298,   299,   300,   301,   859,   860,   303,
     861,   305,   306,   307,     0,   308,   309,     0,     0,   862,
     311,   312,     0,     0,   313,   314,   315,   316,   317,   863,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   864,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   865,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   867,   388,   389,   390,   391,
     392,   393,   394,   395,   868,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     869,   412,     0,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,   870,   871,     0,     0,   424,   425,
     872,   427,   873,   874,   429,   430,   875,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,   876,
       0,   442,   443,   444,   445,   446,   447,   877,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,     0,     0,     0,     0,     0,     0,     0,  1643,  1644,
       0,     0,    93,   819,   548,   820,   821,  1645,   823,   824,
       0,     0,     0,     0,   885,   886,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,   102,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   111,   112,   113,   114,   115,
     826,   117,   827,   828,     0,   120,   121,   122,   123,   124,
     125,   829,   830,   126,   127,   831,   832,   130,     0,   131,
     132,   133,   134,   833,     0,   834,     0,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,   154,   155,   156,   835,
     836,   837,   838,   839,   840,   841,   158,   159,   160,   161,
     162,   163,   164,   842,   843,   167,     0,   168,     0,   169,
     170,   171,   172,   173,   174,     0,   175,   176,   177,   178,
     179,     0,     0,   180,   181,   679,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,     0,   191,   192,   193,
     194,   845,   196,   197,   198,   199,   200,   846,   847,   202,
       0,   203,   204,   848,   206,     0,   207,     0,   208,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
     849,   850,   219,     0,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   851,   852,     0,   853,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,     0,
     260,   261,   262,   263,     0,   264,   265,   266,   854,   855,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   856,   292,   857,   294,   295,   296,
     297,     0,   298,   299,   300,   301,   859,   860,   303,   861,
     305,   306,   307,     0,   308,   309,     0,     0,   310,   311,
     312,     0,     0,   313,   314,   315,   316,   317,   863,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   864,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,     0,   344,   345,   346,
     865,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,  1782,  1783,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   867,   388,   389,   390,   391,   392,
     393,   394,   395,   868,   397,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   869,
     412,     0,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,   870,   871,     0,     0,   424,   425,   872,
     427,   873,   874,   429,   430,   875,   432,   433,   434,   435,
     436,     0,     0,   437,   438,   439,   440,   441,   876,     0,
     442,   443,   444,   445,   446,   447,   877,     0,   449,   450,
     451,   452,   453,   454,     0,     0,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
       0,     0,     0,     0,     0,     0,     0,  1784,  1785,     0,
       0,     0,     0,     0,     0,     0,  1645,     0,     0,     0,
       0,     0,     0,   885,   886,    93,   819,   548,   820,   821,
     822,   823,   824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   111,   112,
     113,   114,   115,   826,   117,   827,   828,     0,   120,   121,
     122,   123,   124,   125,   829,   830,   126,   127,   831,   832,
     130,     0,   131,   132,   133,   134,   833,     0,   834,     0,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,   154,
     155,   156,   835,   836,   837,   838,   839,   840,   841,   158,
     159,   160,   161,   162,   163,   164,   842,   843,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   679,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   845,   196,   197,   198,   199,   200,
     846,   847,   202,     0,   203,   204,   848,   206,     0,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,   849,   850,   219,     0,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   851,   852,     0,   853,     0,
     249,     0,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,     0,   260,   261,   262,   263,     0,   264,   265,
     266,   854,   855,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   856,   292,   857,
     294,   295,   296,   297,     0,   298,   299,   300,   301,   859,
     860,   303,   861,   305,   306,   307,     0,   308,   309,     0,
       0,   862,   311,   312,     0,     0,   313,   314,   315,   316,
     317,   863,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   864,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   865,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   867,   388,   389,
     390,   391,   392,   393,   394,   395,   868,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   869,   412,     0,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,   870,   871,     0,     0,
     424,   425,   872,   427,   873,   874,   429,   430,   875,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,   876,     0,   442,   443,   444,   445,   446,   447,   877,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,     0,     0,     0,     0,     0,     0,     0,
    1643,  1644,     0,     0,     0,     0,     0,     0,     0,  1645,
       0,     0,     0,     0,     0,     0,   885,   886,    93,   819,
     548,   820,   821,   822,   823,   824,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,   102,     0,   103,   104,   105,     0,     0,
       0,     0,   825,     0,     0,   106,   107,     0,   108,   109,
     110,   111,   112,   113,   114,     0,   826,   117,   827,   828,
       0,   120,   121,   122,   123,   124,   125,   829,   830,   126,
     127,   831,   832,   130,     0,   131,   132,   133,   134,   833,
       0,   834,     0,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,   154,   155,   156,   835,   836,   837,   838,   839,
     840,   841,   158,   159,   160,   161,   162,   163,   164,   842,
     843,   167,   844,   168,     0,   169,   170,   171,   172,   173,
     174,     0,   175,   176,   177,   178,   179,     0,     0,   180,
     181,   679,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   190,     0,   191,   192,   193,   194,   845,   196,   197,
     198,   199,   200,   846,   847,   202,     0,   203,   204,   848,
     206,     0,   207,     0,   208,   209,     0,   210,   211,   212,
     213,     0,   215,     0,   216,     0,   849,   850,   219,     0,
     220,   221,   222,   223,   224,   225,   226,     0,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   851,   852,
       0,   853,     0,   249,     0,     0,   252,   253,   254,   255,
     256,   257,   258,   259,     0,     0,   260,   261,   262,     0,
       0,   264,   265,   266,   854,   855,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     856,   292,   857,   294,   295,   296,   297,     0,   298,   299,
       0,   301,   859,   860,   303,   861,   305,   306,   307,     0,
     308,   309,     0,     0,   862,   311,   312,     0,     0,   313,
     314,   315,   316,   317,   863,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   864,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,     0,   344,   345,   346,   865,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   866,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     867,   388,   389,   390,   391,   392,     0,   394,   395,   868,
     397,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   869,   412,     0,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,   870,
     871,     0,     0,   424,   425,   872,   427,   873,   874,   429,
     430,   875,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,   876,     0,   442,   443,   444,   445,
     446,   447,   877,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,     0,     0,     0,     0,
       0,     0,     0,   879,   880,   499,     0,     0,     0,     0,
     882,     0,   883,     0,     0,     0,     0,   884,     0,   885,
     886,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
    2338,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,  -626,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,  -626,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,  -626,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,  -626,   254,   255,   256,   257,   258,
     259,     0,     0,   260,  -626,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,  -626,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,  -626,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,  -626,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,     0,    93,     0,   580,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     948,    94,    95,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,     0,   120,   121,   122,
     123,   124,   125,     0,   830,   126,   127,   128,   129,   130,
       0,   131,   132,   133,   134,   833,     0,   834,     0,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,   154,   155,
     156,   835,   836,   837,   838,   839,   840,   841,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,     0,     0,   180,   181,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   846,
       0,   202,     0,   203,   204,   205,   206,     0,   207,     0,
     208,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,   217,   218,   219,     0,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,   248,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
    2078,     0,   260,   261,   262,   263,     0,   264,   265,   266,
     854,   855,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,     0,   298,   299,   300,   301,     0,   860,
     303,   304,   305,   306,   307,     0,   308,   309,     0,   581,
     310,   311,   312,     0,     0,   313,   314,   315,   316,   317,
     863,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   864,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   370,   371,  2079,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
      26,   383,   384,   385,   386,   387,   867,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   869,   412,     0,   413,   414,    31,   415,   416,   417,
     418,   419,   420,   421,     0,   422,   423,     0,     0,   424,
     425,   872,   427,   873,     0,   429,   430,   875,   432,   433,
     434,   435,   436,     0,     0,   437,   438,   439,   440,   441,
     876,     0,   442,   443,   444,   445,   446,   576,   448,     0,
     449,   450,   451,   452,   453,   454,     0,     0,   455,     0,
      34,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,     0,    93,    35,   580,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2080,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,   830,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   833,     0,   834,     0,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,   154,   155,   156,
     835,   836,   837,   838,   839,   840,   841,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   846,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,  2078,
       0,   260,   261,   262,   263,     0,   264,   265,   266,   854,
     855,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,     0,   298,   299,   300,   301,     0,   860,   303,
     304,   305,   306,   307,     0,   308,   309,     0,   581,   310,
     311,   312,     0,     0,   313,   314,   315,   316,   317,   863,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   864,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,  2079,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   867,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     869,   412,     0,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     872,   427,   873,     0,   429,   430,   875,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,   876,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    93,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2080,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,   830,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   833,     0,   834,     0,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,   154,   155,   156,   835,   836,
     837,   838,   839,   840,   841,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   846,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,     0,   260,
     261,   262,   263,     0,   264,   265,   266,   854,   855,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
       0,   298,   299,   300,   301,     0,   860,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,   315,   316,   317,   863,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   864,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,  2079,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   867,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   869,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   872,   427,
     873,     0,   429,   430,   875,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   876,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    93,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    36,    94,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,   830,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     833,     0,   834,     0,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,   154,   155,   156,   835,   836,   837,   838,
     839,   840,   841,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   846,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,     0,   260,   261,   262,
     263,     0,   264,   265,   266,   854,   855,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,     0,   298,
     299,   300,   301,     0,   860,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,   315,   316,   317,   863,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   864,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   867,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   869,   412,     0,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   872,   427,   873,     0,
     429,   430,   875,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,   876,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,   450,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   747,  1239,   548,
       0,     0,     0,   823,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2738,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   748,   749,     0,   750,   751,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     752,   753,   130,     0,   131,   132,   133,   134,   754,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   755,   756,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   757,   196,   197,   198,
     199,   200,   758,  1240,   202,     0,   203,   204,   759,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   760,   761,   219,     0,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   762,   241,   242,   243,   244,   245,   763,   764,     0,
     765,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     766,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   767,
       0,   768,   294,   295,   296,   769,     0,   298,   299,     0,
     301,     0,   770,   303,   771,   305,   306,   307,     0,   308,
     309,  1241,     0,   310,   311,   312,     0,     0,   313,   772,
       0,   316,     0,   773,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   774,   332,   333,
     775,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   776,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   777,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   778,   390,   391,   392,     0,   394,   395,   779,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   780,   410,   781,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   782,   783,
       0,     0,   424,   425,   784,   427,   785,  1242,   429,   430,
     786,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
    1132,   788,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     789,   790,   791,   792,   793,   794,   795,   796,   797,   798,
     799,   473,   474,   475,   476,   747,     0,     0,     0,     0,
       0,     0,  1243,  1244,  1955,     0,     0,     0,     0,     0,
       0,  1956,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     3,     4,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   748,   749,     0,   750,   751,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   752,   753,
     130,     0,   131,   132,   133,   134,   754,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   755,   756,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   757,   196,   197,   198,   199,   200,
     758,     0,   202,     0,   203,   204,   759,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   760,   761,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   762,
     241,   242,   243,   244,   245,   763,   764,     0,   765,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   766,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   767,     0,   768,
     294,   295,   296,   769,     0,   298,   299,     0,   301,     0,
     770,   303,   771,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   772,     0,   316,
       0,   773,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   774,   332,   333,   775,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   776,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   777,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,    26,   383,   384,   385,   386,   387,     0,   388,   778,
     390,   391,   392,     0,   394,   395,   779,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     780,   410,   781,   412,     0,   413,   414,    31,   415,     0,
     417,   418,   419,   420,   421,     0,   782,   783,     0,     0,
     424,   425,   784,   427,   785,     0,   429,   430,   786,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   787,   788,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,    34,   456,   457,   458,   459,   460,   461,   789,   790,
     791,   792,   793,   794,   795,   796,   797,   798,   799,   473,
     474,   475,   476,   499,     0,    35,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    36,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   614,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,    26,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,    31,   415,     0,   417,   418,
     419,   420,   421,     0,   615,   423,     0,     0,   616,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   576,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,    34,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,    35,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    36,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   225,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,    26,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,    31,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   576,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,    34,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,     0,
     499,    35,   580,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    36,     0,    94,    95,    96,
      97,    98,    99,   100,   101,   102,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,     0,   112,   113,   114,   115,   116,     0,
     118,   119,     0,   120,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   135,     0,     0,     0,   137,   138,   139,   140,   141,
     142,     0,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,     0,   154,   155,   156,     0,     0,     0,
       0,     0,     0,     0,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,   174,     0,   175,   176,   177,   178,   179,     0,
       0,   180,   181,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,     0,   202,     0,   203,
     204,   205,   206,     0,   207,     0,   208,     0,     0,     0,
     211,   212,   213,     0,   215,     0,   216,     0,   217,   218,
     219,     0,   220,   221,   222,   223,   224,   225,   226,     0,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,     0,   249,     0,     0,   252,     0,
     254,   255,   256,   257,   258,   259,     0,     0,   260,     0,
     262,     0,     0,   264,   265,   266,     0,     0,   267,   268,
     269,   270,   271,   501,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   293,   294,   295,   296,   297,     0,
     298,   299,     0,   301,     0,   302,   303,   304,   305,   306,
     307,     0,   308,   309,     0,     0,   310,   311,   312,     0,
       0,   313,   314,     0,   316,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,     0,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
       0,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,     0,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   503,   410,   411,   412,     0,
     413,   414,     0,   415,     0,   417,   418,   419,   420,   421,
       0,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,   429,   430,   431,   432,   433,   434,   435,   436,     0,
       0,   437,   438,   439,   440,   441,     0,     0,   442,   443,
     444,   445,   446,   447,   448,     0,   449,     0,   451,   452,
     453,   454,     0,     0,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   499,     0,
     580,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   927,    94,    95,    96,    97,    98,
      99,   100,   101,   102,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,     0,   112,   113,   114,   115,   116,     0,   118,   119,
       0,   120,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   135,
       0,     0,     0,   137,   138,   139,   140,   141,   142,     0,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,     0,   154,   155,   156,     0,     0,     0,     0,     0,
       0,     0,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
     174,     0,   175,   176,   177,   178,   179,     0,     0,   180,
     181,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,     0,   202,     0,   203,   204,   205,
     206,     0,   207,     0,   208,     0,     0,     0,   211,   212,
     213,     0,   215,     0,   216,     0,   217,   218,   219,     0,
     220,   221,   222,   223,   224,   225,   226,     0,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,     0,   249,     0,     0,   252,     0,   254,   255,
     256,   257,   258,   259,     0,     0,   260,     0,   262,     0,
       0,   264,   265,   266,     0,     0,   267,   268,   269,   270,
     271,   501,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,     0,   293,   294,   295,   296,   297,     0,   298,   299,
       0,   301,     0,   302,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,   310,   311,   312,     0,     0,   313,
     314,     0,   316,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,     0,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,     0,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,     0,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   503,   410,   411,   412,     0,   413,   414,
       0,   415,     0,   417,   418,   419,   420,   421,     0,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,   429,
     430,   431,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   447,   448,     0,   449,     0,   451,   452,   453,   454,
       0,     0,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   499,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2571,    94,    95,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,     0,
     112,   113,   114,   115,   116,     0,   118,   119,     0,   120,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,     0,
       0,   137,   138,   139,   140,   141,   142,     0,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,     0,
     154,   155,   156,     0,     0,     0,     0,     0,     0,     0,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,     0,   202,     0,   203,   204,   205,   206,     0,
     207,     0,   208,     0,     0,     0,   211,   212,   213,     0,
     215,     0,   216,     0,   217,   218,   219,     0,   220,   221,
     222,   223,   224,   225,   226,     0,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
       0,   249,     0,     0,   252,     0,   254,   255,   256,   257,
     258,   259,     0,     0,   260,     0,   262,     0,     0,   264,
     265,   266,     0,     0,   267,   268,   269,   270,   271,   501,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     293,   294,   295,   296,   297,     0,   298,   299,     0,   301,
       0,   302,   303,   304,   305,   306,   307,     0,   308,   309,
       0,     0,   310,   311,   312,     0,     0,   313,   314,     0,
     316,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,     0,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,     0,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   503,   410,   411,   412,     0,   413,   414,     0,   415,
       0,   417,   418,   419,   420,   421,     0,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,   429,   430,   431,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   447,
     448,     0,   449,     0,   451,   452,   453,   454,     0,     0,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   499,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1664,    94,    95,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   112,   113,
     114,   115,   116,     0,   118,   119,     0,   120,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   128,   129,   130,
       0,   131,   132,   133,   134,   135,     0,     0,     0,   137,
     138,   139,   140,   141,   142,     0,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,     0,   154,   155,
     156,     0,     0,     0,     0,     0,     0,     0,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,     0,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,     0,     0,   180,   181,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
       0,   202,     0,   203,   204,   205,   206,     0,   207,     0,
     208,     0,     0,     0,   211,   212,   213,     0,   215,     0,
     216,     0,   217,   218,   219,     0,   220,   221,   222,   223,
     224,   225,   226,     0,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   240,   241,
     242,   243,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,   252,     0,   254,   255,   256,   257,   258,   259,
       0,     0,   260,     0,   262,     0,     0,   264,   265,   266,
       0,     0,   267,   268,   269,   270,   271,   501,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   293,   294,
     295,   296,   297,     0,   298,   299,     0,   301,     0,   302,
     303,   304,   305,   306,   307,     0,   308,   309,     0,     0,
     310,   311,   312,     0,     0,   313,   314,     0,   316,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,     0,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,     0,   394,   395,   396,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   503,
     410,   411,   412,     0,   413,   414,     0,   415,     0,   417,
     418,   419,   420,   421,     0,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,   429,   430,   431,   432,   433,
     434,   435,   436,     0,     0,   437,   438,   439,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   447,   448,     0,
     449,     0,   451,   452,   453,   454,     0,     0,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   499,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1769,    94,
      95,    96,    97,    98,    99,   100,   101,   102,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   112,   113,   114,   115,
     116,     0,   118,   119,     0,   120,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,     0,     0,   137,   138,   139,
     140,   141,   142,     0,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,     0,   154,   155,   156,     0,
       0,     0,     0,     0,     0,     0,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,     0,   168,     0,   169,
     170,   171,   172,   173,   174,     0,   175,   176,   177,   178,
     179,     0,     0,   180,   181,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,     0,   202,
       0,   203,   204,   205,   206,     0,   207,     0,   208,     0,
       0,     0,   211,   212,   213,     0,   215,     0,   216,     0,
     217,   218,   219,     0,   220,   221,   222,   223,   224,   225,
     226,     0,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   240,   241,   242,   243,
     244,   245,   246,   247,     0,   248,     0,   249,     0,     0,
     252,     0,   254,   255,   256,   257,   258,   259,     0,     0,
     260,     0,   262,     0,     0,   264,   265,   266,     0,     0,
     267,   268,   269,   270,   271,   501,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,     0,   293,   294,   295,   296,
     297,     0,   298,   299,     0,   301,     0,   302,   303,   304,
     305,   306,   307,     0,   308,   309,     0,     0,   310,   311,
     312,     0,     0,   313,   314,     0,   316,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,     0,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,     0,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
       0,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   503,   410,   411,
     412,     0,   413,   414,     0,   415,     0,   417,   418,   419,
     420,   421,     0,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,   429,   430,   431,   432,   433,   434,   435,
     436,     0,     0,   437,   438,   439,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   447,   448,     0,   449,     0,
     451,   452,   453,   454,     0,     0,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
       0,     0,     0,     0,  2425,  1239,   548,     0,     0,  1624,
     823,     0,     0,     0,     0,     0,  2543,  1625,  1626,  1627,
    1628,    94,    95,    96,    97,    98,    99,   100,   101,   102,
    1059,   103,   104,   105,  1060,  1061,  1062,  1063,  1064,  1065,
    1066,   106,   107,  1067,   108,   109,   110,  2426,   112,   113,
     114,     0,   667,  2427,   669,   670,  1068,   120,   121,   122,
     123,   124,   125,  1069,  1070,   126,   127,   671,   672,   130,
    1071,   131,   132,   133,   134,     0,  1072,  2428,  1073,   137,
     138,   139,   140,   141,   142,  2429,   144,   145,   146,  1074,
     147,   148,   149,   150,   151,   152,  1075,  2430,   154,   155,
     156,  1076,  1077,  1078,  2431,  1079,  1080,  1081,   158,   159,
     160,   161,   162,   163,   164,   677,   678,   167,  1082,   168,
    1083,   169,   170,   171,   172,   173,   174,  1084,   175,   176,
     177,   178,   179,  1085,  1086,   180,   181,   679,   183,   184,
    1087,   185,   186,   187,  1088,   188,   189,   190,  1089,   191,
     192,   193,   194,     0,   196,   197,   198,   199,   200,     0,
    1090,   202,  1091,   203,   204,   680,   206,  1092,   207,  1093,
     208,  2432,  1094,  2433,   211,   212,   213,  2434,   215,  1095,
     216,  1096,     0,     0,   219,  1097,   220,   221,   222,   223,
     224,   225,   226,  2435,   228,   229,   230,   231,  1098,   232,
     233,   234,   235,   236,   237,  1099,   238,  2436,     0,   241,
     242,   243,   244,   245,   687,   688,  1100,   689,  1101,   249,
    2437,  2438,   252,  2439,   254,   255,   256,   257,   258,   259,
    1102,  1103,   260,  2440,   262,  2441,  1104,   264,   265,   266,
    1105,  1106,   267,   268,   269,   270,   271,  2442,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   696,  2443,   698,   294,
     295,   296,  2444,  1107,   298,   299,  2445,   301,  1108,     0,
     303,   700,   305,   306,   307,  1109,   308,   309,  1110,  1111,
    2446,   311,   312,  1112,  1113,   313,     0,  2447,   316,  2448,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,  1114,   329,   330,     0,   332,   333,     0,   335,   336,
     337,  1115,   338,   339,   340,   341,   342,   343,  1116,   344,
     345,   346,   703,   348,   349,   350,   351,  1117,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,  1118,   365,   366,  2449,   368,   369,   370,   705,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
    1119,   383,   384,   385,   386,   387,  1120,   388,  2450,   390,
     391,   392,  2451,   394,   395,   708,   397,  1121,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,  2452,
     410,     0,   412,  1122,   413,   414,  1123,   415,  2453,   417,
     418,   419,   420,   421,  1124,   711,   712,  1125,  1126,   424,
     425,     0,   427,     0,  1127,   429,   430,  2454,   432,   433,
     434,   435,   436,  1128,  1129,   437,   438,   439,   440,   441,
    1130,  1131,   442,   443,   444,   445,   446,     0,   714,  1133,
     449,  2455,   451,   452,   453,   454,  1134,  1135,   455,  1136,
    1137,   456,   457,   458,   459,   460,   461,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   473,   474,
     475,   476,     0,   499,     0,  1629,  1630,  1631,  1624,  2456,
    2457,  1634,  1635,  1636,  1637,     0,  1625,  1626,  1627,  1628,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,     0,     0,     0,  1629,  1630,  1631,     0,  1632,  1633,
    1634,  1635,  1636,  1637,  1316,     0,     0,  1317,     0,     0,
       0,  1318,  1319,  1320,  1321,  1322,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1323,     0,  1316,     0,     0,  1317,     0,     0,  1325,
    1318,  1319,  1320,  1321,  1322,     0,  1326,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1323,     0,     0,     0,     0,     0,     0,     0,  1325,  1316,
       0,  1327,  1317,     0,     0,  1326,  1318,  1319,  1320,  1321,
    1322,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1323,     0,  1316,     0,
    1327,  1317,     0,     0,  1325,  1318,  1319,  1320,  1321,  1322,
       0,  1326,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1323,     0,     0,     0,     0,
       0,     0,     0,  1325,     0,     0,  1327,     0,     0,     0,
    1326,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1327,     0,     0,     0,     0,
       0,     0,  1328,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1329,     0,
       0,     0,     0,  1330,     0,     0,     0,     0,     0,     0,
       0,  1328,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1331,  1332,  1329,     0,     0,
       0,     0,  1330,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,     0,     0,     0,     0,  1328,     0,     0,
       0,     0,     0,     0,  1331,  1332,     0,     0,     0,     0,
       0,     0,     0,  1329,     0,     0,     0,     0,  1330,  1333,
       0,     0,     0,     0,     0,     0,  1328,     0,  1334,     0,
       0,  1335,     0,     0,     0,     0,     0,     0,     0,     0,
    1331,  1332,  1329,     0,     0,  1336,     0,  1330,  1337,     0,
       0,     0,     0,     0,     0,  1333,     0,  1334,     0,     0,
    1335,     0,     0,     0,     0,     0,     0,     0,     0,  1331,
    1332,     0,     0,     0,  1336,     0,     0,  1337,     0,     0,
       0,     0,     0,     0,  1333,     0,     0,     0,     0,     0,
       0,     0,     0,  1334,     0,     0,  1335,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1336,     0,     0,  1337,     0,     0,     0,     0,     0,     0,
       0,     0,  1334,     0,     0,  1335,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1338,     0,  1336,
       0,     0,  1337,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1338,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1338,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1338,     0,     0,     0,     0,     0,  1339,     0,     0,
    1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,
       0,     0,     0,     0,  2688,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1339,     0,     0,  1340,
    1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,
       0,     0,     0,  2911,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1339,     0,     0,  1340,  1341,  1342,     0,  1343,
    1344,  1345,  1346,  1347,  1348,     0,     0,     0,     0,  2923,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1058,  1339,     0,     0,  1340,  1341,  1342,     0,  1343,  1344,
    1345,  1346,  1347,  1348,     0,     0,  1499,    94,    95,    96,
      97,    98,    99,   100,   101,   102,  1059,   103,   104,   105,
    1060,  1061,  1062,  1063,  1064,  1065,  1066,   106,   107,  1067,
     108,   109,   110,     0,   112,   113,   114,   748,   749,     0,
     750,   751,  1068,   120,   121,   122,   123,   124,   125,  1069,
    1070,   126,   127,   752,   753,   130,  1071,   131,   132,   133,
     134,   754,  1072,     0,  1073,   137,   138,   139,   140,   141,
     142,     0,   144,   145,   146,  1074,   147,   148,   149,   150,
     151,   152,  1075,     0,   154,   155,   156,  1076,  1077,  1078,
       0,  1079,  1080,  1081,   158,   159,   160,   161,   162,   163,
     164,   755,   756,   167,  1082,   168,  1083,   169,   170,   171,
     172,   173,   174,  1084,   175,   176,   177,   178,   179,  1085,
    1086,   180,   181,   182,   183,   184,  1087,   185,   186,   187,
    1088,   188,   189,   190,  1089,   191,   192,   193,   194,   757,
     196,   197,   198,   199,   200,   758,  1090,   202,  1091,   203,
     204,   759,   206,  1092,   207,  1093,   208,     0,  1094,     0,
     211,   212,   213,     0,   215,  1095,   216,  1096,   760,   761,
     219,  1097,   220,   221,   222,   223,   224,   225,   226,     0,
     228,   229,   230,   231,  1098,   232,   233,   234,   235,   236,
     237,  1099,   238,     0,   762,   241,   242,   243,   244,   245,
     763,   764,  1100,   765,  1101,   249,     0,     0,   252,     0,
     254,   255,   256,   257,   258,   259,  1102,  1103,   260,     0,
     262,     0,  1104,   264,   265,   266,  1105,  1106,   267,   268,
     269,   270,   271,   766,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   767,     0,   768,   294,   295,   296,   769,  1107,
     298,   299,     0,   301,  1108,   770,   303,   771,   305,   306,
     307,  1109,   308,   309,  1110,  1111,   310,   311,   312,  1112,
    1113,   313,   772,     0,   316,     0,   773,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,  1114,   329,   330,
     774,   332,   333,   775,   335,   336,   337,  1115,   338,   339,
     340,   341,   342,   343,  1116,   344,   345,   346,   776,   348,
     349,   350,   351,  1117,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,  1118,   365,   366,
       0,   368,   369,   370,   777,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,  1119,   383,   384,   385,
     386,   387,  1120,   388,   778,   390,   391,   392,     0,   394,
     395,   779,   397,  1121,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   780,   410,   781,   412,  1122,
     413,   414,  1123,   415,     0,   417,   418,   419,   420,   421,
    1124,   782,   783,  1125,  1126,   424,   425,   784,   427,   785,
    1127,   429,   430,   786,   432,   433,   434,   435,   436,  1128,
    1129,   437,   438,   439,   440,   441,  1130,  1131,   442,   443,
     444,   445,   446,  1132,   788,  1133,   449,     0,   451,   452,
     453,   454,  1134,  1135,   455,  1136,  1137,   456,   457,   458,
     459,   460,   461,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   473,   474,   475,   476,   499,     0,
       0,     0,     0,     0,     0,     0,     0,  1748,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,   102,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,     0,   112,   113,   114,   115,   116,     0,   118,   119,
       0,   120,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   135,
       0,     0,     0,   137,   138,   139,   140,   141,   142,     0,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,     0,   154,   155,   156,     0,     0,     0,     0,     0,
       0,     0,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
     174,     0,   175,   176,   177,   178,   179,     0,     0,   180,
     181,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,     0,   202,     0,   203,   204,   205,
     206,     0,   207,     0,   208,     0,     0,     0,   211,   212,
     213,     0,   215,     0,   216,     0,   217,   218,   219,     0,
     220,   221,   222,   223,   224,   225,   226,     0,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,     0,   249,     0,     0,   252,     0,   254,   255,
     256,   257,   258,   259,     0,     0,   260,     0,   262,     0,
       0,   264,   265,   266,     0,     0,   267,   268,   269,   270,
     271,   501,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,     0,   293,   294,   295,   296,   297,     0,   298,   299,
       0,   301,     0,   302,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,   310,   311,   312,     0,     0,   313,
     314,     0,   316,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,     0,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,     0,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,     0,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   503,   410,   411,   412,     0,   413,   414,
       0,   415,     0,   417,   418,   419,   420,   421,     0,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,   429,
     430,   431,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   447,   448,     0,   449,     0,   451,   452,   453,   454,
       0,     0,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   747,  1239,   548,     0,
       0,     0,   823,     0,     0,  2251,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,     0,
     112,   113,   114,   748,   749,     0,   750,   751,     0,   120,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   752,
     753,   130,     0,   131,   132,   133,   134,   754,     0,     0,
       0,   137,   138,   139,   140,   141,   142,     0,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,     0,
     154,   155,   156,     0,     0,     0,     0,     0,     0,     0,
     158,   159,   160,   161,   162,   163,   164,   755,   756,   167,
    1375,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
       0,   191,   192,   193,   194,   757,   196,   197,   198,   199,
     200,   758,  1240,   202,     0,   203,   204,   759,   206,     0,
     207,     0,   208,     0,     0,     0,   211,   212,   213,     0,
     215,     0,   216,     0,   760,   761,   219,     0,   220,   221,
     222,   223,   224,   225,   226,     0,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     762,   241,   242,   243,   244,   245,   763,   764,     0,   765,
       0,   249,     0,     0,   252,     0,   254,   255,   256,   257,
     258,   259,     0,     0,   260,     0,   262,     0,     0,   264,
     265,   266,     0,     0,   267,   268,   269,   270,   271,   766,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   767,     0,
     768,   294,   295,   296,   769,     0,   298,   299,     0,   301,
       0,   770,   303,   771,   305,   306,   307,     0,   308,   309,
    1241,     0,   310,   311,   312,     0,     0,   313,   772,     0,
     316,     0,   773,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   774,   332,   333,   775,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   776,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,     0,   368,   369,   370,
     777,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,     0,   388,
     778,   390,   391,   392,     0,   394,   395,   779,   397,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   780,   410,   781,   412,     0,   413,   414,     0,   415,
       0,   417,   418,   419,   420,   421,     0,   782,   783,     0,
       0,   424,   425,   784,   427,   785,  1242,   429,   430,   786,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,     0,     0,   442,   443,   444,   445,   446,  1132,
     788,     0,   449,     0,   451,   452,   453,   454,     0,     0,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   789,
     790,   791,   792,   793,   794,   795,   796,   797,   798,   799,
     473,   474,   475,   476,   747,  1239,   548,     0,     0,     0,
     823,  1243,  1244,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   112,   113,
     114,   748,   749,     0,   750,   751,     0,   120,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   752,   753,   130,
       0,   131,   132,   133,   134,   754,     0,     0,     0,   137,
     138,   139,   140,   141,   142,     0,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,     0,   154,   155,
     156,     0,     0,     0,     0,     0,     0,     0,   158,   159,
     160,   161,   162,   163,   164,   755,   756,   167,  1377,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,     0,     0,   180,   181,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   757,   196,   197,   198,   199,   200,   758,
    1240,   202,     0,   203,   204,   759,   206,     0,   207,     0,
     208,     0,     0,     0,   211,   212,   213,     0,   215,     0,
     216,     0,   760,   761,   219,     0,   220,   221,   222,   223,
     224,   225,   226,     0,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   762,   241,
     242,   243,   244,   245,   763,   764,     0,   765,     0,   249,
       0,     0,   252,     0,   254,   255,   256,   257,   258,   259,
       0,     0,   260,     0,   262,     0,     0,   264,   265,   266,
       0,     0,   267,   268,   269,   270,   271,   766,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   767,     0,   768,   294,
     295,   296,   769,     0,   298,   299,     0,   301,     0,   770,
     303,   771,   305,   306,   307,     0,   308,   309,  1241,     0,
     310,   311,   312,     0,     0,   313,   772,     0,   316,     0,
     773,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   774,   332,   333,   775,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   776,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,     0,   368,   369,   370,   777,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,     0,   388,   778,   390,
     391,   392,     0,   394,   395,   779,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   780,
     410,   781,   412,     0,   413,   414,     0,   415,     0,   417,
     418,   419,   420,   421,     0,   782,   783,     0,     0,   424,
     425,   784,   427,   785,  1242,   429,   430,   786,   432,   433,
     434,   435,   436,     0,     0,   437,   438,   439,   440,   441,
       0,     0,   442,   443,   444,   445,   446,  1132,   788,     0,
     449,     0,   451,   452,   453,   454,     0,     0,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   789,   790,   791,
     792,   793,   794,   795,   796,   797,   798,   799,   473,   474,
     475,   476,   747,  1239,   548,     0,     0,     0,   823,  1243,
    1244,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,   102,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   112,   113,   114,   748,
     749,     0,   750,   751,     0,   120,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   752,   753,   130,     0,   131,
     132,   133,   134,   754,     0,     0,     0,   137,   138,   139,
     140,   141,   142,     0,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,     0,   154,   155,   156,     0,
       0,     0,     0,     0,     0,     0,   158,   159,   160,   161,
     162,   163,   164,   755,   756,   167,     0,   168,     0,   169,
     170,   171,   172,   173,   174,     0,   175,   176,   177,   178,
     179,     0,     0,   180,   181,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,     0,   191,   192,   193,
     194,   757,   196,   197,   198,   199,   200,   758,  1240,   202,
       0,   203,   204,   759,   206,     0,   207,     0,   208,     0,
       0,     0,   211,   212,   213,     0,   215,     0,   216,     0,
     760,   761,   219,     0,   220,   221,   222,   223,   224,   225,
     226,     0,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   762,   241,   242,   243,
     244,   245,   763,   764,     0,   765,     0,   249,     0,     0,
     252,     0,   254,   255,   256,   257,   258,   259,     0,     0,
     260,     0,   262,     0,     0,   264,   265,   266,     0,     0,
     267,   268,   269,   270,   271,   766,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   767,     0,   768,   294,   295,   296,
     769,     0,   298,   299,     0,   301,     0,   770,   303,   771,
     305,   306,   307,     0,   308,   309,  1241,     0,   310,   311,
     312,     0,     0,   313,   772,     0,   316,     0,   773,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   774,   332,   333,   775,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,     0,   344,   345,   346,
     776,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,     0,   368,   369,   370,   777,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,     0,   388,   778,   390,   391,   392,
       0,   394,   395,   779,   397,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   780,   410,   781,
     412,     0,   413,   414,     0,   415,     0,   417,   418,   419,
     420,   421,     0,   782,   783,     0,     0,   424,   425,   784,
     427,   785,  1242,   429,   430,   786,   432,   433,   434,   435,
     436,     0,     0,   437,   438,   439,   440,   441,     0,     0,
     442,   443,   444,   445,   446,  1132,   788,     0,   449,     0,
     451,   452,   453,   454,     0,     0,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   789,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   799,   473,   474,   475,   476,
       0,     0,  1316,     0,     0,  1317,     0,  1243,  1244,  1318,
    1319,  1320,  1321,  1322,     0,  1316,     0,     0,  1317,     0,
       0,     0,  1318,  1319,  1320,  1321,  1322,     0,     0,  1323,
       0,     0,     0,  1775,     0,     0,     0,  1325,     0,     0,
       0,     0,  1323,     0,  1326,     0,     0,     0,     0,     0,
    1325,  1316,     0,     0,  1317,     0,     0,  1326,  1318,  1319,
    1320,  1321,  1322,     0,  1316,     0,     0,  1317,     0,  1327,
       0,  1318,  1319,  1320,  1321,  1322,     0,     0,  1323,     0,
       0,     0,  1327,     0,     0,     0,  1325,     0,     0,     0,
       0,  1323,     0,  1326,  1977,     0,     0,     0,     0,  1325,
    1316,     0,     0,  1317,     0,     0,  1326,  1318,  1319,  1320,
    1321,  1322,     0,     0,     0,     0,     0,     0,  1327,     0,
    1776,     0,     0,     0,     0,     0,     0,  1323,     0,     0,
    1316,  1327,     0,  1317,     0,  1325,     0,  1318,  1319,  1320,
    1321,  1322,  1326,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1323,     0,     0,
    2022,     0,     0,     0,     0,  1325,     0,  1327,     0,     0,
    1328,     0,  1326,  2016,     0,     0,     0,     0,  2017,     0,
       0,     0,     0,  1328,     0,     0,  1329,     0,     0,     0,
       0,  1330,     0,     0,     0,     0,     0,  1327,     0,  1329,
       0,     0,     0,     0,  1330,     0,     0,     0,  3009,     0,
       0,     0,     0,  1331,  1332,     0,     0,     0,     0,  1328,
       0,     0,     0,     0,     0,     0,  1331,  1332,  1333,     0,
       0,     0,  1328,     0,     0,  1329,     0,     0,     0,     0,
    1330,  1333,     0,     0,     0,     0,     0,     0,  1329,     0,
       0,     0,     0,  1330,     0,     0,     0,     0,     0,     0,
       0,     0,  1331,  1332,     0,     0,  1334,     0,  1328,  1335,
       0,     0,     0,     0,     0,  1331,  1332,  1333,     0,  1334,
       0,     0,  1335,  1336,  1329,     0,  1337,     0,     0,  1330,
    1333,     0,     0,     0,     0,     0,  1336,     0,  1328,  1337,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1331,  1332,     0,  1329,  1334,     0,     0,  1335,  1330,
       0,     0,     0,     0,     0,     0,  1333,     0,  1334,     0,
       0,  1335,  1336,     0,     0,  1337,     0,     0,     0,     0,
       0,  1331,  1332,     0,     0,  1336,     0,     0,  1337,     0,
       0,     0,     0,     0,     0,     0,  1333,     0,  3010,     0,
       0,     0,     0,     0,  1334,     0,     0,  1335,     0,     0,
       0,     0,     0,     0,     0,  1338,     0,     0,     0,     0,
       0,  1336,     0,     0,  1337,     0,     0,     0,  1338,     0,
       0,     0,     0,     0,  1334,     0,     0,  1335,     0,     0,
       0,     0,  1989,     0,     0,     0,     0,     0,     0,     0,
       0,  1336,     0,     0,  1337,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1338,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1780,     0,     0,  1338,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1338,     0,  1339,     0,     0,  1340,  1341,
    1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,  1339,     0,
       0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,
    1348,     0,     0,  1338,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1339,     0,     0,  1340,  1341,  1342,
       0,  1343,  1344,  1345,  1346,  1347,  1348,  1339,     0,     0,
    1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,
       0,     0,  1316,     0,     0,  1317,     0,     0,     0,  1318,
    1319,  1320,  1321,  1322,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1339,     0,     0,  1340,  1341,  1342,  1323,
    1343,  1344,  1345,  1346,  1347,  1348,     0,  1325,     0,     0,
       0,     0,     0,     0,  1326,     0,     0,     0,     0,     0,
       0,     0,     0,  1339,     0,     0,  1340,  1341,  1342,     0,
    1343,  1344,  1345,  1346,  1347,  1348,     0,  1316,     0,  1327,
    1317,     0,     0,     0,  1318,  1319,  1320,  1321,  1322,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1323,     0,  1316,  2029,     0,  1317,
       0,     0,  1325,  1318,  1319,  1320,  1321,  1322,     0,  1326,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1323,     0,     0,     0,     0,     0,     0,
       0,  1325,  1316,     0,  1327,  1317,     0,     0,  1326,  1318,
    1319,  1320,  1321,  1322,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1323,
       0,     0,  2300,  1327,     0,  2027,     0,  1325,     0,     0,
    1328,     0,     0,     0,  1326,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1329,     0,     0,     0,
       0,  1330,     0,     0,     0,     0,     0,     0,     0,  1327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1331,  1332,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1333,     0,
    1316,     0,     0,  1317,     0,  1328,     0,  1318,  1319,  1320,
    1321,  1322,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1329,     0,     0,     0,     0,  1330,  1323,     0,     0,
       0,     0,     0,     0,  1328,  1325,  1334,     0,     0,  1335,
       0,     0,  1326,     0,     0,     0,     0,     0,  1331,  1332,
    1329,     0,     0,  1336,     0,  1330,  1337,     0,     0,     0,
       0,     0,     0,  1333,     0,     0,     0,  1327,     0,     0,
    1328,     0,     0,     0,     0,     0,     0,  1331,  1332,     0,
       0,     0,     0,     0,     0,     0,  1329,     0,     0,     0,
       0,  1330,  1333,     0,     0,     0,     0,     0,     0,     0,
       0,  1334,     0,     0,  1335,     0,     0,     0,     0,     0,
       0,     0,     0,  1331,  1332,     0,     0,     0,  1336,     0,
       0,  1337,     0,     0,     0,     0,     0,     0,  1333,     0,
    1334,     0,     0,  1335,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1338,     0,  1336,     0,     0,
    1337,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1334,     0,  1328,  1335,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1336,  1329,     0,  1337,     0,     0,  1330,
       0,     0,     0,     0,     0,   979,     0,     0,     0,     0,
       0,     0,   980,     0,     0,     0,     0,     0,     0,   992,
    1338,  1331,  1332,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1316,     0,  1333,  1317,   993,     0,
       0,  1318,  1319,  1320,  1321,  1322,     0,     0,     0,  1338,
       0,     0,     0,     0,     0,  1339,     0,     0,  1340,  1341,
    1342,  1323,  1343,  1344,  1345,  1346,  1347,  1348,     0,  1325,
       0,     0,     0,     0,  1334,     0,  1326,  1335,     0,     0,
       0,  2255,     0,     0,     0,  1338,     0,     0,     0,   994,
       0,  1336,     0,     0,  1337,     0,     0,     0,     0,     0,
    1316,  1327,     0,  1317,     0,     0,     0,     0,  1319,  1320,
    1321,  1322,     0,     0,     0,     0,     0,     0,   981,     0,
    1339,     0,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,
    1346,  1347,  1348,     0,     0,  1325,  1316,     0,     0,  1317,
       0,     0,  1326,     0,  1319,  1320,  1321,  1322,     0,  1339,
       0,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,
    1347,  1348,     0,  1323,     0,     0,     0,  1327,     0,     0,
       0,  1325,     0,     0,     0,     0,     0,     0,  1326,     0,
     995,     0,     0,  1338,     0,  1339,     0,     0,  1340,  1341,
    1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,
       0,     0,  1328,  1327,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1329,     0,
       0,     0,     0,  1330,     0,     0,     0,     0,     0,     0,
       0,   996,     0,     0,     0,     0,     0,     0,     0,   997,
       0,     0,     0,     0,     0,  1331,  1332,     0,     0,     0,
       0,   998,     0,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,     0,     0,     0,     0,     0,  1328,     0,
       0,     0,   982,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   999,  1339,  1329,     0,  1340,  1341,  1342,  1330,
    1343,  1344,  1345,  1346,  1347,  1348,     0,     0,  1334,     0,
       0,  1335,     0,     0,  1328,     0,     0,     0,     0,     0,
       0,  1331,  1332,     0,     0,  1336,     0,     0,  1337,     0,
    1329,     0,     0,  1845,     0,  1330,  1333,   984,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1331,  1332,     0,
       0,  1002,     0,     0,     0,     0,     0,  1846,     0,     0,
       0,     0,  1333,     0,  1334,     0,     0,  1335,     0,     0,
       0,  1004,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1336,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1334,     0,     0,  1335,     0,     0,     0,  1338,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1336,     0,     0,
       0,     0,     0,     0,   986,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1338,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1339,     0,  1338,
    1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,  1795,  1348,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1339,     0,     0,  1340,  1341,  1342,     0,
    1343,  1344,  1345,  1346,  1347,  1348,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1058,     0,  1685,     0,  1339,
       0,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,
    1347,  1348,    94,    95,    96,    97,    98,    99,   100,   101,
     102,  1059,   103,   104,   105,  1060,  1061,  1062,  1063,  1064,
    1065,  1066,   106,   107,  1067,   108,   109,   110,     0,   112,
     113,   114,   748,   749,     0,   750,   751,  1068,   120,   121,
     122,   123,   124,   125,  1069,  1070,   126,   127,   752,   753,
     130,  1071,   131,   132,   133,   134,   754,  1072,     0,  1073,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
    1074,   147,   148,   149,   150,   151,   152,  1075,     0,   154,
     155,   156,  1076,  1077,  1078,     0,  1079,  1080,  1081,   158,
     159,   160,   161,   162,   163,   164,   755,   756,   167,  1082,
     168,  1083,   169,   170,   171,   172,   173,   174,  1084,   175,
     176,   177,   178,   179,  1085,  1086,   180,   181,   182,   183,
     184,  1087,   185,   186,   187,  1088,   188,   189,   190,  1089,
     191,   192,   193,   194,   757,   196,   197,   198,   199,   200,
     758,  1090,   202,  1091,   203,   204,   759,   206,  1092,   207,
    1093,   208,     0,  1094,     0,   211,   212,   213,     0,   215,
    1095,   216,  1096,   760,   761,   219,  1097,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,  1098,
     232,   233,   234,   235,   236,   237,  1099,   238,     0,   762,
     241,   242,   243,   244,   245,   763,   764,  1100,   765,  1101,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,  1102,  1103,   260,     0,   262,     0,  1104,   264,   265,
     266,  1105,  1106,   267,   268,   269,   270,   271,   766,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   767,     0,   768,
     294,   295,   296,   769,  1107,   298,   299,     0,   301,  1108,
     770,   303,   771,   305,   306,   307,  1109,   308,   309,  1110,
    1111,   310,   311,   312,  1112,  1113,   313,   772,     0,   316,
       0,   773,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,  1114,   329,   330,   774,   332,   333,   775,   335,
     336,   337,  1115,   338,   339,   340,   341,   342,   343,  1116,
     344,   345,   346,   776,   348,   349,   350,   351,  1117,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,  1118,   365,   366,     0,   368,   369,   370,   777,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,  1119,   383,   384,   385,   386,   387,  1120,   388,   778,
     390,   391,   392,     0,   394,   395,   779,   397,  1121,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     780,   410,   781,   412,  1122,   413,   414,  1123,   415,     0,
     417,   418,   419,   420,   421,  1124,   782,   783,  1125,  1126,
     424,   425,   784,   427,   785,  1127,   429,   430,   786,   432,
     433,   434,   435,   436,  1128,  1129,   437,   438,   439,   440,
     441,  1130,  1131,   442,   443,   444,   445,   446,  1132,   788,
    1133,   449,     0,   451,   452,   453,   454,  1134,  1135,   455,
    1136,  1137,   456,   457,   458,   459,   460,   461,   789,   790,
     791,   792,   793,   794,   795,   796,   797,   798,   799,   473,
     474,   475,   476,  1058,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,  1059,
     103,   104,   105,  1060,  1061,  1062,  1063,  1064,  1065,  1066,
     106,   107,  1067,   108,   109,   110,     0,   112,   113,   114,
     748,   749,     0,   750,   751,  1068,   120,   121,   122,   123,
     124,   125,  1069,  1070,   126,   127,   752,   753,   130,  1071,
     131,   132,   133,   134,   754,  1072,     0,  1073,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,  1074,   147,
     148,   149,   150,   151,   152,  1075,     0,   154,   155,   156,
    1076,  1077,  1078,     0,  1079,  1080,  1081,   158,   159,   160,
     161,   162,   163,   164,   755,   756,   167,  1082,   168,  1083,
     169,   170,   171,   172,   173,   174,  1084,   175,   176,   177,
     178,   179,  1085,  1086,   180,   181,   182,   183,   184,  1087,
     185,   186,   187,  1088,   188,   189,   190,  1089,   191,   192,
     193,   194,   757,   196,   197,   198,   199,   200,   758,  1090,
     202,  1091,   203,   204,   759,   206,  1092,   207,  1093,   208,
       0,  1094,     0,   211,   212,   213,     0,   215,  1095,   216,
    1096,   760,   761,   219,  1097,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,  1098,   232,   233,
     234,   235,   236,   237,  1099,   238,     0,   762,   241,   242,
     243,   244,   245,   763,   764,  1100,   765,  1101,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,  1102,
    1103,   260,     0,   262,     0,  1104,   264,   265,   266,  1105,
    1106,   267,   268,   269,   270,   271,   766,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   767,     0,   768,   294,   295,
     296,   769,  1107,   298,   299,     0,   301,  1108,   770,   303,
     771,   305,   306,   307,  1109,   308,   309,  1110,  1111,   310,
     311,   312,  1112,  1113,   313,   772,     0,   316,     0,   773,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
    1114,   329,   330,   774,   332,   333,   775,   335,   336,   337,
    1115,   338,   339,   340,   341,   342,   343,  1116,   344,   345,
     346,   776,   348,   349,   350,   351,  1117,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
    1118,   365,   366,     0,   368,   369,   370,   777,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,  1119,
     383,   384,   385,   386,   387,  1120,   388,   778,   390,   391,
     392,     0,   394,   395,   779,   397,  1121,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   780,   410,
     781,   412,  1122,   413,   414,  1123,   415,     0,   417,   418,
     419,   420,   421,  1124,   782,   783,  1125,  1126,   424,   425,
     784,   427,   785,  1127,   429,   430,   786,   432,   433,   434,
     435,   436,  1128,  1129,   437,   438,   439,   440,   441,  1130,
    1131,   442,   443,   444,   445,   446,  1132,   788,  1133,   449,
       0,   451,   452,   453,   454,  1134,  1135,   455,  1136,  1137,
     456,   457,   458,   459,   460,   461,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   798,   799,   473,   474,   475,
     476,  1058,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,  1830,    99,   100,   101,   102,  1059,   103,   104,
     105,  1060,  1061,  1062,  1063,  1064,  1065,  1066,   106,   107,
    1067,   108,   109,   110,     0,   112,   113,   114,   748,   749,
       0,   750,   751,  1068,   120,   121,   122,   123,   124,   125,
    1069,  1070,   126,   127,   752,   753,   130,  1071,   131,   132,
     133,   134,   754,  1072,     0,  1073,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,  1074,   147,   148,   149,
     150,   151,   152,  1075,     0,   154,   155,   156,  1076,  1077,
    1078,     0,  1079,  1080,  1081,   158,   159,   160,   161,   162,
     163,   164,   755,   756,   167,  1082,   168,  1083,   169,   170,
     171,   172,   173,   174,  1084,   175,   176,   177,   178,   179,
    1085,  1086,   180,   181,   182,  1831,   184,  1087,   185,   186,
     187,  1088,   188,   189,   190,  1089,   191,   192,   193,   194,
     757,   196,   197,   198,   199,   200,   758,  1090,   202,  1091,
     203,   204,   759,   206,  1092,   207,  1093,   208,     0,  1094,
       0,   211,   212,   213,     0,   215,  1095,   216,  1096,   760,
     761,   219,  1097,   220,   221,   222,   223,   224,   225,   226,
       0,   228,   229,   230,   231,  1098,   232,   233,   234,   235,
     236,   237,  1099,   238,     0,   762,   241,   242,   243,   244,
     245,   763,   764,  1100,   765,  1101,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,  1102,  1103,   260,
       0,   262,     0,  1104,   264,   265,   266,  1105,  1106,   267,
     268,   269,   270,   271,   766,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   767,     0,   768,   294,   295,   296,   769,
    1107,   298,   299,     0,   301,  1108,   770,   303,   771,   305,
     306,   307,  1109,   308,   309,  1110,  1111,   310,   311,   312,
    1112,  1113,   313,   772,     0,   316,     0,   773,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,  1114,   329,
     330,   774,   332,   333,   775,   335,   336,   337,  1115,   338,
     339,   340,   341,   342,   343,  1116,   344,   345,   346,   776,
     348,   349,   350,   351,  1117,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,  1118,   365,
     366,     0,   368,   369,   370,   777,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,  1119,   383,   384,
     385,   386,   387,  1120,  1832,   778,   390,   391,   392,     0,
     394,   395,   779,   397,  1121,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   780,   410,   781,   412,
    1122,   413,   414,  1123,   415,     0,   417,   418,   419,   420,
     421,  1124,   782,   783,  1125,  1126,   424,   425,   784,   427,
     785,  1127,   429,   430,   786,   432,   433,   434,   435,   436,
    1128,  1129,   437,   438,   439,   440,   441,  1130,  1131,   442,
     443,   444,   445,   446,  1132,   788,  1133,   449,     0,   451,
     452,   453,   454,  1134,  1135,   455,  1136,  1137,   456,   457,
     458,   459,   460,   461,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   473,   474,   475,   476,    93,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,   830,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     833,     0,   834,     0,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,   154,   155,   156,   835,   836,   837,   838,
     839,   840,   841,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   846,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,     0,   260,   261,   262,
     263,     0,   264,   265,   266,   854,   855,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,     0,   298,
     299,   300,   301,     0,   860,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,   315,   316,   317,   863,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   864,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   867,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   869,   412,     0,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   872,   427,   873,     0,
     429,   430,   875,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,   876,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,   450,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
     136,     0,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,   154,   155,   156,     0,     0,     0,   157,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,     0,   260,   261,   262,   263,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,     0,   298,   299,   300,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,  1437,   131,   132,   133,   134,   135,     0,     0,  1438,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
    1439,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
    1440,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,  1441,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,  1442,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,  1443,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,  1437,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,  1439,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,  1440,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,  1901,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
    1442,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,  1443,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   747,     0,   548,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   748,   749,
       0,   750,   751,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   752,   753,   130,     0,   131,   132,
     133,   134,   754,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   755,   756,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     757,   196,   197,   198,   199,   200,   758,  1240,   202,     0,
     203,   204,   759,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   760,
     761,   219,     0,   220,   221,   222,   223,   224,   225,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   762,   241,   242,   243,   244,
     245,   763,   764,     0,   765,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   766,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   767,     0,   768,   294,   295,   296,   769,
       0,   298,   299,     0,   301,     0,   770,   303,   771,   305,
     306,   307,     0,   308,   309,  1241,     0,   310,   311,   312,
       0,     0,   313,   772,     0,   316,     0,   773,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   774,   332,   333,   775,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   776,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   777,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   778,   390,   391,   392,     0,
     394,   395,   779,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   780,   410,   781,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   782,   783,     0,     0,   424,   425,   784,   427,
     785,  1242,   429,   430,   786,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,  1132,   788,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   473,   474,   475,   476,   499,
       0,   580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     3,
       4,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,   580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,   581,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,   580,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   624,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
     581,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   747,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     3,     4,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     748,   749,     0,   750,   751,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   752,   753,   130,     0,
     131,   132,   133,   134,   754,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   755,   756,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   757,   196,   197,   198,   199,   200,   758,     0,
     202,     0,   203,   204,   759,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   760,   761,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   762,   241,   242,
     243,   244,   245,   763,   764,     0,   765,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   766,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   767,     0,   768,   294,   295,
     296,   769,     0,   298,   299,     0,   301,     0,   770,   303,
     771,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   772,     0,   316,     0,   773,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   774,   332,   333,   775,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   776,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   777,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   778,   390,   391,
     392,     0,   394,   395,   779,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   780,   410,
     781,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   782,   783,     0,     0,   424,   425,
     784,   427,   785,     0,   429,   430,   786,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,  1132,   788,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   798,   799,   473,   474,   475,
     476,   499,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,  1737,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   225,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,  1738,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,  1739,   415,     0,   417,  1740,   419,  1741,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,  1742,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
    2696,     0,     0,     0,     0,  2697,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   500,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   502,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,   548,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   555,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   556,   423,     0,     0,   557,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   619,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,   580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   622,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,   580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   626,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,   580,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   656,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,  1154,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,   580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,  1156,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,   580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,  1568,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
    2338,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,  2352,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,  2489,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   567,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   568,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   569,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   570,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   571,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   590,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     644,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   734,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   737,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   740,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   569,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   571,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,  1391,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,     0,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,  1532,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,  1814,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,  1826,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,  1828,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,     0,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,     0,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,     0,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   665,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,   666,   112,   113,   114,     0,   667,
     668,   669,   670,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   671,   672,   130,     0,   131,   132,
     133,   134,     0,     0,   673,     0,   137,   138,   139,   140,
     141,   142,   674,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   675,   154,   155,   156,     0,     0,
       0,   676,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   677,   678,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   679,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
       0,   196,   197,   198,   199,   200,     0,     0,   202,     0,
     203,   204,   680,   206,     0,   207,     0,   208,   681,     0,
     682,   211,   212,   213,   683,   215,     0,   216,     0,     0,
       0,   219,     0,   220,   221,   222,   223,   224,   684,   226,
     685,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   686,     0,   241,   242,   243,   244,
     245,   687,   688,     0,   689,     0,   249,   690,   691,   252,
     692,   254,   255,   256,   257,   258,   259,     0,     0,   260,
     693,   262,   694,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   695,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   696,   697,   698,   294,   295,   296,     0,
       0,   298,   299,   699,   301,     0,     0,   303,   700,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,     0,   701,   316,   702,     0,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,     0,   332,   333,     0,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   703,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   704,   368,   369,   370,   705,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   706,   390,   391,   392,   707,
     394,   395,   708,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   709,   410,     0,   412,
       0,   413,   414,     0,   415,   710,   417,   418,   419,   420,
     421,     0,   711,   712,     0,     0,   424,   425,     0,   427,
       0,     0,   429,   430,   713,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,   714,     0,   449,   715,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   665,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   473,   474,   475,   476,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,   666,   112,   113,
     114,     0,   667,   668,   669,   670,     0,   120,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   671,   672,   130,
       0,   131,   132,   133,   134,     0,     0,   673,     0,   137,
     138,   139,   140,   141,   142,   674,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   675,   154,   155,
     156,     0,     0,     0,   676,     0,     0,     0,   158,   159,
     160,   161,   162,   163,   164,   677,   678,   167,     0,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,     0,     0,   180,   181,   679,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,     0,   196,   197,   198,   199,   200,     0,
       0,   202,     0,   203,   204,   680,   206,     0,   207,     0,
     208,   681,     0,   682,   211,   212,   213,   683,   215,     0,
     216,     0,     0,     0,   219,     0,   220,   221,   222,   223,
     224,   225,   226,   685,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   686,     0,   241,
     242,   243,   244,   245,   687,   688,     0,   689,     0,   249,
     690,   691,   252,   692,   254,   255,   256,   257,   258,   259,
       0,     0,   260,   693,   262,   694,     0,   264,   265,   266,
       0,     0,   267,   268,   269,   270,   271,   695,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   696,   697,   698,   294,
     295,   296,     0,     0,   298,   299,   699,   301,     0,     0,
     303,   700,   305,   306,   307,     0,   308,   309,     0,     0,
     310,   311,   312,     0,     0,   313,     0,   701,   316,   702,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,     0,   332,   333,     0,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   703,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   704,   368,   369,   370,   705,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,     0,   388,   706,   390,
     391,   392,   707,   394,   395,   708,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   709,
     410,     0,   412,     0,   413,   414,     0,   415,   710,   417,
     418,   419,   420,   421,     0,   711,   712,     0,     0,   424,
     425,     0,   427,     0,     0,   429,   430,   713,   432,   433,
     434,   435,   436,     0,     0,   437,   438,   439,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,   714,     0,
     449,   715,   451,   452,   453,   454,     0,     0,   455,     0,
       0,   456,   457,   458,   459,   460,   461,  2425,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   473,   474,
     475,   476,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
    2426,   112,   113,   114,     0,   667,  2427,   669,   670,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     671,   672,   130,     0,   131,   132,   133,   134,     0,     0,
    2428,     0,   137,   138,   139,   140,   141,   142,  2429,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
    2430,   154,   155,   156,     0,     0,     0,  2431,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   677,   678,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     679,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,     0,   196,   197,   198,
     199,   200,     0,     0,   202,     0,   203,   204,   680,   206,
       0,   207,     0,   208,  2432,     0,  2433,   211,   212,   213,
    2434,   215,     0,   216,     0,     0,     0,   219,     0,   220,
     221,   222,   223,   224,   225,   226,  2435,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
    2436,     0,   241,   242,   243,   244,   245,   687,   688,     0,
     689,     0,   249,  2437,  2438,   252,  2439,   254,   255,   256,
     257,   258,   259,     0,     0,   260,  2440,   262,  2441,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
    2639,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   696,
    2443,   698,   294,   295,   296,     0,     0,   298,   299,  2445,
     301,     0,     0,   303,   700,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,     0,
    2447,   316,  2448,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,     0,   332,   333,
       0,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   703,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,  2449,   368,   369,
     370,     0,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,     0,   390,   391,   392,  2451,   394,   395,   708,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,  2640,   410,     0,   412,     0,   413,   414,     0,
     415,  2453,   417,   418,   419,   420,   421,     0,   711,   712,
       0,     0,   424,   425,     0,   427,     0,     0,   429,   430,
    2454,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,   714,     0,   449,  2455,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     665,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   473,   474,   475,   476,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,   102,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,   666,   112,   113,   114,     0,   667,   668,
     669,   670,     0,   120,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   671,   672,   130,     0,   131,   132,   133,
     134,     0,     0,   673,     0,   137,   138,   139,   140,   141,
     142,   674,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   675,   154,   155,   156,     0,     0,     0,
     676,     0,     0,     0,   158,   159,   160,   161,   162,   163,
     164,   677,   678,   167,     0,   168,     0,   169,   170,   171,
     172,   173,   174,     0,   175,   176,   177,   178,   179,     0,
       0,   180,   181,   679,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,     0,   191,   192,   193,   194,     0,
     196,   197,   198,   199,   200,     0,     0,   202,     0,   203,
     204,   680,   206,     0,   207,     0,   208,   681,     0,   682,
     211,   212,   213,   683,   215,     0,   216,     0,     0,     0,
     219,     0,   220,   221,   222,   223,   224,   225,   226,   685,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   686,     0,   241,   242,   243,   244,   245,
     687,   688,     0,   689,     0,   249,   690,   691,   252,   692,
     254,   255,   256,   257,   258,   259,     0,     0,   260,   693,
     262,   694,     0,   264,   265,   266,     0,     0,   267,   268,
     269,   270,   271,     0,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   696,   697,   698,   294,   295,   296,     0,     0,
     298,   299,   699,   301,     0,     0,   303,   700,   305,   306,
     307,     0,   308,   309,     0,     0,   310,   311,   312,     0,
       0,   313,     0,   701,   316,   702,     0,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
       0,   332,   333,     0,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,     0,   344,   345,   346,   703,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     704,   368,   369,   370,     0,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,     0,   388,     0,   390,   391,   392,   707,   394,
     395,   708,   397,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,     0,   410,     0,   412,     0,
     413,   414,     0,   415,   710,   417,   418,   419,   420,   421,
       0,   711,   712,     0,     0,   424,   425,     0,   427,     0,
       0,   429,   430,   713,   432,   433,   434,   435,   436,     0,
       0,   437,   438,   439,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,   714,     0,   449,   715,   451,   452,
     453,   454,     0,     0,   455,     0,     0,   456,   457,   458,
     459,   460,   461,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   473,   474,   475,   476
};

static const yytype_int16 yycheck[] =
{
       6,     6,   638,   623,   609,   630,   706,    59,     0,   536,
     883,     0,   534,   804,   584,  1006,    36,   804,  1004,  1358,
    1283,   527,     0,     0,   979,   884,   652,  1179,     0,   735,
      16,   494,   738,  1749,   589,   886,  1397,  1149,    30,  1400,
     712,  1824,  1778,   981,    16,  1781,  1664,     6,  1149,  1149,
    1149,   902,  2203,  1045,   975,   984,  2201,   623,   527,   625,
    1830,   627,  1832,    31,   915,  2174,   529,  2174,  1313,  1314,
     632,  1009,   536,    61,   530,   535,  1707,  1769,  1184,     0,
    2222,   812,  1868,  1869,  1870,  2215,    35,  1821,    80,    21,
    2032,  1883,  1264,     0,    61,     9,  1643,  1644,  2087,  2080,
       5,  1648,   527,   671,   672,    60,     5,     5,    13,    14,
      52,    75,     5,    60,  1366,     5,     5,  1418,     0,  2498,
     541,   643,    90,    13,    14,  1150,  1416,     5,    69,    60,
     698,    42,   923,     5,  2486,    13,    14,  2574,     5,     5,
       9,    13,    14,  1690,  1691,    42,     5,    13,    14,  2501,
       9,     5,   171,     5,     5,     9,     5,   964,     5,     5,
       5,     5,     5,    85,  1898,     5,     5,  1278,   122,    50,
     109,   606,    13,    14,     3,     4,     5,   606,   172,    11,
       9,     4,   139,    60,    16,     4,     9,   742,    95,     3,
       9,    29,  2482,    20,    21,  1278,    11,   124,    36,   871,
     706,    16,   993,    77,  2112,   996,   997,   129,    29,   119,
     173,    11,   224,    95,    88,    36,    16,  2643,    60,    33,
      34,   285,    29,   244,  2086,  1278,   224,   168,    43,    36,
     200,  1965,  1966,  2018,  2412,   122,   171,   122,   309,  2781,
     309,   117,    77,    43,  2742,   678,   273,  2464,   191,   357,
     137,   109,   161,    88,    70,   378,   210,  2676,   270,  1278,
      75,   293,    61,   831,   832,   276,    29,   700,   334,   293,
      69,   119,   270,   256,   257,    75,  2713,   804,    11,   163,
     108,   706,   245,    16,   811,    11,  1017,   358,   117,   857,
     120,   147,   992,  1024,   440,   176,   527,   440,   731,   369,
      28,    11,   287,   329,   370,   404,    16,   813,  2094,  2976,
    2662,   192,   461,   189,   272,  2850,   197,   887,   330,   277,
     486,   459,    24,  1990,   492,   495,   235,   882,    30,   499,
     120,   499,   358,   499,   483,   405,   244,  2879,    29,   405,
     439,  2450,  2493,   110,  2333,   483,   916,   807,   497,    75,
    2495,   497,  2019,   234,   497,  3022,   170,  1988,   172,   215,
    2143,  2342,   495,   193,   117,  2346,   499,   379,   930,   132,
     328,   334,   383,   943,   497,   284,   446,   527,    80,   320,
     287,   379,   304,   366,   367,   269,   452,   216,   813,   497,
    2126,   132,   362,   270,   349,   211,   272,   416,   925,   926,
     370,  2780,   349,   193,   347,   287,  2140,   370,  2142,   238,
     843,   438,   270,  2911,  1287,   436,   144,   923,   349,   974,
    2955,   492,   250,   492,  2641,   172,   438,   497,   861,   277,
     258,  2973,   319,   497,  2612,   405,   165,   293,  2552,   238,
     438,   132,   405,   350,  1707,  1050,  1557,  1558,  1559,  1996,
    1997,  1998,  1999,  2000,   362,  2892,  2003,  2004,  2005,  2006,
    2007,  2008,  2009,  2010,  2011,  2012,   405,   486,   350,   501,
    2332,  2379,   349,  1556,  2588,   706,   497,   501,  1285,  2264,
     499,   416,   452,  1438,   438,  1786,   992,  2777,   410,   452,
     946,   402,   433,  1518,   486,  1785,  2922,   486,   455,   376,
     381,  2880,  1494,   497,  1557,   402,  1751,   349,   486,   486,
    2057,  2058,   497,   440,   486,  2249,   536,  1780,   939,  2938,
    1772,   527,  2652,  1159,   277,  1150,   393,   394,   436,  2881,
     536,   495,   442,  1524,  2643,   499,  2643,   972,  1557,  1558,
      95,   282,   416,   972,   132,  2597,   501,    39,   386,    32,
     536,   449,   459,   438,   501,   497,   706,   609,   305,   565,
     566,  2144,  2676,   535,  2553,   386,  2618,   992,    13,    14,
     501,   110,   461,    56,   488,   489,   432,   459,   497,   386,
    2561,   416,   813,   589,  2526,  2566,   315,  1759,  2569,   497,
     578,   498,   497,   500,   483,     0,   495,  1404,   497,   497,
     499,   587,  1594,  2395,   497,  2388,   598,   497,   497,   598,
    1236,   578,  1180,  1181,   546,   461,   498,  1172,   500,   497,
     598,   598,   628,   629,   630,   497,   598,   496,  2779,  1254,
    1361,   497,  2402,   601,   126,   382,   450,   483,   497,    96,
     459,   590,   161,   497,  2786,   497,   497,  2230,   497,   119,
     497,   497,   497,   497,   497,  2785,   497,   497,   497,   488,
     489,   493,   450,   813,   483,   488,   489,  1741,  1742,   488,
     489,     8,  1178,  1179,    11,   117,  1467,   598,   493,    16,
      17,    18,    19,   163,   272,  2377,  1477,  1193,   500,  1480,
     490,   491,   492,   493,   282,  2481,   149,  2811,    11,  1324,
     706,   132,   244,    16,   501,    11,  1268,   418,   497,  1178,
    2762,  1238,  1267,  1235,  1269,   172,   235,   544,  1273,   546,
     547,   166,    66,    67,  1193,  1988,   334,  2708,   159,  1299,
      43,  1286,  2877,  2847,   204,  2886,   742,    43,     4,  1364,
     357,   358,   569,     9,   348,   198,  1308,  1309,   228,   206,
    2484,   462,  2383,  1178,  1179,  1310,    24,   490,   491,   492,
     493,   992,    75,  1226,  1227,   222,    29,   132,  1193,    75,
    1233,   527,   376,  1229,  1238,   232,   344,  1237,   488,   489,
     490,   491,   492,   493,   492,     4,   461,  2932,  1579,    24,
       9,   499,  1579,  1355,   159,  2040,    31,   405,   804,  1530,
     270,  1363,   272,  1365,   334,   811,   812,   813,   483,   266,
     486,  1317,  1671,  2922,   369,  2922,  2599,    80,  1669,  1925,
     362,   497,   244,   829,  2938,  1931,    89,   200,   244,    77,
    1455,   251,  1753,  1539,   177,   807,  1643,  1644,   177,   421,
      88,  1648,   992,  1463,   452,   495,   277,   497,  1317,   499,
     405,   282,   858,  3004,  1560,   118,  1562,  1848,   300,  1565,
     197,  1734,  1584,   883,  1327,   405,  1588,   461,  1590,   137,
    1436,   452,   878,   879,   880,   405,   882,   883,   409,  1871,
     411,   244,   219,  1690,  1691,  1490,  1491,  1492,   409,   483,
     411,   446,  1317,  1518,   436,   238,   353,  1463,   497,   238,
     906,  2053,   137,   497,   459,     5,   365,   272,     8,   244,
       4,  2174,   277,    77,    14,     9,  1482,   282,  1856,   925,
     926,  1487,   452,  1774,    88,    25,   189,   369,   483,    29,
       4,  1656,     5,  1658,  1659,     9,   498,   147,   201,   501,
     362,  1447,   497,   459,   497,   461,   362,  1178,  1179,   292,
     706,   161,   289,   959,   480,   497,   166,   963,   964,    13,
      14,   161,  1193,   405,  2747,   409,   166,   411,   974,   957,
     958,     0,   960,  2520,    33,    34,   498,   804,  1447,   501,
    1909,  1536,  2752,   951,   811,  1914,   992,    16,   221,  1511,
     957,   958,   423,   960,   499,  2069,  2070,  2071,  2072,   362,
     287,    30,    24,   434,   446,   215,   409,    36,   411,    31,
    1473,  1017,   480,  1519,   436,  1478,   498,   459,  1024,   501,
     436,   498,  1447,   291,   501,   235,    24,   362,  1178,  1179,
     490,   498,    61,    31,   501,   235,    95,    13,    14,  1045,
    1008,   483,   161,  1193,   170,  1551,   498,   166,   497,   501,
    1519,    80,  1579,    13,    14,   497,   291,   813,   423,   357,
     358,   498,   889,  2610,   501,  1592,   409,   501,   411,   434,
     409,   898,   411,   436,   284,   497,  2351,  2695,   346,  2354,
     348,   497,  1551,   293,   284,   912,  1317,   498,   567,   568,
    1596,   570,  2204,   436,  1519,  2713,   923,   436,   925,   926,
     498,   436,  1657,  2204,  2204,  2204,   498,   342,   376,   501,
     498,   346,   217,   501,   498,   137,   235,   501,    24,   498,
    2383,  1827,   501,  1829,   171,    31,  1551,  1596,   498,   392,
    2846,   501,   395,  2680,   497,  2140,  2347,  2142,  2349,   137,
    1695,   376,  1747,   498,  1150,    56,   501,   484,   485,   486,
     497,   488,   489,   490,   491,   492,   493,   498,  2310,  2032,
     501,   480,   497,   221,  2155,   284,  1172,  1317,  2154,  1956,
     152,  1596,  1178,  1179,   152,   488,   489,   490,   491,   492,
     493,   498,   498,   342,   501,   501,  2141,  1193,   152,  1996,
    1997,  1998,  1999,  2000,    13,    14,  2003,  2004,  2005,  2006,
    2007,  2008,  2009,  2010,  2011,  2012,  2824,   152,   443,   498,
    2196,  2994,   501,   498,   498,   498,  1447,   501,   501,   497,
    2956,  2957,   432,  2939,  2153,   498,  2155,   603,   501,   605,
     151,   137,  1238,   187,   188,   272,   992,    24,   498,   172,
     498,   501,  2958,   501,    31,   499,   498,    38,  1254,   501,
    2057,  2058,  1238,    24,   452,  1891,    84,  1929,  1930,  2110,
      31,  1267,   463,  1269,   449,  1237,  1272,  1273,   498,   291,
     497,   501,  1264,   206,  1900,  1264,  1282,  3013,  1284,  1285,
    1286,  1287,  1288,  1289,  1290,   316,  1264,  1264,  1519,   222,
     497,    24,  1264,   291,    13,    14,   152,  1447,    31,   232,
      13,    14,   256,   257,  1310,  3021,  1312,    13,    14,   497,
     369,  1317,  1318,  1319,  1320,  1321,  1322,  1323,  1324,   497,
    1551,    37,  1328,  1329,   346,   151,   497,  1333,   152,  1954,
     498,  1337,   152,   501,  1340,  1341,  1342,  1343,  1344,  1345,
    1346,  1347,  1348,   152,   342,  1351,   405,   287,   346,   344,
     137,   497,  1358,     8,   376,  1361,    11,  1745,  1364,    13,
      14,    16,    17,    18,    19,  1596,   137,   498,    38,  1519,
     501,  2523,  1760,   498,    13,    14,   501,  1383,   376,   405,
    2643,   498,   233,  2174,   501,   291,   498,   446,   497,   501,
     498,   450,   495,   501,     5,  1381,  2735,  1389,  1404,     5,
     459,  1551,  1908,   166,   137,   498,     8,   497,   501,  1415,
    1416,   497,   366,   367,    16,    17,    18,    19,    13,    14,
     353,   443,  1178,  1179,   483,    13,    14,  2418,    69,  1956,
     498,    13,    14,   501,  2389,   497,   342,  1193,   497,  1908,
     346,  1447,   497,   527,   497,   443,  1596,  1453,   369,  1455,
       5,  1278,    13,    14,    13,    14,     8,   486,   497,    11,
      13,    14,    38,   497,    16,    17,    18,    19,    13,    14,
     376,  1977,  2027,  2035,    13,    14,   117,    13,    14,  2338,
     497,    57,     5,  1908,   405,  1948,    13,    14,  1494,  1995,
     497,  1497,  1498,  2352,  1500,    13,    14,    13,    14,   527,
      13,    14,    13,    14,   291,   497,   535,   536,  1977,   260,
     261,   497,  1518,  1519,   366,   367,  2022,   357,   358,     5,
     291,  2091,   497,  2029,  1530,   446,  1995,   357,   358,  2681,
    1536,   497,   108,     5,   175,  2241,  1528,   443,   459,   925,
     926,   497,   497,   369,  1371,  1551,   497,  2053,  2173,   578,
    2175,   497,  1977,  2022,  2915,   342,  2917,  2119,   291,   346,
    2029,  1317,   483,   497,   219,   497,     9,   148,   497,   598,
    1995,   342,   460,  1579,   298,   346,   497,   501,    99,   405,
     217,   501,   498,    38,  2189,   177,  1592,   376,  1594,   376,
    1596,   166,   284,   166,   282,  1601,   497,  2022,   233,   416,
    1606,   497,   501,    88,  2029,   376,   416,    56,   200,   342,
      56,   416,   263,   346,   416,   498,  2242,   506,  2409,   369,
     446,   416,   706,   199,   459,  1645,   152,    95,  2053,  2990,
     499,   272,   272,   459,   289,   497,   277,  1643,  1644,  1645,
     272,    38,  1648,   376,   497,     9,   238,   497,    37,   414,
    1656,  1657,  1658,  1659,   414,   405,   443,   483,   495,  2922,
    1666,   495,   416,  2649,  1670,   498,   497,  1673,  2174,   416,
     416,   497,   443,   416,   250,  1695,   501,  1908,   706,   320,
     455,    11,   258,  2205,  1690,  1691,   344,   289,   496,  1695,
    2078,  1447,  2080,   506,   270,   336,   446,   501,   501,   414,
     292,   497,   503,  1709,   497,  2174,  1712,    11,  1714,   459,
     443,    15,   277,  2520,   416,  2421,  2422,   180,   162,    23,
     171,   498,   440,   497,    38,   301,   215,  2514,  1734,   813,
      34,    35,  2238,   483,   501,   379,   224,   289,   288,  1745,
    1745,   309,   309,   501,  1764,   498,  1977,   497,   497,  2174,
    2450,   224,  1579,   272,  1760,  1760,  1583,   224,  1908,   300,
     293,   325,   452,  1519,  1995,  1592,   497,  1759,   285,  2238,
    1759,   497,   348,  1779,   152,   152,   459,    38,   807,   272,
     287,  1759,  1759,   495,    88,   813,  1745,  1759,  1794,  1795,
     498,  2022,   433,   498,   370,  1551,  2358,   498,  2029,   440,
     480,  1760,   480,  2610,  2310,   498,   287,  1813,   405,   498,
     272,  2373,   498,  2238,   390,    38,   845,   409,    38,   411,
     496,   498,  2053,   498,  1830,  1831,  1832,  1977,   369,   484,
     485,   486,   498,   488,   489,   490,   491,   492,   493,   498,
    1596,   433,     6,   171,   436,  1995,   498,    11,  2721,   498,
     498,    15,  2643,   498,   883,   498,    20,    21,    22,    23,
      24,   499,   498,    27,   405,  1871,    30,    31,   498,   498,
      34,    35,  2022,  2680,   501,   498,   498,   480,   171,  2029,
     497,   416,   484,   485,   486,  2310,   488,   489,   490,   491,
     492,   493,   497,   497,   456,   155,   497,   446,   456,   287,
     486,   501,  1908,  2053,   482,   446,   288,   288,   992,   288,
     438,   501,  1918,   416,  2420,   272,    80,   243,   459,   152,
     497,   200,   498,    87,    88,    89,    90,    91,   957,   958,
     291,   960,   484,   485,   486,   152,   488,   489,   490,   491,
     492,   493,   483,  2174,  2450,   152,   416,   416,  1954,   496,
    1956,  2420,   416,   497,  2342,   416,   497,   279,  2346,   279,
    1952,   498,    38,   501,   992,   459,   498,   285,  1974,   344,
     287,  1977,    38,   152,    52,   152,   498,  1983,   277,   171,
    1986,  2972,   496,  1989,   496,   143,    11,  2514,   166,  1995,
    1996,  1997,  1998,  1999,  2000,  2420,   498,  2003,  2004,  2005,
    2006,  2007,  2008,  2009,  2010,  2011,  2012,  2238,   498,  1836,
    2016,  2017,  2032,  2065,  2020,  2888,  2022,  2523,   498,    97,
     498,  2027,   501,  2029,  2174,  2450,  2032,   498,   171,   456,
     297,   497,   405,   498,   171,  2041,   483,   350,  2044,   180,
    2046,   501,   498,  2063,   498,   123,   445,  2053,  2054,    86,
     288,  2057,  2058,   152,  1881,   497,  2062,  2063,   175,   498,
    2080,   501,   497,   141,   427,   498,   498,   145,   498,   497,
    1897,   497,  2078,  2078,  2080,  2080,   498,   501,    38,  2310,
      81,   440,   496,   501,   171,   498,  2092,   497,  2238,   167,
     498,   147,   170,   498,  1178,  1179,  2102,   501,  2523,   407,
     498,   222,   498,   497,    96,   161,   498,   185,   296,  1193,
     166,   497,  2118,   222,    38,    56,   184,   497,   294,  2078,
     486,  2080,   498,  2748,   498,   459,   498,  2763,   202,  1956,
     190,  2922,   277,    57,  1961,   277,  1963,  2643,   486,   499,
    1967,  1968,   416,   499,   499,  2608,   499,   499,   499,   499,
    1178,  1179,  1908,   499,   499,   499,   499,   499,   499,   215,
    2310,   499,   499,  2169,  2552,  1193,   499,  2173,  2174,  2175,
     499,   416,   499,  2561,  2643,  2681,   499,   498,  2566,   235,
     172,  2569,    38,   499,   108,   109,   272,   499,   499,  2420,
     499,   497,   499,   117,   499,   109,   499,   499,   502,   277,
    2588,   499,   459,   287,  2809,   497,  2712,   285,  1237,  2715,
    2202,    38,   171,   497,   206,   497,   222,  2853,  2643,  2450,
     497,  1977,   458,   501,    88,   133,   498,   531,   284,   336,
     222,   497,  2238,  1317,  2226,  1264,  2228,   293,   497,  1995,
     232,   224,    83,  2712,   177,   117,  2715,    38,   152,  2255,
     328,   175,    75,   124,   498,   152,  2681,    38,   498,   306,
     358,   358,    38,   497,   501,   497,  2022,   200,   498,   497,
    2420,   497,   497,  2029,   266,   199,   327,  2832,   445,  2834,
      75,    38,   189,   440,   497,    69,   590,  2712,  2676,  1317,
    2715,   427,  2523,   290,    69,   287,  2921,  2053,  2304,  2305,
    2450,  1330,    56,  2309,  2310,   238,  2769,  2927,  2314,   498,
     497,  2317,  2318,   497,    38,   501,  2322,   440,   376,   277,
    2708,   486,   189,   487,   497,   248,   250,   491,    38,   497,
     494,   427,   498,   290,   258,   290,  2342,  2342,   502,   498,
    2346,  2346,   497,   360,   498,   498,   270,  2174,   272,   497,
      69,   270,   287,     9,   498,   343,    75,   202,   498,   292,
    1389,   353,  2368,  1447,   357,   529,   530,   531,   498,    88,
     287,   287,  2199,  2523,   122,   497,   432,   301,  2370,  2371,
      35,   438,   546,  2342,     9,  2848,    23,  2346,   498,   598,
    2156,  1461,  2169,     3,  2116,     5,  2402,  1825,   117,  2372,
     119,   565,   566,   567,   568,  2411,   570,  2847,  2584,  2918,
    2211,  2414,  2643,  2924,  2420,  2997,  2922,   581,  2174,  1447,
    2755,  2971,  2959,  2811,   348,   979,   590,  2664,  1819,   362,
    1831,  2216,  2921,  2969,  2173,  1519,  1816,   601,  2919,   495,
    1226,  1178,   498,   499,  2450,  1954,   370,  1887,   440,   613,
    2681,  2514,  1779,  2922,  2199,  1432,   175,   967,   945,  2847,
     917,   966,  2821,  2842,  2954,  1794,   390,  1551,   392,  1404,
    2096,   395,  2836,  2901,  2734,  2080,   409,   969,   411,  1431,
    1760,  2712,  2238,  2333,  2715,   204,  2348,   651,   652,   653,
     654,  1519,  2709,  2643,   427,  2078,  2364,  2922,  2811,  1528,
     433,   111,   112,   436,  2496,  2810,  2828,  2580,  2514,  2829,
    1278,  2904,  1596,  2905,  2520,  2942,  1278,  2523,  1356,  1278,
    2526,    38,  1278,  1551,  1671,  1780,  1713,  1269,  1500,  2535,
    2536,  2681,  2368,  2539,  1710,  1602,   566,  1748,  2365,  2095,
      57,  1892,  2803,  1238,  1592,  1381,  2552,  2552,   951,    -1,
    2938,  2117,    -1,   272,  2310,  2561,  2561,    -1,   277,  1382,
    2566,  2566,  2712,  2569,  2569,  2715,    38,    -1,  1596,    -1,
    2576,  2577,    -1,   497,    -1,    -1,    -1,   187,   188,    -1,
      -1,    -1,  2588,  2588,  2590,    57,    -1,    -1,    -1,    -1,
      -1,   108,    -1,  2552,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,  2561,    -1,  2610,    -1,    -1,  2566,    -1,    -1,
    2569,    -1,    -1,    -1,    -1,    -1,  1645,   336,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2588,
      -1,    -1,    -1,    -1,    -1,    -1,   108,  2643,    -1,    -1,
      -1,   945,   252,   253,   254,   255,   256,   257,    -1,    -1,
     260,   261,    -1,   817,    -1,    -1,    -1,    -1,   175,    -1,
      -1,    -1,  2654,    -1,  2420,  2492,  1695,    -1,    -1,    -1,
    2676,  2676,    -1,    -1,  2680,  2681,    -1,    -1,    -1,    -1,
      -1,    -1,   199,    -1,  1713,  2677,    -1,  2514,    -1,    -1,
      -1,  2922,    -1,    -1,  2450,    -1,    -1,    -1,  2704,    -1,
    1729,  2721,  2708,  2708,    -1,    -1,  2712,    -1,    -1,  2715,
      -1,    -1,    -1,    -1,   433,  2721,  1745,  2676,    -1,    -1,
     884,   440,    -1,    -1,    -1,    -1,    -1,   199,    -1,  2735,
    1759,  1760,  2738,   250,    -1,  1764,    -1,    -1,    -1,    -1,
      -1,   258,  2748,    -1,    -1,    -1,  2752,  2753,    -1,  2708,
      -1,    -1,  2579,   270,    -1,    -1,   366,   367,    -1,    -1,
      -1,     3,    -1,   927,    -1,    -1,     8,  2523,    -1,    11,
      -1,    -1,  2922,    15,    16,    17,    18,    19,   250,    -1,
      -1,   945,   946,    -1,   301,    -1,   258,   951,   952,   953,
      -1,    -1,  2784,    35,    -1,    -1,    38,    -1,   270,    -1,
      -1,    43,    -1,    -1,    -1,  2811,  2811,    -1,    50,    -1,
      -1,    -1,    -1,    -1,   978,   979,  2643,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1908,    -1,  2832,   991,  2834,   301,
    2836,   348,    -1,    75,  2840,    -1,    -1,    -1,    -1,    -1,
      -1,  2847,  2847,    -1,  1008,    -1,    -1,    -1,  1012,    -1,
      -1,  2843,  2811,   370,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2868,    -1,    -1,    -1,    -1,   477,   478,    -1,
      -1,    -1,    -1,   390,    -1,    -1,   348,    -1,    -1,    -1,
    1908,    -1,  2888,    -1,    -1,    -1,    -1,  2643,  2847,    -1,
      -1,    -1,    -1,  1977,    -1,  2901,    -1,    -1,   370,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1995,    -1,    -1,    -1,  2921,  2922,    -1,   390,    -1,
      -1,    -1,    -1,  1952,    -1,  2681,  1230,    -1,  1232,    -1,
      -1,    -1,  2938,  2938,   176,  2941,  2942,    -1,  2022,  2931,
      -1,    -1,    -1,    -1,    -1,  2029,    -1,    -1,    -1,  1977,
     192,  2778,    -1,    -1,    -1,   197,  2712,    -1,    -1,  2715,
      -1,    -1,    -1,    -1,    87,    -1,    89,  1995,    91,  2053,
    2976,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,  2938,
      -1,  1145,   111,   112,    -1,    -1,    -1,    -1,    -1,  1153,
      -1,    -1,   234,    -1,  2022,    -1,    -1,    -1,  1162,    -1,
      -1,  2029,    -1,  2032,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3022,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2053,    -1,    -1,    -1,    -1,
     272,  1195,    -1,   275,  2063,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    19,   289,    -1,  2078,
     292,  2080,    -1,    -1,    -1,    -1,    -1,    -1,   187,   188,
      -1,    -1,  1226,  1227,    -1,  1229,  1230,    -1,  1232,  1233,
      43,    -1,  1236,     8,    -1,    -1,    11,    50,    -1,    -1,
      -1,    16,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
    2174,    -1,    11,     0,    -1,  2922,    -1,    16,    17,    18,
      19,    -1,    75,    -1,    -1,    -1,    -1,    -1,    43,    -1,
      -1,    -1,    -1,    -1,    -1,    50,    35,    -1,    -1,  1283,
      -1,    -1,    -1,   252,   253,   254,   255,   256,   257,    -1,
    1294,   260,   261,    -1,    -1,  1439,    -1,    -1,    -1,   381,
      75,    -1,    -1,    -1,    -1,  1449,  2174,  1451,    -1,    -1,
    1454,    -1,    -1,    -1,  2238,    -1,  1460,    -1,  1462,    -1,
      -1,    -1,    -1,  1327,    -1,    -1,  2922,    -1,    -1,    -1,
    1474,    -1,    -1,  2202,    -1,  1479,    -1,    -1,    -1,  1483,
    1484,  1485,  1486,    -1,  1488,  1489,    -1,    -1,    95,    -1,
      -1,    -1,    -1,    -1,  1358,  1359,    -1,  2226,    -1,  2228,
      -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,
    2238,    -1,    -1,    -1,    -1,    -1,  1380,    -1,  1382,   192,
      -1,    -1,    -1,    -1,   197,     8,  2310,  1391,    11,  1393,
      -1,    -1,    15,    16,    17,    18,    19,   366,   367,   481,
     147,   176,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,   493,    35,    -1,   161,    -1,    -1,   192,    -1,   166,
      43,   234,   197,    -1,   171,  1429,    -1,    50,    -1,    -1,
      -1,    -1,    -1,   180,  1438,  1439,    -1,   184,    -1,    -1,
      -1,    -1,  2310,    -1,    -1,  1449,  1450,  1451,  1452,    -1,
    1454,    -1,    75,    -1,    -1,    -1,  1460,    -1,  1462,   234,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,  1473,
    1474,    -1,    -1,  2342,  1478,  1479,   289,  2346,    -1,  1483,
    1484,  1485,  1486,    -1,  1488,  1489,    -1,    -1,   235,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2420,    -1,    -1,    -1,
      -1,  2370,  2371,    -1,  1508,  1509,  1510,    -1,   477,   478,
      -1,    -1,    -1,    -1,   289,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1526,    -1,   487,    -1,  2450,    -1,   497,    -1,
     289,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,
     287,    -1,    -1,    -1,    -1,    -1,   293,    -1,    -1,    -1,
      -1,    -1,  2420,   176,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   381,   192,
      -1,    -1,    -1,    -1,   197,     8,    -1,    -1,    11,    -1,
     327,    -1,  2450,    16,    17,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,  2523,
      -1,    -1,    -1,   350,    -1,    -1,   381,    -1,    -1,    -1,
      43,   234,    -1,    -1,    -1,    -1,    -1,    50,   581,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,  2496,    -1,    -1,
      -1,    16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,    -1,   272,
     613,    -1,   275,    -1,    -1,  2523,    -1,    -1,   405,    -1,
    1664,    -1,    -1,    -1,    -1,    -1,   289,  1671,   481,   292,
      -1,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    -1,   432,    -1,    -1,   651,   652,
     653,   654,  2561,   440,    -1,    -1,    -1,  2566,    -1,    -1,
    2569,    -1,    -1,  1707,    -1,    -1,   481,    -1,    -1,   456,
      -1,   458,   459,   488,   489,   490,   491,   492,   493,  2643,
      -1,    -1,    -1,    -1,    -1,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,   493,  1739,    -1,    -1,    -1,    -1,
      -1,  1745,    -1,   176,    -1,    -1,    -1,    -1,   495,    -1,
      -1,   498,   499,   500,    -1,    -1,  1760,  2681,   381,   192,
    1764,    -1,    -1,  1767,   197,  1769,    -1,    -1,  1912,    -1,
      -1,    -1,    -1,    -1,    -1,  2643,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2654,   219,   220,  2712,    -1,
      -1,  2715,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,  2677,    -1,
      -1,   804,    -1,  2681,    -1,    -1,    -1,  1821,   811,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,  2708,
      -1,    -1,   275,    -1,  2712,    -1,    -1,  2715,    -1,    -1,
      -1,    -1,  2721,    -1,     0,    -1,   289,    -1,   481,    -1,
      -1,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    20,    -1,    -1,    -1,   501,  1883,
      -1,    -1,    -1,    -1,  1888,    31,    -1,    33,    34,    -1,
      -1,    -1,    -1,    -1,  1898,  1899,  1900,  1901,    -1,    -1,
      -1,    -1,    -1,    49,   289,   898,    -1,    -1,  1912,    -1,
      -1,    -1,    58,    -1,    -1,  2784,  1920,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    70,    -1,    -1,    -1,  1932,    -1,
     923,     0,   925,   926,    -1,    81,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1948,    -1,  1950,    93,   381,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1965,  1966,    -1,   927,    -1,    -1,   113,    -1,    -1,
      -1,    -1,    -1,    -1,  2843,    -1,    -1,    -1,    -1,    -1,
      -1,   127,    -1,    -1,  1988,    -1,    -1,    -1,    -1,   952,
      -1,   137,  2136,    -1,    -1,    -1,    -1,   143,  2922,    -1,
     993,    -1,    -1,   996,   997,   151,    -1,   153,   154,    -1,
      -1,    -1,    -1,    -1,    -1,   978,    -1,  2161,    -1,    -1,
      -1,   167,    -1,    -1,    -1,    -1,    95,    -1,   991,    -1,
      -1,    -1,  2176,  2177,  2178,  2179,  2180,  2181,  2182,  2183,
    2184,  2185,    -1,   111,   112,    -1,    -1,    -1,   481,  1012,
     196,   484,   485,   486,  2922,   488,   489,   490,   491,   492,
     493,    -1,  2931,    -1,    -1,   211,    -1,    -1,    -1,    -1,
      -1,  2075,  2076,  2077,  2078,    -1,  2080,  2081,   147,    -1,
      -1,    -1,  2086,  2087,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   237,   161,    -1,    -1,    -1,    -1,   166,    -1,   484,
     485,   486,   171,   488,   489,   490,   491,   492,   493,    -1,
      -1,   180,  2116,    -1,    -1,   184,    -1,    -1,    -1,   187,
     188,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2134,    -1,  2136,    -1,    -1,    -1,  2140,  2141,  2142,    -1,
    2144,    -1,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,
    2294,    -1,    -1,    -1,    -1,    -1,    -1,  2161,    -1,  2163,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   314,    -1,
      -1,   317,  2176,  2177,  2178,  2179,  2180,  2181,  2182,  2183,
    2184,  2185,    -1,  1176,   252,   253,   254,   255,   256,   257,
    1153,    -1,   260,   261,  1187,    -1,  1189,  2201,    -1,    -1,
     346,    -1,  2206,    -1,    -1,  1198,    -1,    -1,    -1,   355,
      -1,    -1,  2216,    -1,    -1,   284,    -1,    -1,   287,    -1,
      -1,    -1,  1215,   369,   293,    -1,  2230,    -1,    -1,    -1,
     376,    -1,    -1,    -1,   380,    -1,    -1,    -1,  2242,    -1,
      -1,    -1,    -1,    -1,   390,  2249,    -1,    -1,    -1,    -1,
    1243,  1244,    -1,    -1,    -1,   401,    -1,    -1,   327,   405,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1236,    -1,    -1,   565,   566,    -1,    -1,
      -1,   350,  1275,  1276,    -1,    -1,  1279,  1280,    -1,     0,
    2294,    -1,    -1,    -1,    -1,   441,  2300,    -1,   366,   367,
     446,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   459,    -1,    -1,    -1,    -1,    -1,  2323,
      -1,  2325,  2326,  2327,  2328,    -1,    -1,    -1,  2332,  2333,
      -1,  2335,    -1,    -1,  2338,    -1,   405,   483,  2342,   628,
     629,    -1,  2346,    -1,    -1,    -1,    -1,    -1,  2352,    -1,
      -1,   497,    -1,     8,   500,    -1,    11,    -1,    -1,    -1,
      -1,    16,    -1,   432,  2368,    -1,    -1,    -1,  2372,    -1,
      -1,   440,    -1,  2377,    -1,    -1,    -1,    -1,    -1,  2383,
      -1,    -1,    -1,    -1,    95,  2389,    -1,   456,    43,   458,
     459,  2395,    -1,    -1,    -1,    50,  1359,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,  2415,    -1,    -1,    -1,    -1,    -1,  1380,    -1,  1382,
      75,    -1,  1415,  1416,    -1,    -1,   495,    -1,    -1,   498,
     499,   500,    -1,    -1,    -1,     8,   147,    -1,    11,    -1,
      -1,    -1,    -1,    16,    -1,    -1,    -1,    -1,    -1,    -1,
     161,    -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,
     171,    -1,    -1,    -1,    -1,  2609,  1429,    -1,    -1,   180,
      43,    -1,    -1,   184,  1467,    -1,    -1,    50,    -1,    -1,
    2484,    -1,    -1,    -1,  1477,    -1,    -1,  1480,    -1,    -1,
     145,  2495,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2644,  2645,    75,  2507,   215,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2661,    -1,    -1,
      -1,   176,    -1,   812,   235,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,  2543,
     829,    -1,   197,    -1,    -1,  1508,  1509,    -1,  2552,  2553,
      -1,    -1,  2556,    -1,    -1,  2559,    -1,  2561,    -1,  1552,
    1553,    -1,  2566,    -1,    -1,  2569,    -1,  2571,    -1,   858,
    2574,    -1,   145,   284,    -1,    -1,   287,    -1,    -1,   234,
      -1,    -1,   293,    -1,  2588,    -1,  1579,    -1,    -1,   878,
     879,   880,    -1,  2737,   883,    -1,    -1,    -1,    -1,  1592,
      -1,    -1,    -1,   176,  2608,  2609,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2617,    -1,    -1,   327,   906,    -1,   192,
       8,  2765,    -1,    11,   197,    -1,    -1,    -1,    16,    17,
      18,    19,    -1,    -1,   289,    -1,    -1,    -1,    -1,   350,
    2644,  2645,    -1,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      -1,  2655,    -1,  2657,    -1,    -1,    -1,  2661,    -1,    -1,
      -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2673,
     959,    -1,  2676,    -1,   963,   964,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2695,    -1,    -1,   405,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    16,  2708,    -1,    -1,    -1,    -1,  2713,
      -1,    -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,    -1,
      -1,   432,    -1,    -1,    -1,    -1,   381,  2731,  1017,   440,
      43,  2735,    -1,  2737,    -1,  1024,    -1,    50,    -1,    -1,
      -1,    -1,  2746,     8,    -1,   456,    11,   458,   459,    -1,
      15,    16,    17,    18,    19,    -1,  1045,  1750,    -1,    -1,
      -1,  2765,    75,    -1,    -1,  2769,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    -1,    -1,  1739,    -1,    43,  2783,
      -1,    -1,    -1,    -1,   495,    50,    -1,   498,   499,   500,
      -1,  1784,  1785,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2811,   381,    -1,
      75,    -1,    -1,    -1,    -1,    -1,  2820,    -1,    -1,    -1,
    2824,    -1,    -1,    -1,  2828,    -1,   481,    -1,    -1,    -1,
      -1,   219,   145,   488,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,  2847,  2848,  2849,  2850,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      19,    -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2877,    -1,    -1,    35,    -1,    -1,   192,
      -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,  2892,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2904,   289,    -1,    -1,    -1,    -1,    -1,    -1,   481,    -1,
      -1,   176,    -1,    -1,  2918,   488,   489,   490,   491,   492,
     493,   234,    -1,    -1,    -1,  1888,    -1,   192,  2932,    -1,
      -1,    -1,   197,  1926,  2938,    -1,  1899,  1900,  1901,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2954,  2955,    -1,     8,   219,   220,    11,  1920,    -1,    -1,
      -1,    16,    17,    18,    19,    -1,    -1,    -1,    -1,   234,
      -1,    -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,    -1,
      35,    -1,    -1,  1272,    -1,    -1,    -1,  1950,    -1,    -1,
      -1,    -1,    -1,  1282,    -1,  1284,    -1,    -1,  1287,  1288,
    1289,  1290,    -1,    -1,    -1,    -1,    -1,   272,    -1,    -1,
     275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1312,   289,    -1,    -1,   292,    -1,  1318,
    1319,  1320,  1321,  1322,  1323,    -1,    -1,    -1,    -1,  1328,
    1329,    -1,    -1,    -1,  1333,    -1,    -1,    -1,  1337,    -1,
      -1,  1340,  1341,  1342,  1343,  1344,  1345,  1346,  1347,  1348,
     219,    -1,  1351,    -1,    -1,    -1,    -1,    -1,   381,  1358,
      -1,    -1,  1361,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1383,    -1,   484,   485,   486,   899,
     488,   489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,
      -1,    -1,  2075,  2076,  2077,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,  1415,  1416,    11,    -1,
     289,    -1,    15,    16,    17,    18,    19,    -1,    -1,    -1,
     940,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      43,    -1,    -1,    -1,   219,    -1,    -1,    50,   481,    -1,
      -1,  2134,    -1,    -1,    -1,   488,   489,   490,   491,   492,
     493,  2174,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    75,    -1,    15,    16,    17,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,  1494,    -1,    -1,  1497,  1498,
      -1,  1500,    -1,    -1,    35,    -1,   481,    -1,    -1,   484,
     485,   486,    43,   488,   489,   490,   491,   492,   493,    50,
      -1,    -1,    -1,   498,   289,    -1,    -1,    -1,    -1,    -1,
      -1,  1530,    -1,  2206,    -1,    -1,    -1,    -1,    -1,  1049,
      -1,    -1,    -1,    -1,    75,    -1,  1056,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2242,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1594,    -1,    -1,    -1,   192,
      -1,    -1,  1601,    -1,   197,    -1,    -1,  1606,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,   493,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   234,    -1,    -1,    -1,   176,  1645,    -1,    -1,    -1,
      -1,    -1,  2325,  2326,  2327,  2328,    -1,  1656,    -1,  1658,
    1659,   192,    -1,    -1,    -1,    -1,   197,  1666,    -1,    -1,
      -1,  1670,    -1,    -1,  1673,    -1,    -1,    -1,    -1,   272,
      -1,    -1,   275,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,   292,
      -1,    -1,    -1,   234,    -1,    -1,  2409,    -1,    -1,    -1,
    1709,  2414,    -1,  1712,    -1,  1714,    -1,    -1,    -1,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2456,  2457,    -1,    -1,    -1,   289,     8,
    1270,   292,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      19,  1281,    -1,    -1,    -1,  1285,    -1,    -1,    -1,    -1,
    1779,  1291,  1292,  1293,    -1,    -1,    35,    -1,   381,    -1,
    1300,    -1,    -1,    -1,    43,  1794,  1795,    -1,    -1,    -1,
      -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1813,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    75,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1357,    -1,    -1,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1871,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    16,    -1,   481,    -1,
    1400,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
     493,    -1,    -1,    -1,  1414,   498,    -1,    -1,    -1,  1419,
      -1,    -1,    -1,    43,    -1,    -1,    -1,    -1,    -1,  1918,
      50,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,  2632,
    2633,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2643,    -1,    -1,   192,  2617,    75,    -1,    -1,   197,    -1,
     481,    -1,    -1,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,   493,    -1,    -1,    -1,    -1,   498,    -1,    -1,
     219,   220,    -1,    -1,    22,  1974,    -1,    -1,    -1,    -1,
      -1,    -1,  2655,    -1,  1983,   234,    -1,  1986,    -1,    -1,
    1989,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2673,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   145,    -1,  2016,  2017,    -1,
      -1,  2020,    -1,   272,    -1,    -1,   275,    -1,    76,    -1,
      -1,    -1,    -1,  2032,    -1,    -1,    -1,    -1,    -1,    -1,
     289,    -1,  2041,   292,    92,  2044,   176,  2046,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2054,    -1,    -1,    -1,    -1,
      -1,    -1,   192,  2062,  2063,    -1,    -1,   197,    -1,    -1,
      -1,    -1,    -1,  2746,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2092,  1604,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,  2102,   234,    -1,    -1,    -1,   156,    -1,
    2783,    -1,    -1,  1623,    -1,    -1,    -1,    -1,    -1,  2118,
     168,    -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,
      -1,  1641,   381,  1643,  1644,    -1,  1646,    -1,  1648,    -1,
      -1,    -1,  1652,    -1,    -1,  1655,    -1,    -1,    -1,    -1,
    1660,    -1,   200,  1663,    -1,    -1,    -1,    -1,    -1,   289,
      -1,    -1,    -1,    -1,    -1,  1675,    -1,    -1,    -1,  1679,
    1680,  1681,  1682,  1683,  1684,    -1,    -1,    -1,    -1,    -1,
    1690,  1691,    -1,  1693,  1694,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1705,    -1,   245,  1708,    -1,
      -1,   249,    -1,    -1,    -1,    -1,  1716,  1717,  1718,  1719,
    1720,  1721,  1722,  1723,  1724,  1725,    -1,    -1,    -1,  2922,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   481,    -1,    -1,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,   493,    -1,    -1,  1757,    -1,   498,
       8,   381,    -1,    11,    -1,    -1,  2255,    15,    16,    17,
      18,    19,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    35,   326,    -1,
      -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,    -1,    -1,
      -1,    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2304,  2305,    -1,    -1,    -1,
    2309,   359,    -1,    -1,   362,  2314,    -1,    75,  2317,  2318,
      -1,    -1,   370,  2322,    -1,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,    -1,    -1,    -1,    -1,    -1,
      -1,   481,    -1,    -1,    -1,    -1,    -1,   405,   488,   489,
     490,   491,   492,   493,   412,    -1,  1876,  1877,  1878,  2368,
      -1,    -1,    -1,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   452,    -1,    -1,    -1,    -1,    35,
      -1,    -1,  2411,    -1,    -1,    -1,    -1,    43,   176,    -1,
      -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,   197,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    75,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,   220,  1973,    -1,    -1,    -1,    -1,    -1,  1979,
      -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,
      -1,    -1,  1992,  1993,  1994,    -1,  1996,  1997,  1998,  1999,
    2000,    -1,    -1,  2003,  2004,  2005,  2006,  2007,  2008,  2009,
    2010,  2011,  2012,  2013,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   272,    -1,    -1,   275,    -1,    -1,
      -1,    -1,    -1,  2033,    -1,    -1,  2036,  2526,  2038,    -1,
      -1,   289,  2042,  2043,   292,    -1,  2535,  2536,    -1,    -1,
    2539,    -1,    -1,    -1,    -1,    -1,  2056,  2057,  2058,  2059,
     176,  2061,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,
      -1,   197,    -1,    -1,    -1,    -1,    -1,  2576,  2577,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,
      -1,  2590,    -1,   219,   220,    50,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      75,    -1,    -1,   381,    -1,    -1,    -1,  2137,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   272,    -1,    -1,   275,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   289,    -1,    -1,   292,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2704,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,  2229,
      -1,   176,  2721,   481,    -1,    -1,   484,   485,   486,    -1,
     488,   489,   490,   491,   492,   493,  2735,   192,    -1,  2738,
     498,    -1,   197,    -1,    -1,    43,  2256,    -1,    -1,    -1,
    2260,  2261,    50,  2263,  2753,   381,  2266,  2267,  2268,  2269,
    2270,    -1,    -1,    -1,  2274,  2275,  2276,  2277,  2278,  2279,
    2280,  2281,  2282,  2283,  2284,  2285,    -1,    75,    -1,   234,
      -1,     8,    -1,    -1,    11,    -1,  2296,    -1,    15,    16,
      17,    18,    19,  2303,    -1,    -1,  2306,    -1,  2308,    -1,
      -1,    -1,  2312,    -1,    -1,  2315,  2316,    -1,    35,  2319,
    2320,    -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   289,    -1,    -1,  2836,    -1,    -1,
      -1,  2840,    -1,    -1,    -1,    -1,    -1,   145,    75,  2359,
      -1,    -1,    -1,    -1,    -1,   481,    -1,  2367,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,   493,    -1,  2868,
    2380,    -1,   498,    -1,    -1,    -1,    -1,    -1,   176,     8,
      -1,    -1,    11,    -1,    24,    -1,    15,    16,    17,    18,
      19,    31,    -1,    -1,   192,    -1,    -1,    -1,    38,   197,
      -1,    -1,  2901,    -1,    -1,    -1,    35,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    43,    -1,    -1,    57,    -1,    -1,
      -1,    50,    -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,
      -1,    -1,  2941,  2942,    -1,    -1,    75,    -1,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,   108,    -1,
     197,    -1,    -1,    -1,    -1,    -1,    -1,  2976,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   289,   219,   220,    -1,    -1,    -1,   137,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2516,   234,    -1,    -1,
    2520,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2529,
    2530,  2531,    -1,  3022,  2534,    -1,   481,  2537,  2538,    -1,
      -1,    -1,  2542,   488,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,    -1,   272,    -1,   176,   275,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   199,
      -1,    -1,   289,   192,    -1,   292,    -1,    -1,   197,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2610,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   258,  2629,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   272,    -1,    -1,   275,    -1,    -1,    -1,
      -1,   291,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
     289,   301,    -1,   292,    -1,    -1,    -1,    -1,    -1,  2679,
    2680,    -1,    -1,    -1,    -1,  2685,  2686,  2687,    -1,    -1,
      -1,    -1,    -1,   481,    -1,    -1,    -1,    -1,    -1,    -1,
     488,   489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,
      -1,    -1,   342,    -1,    -1,    -1,   346,    -1,   348,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2729,
    2730,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,  2744,    -1,   376,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2756,    -1,    -1,    -1,
     390,    -1,   381,    -1,   481,    -1,    -1,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,   493,    -1,    -1,    -1,
      -1,   498,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2805,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   443,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2823,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2845,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2859,
      -1,    -1,   481,    -1,    -1,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,   498,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,  2906,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    37,  2929,
      -1,    40,    41,    -1,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    74,    -1,    76,    -1,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,  2979,
      89,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
      -1,    -1,   231,   232,   233,   234,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,    -1,    -1,
     289,   290,   291,    -1,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,
     489,   490,    -1,    -1,    -1,    -1,   495,    -1,   497,   498,
      -1,    -1,    -1,   502,    -1,   504,   505,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      76,    -1,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,   234,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,    -1,
      -1,   457,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,    -1,   483,    -1,    -1,
      -1,    -1,   488,   489,    -1,    -1,    -1,    -1,    -1,   495,
      -1,   497,   498,    -1,    -1,    -1,   502,    -1,   504,   505,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,    -1,
     483,    -1,    -1,    -1,    -1,   488,   489,    -1,    -1,    -1,
      -1,    -1,   495,    -1,   497,    -1,    -1,    -1,    -1,   502,
      -1,   504,   505,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    76,    -1,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
     170,   171,   172,   173,   174,   175,   176,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,    -1,
     230,   231,   232,   233,   234,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,
      -1,    -1,    -1,    -1,    -1,   495,    -1,   497,    -1,    -1,
      -1,    -1,   502,    -1,   504,   505,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    -1,    -1,    36,
      37,    -1,    -1,    40,    41,    -1,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    76,
      -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,   170,    -1,   172,   173,   174,   175,   176,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,   234,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
      -1,   488,   489,    -1,    -1,    -1,    -1,    -1,   495,    -1,
     497,    -1,    -1,    -1,    -1,   502,    -1,   504,   505,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    76,    -1,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
     234,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,    -1,   488,   489,   490,    -1,    -1,    -1,
      -1,   495,    -1,   497,    -1,    -1,    -1,    -1,   502,    -1,
     504,   505,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    -1,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    -1,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    -1,    70,
      71,    72,    73,    74,    -1,    76,    -1,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    -1,    89,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,    -1,   120,
     121,   122,   123,   124,   125,    -1,   127,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
      -1,   162,   163,   164,   165,    -1,   167,    -1,   169,   170,
      -1,   172,   173,   174,   175,   176,   177,    -1,   179,    -1,
     181,   182,   183,    -1,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,   216,    -1,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,    -1,    -1,
     231,   232,   233,   234,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,    -1,   285,   286,    -1,    -1,   289,   290,
     291,    -1,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,   490,
      -1,    -1,    -1,    -1,   495,    -1,   497,    -1,    -1,    -1,
      -1,   502,    -1,   504,   505,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,
     488,   489,   490,    -1,    -1,    -1,    -1,   495,    -1,   497,
      -1,    -1,    -1,    -1,   502,    -1,   504,   505,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      -1,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    -1,    70,    71,    72,    73,    74,
      -1,    76,    -1,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    -1,    89,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,    -1,   120,   121,   122,   123,   124,
     125,    -1,   127,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,    -1,   162,   163,   164,
     165,    -1,   167,    -1,   169,   170,    -1,   172,   173,   174,
     175,   176,   177,    -1,   179,    -1,   181,   182,   183,    -1,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,   216,    -1,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,    -1,    -1,   231,   232,   233,   234,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,    -1,
     285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,    -1,   488,   489,    -1,    -1,    -1,    -1,    -1,
     495,    -1,   497,    -1,    -1,    -1,    -1,   502,    -1,   504,
     505,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    76,    -1,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,   234,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,    -1,   488,   489,    -1,    -1,
      -1,    -1,    -1,   495,    -1,   497,   498,    -1,    -1,    -1,
     502,    -1,   504,   505,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    74,    -1,    76,    -1,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    -1,
      89,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
      -1,    -1,   231,   232,   233,   234,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,    -1,    -1,
     289,   290,   291,    -1,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,
     489,    -1,    -1,    -1,    -1,    -1,   495,    -1,   497,    -1,
      -1,    -1,    -1,   502,    -1,   504,   505,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      76,    -1,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,   234,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,    -1,   488,   489,    -1,    -1,    -1,    -1,    -1,   495,
      -1,   497,   498,    -1,    -1,    -1,   502,    -1,   504,   505,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,   171,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,    -1,   488,   489,    -1,    -1,    -1,
      -1,    -1,   495,    -1,   497,    -1,    -1,    -1,    -1,   502,
      -1,   504,   505,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    76,    -1,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
     170,    -1,   172,   173,   174,   175,   176,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,   234,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,
      -1,    -1,    -1,    -1,    -1,   495,    -1,   497,    -1,    -1,
      -1,    -1,   502,    -1,   504,   505,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    76,
      -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,   170,    -1,   172,   173,   174,   175,   176,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,   234,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
      -1,   488,   489,    -1,    -1,    -1,    -1,    -1,   495,    -1,
     497,    -1,    -1,    -1,    -1,   502,    -1,   504,   505,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    31,    32,    -1,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    76,    -1,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
     234,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,    -1,   488,   489,    -1,    -1,    -1,    -1,
      -1,   495,    -1,   497,    -1,    -1,    -1,    -1,   502,    -1,
     504,   505,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      31,    32,    -1,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    -1,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    -1,    70,
      71,    72,    73,    74,    -1,    76,    -1,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    -1,    89,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,    -1,   120,
     121,   122,   123,   124,   125,    -1,   127,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
      -1,   162,   163,   164,   165,    -1,   167,    -1,   169,   170,
      -1,   172,   173,   174,   175,   176,   177,    -1,   179,    -1,
     181,   182,   183,    -1,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,   216,    -1,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,    -1,    -1,
     231,   232,   233,   234,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,    -1,   285,   286,    -1,    -1,   289,   290,
     291,    -1,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,    -1,
      -1,    -1,    -1,    -1,   495,    -1,   497,    -1,    -1,    -1,
      -1,   502,    -1,   504,   505,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,
     488,   489,    -1,    -1,    -1,    -1,    -1,   495,    -1,   497,
      -1,    -1,    -1,    -1,   502,    -1,   504,   505,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    31,    32,    -1,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      -1,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    -1,    70,    71,    72,    73,    74,
      -1,    76,    -1,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    -1,    89,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,    -1,   120,   121,   122,   123,   124,
     125,    -1,   127,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,    -1,   162,   163,   164,
     165,    -1,   167,    -1,   169,   170,    -1,   172,   173,   174,
     175,   176,   177,    -1,   179,    -1,   181,   182,   183,    -1,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,   216,    -1,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,    -1,    -1,   231,   232,   233,   234,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,    -1,
     285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,    -1,   488,   489,    -1,    -1,    -1,    -1,    -1,
     495,    -1,   497,    -1,    -1,    -1,    -1,   502,    -1,   504,
     505,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    76,    -1,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,   234,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,    -1,   488,   489,    -1,    -1,
      -1,    -1,    -1,   495,    -1,   497,    -1,    -1,    -1,    -1,
     502,    -1,   504,   505,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    74,    -1,    76,    -1,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    -1,
      89,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
      -1,    -1,   231,   232,   233,   234,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,    -1,    -1,
     289,   290,   291,    -1,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,
     489,    -1,    -1,    -1,    -1,    -1,   495,    -1,   497,    -1,
      -1,    -1,    -1,   502,    -1,   504,   505,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      76,    -1,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,   234,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,   439,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,    -1,   488,   489,    -1,    -1,    -1,    -1,    -1,   495,
      -1,   497,    -1,    -1,    -1,    -1,   502,    -1,   504,   505,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,    -1,   488,   489,    -1,    -1,    -1,
      -1,    -1,   495,    -1,   497,    -1,    -1,    -1,    -1,   502,
      -1,   504,   505,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    76,    -1,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
     170,    -1,   172,   173,   174,   175,   176,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,   234,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,
      -1,    -1,     3,     4,     5,     6,     7,   497,     9,    10,
      -1,    -1,    -1,    -1,   504,   505,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      41,    -1,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    -1,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    -1,    70,
      71,    72,    73,    74,    -1,    76,    -1,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    -1,    89,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
     121,   122,   123,   124,   125,    -1,   127,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
      -1,   162,   163,   164,   165,    -1,   167,    -1,   169,   170,
      -1,   172,   173,   174,   175,   176,   177,    -1,   179,    -1,
     181,   182,   183,    -1,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,   216,    -1,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,    -1,    -1,
     231,   232,   233,   234,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,    -1,   285,   286,    -1,    -1,   289,   290,
     291,    -1,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   497,    -1,    -1,    -1,
      -1,    -1,    -1,   504,   505,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     488,   489,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
      -1,    -1,    -1,    -1,    -1,    -1,   504,   505,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    31,    32,    -1,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    44,
      45,    46,    47,    48,    49,    -1,    51,    52,    53,    54,
      -1,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    -1,    70,    71,    72,    73,    74,
      -1,    76,    -1,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    -1,    89,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,    -1,   120,   121,   122,   123,   124,
     125,    -1,   127,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
      -1,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,    -1,   162,   163,   164,
     165,    -1,   167,    -1,   169,   170,    -1,   172,   173,   174,
     175,    -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,
     185,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,   216,    -1,   218,    -1,    -1,   221,   222,   223,   224,
     225,   226,   227,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,   278,   279,   280,   281,   282,   283,    -1,
     285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   488,   489,     3,    -1,    -1,    -1,    -1,
     495,    -1,   497,    -1,    -1,    -1,    -1,   502,    -1,   504,
     505,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      38,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,   172,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     498,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    41,    -1,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    -1,    63,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    74,    -1,    76,    -1,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    -1,
      89,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,   275,   276,    -1,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,    -1,   288,
     289,   290,   291,    -1,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
     439,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,    -1,     3,   483,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    63,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    76,    -1,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
     170,    -1,   172,   173,   174,   175,   176,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,    -1,   273,   274,   275,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,   288,   289,
     290,   291,    -1,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,   439,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      -1,    63,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    76,    -1,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,   234,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
      -1,   273,   274,   275,   276,    -1,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,   439,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   497,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    -1,    63,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    76,    -1,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
     234,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,    -1,   273,
     274,   275,   276,    -1,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,     3,     4,     5,
      -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   497,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,   287,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,
      -1,    -1,   488,   489,   490,    -1,    -1,    -1,    -1,    -1,
      -1,   497,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    33,    34,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    -1,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,   457,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,     3,    -1,   483,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    -1,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    98,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
      -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    -1,    47,    48,    49,    50,    51,
      -1,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    -1,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,
      -1,   173,   174,   175,    -1,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,
      -1,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
      -1,   233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,    -1,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,    -1,    -1,   457,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,    -1,
       3,   483,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   497,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,   406,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,    -1,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   497,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,
      45,    -1,    47,    48,    49,    50,    51,    -1,    53,    54,
      -1,    56,    57,    58,    59,    60,    61,    -1,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    72,    73,    74,
      -1,    -1,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    89,    90,    91,    92,    93,    94,
      -1,    -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
     125,    -1,   127,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,   164,
     165,    -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,
     175,    -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,
     185,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,   216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,
     225,   226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,
      -1,   236,   237,   238,    -1,    -1,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,    -1,
     285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,
     295,    -1,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,   351,   352,    -1,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,    -1,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   497,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,
      47,    48,    49,    50,    51,    -1,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    -1,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    -1,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    -1,
      97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,    -1,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     497,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    41,    -1,    43,    44,    45,    -1,    47,    48,
      49,    50,    51,    -1,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    -1,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      89,    90,    91,    92,    93,    94,    -1,    -1,    97,    98,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
      -1,    -1,   221,    -1,   223,   224,   225,   226,   227,   228,
      -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,    -1,    -1,
     289,   290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,    -1,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      41,    -1,    43,    44,    45,    -1,    47,    48,    49,    50,
      51,    -1,    53,    54,    -1,    56,    57,    58,    59,    60,
      61,    -1,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    72,    73,    74,    -1,    -1,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    89,    90,
      91,    92,    93,    94,    -1,    -1,    97,    98,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
     121,   122,   123,   124,   125,    -1,   127,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
      -1,   162,   163,   164,   165,    -1,   167,    -1,   169,    -1,
      -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,    -1,
     181,   182,   183,    -1,   185,   186,   187,   188,   189,   190,
     191,    -1,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,   216,    -1,   218,    -1,    -1,
     221,    -1,   223,   224,   225,   226,   227,   228,    -1,    -1,
     231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,    -1,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,    -1,   285,   286,    -1,    -1,   289,   290,
     291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,    -1,
     351,   352,    -1,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
      -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,     8,
       9,    -1,    -1,    -1,    -1,    -1,   497,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    -1,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,   154,   155,   156,   157,    -1,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,    -1,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,    -1,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,    -1,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
     479,   480,    -1,     3,    -1,   484,   485,   486,     8,   488,
     489,   490,   491,   492,   493,    -1,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    -1,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    98,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
      -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,   484,   485,   486,    -1,   488,   489,
     490,   491,   492,   493,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    18,    19,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    35,    -1,     8,    -1,    -1,    11,    -1,    -1,    43,
      15,    16,    17,    18,    19,    -1,    50,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,     8,
      -1,    75,    11,    -1,    -1,    50,    15,    16,    17,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    35,    -1,     8,    -1,
      75,    11,    -1,    -1,    43,    15,    16,    17,    18,    19,
      -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    35,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    43,    -1,    -1,    75,    -1,    -1,    -1,
      50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,
      -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,
      -1,    -1,    -1,   197,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   192,    -1,    -1,
      -1,    -1,   197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     234,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,   197,   234,
      -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,   272,    -1,
      -1,   275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   192,    -1,    -1,   289,    -1,   197,   292,    -1,
      -1,    -1,    -1,    -1,    -1,   234,    -1,   272,    -1,    -1,
     275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
     220,    -1,    -1,    -1,   289,    -1,    -1,   292,    -1,    -1,
      -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   272,    -1,    -1,   275,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     289,    -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,   289,
      -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,
     484,   485,   486,    -1,   488,   489,   490,   491,   492,   493,
      -1,    -1,    -1,    -1,   498,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,   498,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   481,    -1,    -1,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,   498,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,   481,    -1,    -1,   484,   485,   486,    -1,   488,   489,
     490,   491,   492,   493,    -1,    -1,   496,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    -1,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    -1,    97,    98,    99,   100,   101,   102,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,    -1,
     233,    -1,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,
      45,    -1,    47,    48,    49,    50,    51,    -1,    53,    54,
      -1,    56,    57,    58,    59,    60,    61,    -1,    -1,    64,
      65,    66,    67,    68,    -1,    70,    71,    72,    73,    74,
      -1,    -1,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    89,    90,    91,    92,    93,    94,
      -1,    -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
     125,    -1,   127,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,   164,
     165,    -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,
     175,    -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,
     185,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,   216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,
     225,   226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,
      -1,   236,   237,   238,    -1,    -1,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,    -1,
     285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,
     295,    -1,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,   351,   352,    -1,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,   406,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
     435,   436,   437,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,    -1,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,   490,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,
      47,    48,    49,    50,    51,    -1,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    -1,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    -1,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    -1,
      97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
     287,    -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,    -1,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,   406,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,   435,   436,
     437,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,     4,     5,    -1,    -1,    -1,
       9,   488,   489,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    41,    -1,    43,    44,    45,    -1,    47,    48,
      49,    50,    51,    -1,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    -1,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      89,    90,    91,    92,    93,    94,    -1,    -1,    97,    98,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
      -1,    -1,   221,    -1,   223,   224,   225,   226,   227,   228,
      -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,   287,    -1,
     289,   290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,    -1,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,     4,     5,    -1,    -1,    -1,     9,   488,
     489,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      41,    -1,    43,    44,    45,    -1,    47,    48,    49,    50,
      51,    -1,    53,    54,    -1,    56,    57,    58,    59,    60,
      61,    -1,    -1,    64,    65,    66,    67,    68,    -1,    70,
      71,    72,    73,    74,    -1,    -1,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    89,    90,
      91,    92,    93,    94,    -1,    -1,    97,    98,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
     121,   122,   123,   124,   125,    -1,   127,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
      -1,   162,   163,   164,   165,    -1,   167,    -1,   169,    -1,
      -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,    -1,
     181,   182,   183,    -1,   185,   186,   187,   188,   189,   190,
     191,    -1,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,   216,    -1,   218,    -1,    -1,
     221,    -1,   223,   224,   225,   226,   227,   228,    -1,    -1,
     231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,    -1,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,    -1,   285,   286,   287,    -1,   289,   290,
     291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,    -1,
     351,   352,    -1,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,   406,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
      -1,    -1,     8,    -1,    -1,    11,    -1,   488,   489,    15,
      16,    17,    18,    19,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    19,    -1,    -1,    35,
      -1,    -1,    -1,    39,    -1,    -1,    -1,    43,    -1,    -1,
      -1,    -1,    35,    -1,    50,    -1,    -1,    -1,    -1,    -1,
      43,     8,    -1,    -1,    11,    -1,    -1,    50,    15,    16,
      17,    18,    19,    -1,     8,    -1,    -1,    11,    -1,    75,
      -1,    15,    16,    17,    18,    19,    -1,    -1,    35,    -1,
      -1,    -1,    75,    -1,    -1,    -1,    43,    -1,    -1,    -1,
      -1,    35,    -1,    50,    38,    -1,    -1,    -1,    -1,    43,
       8,    -1,    -1,    11,    -1,    -1,    50,    15,    16,    17,
      18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    75,    -1,
     126,    -1,    -1,    -1,    -1,    -1,    -1,    35,    -1,    -1,
       8,    75,    -1,    11,    -1,    43,    -1,    15,    16,    17,
      18,    19,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    -1,    -1,    -1,    -1,    43,    -1,    75,    -1,    -1,
     176,    -1,    50,   166,    -1,    -1,    -1,    -1,   171,    -1,
      -1,    -1,    -1,   176,    -1,    -1,   192,    -1,    -1,    -1,
      -1,   197,    -1,    -1,    -1,    -1,    -1,    75,    -1,   192,
      -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,   165,    -1,
      -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,   234,    -1,
      -1,    -1,   176,    -1,    -1,   192,    -1,    -1,    -1,    -1,
     197,   234,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,
      -1,    -1,    -1,   197,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,   272,    -1,   176,   275,
      -1,    -1,    -1,    -1,    -1,   219,   220,   234,    -1,   272,
      -1,    -1,   275,   289,   192,    -1,   292,    -1,    -1,   197,
     234,    -1,    -1,    -1,    -1,    -1,   289,    -1,   176,   292,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,   220,    -1,   192,   272,    -1,    -1,   275,   197,
      -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,   272,    -1,
      -1,   275,   289,    -1,    -1,   292,    -1,    -1,    -1,    -1,
      -1,   219,   220,    -1,    -1,   289,    -1,    -1,   292,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,   315,    -1,
      -1,    -1,    -1,    -1,   272,    -1,    -1,   275,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,   289,    -1,    -1,   292,    -1,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    -1,   272,    -1,    -1,   275,    -1,    -1,
      -1,    -1,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   289,    -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   440,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   381,    -1,   481,    -1,    -1,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,   493,   481,    -1,
      -1,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
     493,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   481,    -1,    -1,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,   493,   481,    -1,    -1,
     484,   485,   486,    -1,   488,   489,   490,   491,   492,   493,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   481,    -1,    -1,   484,   485,   486,    35,
     488,   489,   490,   491,   492,   493,    -1,    43,    -1,    -1,
      -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   481,    -1,    -1,   484,   485,   486,    -1,
     488,   489,   490,   491,   492,   493,    -1,     8,    -1,    75,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    35,    -1,     8,    38,    -1,    11,
      -1,    -1,    43,    15,    16,    17,    18,    19,    -1,    50,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    43,     8,    -1,    75,    11,    -1,    -1,    50,    15,
      16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    75,    -1,   171,    -1,    43,    -1,    -1,
     176,    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,
      -1,   197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    75,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,
       8,    -1,    -1,    11,    -1,   176,    -1,    15,    16,    17,
      18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   192,    -1,    -1,    -1,    -1,   197,    35,    -1,    -1,
      -1,    -1,    -1,    -1,   176,    43,   272,    -1,    -1,   275,
      -1,    -1,    50,    -1,    -1,    -1,    -1,    -1,   219,   220,
     192,    -1,    -1,   289,    -1,   197,   292,    -1,    -1,    -1,
      -1,    -1,    -1,   234,    -1,    -1,    -1,    75,    -1,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,
      -1,   197,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,   220,    -1,    -1,    -1,   289,    -1,
      -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,
     272,    -1,    -1,   275,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   381,    -1,   289,    -1,    -1,
     292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   272,    -1,   176,   275,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   289,   192,    -1,   292,    -1,    -1,   197,
      -1,    -1,    -1,    -1,    -1,    24,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    38,
     381,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,   234,    11,    57,    -1,
      -1,    15,    16,    17,    18,    19,    -1,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,   485,
     486,    35,   488,   489,   490,   491,   492,   493,    -1,    43,
      -1,    -1,    -1,    -1,   272,    -1,    50,   275,    -1,    -1,
      -1,   413,    -1,    -1,    -1,   381,    -1,    -1,    -1,   108,
      -1,   289,    -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,
       8,    75,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    19,    -1,    -1,    -1,    -1,    -1,    -1,   137,    -1,
     481,    -1,    -1,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,   493,    -1,    -1,    43,     8,    -1,    -1,    11,
      -1,    -1,    50,    -1,    16,    17,    18,    19,    -1,   481,
      -1,    -1,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,   493,    -1,    35,    -1,    -1,    -1,    75,    -1,    -1,
      -1,    43,    -1,    -1,    -1,    -1,    -1,    -1,    50,    -1,
     199,    -1,    -1,   381,    -1,   481,    -1,    -1,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,   176,    75,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,
      -1,    -1,    -1,   197,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   258,
      -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,
      -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   481,   192,    -1,   484,   485,   486,   197,
     488,   489,   490,   491,   492,   493,    -1,    -1,   272,    -1,
      -1,   275,    -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,   219,   220,    -1,    -1,   289,    -1,    -1,   292,    -1,
     192,    -1,    -1,   342,    -1,   197,   234,   346,    -1,   348,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,
      -1,   370,    -1,    -1,    -1,    -1,    -1,   376,    -1,    -1,
      -1,    -1,   234,    -1,   272,    -1,    -1,   275,    -1,    -1,
      -1,   390,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   289,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     272,    -1,    -1,   275,    -1,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,
      -1,    -1,    -1,    -1,   443,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   481,    -1,   381,
     484,   485,   486,    -1,   488,   489,   490,   491,   492,   493,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   481,    -1,    -1,   484,   485,   486,    -1,
     488,   489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     3,    -1,     5,    -1,   481,
      -1,    -1,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,   493,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    -1,    97,
      98,    99,   100,   101,   102,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,   175,    -1,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,    -1,   233,    -1,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    -1,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    -1,    97,    98,    99,
     100,   101,   102,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,   175,    -1,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,   229,
     230,   231,    -1,   233,    -1,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    -1,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    -1,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    -1,    97,    98,    99,   100,   101,
     102,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,   175,    -1,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,    -1,    -1,   221,
      -1,   223,   224,   225,   226,   227,   228,   229,   230,   231,
      -1,   233,    -1,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,   267,   268,   269,   270,   271,
     272,   273,   274,    -1,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,    -1,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    -1,    63,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    76,    -1,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
     234,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,    -1,   273,
     274,   275,   276,    -1,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,   439,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      76,    -1,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,   234,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,    -1,   273,   274,   275,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    -1,    -1,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    -1,    -1,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    -1,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    -1,    -1,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    98,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,    -1,   233,   234,    -1,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,   433,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    -1,    47,    48,    49,    50,    51,
      -1,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    -1,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,
      -1,   173,   174,   175,    -1,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,
      -1,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
      -1,   233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,   287,    -1,   289,   290,   291,
      -1,    -1,   294,   295,    -1,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    31,    32,    33,
      34,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    -1,    47,    48,    49,    50,    51,    -1,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    -1,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    -1,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,   173,
     174,   175,    -1,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,    -1,   233,
      -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,    -1,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,    -1,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,    -1,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,   288,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    -1,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
     288,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    33,    34,    -1,    -1,    -1,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    -1,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    98,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
      -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    -1,    47,    48,    49,    50,    51,
      -1,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    -1,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,
      -1,   173,   174,   175,    -1,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,
      -1,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
      -1,   233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,    -1,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,     3,
       4,    -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    -1,    47,    48,    49,    50,    51,    -1,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    -1,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    -1,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,   173,
     174,   175,    -1,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,    -1,   233,
      -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,    -1,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,    -1,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,    -1,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    -1,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    -1,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    98,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
      -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    -1,    47,    48,    49,    50,    51,
      -1,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    -1,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,
      -1,   173,   174,   175,    -1,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,
      -1,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
      -1,   233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,    -1,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    -1,    47,    48,    49,    50,    51,    -1,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    -1,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    -1,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,   173,
     174,   175,    -1,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,    -1,   233,
      -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,    -1,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,    -1,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,    -1,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    -1,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    -1,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    98,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
      -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    -1,    47,    48,    49,    50,    51,
      -1,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    -1,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,
      -1,   173,   174,   175,    -1,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,
      -1,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
      -1,   233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,    -1,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    -1,    47,    48,    49,    50,    51,    -1,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    -1,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    -1,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,   173,
     174,   175,    -1,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,    -1,   233,
      -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,    -1,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,    -1,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,    -1,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      38,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    -1,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,    -1,
      40,    41,    -1,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    -1,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    98,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
      -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    -1,    47,    48,    49,    50,    51,
      -1,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    -1,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,
      -1,   173,   174,   175,    -1,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,
      -1,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
      -1,   233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,    -1,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    -1,    47,    48,    49,    50,    51,    -1,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    -1,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    -1,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,   173,
     174,   175,    -1,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,    -1,   233,
      -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,    -1,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,    -1,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,    -1,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    -1,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    -1,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    98,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
      -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    -1,    47,    48,    49,    50,    51,
      -1,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    -1,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,
      -1,   173,   174,   175,    -1,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,
      -1,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
      -1,   233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,    -1,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    -1,    47,    48,    49,    50,    51,    -1,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    -1,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    -1,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,   173,
     174,   175,    -1,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,    -1,   233,
      -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,    -1,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,    -1,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,    -1,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    -1,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,    -1,
      40,    41,    -1,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    -1,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    98,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
      -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,    -1,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    -1,    47,    48,    49,    50,    51,
      -1,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    -1,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,
      -1,   173,   174,   175,    -1,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,
      -1,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
      -1,   233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,    -1,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,   406,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,    -1,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,    43,
      44,    45,    -1,    47,    48,    49,    50,    51,    -1,    53,
      54,    -1,    56,    57,    58,    59,    60,    61,    -1,    -1,
      64,    65,    66,    67,    68,    -1,    70,    71,    72,    73,
      74,    -1,    -1,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    -1,    89,    90,    91,    92,    93,
      94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
     164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,   173,
     174,   175,    -1,   177,    -1,   179,    -1,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,   223,
     224,   225,   226,   227,   228,    -1,    -1,   231,    -1,   233,
      -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,    -1,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,    -1,
     294,   295,    -1,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,    -1,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,    -1,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
     406,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,    -1,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    -1,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,   406,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,    -1,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    41,    -1,    43,    44,    45,    -1,    47,    48,    49,
      50,    51,    -1,    53,    54,    -1,    56,    57,    58,    59,
      60,    61,    -1,    -1,    64,    65,    66,    67,    68,    -1,
      70,    71,    72,    73,    74,    -1,    -1,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    98,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,   164,   165,    -1,   167,    -1,   169,
      -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,   179,
      -1,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,   216,    -1,   218,    -1,
      -1,   221,    -1,   223,   224,   225,   226,   227,   228,    -1,
      -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,    -1,    -1,   289,
     290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,    -1,   328,    -1,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,    -1,   354,   355,   356,   357,    -1,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
      -1,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    46,    47,    48,    49,    -1,    51,
      52,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      -1,    -1,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    -1,    -1,    76,    -1,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    99,    -1,    -1,
      -1,   103,    -1,    -1,    -1,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
      -1,   153,   154,   155,   156,   157,    -1,    -1,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,    -1,   179,    -1,    -1,
      -1,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,    -1,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,   234,    -1,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,    -1,    -1,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,    -1,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,    -1,   314,   315,    -1,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
      -1,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,    -1,   418,   419,    -1,   421,
      -1,    -1,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   477,   478,   479,   480,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    41,    -1,    43,    44,    45,    46,    47,    48,
      49,    -1,    51,    52,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    -1,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    -1,    -1,    76,    -1,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    -1,
      89,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      99,    -1,    -1,    -1,   103,    -1,    -1,    -1,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,    -1,   153,   154,   155,   156,   157,    -1,
      -1,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,    -1,
     179,    -1,    -1,    -1,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
      -1,    -1,   231,   232,   233,   234,    -1,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,    -1,    -1,   273,   274,   275,   276,    -1,    -1,
     279,   280,   281,   282,   283,    -1,   285,   286,    -1,    -1,
     289,   290,   291,    -1,    -1,   294,    -1,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,    -1,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,    -1,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,    -1,   418,
     419,    -1,   421,    -1,    -1,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,    -1,   447,    -1,
     449,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
     479,   480,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      46,    47,    48,    49,    -1,    51,    52,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    -1,    -1,
      76,    -1,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,    -1,   153,   154,   155,
     156,   157,    -1,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,    -1,   179,    -1,    -1,    -1,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,    -1,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,   234,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,    -1,    -1,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,    -1,
     296,   297,   298,    -1,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,    -1,   314,   315,
      -1,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,    -1,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,    -1,   418,   419,    -1,   421,    -1,    -1,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,   479,   480,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    -1,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    -1,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,    -1,
     153,   154,   155,   156,   157,    -1,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,    -1,    -1,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,    -1,    -1,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,    -1,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
      -1,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,    -1,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,    -1,   418,   419,    -1,   421,    -1,
      -1,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,    -1,   447,    -1,   449,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   477,   478,   479,   480
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    20,    31,    33,    34,    49,    58,    70,    81,    93,
      95,   113,   127,   137,   143,   151,   153,   154,   167,   196,
     211,   237,   314,   317,   346,   355,   369,   376,   380,   390,
     401,   405,   441,   446,   459,   483,   497,   508,   509,   510,
     511,   522,   523,   525,   529,   544,   547,   548,   550,   552,
     559,   561,   608,   615,   618,   619,   636,   637,   638,   639,
     640,   641,   692,   693,   837,   840,   843,   850,   851,   852,
     853,   854,   861,   865,   871,   873,   878,   882,   883,   886,
     887,   889,   890,   892,   418,   462,   560,   200,   362,   370,
     405,   452,   560,     3,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    30,    31,    32,    40,    41,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      56,    57,    58,    59,    60,    61,    64,    65,    66,    67,
      68,    70,    71,    72,    73,    74,    76,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    89,    90,    91,
      92,    93,    94,    96,    97,    98,    99,   103,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   118,   120,
     121,   122,   123,   124,   125,   127,   128,   129,   130,   131,
     134,   135,   136,   137,   138,   140,   141,   142,   144,   145,
     146,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   160,   162,   163,   164,   165,   167,   169,   170,
     172,   173,   174,   175,   176,   177,   179,   181,   182,   183,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   198,   199,   200,   201,   202,   203,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   216,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     231,   232,   233,   234,   236,   237,   238,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   273,   274,
     275,   276,   278,   279,   280,   281,   282,   283,   285,   286,
     289,   290,   291,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   321,   322,
     323,   324,   325,   326,   328,   329,   330,   331,   332,   333,
     334,   335,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   370,   371,   372,   373,   374,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   403,   404,   406,   407,   408,   409,   410,
     411,   412,   414,   415,   418,   419,   420,   421,   422,   424,
     425,   426,   427,   428,   429,   430,   431,   434,   435,   436,
     437,   438,   441,   442,   443,   444,   445,   446,   447,   449,
     450,   451,   452,   453,   454,   457,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   750,   822,   826,
     829,   895,   896,   897,   560,    52,   497,   631,   177,   238,
     292,   362,   409,   411,   427,   433,   436,   606,   849,     3,
      29,   246,   317,   398,   820,   826,   895,    22,    76,    92,
     146,   156,   168,   173,   200,   245,   249,   312,   326,   359,
     362,   370,   373,   392,   405,   412,   421,   427,   452,   609,
     610,   613,   560,   820,    95,   450,   497,   525,   618,   636,
     857,   861,   878,   892,   110,    70,   211,   110,     5,   825,
     826,   872,   872,   826,   820,    29,   414,   418,   826,   884,
     885,   888,   560,    29,   132,   648,   649,   177,   238,   362,
     374,   414,   866,   867,   888,   560,   446,   636,   641,   888,
       5,   288,   705,   817,   826,   827,   172,   497,   875,   497,
     334,   642,   643,   820,   642,   637,   638,     0,   500,   122,
     210,   438,   147,   215,   293,   432,   651,   652,   637,   639,
     640,   501,   450,   855,    29,   414,   418,   636,   888,   190,
     817,   820,   190,   817,   190,   705,   190,   817,   497,   495,
     499,   801,   803,   525,   618,   636,   839,   878,   817,   409,
     411,   409,   411,   344,   190,   826,   826,   831,   173,   245,
     334,   370,   405,   452,   616,   200,    29,   820,   251,   421,
     109,   405,   405,   452,   365,     3,    46,    51,    52,    53,
      54,    66,    67,    76,    84,    96,   103,   114,   115,   136,
     164,   170,   172,   176,   190,   192,   206,   213,   214,   216,
     219,   220,   222,   232,   234,   246,   265,   266,   267,   275,
     280,   296,   298,   331,   353,   357,   377,   381,   384,   398,
     407,   414,   415,   426,   447,   450,   614,   716,   717,   719,
     721,   723,   725,   727,   728,   729,   731,   732,   733,   735,
     736,   830,   895,   898,   190,   611,   831,   190,   818,   820,
     190,   820,   497,   551,   292,   606,   857,     3,    50,    51,
      53,    54,    66,    67,    74,   114,   115,   152,   158,   164,
     181,   182,   207,   213,   214,   216,   246,   265,   267,   271,
     278,   280,   295,   299,   313,   316,   331,   357,   377,   384,
     398,   400,   414,   415,   420,   422,   426,   446,   447,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     858,   860,   861,   863,   864,   895,   899,   855,   825,   872,
     825,   486,   497,   497,   838,   480,   221,   499,   287,     4,
       6,     7,     8,     9,    10,    37,    51,    53,    54,    62,
      63,    66,    67,    74,    76,   100,   101,   102,   103,   104,
     105,   106,   114,   115,   117,   152,   158,   159,   164,   181,
     182,   213,   214,   216,   239,   240,   265,   267,   272,   277,
     278,   280,   289,   299,   313,   331,   357,   375,   384,   400,
     414,   415,   420,   422,   423,   426,   439,   447,   481,   488,
     489,   490,   495,   497,   502,   504,   505,   637,   682,   720,
     723,   726,   727,   728,   730,   731,   732,   735,   736,   747,
     749,   750,   751,   753,   767,   768,   775,   795,   800,   807,
     808,   809,   822,   823,   824,   825,   826,   806,   808,   866,
     866,   825,   866,   480,   171,   416,   486,   497,   817,   490,
     803,     3,   170,   172,   450,   861,   874,   876,   170,   877,
     747,   779,   780,   826,   642,   501,   497,   833,   498,   498,
     510,   171,   217,   705,   879,    29,   132,   647,   647,    56,
     647,   161,   166,   235,   284,   657,   659,   660,   685,   687,
     688,   689,   651,   652,   497,   817,   480,   221,   152,    24,
      31,   137,   291,   342,   346,   376,   443,   516,   519,   520,
     342,   152,    38,    57,   108,   199,   250,   258,   270,   301,
     342,   348,   370,   376,   390,   519,   553,   556,   152,   342,
     376,   519,   152,   342,   376,   519,     3,    29,    46,    52,
      76,    84,    96,   103,   132,   170,   172,   176,   192,   206,
     219,   220,   222,   232,   234,   246,   266,   275,   296,   298,
     353,   381,   398,   407,   426,   448,   450,   490,   498,   747,
     782,   783,   828,   834,   895,   900,   747,   802,     3,    29,
      33,    34,    35,    36,    37,    38,    39,    42,    55,    62,
      63,    69,    75,    77,    88,    95,   100,   101,   102,   104,
     105,   106,   117,   119,   126,   132,   133,   139,   143,   147,
     159,   161,   166,   168,   171,   178,   180,   184,   197,   204,
     215,   217,   229,   230,   235,   239,   240,   272,   277,   284,
     287,   288,   292,   293,   310,   320,   327,   336,   350,   369,
     375,   386,   402,   405,   413,   416,   417,   423,   432,   433,
     439,   440,   446,   448,   455,   456,   458,   459,   821,   835,
     895,   899,   901,   801,   498,   497,   595,   606,   272,   841,
     499,   832,    38,   452,   190,   817,   190,   817,   894,   817,
     817,    84,   846,   463,    85,   129,   304,   410,   449,   734,
     734,   734,   497,   722,   722,   316,   497,   724,   152,   497,
      66,    67,   734,   722,   719,   461,   483,   497,   737,   497,
     737,    60,   349,   501,   612,   497,    37,   718,   497,   111,
     112,   187,   188,   252,   253,   254,   255,   256,   257,   260,
     261,   366,   367,   477,   478,   497,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   722,   152,   501,   612,   152,
     501,   612,   152,   287,   780,   344,   405,   498,   501,     4,
     159,   287,   423,   488,   489,   555,   558,   824,   825,   856,
     858,   859,   862,   857,   497,   626,   630,   555,   862,   868,
     870,   782,   717,   784,    38,   233,   826,   497,   804,   495,
     747,   799,   497,   497,   166,   497,   497,   637,   497,   497,
     497,   747,   497,   497,   497,   497,   497,   497,   497,   497,
     497,   747,   747,   747,   148,   810,   811,   780,   781,   637,
     747,   779,   769,   770,   771,   826,   827,     9,   804,   803,
     497,   825,   497,   824,   825,     3,     8,    11,    15,    16,
      17,    18,    19,    35,    38,    43,    50,    75,   176,   192,
     197,   219,   220,   234,   272,   275,   289,   292,   381,   481,
     484,   485,   486,   488,   489,   490,   491,   492,   493,   773,
     774,   775,   777,   460,   754,   804,   298,   747,   501,   217,
     644,   497,   825,   804,   499,   803,   644,     3,   117,   238,
     555,   736,   825,   869,    99,   117,   870,   117,   870,   817,
     498,   501,   855,   501,   498,   643,   818,    38,   879,   527,
     817,    38,   826,   376,   639,   639,    29,   490,   653,   654,
     747,   639,   163,   269,   673,   224,   270,   330,   379,   438,
       4,     9,    29,   668,   747,   488,   489,   669,   670,   747,
     749,   685,   686,   660,   659,   657,   658,   166,   688,   282,
     690,   657,   685,   780,   833,   233,   817,    69,    77,    88,
     168,   190,   320,   433,   576,   586,   602,   826,    77,    88,
     524,    88,   524,   497,   416,   497,   574,   244,   436,   574,
      88,   501,   416,   817,   719,   555,    56,   557,   555,   555,
     108,   250,   258,    56,   416,   459,   483,   554,   263,   362,
     554,   556,   705,    88,   416,   524,   362,   817,   416,   362,
     782,   782,   783,   498,   501,   651,   652,    13,    14,   496,
     506,   416,   594,   599,   826,   459,   629,   334,   405,   452,
     152,    95,   548,   561,   842,   843,   890,   821,   499,    28,
     144,   817,   272,   549,   553,   272,   497,   595,    38,   595,
     497,   617,   190,   589,   826,   847,   497,   780,   824,   614,
     784,   734,   734,    37,   718,   414,   414,   824,   824,   717,
     715,   826,   495,   495,   824,   824,   416,   416,   416,   416,
     611,   831,   818,   820,   820,   831,   498,   606,   190,   817,
     894,   857,   863,     4,   824,     4,   824,   628,   635,   835,
      52,    97,   123,   141,   145,   167,   170,   185,   277,   285,
     328,   632,   501,   498,   501,   498,   501,   839,   780,   801,
     781,   455,   796,   797,   747,   780,   497,   824,   824,     3,
     738,   739,   740,   741,   742,   743,   744,   745,   785,   786,
     825,   824,   824,   747,     8,    16,    17,    18,    19,   484,
     485,   486,   488,   489,   490,   491,   492,   493,   773,   778,
     826,   747,   787,   488,   489,   497,   748,   749,   775,   789,
     498,   780,   747,   779,   790,   747,    55,   171,   230,   417,
     747,   780,   793,   747,   497,   826,   344,   815,   496,   498,
     501,   501,   503,   506,   780,   747,   746,   746,   717,   747,
     747,   747,   747,   747,   747,     5,   835,   836,   414,    42,
     402,   805,   831,   747,   747,   497,   637,   794,   132,   159,
     272,   277,   282,   423,   434,   747,   277,   497,   747,   416,
      50,   176,   192,   197,   234,   381,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,    29,    36,   386,   772,
     180,   162,   755,   357,   497,   768,   809,   177,   238,   405,
     409,   411,   436,   645,   817,   171,   694,   782,   490,   694,
     497,   825,   498,   817,   874,   817,   882,   747,   498,   497,
     440,   881,   117,   300,   497,   526,   636,    38,   826,   497,
     531,   540,   541,   543,   826,    39,   126,   655,   655,   501,
     440,   655,   357,   358,   488,   489,   670,   672,   749,   379,
     224,   288,   309,   309,   501,   492,     4,   671,   824,   671,
     357,   358,   672,   816,   817,   276,   383,   691,   686,   658,
     498,   342,   519,   497,   190,   586,   820,   224,   272,   224,
     440,   497,   579,   717,   820,   826,   190,   820,   190,   826,
      24,   137,   376,   515,   518,   569,   584,   835,   820,   578,
     598,   835,   820,   516,   820,   342,   376,   519,   553,   555,
     831,   820,   555,   831,   820,   555,   342,   376,   519,   820,
     820,   820,   820,   342,   376,   519,   820,   820,   651,   651,
     651,   448,   783,   191,   347,   650,   747,   747,   747,   802,
     325,   625,   498,   501,   285,   171,   416,   620,   452,   817,
     894,   817,   826,   292,   606,   821,   717,   497,   497,   152,
     152,   234,   576,   586,   590,   593,   603,   605,   826,   459,
     461,   581,   151,   636,   459,   848,   498,   782,    38,   272,
     287,   780,   498,   498,   612,   498,   495,   480,   480,   498,
     498,   498,   501,   717,   824,   496,   824,   498,   498,   739,
     741,   742,   743,   742,   743,   743,   612,   612,   287,   612,
     405,   272,    38,   498,   501,   490,   497,   555,   627,   862,
      38,   624,   825,   624,   272,   277,   328,   624,   624,   868,
     717,   498,   496,   747,   139,   797,   798,    38,   498,   747,
     498,   498,   498,   171,   498,   498,   501,   498,   499,   310,
     788,   498,   748,   748,   747,    11,    16,    17,    18,    19,
     197,   219,   289,   484,   485,   486,   488,   489,   490,   491,
     492,   493,   775,   748,   498,   498,   166,   171,   791,   792,
     501,   498,    38,   793,   780,   793,   793,   171,   498,    38,
     818,   819,   497,   747,   812,   804,   747,   769,   747,   498,
     498,   480,   748,   748,   145,   780,   171,   132,   159,   277,
     282,   423,   434,   497,   145,   778,   747,   402,   805,   747,
     794,   747,   416,   497,   637,   497,   497,   155,   756,   409,
     411,   409,   411,   817,   405,   646,   646,   646,   229,   358,
     497,   637,   695,   696,   697,   698,   705,   706,   750,   752,
     753,   826,   456,   711,   651,   811,   711,   824,   746,   833,
     839,   696,   456,   880,   446,   404,   439,   535,   530,   539,
     826,   287,   532,   826,   536,   543,   501,   694,   486,   804,
     482,   656,   656,   654,   289,   773,   776,   656,     4,   824,
     672,   288,   438,   669,   501,   243,   416,   747,   272,   602,
     497,   152,   497,   579,   200,   599,   600,   562,   291,   572,
     562,    24,   137,   346,   348,   376,   512,   513,   514,   520,
     521,   152,   612,   152,   612,   569,   584,   569,   498,   501,
     565,   825,   498,   501,   486,   499,   416,   362,    88,   416,
     524,   362,   416,   416,   416,   362,   650,   650,   650,   783,
     279,   279,   498,   496,   393,   394,   634,   825,   594,   625,
     817,   497,    38,   595,   841,   344,   405,   545,   546,   825,
     599,   817,   817,   894,   817,   498,   501,   285,   574,   285,
     287,   573,   820,   459,   893,   574,    38,   498,   405,   747,
     152,   817,   498,   718,   824,   737,   737,   718,   826,   496,
     496,   831,   152,   628,   622,   633,   862,   825,   825,   277,
     599,   490,   599,   825,   825,   413,   747,   143,   717,   498,
     747,   747,   778,   747,   791,   717,   748,   748,   748,   748,
     748,   132,   272,   282,   748,   748,   748,   748,   748,   748,
     748,   748,   748,   748,   747,   747,   792,   791,   717,   498,
     498,   498,   780,   717,   501,   498,   747,   812,   813,   814,
      38,   498,   746,   747,    35,    35,   747,   498,   747,   171,
     497,   784,   747,   498,   145,   748,   748,   145,   145,   747,
     747,   652,   456,   297,   760,   646,   646,   646,   646,   817,
     817,   817,   637,   706,   171,   637,   697,   698,    38,   699,
     700,   826,   501,    96,   172,   206,   222,   232,   266,   353,
     702,   700,    38,   699,   701,   826,   483,   710,   803,   747,
     180,   674,   650,   815,   674,   498,   498,   747,   350,   534,
     445,   498,   501,   804,    86,   534,   498,   501,   531,   880,
     747,   163,   228,   497,   656,   288,   817,   820,   498,   152,
     600,   586,   600,   562,   589,   501,   498,   119,   204,   270,
     272,   585,   497,   596,   175,   117,   189,   272,   574,   554,
     109,   117,   175,   272,   392,   395,   556,   574,   376,   514,
     427,   820,   826,   518,   598,     3,    46,    52,    76,    84,
      96,   103,   170,   172,   176,   192,   206,   219,   220,   222,
     232,   234,   246,   266,   271,   275,   289,   296,   298,   353,
     377,   381,   398,   407,   426,   450,   488,   489,   555,   563,
     601,   717,   776,   825,   828,   895,   901,   835,   820,   820,
     820,   820,   820,   820,   820,   820,   820,   820,   498,   498,
     498,   651,   554,   634,   497,   593,   636,   848,   606,   190,
     817,   498,   501,   498,   549,   497,    38,   583,   581,   590,
      81,   551,   109,   270,   636,   636,   589,   440,   845,   496,
     717,   612,   894,   498,   501,   599,   747,   498,   498,   792,
     171,   132,   282,   497,   498,   498,   501,   498,   826,   747,
     747,   747,   784,   498,   747,    35,    35,   747,   747,   145,
     498,   498,   747,   497,   761,   826,   817,   817,   817,   817,
     700,   701,   497,   498,   826,   827,   407,   665,   666,   497,
     697,   222,   296,   703,   697,   703,   222,   702,   703,   222,
     666,   497,   826,   666,   497,   294,    56,   184,   683,   498,
     683,   825,   807,   636,   300,   636,   530,   287,   497,   528,
     486,   543,   534,   778,   562,   586,   498,   498,   459,   592,
     120,   193,   202,   119,   442,   569,   587,    69,    75,    88,
     117,   119,   175,   204,   272,   277,   320,   336,   433,   440,
     567,   568,   580,    32,    56,   607,   190,   277,   555,   747,
     607,   277,   488,   489,   558,   826,   717,   612,   612,   246,
     398,   828,   832,   486,   416,   416,   650,   626,   440,   621,
     623,   599,   498,   893,    38,   405,   272,   497,   825,   848,
     593,   151,   636,   149,   198,   573,   122,   137,   319,   893,
     109,   459,   891,   287,   826,   844,   497,    38,   633,   748,
     171,   497,   784,   812,   498,   747,   747,   747,   498,   762,
     826,   707,   708,   752,   699,   497,     4,     9,   661,   663,
     664,   826,   819,   697,   287,   440,   704,   697,   222,   697,
     712,   713,   826,   497,   712,   826,    29,    98,   181,   356,
     490,   497,   675,   676,   677,   678,   679,   680,   681,   747,
     747,   458,   757,   825,   757,   501,   535,    88,   497,   533,
     542,   752,   826,   133,   747,   498,   336,   592,   497,   582,
     562,   498,   501,   497,   831,   820,   748,   607,   120,   193,
     119,   277,   224,   817,   592,    83,   117,    38,   152,    75,
     714,   832,   492,   563,   820,   820,   498,   554,   124,   498,
     581,   636,   817,   152,    38,   498,   820,   893,    29,    80,
      89,   118,   189,   201,   392,   395,   577,   577,   358,   358,
      61,    69,   238,   817,   542,   748,   784,   498,   306,   763,
     498,   501,    38,   709,   819,   309,   492,   309,   358,   492,
     497,   497,   498,   747,   497,   697,   704,   498,   501,   717,
     712,   498,   497,   378,   497,   498,   501,   758,   759,   826,
     327,   684,   684,   445,   820,   747,   498,   501,    75,   537,
     537,   273,   438,   817,   562,   588,   591,   835,   569,   747,
     272,   568,    38,   592,   595,   820,   189,   831,   440,   517,
     492,   427,   626,   825,   848,   573,   891,   497,   817,   636,
     581,   551,    69,   290,    69,   845,   498,   498,    56,   651,
     710,   707,   497,   498,   826,   661,   819,   713,   714,   498,
     780,   497,   780,   677,   501,    38,   747,   440,   662,   662,
     636,   498,   711,   533,   831,   538,   831,   538,   376,   595,
     498,   501,   486,   498,   189,   248,   604,   497,   564,   747,
     427,    38,   497,   891,   573,   893,   290,   290,   497,   848,
     779,   329,   358,   764,   712,   498,   501,   498,   498,   498,
     676,   498,   759,   761,   360,   537,   655,   655,   541,   604,
     591,   563,   270,   575,   564,   172,   305,   382,   287,   570,
     571,   597,   553,   636,   542,   711,    50,    99,   429,   747,
     765,   766,   765,   498,   498,     9,   343,   667,   498,   664,
     538,   656,   656,   711,   571,   202,   122,   438,   287,   597,
     287,   570,   498,   891,   498,   766,   357,   165,   315,   165,
     315,   498,   497,   655,   562,    60,   270,   349,   376,   566,
     566,   848,    35,     9,   656,    23,   117,   277,   711,   766,
     498
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 468 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 484 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 496 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 539 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 117:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 118:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 119:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 120:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 121:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 122:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 123:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 124:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 125:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 126:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 127:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 128:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 129:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 130:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 131:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 132:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 133:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 134:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 135:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 136:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 137:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 138:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 139:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 140:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 141:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 142:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 143:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 144:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 145:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 146:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 147:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 149:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 150:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 151:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 152:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 153:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 154:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 155:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 156:
#line 254 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 157:
#line 255 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 158:
#line 261 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 159:
#line 8 "third_party/libpg_query/grammar/statements/create_type.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 15 "third_party/libpg_query/grammar/statements/create_type.y"
    {
					PGCreateAliasStmt *n = makeNode(PGCreateAliasStmt);
					n->typeName = (yyvsp[(6) - (6)].typnam);
					n->aliasname = (yyvsp[(3) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 161:
#line 24 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 162:
#line 25 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = NIL; ;}
    break;

  case 163:
#line 29 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 164:
#line 31 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 165:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 170:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 171:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 172:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 173:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 174:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 175:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 176:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 177:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 178:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 179:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 180:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 181:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 182:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 183:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 184:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 185:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 186:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 187:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 188:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 190:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 193:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 195:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 196:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 197:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 198:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 200:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 201:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 202:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 203:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 204:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 205:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 206:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 207:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 211:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 212:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 213:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 214:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 215:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 216:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 217:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 218:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 219:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 220:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 221:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 222:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 223:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 224:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 225:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 226:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 227:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 228:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 229:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 230:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 231:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 232:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 233:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 234:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 235:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 236:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 237:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 238:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 239:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 245:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 246:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 247:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 248:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 249:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 250:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 251:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 252:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 253:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 254:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 255:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 256:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 257:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 258:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 259:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 260:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 261:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 262:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 263:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 264:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 265:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 266:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 267:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 268:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 269:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 270:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 271:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 272:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 273:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 274:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 275:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 276:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 277:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 278:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 279:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 280:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 281:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 282:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 283:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 284:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 285:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 286:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 287:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 288:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 289:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 291:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 292:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 293:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 294:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 295:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 296:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 297:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 298:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 299:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 300:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 301:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 302:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 303:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 304:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 305:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 308:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 309:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 310:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 311:
#line 450 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 312:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 313:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 314:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 315:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 316:
#line 469 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 317:
#line 473 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 318:
#line 479 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 319:
#line 483 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 320:
#line 487 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 321:
#line 492 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 322:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 323:
#line 500 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 324:
#line 504 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 325:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 326:
#line 509 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 327:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 328:
#line 517 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 329:
#line 528 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 330:
#line 542 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 331:
#line 555 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 332:
#line 570 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 333:
#line 583 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 334:
#line 598 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 335:
#line 620 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 336:
#line 624 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 337:
#line 631 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 338:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 339:
#line 643 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 340:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 341:
#line 655 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 342:
#line 664 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 343:
#line 665 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 344:
#line 666 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 345:
#line 667 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 346:
#line 669 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 347:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 348:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 349:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 350:
#line 688 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 351:
#line 689 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 352:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 353:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 354:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 355:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 356:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 357:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 358:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 359:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 360:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 361:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 362:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 363:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 364:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; ;}
    break;

  case 365:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 366:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 367:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 368:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 369:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 370:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 371:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 372:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 373:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 374:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 375:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 376:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 377:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 378:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 379:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 380:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 381:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 382:
#line 119 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 383:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 384:
#line 125 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 385:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 386:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 387:
#line 132 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 388:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 389:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 390:
#line 139 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 391:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 392:
#line 143 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 393:
#line 9 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (8)].ival);
				n->name = (yyvsp[(4) - (8)].range);
				n->params = (yyvsp[(5) - (8)].list);
				n->function = NULL;
				n->query = (yyvsp[(8) - (8)].node);
				(yyval.node) = (PGNode *)n;
				
			;}
    break;

  case 394:
#line 21 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (7)].ival);
				n->name = (yyvsp[(4) - (7)].range);
				n->params = (yyvsp[(5) - (7)].list);
				n->function = (yyvsp[(7) - (7)].node);
				n->query = NULL;
				(yyval.node) = (PGNode *)n;
                         ;}
    break;

  case 397:
#line 42 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 398:
#line 46 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 399:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 400:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 401:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 402:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 403:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 404:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 405:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 406:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 407:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 408:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 409:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 410:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 411:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 412:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 413:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 414:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 415:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 416:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 417:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 418:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 419:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 420:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 421:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 422:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 423:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 424:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 425:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 426:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 427:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 428:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 429:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 430:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 431:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 432:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 433:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 434:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 435:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 436:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 437:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 438:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 439:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 440:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 441:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 442:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 443:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 444:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 445:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 446:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 447:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 450:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 451:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 452:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 453:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 454:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 455:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 456:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 457:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 458:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 459:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 460:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 461:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 462:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 463:
#line 174 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (11)].list);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 464:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 465:
#line 190 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 466:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 467:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 468:
#line 217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 469:
#line 234 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 470:
#line 241 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 471:
#line 248 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 472:
#line 257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 473:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 474:
#line 262 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 475:
#line 274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 476:
#line 284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 477:
#line 293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 478:
#line 298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 479:
#line 303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 480:
#line 308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 481:
#line 313 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 482:
#line 321 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 483:
#line 329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 484:
#line 334 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 485:
#line 339 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 486:
#line 345 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 487:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 488:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 489:
#line 351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 490:
#line 352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 491:
#line 359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 492:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 493:
#line 364 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 494:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 495:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 496:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 497:
#line 371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 498:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 499:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 500:
#line 380 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 501:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 502:
#line 392 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 503:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 504:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 505:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 506:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 507:
#line 428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 508:
#line 429 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 509:
#line 430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 510:
#line 433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 511:
#line 434 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 512:
#line 435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 513:
#line 439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 514:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 515:
#line 441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 516:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 517:
#line 446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 518:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 519:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 520:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 521:
#line 470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 522:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 523:
#line 477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 524:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 525:
#line 488 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 526:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 527:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 528:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 529:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 530:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 531:
#line 515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 532:
#line 519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 533:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 534:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 535:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 536:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 537:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 538:
#line 544 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 539:
#line 551 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 540:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 541:
#line 558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 542:
#line 563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 543:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 544:
#line 568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 545:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 546:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 547:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 548:
#line 579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 549:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 550:
#line 603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 551:
#line 605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 552:
#line 607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 553:
#line 611 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 554:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 555:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 556:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 557:
#line 620 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 558:
#line 621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 559:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 560:
#line 648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 561:
#line 653 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 562:
#line 657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 563:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 564:
#line 662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 565:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 566:
#line 667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 567:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 568:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 569:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 570:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 571:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 572:
#line 680 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 573:
#line 693 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 574:
#line 700 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 575:
#line 707 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 576:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 577:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 578:
#line 718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 579:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 580:
#line 723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 581:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 582:
#line 728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 583:
#line 729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 584:
#line 733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 585:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 586:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 587:
#line 739 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 588:
#line 744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 589:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 590:
#line 755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 591:
#line 756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 592:
#line 757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 593:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 594:
#line 762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 595:
#line 767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 596:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 597:
#line 769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 598:
#line 779 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 785 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 600:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 601:
#line 794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (2)].node); ;}
    break;

  case 602:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 603:
#line 808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 605:
#line 813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 606:
#line 817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 607:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 608:
#line 825 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 609:
#line 831 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 610:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 611:
#line 847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 613:
#line 865 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 614:
#line 869 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 615:
#line 895 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 616:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 617:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 618:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 619:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 620:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 621:
#line 969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 622:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 623:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 624:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 625:
#line 992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 626:
#line 993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 627:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 628:
#line 1006 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 629:
#line 1010 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 630:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 631:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 632:
#line 1027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 633:
#line 1028 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 634:
#line 1029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 635:
#line 1030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 636:
#line 1034 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 637:
#line 1035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 638:
#line 1047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 639:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 640:
#line 1054 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 641:
#line 1061 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 642:
#line 1068 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 643:
#line 1075 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 644:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 645:
#line 1118 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 646:
#line 1131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 647:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 648:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 649:
#line 1139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 650:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 651:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 652:
#line 1144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 653:
#line 1149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 654:
#line 1150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 655:
#line 1156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 656:
#line 1160 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 657:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 658:
#line 1187 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 659:
#line 1194 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 660:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 661:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 664:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 665:
#line 1222 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 666:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 667:
#line 1234 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 668:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 669:
#line 1245 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 670:
#line 1250 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 671:
#line 1256 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 672:
#line 1266 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 673:
#line 1268 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 674:
#line 1270 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 675:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 676:
#line 1275 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 677:
#line 1276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 678:
#line 1277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 679:
#line 1278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 680:
#line 1280 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 681:
#line 1285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 682:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 683:
#line 1305 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 684:
#line 1306 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 685:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 686:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 687:
#line 1332 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 688:
#line 1333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 689:
#line 1340 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 690:
#line 1345 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 691:
#line 1350 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 692:
#line 1355 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 693:
#line 1360 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 694:
#line 1365 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 695:
#line 1370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 696:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 697:
#line 1381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 698:
#line 1387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 699:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 700:
#line 1400 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 701:
#line 1421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 702:
#line 1431 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 703:
#line 1435 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 704:
#line 1443 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 705:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 706:
#line 1455 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 707:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 708:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 709:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 710:
#line 1498 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 711:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 712:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 713:
#line 1523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 714:
#line 1533 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 715:
#line 1535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 716:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 717:
#line 1539 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 718:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 719:
#line 1543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 720:
#line 1547 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 721:
#line 1548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 722:
#line 1556 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 723:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 724:
#line 1573 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 725:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 726:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 727:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 728:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 729:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 746:
#line 1631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 747:
#line 1633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 748:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 749:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 750:
#line 1639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 751:
#line 1641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 752:
#line 1643 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 753:
#line 1645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 754:
#line 1647 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 755:
#line 1652 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 756:
#line 1657 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 757:
#line 1663 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 758:
#line 1670 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 759:
#line 1675 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 760:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 761:
#line 1686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 762:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 763:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 764:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 765:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 766:
#line 1745 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 767:
#line 1747 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 768:
#line 1749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 769:
#line 1751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 770:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 771:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 772:
#line 1757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 773:
#line 1759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 774:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 775:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 776:
#line 1765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 777:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 778:
#line 1769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 779:
#line 1771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 780:
#line 1773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 781:
#line 1776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 782:
#line 1778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 783:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 784:
#line 1783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 785:
#line 1785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 786:
#line 1787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 787:
#line 1789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 788:
#line 1792 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 789:
#line 1797 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 790:
#line 1802 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 791:
#line 1809 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 792:
#line 1814 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 793:
#line 1821 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 794:
#line 1826 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 795:
#line 1833 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 796:
#line 1838 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 797:
#line 1846 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 798:
#line 1854 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 799:
#line 1862 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 800:
#line 1870 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 801:
#line 1888 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 802:
#line 1896 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 803:
#line 1904 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 804:
#line 1912 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 805:
#line 1920 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 806:
#line 1927 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 807:
#line 1931 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 808:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 809:
#line 1940 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->lhs = (yyvsp[(1) - (3)].node);
				n->rhs = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 810:
#line 1948 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 811:
#line 1964 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 812:
#line 1972 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 813:
#line 1980 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 814:
#line 1988 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 815:
#line 1996 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 816:
#line 2004 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 817:
#line 2012 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 818:
#line 2016 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 819:
#line 2020 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 820:
#line 2024 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 821:
#line 2028 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 822:
#line 2036 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 823:
#line 2044 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 824:
#line 2052 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 825:
#line 2060 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 826:
#line 2080 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 827:
#line 2102 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 828:
#line 2113 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 829:
#line 2120 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 830:
#line 2133 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 831:
#line 2150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 832:
#line 2152 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 833:
#line 2154 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 834:
#line 2156 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 835:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 836:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 837:
#line 2162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 838:
#line 2164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 839:
#line 2166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 840:
#line 2168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 841:
#line 2170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 842:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 843:
#line 2174 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 844:
#line 2176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 845:
#line 2178 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 846:
#line 2180 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 847:
#line 2182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 848:
#line 2184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 849:
#line 2186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 850:
#line 2188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 851:
#line 2190 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 852:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 853:
#line 2198 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 854:
#line 2202 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 855:
#line 2215 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 856:
#line 2216 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 857:
#line 2218 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 858:
#line 2225 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 859:
#line 2237 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 860:
#line 2252 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 861:
#line 2264 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 862:
#line 2266 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 863:
#line 2278 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 864:
#line 2289 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 865:
#line 2313 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 866:
#line 2324 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 867:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 868:
#line 2337 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 869:
#line 2344 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 870:
#line 2352 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 871:
#line 2360 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 872:
#line 2371 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 873:
#line 2379 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 874:
#line 2407 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (5)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (5)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						n->agg_order = (yyvsp[(2) - (5)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (5)].node);
					n->export_state = (yyvsp[(4) - (5)].boolean);
					n->over = (yyvsp[(5) - (5)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 875:
#line 2443 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 876:
#line 2453 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 877:
#line 2454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 878:
#line 2462 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 879:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 880:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 881:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 882:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 883:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 884:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 885:
#line 2492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 886:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 887:
#line 2500 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 888:
#line 2504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 889:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 890:
#line 2512 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 891:
#line 2516 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 892:
#line 2520 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 893:
#line 2524 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 894:
#line 2528 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 895:
#line 2530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 896:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 897:
#line 2536 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 898:
#line 2545 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 899:
#line 2550 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 900:
#line 2557 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 901:
#line 2572 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 902:
#line 2579 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 903:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 904:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 905:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 906:
#line 2595 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 907:
#line 2608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 908:
#line 2609 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 909:
#line 2613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 910:
#line 2614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 911:
#line 2618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 912:
#line 2619 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 913:
#line 2626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 914:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 915:
#line 2631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 916:
#line 2633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 917:
#line 2638 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 918:
#line 2646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 919:
#line 2648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 920:
#line 2661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 921:
#line 2666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 922:
#line 2691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 923:
#line 2692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 924:
#line 2695 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 925:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 926:
#line 2708 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 927:
#line 2714 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 928:
#line 2720 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 929:
#line 2730 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 930:
#line 2747 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 931:
#line 2792 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 932:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 933:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 934:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 935:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 936:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 937:
#line 2845 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 938:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 939:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 940:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 941:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 942:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 943:
#line 2868 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 944:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 945:
#line 2873 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 946:
#line 2874 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 947:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 948:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 949:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 950:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 951:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 952:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 953:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 954:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 955:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 956:
#line 2888 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "**"; ;}
    break;

  case 957:
#line 2889 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 958:
#line 2890 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 959:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 960:
#line 2892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 961:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 962:
#line 2894 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 963:
#line 2898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 964:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 965:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 966:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 967:
#line 2912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 968:
#line 2914 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 969:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 970:
#line 2918 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 971:
#line 2920 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 972:
#line 2922 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 973:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 974:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 975:
#line 2940 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 976:
#line 2942 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 977:
#line 2946 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 978:
#line 2950 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 979:
#line 2957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 980:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (2)].list);
				;}
    break;

  case 981:
#line 2980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 982:
#line 2984 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 983:
#line 2993 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 984:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 985:
#line 3003 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 986:
#line 3007 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 987:
#line 3016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 988:
#line 3026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 989:
#line 3027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 990:
#line 3032 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 991:
#line 3035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 992:
#line 3042 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 993:
#line 3043 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 994:
#line 3044 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 995:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 996:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 997:
#line 3047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 998:
#line 3048 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 999:
#line 3049 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 1000:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 1001:
#line 3051 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1002:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 1003:
#line 3066 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1004:
#line 3073 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1005:
#line 3079 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1006:
#line 3080 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1007:
#line 3097 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1008:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 1009:
#line 3106 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1010:
#line 3110 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 1011:
#line 3125 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1012:
#line 3129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1013:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1014:
#line 3136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1015:
#line 3139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1016:
#line 3140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1017:
#line 3141 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1018:
#line 3145 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1019:
#line 3151 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 1020:
#line 3162 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 1021:
#line 3175 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1022:
#line 3176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1023:
#line 3181 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 1024:
#line 3191 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1025:
#line 3192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1026:
#line 3195 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1027:
#line 3196 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1028:
#line 3200 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 1029:
#line 3204 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 1030:
#line 3211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 1031:
#line 3215 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1032:
#line 3223 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1033:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1034:
#line 3234 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1035:
#line 3238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1036:
#line 3239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1037:
#line 3243 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1038:
#line 3244 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1041:
#line 3258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1042:
#line 3259 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1043:
#line 3263 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1044:
#line 3264 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1045:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1046:
#line 3269 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1047:
#line 3273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1048:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1049:
#line 3297 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1050:
#line 3305 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1051:
#line 3320 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1052:
#line 3337 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1053:
#line 3338 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1054:
#line 3341 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1055:
#line 3342 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1056:
#line 3345 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1057:
#line 3349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1058:
#line 3350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1059:
#line 3354 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1060:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1061:
#line 3358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1062:
#line 3359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1063:
#line 3360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1064:
#line 3370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1065:
#line 3371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1066:
#line 3383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1067:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1068:
#line 3414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1069:
#line 3416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1070:
#line 3421 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1071:
#line 3422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1072:
#line 3425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1073:
#line 3427 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1074:
#line 3438 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1075:
#line 3441 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1076:
#line 3452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1077:
#line 3456 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1078:
#line 3460 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1079:
#line 3472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1080:
#line 3476 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1081:
#line 3485 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1082:
#line 3492 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1083:
#line 3530 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1084:
#line 3534 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1085:
#line 3538 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1086:
#line 3542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1087:
#line 3546 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1088:
#line 3550 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1089:
#line 3554 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1090:
#line 3559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1091:
#line 3560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1092:
#line 3576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1093:
#line 3577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1094:
#line 3578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1095:
#line 3581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1096:
#line 3582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1097:
#line 3588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1098:
#line 3589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1099:
#line 3590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1100:
#line 3593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1101:
#line 3594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1102:
#line 3595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1103:
#line 3598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1104:
#line 3599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1105:
#line 3600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1106:
#line 3603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1107:
#line 3604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1108:
#line 3608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1109:
#line 3610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1110:
#line 3614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1111:
#line 3615 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1113:
#line 3626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1114:
#line 3627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1115:
#line 3628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1116:
#line 3629 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1117:
#line 3632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1118:
#line 3633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1119:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1120:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1121:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1126:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1127:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1128:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1129:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1134:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1135:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1136:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1137:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1138:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1139:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1140:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1141:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1142:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1143:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1144:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1145:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1146:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1147:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1148:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1149:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1150:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1151:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1152:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1153:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1154:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1155:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1156:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1157:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1158:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1159:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1160:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1161:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1162:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1163:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1164:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1165:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1171:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1172:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1173:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1174:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1175:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1176:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1177:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1178:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1179:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1180:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1181:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1182:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1183:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1184:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1185:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1186:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1187:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1188:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1189:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1190:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1191:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1192:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1193:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1194:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1195:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1196:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1197:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1198:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1199:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1200:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1201:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1202:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1203:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1204:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1205:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1206:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1207:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1208:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1209:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1210:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					n->load_type = PG_LOAD_TYPE_LOAD;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1211:
#line 14 "third_party/libpg_query/grammar/statements/load.y"
    {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[(2) - (2)].str);
                    n->load_type = PG_LOAD_TYPE_INSTALL;
                    (yyval.node) = (PGNode *)n;
				;}
    break;

  case 1212:
#line 20 "third_party/libpg_query/grammar/statements/load.y"
    {
                      PGLoadStmt *n = makeNode(PGLoadStmt);
                      n->filename = (yyvsp[(3) - (3)].str);
                      n->load_type = PG_LOAD_TYPE_FORCE_INSTALL;
                      (yyval.node) = (PGNode *)n;
                ;}
    break;

  case 1213:
#line 28 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1214:
#line 29 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1215:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1216:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1217:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1218:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1219:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1220:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1221:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1222:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1223:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1224:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1225:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1226:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1227:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1228:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1229:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1230:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1231:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1232:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1233:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1234:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1235:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1236:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1237:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1238:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1239:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1240:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1241:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1242:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1243:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1244:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1245:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1246:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1247:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1248:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1249:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1250:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1251:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1252:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1253:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1254:
#line 53 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1257:
#line 63 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1258:
#line 65 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1259:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1260:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1261:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1262:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1263:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1264:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1265:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1266:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1267:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1268:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1269:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1270:
#line 38 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(8) - (9)].node);
					ctas->into = (yyvsp[(6) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(6) - (9)].into)->rel->relpersistence = (yyvsp[(4) - (9)].ival);
					(yyvsp[(6) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1271:
#line 54 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1272:
#line 55 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1273:
#line 56 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1274:
#line 62 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 25219 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 83 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

